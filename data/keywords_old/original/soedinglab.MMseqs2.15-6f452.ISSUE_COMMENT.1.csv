id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:141,Performance,Load,Loading,141,"I'm not sure if this is the same problem or a different one, but I'm getting a similar error when using a different taxonomy database:. ```; Loading NCBI taxonomy...; Computing LCA...; Segmentation fault; Error: Lca died; ```. The database creation was (using version 8.fac81):. ```; ## downloading uniclust db; wget http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust50_2018_08.tar.gz; uncomp uniclust50_2018_08.tar.gz; mv uniclust50_2018_08/uniclust50_2018_08_consensus.fasta . ## creating seq db; mmseqs createdb --dbtype 1 uniclust50_2018_08_consensus.fasta uniclust50_2018_08_consensus. ## creating tax db; mmseqs createtaxdb uniclust50_2018_08_consensus tmp; ```. The taxonomy classify command (using version 8.fac81):. ```; mmseqs taxonomy -e 1e-5 --max-seqs 200 --lca-ranks ""kingdom:phylum:class:order:family:genus:species"" --threads 24 clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus clusters_rep-seqs.part-14_tax_db tmp_part-14; ```. The run log w/ error:. ```; Program call:; taxonomy -e 1e-5 --max-seqs 200 --lca-ranks kingdom:phylum:class:order:family:genus:species --threads 24 clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus clusters_rep-seqs.part-14_tax_db tmp_part-14. MMseqs Version: 	8.fac81; Substitution Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Compressed 	0; Verbosity 	3; Seed Substitution Matrix 	VTML80.out; Sensitivity 	5.7; K-mer size ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943
https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:2432,Performance,perform,performs,2432,"ignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Compressed 	0; Verbosity 	3; Seed Substitution Matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. results per query 	200; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Mask lower case residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Force restart using the latest tmp 	false; Remove Temporary Files 	false; LCA Ranks 	kingdom:phylum:class:order:family:genus:species; Blacklisted Taxa 	12908,28384; LCA Mode 	3;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943
https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:4029,Performance,load,load-mode,4029,"Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Force restart using the latest tmp 	false; Remove Temporary Files 	false; LCA Ranks 	kingdom:phylum:class:order:family:genus:species; Blacklisted Taxa 	12908,28384; LCA Mode 	3; Match sequences by their ID 	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; search clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp_part-14/8093924424180559474/first tmp_part-14/8093924424180559474/tmp_hsp1 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3 --seed-sub-mat VTML80.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seqs 200 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --spaced-kmer-mode 1 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --mask-profile 1 --e-profile 0.001 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --omit-consensus 0 --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --chain-alignments 0 --search-type 0 --num-iterations 1 --start-sens 4 --se",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943
https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:5614,Performance,load,load-mode,5614,"nment 0 --mask-profile 1 --e-profile 0.001 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --omit-consensus 0 --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --chain-alignments 0 --search-type 0 --num-iterations 1 --start-sens 4 --sens-steps 1 --slice-search 0 --strand 1 --disk-space-limit 0 --force-reuse 0 --remove-tmp-files 0. Program call:; prefilter clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp_part-14/8093924424180559474/tmp_hsp1/12507882511714639255/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 200 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.7. Initialising data structures...; Using 24 threads.; Substitution matrices...; Substitution matrices...; Could not find precomputed index. Compute index.; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus ... Done.; Use kmer size 7 and split 1 using Target split mode.; Needed memory (83288349429 byte) of total memory (973956888576 byte); Target database: /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus(Size: 22555708); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0h 0m 14s 497ms; Query database: clusters_rep-seqs_db_14_30(size=40624); Process prefiltering step 1 of 1. Index table k-mer threshold: 122; Index table:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943
https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:13776,Performance,load,load-mode,13776,: 0; Empty list: 348429986. Time for index table init: 0h 5m 53s 443ms; k-mer similarity threshold: 122; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 40624; Target db start 1 to 22555708; ....; 2740 k-mers per position.; 1152092 DB matches per sequence.; 0 Overflows.; 199 sequences passed prefiltering per query sequence.; Median result list size: 200; 1 sequences with 0 size result lists. Time for prefiltering scores calculation: 0h 3m 25s 795ms; Time for merging files: 0h 0m 0s 53ms; Time for processing: 0h 9m 40s 316ms; Program call:; align clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp_part-14/8093924424180559474/tmp_hsp1/12507882511714639255/pref_0 tmp_part-14/8093924424180559474/first --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3. Init data structures...; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus ... Done.; Compute score and coverage.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; ....Time for merging files: 0h 0m 0s 44ms. All sequences processed. 8113542 alignments calculated.; 2760008 sequence pairs passed the thresholds (0.340173 of overall calculated).; 67.9403 hits per query sequence.; Time for processing: 0h 0m 25s 268ms; Program call:; filterdb tmp_part-14/8093924424180559474/first tmp_part-14/8093924424180559474/top1 --extract-lines 1. Filtering by extracting the first 1 lines.; ....Time for merging files: 0h 0m 0s 198ms; Time for processing: 0h 0m 1s 251m,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943
https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:16282,Performance,load,load-mode,16282,_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus ... Done.; Alignment database: tmp_part-14/8093924424180559474/top1; Start writing file to tmp_part-14/8093924424180559474/aligned; ....Time for merging files: 0h 0m 0s 186ms; Time for processing: 0h 0m 3s 851ms; Program call:; createsubdb tmp_part-14/8093924424180559474/aligned tmp_part-14/8093924424180559474/first tmp_part-14/8093924424180559474/first_sub. Start writing to database tmp_part-14/8093924424180559474/first_sub; Time for merging files: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 279ms; Program call:; align tmp_part-14/8093924424180559474/aligned /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp_part-14/8093924424180559474/first_sub tmp_part-14/8093924424180559474/round2 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3. Init data structures...; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus ... Done.; Compute score and coverage.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; ...Time for merging files: 0h 0m 0s 78ms. All sequences processed. 2760008 alignments calculated.; 2676553 sequence pairs passed the thresholds (0.969763 of overall calculated).; 84.362 hits per query sequence.; Time for processing: 0h 0m 15s 472ms; Program call:; mergedbs tmp_part-14/8093924424180559474/top1 tmp_part-14/8093924424180559474/merged tmp_part-14/8093924424180559474/top1 tmp_part-14/8093924424180559474/round2. Merging the results to tmp_part-14/8093924424180559474/merged; Do,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943
https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:17857,Performance,Load,Loading,17857,"_part-14/8093924424180559474/round2 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3. Init data structures...; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus ... Done.; Compute score and coverage.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; ...Time for merging files: 0h 0m 0s 78ms. All sequences processed. 2760008 alignments calculated.; 2676553 sequence pairs passed the thresholds (0.969763 of overall calculated).; 84.362 hits per query sequence.; Time for processing: 0h 0m 15s 472ms; Program call:; mergedbs tmp_part-14/8093924424180559474/top1 tmp_part-14/8093924424180559474/merged tmp_part-14/8093924424180559474/top1 tmp_part-14/8093924424180559474/round2. Merging the results to tmp_part-14/8093924424180559474/merged; Done; Time for merging files: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 354ms; Program call:; filterdb tmp_part-14/8093924424180559474/merged tmp_part-14/8093924424180559474/2b_ali --beats-first --filter-column 4 --comparison-operator le. Filter by numerical comparison to first row.; ....Time for merging files: 0h 0m 0s 229ms; Time for processing: 0h 0m 0s 732ms; Program call:; lca /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp_part-14/8093924424180559474/2b_ali clusters_rep-seqs.part-14_tax_db --compressed 0 --lca-ranks kingdom:phylum:class:order:family:genus:species --blacklist 12908,28384 --threads 24 -v 3. Loading NCBI taxonomy...; Computing LCA...; Segmentation fault; Error: Lca died; ```. I'm going to try this again with Release 8.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943
https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:1043,Testability,log,log,1043," different one, but I'm getting a similar error when using a different taxonomy database:. ```; Loading NCBI taxonomy...; Computing LCA...; Segmentation fault; Error: Lca died; ```. The database creation was (using version 8.fac81):. ```; ## downloading uniclust db; wget http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust50_2018_08.tar.gz; uncomp uniclust50_2018_08.tar.gz; mv uniclust50_2018_08/uniclust50_2018_08_consensus.fasta . ## creating seq db; mmseqs createdb --dbtype 1 uniclust50_2018_08_consensus.fasta uniclust50_2018_08_consensus. ## creating tax db; mmseqs createtaxdb uniclust50_2018_08_consensus tmp; ```. The taxonomy classify command (using version 8.fac81):. ```; mmseqs taxonomy -e 1e-5 --max-seqs 200 --lca-ranks ""kingdom:phylum:class:order:family:genus:species"" --threads 24 clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus clusters_rep-seqs.part-14_tax_db tmp_part-14; ```. The run log w/ error:. ```; Program call:; taxonomy -e 1e-5 --max-seqs 200 --lca-ranks kingdom:phylum:class:order:family:genus:species --threads 24 clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus clusters_rep-seqs.part-14_tax_db tmp_part-14. MMseqs Version: 	8.fac81; Substitution Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Compressed 	0; Verbosity 	3; Seed Substitution Matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; M",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943
https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516198421:70,Availability,fault,fault,70,Could you please try the newest commit? Milot fixed some segmentation fault in the lca module https://github.com/soedinglab/MMseqs2/issues/212 but the fix is only in the master branch.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516198421
https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516404117:227,Availability,error,error,227,"Trying the newest commit fixed the issue! Thanks!. However, I now have an issue with batching `mmseqs taxonomy` and then merging the resulting taxonomy database. I previously used `mmseqs mergedbs`, but now I get the following error: . ```; Input database ""/tmp/global2/nyoungblut/LLMGAG_27929269397/taxonomy/clusters_rep-seqs.part-19_tax_db"" is wrong!; Current input: Taxonomy. Allowed input: Unknown, Index, Nucleotide, Profile, Aminoacid, Alignment, Prefilter, Bi-directional prefilter, Clustering, Offsetted headers, Generic; ```. I don't see any subcommand for merging taxonomy databases. How do I merge taxonomy databases with the most recent version of mmseqs?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516404117
https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-516455736:181,Availability,down,downloading,181,"Just to better clarify why I want to inspect the taxonomy database created by `mmseqs createtaxdb`:. The docs state that `mmseqs createtaxdb` will automatically create the taxDB by downloading NCBI taxdump and getting uniprot taxID mapping. It seems to do this and then state ""Database created"", but I don't know if any of my sequences were actually mapped to any taxonomy info. All my sequences should just be uniprot IDs; for example:. ```; >A0A1Q6BRU5; MAKITVFSPVKNFSGVSVGITFSHGVGVVEEGSAAHKYFQRRGYAFSLEEDRASQSPGASQDLPEGGKTAEKEGASTPPDIDIPGMPGAKALRSEWIAFAESLGIETESLTIPQIRERIIVEHLNAPNV; >A0A2V1A9G4; MSSRNQFRKNIGSVGPFGEPFLNGVPGFGENFTIPFALCDKDEYLLWLFHFIGQLRTQYGENVARYVVEYINGNDVQQIMIRNLASSVIYSTLGYGVCMVYNQKYCDTALGPMDCFRKFHQNFCKYKLEDLEEWFSNWAVVMTKLRAEGEIEAYEFSQELNGFTDEELELMDNMQYGLYDKKELIRRYLQGSGSDVIDLSKRAYDVNSKHGQPPLHKKAIDGSWFLSKPLSEAVGPE; >A0A0A9U2E6; MLDALSIFSKVSLGLVVVREPLGRSLSLSLVAALPIALQHGSEWCRMALAQTRMLS; ```. but I don't know `mmseqs createtaxdb` is actually parsing these UniProt IDs correctly and mapping them to taxonomy info.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-516455736
https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-516466642:192,Performance,perform,performs,192,"Yes, if the `_mapping` file is empty than it could not map any identifier. It can handle the mapping of Uniprot sequences automatically. Deprecated identifier can not be mapped. `createtaxdb` performs the following code to retrieves the mmseqs identifiers to tax. id mapping. . URL=""ftp://ftp.expasy.org/databases/uniprot/current_release/knowledgebase/idmapping/idmapping.dat.gz""; wget -nv -O - ""$URL"" | zcat | awk '$2 == ""NCBI_TaxID"" {print $1""\t""$3 }' > taxidmapping; awk 'NR == FNR { f[$1] = $2; next } $2 in f { print $1""\t""f[$2] }' taxidmapping DB.lookup > DB_mapping. It would make sense if createtaxdb would print statistics.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-516466642
https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-537485900:1532,Availability,down,downloaded,1532,"Hello! . I wanted to use also the taxonomy database, but I think in a similar situation to the one described here: ; ```; -rw-r--r-- 1 aauladell bio 0 2 oct 14:46 DB_mapping; -rw-r--r-- 1 aauladell bio 3,8M 10 set 15:25 delnodes.dmp; -rw-r--r-- 1 aauladell bio 991K 10 set 15:25 merged.dmp; -rw-r--r-- 1 aauladell bio 175M 10 set 15:25 names.dmp; -rw-r--r-- 1 aauladell bio 139M 10 set 15:25 nodes.dmp; -rw-r--r-- 1 aauladell bio 0 10 set 19:38 targetDB_mapping; -rw-r--r-- 1 aauladell bio 0 10 set 19:43 targetDB_mapping.complete; -rw-r--r-- 1 aauladell bio 2,8G 2 oct 13:33 taxidmapping; -rw-r--r-- 1 aauladell bio 43G 9 set 18:15 uniref90.fasta; -rw-r--r-- 1 aauladell bio 32G 10 set 15:17 unirefDB; -rw-r--r-- 1 aauladell bio 4 10 set 15:18 unirefDB.dbtype; -rw-r--r-- 1 aauladell bio 3,8M 10 set 19:43 unirefDB_delnodes.dmp; -rw-r--r-- 1 aauladell bio 12G 10 set 15:12 unirefDB_h; -rw-r--r-- 1 aauladell bio 4 10 set 15:13 unirefDB_h.dbtype; -rw-r--r-- 1 aauladell bio 2,3G 10 set 15:19 unirefDB_h.index; -rw-r--r-- 1 aauladell bio 2,3G 10 set 15:18 unirefDB.index; -rw-r--r-- 1 aauladell bio 2,9G 10 set 15:23 unirefDB.lookup; -rw-r--r-- 1 aauladell bio 0 2 oct 14:47 unirefDB_mapping; -rw-r--r-- 1 aauladell bio 991K 10 set 19:43 unirefDB_merged.dmp; -rw-r--r-- 1 aauladell bio 175M 10 set 19:43 unirefDB_names.dmp; -rw-r--r-- 1 aauladell bio 139M 10 set 19:43 unirefDB_nodes.dmp; ```. My `_mapping` files are empty. . I tried to use the awk code you posted below but it didn't work. My opinion is that it is maybe I haven't downloaded the proper uniprot? In my case I downloaded `uniref90.fasta` . Maybe in the wiki page the example could be started with the specific ftp for uniprot, I don't know. . mmseqs2 version 15c7762",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-537485900
https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-537485900:1576,Availability,down,downloaded,1576,"Hello! . I wanted to use also the taxonomy database, but I think in a similar situation to the one described here: ; ```; -rw-r--r-- 1 aauladell bio 0 2 oct 14:46 DB_mapping; -rw-r--r-- 1 aauladell bio 3,8M 10 set 15:25 delnodes.dmp; -rw-r--r-- 1 aauladell bio 991K 10 set 15:25 merged.dmp; -rw-r--r-- 1 aauladell bio 175M 10 set 15:25 names.dmp; -rw-r--r-- 1 aauladell bio 139M 10 set 15:25 nodes.dmp; -rw-r--r-- 1 aauladell bio 0 10 set 19:38 targetDB_mapping; -rw-r--r-- 1 aauladell bio 0 10 set 19:43 targetDB_mapping.complete; -rw-r--r-- 1 aauladell bio 2,8G 2 oct 13:33 taxidmapping; -rw-r--r-- 1 aauladell bio 43G 9 set 18:15 uniref90.fasta; -rw-r--r-- 1 aauladell bio 32G 10 set 15:17 unirefDB; -rw-r--r-- 1 aauladell bio 4 10 set 15:18 unirefDB.dbtype; -rw-r--r-- 1 aauladell bio 3,8M 10 set 19:43 unirefDB_delnodes.dmp; -rw-r--r-- 1 aauladell bio 12G 10 set 15:12 unirefDB_h; -rw-r--r-- 1 aauladell bio 4 10 set 15:13 unirefDB_h.dbtype; -rw-r--r-- 1 aauladell bio 2,3G 10 set 15:19 unirefDB_h.index; -rw-r--r-- 1 aauladell bio 2,3G 10 set 15:18 unirefDB.index; -rw-r--r-- 1 aauladell bio 2,9G 10 set 15:23 unirefDB.lookup; -rw-r--r-- 1 aauladell bio 0 2 oct 14:47 unirefDB_mapping; -rw-r--r-- 1 aauladell bio 991K 10 set 19:43 unirefDB_merged.dmp; -rw-r--r-- 1 aauladell bio 175M 10 set 19:43 unirefDB_names.dmp; -rw-r--r-- 1 aauladell bio 139M 10 set 19:43 unirefDB_nodes.dmp; ```. My `_mapping` files are empty. . I tried to use the awk code you posted below but it didn't work. My opinion is that it is maybe I haven't downloaded the proper uniprot? In my case I downloaded `uniref90.fasta` . Maybe in the wiki page the example could be started with the specific ftp for uniprot, I don't know. . mmseqs2 version 15c7762",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-537485900
https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-540474108:78,Availability,down,download,78,"Sorry, but the thing is that it is related to this specific issue. . When you download Uniref90 from the web (https://www.uniprot.org/downloads) the FASTA has the following name structure: . ```; >UniRef90_Q6GZX3 Uncharacterized protein 002L n=26 Tax=Ranavirus TaxID=10492 RepID=002L_FRG3G; MSIIGATRLQNDKSDTYSAGPCYAGGCSAFTPRGTCGKDWDLGEQTCASGFCTSQPLCAR; ```; Due to the `UniRef90` tag I didn't had a `_mapping` file generated. Finally after checking the files I was able to see what was happening, I removed the tag and everything worked out clean.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-540474108
https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-540474108:134,Availability,down,downloads,134,"Sorry, but the thing is that it is related to this specific issue. . When you download Uniref90 from the web (https://www.uniprot.org/downloads) the FASTA has the following name structure: . ```; >UniRef90_Q6GZX3 Uncharacterized protein 002L n=26 Tax=Ranavirus TaxID=10492 RepID=002L_FRG3G; MSIIGATRLQNDKSDTYSAGPCYAGGCSAFTPRGTCGKDWDLGEQTCASGFCTSQPLCAR; ```; Due to the `UniRef90` tag I didn't had a `_mapping` file generated. Finally after checking the files I was able to see what was happening, I removed the tag and everything worked out clean.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-540474108
https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518442291:80,Deployability,integrat,integrate,80,"We currently don't support global alignments. It should be not too difficult to integrate a fast NW implementation as a separate MMseqs2 module. However, since none of us is working with global alignments, this would be a very low priority feature. The `--global-alignment` parameter is really badly named and does something unrelated for normal searches. We really should remove it. Either [opal](https://github.com/Martinsos/opal) or [parasail](https://github.com/jeffdaily/parasail) might serve as the base for the implementation. If you are interested in contributing this feature we could help guide you through.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518442291
https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518442291:80,Integrability,integrat,integrate,80,"We currently don't support global alignments. It should be not too difficult to integrate a fast NW implementation as a separate MMseqs2 module. However, since none of us is working with global alignments, this would be a very low priority feature. The `--global-alignment` parameter is really badly named and does something unrelated for normal searches. We really should remove it. Either [opal](https://github.com/Martinsos/opal) or [parasail](https://github.com/jeffdaily/parasail) might serve as the base for the implementation. If you are interested in contributing this feature we could help guide you through.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518442291
https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518442291:599,Usability,guid,guide,599,"We currently don't support global alignments. It should be not too difficult to integrate a fast NW implementation as a separate MMseqs2 module. However, since none of us is working with global alignments, this would be a very low priority feature. The `--global-alignment` parameter is really badly named and does something unrelated for normal searches. We really should remove it. Either [opal](https://github.com/Martinsos/opal) or [parasail](https://github.com/jeffdaily/parasail) might serve as the base for the implementation. If you are interested in contributing this feature we could help guide you through.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518442291
https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518761178:633,Availability,down,down,633,"@milot-mirdita — Thank you for the reply. . > The --global-alignment parameter is really badly named and does something unrelated for normal searches. We really should remove it. Ah ok, that's good to know. > Either opal or parasail might serve as the base for the implementation. If you are interested in contributing this feature we could help guide you through. Thank you for the references and the offer to assist me in contributing. Currently my language comfortability extends only to Python and Rust, so it'd be a stretch for me at the moment. I don't want to close this issue in the case you want to keep it open to consider down the line, but I consider it addressed. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518761178
https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518761178:475,Modifiability,extend,extends,475,"@milot-mirdita — Thank you for the reply. . > The --global-alignment parameter is really badly named and does something unrelated for normal searches. We really should remove it. Ah ok, that's good to know. > Either opal or parasail might serve as the base for the implementation. If you are interested in contributing this feature we could help guide you through. Thank you for the references and the offer to assist me in contributing. Currently my language comfortability extends only to Python and Rust, so it'd be a stretch for me at the moment. I don't want to close this issue in the case you want to keep it open to consider down the line, but I consider it addressed. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518761178
https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518761178:346,Usability,guid,guide,346,"@milot-mirdita — Thank you for the reply. . > The --global-alignment parameter is really badly named and does something unrelated for normal searches. We really should remove it. Ah ok, that's good to know. > Either opal or parasail might serve as the base for the implementation. If you are interested in contributing this feature we could help guide you through. Thank you for the references and the offer to assist me in contributing. Currently my language comfortability extends only to Python and Rust, so it'd be a stretch for me at the moment. I don't want to close this issue in the case you want to keep it open to consider down the line, but I consider it addressed. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518761178
https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-696168186:220,Security,access,access,220,"@milot-mirdita Hi Milot, how is it going with this topic of global alignment? . My workflow for protein clustering like below:; 1. blastp for local alignment, find similar sequence pairs;; 2. needle for global alignment access similarity for blastp pairs;; 3. mcl to cluster the needle result. According to my experience, only a local alignment could be not enough to have clusters.; I'm not clear about the clustering function in mmseqs2, is it enough to substitute my whole workflow?. Hope to see your comment. Cheers,. **WANG**",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-696168186
https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-696168186:392,Usability,clear,clear,392,"@milot-mirdita Hi Milot, how is it going with this topic of global alignment? . My workflow for protein clustering like below:; 1. blastp for local alignment, find similar sequence pairs;; 2. needle for global alignment access similarity for blastp pairs;; 3. mcl to cluster the needle result. According to my experience, only a local alignment could be not enough to have clusters.; I'm not clear about the clustering function in mmseqs2, is it enough to substitute my whole workflow?. Hope to see your comment. Cheers,. **WANG**",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-696168186
https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-696187082:183,Usability,guid,guiding,183,"We don't have any need internally at the moment for global alignments, so we don't really plan on implementing real global alignments. We would be happy for external contributions or guiding someone through the implementation though. What exactly is the purpose of global protein alignments in your case? Generally we would solve this problem through a high bi-directional coverage cut-off (See https://github.com/soedinglab/MMseqs2/wiki#how-to-set-the-right-alignment-coverage-to-cluster).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-696187082
https://github.com/soedinglab/MMseqs2/issues/224#issuecomment-519295003:55,Availability,error,error,55,Could you please provide a sample set to reproduce the error?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/224#issuecomment-519295003
https://github.com/soedinglab/MMseqs2/issues/224#issuecomment-581269379:21,Availability,error,error,21,Please reopen if the error still occurs.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/224#issuecomment-581269379
https://github.com/soedinglab/MMseqs2/issues/224#issuecomment-1205142810:386,Availability,down,downstream,386,"I experience the same problem. After running linclust and extracting the representative sequences, I have duplicate IDs; ```; >k99_9972_2 # 266 # 886 # 1 # ID=81340_2;partial=00;start_type=GTG;rbs_motif=AGGAG;rbs_spacer=5-10bp;gc_cont=0.655; >k99_9972_2 # 500 # 1270 # 1 # ID=10959_2;partial=00;start_type=TTG;rbs_motif=GGxGG;rbs_spacer=5-10bp;gc_cont=0.471; ```; So reads mappings and downstream tools break because of this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/224#issuecomment-1205142810
https://github.com/soedinglab/MMseqs2/issues/226#issuecomment-526769228:832,Usability,clear,clearer,832,"This is a bit of a problem of confusing documentation. `convertalis` is never called in the taxonomy workflow. You can instead pass the parameter `--tax-output-mode 1` to get only an alignment result and then call `lca` and `convertalis` separately:. ```; mmseqs taxonomy $OUT/seqtable_queryDB $DB $OUT/taxonomyResult tmp_aa -a --start-sens 1 --sens-steps 3 -s 7 --search-type 2 --tax-output-mode 1; mmseqs convertalis $OUT/seqtable_queryDB $DB $OUT/taxonomyResult $OUT/aln.m8 --format-output ""query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qaln,taln""; mmseqs lca $OUT/seqtable_queryDB $DB $OUT/taxonomyResult $out/lcaDB --tax-lineage true --lca-ranks ""superkingdom:phylum:class:order:genus:species""; mmseqs createtsv $OUT/seqtable_queryDB $out/lcaDB $OUT/lca.tsv; ```. We'll think how to make this clearer or how to allow to add alignment information to a taxonomy result.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/226#issuecomment-526769228
https://github.com/soedinglab/MMseqs2/issues/229#issuecomment-532358998:87,Availability,error,error,87,Thank you for reporting this issue. Could you provide the input files to reproduce the error?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229#issuecomment-532358998
https://github.com/soedinglab/MMseqs2/issues/229#issuecomment-532444906:235,Availability,error,error,235,"[mmseqslinux.zip](https://github.com/soedinglab/MMseqs2/files/3623807/mmseqslinux.zip). [mmseqwin.zip](https://github.com/soedinglab/MMseqs2/files/3623810/mmseqwin.zip). Thanks for looking into this -- these files should reproduce the error but may be machine/environment dependent. We have had the same error on three PCs (~5-8 years old) but had success today on MacOS on a < 1 year old computer. I don't know if that will help diagnose the issue, but the files should contain the relevant inputs to reproduce the issue, from two different operating systems. Also attaching the stack dump that cygwin provided if it proves to be useful:; [mmseqsstackdumpwindows.zip](https://github.com/soedinglab/MMseqs2/files/3623831/mmseqsstackdumpwindows.zip)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229#issuecomment-532444906
https://github.com/soedinglab/MMseqs2/issues/229#issuecomment-532444906:304,Availability,error,error,304,"[mmseqslinux.zip](https://github.com/soedinglab/MMseqs2/files/3623807/mmseqslinux.zip). [mmseqwin.zip](https://github.com/soedinglab/MMseqs2/files/3623810/mmseqwin.zip). Thanks for looking into this -- these files should reproduce the error but may be machine/environment dependent. We have had the same error on three PCs (~5-8 years old) but had success today on MacOS on a < 1 year old computer. I don't know if that will help diagnose the issue, but the files should contain the relevant inputs to reproduce the issue, from two different operating systems. Also attaching the stack dump that cygwin provided if it proves to be useful:; [mmseqsstackdumpwindows.zip](https://github.com/soedinglab/MMseqs2/files/3623831/mmseqsstackdumpwindows.zip)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229#issuecomment-532444906
https://github.com/soedinglab/MMseqs2/issues/229#issuecomment-532444906:272,Integrability,depend,dependent,272,"[mmseqslinux.zip](https://github.com/soedinglab/MMseqs2/files/3623807/mmseqslinux.zip). [mmseqwin.zip](https://github.com/soedinglab/MMseqs2/files/3623810/mmseqwin.zip). Thanks for looking into this -- these files should reproduce the error but may be machine/environment dependent. We have had the same error on three PCs (~5-8 years old) but had success today on MacOS on a < 1 year old computer. I don't know if that will help diagnose the issue, but the files should contain the relevant inputs to reproduce the issue, from two different operating systems. Also attaching the stack dump that cygwin provided if it proves to be useful:; [mmseqsstackdumpwindows.zip](https://github.com/soedinglab/MMseqs2/files/3623831/mmseqsstackdumpwindows.zip)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229#issuecomment-532444906
https://github.com/soedinglab/MMseqs2/issues/230#issuecomment-538747139:57,Availability,down,download,57,"Sorry to send you too late. ; Would you check if you may download the data from [here](https://drive.google.com/open?id=1pqUXLM6MT1cQVyQkccNDecMRdwNA8Osi) . If you cannot, do you suggest any other place to upload it?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/230#issuecomment-538747139
https://github.com/soedinglab/MMseqs2/issues/230#issuecomment-538983056:37,Security,access,access,37,"It told me to request permissions to access the file, which I did.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/230#issuecomment-538983056
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535153285:29,Testability,log,log,29,Could you please provide the log? Thanks a lot.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535153285
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535220997:27,Testability,log,log,27,"Hi Martin, I've uploaded a log file; Thanks and best regards,; ---sram. On Wed, Sep 25, 2019 at 3:31 PM Martin Steinegger <notifications@github.com>; wrote:. > Could you please provide the log? Thanks a lot.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/soedinglab/MMseqs2/issues/231?email_source=notifications&email_token=AK464H2SUC6W7QLCGBNFZYTQLOVBDA5CNFSM4I2QI5W2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD7S4VBI#issuecomment-535153285>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AK464H3GZ5NC2367YT3Y5Z3QLOVBDANCNFSM4I2QI5WQ>; > .; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535220997
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535220997:189,Testability,log,log,189,"Hi Martin, I've uploaded a log file; Thanks and best regards,; ---sram. On Wed, Sep 25, 2019 at 3:31 PM Martin Steinegger <notifications@github.com>; wrote:. > Could you please provide the log? Thanks a lot.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/soedinglab/MMseqs2/issues/231?email_source=notifications&email_token=AK464H2SUC6W7QLCGBNFZYTQLOVBDA5CNFSM4I2QI5W2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD7S4VBI#issuecomment-535153285>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AK464H3GZ5NC2367YT3Y5Z3QLOVBDANCNFSM4I2QI5WQ>; > .; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535220997
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535228222:34,Testability,log,log,34,@zsram I can not see the uploaded log. Can you past it in a gist https://gist.github.com/?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535228222
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:1088,Availability,Mask,Mask,1088,"omz1_200m.fna /d/Databases/Kegg/sram/mmseqs/kegg test.m8 tmp --start-sens 1 --sens-steps 3 -s 6 --strand 2 --max-seqs 1 . MMseqs Version: 	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	40; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	1; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	1; Search steps 	3; Run a seq-profile search in slice mode	false; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:1106,Availability,Mask,Mask,1106,"omz1_200m.fna /d/Databases/Kegg/sram/mmseqs/kegg test.m8 tmp --start-sens 1 --sens-steps 3 -s 6 --strand 2 --max-seqs 1 . MMseqs Version: 	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	40; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	1; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	1; Search steps 	3; Run a seq-profile search in slice mode	false; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:1308,Availability,Mask,Mask,1308,"Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	40; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	1; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	1; Search steps 	3; Run a seq-profile search in slice mode	false; Strand selection 	2; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Alignment format 	0; Format alignment output 	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,e",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:4118,Availability,mask,mask,4118,"231218113/search_tmp/10627605686170015473/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 516.30K 0s 579ms; Time for merging to q_orfs_aa_h: 0h 0m 0s 661ms; Time for merging to q_orfs_aa: 0h 0m 0s 709ms; Time for processing: 0h 0m 3s 128ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 1.000 . Query database size: 2548633 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 174 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 24s 806ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 50s 887ms; Index statistics; Entries: 3111458326; DB size: 27569 MB; Avg k-mer size: 2.430827; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GGQRVAR	38490; LLGPGKT	25908; YDYAIPL	22840; GGRRVAR	21815; PHLGGQR	19799; TPHDFEV	17697; PSLGGQR	13748; FSCSHVV	12988; Time for index table init: 0h 2m 34s 667ms; Process prefiltering step 1 of 1. k-mer similarity t",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:4127,Availability,mask,mask-lower-case,4127,"231218113/search_tmp/10627605686170015473/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 516.30K 0s 579ms; Time for merging to q_orfs_aa_h: 0h 0m 0s 661ms; Time for merging to q_orfs_aa: 0h 0m 0s 709ms; Time for processing: 0h 0m 3s 128ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 1.000 . Query database size: 2548633 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 174 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 24s 806ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 50s 887ms; Index statistics; Entries: 3111458326; DB size: 27569 MB; Avg k-mer size: 2.430827; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GGQRVAR	38490; LLGPGKT	25908; YDYAIPL	22840; GGRRVAR	21815; PHLGGQR	19799; TPHDFEV	17697; PSLGGQR	13748; FSCSHVV	12988; Time for index table init: 0h 2m 34s 667ms; Process prefiltering step 1 of 1. k-mer similarity t",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:4602,Availability,Mask,Masked,4602,"filter tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 1.000 . Query database size: 2548633 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 174 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 24s 806ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 50s 887ms; Index statistics; Entries: 3111458326; DB size: 27569 MB; Avg k-mer size: 2.430827; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GGQRVAR	38490; LLGPGKT	25908; YDYAIPL	22840; GGRRVAR	21815; PHLGGQR	19799; TPHDFEV	17697; PSLGGQR	13748; FSCSHVV	12988; Time for index table init: 0h 2m 34s 667ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2548633; Target db start 1 to 13003941; [=================================================================] 2.55M 23s 498ms. 7.258993 k-mers per position; 1015 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 1142796 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 915ms; Time for processing: 0h 3m 3s 800ms; align tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:7495,Availability,mask,mask,7495," 531ms; Time for merging to aln_0: 0h 0m 0s 899ms. 1405837 alignments calculated.; 219658 sequence pairs passed the thresholds (0.156247 of overall calculated).; 0.086187 hits per query sequence.; Time for processing: 0h 0m 5s 264ms; createsubdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/order_0 tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 273ms; Time for processing: 0h 0m 0s 816ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 3.5 . Query database size: 2328975 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 146 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 355ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 643ms; Index statistics; Entries: 5077775275; DB size: 38820 MB; Avg k-mer size: 3.967012; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 16s 755ms; Process prefiltering step 1 of 1. k-mer similarity ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:7504,Availability,mask,mask-lower-case,7504," 531ms; Time for merging to aln_0: 0h 0m 0s 899ms. 1405837 alignments calculated.; 219658 sequence pairs passed the thresholds (0.156247 of overall calculated).; 0.086187 hits per query sequence.; Time for processing: 0h 0m 5s 264ms; createsubdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/order_0 tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 273ms; Time for processing: 0h 0m 0s 816ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 3.5 . Query database size: 2328975 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 146 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 355ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 643ms; Index statistics; Entries: 5077775275; DB size: 38820 MB; Avg k-mer size: 3.967012; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 16s 755ms; Process prefiltering step 1 of 1. k-mer similarity ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:7977,Availability,Mask,Masked,7977,"ter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 3.5 . Query database size: 2328975 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 146 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 355ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 643ms; Index statistics; Entries: 5077775275; DB size: 38820 MB; Avg k-mer size: 3.967012; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 16s 755ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 146; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2328975; Target db start 1 to 13003941; [=================================================================] 2.33M 2m 23s 577ms. 183.593905 k-mers per position; 20689 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 54469 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 793ms; Time for processing: 0h 5m 46s 599ms; align tmp/9700814981231218113/search_tmp/10627605686170015473/s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:11704,Availability,mask,mask,11704,"e for processing: 0h 0m 0s 0ms; mvdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge_new tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 0ms; createsubdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/order_1 tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 -v 3 --subdb-mode 1 . Time for merging to input_1: 0h 0m 0s 267ms; Time for processing: 0h 0m 0s 790ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 6.0 . Query database size: 2271004 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 294ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 848ms; Index statistics; Entries: 5094244039; DB size: 38915 MB; Avg k-mer size: 3.979878; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 15s 901ms; Process prefiltering step 1 of 1. k-mer similarity ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:11713,Availability,mask,mask-lower-case,11713,"e for processing: 0h 0m 0s 0ms; mvdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge_new tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 0ms; createsubdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/order_1 tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 -v 3 --subdb-mode 1 . Time for merging to input_1: 0h 0m 0s 267ms; Time for processing: 0h 0m 0s 790ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 6.0 . Query database size: 2271004 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 294ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 848ms; Index statistics; Entries: 5094244039; DB size: 38915 MB; Avg k-mer size: 3.979878; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 15s 901ms; Process prefiltering step 1 of 1. k-mer similarity ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:12186,Availability,Mask,Masked,12186,"ter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 6.0 . Query database size: 2271004 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 294ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 848ms; Index statistics; Entries: 5094244039; DB size: 38915 MB; Avg k-mer size: 3.979878; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 15s 901ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 118; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2271004; Target db start 1 to 13003941; [=================================================================] 2.27M 43m 26s 530ms. 3262.541404 k-mers per position; 476704 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 18145 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 779ms; Time for processing: 0h 46m 49s 482ms; align tmp/9700814981231218113/search_tmp/106276056861700154",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:4353,Energy Efficiency,consumption,consumption,4353,"===========================================================] 516.30K 0s 579ms; Time for merging to q_orfs_aa_h: 0h 0m 0s 661ms; Time for merging to q_orfs_aa: 0h 0m 0s 709ms; Time for processing: 0h 0m 3s 128ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 1.000 . Query database size: 2548633 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 174 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 24s 806ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 50s 887ms; Index statistics; Entries: 3111458326; DB size: 27569 MB; Avg k-mer size: 2.430827; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GGQRVAR	38490; LLGPGKT	25908; YDYAIPL	22840; GGRRVAR	21815; PHLGGQR	19799; TPHDFEV	17697; PSLGGQR	13748; FSCSHVV	12988; Time for index table init: 0h 2m 34s 667ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2548633; Target db start 1 to 13003941; [=================================================================] 2.55M 23s 498ms. 7.258993 k-mers per position; 1015 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median r",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:7728,Energy Efficiency,consumption,consumption,7728,"mp/10627605686170015473/q_orfs_aa tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 273ms; Time for processing: 0h 0m 0s 816ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 3.5 . Query database size: 2328975 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 146 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 355ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 643ms; Index statistics; Entries: 5077775275; DB size: 38820 MB; Avg k-mer size: 3.967012; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 16s 755ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 146; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2328975; Target db start 1 to 13003941; [=================================================================] 2.33M 2m 23s 577ms. 183.593905 k-mers per position; 20689 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:11937,Energy Efficiency,consumption,consumption,11937,"627605686170015473/search/input_0 tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 -v 3 --subdb-mode 1 . Time for merging to input_1: 0h 0m 0s 267ms; Time for processing: 0h 0m 0s 790ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 6.0 . Query database size: 2271004 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 294ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 848ms; Index statistics; Entries: 5094244039; DB size: 38915 MB; Avg k-mer size: 3.979878; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 15s 901ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 118; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2271004; Target db start 1 to 13003941; [=================================================================] 2.27M 43m 26s 530ms. 3262.541404 k-mers per position; 476704 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:6168,Modifiability,extend,extend,6168,"548633; Target db start 1 to 13003941; [=================================================================] 2.55M 23s 498ms. 7.258993 k-mers per position; 1015 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 1142796 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 915ms; Time for processing: 0h 3m 3s 800ms; align tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_0 tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 2548633 type: Aminoacid; Target database size: 13003941 type: Aminoacid; Calculation of alignments; [=================================================================] 2.55M 2s 531ms; Time for merging to aln_0: 0h 0m 0s 899ms. 1405837 alignments calculated.; 219658 sequence pairs passed the thresholds (0.156247 of overall calculated).; 0.086187 hits per query sequence.; Time for processing: 0h 0m 5s 264ms; createsubdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/order_0 tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 273ms; Time for processing: 0h 0m 0s 816ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/106276",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:9556,Modifiability,extend,extend,9556,"rget db start 1 to 13003941; [=================================================================] 2.33M 2m 23s 577ms. 183.593905 k-mers per position; 20689 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 54469 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 793ms; Time for processing: 0h 5m 46s 599ms; align tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_1 tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 2328975 type: Aminoacid; Target database size: 13003941 type: Aminoacid; Calculation of alignments; [=================================================================] 2.33M 3s 448ms; Time for merging to aln_1: 0h 0m 0s 794ms. 2274506 alignments calculated.; 57971 sequence pairs passed the thresholds (0.025487 of overall calculated).; 0.024891 hits per query sequence.; Time for processing: 0h 0m 6s 29ms; mergedbs tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge_new tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_0 tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_1 --compressed 0 -v 3 . Merging the results to tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge_new; Time for merging to aln_merge_new: 0h 0m 0s 301ms; Time for processing",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:13769,Modifiability,extend,extend,13769," db start 1 to 13003941; [=================================================================] 2.27M 43m 26s 530ms. 3262.541404 k-mers per position; 476704 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 18145 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 779ms; Time for processing: 0h 46m 49s 482ms; align tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_2 tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 2271004 type: Aminoacid; Target database size: 13003941 type: Aminoacid; Calculation of alignments; [=================================================================] 2.27M 3s 348ms; Time for merging to aln_2: 0h 0m 0s 785ms. 2252859 alignments calculated.; 16146 sequence pairs passed the thresholds (0.007167 of overall calculated).; 0.007110 hits per query sequence.; Time for processing: 0h 0m 5s 939ms; mergedbs tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa tmp/9700814981231218113/search_tmp/10627605686170015473/aln tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_2 --compressed 0 -v 3 . Merging the results to tmp/9700814981231218113/search_tmp/10627605686170015473/aln; Time for merging to aln: 0h 0m 0s 302ms; Time for processing: 0h 0m 1s 611ms; Remove temporary file",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:17221,Modifiability,extend,extend,17221,"p/9700814981231218113/search_tmp/10627605686170015473/search/input_2 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 11ms; offsetalignment tmp/9700814981231218113/query tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/aln tmp/9700814981231218113/result --chain-alignments 0 --merge-query 1 --search-type 0 --threads 40 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 93ms; Writing results to: tmp/9700814981231218113/result; [=================================================================] 516.30K 0s 162ms. Time for merging to result: 0h 0m 0s 158ms; Time for processing: 0h 0m 1s 659ms; Remove temporary files; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa . Time for processing: 0h 0m 0s 45ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/t_orfs_aa . Time for processing: 0h 0m 0s 0ms; convertalis tmp/9700814981231218113/query /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/result test.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 0 --db-load-mode 0 --search-type 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 516.30K 0s 84ms; Time for merging to test.m8: 0h 0m 0s 181ms; Time for processing: 0h 0m 2s 227ms; Removing temporary files; rmdb tmp/9700814981231218113/result . Time for processing: 0h 0m 0s 8ms; rmdb tmp/9700814981231218113/query . Time for processing: 0h 0m 0s 38ms; rmdb tmp/9700814981231218113/query_h . Time for processing: 0h 0m 0s 3ms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:4216,Performance,load,load-mode,4216,"231218113/search_tmp/10627605686170015473/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 516.30K 0s 579ms; Time for merging to q_orfs_aa_h: 0h 0m 0s 661ms; Time for merging to q_orfs_aa: 0h 0m 0s 709ms; Time for processing: 0h 0m 3s 128ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 1.000 . Query database size: 2548633 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 174 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 24s 806ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 50s 887ms; Index statistics; Entries: 3111458326; DB size: 27569 MB; Avg k-mer size: 2.430827; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GGQRVAR	38490; LLGPGKT	25908; YDYAIPL	22840; GGRRVAR	21815; PHLGGQR	19799; TPHDFEV	17697; PSLGGQR	13748; FSCSHVV	12988; Time for index table init: 0h 2m 34s 667ms; Process prefiltering step 1 of 1. k-mer similarity t",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:6103,Performance,load,load-mode,6103,"2m 34s 667ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2548633; Target db start 1 to 13003941; [=================================================================] 2.55M 23s 498ms. 7.258993 k-mers per position; 1015 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 1142796 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 915ms; Time for processing: 0h 3m 3s 800ms; align tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_0 tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 2548633 type: Aminoacid; Target database size: 13003941 type: Aminoacid; Calculation of alignments; [=================================================================] 2.55M 2s 531ms; Time for merging to aln_0: 0h 0m 0s 899ms. 1405837 alignments calculated.; 219658 sequence pairs passed the thresholds (0.156247 of overall calculated).; 0.086187 hits per query sequence.; Time for processing: 0h 0m 5s 264ms; createsubdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/order_0 tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 273ms; Time for processing: 0h 0m 0s 816ms;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:7593,Performance,load,load-mode,7593," 531ms; Time for merging to aln_0: 0h 0m 0s 899ms. 1405837 alignments calculated.; 219658 sequence pairs passed the thresholds (0.156247 of overall calculated).; 0.086187 hits per query sequence.; Time for processing: 0h 0m 5s 264ms; createsubdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/order_0 tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 273ms; Time for processing: 0h 0m 0s 816ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 3.5 . Query database size: 2328975 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 146 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 355ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 643ms; Index statistics; Entries: 5077775275; DB size: 38820 MB; Avg k-mer size: 3.967012; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 16s 755ms; Process prefiltering step 1 of 1. k-mer similarity ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:9491,Performance,load,load-mode,9491,"ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 146; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2328975; Target db start 1 to 13003941; [=================================================================] 2.33M 2m 23s 577ms. 183.593905 k-mers per position; 20689 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 54469 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 793ms; Time for processing: 0h 5m 46s 599ms; align tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_1 tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 2328975 type: Aminoacid; Target database size: 13003941 type: Aminoacid; Calculation of alignments; [=================================================================] 2.33M 3s 448ms; Time for merging to aln_1: 0h 0m 0s 794ms. 2274506 alignments calculated.; 57971 sequence pairs passed the thresholds (0.025487 of overall calculated).; 0.024891 hits per query sequence.; Time for processing: 0h 0m 6s 29ms; mergedbs tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge_new tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_0 tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_1 --compressed 0 -v 3 . Merging the r",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:11802,Performance,load,load-mode,11802,"e for processing: 0h 0m 0s 0ms; mvdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge_new tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 0ms; createsubdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/order_1 tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 -v 3 --subdb-mode 1 . Time for merging to input_1: 0h 0m 0s 267ms; Time for processing: 0h 0m 0s 790ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 6.0 . Query database size: 2271004 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 294ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 848ms; Index statistics; Entries: 5094244039; DB size: 38915 MB; Avg k-mer size: 3.979878; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 15s 901ms; Process prefiltering step 1 of 1. k-mer similarity ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:13704,Performance,load,load-mode,13704,"Process prefiltering step 1 of 1. k-mer similarity threshold: 118; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2271004; Target db start 1 to 13003941; [=================================================================] 2.27M 43m 26s 530ms. 3262.541404 k-mers per position; 476704 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 18145 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 779ms; Time for processing: 0h 46m 49s 482ms; align tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_2 tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 2271004 type: Aminoacid; Target database size: 13003941 type: Aminoacid; Calculation of alignments; [=================================================================] 2.27M 3s 348ms; Time for merging to aln_2: 0h 0m 0s 785ms. 2252859 alignments calculated.; 16146 sequence pairs passed the thresholds (0.007167 of overall calculated).; 0.007110 hits per query sequence.; Time for processing: 0h 0m 5s 939ms; mergedbs tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa tmp/9700814981231218113/search_tmp/10627605686170015473/aln tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_2 --compressed 0 -v 3 . Merging the results to tm",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:16314,Performance,load,load-mode,16314,"s; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_1 -v 3 . Time for processing: 0h 0m 0s 15ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_1 -v 3 . Time for processing: 0h 0m 0s 7ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 -v 3 . Time for processing: 0h 0m 0s 11ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_2 -v 3 . Time for processing: 0h 0m 0s 24ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_2 -v 3 . Time for processing: 0h 0m 0s 11ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_2 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 11ms; offsetalignment tmp/9700814981231218113/query tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/aln tmp/9700814981231218113/result --chain-alignments 0 --merge-query 1 --search-type 0 --threads 40 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 93ms; Writing results to: tmp/9700814981231218113/result; [=================================================================] 516.30K 0s 162ms. Time for merging to result: 0h 0m 0s 158ms; Time for processing: 0h 0m 1s 659ms; Remove temporary files; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa . Time for processing: 0h 0m 0s 45ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/t_orfs_aa . Time for processing: 0h 0m 0s 0ms; convertalis tmp/9700814981231218113/query /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/result test.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:17249,Performance,load,load-mode,17249,"p/9700814981231218113/search_tmp/10627605686170015473/search/input_2 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 11ms; offsetalignment tmp/9700814981231218113/query tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/aln tmp/9700814981231218113/result --chain-alignments 0 --merge-query 1 --search-type 0 --threads 40 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 93ms; Writing results to: tmp/9700814981231218113/result; [=================================================================] 516.30K 0s 162ms. Time for merging to result: 0h 0m 0s 158ms; Time for processing: 0h 0m 1s 659ms; Remove temporary files; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa . Time for processing: 0h 0m 0s 45ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/t_orfs_aa . Time for processing: 0h 0m 0s 0ms; convertalis tmp/9700814981231218113/query /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/result test.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 0 --db-load-mode 0 --search-type 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 516.30K 0s 84ms; Time for merging to test.m8: 0h 0m 0s 181ms; Time for processing: 0h 0m 2s 227ms; Removing temporary files; rmdb tmp/9700814981231218113/result . Time for processing: 0h 0m 0s 8ms; rmdb tmp/9700814981231218113/query . Time for processing: 0h 0m 0s 38ms; rmdb tmp/9700814981231218113/query_h . Time for processing: 0h 0m 0s 3ms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:121,Testability,test,test,121,"@martin-steinegger OK. Here I am pasting that text:; easy-search MOMZ_moomz1_200m.fna /d/Databases/Kegg/sram/mmseqs/kegg test.m8 tmp --start-sens 1 --sens-steps 3 -s 6 --strand 2 --max-seqs 1 . MMseqs Version: 	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	40; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	1; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensiti",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:17013,Testability,test,test,17013,"p/9700814981231218113/search_tmp/10627605686170015473/search/input_2 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 11ms; offsetalignment tmp/9700814981231218113/query tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/aln tmp/9700814981231218113/result --chain-alignments 0 --merge-query 1 --search-type 0 --threads 40 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 93ms; Writing results to: tmp/9700814981231218113/result; [=================================================================] 516.30K 0s 162ms. Time for merging to result: 0h 0m 0s 158ms; Time for processing: 0h 0m 1s 659ms; Remove temporary files; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa . Time for processing: 0h 0m 0s 45ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/t_orfs_aa . Time for processing: 0h 0m 0s 0ms; convertalis tmp/9700814981231218113/query /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/result test.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 0 --db-load-mode 0 --search-type 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 516.30K 0s 84ms; Time for merging to test.m8: 0h 0m 0s 181ms; Time for processing: 0h 0m 2s 227ms; Removing temporary files; rmdb tmp/9700814981231218113/result . Time for processing: 0h 0m 0s 8ms; rmdb tmp/9700814981231218113/query . Time for processing: 0h 0m 0s 38ms; rmdb tmp/9700814981231218113/query_h . Time for processing: 0h 0m 0s 3ms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:17417,Testability,test,test,17417,"p/9700814981231218113/search_tmp/10627605686170015473/search/input_2 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 11ms; offsetalignment tmp/9700814981231218113/query tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/aln tmp/9700814981231218113/result --chain-alignments 0 --merge-query 1 --search-type 0 --threads 40 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 93ms; Writing results to: tmp/9700814981231218113/result; [=================================================================] 516.30K 0s 162ms. Time for merging to result: 0h 0m 0s 158ms; Time for processing: 0h 0m 1s 659ms; Remove temporary files; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa . Time for processing: 0h 0m 0s 45ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/t_orfs_aa . Time for processing: 0h 0m 0s 0ms; convertalis tmp/9700814981231218113/query /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/result test.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 0 --db-load-mode 0 --search-type 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 516.30K 0s 84ms; Time for merging to test.m8: 0h 0m 0s 181ms; Time for processing: 0h 0m 2s 227ms; Removing temporary files; rmdb tmp/9700814981231218113/result . Time for processing: 0h 0m 0s 8ms; rmdb tmp/9700814981231218113/query . Time for processing: 0h 0m 0s 38ms; rmdb tmp/9700814981231218113/query_h . Time for processing: 0h 0m 0s 3ms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535275835:86,Performance,perform,performs,86,"Thank you for the log. . If you use `--start-sens 1 --sens-steps 3 -s 6` then MMseqs2 performs three searches with the sensitivity `-s 1`, `-s 3.5` and `-s 6` while in each step previously successful aligned sequences are left out. From your log I can see that the most sensitive search `-s 6` took `46m 49s 482ms` while not resulting in a much deeper annotation. Only 16146 extra ORFs sequences got annotated while the searches with `-s 1` and `-s 3.5` annotated already 277629. Searching with `-s 6` is also more sensitive compare to DIAMOND (see https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter). The respective sensitivity should be DIAMONDS `--more-sensitive`. . My recommendation would be to search the following way:. time mmseqs easy-search MOMZ_moomz1_200m.fna /d/Databases/Kegg/sram/mmseqs/ke; gg mmseqs_results2.m8 tmp -s 3.5 --max-accept 1 --max-rejected 5 . This should roughly take 6-7 minutes.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535275835
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535275835:18,Testability,log,log,18,"Thank you for the log. . If you use `--start-sens 1 --sens-steps 3 -s 6` then MMseqs2 performs three searches with the sensitivity `-s 1`, `-s 3.5` and `-s 6` while in each step previously successful aligned sequences are left out. From your log I can see that the most sensitive search `-s 6` took `46m 49s 482ms` while not resulting in a much deeper annotation. Only 16146 extra ORFs sequences got annotated while the searches with `-s 1` and `-s 3.5` annotated already 277629. Searching with `-s 6` is also more sensitive compare to DIAMOND (see https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter). The respective sensitivity should be DIAMONDS `--more-sensitive`. . My recommendation would be to search the following way:. time mmseqs easy-search MOMZ_moomz1_200m.fna /d/Databases/Kegg/sram/mmseqs/ke; gg mmseqs_results2.m8 tmp -s 3.5 --max-accept 1 --max-rejected 5 . This should roughly take 6-7 minutes.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535275835
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535275835:242,Testability,log,log,242,"Thank you for the log. . If you use `--start-sens 1 --sens-steps 3 -s 6` then MMseqs2 performs three searches with the sensitivity `-s 1`, `-s 3.5` and `-s 6` while in each step previously successful aligned sequences are left out. From your log I can see that the most sensitive search `-s 6` took `46m 49s 482ms` while not resulting in a much deeper annotation. Only 16146 extra ORFs sequences got annotated while the searches with `-s 1` and `-s 3.5` annotated already 277629. Searching with `-s 6` is also more sensitive compare to DIAMOND (see https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter). The respective sensitivity should be DIAMONDS `--more-sensitive`. . My recommendation would be to search the following way:. time mmseqs easy-search MOMZ_moomz1_200m.fna /d/Databases/Kegg/sram/mmseqs/ke; gg mmseqs_results2.m8 tmp -s 3.5 --max-accept 1 --max-rejected 5 . This should roughly take 6-7 minutes.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535275835
https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535569679:105,Safety,predict,predicted,105,"@martin-steinegger Thank you very much. You are absolutely right, it took now 7 minutes as you correctly predicted.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535569679
https://github.com/soedinglab/MMseqs2/issues/232#issuecomment-536568505:487,Availability,error,error,487,"MMseqs2 does not know about SLURM memory limits, you can force the prefilter to use less memory (and process the search in multiple steps) with `--split-memory-limit`:. ```; mmseqs taxonomy --search-type 3 --split-memory-limit 100G ...; ```. Alternatively, you can increase the SLURM memory limit to allow it to use everything. `--split-memory-limit` should be about 80% of the total RAM you are willing to commit to MMseqs2. So in your case I took ~80% of 144GB (144179200 in the SLURM error message).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232#issuecomment-536568505
https://github.com/soedinglab/MMseqs2/issues/232#issuecomment-536568505:493,Integrability,message,message,493,"MMseqs2 does not know about SLURM memory limits, you can force the prefilter to use less memory (and process the search in multiple steps) with `--split-memory-limit`:. ```; mmseqs taxonomy --search-type 3 --split-memory-limit 100G ...; ```. Alternatively, you can increase the SLURM memory limit to allow it to use everything. `--split-memory-limit` should be about 80% of the total RAM you are willing to commit to MMseqs2. So in your case I took ~80% of 144GB (144179200 in the SLURM error message).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232#issuecomment-536568505
https://github.com/soedinglab/MMseqs2/issues/232#issuecomment-537486096:16,Availability,fault,fault,16,"Oh gosh yes, my fault, it seems like I specificed a wrong limit. . Thanks for the fast response",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232#issuecomment-537486096
https://github.com/soedinglab/MMseqs2/issues/234#issuecomment-543696987:392,Availability,error,error,392,Here is the database : https://drive.google.com/file/d/1OXsgrc5_Slkf0jGujdXocRvnxO76DI9z/view?usp=sharing. Here is the query : . https://drive.google.com/file/d/1IasJ5oDoQKSYDQsSQvto4BJWSIqCIe_z/view?usp=sharing. What technical specifications does the machine have where MMseqs2 is running?:; It should not come from the machine since another run work for different data. . It looks like the error occurs when I create an index file of the database because if I just use `createdb` without using the `createindex` is seems to work.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234#issuecomment-543696987
https://github.com/soedinglab/MMseqs2/issues/234#issuecomment-543758981:40,Deployability,update,update,40,Thanks a lot. I fixed the issue. Please update to the latest git. We might have to make a new release very soon.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234#issuecomment-543758981
https://github.com/soedinglab/MMseqs2/issues/234#issuecomment-543758981:94,Deployability,release,release,94,Thanks a lot. I fixed the issue. Please update to the latest git. We might have to make a new release very soon.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234#issuecomment-543758981
https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579879522:192,Availability,error,error,192,"@colinbrislawn I have tested `linclust` with ONT reads. It should be possible to cluster them. However, we needed to tweak the parameters used for the banded alignment to account for the high error rate. . How do you want to use MMseqs2?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579879522
https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579879522:22,Testability,test,tested,22,"@colinbrislawn I have tested `linclust` with ONT reads. It should be possible to cluster them. However, we needed to tweak the parameters used for the banded alignment to account for the high error rate. . How do you want to use MMseqs2?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579879522
https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579894942:191,Availability,error,error,191,">@colinbrislawn I have tested linclust with ONT reads. It should be possible to cluster them. However, we needed to tweak the parameters used for the banded alignment to account for the high error rate. Awesome!. >How do you want to use MMseqs2?. Existing Qiime 2 plugins offer several options for clustering and classifying short RNA sequences... but no plugins support clustering or classifying long, noisy sequences, or proteins of any kind. I think an MMseqs2 plugin could bring a ton of functionality to Qiime 2. A method for taxonomic classification of ONT reads would help @splaisan and others.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579894942
https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579894942:264,Modifiability,plugin,plugins,264,">@colinbrislawn I have tested linclust with ONT reads. It should be possible to cluster them. However, we needed to tweak the parameters used for the banded alignment to account for the high error rate. Awesome!. >How do you want to use MMseqs2?. Existing Qiime 2 plugins offer several options for clustering and classifying short RNA sequences... but no plugins support clustering or classifying long, noisy sequences, or proteins of any kind. I think an MMseqs2 plugin could bring a ton of functionality to Qiime 2. A method for taxonomic classification of ONT reads would help @splaisan and others.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579894942
https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579894942:355,Modifiability,plugin,plugins,355,">@colinbrislawn I have tested linclust with ONT reads. It should be possible to cluster them. However, we needed to tweak the parameters used for the banded alignment to account for the high error rate. Awesome!. >How do you want to use MMseqs2?. Existing Qiime 2 plugins offer several options for clustering and classifying short RNA sequences... but no plugins support clustering or classifying long, noisy sequences, or proteins of any kind. I think an MMseqs2 plugin could bring a ton of functionality to Qiime 2. A method for taxonomic classification of ONT reads would help @splaisan and others.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579894942
https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579894942:464,Modifiability,plugin,plugin,464,">@colinbrislawn I have tested linclust with ONT reads. It should be possible to cluster them. However, we needed to tweak the parameters used for the banded alignment to account for the high error rate. Awesome!. >How do you want to use MMseqs2?. Existing Qiime 2 plugins offer several options for clustering and classifying short RNA sequences... but no plugins support clustering or classifying long, noisy sequences, or proteins of any kind. I think an MMseqs2 plugin could bring a ton of functionality to Qiime 2. A method for taxonomic classification of ONT reads would help @splaisan and others.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579894942
https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579894942:23,Testability,test,tested,23,">@colinbrislawn I have tested linclust with ONT reads. It should be possible to cluster them. However, we needed to tweak the parameters used for the banded alignment to account for the high error rate. Awesome!. >How do you want to use MMseqs2?. Existing Qiime 2 plugins offer several options for clustering and classifying short RNA sequences... but no plugins support clustering or classifying long, noisy sequences, or proteins of any kind. I think an MMseqs2 plugin could bring a ton of functionality to Qiime 2. A method for taxonomic classification of ONT reads would help @splaisan and others.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579894942
https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580226294:64,Deployability,integrat,integrating,64,We would be happy to assist members of the Qiime community with integrating MMseqs2.; We felt it was a bit too much for us to tackle alone.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580226294
https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580226294:64,Integrability,integrat,integrating,64,We would be happy to assist members of the Qiime community with integrating MMseqs2.; We felt it was a bit too much for us to tackle alone.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580226294
https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580295404:81,Deployability,integrat,integration,81,"Sounds like a plan!. Building a plugin is a pretty big lift as it requires close integration with Qiime 2 [semantic types](https://docs.qiime2.org/2019.10/semantic-types/). But at least the [docs](https://docs.qiime2.org/2019.10/plugins/developing/) are good! . I don't think I'm the right person to lead development, but I would be happy to contribute methods to the plugin.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580295404
https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580295404:81,Integrability,integrat,integration,81,"Sounds like a plan!. Building a plugin is a pretty big lift as it requires close integration with Qiime 2 [semantic types](https://docs.qiime2.org/2019.10/semantic-types/). But at least the [docs](https://docs.qiime2.org/2019.10/plugins/developing/) are good! . I don't think I'm the right person to lead development, but I would be happy to contribute methods to the plugin.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580295404
https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580295404:32,Modifiability,plugin,plugin,32,"Sounds like a plan!. Building a plugin is a pretty big lift as it requires close integration with Qiime 2 [semantic types](https://docs.qiime2.org/2019.10/semantic-types/). But at least the [docs](https://docs.qiime2.org/2019.10/plugins/developing/) are good! . I don't think I'm the right person to lead development, but I would be happy to contribute methods to the plugin.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580295404
https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580295404:229,Modifiability,plugin,plugins,229,"Sounds like a plan!. Building a plugin is a pretty big lift as it requires close integration with Qiime 2 [semantic types](https://docs.qiime2.org/2019.10/semantic-types/). But at least the [docs](https://docs.qiime2.org/2019.10/plugins/developing/) are good! . I don't think I'm the right person to lead development, but I would be happy to contribute methods to the plugin.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580295404
https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580295404:368,Modifiability,plugin,plugin,368,"Sounds like a plan!. Building a plugin is a pretty big lift as it requires close integration with Qiime 2 [semantic types](https://docs.qiime2.org/2019.10/semantic-types/). But at least the [docs](https://docs.qiime2.org/2019.10/plugins/developing/) are good! . I don't think I'm the right person to lead development, but I would be happy to contribute methods to the plugin.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580295404
https://github.com/soedinglab/MMseqs2/issues/237#issuecomment-549172339:30,Usability,clear,clear,30,"The `--remove-tmp-files` will clear out the `tmp` folder after execution. However, during workflow execution, we do need to keep a lot of files around.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/237#issuecomment-549172339
https://github.com/soedinglab/MMseqs2/issues/238#issuecomment-549172895:154,Availability,avail,available,154,"How many entries are there in the input database (`wc -l ${output_folder}/all_samples_oct31_db.index`)?. Try setting the memory-limit to about 2/3 of the available RAM (`--split-memory-limit 70G`). Also unrelated, but are you sure about `--min-seq-id 1.0`?; It will basically not be able to cluster anything except 100% identical substrings. If this is what you want you might want to also add `--cov-mode 1` (See https://github.com/soedinglab/MMseqs2/wiki#how-to-set-the-right-alignment-coverage-to-cluster).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238#issuecomment-549172895
https://github.com/soedinglab/MMseqs2/issues/238#issuecomment-549176665:654,Availability,error,error,654,"Thank you for answering so quickly! I have 1,032,373,897 entries in the input database. And setting the memory to 70G worked perfectly. It's now running. I will also look into setting cod-mode to 1. I am running the clustering with several iterations (100%, 95%, 70% .. etc). So doing it with 100% identity will not be my final result. Thank you for the very helpful advice. One thing I noticed is that, without using the split-memory-limit option the database size was 330.652 MB so the program was splitting the database into 3 files, where it probably should have been splitting it into 4 so no file would be greater than 100G. Could this be a simple error of rounding down instead of rounding up?. Thanks again.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238#issuecomment-549176665
https://github.com/soedinglab/MMseqs2/issues/238#issuecomment-549176665:672,Availability,down,down,672,"Thank you for answering so quickly! I have 1,032,373,897 entries in the input database. And setting the memory to 70G worked perfectly. It's now running. I will also look into setting cod-mode to 1. I am running the clustering with several iterations (100%, 95%, 70% .. etc). So doing it with 100% identity will not be my final result. Thank you for the very helpful advice. One thing I noticed is that, without using the split-memory-limit option the database size was 330.652 MB so the program was splitting the database into 3 files, where it probably should have been splitting it into 4 so no file would be greater than 100G. Could this be a simple error of rounding down instead of rounding up?. Thanks again.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238#issuecomment-549176665
https://github.com/soedinglab/MMseqs2/issues/238#issuecomment-549176665:647,Usability,simpl,simple,647,"Thank you for answering so quickly! I have 1,032,373,897 entries in the input database. And setting the memory to 70G worked perfectly. It's now running. I will also look into setting cod-mode to 1. I am running the clustering with several iterations (100%, 95%, 70% .. etc). So doing it with 100% identity will not be my final result. Thank you for the very helpful advice. One thing I noticed is that, without using the split-memory-limit option the database size was 330.652 MB so the program was splitting the database into 3 files, where it probably should have been splitting it into 4 so no file would be greater than 100G. Could this be a simple error of rounding down instead of rounding up?. Thanks again.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238#issuecomment-549176665
https://github.com/soedinglab/MMseqs2/issues/240#issuecomment-842066270:29,Availability,down,download,29,"@martin-steinegger ; Hi， ; I download the newest version of mmseqs2, the biggest value is 7.5 from software help information:; -s FLOAT Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [5.700]; but on the description from wiki is 8.5, so which one is correct?. And, I would like get same sensitive as PSI-BLAST, if the following parameter is OK:; mmseqs search -a -s 7 --num-iterations 2",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/240#issuecomment-842066270
https://github.com/soedinglab/MMseqs2/issues/241#issuecomment-556843463:25,Testability,log,log,25,Could you please add the log of this search?. One thing that might happen is that your database has no taxonomical information for this sequences. Could you check if the identifier of this viruses has a mapping in the `_mapping` file?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/241#issuecomment-556843463
https://github.com/soedinglab/MMseqs2/issues/244#issuecomment-556828115:12,Usability,guid,guide,12,"In the user guide there is an example how to turn a SILVA taxonomy into a mmseqs taxonomy database. I think you can use a similar approach for this. Check out ""Create a sequence database with taxonomic information for SILVA"" in the wiki https://github.com/soedinglab/MMseqs2/wiki#taxonomy-assignment-using-mmseqs-taxonomy",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/244#issuecomment-556828115
https://github.com/soedinglab/MMseqs2/issues/245#issuecomment-558095189:59,Usability,clear,clearly,59,"Yes, this exactly the definition. I should write this more clearly in the documentation.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/245#issuecomment-558095189
https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-557532623:21,Deployability,Release,Release,21,"I was using `MMseqs2 Release 6-f5a1c` version and I can executed result2flat over MSA file. Anyway, Is there any way to convert the result2msa output to a flat-file (fasta or similar)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-557532623
https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-558543321:116,Availability,error,error,116,"Thank you both! I was testing on a small dataset, with few singleton clusters, and applying clustalo resulted in an error for such clusters (can't align 1 seq). The problem is that this stops the entire workflow, and no output was produced. Also, can the apply command split the output by cluster?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-558543321
https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-558543321:22,Testability,test,testing,22,"Thank you both! I was testing on a small dataset, with few singleton clusters, and applying clustalo resulted in an error for such clusters (can't align 1 seq). The problem is that this stops the entire workflow, and no output was produced. Also, can the apply command split the output by cluster?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-558543321
https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-558554682:136,Usability,simpl,simple,136,"The point is that `result2msa` create an MSA per each cluster, and even the MSA is in binary format you can visualize the result with a simple `less` but you can't use for other pourpouse. Is there any way, may be using `apply`, to export this binary-MSA output to flat-text? Because I can see the result and It's exactly that I want.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-558554682
https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-559387067:138,Usability,simpl,simple,138,"> The point is that `result2msa` create an MSA per each cluster, and even the MSA is in binary format you can visualize the result with a simple `less` but you can't use for other pourpouse. Is there any way, may be using `apply`, to export this binary-MSA output to flat-text? Because I can see the result and It's exactly that I want. I've found a solution. We can use linux `strings` function to convert the binary-MSA to flat-text.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-559387067
https://github.com/soedinglab/MMseqs2/issues/247#issuecomment-559392245:47,Performance,perform,performed,47,The answer is differs based on the way how you performed the clustering. Could you please provide the commands?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/247#issuecomment-559392245
https://github.com/soedinglab/MMseqs2/issues/247#issuecomment-559394438:473,Availability,recover,recover,473,These are my commands. ```; mmseqs createdb all.fasta all.mmseq; mmseqs linclust all.mmseq all.cluster tmpDir --threads 20 -e 1e-6 --min-seq-id 0.8 --coverage 0.8; mmseqs createtsv all.mmseq all.mmseq all.cluster all.cluster.tsv; mmseqs result2repseq all.mmseq all.cluster all.representatives; mmseqs result2flat all.mmseq all.mmseq all.representatives all.representatives.fasta --use-fasta-header; ```. I select set of clusters using `all.cluster.tsv` and the point is to recover only the clusters that i want.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/247#issuecomment-559394438
https://github.com/soedinglab/MMseqs2/issues/247#issuecomment-559394438:473,Safety,recover,recover,473,These are my commands. ```; mmseqs createdb all.fasta all.mmseq; mmseqs linclust all.mmseq all.cluster tmpDir --threads 20 -e 1e-6 --min-seq-id 0.8 --coverage 0.8; mmseqs createtsv all.mmseq all.mmseq all.cluster all.cluster.tsv; mmseqs result2repseq all.mmseq all.cluster all.representatives; mmseqs result2flat all.mmseq all.mmseq all.representatives all.representatives.fasta --use-fasta-header; ```. I select set of clusters using `all.cluster.tsv` and the point is to recover only the clusters that i want.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/247#issuecomment-559394438
https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559467190:69,Availability,avail,available,69,The `taxid` field support was added only a few weeks ago and is only available through the latest git version. It will be included in the next release.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559467190
https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559467190:143,Deployability,release,release,143,The `taxid` field support was added only a few weeks ago and is only available through the latest git version. It will be included in the next release.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559467190
https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559477953:151,Availability,down,download,151,"Thanks for your response; that's good news; I'm really looking forward this next release!; But if I want to use the taxid field right away I can still download the code from git and compile it, correct?; Guillaume",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559477953
https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559477953:81,Deployability,release,release,81,"Thanks for your response; that's good news; I'm really looking forward this next release!; But if I want to use the taxid field right away I can still download the code from git and compile it, correct?; Guillaume",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559477953
https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559496490:154,Deployability,release,releases,154,"Exactly, you can also use the precompiled binaries at https://mmseqs.com/latest/. I've also added links to the corresponding user guide commits for older releases:; https://github.com/soedinglab/MMseqs2/wiki",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559496490
https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559496490:130,Usability,guid,guide,130,"Exactly, you can also use the precompiled binaries at https://mmseqs.com/latest/. I've also added links to the corresponding user guide commits for older releases:; https://github.com/soedinglab/MMseqs2/wiki",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559496490
https://github.com/soedinglab/MMseqs2/issues/249#issuecomment-562196896:138,Deployability,release,release,138,"Okay this turned into quite the refactoring adventure. I am still not happy with the naming of the parameters, so they might change until release 11. But you can now do the following:; ```; mmseqs filterdb aln_result aln_filtered --beats-first --filter-column 2 --comparison-operator ip --comparison-value 0.8; ```; This means it keeps everything that it within 0.8 * alnScore of the first row. I'll update the documentation etc in a few days once I decide on names.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/249#issuecomment-562196896
https://github.com/soedinglab/MMseqs2/issues/249#issuecomment-562196896:400,Deployability,update,update,400,"Okay this turned into quite the refactoring adventure. I am still not happy with the naming of the parameters, so they might change until release 11. But you can now do the following:; ```; mmseqs filterdb aln_result aln_filtered --beats-first --filter-column 2 --comparison-operator ip --comparison-value 0.8; ```; This means it keeps everything that it within 0.8 * alnScore of the first row. I'll update the documentation etc in a few days once I decide on names.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/249#issuecomment-562196896
https://github.com/soedinglab/MMseqs2/issues/249#issuecomment-562196896:32,Modifiability,refactor,refactoring,32,"Okay this turned into quite the refactoring adventure. I am still not happy with the naming of the parameters, so they might change until release 11. But you can now do the following:; ```; mmseqs filterdb aln_result aln_filtered --beats-first --filter-column 2 --comparison-operator ip --comparison-value 0.8; ```; This means it keeps everything that it within 0.8 * alnScore of the first row. I'll update the documentation etc in a few days once I decide on names.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/249#issuecomment-562196896
https://github.com/soedinglab/MMseqs2/pull/250#issuecomment-560957708:56,Deployability,release,release,56,"That's really neat, thanks!. `--report-mode` will be in release 11, exists currently only in git.; I am however not sure I want to binder version in the main repository. Is it possible to add and run it from the GitHub wiki repo (https://github.com/soedinglab/MMseqs2.wiki)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/250#issuecomment-560957708
https://github.com/soedinglab/MMseqs2/pull/250#issuecomment-561373205:29,Deployability,release,release,29,"> `--report-mode` will be in release 11, exists currently only in git. Noted!. > I am however not sure I want to binder version in the main repository. Is it possible to add and run it from the GitHub wiki repo (https://github.com/soedinglab/MMseqs2.wiki)?. I think it is possible (because it's a git repo), but I never tried that with binder. Will report back.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/250#issuecomment-561373205
https://github.com/soedinglab/MMseqs2/issues/253#issuecomment-562186908:90,Availability,error,error,90,"That is odd, I'll try to reproduce the issue sometime until the end of the week. Does the error also happen if you use a memory limit less than the machine has: e.g. `--split-memory-limit 1G`?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253#issuecomment-562186908
https://github.com/soedinglab/MMseqs2/issues/253#issuecomment-562209452:136,Energy Efficiency,allocate,allocates,136,"Ah that indeed makes sense. This is something where we don't have good automatic parameter choices yet. Our prefiltering data structure allocates alphabetSize^kmerSize * 8 byte (4^15*8=8GB).; The specificity of 15-mers for a database of 10 entries is absolute overkill obviously, but its the default set value. Reducing the k-mer size to from 15 to 14 (`-k 14`) will already fix the issue. For your very short sequences you might want to reduce it even further. We will try to think of something to automatically set a sensible k-mer size for a given database size, like we do for protein searches.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253#issuecomment-562209452
https://github.com/soedinglab/MMseqs2/issues/253#issuecomment-562209452:438,Energy Efficiency,reduce,reduce,438,"Ah that indeed makes sense. This is something where we don't have good automatic parameter choices yet. Our prefiltering data structure allocates alphabetSize^kmerSize * 8 byte (4^15*8=8GB).; The specificity of 15-mers for a database of 10 entries is absolute overkill obviously, but its the default set value. Reducing the k-mer size to from 15 to 14 (`-k 14`) will already fix the issue. For your very short sequences you might want to reduce it even further. We will try to think of something to automatically set a sensible k-mer size for a given database size, like we do for protein searches.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253#issuecomment-562209452
https://github.com/soedinglab/MMseqs2/pull/255#issuecomment-563504356:384,Modifiability,inherit,inheritance,384,"No, I just saw an ad on Stack Overflow and was randomly looking for something I could improve. It’s not my project, so it’s not for me to judge, but just out of curiosity: why not use unique_ptr instead of manual memory management whenever ownership is clear? It’s safer, shorter (no delete) and has zero overhead. I get that you don’t want to use more questionable C++ features like inheritance, RTTI or exceptions, but zero-cost static GC is the most useful thing you can pick up in C++ coming from C. And range-based for just makes code more readable and thus easier to support. Iterators are out of place there, they’re from a [lower abstraction level](https://www.fluentcpp.com/2016/12/15/respect-levels-of-abstraction/) than the surrounding code. I’ll pass, but thanks :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/255#issuecomment-563504356
https://github.com/soedinglab/MMseqs2/pull/255#issuecomment-563504356:265,Safety,safe,safer,265,"No, I just saw an ad on Stack Overflow and was randomly looking for something I could improve. It’s not my project, so it’s not for me to judge, but just out of curiosity: why not use unique_ptr instead of manual memory management whenever ownership is clear? It’s safer, shorter (no delete) and has zero overhead. I get that you don’t want to use more questionable C++ features like inheritance, RTTI or exceptions, but zero-cost static GC is the most useful thing you can pick up in C++ coming from C. And range-based for just makes code more readable and thus easier to support. Iterators are out of place there, they’re from a [lower abstraction level](https://www.fluentcpp.com/2016/12/15/respect-levels-of-abstraction/) than the surrounding code. I’ll pass, but thanks :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/255#issuecomment-563504356
https://github.com/soedinglab/MMseqs2/pull/255#issuecomment-563504356:253,Usability,clear,clear,253,"No, I just saw an ad on Stack Overflow and was randomly looking for something I could improve. It’s not my project, so it’s not for me to judge, but just out of curiosity: why not use unique_ptr instead of manual memory management whenever ownership is clear? It’s safer, shorter (no delete) and has zero overhead. I get that you don’t want to use more questionable C++ features like inheritance, RTTI or exceptions, but zero-cost static GC is the most useful thing you can pick up in C++ coming from C. And range-based for just makes code more readable and thus easier to support. Iterators are out of place there, they’re from a [lower abstraction level](https://www.fluentcpp.com/2016/12/15/respect-levels-of-abstraction/) than the surrounding code. I’ll pass, but thanks :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/255#issuecomment-563504356
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-565122021:143,Availability,error,error,143,"Where you able to classify just a single sequence against our gtdb database? Maybe the internal structure of names, nodes and mapping has some error. If you could provide a small subset than I could try to figure out what goes wrong. . If you want a set of stickers though (see https://twitter.com/thesteinegger/status/1201076220957315074), sent me your address via mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-565122021
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-565441236:62,Availability,error,error,62,"No. . I took a 100 of my query sequences and it jumped to the error pretty quick. ; ```; terminate called after throwing an instance of 'std::out_of_range'; terminate called recursively; terminate called recursively; ```. So maybe it's something related with the internal structure of the names, yup. Any idea about what I should try to find? . With the subset you mean of the GTDB taxonomic database? Bc I guess that the problem is on this side. Which would be the best way of sending it? . ( I would love some stickers! Sending the mail right away :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-565441236
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-569549630:126,Availability,error,error,126,"Could you send me your _nodes.dmp, _mapping, _names.dmp? Then I could create a fake database and check if I can reproduce the error.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-569549630
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570490407:34,Availability,error,error,34,"Thank you! ; I could not find any error in the `_mapping`, `_nodes.dmp` and `_names.dmp` files. So I assume the database is fine. I have build a small test case but I was not able to reproduce the error. Could you try to search against the database ([gtdbSmallDb.zip](https://github.com/soedinglab/MMseqs2/files/4018390/gtdbSmallDb.zip)) and see if the error occurs?. mmseqs taxonomy gtdb_54kDB gtdb_54kDB /tmp/tax /tmp/tmp . It would be amazing if you could share your script to build the gtdb.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570490407
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570490407:197,Availability,error,error,197,"Thank you! ; I could not find any error in the `_mapping`, `_nodes.dmp` and `_names.dmp` files. So I assume the database is fine. I have build a small test case but I was not able to reproduce the error. Could you try to search against the database ([gtdbSmallDb.zip](https://github.com/soedinglab/MMseqs2/files/4018390/gtdbSmallDb.zip)) and see if the error occurs?. mmseqs taxonomy gtdb_54kDB gtdb_54kDB /tmp/tax /tmp/tmp . It would be amazing if you could share your script to build the gtdb.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570490407
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570490407:353,Availability,error,error,353,"Thank you! ; I could not find any error in the `_mapping`, `_nodes.dmp` and `_names.dmp` files. So I assume the database is fine. I have build a small test case but I was not able to reproduce the error. Could you try to search against the database ([gtdbSmallDb.zip](https://github.com/soedinglab/MMseqs2/files/4018390/gtdbSmallDb.zip)) and see if the error occurs?. mmseqs taxonomy gtdb_54kDB gtdb_54kDB /tmp/tax /tmp/tmp . It would be amazing if you could share your script to build the gtdb.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570490407
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570490407:151,Testability,test,test,151,"Thank you! ; I could not find any error in the `_mapping`, `_nodes.dmp` and `_names.dmp` files. So I assume the database is fine. I have build a small test case but I was not able to reproduce the error. Could you try to search against the database ([gtdbSmallDb.zip](https://github.com/soedinglab/MMseqs2/files/4018390/gtdbSmallDb.zip)) and see if the error occurs?. mmseqs taxonomy gtdb_54kDB gtdb_54kDB /tmp/tax /tmp/tmp . It would be amazing if you could share your script to build the gtdb.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570490407
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570605791:204,Availability,error,error,204,"With the database you sent, by sampling 100 sequences at random from my gene catalog i cannot obtain the taxonomy. . If I do `mmseqs taxonomy gtdb_54kDB gtdb_54kDB /tmp/tax /tmp/tmp ` it doesn't throw an error at all. . But if I take this [subsetDB.zip](https://github.com/soedinglab/MMseqs2/files/4019604/subsetDB.zip) of my query FASTA and run a taxonomic analysis with:. ```; mmseqs taxonomy --search-type 1 --threads 2 \; --lca-ranks species:genus:family:order:class:phylum:superkingdom \; subsetDB \; gtdb_54kDB taxresdb /tmp/; ```. I get a `terminate called recursively` error. . Can you run it properly? Sorry for the waste of time. . For the DB building I did the typical act of not saving properly the steps. I try to replicate it tomorrow and I send it right away. But basically I had obtained the names.dmp and nodes.dmp and from the main fasta having all the predicted coding sequences with the names as `>{orf}_{genomeid}` I generated the mapping file.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570605791
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570605791:577,Availability,error,error,577,"With the database you sent, by sampling 100 sequences at random from my gene catalog i cannot obtain the taxonomy. . If I do `mmseqs taxonomy gtdb_54kDB gtdb_54kDB /tmp/tax /tmp/tmp ` it doesn't throw an error at all. . But if I take this [subsetDB.zip](https://github.com/soedinglab/MMseqs2/files/4019604/subsetDB.zip) of my query FASTA and run a taxonomic analysis with:. ```; mmseqs taxonomy --search-type 1 --threads 2 \; --lca-ranks species:genus:family:order:class:phylum:superkingdom \; subsetDB \; gtdb_54kDB taxresdb /tmp/; ```. I get a `terminate called recursively` error. . Can you run it properly? Sorry for the waste of time. . For the DB building I did the typical act of not saving properly the steps. I try to replicate it tomorrow and I send it right away. But basically I had obtained the names.dmp and nodes.dmp and from the main fasta having all the predicted coding sequences with the names as `>{orf}_{genomeid}` I generated the mapping file.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570605791
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570605791:871,Safety,predict,predicted,871,"With the database you sent, by sampling 100 sequences at random from my gene catalog i cannot obtain the taxonomy. . If I do `mmseqs taxonomy gtdb_54kDB gtdb_54kDB /tmp/tax /tmp/tmp ` it doesn't throw an error at all. . But if I take this [subsetDB.zip](https://github.com/soedinglab/MMseqs2/files/4019604/subsetDB.zip) of my query FASTA and run a taxonomic analysis with:. ```; mmseqs taxonomy --search-type 1 --threads 2 \; --lca-ranks species:genus:family:order:class:phylum:superkingdom \; subsetDB \; gtdb_54kDB taxresdb /tmp/; ```. I get a `terminate called recursively` error. . Can you run it properly? Sorry for the waste of time. . For the DB building I did the typical act of not saving properly the steps. I try to replicate it tomorrow and I send it right away. But basically I had obtained the names.dmp and nodes.dmp and from the main fasta having all the predicted coding sequences with the names as `>{orf}_{genomeid}` I generated the mapping file.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570605791
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570608627:46,Safety,predict,predicted,46,"@adriaaula If you used the file I shared, the predicted ORFs have been dereplicated using MMseqs2 by tax_id, @martin-steinegger I will post the workflow we use when I am back from vacation.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570608627
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570666774:145,Availability,down,download,145,"@adriaaula Would it be possible to send me the `top1` input (including `.[0-9]`, `.index` `.dbtype`) of the LCA module? So that I do not need to download the full sequences of gtdb. You can find it by looking at the input parameter for the LCA call. The call should look similar to this:. lca gtdb_54kDB tmp/3061363735539572485/top1 taxresdb --compressed 0 --blacklist 12908,28384 --tax-lineage 0 --threads 12 -v 3. @genomewalker thank you a lot! I would add it to the user guide. I am sure many user would profit from it",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570666774
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570666774:474,Usability,guid,guide,474,"@adriaaula Would it be possible to send me the `top1` input (including `.[0-9]`, `.index` `.dbtype`) of the LCA module? So that I do not need to download the full sequences of gtdb. You can find it by looking at the input parameter for the LCA call. The call should look similar to this:. lca gtdb_54kDB tmp/3061363735539572485/top1 taxresdb --compressed 0 --blacklist 12908,28384 --tax-lineage 0 --threads 12 -v 3. @genomewalker thank you a lot! I would add it to the user guide. I am sure many user would profit from it",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570666774
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571332537:73,Availability,error,error,73,"Thank you for sharing your example. However I can also not reproduce the error. In your example there is only one alignment to a sequence, which `lca` classifies as `30551	species	Staphylococcus pseudintermedius`. I am running out of ideas how to help. ```; lca gtdb_54kDB top1 /Users/mad/Downloads/top_results/lca. MMseqs Version: 	0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Compressed 	0; LCA ranks; Blacklisted taxa 	12908,28384; Show taxon lineage	false; Threads 	12; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 36283 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Computing LCA; [=================================================================] 100.00% 100 0s 2ms. Taxonomy for 0 entries not found out of 1; Time for merging to lca: 0h 0m 0s 1ms; Time for processing: 0h 0m 17s 334ms; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571332537
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571332537:289,Availability,Down,Downloads,289,"Thank you for sharing your example. However I can also not reproduce the error. In your example there is only one alignment to a sequence, which `lca` classifies as `30551	species	Staphylococcus pseudintermedius`. I am running out of ideas how to help. ```; lca gtdb_54kDB top1 /Users/mad/Downloads/top_results/lca. MMseqs Version: 	0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Compressed 	0; LCA ranks; Blacklisted taxa 	12908,28384; Show taxon lineage	false; Threads 	12; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 36283 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Computing LCA; [=================================================================] 100.00% 100 0s 2ms. Taxonomy for 0 entries not found out of 1; Time for merging to lca: 0h 0m 0s 1ms; Time for processing: 0h 0m 17s 334ms; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571332537
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571332537:485,Performance,Load,Loading,485,"Thank you for sharing your example. However I can also not reproduce the error. In your example there is only one alignment to a sequence, which `lca` classifies as `30551	species	Staphylococcus pseudintermedius`. I am running out of ideas how to help. ```; lca gtdb_54kDB top1 /Users/mad/Downloads/top_results/lca. MMseqs Version: 	0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Compressed 	0; LCA ranks; Blacklisted taxa 	12908,28384; Show taxon lineage	false; Threads 	12; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 36283 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Computing LCA; [=================================================================] 100.00% 100 0s 2ms. Taxonomy for 0 entries not found out of 1; Time for merging to lca: 0h 0m 0s 1ms; Time for processing: 0h 0m 17s 334ms; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571332537
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571332537:508,Performance,Load,Loading,508,"Thank you for sharing your example. However I can also not reproduce the error. In your example there is only one alignment to a sequence, which `lca` classifies as `30551	species	Staphylococcus pseudintermedius`. I am running out of ideas how to help. ```; lca gtdb_54kDB top1 /Users/mad/Downloads/top_results/lca. MMseqs Version: 	0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Compressed 	0; LCA ranks; Blacklisted taxa 	12908,28384; Show taxon lineage	false; Threads 	12; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 36283 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Computing LCA; [=================================================================] 100.00% 100 0s 2ms. Taxonomy for 0 entries not found out of 1; Time for merging to lca: 0h 0m 0s 1ms; Time for processing: 0h 0m 17s 334ms; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571332537
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571332537:554,Performance,Load,Loading,554,"Thank you for sharing your example. However I can also not reproduce the error. In your example there is only one alignment to a sequence, which `lca` classifies as `30551	species	Staphylococcus pseudintermedius`. I am running out of ideas how to help. ```; lca gtdb_54kDB top1 /Users/mad/Downloads/top_results/lca. MMseqs Version: 	0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Compressed 	0; LCA ranks; Blacklisted taxa 	12908,28384; Show taxon lineage	false; Threads 	12; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 36283 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Computing LCA; [=================================================================] 100.00% 100 0s 2ms. Taxonomy for 0 entries not found out of 1; Time for merging to lca: 0h 0m 0s 1ms; Time for processing: 0h 0m 17s 334ms; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571332537
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571332537:607,Performance,Load,Loading,607,"Thank you for sharing your example. However I can also not reproduce the error. In your example there is only one alignment to a sequence, which `lca` classifies as `30551	species	Staphylococcus pseudintermedius`. I am running out of ideas how to help. ```; lca gtdb_54kDB top1 /Users/mad/Downloads/top_results/lca. MMseqs Version: 	0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Compressed 	0; LCA ranks; Blacklisted taxa 	12908,28384; Show taxon lineage	false; Threads 	12; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 36283 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Computing LCA; [=================================================================] 100.00% 100 0s 2ms. Taxonomy for 0 entries not found out of 1; Time for merging to lca: 0h 0m 0s 1ms; Time for processing: 0h 0m 17s 334ms; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571332537
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571346393:550,Deployability,release,release,550,"Okay we found the issue. The problem occurs because of : in the --lca-ranks parameter. The seperator should be ;. The description is wrong in our mmseqs help text. So it should be `--lca-ranks ""species;genus;family;order;class;phylum;superkingdom""`. . Thank you so much for your help to find it. But we have just noticed that ';' make some issues as parameter. If you would write `--lca-ranks species;genus;family;order;class;phylum;superkingdom` than bash will only interpret until `--lca-ranks species`. Luckily this change was not yet part of any release. So we will change it to `,` and add a proper validation of the input parameter. . Also I did not receive a mail for the stickers. My mail add is themartinsteinegger gmail com 🙂",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571346393
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571346393:604,Security,validat,validation,604,"Okay we found the issue. The problem occurs because of : in the --lca-ranks parameter. The seperator should be ;. The description is wrong in our mmseqs help text. So it should be `--lca-ranks ""species;genus;family;order;class;phylum;superkingdom""`. . Thank you so much for your help to find it. But we have just noticed that ';' make some issues as parameter. If you would write `--lca-ranks species;genus;family;order;class;phylum;superkingdom` than bash will only interpret until `--lca-ranks species`. Luckily this change was not yet part of any release. So we will change it to `,` and add a proper validation of the input parameter. . Also I did not receive a mail for the stickers. My mail add is themartinsteinegger gmail com 🙂",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571346393
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067:22,Availability,error,error,22,"I'm also getting this error. What's the current workaround? . ```bash; Reading LCA results; [=================================================================] 100.00% 3.34M 0s 428ms . Found 34 different taxa for 3340500 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/6531700399628113911/easy-taxonomy.sh: line 39: 138605 Aborted (core dumped) ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```. EDIT: Same error, new microbe:. <details><summary>Ending error here:</summary>. ```bash; Loading NCBI taxonomy; Loading nodes file ... Done, got 2213844 nodes; Loading merged file ... Done, added 56043 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Reading LCA results; [=================================================================] 100.00% 2.27K 0s 0ms . Found 2 different taxa for 2272 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/16886106523447294388/easy-taxonomy.sh: line 39: 11990 Aborted ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```; </details>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067:509,Availability,Error,Error,509,"I'm also getting this error. What's the current workaround? . ```bash; Reading LCA results; [=================================================================] 100.00% 3.34M 0s 428ms . Found 34 different taxa for 3340500 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/6531700399628113911/easy-taxonomy.sh: line 39: 138605 Aborted (core dumped) ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```. EDIT: Same error, new microbe:. <details><summary>Ending error here:</summary>. ```bash; Loading NCBI taxonomy; Loading nodes file ... Done, got 2213844 nodes; Loading merged file ... Done, added 56043 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Reading LCA results; [=================================================================] 100.00% 2.27K 0s 0ms . Found 2 different taxa for 2272 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/16886106523447294388/easy-taxonomy.sh: line 39: 11990 Aborted ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```; </details>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067:553,Availability,error,error,553,"I'm also getting this error. What's the current workaround? . ```bash; Reading LCA results; [=================================================================] 100.00% 3.34M 0s 428ms . Found 34 different taxa for 3340500 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/6531700399628113911/easy-taxonomy.sh: line 39: 138605 Aborted (core dumped) ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```. EDIT: Same error, new microbe:. <details><summary>Ending error here:</summary>. ```bash; Loading NCBI taxonomy; Loading nodes file ... Done, got 2213844 nodes; Loading merged file ... Done, added 56043 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Reading LCA results; [=================================================================] 100.00% 2.27K 0s 0ms . Found 2 different taxa for 2272 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/16886106523447294388/easy-taxonomy.sh: line 39: 11990 Aborted ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```; </details>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067:599,Availability,error,error,599,"I'm also getting this error. What's the current workaround? . ```bash; Reading LCA results; [=================================================================] 100.00% 3.34M 0s 428ms . Found 34 different taxa for 3340500 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/6531700399628113911/easy-taxonomy.sh: line 39: 138605 Aborted (core dumped) ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```. EDIT: Same error, new microbe:. <details><summary>Ending error here:</summary>. ```bash; Loading NCBI taxonomy; Loading nodes file ... Done, got 2213844 nodes; Loading merged file ... Done, added 56043 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Reading LCA results; [=================================================================] 100.00% 2.27K 0s 0ms . Found 2 different taxa for 2272 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/16886106523447294388/easy-taxonomy.sh: line 39: 11990 Aborted ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```; </details>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067:1248,Availability,Error,Error,1248,"I'm also getting this error. What's the current workaround? . ```bash; Reading LCA results; [=================================================================] 100.00% 3.34M 0s 428ms . Found 34 different taxa for 3340500 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/6531700399628113911/easy-taxonomy.sh: line 39: 138605 Aborted (core dumped) ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```. EDIT: Same error, new microbe:. <details><summary>Ending error here:</summary>. ```bash; Loading NCBI taxonomy; Loading nodes file ... Done, got 2213844 nodes; Loading merged file ... Done, added 56043 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Reading LCA results; [=================================================================] 100.00% 2.27K 0s 0ms . Found 2 different taxa for 2272 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/16886106523447294388/easy-taxonomy.sh: line 39: 11990 Aborted ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```; </details>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067:631,Performance,Load,Loading,631,"I'm also getting this error. What's the current workaround? . ```bash; Reading LCA results; [=================================================================] 100.00% 3.34M 0s 428ms . Found 34 different taxa for 3340500 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/6531700399628113911/easy-taxonomy.sh: line 39: 138605 Aborted (core dumped) ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```. EDIT: Same error, new microbe:. <details><summary>Ending error here:</summary>. ```bash; Loading NCBI taxonomy; Loading nodes file ... Done, got 2213844 nodes; Loading merged file ... Done, added 56043 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Reading LCA results; [=================================================================] 100.00% 2.27K 0s 0ms . Found 2 different taxa for 2272 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/16886106523447294388/easy-taxonomy.sh: line 39: 11990 Aborted ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```; </details>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067:654,Performance,Load,Loading,654,"I'm also getting this error. What's the current workaround? . ```bash; Reading LCA results; [=================================================================] 100.00% 3.34M 0s 428ms . Found 34 different taxa for 3340500 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/6531700399628113911/easy-taxonomy.sh: line 39: 138605 Aborted (core dumped) ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```. EDIT: Same error, new microbe:. <details><summary>Ending error here:</summary>. ```bash; Loading NCBI taxonomy; Loading nodes file ... Done, got 2213844 nodes; Loading merged file ... Done, added 56043 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Reading LCA results; [=================================================================] 100.00% 2.27K 0s 0ms . Found 2 different taxa for 2272 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/16886106523447294388/easy-taxonomy.sh: line 39: 11990 Aborted ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```; </details>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067:702,Performance,Load,Loading,702,"I'm also getting this error. What's the current workaround? . ```bash; Reading LCA results; [=================================================================] 100.00% 3.34M 0s 428ms . Found 34 different taxa for 3340500 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/6531700399628113911/easy-taxonomy.sh: line 39: 138605 Aborted (core dumped) ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```. EDIT: Same error, new microbe:. <details><summary>Ending error here:</summary>. ```bash; Loading NCBI taxonomy; Loading nodes file ... Done, got 2213844 nodes; Loading merged file ... Done, added 56043 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Reading LCA results; [=================================================================] 100.00% 2.27K 0s 0ms . Found 2 different taxa for 2272 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/16886106523447294388/easy-taxonomy.sh: line 39: 11990 Aborted ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```; </details>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067:759,Performance,Load,Loading,759,"I'm also getting this error. What's the current workaround? . ```bash; Reading LCA results; [=================================================================] 100.00% 3.34M 0s 428ms . Found 34 different taxa for 3340500 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/6531700399628113911/easy-taxonomy.sh: line 39: 138605 Aborted (core dumped) ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```. EDIT: Same error, new microbe:. <details><summary>Ending error here:</summary>. ```bash; Loading NCBI taxonomy; Loading nodes file ... Done, got 2213844 nodes; Loading merged file ... Done, added 56043 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Reading LCA results; [=================================================================] 100.00% 2.27K 0s 0ms . Found 2 different taxa for 2272 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/16886106523447294388/easy-taxonomy.sh: line 39: 11990 Aborted ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```; </details>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067:389,Safety,Abort,Aborted,389,"I'm also getting this error. What's the current workaround? . ```bash; Reading LCA results; [=================================================================] 100.00% 3.34M 0s 428ms . Found 34 different taxa for 3340500 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/6531700399628113911/easy-taxonomy.sh: line 39: 138605 Aborted (core dumped) ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```. EDIT: Same error, new microbe:. <details><summary>Ending error here:</summary>. ```bash; Loading NCBI taxonomy; Loading nodes file ... Done, got 2213844 nodes; Loading merged file ... Done, added 56043 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Reading LCA results; [=================================================================] 100.00% 2.27K 0s 0ms . Found 2 different taxa for 2272 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/16886106523447294388/easy-taxonomy.sh: line 39: 11990 Aborted ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```; </details>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067:1142,Safety,Abort,Aborted,1142,"I'm also getting this error. What's the current workaround? . ```bash; Reading LCA results; [=================================================================] 100.00% 3.34M 0s 428ms . Found 34 different taxa for 3340500 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/6531700399628113911/easy-taxonomy.sh: line 39: 138605 Aborted (core dumped) ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```. EDIT: Same error, new microbe:. <details><summary>Ending error here:</summary>. ```bash; Loading NCBI taxonomy; Loading nodes file ... Done, got 2213844 nodes; Loading merged file ... Done, added 56043 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Reading LCA results; [=================================================================] 100.00% 2.27K 0s 0ms . Found 2 different taxa for 2272 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/16886106523447294388/easy-taxonomy.sh: line 39: 11990 Aborted ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```; </details>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577261731:125,Availability,mask,mask,125,```bash; easy-taxonomy results/BG.fastq /home/cbrislawn/dbs/indexes/library results/mmseq2-BG /tmp \; --search-type 3 -s 2 --mask 0 --max-seqs 100 --max-accept 100 --max-rejected 100 . MMseqs Version: 	10.6d92c; ```. `BG.fastq` is simulated data from a single microbe. `library` is based on RefSeq. Thanks for helping me figure this out!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577261731
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-579509968:31,Deployability,release,release,31,I did run this with the newest release. Did you want to install the newest version on the master branch?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-579509968
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-579509968:56,Deployability,install,install,56,I did run this with the newest release. Did you want to install the newest version on the master branch?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-579509968
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-579539048:93,Deployability,release,release,93,"Yes, please test the most recent version on the master branch. We fixed a LCA bug. . We will release version 11 of mmseqs2 by the end of the week.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-579539048
https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-579539048:12,Testability,test,test,12,"Yes, please test the most recent version on the master branch. We fixed a LCA bug. . We will release version 11 of mmseqs2 by the end of the week.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-579539048
https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-565100808:338,Availability,fault,fault,338,"We do not have any code in mmseqs2 that writes this core dump file. This is a feature of Linux. Core dumps can be deactivated in Linux using ulimit -c 0 (see https://linux-audit.com/understand-and-configure-core-dumps-work-on-linux/). . Normally a core dump occurs because the software crashes. Did you see that MMseqs2 ended with a seg. fault? . If you want a set of stickers though (see https://twitter.com/thesteinegger/status/1201076220957315074), sent me your address via mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-565100808
https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-565100808:197,Modifiability,config,configure-core-dumps-work-on-linux,197,"We do not have any code in mmseqs2 that writes this core dump file. This is a feature of Linux. Core dumps can be deactivated in Linux using ulimit -c 0 (see https://linux-audit.com/understand-and-configure-core-dumps-work-on-linux/). . Normally a core dump occurs because the software crashes. Did you see that MMseqs2 ended with a seg. fault? . If you want a set of stickers though (see https://twitter.com/thesteinegger/status/1201076220957315074), sent me your address via mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-565100808
https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-565100808:172,Security,audit,audit,172,"We do not have any code in mmseqs2 that writes this core dump file. This is a feature of Linux. Core dumps can be deactivated in Linux using ulimit -c 0 (see https://linux-audit.com/understand-and-configure-core-dumps-work-on-linux/). . Normally a core dump occurs because the software crashes. Did you see that MMseqs2 ended with a seg. fault? . If you want a set of stickers though (see https://twitter.com/thesteinegger/status/1201076220957315074), sent me your address via mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-565100808
https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-571352026:34,Deployability,update,update,34,@Guillaume-Marseille is there any update on this issues?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-571352026
https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-571588367:25,Deployability,update,update,25,"Oops I forgot to give an update on this issue. Actually, the problem was related to a bad indexing of the database. Once the formatting and indexing were fully redone, everything started working again properly. So it was on my side that the problem occurred. . I'm sorry to have bothered you unnecessarily. Thank you again for the help. Meilleurs voeux; Guillaume",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-571588367
https://github.com/soedinglab/MMseqs2/issues/258#issuecomment-1581777454:57,Availability,error,error,57,"Hi @martin-steinegger, I've been getting this exact same error, not sure what could be happening. I am using the latest version of mmseqs2 ([`14-7e284`](https://github.com/soedinglab/MMseqs2/releases/tag/14-7e284)). What other information could I provide to help debug?. Thank you,; Vini",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258#issuecomment-1581777454
https://github.com/soedinglab/MMseqs2/issues/258#issuecomment-1581777454:191,Deployability,release,releases,191,"Hi @martin-steinegger, I've been getting this exact same error, not sure what could be happening. I am using the latest version of mmseqs2 ([`14-7e284`](https://github.com/soedinglab/MMseqs2/releases/tag/14-7e284)). What other information could I provide to help debug?. Thank you,; Vini",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258#issuecomment-1581777454
https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-567127873:64,Testability,log,log,64,"Thank you for reporting this. Could you please provide the full log? It could be possible that the PFAM profiles need too much memory (30GB might be not enough). . If you want a set of stickers though (see https://twitter.com/thesteinegger/status/1201076220957315074), sent me your address via mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-567127873
https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-567404240:373,Deployability,Update,Update,373,"Thanks for the quick response! I tried with 50G and had no success. Any clues on how much is enough? The Pfam directory is a total of 19G, and the transcriptome is <1G. The prefilter step, which is the one that crashes, says that it is using almost 1G of RAM. Please find the slurm output files here: https://gist.github.com/galicae/2565fb81f3edc84365671bc0688c5e31. EDIT: Update: running with k=5 did not improve anything - I got the same segfault.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-567404240
https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-569139201:78,Availability,error,error,78,Is it possible for you to provide the database? I would like to reproduce the error.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-569139201
https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-571879342:96,Availability,error,error,96,"FYI, I built the pfam profile database the same way recently (today, 1-7-2020) and get the same error/segfault. I'm also on CentOS-7 searching a protein database against the pfam profiles derived as @galicae above:. MMseqs Version: 10.6d92c; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. id. threshold . tmp/1941146063176889841/searchtargetprofile.sh: line 28: 48442 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""${INPUT}"" ""${2}"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}. Error: Prefilter died",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-571879342
https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-571879342:460,Availability,fault,fault,460,"FYI, I built the pfam profile database the same way recently (today, 1-7-2020) and get the same error/segfault. I'm also on CentOS-7 searching a protein database against the pfam profiles derived as @galicae above:. MMseqs Version: 10.6d92c; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. id. threshold . tmp/1941146063176889841/searchtargetprofile.sh: line 28: 48442 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""${INPUT}"" ""${2}"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}. Error: Prefilter died",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-571879342
https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-571879342:549,Availability,Error,Error,549,"FYI, I built the pfam profile database the same way recently (today, 1-7-2020) and get the same error/segfault. I'm also on CentOS-7 searching a protein database against the pfam profiles derived as @galicae above:. MMseqs Version: 10.6d92c; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. id. threshold . tmp/1941146063176889841/searchtargetprofile.sh: line 28: 48442 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""${INPUT}"" ""${2}"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}. Error: Prefilter died",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-571879342
https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-571942512:103,Availability,down,downloading,103,I took a look at the issue yesterday. The problem should already be fixed in Git. Could you please try downloading the latest statically compiled version or build MMseqs2 yourself?. We will make a new release soon.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-571942512
https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-571942512:201,Deployability,release,release,201,I took a look at the issue yesterday. The problem should already be fixed in Git. Could you please try downloading the latest statically compiled version or build MMseqs2 yourself?. We will make a new release soon.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-571942512
https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-572251733:22,Deployability,install,installed,22,"Yes, that worked. I'd installed the prior MMseqs version using conda. I had to run through some system configuration before MMseqs would compile and run from source. I didn't track the steps, though. Once I had it installed, the new version wanted me to re-index the pfam database. Once that was done the search completed quickly. Thank you for the replies!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-572251733
https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-572251733:103,Deployability,configurat,configuration,103,"Yes, that worked. I'd installed the prior MMseqs version using conda. I had to run through some system configuration before MMseqs would compile and run from source. I didn't track the steps, though. Once I had it installed, the new version wanted me to re-index the pfam database. Once that was done the search completed quickly. Thank you for the replies!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-572251733
https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-572251733:214,Deployability,install,installed,214,"Yes, that worked. I'd installed the prior MMseqs version using conda. I had to run through some system configuration before MMseqs would compile and run from source. I didn't track the steps, though. Once I had it installed, the new version wanted me to re-index the pfam database. Once that was done the search completed quickly. Thank you for the replies!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-572251733
https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-572251733:103,Modifiability,config,configuration,103,"Yes, that worked. I'd installed the prior MMseqs version using conda. I had to run through some system configuration before MMseqs would compile and run from source. I didn't track the steps, though. Once I had it installed, the new version wanted me to re-index the pfam database. Once that was done the search completed quickly. Thank you for the replies!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-572251733
https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570246191:119,Modifiability,refactor,refactoring,119,I reviewed the code and found multiple possible issues with the module for smaller datasets. I'll try to finish up the refactoring either later today or tomorrow. Thanks for the bug report. We are still doing the free sticker thing (see https://twitter.com/thesteinegger/status/1201076220957315074). If you want a set send me your address at milot at mirdita dot de.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570246191
https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570632233:131,Modifiability,refactor,refactored,131,"Disregarding how much biological sense it makes, would you mind rerunning the `clusthash` workflow above with the latest commit? I refactored some code and want to know if it improved the performance. Also the crash in `result2flat` was probably because of the wrong input database (clusterDB instead of DB_clu_rep). It should be:; ```; mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 clusterDB scafs_reps.fasta --use-fasta-header; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570632233
https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570632233:188,Performance,perform,performance,188,"Disregarding how much biological sense it makes, would you mind rerunning the `clusthash` workflow above with the latest commit? I refactored some code and want to know if it improved the performance. Also the crash in `result2flat` was probably because of the wrong input database (clusterDB instead of DB_clu_rep). It should be:; ```; mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 clusterDB scafs_reps.fasta --use-fasta-header; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570632233
https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570894592:184,Availability,error,error,184,"@martin-steinegger ; Tried the easy-linclust as suggested on the server described before, with the latest version ( 55bcdd303972bcc8a281954d199ad8013b62c673 ); I receive the following error:; `Time for merging to clu_rep: 0h 0m 21s 931ms`; `Time for processing: 0h 0m 39s 80ms`; `result2flat tmp/6767229871110119818/input tmp/6767229871110119818/input tmp/6767229871110119818/clu_rep tmp/6767229871110119818/rep_seq.fasta --use-fasta-header -v 3 `. `tmp/6767229871110119818/easycluster.sh: line 38: 4147 Segmentation fault ""$MMSEQS"" result2flat ""${TMP_PATH}/input"" ""${TMP_PATH}/input"" ""${TMP_PATH}/clu_rep"" ""${TMP_PATH}/rep_seq.fasta"" --use-fasta-header ${VERBOSITY_PAR}`; `Error: result2flat died`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570894592
https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570894592:517,Availability,fault,fault,517,"@martin-steinegger ; Tried the easy-linclust as suggested on the server described before, with the latest version ( 55bcdd303972bcc8a281954d199ad8013b62c673 ); I receive the following error:; `Time for merging to clu_rep: 0h 0m 21s 931ms`; `Time for processing: 0h 0m 39s 80ms`; `result2flat tmp/6767229871110119818/input tmp/6767229871110119818/input tmp/6767229871110119818/clu_rep tmp/6767229871110119818/rep_seq.fasta --use-fasta-header -v 3 `. `tmp/6767229871110119818/easycluster.sh: line 38: 4147 Segmentation fault ""$MMSEQS"" result2flat ""${TMP_PATH}/input"" ""${TMP_PATH}/input"" ""${TMP_PATH}/clu_rep"" ""${TMP_PATH}/rep_seq.fasta"" --use-fasta-header ${VERBOSITY_PAR}`; `Error: result2flat died`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570894592
https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570894592:674,Availability,Error,Error,674,"@martin-steinegger ; Tried the easy-linclust as suggested on the server described before, with the latest version ( 55bcdd303972bcc8a281954d199ad8013b62c673 ); I receive the following error:; `Time for merging to clu_rep: 0h 0m 21s 931ms`; `Time for processing: 0h 0m 39s 80ms`; `result2flat tmp/6767229871110119818/input tmp/6767229871110119818/input tmp/6767229871110119818/clu_rep tmp/6767229871110119818/rep_seq.fasta --use-fasta-header -v 3 `. `tmp/6767229871110119818/easycluster.sh: line 38: 4147 Segmentation fault ""$MMSEQS"" result2flat ""${TMP_PATH}/input"" ""${TMP_PATH}/input"" ""${TMP_PATH}/clu_rep"" ""${TMP_PATH}/rep_seq.fasta"" --use-fasta-header ${VERBOSITY_PAR}`; `Error: result2flat died`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570894592
https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570895614:34,Testability,log,log,34,Could you please provide the full log? Is it possible to provide your input?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570895614
https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570898956:68,Testability,log,log,68,"@martin-steinegger ; I didn't delete the ./tmp/ folder, is the full log in there? or do you mean the stdout ? ; About the input, please email me : uri dot neri at gmail dot com; Thanks !",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570898956
https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570949442:207,Performance,perform,perform,207,@UriNeri the log is only written to stdout. We do not store a copy of the log in the temp directory. So you probably need to rerun the whole job. If you use the same tmp folder and command then it will just perform the last step.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570949442
https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570949442:13,Testability,log,log,13,@UriNeri the log is only written to stdout. We do not store a copy of the log in the temp directory. So you probably need to rerun the whole job. If you use the same tmp folder and command then it will just perform the last step.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570949442
https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570949442:74,Testability,log,log,74,@UriNeri the log is only written to stdout. We do not store a copy of the log in the temp directory. So you probably need to rerun the whole job. If you use the same tmp folder and command then it will just perform the last step.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570949442
https://github.com/soedinglab/MMseqs2/pull/263#issuecomment-573955468:156,Security,access,access,156,"It's not well (ehm at all) explained, sorry about that. . If the input database is a precomputed index (created by `createindex`), this parameter allows to access the different sequences stored there. If we index a nucleotide sequences for use in a translated search we need to store both the nucleotide sequence and the translated amino acid sequence. This parameter allows to access these.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/263#issuecomment-573955468
https://github.com/soedinglab/MMseqs2/pull/263#issuecomment-573955468:378,Security,access,access,378,"It's not well (ehm at all) explained, sorry about that. . If the input database is a precomputed index (created by `createindex`), this parameter allows to access the different sequences stored there. If we index a nucleotide sequences for use in a translated search we need to store both the nucleotide sequence and the translated amino acid sequence. This parameter allows to access these.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/263#issuecomment-573955468
https://github.com/soedinglab/MMseqs2/issues/264#issuecomment-574384604:239,Safety,detect,detect,239,Thank you for the example. The issue is that `YP_009345691` is at 40% sequence identity. You need to increase the sensitivity to find the hit (see https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter). E.g. `-s 6.5` can detect the hit. mmseqs easy-search loci.fna db.faa aln tmp -s 6.5,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/264#issuecomment-574384604
https://github.com/soedinglab/MMseqs2/issues/265#issuecomment-574644066:353,Availability,error,error,353,Do you still have the full log?. Could you show the first few lines of these files:. ```; head -n 3 tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy*; head -n 3 tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2*; head -n 3 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln*; ```. That's a very weird error. It seems to be crashing in calculating E-values. That would only be possible if it's fed some corrupted input.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265#issuecomment-574644066
https://github.com/soedinglab/MMseqs2/issues/265#issuecomment-574644066:27,Testability,log,log,27,Do you still have the full log?. Could you show the first few lines of these files:. ```; head -n 3 tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy*; head -n 3 tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2*; head -n 3 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln*; ```. That's a very weird error. It seems to be crashing in calculating E-values. That would only be possible if it's fed some corrupted input.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265#issuecomment-574644066
https://github.com/soedinglab/MMseqs2/issues/265#issuecomment-574721053:117,Energy Efficiency,reduce,reduce,117,"GitHub Markdown turns them into a quote. . Everything regarding this file is alright though. That's a new feature to reduce IO that confused me. ; Not sure what else might be going wrong here though. Could you try the latest git version? Also if you rerun, could you save the full log? I am a bit at a loss on how to recreate the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265#issuecomment-574721053
https://github.com/soedinglab/MMseqs2/issues/265#issuecomment-574721053:281,Testability,log,log,281,"GitHub Markdown turns them into a quote. . Everything regarding this file is alright though. That's a new feature to reduce IO that confused me. ; Not sure what else might be going wrong here though. Could you try the latest git version? Also if you rerun, could you save the full log? I am a bit at a loss on how to recreate the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265#issuecomment-574721053
https://github.com/soedinglab/MMseqs2/issues/267#issuecomment-580775351:335,Safety,avoid,avoid,335,"I was looking for a command/option to merge the raw alignments or taxonomy files once they have been computed on different input sequence sets against the same database (and the use the convertalis or taxonomyreport commands on the merged output). Some of those alignments were already calculated, and I wondered if it was possible to avoid running again those into a merged input file on search/taxonomy commands. I really appreciate your suggestions and those by Martin and I will take into account for future searches with MMseq2. Thanks again for your help... Josep F. > However, you can bundle more queries into one run by giving more input fasta/q files to `createdb`:; > ; > ```; > mmseqs createdb fasta1.fa fasta2.fa target; > mmseqs search query target aln tmp; > ```; > ; > Now you can additionally give the `qset` column to `convertalis` to resolve from which input fasta file each search result came from.; > ; > ```; > mmseqs convertalis query target aln aln.m8 --format-output qset,query,target,etc...; > ```; > ; > You will get an output similar to this:; > ; > ```; > fasta1.fa q1 t5 ...; > fasta1.fa q2 t7 ...; > fasta2.fa q6 t1 ...; > ...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/267#issuecomment-580775351
https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580534070:1030,Availability,error,error,1030,"@dnieuw actually you encountered two separate issues. . (1) MMseqs2 performs a cascaded clustering (in default in 3 steps). This means that the centroid of a cluster can change with every iteration. So if an centroid changes then it is possible that some members that were already close to the e-value criteria do not fulfill the clustering criteria anymore. However, we do have an mode called `--cluster-reassign`. This mode removes sequences from the cascaded cluster result that do not fulfill the cluster criteria and reassigns them (if possible) to a different cluster. But this is only supported for protein sequences. This brings us already to issue (2). (2) It is currently not possible to realign DNA sequences from a clustering. The problem is, we need an anchoring point to perform a banded nucleotide alignment. The clustering format does not contain an anchor. The reason why you actually can realign some of the sequences is because In default we assume diagonal 0. . The current behavior is not good. I will add an error if cluster results are used in the alignment. Unfortunately I do not have any solution for this problem at the moment. I will keep you posted once I come up with something.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580534070
https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580534070:68,Performance,perform,performs,68,"@dnieuw actually you encountered two separate issues. . (1) MMseqs2 performs a cascaded clustering (in default in 3 steps). This means that the centroid of a cluster can change with every iteration. So if an centroid changes then it is possible that some members that were already close to the e-value criteria do not fulfill the clustering criteria anymore. However, we do have an mode called `--cluster-reassign`. This mode removes sequences from the cascaded cluster result that do not fulfill the cluster criteria and reassigns them (if possible) to a different cluster. But this is only supported for protein sequences. This brings us already to issue (2). (2) It is currently not possible to realign DNA sequences from a clustering. The problem is, we need an anchoring point to perform a banded nucleotide alignment. The clustering format does not contain an anchor. The reason why you actually can realign some of the sequences is because In default we assume diagonal 0. . The current behavior is not good. I will add an error if cluster results are used in the alignment. Unfortunately I do not have any solution for this problem at the moment. I will keep you posted once I come up with something.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580534070
https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580534070:785,Performance,perform,perform,785,"@dnieuw actually you encountered two separate issues. . (1) MMseqs2 performs a cascaded clustering (in default in 3 steps). This means that the centroid of a cluster can change with every iteration. So if an centroid changes then it is possible that some members that were already close to the e-value criteria do not fulfill the clustering criteria anymore. However, we do have an mode called `--cluster-reassign`. This mode removes sequences from the cascaded cluster result that do not fulfill the cluster criteria and reassigns them (if possible) to a different cluster. But this is only supported for protein sequences. This brings us already to issue (2). (2) It is currently not possible to realign DNA sequences from a clustering. The problem is, we need an anchoring point to perform a banded nucleotide alignment. The clustering format does not contain an anchor. The reason why you actually can realign some of the sequences is because In default we assume diagonal 0. . The current behavior is not good. I will add an error if cluster results are used in the alignment. Unfortunately I do not have any solution for this problem at the moment. I will keep you posted once I come up with something.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580534070
https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580648087:96,Performance,perform,perform,96,"Thanks @martin-steinegger for the clarification!. Regarding issue 1, would a solution be to not perform cascaded clustering using `--single-step-clustering`? I'm actually looking to perform hierarchical neighbour-joining clustering of the sequences using steps of decreasing similarity thresholds, so perhaps cascaded clustering is not necessary. Also, does this mean that the result from `mmseqs createtsv` in my current setup is incorrect for nucleotide sequences?. Regarding issue 2, what would be a (hack) solution to get the alignments? Creating a database from the cluster representatives and mapping the cluster members to that database manually using `mmseqs align`?. I followed the example you give in the [FAQ](https://github.com/soedinglab/mmseqs2/wiki#how-to-add-sequence-identities-and-other-alignment-information-to-a-clustering-result), so please indicate that this does not lead to good results in case of nucleotide sequences.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580648087
https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580648087:182,Performance,perform,perform,182,"Thanks @martin-steinegger for the clarification!. Regarding issue 1, would a solution be to not perform cascaded clustering using `--single-step-clustering`? I'm actually looking to perform hierarchical neighbour-joining clustering of the sequences using steps of decreasing similarity thresholds, so perhaps cascaded clustering is not necessary. Also, does this mean that the result from `mmseqs createtsv` in my current setup is incorrect for nucleotide sequences?. Regarding issue 2, what would be a (hack) solution to get the alignments? Creating a database from the cluster representatives and mapping the cluster members to that database manually using `mmseqs align`?. I followed the example you give in the [FAQ](https://github.com/soedinglab/mmseqs2/wiki#how-to-add-sequence-identities-and-other-alignment-information-to-a-clustering-result), so please indicate that this does not lead to good results in case of nucleotide sequences.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580648087
https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580977887:196,Availability,down,down,196,"@dnieuw not performing cascaded clustering will lead to a higher hard disk requirement since you need to keep the all against all results on disk. Also for the protein clustering it would slow it down significantly because you need to search with a high sensitivity all against all, while the cascaded increases sensitivity every iteration. The nucleotide clustering should not be affected by the sensitivity only the hard disk issue. For issue 2, I currently do not have any direct solution. It might be possible to use the normal smith waterman, but it might be very slow. How long are you sequences?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580977887
https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580977887:12,Performance,perform,performing,12,"@dnieuw not performing cascaded clustering will lead to a higher hard disk requirement since you need to keep the all against all results on disk. Also for the protein clustering it would slow it down significantly because you need to search with a high sensitivity all against all, while the cascaded increases sensitivity every iteration. The nucleotide clustering should not be affected by the sensitivity only the hard disk issue. For issue 2, I currently do not have any direct solution. It might be possible to use the normal smith waterman, but it might be very slow. How long are you sequences?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580977887
https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-581773317:54,Usability,simpl,simplify,54,"I'm already grateful for your attempt!. Let me try to simplify the problem. What I am actually looking for is not all perfectly correct alignment characteristics for a cluster, but rather an estimation of the similarity percentage between the cluster representative and the cluster member, and a start and stop position of the cluster members relative to the cluster representative. Just so I have an idea of how strong the similarity ""edge"" is and where the ""query"" fits on the ""reference"". Would those simplifications make the problem tractable?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-581773317
https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-581773317:504,Usability,simpl,simplifications,504,"I'm already grateful for your attempt!. Let me try to simplify the problem. What I am actually looking for is not all perfectly correct alignment characteristics for a cluster, but rather an estimation of the similarity percentage between the cluster representative and the cluster member, and a start and stop position of the cluster members relative to the cluster representative. Just so I have an idea of how strong the similarity ""edge"" is and where the ""query"" fits on the ""reference"". Would those simplifications make the problem tractable?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-581773317
https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-582478350:535,Deployability,pipeline,pipeline,535,"That is a great idea! . I was already wondering whether I could use the internally created alignments that the clustering is based on. I've tried your approach on the 98% id clustering tmp directory. I'm not sure if it is normal, but my `tmp/latest/` directory contains only a single ""step"" aln file: `aln_step0.1...N`. Using convertalis I was able to convert the file to a aln.tsv containing the pairs, which is great. . I'm not sure how to interpret this intermediate file though since I haven't tried understanding the guts of your pipeline ;). Here is an attempt describing it:. The aln.tsv file contains 96,181 pairs, out of 121,045 cluster pairs in the cluster.tsv output file. 96,111 pairs in the aln.tsv file are unique 35 are double, I checked a couple of entries and the alignment results are identical for these duplicates. The cluster.tsv contains 77,031 rep-member pairs, and 44,014 rep-rep singletons; The aln.tsv contains 41,864 rep-member pairs, and 54,317 rep-rep singletons. I do not really understand the why, and how of the last merging step you describe with the cluster file since the number of rep-member pairs do not match up. Thanks for thinking along!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-582478350
https://github.com/soedinglab/MMseqs2/issues/269#issuecomment-581452746:103,Modifiability,extend,extend,103,"I think it would make sense to either write a separate MMseqs2 module (`mapkeys`, `rekey`, ... ?) ; or extend `concatdbs` to read in a mapping and reassign keys.; That way we could remove the `joinAndReplace` hack completely. Would you be interested to write that? I think extending `concatdbs` makes most sense.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/269#issuecomment-581452746
https://github.com/soedinglab/MMseqs2/issues/269#issuecomment-581452746:273,Modifiability,extend,extending,273,"I think it would make sense to either write a separate MMseqs2 module (`mapkeys`, `rekey`, ... ?) ; or extend `concatdbs` to read in a mapping and reassign keys.; That way we could remove the `joinAndReplace` hack completely. Would you be interested to write that? I think extending `concatdbs` makes most sense.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/269#issuecomment-581452746
https://github.com/soedinglab/MMseqs2/issues/269#issuecomment-581457899:79,Modifiability,extend,extending,79,"Yes, this would be perfect. . > Would you be interested to write that? I think extending `concatdbs` makes most sense. At the moment I am not able to assign any time on this, but I should have some new students soon that could be interested and it would be a great way to get familiar with MMseqs2 internals. I keep you posted. Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/269#issuecomment-581457899
https://github.com/soedinglab/MMseqs2/issues/270#issuecomment-582873060:257,Availability,down,downstream,257,"We give each sequence an internal identifier and cluster based on these. The accession coming from FASTA headers is only printed out when formatting plain text results (i.e. with `convertalis` or `createtsv`). So it doesn't affect the clustering, but makes downstream processing more difficult. I would recommend to add some suffix to each accession in the input FASTA with e.g. `awk`:; ```; awk '/^>/ { cnt++; $1=$1""_""cnt } { print; }' input.fasta > input_suffix.fasta; mmseqs easy-search input_suffix.fasta targetDB result.m8 tmp; ```; Or with current git MMseqs2 you can pipe the `awk` input directly to MMseqs2:; ```; awk '/^>/ { cnt++; $1=$1""_""cnt } { print; }' input.fasta | mmseqs easy-search stdin targetDB result.m8 tmp; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/270#issuecomment-582873060
https://github.com/soedinglab/MMseqs2/issues/270#issuecomment-582873060:77,Security,access,accession,77,"We give each sequence an internal identifier and cluster based on these. The accession coming from FASTA headers is only printed out when formatting plain text results (i.e. with `convertalis` or `createtsv`). So it doesn't affect the clustering, but makes downstream processing more difficult. I would recommend to add some suffix to each accession in the input FASTA with e.g. `awk`:; ```; awk '/^>/ { cnt++; $1=$1""_""cnt } { print; }' input.fasta > input_suffix.fasta; mmseqs easy-search input_suffix.fasta targetDB result.m8 tmp; ```; Or with current git MMseqs2 you can pipe the `awk` input directly to MMseqs2:; ```; awk '/^>/ { cnt++; $1=$1""_""cnt } { print; }' input.fasta | mmseqs easy-search stdin targetDB result.m8 tmp; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/270#issuecomment-582873060
https://github.com/soedinglab/MMseqs2/issues/270#issuecomment-582873060:340,Security,access,accession,340,"We give each sequence an internal identifier and cluster based on these. The accession coming from FASTA headers is only printed out when formatting plain text results (i.e. with `convertalis` or `createtsv`). So it doesn't affect the clustering, but makes downstream processing more difficult. I would recommend to add some suffix to each accession in the input FASTA with e.g. `awk`:; ```; awk '/^>/ { cnt++; $1=$1""_""cnt } { print; }' input.fasta > input_suffix.fasta; mmseqs easy-search input_suffix.fasta targetDB result.m8 tmp; ```; Or with current git MMseqs2 you can pipe the `awk` input directly to MMseqs2:; ```; awk '/^>/ { cnt++; $1=$1""_""cnt } { print; }' input.fasta | mmseqs easy-search stdin targetDB result.m8 tmp; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/270#issuecomment-582873060
https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584029741:236,Availability,down,download,236,"The `databases` module is new, the documentation refers to the latest git version. It will be included in the next MMseqs2 release we are preparing and hopefully release in the next few days. You can already install MMseqs2 from git or download precompiled static binaries to try out the latest features.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584029741
https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584029741:123,Deployability,release,release,123,"The `databases` module is new, the documentation refers to the latest git version. It will be included in the next MMseqs2 release we are preparing and hopefully release in the next few days. You can already install MMseqs2 from git or download precompiled static binaries to try out the latest features.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584029741
https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584029741:162,Deployability,release,release,162,"The `databases` module is new, the documentation refers to the latest git version. It will be included in the next MMseqs2 release we are preparing and hopefully release in the next few days. You can already install MMseqs2 from git or download precompiled static binaries to try out the latest features.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584029741
https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584029741:208,Deployability,install,install,208,"The `databases` module is new, the documentation refers to the latest git version. It will be included in the next MMseqs2 release we are preparing and hopefully release in the next few days. You can already install MMseqs2 from git or download precompiled static binaries to try out the latest features.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584029741
https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584059103:23,Deployability,release,release,23,"10.6d92c is the latest release, however we have been working on the next release. The `databases` module will be included in the next release. If you want to try it out already please refer to the install static or compile from source sections of the user guide:. For Linux:; https://github.com/soedinglab/MMseqs2/wiki#install-static-linux-version; https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux; For macOS:; https://github.com/soedinglab/MMseqs2/wiki#install-static-macos-version",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584059103
https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584059103:73,Deployability,release,release,73,"10.6d92c is the latest release, however we have been working on the next release. The `databases` module will be included in the next release. If you want to try it out already please refer to the install static or compile from source sections of the user guide:. For Linux:; https://github.com/soedinglab/MMseqs2/wiki#install-static-linux-version; https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux; For macOS:; https://github.com/soedinglab/MMseqs2/wiki#install-static-macos-version",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584059103
https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584059103:134,Deployability,release,release,134,"10.6d92c is the latest release, however we have been working on the next release. The `databases` module will be included in the next release. If you want to try it out already please refer to the install static or compile from source sections of the user guide:. For Linux:; https://github.com/soedinglab/MMseqs2/wiki#install-static-linux-version; https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux; For macOS:; https://github.com/soedinglab/MMseqs2/wiki#install-static-macos-version",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584059103
https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584059103:197,Deployability,install,install,197,"10.6d92c is the latest release, however we have been working on the next release. The `databases` module will be included in the next release. If you want to try it out already please refer to the install static or compile from source sections of the user guide:. For Linux:; https://github.com/soedinglab/MMseqs2/wiki#install-static-linux-version; https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux; For macOS:; https://github.com/soedinglab/MMseqs2/wiki#install-static-macos-version",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584059103
https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584059103:319,Deployability,install,install-static-linux-version,319,"10.6d92c is the latest release, however we have been working on the next release. The `databases` module will be included in the next release. If you want to try it out already please refer to the install static or compile from source sections of the user guide:. For Linux:; https://github.com/soedinglab/MMseqs2/wiki#install-static-linux-version; https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux; For macOS:; https://github.com/soedinglab/MMseqs2/wiki#install-static-macos-version",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584059103
https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584059103:480,Deployability,install,install-static-macos-version,480,"10.6d92c is the latest release, however we have been working on the next release. The `databases` module will be included in the next release. If you want to try it out already please refer to the install static or compile from source sections of the user guide:. For Linux:; https://github.com/soedinglab/MMseqs2/wiki#install-static-linux-version; https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux; For macOS:; https://github.com/soedinglab/MMseqs2/wiki#install-static-macos-version",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584059103
https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584059103:256,Usability,guid,guide,256,"10.6d92c is the latest release, however we have been working on the next release. The `databases` module will be included in the next release. If you want to try it out already please refer to the install static or compile from source sections of the user guide:. For Linux:; https://github.com/soedinglab/MMseqs2/wiki#install-static-linux-version; https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux; For macOS:; https://github.com/soedinglab/MMseqs2/wiki#install-static-macos-version",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584059103
https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584098056:87,Availability,down,download,87,"I didn't add the RefSeq yet, since it's kind of annoying to work with (no single FASTA download available) and I thought that the NR, NT or Uniprot would cover most use-cases already. I might take another look at the RefSeq in the next few days. No promises though for now. By the way, if you want a set of stickers (see https://twitter.com/thesteinegger/status/1201076220957315074), send me your address to milot at mirdita de.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584098056
https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584098056:96,Availability,avail,available,96,"I didn't add the RefSeq yet, since it's kind of annoying to work with (no single FASTA download available) and I thought that the NR, NT or Uniprot would cover most use-cases already. I might take another look at the RefSeq in the next few days. No promises though for now. By the way, if you want a set of stickers (see https://twitter.com/thesteinegger/status/1201076220957315074), send me your address to milot at mirdita de.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584098056
https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-847729258:67,Availability,avail,available,67,Hi! I have tried to use the `databases` module but it is still not available. Is the new MMseqs version not released yet or have you decided to not add this module?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-847729258
https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-847729258:108,Deployability,release,released,108,Hi! I have tried to use the `databases` module but it is still not available. Is the new MMseqs version not released yet or have you decided to not add this module?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-847729258
https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-849728070:5,Availability,avail,available,5,It's available since a while. Are you running the latest release?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-849728070
https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-849728070:57,Deployability,release,release,57,It's available since a while. Are you running the latest release?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-849728070
https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-585777485:101,Modifiability,refactor,refactoring,101,"Sorry for the delay, would you mind uploading the two FASTA files (with the 17 seq each)?. I started refactoring the code and think I know whats wrong.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-585777485
https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-587062019:122,Availability,error,error,122,"I've found out that we are not dealing well with deleted sequences.; Their presence in the clustering is resulting in the error you are seeing. I am refactoring some code, but it turns out to be a bit more work.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-587062019
https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-587062019:149,Modifiability,refactor,refactoring,149,"I've found out that we are not dealing well with deleted sequences.; Their presence in the clustering is resulting in the error you are seeing. I am refactoring some code, but it turns out to be a bit more work.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-587062019
https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-625418051:53,Deployability,update,update,53,@milot-mirdita I'm running into this same issue. Any update on progress?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-625418051
https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:33,Availability,error,error,33,"I appear to be getting a similar error: . ```; $ mmseqs clusterupdate --min-seq-id 0.9 -c 0.8 ../tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/user_genes/genes_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update; clusterupdate --min-seq-id 0.9 -c 0.8 ../tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/user_genes/genes_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update. MMseqs Version: 	11.e1a1c; Seq. id. threshold 	0.9; Coverage threshold 	0.8. ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. Invalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/g",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914
https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:2442,Availability,Error,Error,2442,"==================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. Invalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index. [... a lot of output ...]. 31mSize of data: 363542; mRequested offset: 412570; Requested offset: 399738; 31mRequested offset: 367758; Requested offset: 408364; 31mRequested offset: 386682; 39mRequested offset: 393723; mRequested offset: 403458; Requested offset: 381782; 39mRequested offset: 413970; mRequested offset: 406964; m31Requested offset: 398528; Requested offset: 367053; mRequested offset: 415370; Error: result2repseq died; ```. conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 17_openblas conda-forge; libopenblas 0.3.10 pthreads_hb3c22a3_3 conda-forge; li",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914
https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:866,Deployability,Update,Update,866,"es_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update; clusterupdate --min-seq-id 0.9 -c 0.8 ../tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/user_genes/genes_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update. MMseqs Version: 	11.e1a1c; Seq. id. threshold 	0.9; Coverage threshold 	0.8. ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. Invalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index. [... a lot of output ...]. 31mSize of data: 363542; mRequested offset: 412570; Requested offset: 399738; 31mRequested offset: 367758; Requested offs",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914
https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:2640,Security,certificate,certificates,2640,"e/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index. [... a lot of output ...]. 31mSize of data: 363542; mRequested offset: 412570; Requested offset: 399738; 31mRequested offset: 367758; Requested offset: 408364; 31mRequested offset: 386682; 39mRequested offset: 393723; mRequested offset: 403458; Requested offset: 381782; 39mRequested offset: 413970; mRequested offset: 406964; m31Requested offset: 398528; Requested offset: 367053; mRequested offset: 415370; Error: result2repseq died; ```. conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 17_openblas conda-forge; libopenblas 0.3.10 pthreads_hb3c22a3_3 conda-forge; libstdcxx-ng 9.2.0 hdf63c60_2 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; llvm-openmp 8.0.1 hc9558a2_0 conda-forge; mmseqs2 11.e1a1c h2d02072_0 bioconda; ncurses 6.2 he1b5a44_1 conda-forge; numpy 1.19.0 py38h8854b6b_0 conda-forge; openmp 8.0.1 0 conda-forge; openssl 1.1.1g h516909a_0 conda-forge; perl 5.26.2 h516909a_1006 conda-forge; perl-constant 1.33 pl",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914
https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:97,Testability,test,tests,97,"I appear to be getting a similar error: . ```; $ mmseqs clusterupdate --min-seq-id 0.9 -c 0.8 ../tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/user_genes/genes_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update; clusterupdate --min-seq-id 0.9 -c 0.8 ../tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/user_genes/genes_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update. MMseqs Version: 	11.e1a1c; Seq. id. threshold 	0.9; Coverage threshold 	0.8. ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. Invalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/g",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914
https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:190,Testability,test,tests,190,"I appear to be getting a similar error: . ```; $ mmseqs clusterupdate --min-seq-id 0.9 -c 0.8 ../tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/user_genes/genes_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update; clusterupdate --min-seq-id 0.9 -c 0.8 ../tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/user_genes/genes_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update. MMseqs Version: 	11.e1a1c; Seq. id. threshold 	0.9; Coverage threshold 	0.8. ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. Invalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/g",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914
https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:435,Testability,test,tests,435,"I appear to be getting a similar error: . ```; $ mmseqs clusterupdate --min-seq-id 0.9 -c 0.8 ../tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/user_genes/genes_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update; clusterupdate --min-seq-id 0.9 -c 0.8 ../tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/user_genes/genes_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update. MMseqs Version: 	11.e1a1c; Seq. id. threshold 	0.9; Coverage threshold 	0.8. ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. Invalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/g",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914
https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:528,Testability,test,tests,528,"I appear to be getting a similar error: . ```; $ mmseqs clusterupdate --min-seq-id 0.9 -c 0.8 ../tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/user_genes/genes_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update; clusterupdate --min-seq-id 0.9 -c 0.8 ../tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/user_genes/genes_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update. MMseqs Version: 	11.e1a1c; Seq. id. threshold 	0.9; Coverage threshold 	0.8. ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. Invalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/g",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914
https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:1340,Testability,test,tests,1340,"es_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update; clusterupdate --min-seq-id 0.9 -c 0.8 ../tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/user_genes/genes_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update. MMseqs Version: 	11.e1a1c; Seq. id. threshold 	0.9; Coverage threshold 	0.8. ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. Invalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index. [... a lot of output ...]. 31mSize of data: 363542; mRequested offset: 412570; Requested offset: 399738; 31mRequested offset: 367758; Requested offs",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914
https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:1420,Testability,test,tests,1420,"es_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update; clusterupdate --min-seq-id 0.9 -c 0.8 ../tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/user_genes/genes_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update. MMseqs Version: 	11.e1a1c; Seq. id. threshold 	0.9; Coverage threshold 	0.8. ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. Invalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index. [... a lot of output ...]. 31mSize of data: 363542; mRequested offset: 412570; Requested offset: 399738; 31mRequested offset: 367758; Requested offs",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914
https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:1647,Testability,test,tests,1647,"sters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update. MMseqs Version: 	11.e1a1c; Seq. id. threshold 	0.9; Coverage threshold 	0.8. ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. Invalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index. [... a lot of output ...]. 31mSize of data: 363542; mRequested offset: 412570; Requested offset: 399738; 31mRequested offset: 367758; Requested offset: 408364; 31mRequested offset: 386682; 39mRequested offset: 393723; mRequested offset: 403458; Requested offset: 381782; 39mRequested offset: 413970; mRequested offset: 406964; m31Requested offset: 398528; Requested offset: 367053; mRequested offset: 415370; Error: result2repseq died; ```. conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 c",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914
https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:1746,Testability,test,tests,1746,"sters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update. MMseqs Version: 	11.e1a1c; Seq. id. threshold 	0.9; Coverage threshold 	0.8. ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. Invalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index. [... a lot of output ...]. 31mSize of data: 363542; mRequested offset: 412570; Requested offset: 399738; 31mRequested offset: 367758; Requested offset: 408364; 31mRequested offset: 386682; 39mRequested offset: 393723; mRequested offset: 403458; Requested offset: 381782; 39mRequested offset: 413970; mRequested offset: 406964; m31Requested offset: 398528; Requested offset: 367053; mRequested offset: 415370; Error: result2repseq died; ```. conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 c",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914
https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:1884,Testability,test,tests,1884,"s ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. Invalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index. [... a lot of output ...]. 31mSize of data: 363542; mRequested offset: 412570; Requested offset: 399738; 31mRequested offset: 367758; Requested offset: 408364; 31mRequested offset: 386682; 39mRequested offset: 393723; mRequested offset: 403458; Requested offset: 381782; 39mRequested offset: 413970; mRequested offset: 406964; m31Requested offset: 398528; Requested offset: 367053; mRequested offset: 415370; Error: result2repseq died; ```. conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914
https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:1983,Testability,test,tests,1983,"s ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. Invalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index. [... a lot of output ...]. 31mSize of data: 363542; mRequested offset: 412570; Requested offset: 399738; 31mRequested offset: 367758; Requested offset: 408364; 31mRequested offset: 386682; 39mRequested offset: 393723; mRequested offset: 403458; Requested offset: 381782; 39mRequested offset: 413970; mRequested offset: 406964; m31Requested offset: 398528; Requested offset: 367053; mRequested offset: 415370; Error: result2repseq died; ```. conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914
https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662495705:21,Deployability,update,update,21,Thanks for the quick update! FYI: there doesn't seem to be any documentation about the differences between `concatdbs` and `mergedbs`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662495705
https://github.com/soedinglab/MMseqs2/issues/273#issuecomment-2233599834:28,Deployability,update,update,28,"@milot-mirdita is there any update on this issue?. I'm on an Intel Mac (multithreading disabled) with MMseqs2 release 15.6f452 and still seeing very strange behavior from this pipeline. Using two protein FASTA files (~225 normal-length proteins each), where there are many homologs spanning the full range of percent identities and the following command:. ```; mmseqs easy-linsearch aa_1.fasta aa_2.fasta easy-linsearch-out.tsv mmseqs_tmp; ```. I get an empty output file, despite a really nice set of outputs from the `easy-search` pipeline in just a few seconds. Even stranger, when I try to make `easy-linsearch` only find high-identity HSPs, with the following:. ```; mmseqs easy-linsearch aa_1.fasta aa_2.fasta easy-linsearch-out.tsv mmseqs_tmp --min-seq-id 0.8 -c 0.8; ```. The memory utilization as profiled in the Apple `Activity Monitor` very quickly exceeds 250 GB (system only has 64 GB, so I think this means we are in disk swap territory), and I'm not sure how long it would take to finish - I killed the job after about a half hour of waiting. Input files are attached, in case you have any interest in attempting to reproduce the issue. [aa_1.fasta.gz](https://github.com/user-attachments/files/16267985/aa_1.fasta.gz); [aa_2.fasta.gz](https://github.com/user-attachments/files/16267986/aa_2.fasta.gz)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273#issuecomment-2233599834
https://github.com/soedinglab/MMseqs2/issues/273#issuecomment-2233599834:110,Deployability,release,release,110,"@milot-mirdita is there any update on this issue?. I'm on an Intel Mac (multithreading disabled) with MMseqs2 release 15.6f452 and still seeing very strange behavior from this pipeline. Using two protein FASTA files (~225 normal-length proteins each), where there are many homologs spanning the full range of percent identities and the following command:. ```; mmseqs easy-linsearch aa_1.fasta aa_2.fasta easy-linsearch-out.tsv mmseqs_tmp; ```. I get an empty output file, despite a really nice set of outputs from the `easy-search` pipeline in just a few seconds. Even stranger, when I try to make `easy-linsearch` only find high-identity HSPs, with the following:. ```; mmseqs easy-linsearch aa_1.fasta aa_2.fasta easy-linsearch-out.tsv mmseqs_tmp --min-seq-id 0.8 -c 0.8; ```. The memory utilization as profiled in the Apple `Activity Monitor` very quickly exceeds 250 GB (system only has 64 GB, so I think this means we are in disk swap territory), and I'm not sure how long it would take to finish - I killed the job after about a half hour of waiting. Input files are attached, in case you have any interest in attempting to reproduce the issue. [aa_1.fasta.gz](https://github.com/user-attachments/files/16267985/aa_1.fasta.gz); [aa_2.fasta.gz](https://github.com/user-attachments/files/16267986/aa_2.fasta.gz)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273#issuecomment-2233599834
https://github.com/soedinglab/MMseqs2/issues/273#issuecomment-2233599834:176,Deployability,pipeline,pipeline,176,"@milot-mirdita is there any update on this issue?. I'm on an Intel Mac (multithreading disabled) with MMseqs2 release 15.6f452 and still seeing very strange behavior from this pipeline. Using two protein FASTA files (~225 normal-length proteins each), where there are many homologs spanning the full range of percent identities and the following command:. ```; mmseqs easy-linsearch aa_1.fasta aa_2.fasta easy-linsearch-out.tsv mmseqs_tmp; ```. I get an empty output file, despite a really nice set of outputs from the `easy-search` pipeline in just a few seconds. Even stranger, when I try to make `easy-linsearch` only find high-identity HSPs, with the following:. ```; mmseqs easy-linsearch aa_1.fasta aa_2.fasta easy-linsearch-out.tsv mmseqs_tmp --min-seq-id 0.8 -c 0.8; ```. The memory utilization as profiled in the Apple `Activity Monitor` very quickly exceeds 250 GB (system only has 64 GB, so I think this means we are in disk swap territory), and I'm not sure how long it would take to finish - I killed the job after about a half hour of waiting. Input files are attached, in case you have any interest in attempting to reproduce the issue. [aa_1.fasta.gz](https://github.com/user-attachments/files/16267985/aa_1.fasta.gz); [aa_2.fasta.gz](https://github.com/user-attachments/files/16267986/aa_2.fasta.gz)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273#issuecomment-2233599834
https://github.com/soedinglab/MMseqs2/issues/273#issuecomment-2233599834:533,Deployability,pipeline,pipeline,533,"@milot-mirdita is there any update on this issue?. I'm on an Intel Mac (multithreading disabled) with MMseqs2 release 15.6f452 and still seeing very strange behavior from this pipeline. Using two protein FASTA files (~225 normal-length proteins each), where there are many homologs spanning the full range of percent identities and the following command:. ```; mmseqs easy-linsearch aa_1.fasta aa_2.fasta easy-linsearch-out.tsv mmseqs_tmp; ```. I get an empty output file, despite a really nice set of outputs from the `easy-search` pipeline in just a few seconds. Even stranger, when I try to make `easy-linsearch` only find high-identity HSPs, with the following:. ```; mmseqs easy-linsearch aa_1.fasta aa_2.fasta easy-linsearch-out.tsv mmseqs_tmp --min-seq-id 0.8 -c 0.8; ```. The memory utilization as profiled in the Apple `Activity Monitor` very quickly exceeds 250 GB (system only has 64 GB, so I think this means we are in disk swap territory), and I'm not sure how long it would take to finish - I killed the job after about a half hour of waiting. Input files are attached, in case you have any interest in attempting to reproduce the issue. [aa_1.fasta.gz](https://github.com/user-attachments/files/16267985/aa_1.fasta.gz); [aa_2.fasta.gz](https://github.com/user-attachments/files/16267986/aa_2.fasta.gz)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273#issuecomment-2233599834
https://github.com/soedinglab/MMseqs2/issues/273#issuecomment-2233599834:838,Energy Efficiency,Monitor,Monitor,838,"@milot-mirdita is there any update on this issue?. I'm on an Intel Mac (multithreading disabled) with MMseqs2 release 15.6f452 and still seeing very strange behavior from this pipeline. Using two protein FASTA files (~225 normal-length proteins each), where there are many homologs spanning the full range of percent identities and the following command:. ```; mmseqs easy-linsearch aa_1.fasta aa_2.fasta easy-linsearch-out.tsv mmseqs_tmp; ```. I get an empty output file, despite a really nice set of outputs from the `easy-search` pipeline in just a few seconds. Even stranger, when I try to make `easy-linsearch` only find high-identity HSPs, with the following:. ```; mmseqs easy-linsearch aa_1.fasta aa_2.fasta easy-linsearch-out.tsv mmseqs_tmp --min-seq-id 0.8 -c 0.8; ```. The memory utilization as profiled in the Apple `Activity Monitor` very quickly exceeds 250 GB (system only has 64 GB, so I think this means we are in disk swap territory), and I'm not sure how long it would take to finish - I killed the job after about a half hour of waiting. Input files are attached, in case you have any interest in attempting to reproduce the issue. [aa_1.fasta.gz](https://github.com/user-attachments/files/16267985/aa_1.fasta.gz); [aa_2.fasta.gz](https://github.com/user-attachments/files/16267986/aa_2.fasta.gz)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273#issuecomment-2233599834
https://github.com/soedinglab/MMseqs2/issues/274#issuecomment-586035999:7,Availability,error,error,7,oh the error still exists in the newest version,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/274#issuecomment-586035999
https://github.com/soedinglab/MMseqs2/issues/276#issuecomment-587122737:24,Testability,test,test,24,"This works great for my test case! Currently reclustering my larger dataset with the --cluster-reassign flag and hopeful that this will fix my problem. Thank you, marking this issue closed.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/276#issuecomment-587122737
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-589707876:442,Deployability,release,release,442,"Only the order results in one query block is conserved. Block of different queries will be more or less random due to the order in which they are processed multithreaded. You can ensure a consistent order of the result file by using `search` and then `convertalis --threads 1` instead of `easy-search`. However, a different number of result lines seems like a bug. Would you mind trying if this bug was resolved in the meantime in the newest release 11?. Can you reproduce the bug with the two FASTA files in the example folder (QUERY.fasta and DB.fasta)?. By the way, if you want a set of stickers (see https://twitter.com/thesteinegger/status/1201076220957315074), send me your address to milot at mirdita de.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-589707876
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590249182:41,Deployability,release,release,41,Does the issue also happen in the newest release?; Could you capture the full log of the different runs and upload those?. Sending us the data via email or similar is also not possible?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590249182
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590249182:78,Testability,log,log,78,Does the issue also happen in the newest release?; Could you capture the full log of the different runs and upload those?. Sending us the data via email or similar is also not possible?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590249182
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590271725:26,Deployability,install,install,26,"Let me see later if I can install the latest release (currently I have it via conda, no clue if that's updated yet).; I don't think I can send the data to you. The database includes unpublished data from various collaboration partners, so not really an option :/. I'll make another run and capture the output, the log is not a problem luckily.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590271725
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590271725:45,Deployability,release,release,45,"Let me see later if I can install the latest release (currently I have it via conda, no clue if that's updated yet).; I don't think I can send the data to you. The database includes unpublished data from various collaboration partners, so not really an option :/. I'll make another run and capture the output, the log is not a problem luckily.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590271725
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590271725:103,Deployability,update,updated,103,"Let me see later if I can install the latest release (currently I have it via conda, no clue if that's updated yet).; I don't think I can send the data to you. The database includes unpublished data from various collaboration partners, so not really an option :/. I'll make another run and capture the output, the log is not a problem luckily.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590271725
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590271725:314,Testability,log,log,314,"Let me see later if I can install the latest release (currently I have it via conda, no clue if that's updated yet).; I don't think I can send the data to you. The database includes unpublished data from various collaboration partners, so not really an option :/. I'll make another run and capture the output, the log is not a problem luckily.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590271725
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590294564:252,Availability,redundant,redundant,252,"Okay, the standard output is here https://gist.github.com/bastian-wur/1b978870a88c3ead69f51e77e65b4696 ; You can see that ""sequence pairs passed the thresholds"" is different for all 3 of them. Maybe of importance, not sure: The used database is pretty redundant. Not sure if there are many identical matches in there, but many which are pretty close to each other.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590294564
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590294564:252,Safety,redund,redundant,252,"Okay, the standard output is here https://gist.github.com/bastian-wur/1b978870a88c3ead69f51e77e65b4696 ; You can see that ""sequence pairs passed the thresholds"" is different for all 3 of them. Maybe of importance, not sure: The used database is pretty redundant. Not sure if there are many identical matches in there, but many which are pretty close to each other.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590294564
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590301981:58,Deployability,update,update,58,"Conda should be up to date, so you should be able to just update the package.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590301981
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590323885:160,Testability,benchmark,benchmark,160,"Could you send me the intermediate/result files? These do not contain neither sequences nor identifiers.; ```; THREADS=1; mmseqs easy-search /home/bastian/data/benchmark/Dyadobacter_sp__SG02_1855291.fasta /home/bastian/data/benchmark/DF_PP_full100.fa.fixed.mmseqsdb /home/bastian/data/benchmark/mmseqs_test_again/Dyadobacter_sp__SG02_1855291_vs_DF_PP_full100.fa.fixed.1core.mmseqsresult ""/home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/"" --remove-tmp-files false --threads ""${THREADS}""; tar czvf ""mmseqs-intermediate-threads${THREADS}.tar.gz"" /home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/latest/result* /home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/latest/search_tmp ; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590323885
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590323885:224,Testability,benchmark,benchmark,224,"Could you send me the intermediate/result files? These do not contain neither sequences nor identifiers.; ```; THREADS=1; mmseqs easy-search /home/bastian/data/benchmark/Dyadobacter_sp__SG02_1855291.fasta /home/bastian/data/benchmark/DF_PP_full100.fa.fixed.mmseqsdb /home/bastian/data/benchmark/mmseqs_test_again/Dyadobacter_sp__SG02_1855291_vs_DF_PP_full100.fa.fixed.1core.mmseqsresult ""/home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/"" --remove-tmp-files false --threads ""${THREADS}""; tar czvf ""mmseqs-intermediate-threads${THREADS}.tar.gz"" /home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/latest/result* /home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/latest/search_tmp ; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590323885
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590323885:285,Testability,benchmark,benchmark,285,"Could you send me the intermediate/result files? These do not contain neither sequences nor identifiers.; ```; THREADS=1; mmseqs easy-search /home/bastian/data/benchmark/Dyadobacter_sp__SG02_1855291.fasta /home/bastian/data/benchmark/DF_PP_full100.fa.fixed.mmseqsdb /home/bastian/data/benchmark/mmseqs_test_again/Dyadobacter_sp__SG02_1855291_vs_DF_PP_full100.fa.fixed.1core.mmseqsresult ""/home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/"" --remove-tmp-files false --threads ""${THREADS}""; tar czvf ""mmseqs-intermediate-threads${THREADS}.tar.gz"" /home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/latest/result* /home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/latest/search_tmp ; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590323885
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590323885:407,Testability,benchmark,benchmark,407,"Could you send me the intermediate/result files? These do not contain neither sequences nor identifiers.; ```; THREADS=1; mmseqs easy-search /home/bastian/data/benchmark/Dyadobacter_sp__SG02_1855291.fasta /home/bastian/data/benchmark/DF_PP_full100.fa.fixed.mmseqsdb /home/bastian/data/benchmark/mmseqs_test_again/Dyadobacter_sp__SG02_1855291_vs_DF_PP_full100.fa.fixed.1core.mmseqsresult ""/home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/"" --remove-tmp-files false --threads ""${THREADS}""; tar czvf ""mmseqs-intermediate-threads${THREADS}.tar.gz"" /home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/latest/result* /home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/latest/search_tmp ; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590323885
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590323885:575,Testability,benchmark,benchmark,575,"Could you send me the intermediate/result files? These do not contain neither sequences nor identifiers.; ```; THREADS=1; mmseqs easy-search /home/bastian/data/benchmark/Dyadobacter_sp__SG02_1855291.fasta /home/bastian/data/benchmark/DF_PP_full100.fa.fixed.mmseqsdb /home/bastian/data/benchmark/mmseqs_test_again/Dyadobacter_sp__SG02_1855291_vs_DF_PP_full100.fa.fixed.1core.mmseqsresult ""/home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/"" --remove-tmp-files false --threads ""${THREADS}""; tar czvf ""mmseqs-intermediate-threads${THREADS}.tar.gz"" /home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/latest/result* /home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/latest/search_tmp ; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590323885
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590323885:651,Testability,benchmark,benchmark,651,"Could you send me the intermediate/result files? These do not contain neither sequences nor identifiers.; ```; THREADS=1; mmseqs easy-search /home/bastian/data/benchmark/Dyadobacter_sp__SG02_1855291.fasta /home/bastian/data/benchmark/DF_PP_full100.fa.fixed.mmseqsdb /home/bastian/data/benchmark/mmseqs_test_again/Dyadobacter_sp__SG02_1855291_vs_DF_PP_full100.fa.fixed.1core.mmseqsresult ""/home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/"" --remove-tmp-files false --threads ""${THREADS}""; tar czvf ""mmseqs-intermediate-threads${THREADS}.tar.gz"" /home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/latest/result* /home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/latest/search_tmp ; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590323885
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590327077:30,Deployability,update,updated,30,"I'm running this right now. I updated to the latest issue, and that did not fix the problem :/ .",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590327077
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590960979:436,Availability,mask,mask,436,"With the current version?. ``` mmseqs createindex DF_PP_full100.fa.fixed.mmseqsdb tmp; createindex DF_PP_full100.fa.fixed.mmseqsdb tmp . MMseqs Version: 11.e1a1c. createindex DF_PP_full100.fa.fixed.mmseqsdb tmp . MMseqs Version: 11.e1a1c. indexdb DF_PP_full100.fa.fixed.mmseqsdb DF_PP_full100.fa.fixed.mmseqsdb --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 12 . Estimated memory consumption: 8G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Write GENERATOR (22); Index table: counting k-mers; [=================================================================] 100.00% 1.85M 1m 9s 45ms ; Index table: Masked residues: 9292781; Index table: fill; [=================================================================] 100.00% 1.85M 41s 694ms ; Index statistics; Entries: 932473123; DB size: 5823 MB ; Avg k-mer size: 14.569893 ; Top 10 k-mers ; RDWGRP 39946 ; CFVLGR 32839 ; CVRNGS 31368 ; ILTECV 26854 ; APSDIR 20240 ; ESCCGT 19857 ; DGAGDT 18909 ; YQAGTT 18726 ; SSCDAW 18697 ; PNEGGV 18425 ; Write ENTRIES (9) ; Write ENTRIESOFFSETS (10) ; Write SEQINDEXDATASIZE (15) ; Write SEQINDEXSEQOFFSET (16) ; Write SEQINDEXDATA (14) ; Write ENTRIESNUM (12) ; Write SEQCOUNT (13) ; Time for merging to DF_PP_full100.fa.fixed.mmseqsdb.idx: 0h 0m 0s 0ms ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590960979
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590960979:445,Availability,mask,mask-lower-case,445,"With the current version?. ``` mmseqs createindex DF_PP_full100.fa.fixed.mmseqsdb tmp; createindex DF_PP_full100.fa.fixed.mmseqsdb tmp . MMseqs Version: 11.e1a1c. createindex DF_PP_full100.fa.fixed.mmseqsdb tmp . MMseqs Version: 11.e1a1c. indexdb DF_PP_full100.fa.fixed.mmseqsdb DF_PP_full100.fa.fixed.mmseqsdb --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 12 . Estimated memory consumption: 8G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Write GENERATOR (22); Index table: counting k-mers; [=================================================================] 100.00% 1.85M 1m 9s 45ms ; Index table: Masked residues: 9292781; Index table: fill; [=================================================================] 100.00% 1.85M 41s 694ms ; Index statistics; Entries: 932473123; DB size: 5823 MB ; Avg k-mer size: 14.569893 ; Top 10 k-mers ; RDWGRP 39946 ; CFVLGR 32839 ; CVRNGS 31368 ; ILTECV 26854 ; APSDIR 20240 ; ESCCGT 19857 ; DGAGDT 18909 ; YQAGTT 18726 ; SSCDAW 18697 ; PNEGGV 18425 ; Write ENTRIES (9) ; Write ENTRIESOFFSETS (10) ; Write SEQINDEXDATASIZE (15) ; Write SEQINDEXSEQOFFSET (16) ; Write SEQINDEXDATA (14) ; Write ENTRIESNUM (12) ; Write SEQCOUNT (13) ; Time for merging to DF_PP_full100.fa.fixed.mmseqsdb.idx: 0h 0m 0s 0ms ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590960979
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590960979:1013,Availability,Mask,Masked,1013,"With the current version?. ``` mmseqs createindex DF_PP_full100.fa.fixed.mmseqsdb tmp; createindex DF_PP_full100.fa.fixed.mmseqsdb tmp . MMseqs Version: 11.e1a1c. createindex DF_PP_full100.fa.fixed.mmseqsdb tmp . MMseqs Version: 11.e1a1c. indexdb DF_PP_full100.fa.fixed.mmseqsdb DF_PP_full100.fa.fixed.mmseqsdb --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 12 . Estimated memory consumption: 8G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Write GENERATOR (22); Index table: counting k-mers; [=================================================================] 100.00% 1.85M 1m 9s 45ms ; Index table: Masked residues: 9292781; Index table: fill; [=================================================================] 100.00% 1.85M 41s 694ms ; Index statistics; Entries: 932473123; DB size: 5823 MB ; Avg k-mer size: 14.569893 ; Top 10 k-mers ; RDWGRP 39946 ; CFVLGR 32839 ; CVRNGS 31368 ; ILTECV 26854 ; APSDIR 20240 ; ESCCGT 19857 ; DGAGDT 18909 ; YQAGTT 18726 ; SSCDAW 18697 ; PNEGGV 18425 ; Write ENTRIES (9) ; Write ENTRIESOFFSETS (10) ; Write SEQINDEXDATASIZE (15) ; Write SEQINDEXSEQOFFSET (16) ; Write SEQINDEXDATA (14) ; Write ENTRIESNUM (12) ; Write SEQCOUNT (13) ; Time for merging to DF_PP_full100.fa.fixed.mmseqsdb.idx: 0h 0m 0s 0ms ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590960979
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590960979:610,Energy Efficiency,consumption,consumption,610,"With the current version?. ``` mmseqs createindex DF_PP_full100.fa.fixed.mmseqsdb tmp; createindex DF_PP_full100.fa.fixed.mmseqsdb tmp . MMseqs Version: 11.e1a1c. createindex DF_PP_full100.fa.fixed.mmseqsdb tmp . MMseqs Version: 11.e1a1c. indexdb DF_PP_full100.fa.fixed.mmseqsdb DF_PP_full100.fa.fixed.mmseqsdb --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 12 . Estimated memory consumption: 8G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Write GENERATOR (22); Index table: counting k-mers; [=================================================================] 100.00% 1.85M 1m 9s 45ms ; Index table: Masked residues: 9292781; Index table: fill; [=================================================================] 100.00% 1.85M 41s 694ms ; Index statistics; Entries: 932473123; DB size: 5823 MB ; Avg k-mer size: 14.569893 ; Top 10 k-mers ; RDWGRP 39946 ; CFVLGR 32839 ; CVRNGS 31368 ; ILTECV 26854 ; APSDIR 20240 ; ESCCGT 19857 ; DGAGDT 18909 ; YQAGTT 18726 ; SSCDAW 18697 ; PNEGGV 18425 ; Write ENTRIES (9) ; Write ENTRIESOFFSETS (10) ; Write SEQINDEXDATASIZE (15) ; Write SEQINDEXSEQOFFSET (16) ; Write SEQINDEXDATA (14) ; Write ENTRIESNUM (12) ; Write SEQCOUNT (13) ; Time for merging to DF_PP_full100.fa.fixed.mmseqsdb.idx: 0h 0m 0s 0ms ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590960979
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592526278:31,Availability,redundant,redundant,31,"I have problems constructing a redundant database that reproduces this issue. Something is odd with this part of the output:; ```; 320.495474 k-mers per position; 1748306 DB matches per sequence; 674 overflows; ```. Can you share some approximate composition/construction of the database so I can try to make something from public data?. I improve the reliability of your own search, I would recommend to cluster your database at a high seq.id./coverage to collapse some of the redundancy. This will speed up the search and probably also not go into the possibly problematic code branch I suspect is causing the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592526278
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592526278:352,Availability,reliab,reliability,352,"I have problems constructing a redundant database that reproduces this issue. Something is odd with this part of the output:; ```; 320.495474 k-mers per position; 1748306 DB matches per sequence; 674 overflows; ```. Can you share some approximate composition/construction of the database so I can try to make something from public data?. I improve the reliability of your own search, I would recommend to cluster your database at a high seq.id./coverage to collapse some of the redundancy. This will speed up the search and probably also not go into the possibly problematic code branch I suspect is causing the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592526278
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592526278:31,Safety,redund,redundant,31,"I have problems constructing a redundant database that reproduces this issue. Something is odd with this part of the output:; ```; 320.495474 k-mers per position; 1748306 DB matches per sequence; 674 overflows; ```. Can you share some approximate composition/construction of the database so I can try to make something from public data?. I improve the reliability of your own search, I would recommend to cluster your database at a high seq.id./coverage to collapse some of the redundancy. This will speed up the search and probably also not go into the possibly problematic code branch I suspect is causing the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592526278
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592526278:478,Safety,redund,redundancy,478,"I have problems constructing a redundant database that reproduces this issue. Something is odd with this part of the output:; ```; 320.495474 k-mers per position; 1748306 DB matches per sequence; 674 overflows; ```. Can you share some approximate composition/construction of the database so I can try to make something from public data?. I improve the reliability of your own search, I would recommend to cluster your database at a high seq.id./coverage to collapse some of the redundancy. This will speed up the search and probably also not go into the possibly problematic code branch I suspect is causing the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592526278
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592530791:230,Testability,test,testing,230,"What info would you need?; I just heard from a colleague that you must know the DB, it's the CAZy internal database. We want to replace the blast search for the initial step of our curation with something faster, so that's why we testing mmseqs right now.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592530791
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592539554:53,Availability,down,downloaded,53,"Thank you, that seems to be the hint I've needed.; I downloaded the CAZymes database from dbCAN and I can get that one to overflow too. Maybe I can reproduce the issue with that database.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592539554
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-593713722:69,Safety,safe,safe,69,Commit 14014cd0ec50049f796f153ea8a72164ff4b8b45 should be stable and safe to use. Could you please test if the instability was resolved on your dataset?. You will find precompiled binaries [here](http://mmseqs.com/archive/14014cd0ec50049f796f153ea8a72164ff4b8b45) (once the CI builds them).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-593713722
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-593713722:99,Testability,test,test,99,Commit 14014cd0ec50049f796f153ea8a72164ff4b8b45 should be stable and safe to use. Could you please test if the instability was resolved on your dataset?. You will find precompiled binaries [here](http://mmseqs.com/archive/14014cd0ec50049f796f153ea8a72164ff4b8b45) (once the CI builds them).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-593713722
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-594067890:80,Availability,avail,available,80,"Especially for this search you might want to run the new exhaustive search mode available through the `--slice-search` parameter. MMseqs2 has a limitation on the number of reported prefiltering hits (by default 300 with `--max-seqs`). Increasing this parameter could explode the disk space use though. We developed this exhaustive search mode to be more efficient with disk use, but trading off some runtime for that.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-594067890
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-594067890:354,Energy Efficiency,efficient,efficient,354,"Especially for this search you might want to run the new exhaustive search mode available through the `--slice-search` parameter. MMseqs2 has a limitation on the number of reported prefiltering hits (by default 300 with `--max-seqs`). Increasing this parameter could explode the disk space use though. We developed this exhaustive search mode to be more efficient with disk use, but trading off some runtime for that.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-594067890
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597641644:163,Testability,test,test,163,"Sorry, as mentioned, I am having some time issues right now.; I checked the search in the reverse way, it's also identical. I don't understand what you want me to test right now. I can't find the --slice-search parameter anywhere, or maybe I'm looking wrong. If you could clarify, then I'll test this too.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597641644
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597641644:291,Testability,test,test,291,"Sorry, as mentioned, I am having some time issues right now.; I checked the search in the reverse way, it's also identical. I don't understand what you want me to test right now. I can't find the --slice-search parameter anywhere, or maybe I'm looking wrong. If you could clarify, then I'll test this too.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597641644
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917:502,Availability,redundant,redundant,502,"I don't know your exact use-case and if this is actually important for you, I am just warning you that how you are currently using MMseqs2, might be a bit problematic with this specific target database. The results you are already getting with your current usage might already by completely fine for your current use-case. I will just explain what you could do if you might want more ""complete"" results. Furthermore, this is unrelated to the stability problem (that one should now be solved). The very redundant target database you are using is a bit of a weak point in MMseqs2. ; The MMseqs2 prefiltering module reports all the best double-consecutive-kmer matches either down to the `--min-ungapped-score` threshold or as many as `--max-seqs` allows. The `--min-ungapped-score` criterion removes many hits that could never reach a good E-value anyway. . The `--max-seqs` parameters prevents a explosion of disk space while accepting the risk of losing some redundant hits. This is not that much of a problem since we normally search against the representatives of a clustered database, which are sufficiently dissimilar to not enter this case. Now you have a target database with many very similar sequence and will run into this case. The effect is that a good (maybe even the best) hit in the target database might not be found, since its outside the limit given by `--max-seqs`. We have a different search mode that accepts some inefficiency, while dealing with correctly with very redundant database and you can access this mode by passing the `--slice-search` parameter to either `easy-search` or `search`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917:673,Availability,down,down,673,"I don't know your exact use-case and if this is actually important for you, I am just warning you that how you are currently using MMseqs2, might be a bit problematic with this specific target database. The results you are already getting with your current usage might already by completely fine for your current use-case. I will just explain what you could do if you might want more ""complete"" results. Furthermore, this is unrelated to the stability problem (that one should now be solved). The very redundant target database you are using is a bit of a weak point in MMseqs2. ; The MMseqs2 prefiltering module reports all the best double-consecutive-kmer matches either down to the `--min-ungapped-score` threshold or as many as `--max-seqs` allows. The `--min-ungapped-score` criterion removes many hits that could never reach a good E-value anyway. . The `--max-seqs` parameters prevents a explosion of disk space while accepting the risk of losing some redundant hits. This is not that much of a problem since we normally search against the representatives of a clustered database, which are sufficiently dissimilar to not enter this case. Now you have a target database with many very similar sequence and will run into this case. The effect is that a good (maybe even the best) hit in the target database might not be found, since its outside the limit given by `--max-seqs`. We have a different search mode that accepts some inefficiency, while dealing with correctly with very redundant database and you can access this mode by passing the `--slice-search` parameter to either `easy-search` or `search`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917:959,Availability,redundant,redundant,959,"I don't know your exact use-case and if this is actually important for you, I am just warning you that how you are currently using MMseqs2, might be a bit problematic with this specific target database. The results you are already getting with your current usage might already by completely fine for your current use-case. I will just explain what you could do if you might want more ""complete"" results. Furthermore, this is unrelated to the stability problem (that one should now be solved). The very redundant target database you are using is a bit of a weak point in MMseqs2. ; The MMseqs2 prefiltering module reports all the best double-consecutive-kmer matches either down to the `--min-ungapped-score` threshold or as many as `--max-seqs` allows. The `--min-ungapped-score` criterion removes many hits that could never reach a good E-value anyway. . The `--max-seqs` parameters prevents a explosion of disk space while accepting the risk of losing some redundant hits. This is not that much of a problem since we normally search against the representatives of a clustered database, which are sufficiently dissimilar to not enter this case. Now you have a target database with many very similar sequence and will run into this case. The effect is that a good (maybe even the best) hit in the target database might not be found, since its outside the limit given by `--max-seqs`. We have a different search mode that accepts some inefficiency, while dealing with correctly with very redundant database and you can access this mode by passing the `--slice-search` parameter to either `easy-search` or `search`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917:1487,Availability,redundant,redundant,1487,"I don't know your exact use-case and if this is actually important for you, I am just warning you that how you are currently using MMseqs2, might be a bit problematic with this specific target database. The results you are already getting with your current usage might already by completely fine for your current use-case. I will just explain what you could do if you might want more ""complete"" results. Furthermore, this is unrelated to the stability problem (that one should now be solved). The very redundant target database you are using is a bit of a weak point in MMseqs2. ; The MMseqs2 prefiltering module reports all the best double-consecutive-kmer matches either down to the `--min-ungapped-score` threshold or as many as `--max-seqs` allows. The `--min-ungapped-score` criterion removes many hits that could never reach a good E-value anyway. . The `--max-seqs` parameters prevents a explosion of disk space while accepting the risk of losing some redundant hits. This is not that much of a problem since we normally search against the representatives of a clustered database, which are sufficiently dissimilar to not enter this case. Now you have a target database with many very similar sequence and will run into this case. The effect is that a good (maybe even the best) hit in the target database might not be found, since its outside the limit given by `--max-seqs`. We have a different search mode that accepts some inefficiency, while dealing with correctly with very redundant database and you can access this mode by passing the `--slice-search` parameter to either `easy-search` or `search`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917:502,Safety,redund,redundant,502,"I don't know your exact use-case and if this is actually important for you, I am just warning you that how you are currently using MMseqs2, might be a bit problematic with this specific target database. The results you are already getting with your current usage might already by completely fine for your current use-case. I will just explain what you could do if you might want more ""complete"" results. Furthermore, this is unrelated to the stability problem (that one should now be solved). The very redundant target database you are using is a bit of a weak point in MMseqs2. ; The MMseqs2 prefiltering module reports all the best double-consecutive-kmer matches either down to the `--min-ungapped-score` threshold or as many as `--max-seqs` allows. The `--min-ungapped-score` criterion removes many hits that could never reach a good E-value anyway. . The `--max-seqs` parameters prevents a explosion of disk space while accepting the risk of losing some redundant hits. This is not that much of a problem since we normally search against the representatives of a clustered database, which are sufficiently dissimilar to not enter this case. Now you have a target database with many very similar sequence and will run into this case. The effect is that a good (maybe even the best) hit in the target database might not be found, since its outside the limit given by `--max-seqs`. We have a different search mode that accepts some inefficiency, while dealing with correctly with very redundant database and you can access this mode by passing the `--slice-search` parameter to either `easy-search` or `search`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917:939,Safety,risk,risk,939,"I don't know your exact use-case and if this is actually important for you, I am just warning you that how you are currently using MMseqs2, might be a bit problematic with this specific target database. The results you are already getting with your current usage might already by completely fine for your current use-case. I will just explain what you could do if you might want more ""complete"" results. Furthermore, this is unrelated to the stability problem (that one should now be solved). The very redundant target database you are using is a bit of a weak point in MMseqs2. ; The MMseqs2 prefiltering module reports all the best double-consecutive-kmer matches either down to the `--min-ungapped-score` threshold or as many as `--max-seqs` allows. The `--min-ungapped-score` criterion removes many hits that could never reach a good E-value anyway. . The `--max-seqs` parameters prevents a explosion of disk space while accepting the risk of losing some redundant hits. This is not that much of a problem since we normally search against the representatives of a clustered database, which are sufficiently dissimilar to not enter this case. Now you have a target database with many very similar sequence and will run into this case. The effect is that a good (maybe even the best) hit in the target database might not be found, since its outside the limit given by `--max-seqs`. We have a different search mode that accepts some inefficiency, while dealing with correctly with very redundant database and you can access this mode by passing the `--slice-search` parameter to either `easy-search` or `search`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917:959,Safety,redund,redundant,959,"I don't know your exact use-case and if this is actually important for you, I am just warning you that how you are currently using MMseqs2, might be a bit problematic with this specific target database. The results you are already getting with your current usage might already by completely fine for your current use-case. I will just explain what you could do if you might want more ""complete"" results. Furthermore, this is unrelated to the stability problem (that one should now be solved). The very redundant target database you are using is a bit of a weak point in MMseqs2. ; The MMseqs2 prefiltering module reports all the best double-consecutive-kmer matches either down to the `--min-ungapped-score` threshold or as many as `--max-seqs` allows. The `--min-ungapped-score` criterion removes many hits that could never reach a good E-value anyway. . The `--max-seqs` parameters prevents a explosion of disk space while accepting the risk of losing some redundant hits. This is not that much of a problem since we normally search against the representatives of a clustered database, which are sufficiently dissimilar to not enter this case. Now you have a target database with many very similar sequence and will run into this case. The effect is that a good (maybe even the best) hit in the target database might not be found, since its outside the limit given by `--max-seqs`. We have a different search mode that accepts some inefficiency, while dealing with correctly with very redundant database and you can access this mode by passing the `--slice-search` parameter to either `easy-search` or `search`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917:1487,Safety,redund,redundant,1487,"I don't know your exact use-case and if this is actually important for you, I am just warning you that how you are currently using MMseqs2, might be a bit problematic with this specific target database. The results you are already getting with your current usage might already by completely fine for your current use-case. I will just explain what you could do if you might want more ""complete"" results. Furthermore, this is unrelated to the stability problem (that one should now be solved). The very redundant target database you are using is a bit of a weak point in MMseqs2. ; The MMseqs2 prefiltering module reports all the best double-consecutive-kmer matches either down to the `--min-ungapped-score` threshold or as many as `--max-seqs` allows. The `--min-ungapped-score` criterion removes many hits that could never reach a good E-value anyway. . The `--max-seqs` parameters prevents a explosion of disk space while accepting the risk of losing some redundant hits. This is not that much of a problem since we normally search against the representatives of a clustered database, which are sufficiently dissimilar to not enter this case. Now you have a target database with many very similar sequence and will run into this case. The effect is that a good (maybe even the best) hit in the target database might not be found, since its outside the limit given by `--max-seqs`. We have a different search mode that accepts some inefficiency, while dealing with correctly with very redundant database and you can access this mode by passing the `--slice-search` parameter to either `easy-search` or `search`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917
https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917:1518,Security,access,access,1518,"I don't know your exact use-case and if this is actually important for you, I am just warning you that how you are currently using MMseqs2, might be a bit problematic with this specific target database. The results you are already getting with your current usage might already by completely fine for your current use-case. I will just explain what you could do if you might want more ""complete"" results. Furthermore, this is unrelated to the stability problem (that one should now be solved). The very redundant target database you are using is a bit of a weak point in MMseqs2. ; The MMseqs2 prefiltering module reports all the best double-consecutive-kmer matches either down to the `--min-ungapped-score` threshold or as many as `--max-seqs` allows. The `--min-ungapped-score` criterion removes many hits that could never reach a good E-value anyway. . The `--max-seqs` parameters prevents a explosion of disk space while accepting the risk of losing some redundant hits. This is not that much of a problem since we normally search against the representatives of a clustered database, which are sufficiently dissimilar to not enter this case. Now you have a target database with many very similar sequence and will run into this case. The effect is that a good (maybe even the best) hit in the target database might not be found, since its outside the limit given by `--max-seqs`. We have a different search mode that accepts some inefficiency, while dealing with correctly with very redundant database and you can access this mode by passing the `--slice-search` parameter to either `easy-search` or `search`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917
https://github.com/soedinglab/MMseqs2/issues/278#issuecomment-590570666:148,Safety,safe,safety,148,"Can you run `createindex` with manually passing it `--split 8` to recreate the index with more subsets?; Right now it probably has a very small RAM safety margin and could crash with a larger query sequence set. The warnings seem to be quite weird and buggy, we have to take a look at that. By the way, if you want a set of stickers (see https://twitter.com/thesteinegger/status/1201076220957315074), send me your address to milot at mirdita de.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278#issuecomment-590570666
https://github.com/soedinglab/MMseqs2/issues/279#issuecomment-590826644:142,Performance,perform,performs,142,"> Cascaded clustering being the default for mmseqs cluster, this would mean that the search module is not used?. In default, `mmseqs cluster` performs first `linclust` followed by cascaded clustering. . > When using mmseqs search args I can get the similarity file in blast format (using convertalis). Therefore, is it also possible to get this file at the end of clustering step, if it uses mmseqs search algorithm as I saw p.14?. It is possible to get the similarity file by realigning the cluster. Following is an example:. mmseqs cluster seq clu tmp ; mmseqs align seq seq clu aln; mmseqs convertalis seq seq aln aln.m8",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/279#issuecomment-590826644
https://github.com/soedinglab/MMseqs2/issues/279#issuecomment-590829868:29,Performance,perform,performs,29,"> In default, mmseqs cluster performs first linclust followed by cascaded clustering. So, `mmseqs search` algorithm is never used for clustering?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/279#issuecomment-590829868
https://github.com/soedinglab/MMseqs2/issues/279#issuecomment-590835391:42,Performance,perform,performs,42,"Each iteration of the cascaded clustering performs a prefilter (`prefilter`), gapped SW alignment (`align`) and a clustering (`clust`).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/279#issuecomment-590835391
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591413045:515,Availability,fault,fault,515,"@milot-mirdita sorry, search also crashes - Tried ; `mmseqs search $querydb $targetdb $resultsdb ./tmp/ --threads $THREADS --search-type 3 -s 1 --min-seq-id 0.79 --min-aln-len 119 -e 0.00001 --max-seqs 50 --max-accept 10`; crashed with the :; ```; Target database size: 288915877 type: Nucleotide; Process prefiltering step 1 of 7. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [> ] 0.00% 1 eta /scratch200/urineri/tmp2//10416504770660353718/blastp.sh: line 99: 25242 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591413045
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591413045:618,Availability,Error,Error,618,"@milot-mirdita sorry, search also crashes - Tried ; `mmseqs search $querydb $targetdb $resultsdb ./tmp/ --threads $THREADS --search-type 3 -s 1 --min-seq-id 0.79 --min-aln-len 119 -e 0.00001 --max-seqs 50 --max-accept 10`; crashed with the :; ```; Target database size: 288915877 type: Nucleotide; Process prefiltering step 1 of 7. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [> ] 0.00% 1 eta /scratch200/urineri/tmp2//10416504770660353718/blastp.sh: line 99: 25242 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591413045
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591413045:641,Availability,Error,Error,641,"@milot-mirdita sorry, search also crashes - Tried ; `mmseqs search $querydb $targetdb $resultsdb ./tmp/ --threads $THREADS --search-type 3 -s 1 --min-seq-id 0.79 --min-aln-len 119 -e 0.00001 --max-seqs 50 --max-accept 10`; crashed with the :; ```; Target database size: 288915877 type: Nucleotide; Process prefiltering step 1 of 7. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [> ] 0.00% 1 eta /scratch200/urineri/tmp2//10416504770660353718/blastp.sh: line 99: 25242 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591413045
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591439764:153,Deployability,install,install,153,"Ran but seems somethign is missing for the `bt`; ```; ....; Inferior 1 (process 27381) exited with code 01]; Missing separate debuginfos, use: debuginfo-install bash-4.2.46-28.el7.x86_64; (gdb) bt; No stack. ```. Edit: ran `uname -a`; `Linux compute-0-18.power5 3.10.0-693.el7.x86_64`; Edit 2: but `bash --version`; `GNU bash, version 4.2.46(2)-release (x86_64-redhat-linux-gnu)`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591439764
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591439764:345,Deployability,release,release,345,"Ran but seems somethign is missing for the `bt`; ```; ....; Inferior 1 (process 27381) exited with code 01]; Missing separate debuginfos, use: debuginfo-install bash-4.2.46-28.el7.x86_64; (gdb) bt; No stack. ```. Edit: ran `uname -a`; `Linux compute-0-18.power5 3.10.0-693.el7.x86_64`; Edit 2: but `bash --version`; `GNU bash, version 4.2.46(2)-release (x86_64-redhat-linux-gnu)`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591439764
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591447563:78,Safety,abort,abort,78,Can you set some breakpoints and run again:; ```; b exit; b _exit; b _Exit; b abort; r; ... wait until crash/exit ...; bt; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591447563
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591466407:197,Availability,fault,fault,197,"Update:; ```; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [> ] 0.00% 1 eta /scratch200/urineri/tmp2//13943365082736394582/blastp.sh: line 99: 34827 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. Breakpoint 1, 0x00002aaaab136c10 in exit () from /lib64/libc.so.6; Missing separate debuginfos, use: debuginfo-install bash-4.2.46-28.el7.x86_64; (gdb) bt; (gdb) bt; #0 0x00002aaaab136c10 in exit () from /lib64/libc.so.6; #1 0x000000000041d9de in exit_shell (); #2 0x000000000041c8f9 in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591466407
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591466407:300,Availability,Error,Error,300,"Update:; ```; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [> ] 0.00% 1 eta /scratch200/urineri/tmp2//13943365082736394582/blastp.sh: line 99: 34827 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. Breakpoint 1, 0x00002aaaab136c10 in exit () from /lib64/libc.so.6; Missing separate debuginfos, use: debuginfo-install bash-4.2.46-28.el7.x86_64; (gdb) bt; (gdb) bt; #0 0x00002aaaab136c10 in exit () from /lib64/libc.so.6; #1 0x000000000041d9de in exit_shell (); #2 0x000000000041c8f9 in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591466407
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591466407:323,Availability,Error,Error,323,"Update:; ```; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [> ] 0.00% 1 eta /scratch200/urineri/tmp2//13943365082736394582/blastp.sh: line 99: 34827 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. Breakpoint 1, 0x00002aaaab136c10 in exit () from /lib64/libc.so.6; Missing separate debuginfos, use: debuginfo-install bash-4.2.46-28.el7.x86_64; (gdb) bt; (gdb) bt; #0 0x00002aaaab136c10 in exit () from /lib64/libc.so.6; #1 0x000000000041d9de in exit_shell (); #2 0x000000000041c8f9 in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591466407
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591466407:0,Deployability,Update,Update,0,"Update:; ```; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [> ] 0.00% 1 eta /scratch200/urineri/tmp2//13943365082736394582/blastp.sh: line 99: 34827 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. Breakpoint 1, 0x00002aaaab136c10 in exit () from /lib64/libc.so.6; Missing separate debuginfos, use: debuginfo-install bash-4.2.46-28.el7.x86_64; (gdb) bt; (gdb) bt; #0 0x00002aaaab136c10 in exit () from /lib64/libc.so.6; #1 0x000000000041d9de in exit_shell (); #2 0x000000000041c8f9 in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591466407
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591466407:459,Deployability,install,install,459,"Update:; ```; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [> ] 0.00% 1 eta /scratch200/urineri/tmp2//13943365082736394582/blastp.sh: line 99: 34827 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. Breakpoint 1, 0x00002aaaab136c10 in exit () from /lib64/libc.so.6; Missing separate debuginfos, use: debuginfo-install bash-4.2.46-28.el7.x86_64; (gdb) bt; (gdb) bt; #0 0x00002aaaab136c10 in exit () from /lib64/libc.so.6; #1 0x000000000041d9de in exit_shell (); #2 0x000000000041c8f9 in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591466407
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591468961:493,Availability,mask,mask,493,"Ah that makes sense, sorry.; You need to copy the call to the prefilter module from the output log and only run that in GDB. E.g. from what you posted above from createindex, you would look for a line starting with prefilter and copy that full line:; ```; Time for processing: 0h 23m 17s 335ms; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 ; =>; gdb --args mmseqs indexdb ....; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591468961
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591468961:502,Availability,mask,mask-lower-case,502,"Ah that makes sense, sorry.; You need to copy the call to the prefilter module from the output log and only run that in GDB. E.g. from what you posted above from createindex, you would look for a line starting with prefilter and copy that full line:; ```; Time for processing: 0h 23m 17s 335ms; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 ; =>; gdb --args mmseqs indexdb ....; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591468961
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591468961:95,Testability,log,log,95,"Ah that makes sense, sorry.; You need to copy the call to the prefilter module from the output log and only run that in GDB. E.g. from what you posted above from createindex, you would look for a line starting with prefilter and copy that full line:; ```; Time for processing: 0h 23m 17s 335ms; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 ; =>; gdb --args mmseqs indexdb ....; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591468961
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:251,Availability,mask,mask,251,"ok, updated output (ran the gdb as suggested):; ```; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . MMseqs Version: 	f966bfa62a2b52d4821e908ac9e25808d1be0b81; Seed substitution matrix	nucl:nucleotide.out,aa:VTML80.out; K-mer size 	15; Alphabet size 	21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Threads 	48; Verbosity 	3. Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; tantan: warning: possible numeric inaccuracy ] 0.00% 1 eta -; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or d",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:260,Availability,mask,mask-lower-case,260,"ok, updated output (ran the gdb as suggested):; ```; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . MMseqs Version: 	f966bfa62a2b52d4821e908ac9e25808d1be0b81; Seed substitution matrix	nucl:nucleotide.out,aa:VTML80.out; K-mer size 	15; Alphabet size 	21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Threads 	48; Verbosity 	3. Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; tantan: warning: possible numeric inaccuracy ] 0.00% 1 eta -; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or d",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:641,Availability,Mask,Mask,641,"ok, updated output (ran the gdb as suggested):; ```; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . MMseqs Version: 	f966bfa62a2b52d4821e908ac9e25808d1be0b81; Seed substitution matrix	nucl:nucleotide.out,aa:VTML80.out; K-mer size 	15; Alphabet size 	21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Threads 	48; Verbosity 	3. Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; tantan: warning: possible numeric inaccuracy ] 0.00% 1 eta -; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or d",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:659,Availability,Mask,Mask,659,"ok, updated output (ran the gdb as suggested):; ```; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . MMseqs Version: 	f966bfa62a2b52d4821e908ac9e25808d1be0b81; Seed substitution matrix	nucl:nucleotide.out,aa:VTML80.out; K-mer size 	15; Alphabet size 	21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Threads 	48; Verbosity 	3. Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; tantan: warning: possible numeric inaccuracy ] 0.00% 1 eta -; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or d",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:1788,Availability,fault,fault,1788,"mpatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Threads 	48; Verbosity 	3. Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; tantan: warning: possible numeric inaccuracy ] 0.00% 1 eta -; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or directory.; (gdb) ; (gdb) bt; #0 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; #1 calcRepeatProbs (letterProbs=0x2ab9b800f7cc, this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:310; #2 tantan::getProbabilities (; seqBeg=seqBeg@entry=0x2ab9b8000c70 ""\004\004\003 \004"", ; seqEnd=seqEnd@entry=0x2ab9b8000c76 """", maxRepeatOffset=<optimized out>, ; likelihoodRatioMatrix=<optimized out>, repeatProb=<optimized out>, ; repeatEndProb=<optimized out>, repeatOffsetProbDecay=<optimized out>, ; firstGapProb=<optimized out>, otherGapProb=<optimized out>, ; probabilities=probabilities@entry=0x2ab9b800f7c0); at /home/vsts/work/1/s/src/commons/tantan.cpp:375; #3 0x00000000005cabf8 in tantan:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:2769,Availability,mask,maskSequences,2769,": forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or directory.; (gdb) ; (gdb) bt; #0 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; #1 calcRepeatProbs (letterProbs=0x2ab9b800f7cc, this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:310; #2 tantan::getProbabilities (; seqBeg=seqBeg@entry=0x2ab9b8000c70 ""\004\004\003 \004"", ; seqEnd=seqEnd@entry=0x2ab9b8000c76 """", maxRepeatOffset=<optimized out>, ; likelihoodRatioMatrix=<optimized out>, repeatProb=<optimized out>, ; repeatEndProb=<optimized out>, repeatOffsetProbDecay=<optimized out>, ; firstGapProb=<optimized out>, otherGapProb=<optimized out>, ; probabilities=probabilities@entry=0x2ab9b800f7c0); at /home/vsts/work/1/s/src/commons/tantan.cpp:375; #3 0x00000000005cabf8 in tantan::maskSequences (; seqBeg=0x2ab9b8000c70 ""\004\004\003 \004"", seqEnd=0x2ab9b8000c76 """", ; maxRepeatOffset=<optimized out>, likelihoodRatioMatrix=0xc570a0, ; repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003, ; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, ; minMaskProb=0.90000000000000002, ; maskTable=0xc57f30 '\004' <repeats 200 times>...); at /home/vsts/work/1/s/src/commons/tantan.cpp:357; #4 0x00000000005de120 in IndexBuilder::fillDatabase (); at /home/vsts/work/1/s/src/prefiltering/IndexBuilder.cpp:144; #5 0x000000000076baee in gomp_thread_start (). ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:3108,Availability,mask,maskTable,3108,": forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or directory.; (gdb) ; (gdb) bt; #0 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; #1 calcRepeatProbs (letterProbs=0x2ab9b800f7cc, this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:310; #2 tantan::getProbabilities (; seqBeg=seqBeg@entry=0x2ab9b8000c70 ""\004\004\003 \004"", ; seqEnd=seqEnd@entry=0x2ab9b8000c76 """", maxRepeatOffset=<optimized out>, ; likelihoodRatioMatrix=<optimized out>, repeatProb=<optimized out>, ; repeatEndProb=<optimized out>, repeatOffsetProbDecay=<optimized out>, ; firstGapProb=<optimized out>, otherGapProb=<optimized out>, ; probabilities=probabilities@entry=0x2ab9b800f7c0); at /home/vsts/work/1/s/src/commons/tantan.cpp:375; #3 0x00000000005cabf8 in tantan::maskSequences (; seqBeg=0x2ab9b8000c70 ""\004\004\003 \004"", seqEnd=0x2ab9b8000c76 """", ; maxRepeatOffset=<optimized out>, likelihoodRatioMatrix=0xc570a0, ; repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003, ; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, ; minMaskProb=0.90000000000000002, ; maskTable=0xc57f30 '\004' <repeats 200 times>...); at /home/vsts/work/1/s/src/commons/tantan.cpp:357; #4 0x00000000005de120 in IndexBuilder::fillDatabase (); at /home/vsts/work/1/s/src/prefiltering/IndexBuilder.cpp:144; #5 0x000000000076baee in gomp_thread_start (). ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:4,Deployability,update,updated,4,"ok, updated output (ran the gdb as suggested):; ```; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . MMseqs Version: 	f966bfa62a2b52d4821e908ac9e25808d1be0b81; Seed substitution matrix	nucl:nucleotide.out,aa:VTML80.out; K-mer size 	15; Alphabet size 	21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Threads 	48; Verbosity 	3. Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; tantan: warning: possible numeric inaccuracy ] 0.00% 1 eta -; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or d",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:929,Energy Efficiency,consumption,consumption,929,"2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . MMseqs Version: 	f966bfa62a2b52d4821e908ac9e25808d1be0b81; Seed substitution matrix	nucl:nucleotide.out,aa:VTML80.out; K-mer size 	15; Alphabet size 	21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Threads 	48; Verbosity 	3. Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; tantan: warning: possible numeric inaccuracy ] 0.00% 1 eta -; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or directory.; (gdb) ; (gdb) bt; #0 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/sr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:2413,Performance,optimiz,optimized,2413,": forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or directory.; (gdb) ; (gdb) bt; #0 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; #1 calcRepeatProbs (letterProbs=0x2ab9b800f7cc, this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:310; #2 tantan::getProbabilities (; seqBeg=seqBeg@entry=0x2ab9b8000c70 ""\004\004\003 \004"", ; seqEnd=seqEnd@entry=0x2ab9b8000c76 """", maxRepeatOffset=<optimized out>, ; likelihoodRatioMatrix=<optimized out>, repeatProb=<optimized out>, ; repeatEndProb=<optimized out>, repeatOffsetProbDecay=<optimized out>, ; firstGapProb=<optimized out>, otherGapProb=<optimized out>, ; probabilities=probabilities@entry=0x2ab9b800f7c0); at /home/vsts/work/1/s/src/commons/tantan.cpp:375; #3 0x00000000005cabf8 in tantan::maskSequences (; seqBeg=0x2ab9b8000c70 ""\004\004\003 \004"", seqEnd=0x2ab9b8000c76 """", ; maxRepeatOffset=<optimized out>, likelihoodRatioMatrix=0xc570a0, ; repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003, ; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, ; minMaskProb=0.90000000000000002, ; maskTable=0xc57f30 '\004' <repeats 200 times>...); at /home/vsts/work/1/s/src/commons/tantan.cpp:357; #4 0x00000000005de120 in IndexBuilder::fillDatabase (); at /home/vsts/work/1/s/src/prefiltering/IndexBuilder.cpp:144; #5 0x000000000076baee in gomp_thread_start (). ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:2454,Performance,optimiz,optimized,2454,": forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or directory.; (gdb) ; (gdb) bt; #0 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; #1 calcRepeatProbs (letterProbs=0x2ab9b800f7cc, this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:310; #2 tantan::getProbabilities (; seqBeg=seqBeg@entry=0x2ab9b8000c70 ""\004\004\003 \004"", ; seqEnd=seqEnd@entry=0x2ab9b8000c76 """", maxRepeatOffset=<optimized out>, ; likelihoodRatioMatrix=<optimized out>, repeatProb=<optimized out>, ; repeatEndProb=<optimized out>, repeatOffsetProbDecay=<optimized out>, ; firstGapProb=<optimized out>, otherGapProb=<optimized out>, ; probabilities=probabilities@entry=0x2ab9b800f7c0); at /home/vsts/work/1/s/src/commons/tantan.cpp:375; #3 0x00000000005cabf8 in tantan::maskSequences (; seqBeg=0x2ab9b8000c70 ""\004\004\003 \004"", seqEnd=0x2ab9b8000c76 """", ; maxRepeatOffset=<optimized out>, likelihoodRatioMatrix=0xc570a0, ; repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003, ; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, ; minMaskProb=0.90000000000000002, ; maskTable=0xc57f30 '\004' <repeats 200 times>...); at /home/vsts/work/1/s/src/commons/tantan.cpp:357; #4 0x00000000005de120 in IndexBuilder::fillDatabase (); at /home/vsts/work/1/s/src/prefiltering/IndexBuilder.cpp:144; #5 0x000000000076baee in gomp_thread_start (). ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:2482,Performance,optimiz,optimized,2482,": forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or directory.; (gdb) ; (gdb) bt; #0 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; #1 calcRepeatProbs (letterProbs=0x2ab9b800f7cc, this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:310; #2 tantan::getProbabilities (; seqBeg=seqBeg@entry=0x2ab9b8000c70 ""\004\004\003 \004"", ; seqEnd=seqEnd@entry=0x2ab9b8000c76 """", maxRepeatOffset=<optimized out>, ; likelihoodRatioMatrix=<optimized out>, repeatProb=<optimized out>, ; repeatEndProb=<optimized out>, repeatOffsetProbDecay=<optimized out>, ; firstGapProb=<optimized out>, otherGapProb=<optimized out>, ; probabilities=probabilities@entry=0x2ab9b800f7c0); at /home/vsts/work/1/s/src/commons/tantan.cpp:375; #3 0x00000000005cabf8 in tantan::maskSequences (; seqBeg=0x2ab9b8000c70 ""\004\004\003 \004"", seqEnd=0x2ab9b8000c76 """", ; maxRepeatOffset=<optimized out>, likelihoodRatioMatrix=0xc570a0, ; repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003, ; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, ; minMaskProb=0.90000000000000002, ; maskTable=0xc57f30 '\004' <repeats 200 times>...); at /home/vsts/work/1/s/src/commons/tantan.cpp:357; #4 0x00000000005de120 in IndexBuilder::fillDatabase (); at /home/vsts/work/1/s/src/prefiltering/IndexBuilder.cpp:144; #5 0x000000000076baee in gomp_thread_start (). ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:2515,Performance,optimiz,optimized,2515,": forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or directory.; (gdb) ; (gdb) bt; #0 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; #1 calcRepeatProbs (letterProbs=0x2ab9b800f7cc, this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:310; #2 tantan::getProbabilities (; seqBeg=seqBeg@entry=0x2ab9b8000c70 ""\004\004\003 \004"", ; seqEnd=seqEnd@entry=0x2ab9b8000c76 """", maxRepeatOffset=<optimized out>, ; likelihoodRatioMatrix=<optimized out>, repeatProb=<optimized out>, ; repeatEndProb=<optimized out>, repeatOffsetProbDecay=<optimized out>, ; firstGapProb=<optimized out>, otherGapProb=<optimized out>, ; probabilities=probabilities@entry=0x2ab9b800f7c0); at /home/vsts/work/1/s/src/commons/tantan.cpp:375; #3 0x00000000005cabf8 in tantan::maskSequences (; seqBeg=0x2ab9b8000c70 ""\004\004\003 \004"", seqEnd=0x2ab9b8000c76 """", ; maxRepeatOffset=<optimized out>, likelihoodRatioMatrix=0xc570a0, ; repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003, ; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, ; minMaskProb=0.90000000000000002, ; maskTable=0xc57f30 '\004' <repeats 200 times>...); at /home/vsts/work/1/s/src/commons/tantan.cpp:357; #4 0x00000000005de120 in IndexBuilder::fillDatabase (); at /home/vsts/work/1/s/src/prefiltering/IndexBuilder.cpp:144; #5 0x000000000076baee in gomp_thread_start (). ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:2554,Performance,optimiz,optimized,2554,": forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or directory.; (gdb) ; (gdb) bt; #0 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; #1 calcRepeatProbs (letterProbs=0x2ab9b800f7cc, this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:310; #2 tantan::getProbabilities (; seqBeg=seqBeg@entry=0x2ab9b8000c70 ""\004\004\003 \004"", ; seqEnd=seqEnd@entry=0x2ab9b8000c76 """", maxRepeatOffset=<optimized out>, ; likelihoodRatioMatrix=<optimized out>, repeatProb=<optimized out>, ; repeatEndProb=<optimized out>, repeatOffsetProbDecay=<optimized out>, ; firstGapProb=<optimized out>, otherGapProb=<optimized out>, ; probabilities=probabilities@entry=0x2ab9b800f7c0); at /home/vsts/work/1/s/src/commons/tantan.cpp:375; #3 0x00000000005cabf8 in tantan::maskSequences (; seqBeg=0x2ab9b8000c70 ""\004\004\003 \004"", seqEnd=0x2ab9b8000c76 """", ; maxRepeatOffset=<optimized out>, likelihoodRatioMatrix=0xc570a0, ; repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003, ; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, ; minMaskProb=0.90000000000000002, ; maskTable=0xc57f30 '\004' <repeats 200 times>...); at /home/vsts/work/1/s/src/commons/tantan.cpp:357; #4 0x00000000005de120 in IndexBuilder::fillDatabase (); at /home/vsts/work/1/s/src/prefiltering/IndexBuilder.cpp:144; #5 0x000000000076baee in gomp_thread_start (). ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:2586,Performance,optimiz,optimized,2586,": forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or directory.; (gdb) ; (gdb) bt; #0 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; #1 calcRepeatProbs (letterProbs=0x2ab9b800f7cc, this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:310; #2 tantan::getProbabilities (; seqBeg=seqBeg@entry=0x2ab9b8000c70 ""\004\004\003 \004"", ; seqEnd=seqEnd@entry=0x2ab9b8000c76 """", maxRepeatOffset=<optimized out>, ; likelihoodRatioMatrix=<optimized out>, repeatProb=<optimized out>, ; repeatEndProb=<optimized out>, repeatOffsetProbDecay=<optimized out>, ; firstGapProb=<optimized out>, otherGapProb=<optimized out>, ; probabilities=probabilities@entry=0x2ab9b800f7c0); at /home/vsts/work/1/s/src/commons/tantan.cpp:375; #3 0x00000000005cabf8 in tantan::maskSequences (; seqBeg=0x2ab9b8000c70 ""\004\004\003 \004"", seqEnd=0x2ab9b8000c76 """", ; maxRepeatOffset=<optimized out>, likelihoodRatioMatrix=0xc570a0, ; repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003, ; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, ; minMaskProb=0.90000000000000002, ; maskTable=0xc57f30 '\004' <repeats 200 times>...); at /home/vsts/work/1/s/src/commons/tantan.cpp:357; #4 0x00000000005de120 in IndexBuilder::fillDatabase (); at /home/vsts/work/1/s/src/prefiltering/IndexBuilder.cpp:144; #5 0x000000000076baee in gomp_thread_start (). ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:2616,Performance,optimiz,optimized,2616,": forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or directory.; (gdb) ; (gdb) bt; #0 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; #1 calcRepeatProbs (letterProbs=0x2ab9b800f7cc, this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:310; #2 tantan::getProbabilities (; seqBeg=seqBeg@entry=0x2ab9b8000c70 ""\004\004\003 \004"", ; seqEnd=seqEnd@entry=0x2ab9b8000c76 """", maxRepeatOffset=<optimized out>, ; likelihoodRatioMatrix=<optimized out>, repeatProb=<optimized out>, ; repeatEndProb=<optimized out>, repeatOffsetProbDecay=<optimized out>, ; firstGapProb=<optimized out>, otherGapProb=<optimized out>, ; probabilities=probabilities@entry=0x2ab9b800f7c0); at /home/vsts/work/1/s/src/commons/tantan.cpp:375; #3 0x00000000005cabf8 in tantan::maskSequences (; seqBeg=0x2ab9b8000c70 ""\004\004\003 \004"", seqEnd=0x2ab9b8000c76 """", ; maxRepeatOffset=<optimized out>, likelihoodRatioMatrix=0xc570a0, ; repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003, ; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, ; minMaskProb=0.90000000000000002, ; maskTable=0xc57f30 '\004' <repeats 200 times>...); at /home/vsts/work/1/s/src/commons/tantan.cpp:357; #4 0x00000000005de120 in IndexBuilder::fillDatabase (); at /home/vsts/work/1/s/src/prefiltering/IndexBuilder.cpp:144; #5 0x000000000076baee in gomp_thread_start (). ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:2874,Performance,optimiz,optimized,2874,": forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or directory.; (gdb) ; (gdb) bt; #0 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; #1 calcRepeatProbs (letterProbs=0x2ab9b800f7cc, this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:310; #2 tantan::getProbabilities (; seqBeg=seqBeg@entry=0x2ab9b8000c70 ""\004\004\003 \004"", ; seqEnd=seqEnd@entry=0x2ab9b8000c76 """", maxRepeatOffset=<optimized out>, ; likelihoodRatioMatrix=<optimized out>, repeatProb=<optimized out>, ; repeatEndProb=<optimized out>, repeatOffsetProbDecay=<optimized out>, ; firstGapProb=<optimized out>, otherGapProb=<optimized out>, ; probabilities=probabilities@entry=0x2ab9b800f7c0); at /home/vsts/work/1/s/src/commons/tantan.cpp:375; #3 0x00000000005cabf8 in tantan::maskSequences (; seqBeg=0x2ab9b8000c70 ""\004\004\003 \004"", seqEnd=0x2ab9b8000c76 """", ; maxRepeatOffset=<optimized out>, likelihoodRatioMatrix=0xc570a0, ; repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003, ; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, ; minMaskProb=0.90000000000000002, ; maskTable=0xc57f30 '\004' <repeats 200 times>...); at /home/vsts/work/1/s/src/commons/tantan.cpp:357; #4 0x00000000005de120 in IndexBuilder::fillDatabase (); at /home/vsts/work/1/s/src/prefiltering/IndexBuilder.cpp:144; #5 0x000000000076baee in gomp_thread_start (). ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591541137:131,Usability,simpl,simple,131,"None that I know of, also the input fasta is a concatenated output of two linclust runs (merged the two *.clu_rep_seq.fasta with a simple `cat`)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591541137
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591992505:14,Deployability,Release,Release,14,Using MMseqs2 Release 11-e1a1c version - createindex works,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591992505
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082:35,Availability,error,error,35,"@milot-mirdita I also got indexing error. OS: elementary OS 6; Tool: MMseqs2 13.45111; Source: Conda. Indexed data: chrY sequence taken from the reference human genome. Command:; `mmseqs createindex chrY tmp --search-type 3`. Error log:; ```; createindex chrY tmp --search-type 3 . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	0; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. createindex chrY tmp --search-type 3 . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	15; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1; Reverse frames 	; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between seq",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082:226,Availability,Error,Error,226,"@milot-mirdita I also got indexing error. OS: elementary OS 6; Tool: MMseqs2 13.45111; Source: Conda. Indexed data: chrY sequence taken from the reference human genome. Command:; `mmseqs createindex chrY tmp --search-type 3`. Error log:; ```; createindex chrY tmp --search-type 3 . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	0; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. createindex chrY tmp --search-type 3 . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	15; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1; Reverse frames 	; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between seq",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082:495,Availability,Mask,Mask,495,"@milot-mirdita I also got indexing error. OS: elementary OS 6; Tool: MMseqs2 13.45111; Source: Conda. Indexed data: chrY sequence taken from the reference human genome. Command:; `mmseqs createindex chrY tmp --search-type 3`. Error log:; ```; createindex chrY tmp --search-type 3 . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	0; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. createindex chrY tmp --search-type 3 . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	15; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1; Reverse frames 	; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between seq",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082:513,Availability,Mask,Mask,513,"@milot-mirdita I also got indexing error. OS: elementary OS 6; Tool: MMseqs2 13.45111; Source: Conda. Indexed data: chrY sequence taken from the reference human genome. Command:; `mmseqs createindex chrY tmp --search-type 3`. Error log:; ```; createindex chrY tmp --search-type 3 . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	0; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. createindex chrY tmp --search-type 3 . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	15; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1; Reverse frames 	; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between seq",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082:1433,Availability,Mask,Mask,1433,"positional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. createindex chrY tmp --search-type 3 . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	15; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1; Reverse frames 	; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. splitsequence chrY tmp/4145379299737466142/nucl_split_seq --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to nucl_spl",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082:1451,Availability,Mask,Mask,1451,"positional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. createindex chrY tmp --search-type 3 . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	15; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1; Reverse frames 	; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. splitsequence chrY tmp/4145379299737466142/nucl_split_seq --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to nucl_spl",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082:2717,Availability,mask,mask,2717,"abet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1; Reverse frames 	; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. splitsequence chrY tmp/4145379299737466142/nucl_split_seq --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to nucl_split_seq_h: 0h 0m 0s 1ms; Time for merging to nucl_split_seq: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 8ms; indexdb tmp/4145379299737466142/nucl_split_seq chrY --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 8 . Estimated memory consumption: 8G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: indexdb died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082:2726,Availability,mask,mask-lower-case,2726,"abet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1; Reverse frames 	; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. splitsequence chrY tmp/4145379299737466142/nucl_split_seq --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to nucl_split_seq_h: 0h 0m 0s 1ms; Time for merging to nucl_split_seq: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 8ms; indexdb tmp/4145379299737466142/nucl_split_seq chrY --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 8 . Estimated memory consumption: 8G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: indexdb died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082:3282,Availability,fault,fault,3282,"abet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1; Reverse frames 	; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. splitsequence chrY tmp/4145379299737466142/nucl_split_seq --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to nucl_split_seq_h: 0h 0m 0s 1ms; Time for merging to nucl_split_seq: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 8ms; indexdb tmp/4145379299737466142/nucl_split_seq chrY --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 8 . Estimated memory consumption: 8G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: indexdb died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082:3305,Availability,Error,Error,3305,"abet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1; Reverse frames 	; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. splitsequence chrY tmp/4145379299737466142/nucl_split_seq --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to nucl_split_seq_h: 0h 0m 0s 1ms; Time for merging to nucl_split_seq: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 8ms; indexdb tmp/4145379299737466142/nucl_split_seq chrY --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 8 . Estimated memory consumption: 8G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: indexdb died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082:2890,Energy Efficiency,consumption,consumption,2890,"abet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1; Reverse frames 	; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. splitsequence chrY tmp/4145379299737466142/nucl_split_seq --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to nucl_split_seq_h: 0h 0m 0s 1ms; Time for merging to nucl_split_seq: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 8ms; indexdb tmp/4145379299737466142/nucl_split_seq chrY --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 8 . Estimated memory consumption: 8G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: indexdb died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082
https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082:232,Testability,log,log,232,"@milot-mirdita I also got indexing error. OS: elementary OS 6; Tool: MMseqs2 13.45111; Source: Conda. Indexed data: chrY sequence taken from the reference human genome. Command:; `mmseqs createindex chrY tmp --search-type 3`. Error log:; ```; createindex chrY tmp --search-type 3 . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	0; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. createindex chrY tmp --search-type 3 . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	15; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1; Reverse frames 	; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between seq",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082
https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-591741005:172,Availability,mask,mask,172,"You want the best hit even at the risk of a false positive best hit?; For that you should add a few more parameters:; ```; mmseqs search ... -e 100000 --comp-bias-corr 0 --mask 0; ```. At this point you might want to use coverage (`-c`) or `--min-aln-len` to filter the results, since you will also get super short hits.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-591741005
https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-591741005:34,Safety,risk,risk,34,"You want the best hit even at the risk of a false positive best hit?; For that you should add a few more parameters:; ```; mmseqs search ... -e 100000 --comp-bias-corr 0 --mask 0; ```. At this point you might want to use coverage (`-c`) or `--min-aln-len` to filter the results, since you will also get super short hits.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-591741005
https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:159,Availability,mask,mask,159,"I still cannot make it report at least one score per query after solving issue #283.; Here is the log. search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /scratch/jobs/56067190 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276
https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:1233,Availability,Mask,Mask,1233,"ueryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /scratch/jobs/56067190 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Str",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276
https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:1251,Availability,Mask,Mask,1251,"ueryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /scratch/jobs/56067190 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Str",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276
https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:1452,Availability,Mask,Mask,1452,"scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /t",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276
https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:2389,Availability,mask,mask,2389,"Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /scratch/jobs/56067190 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276
https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:3463,Availability,Mask,Mask,3463,"ueryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /scratch/jobs/56067190 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Str",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276
https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:3481,Availability,Mask,Mask,3481,"ueryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /scratch/jobs/56067190 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Str",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276
https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:3682,Availability,Mask,Mask,3682,"scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. align /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /scratch/jobs/56067190/14902988131097346952/pref_0 /tmp/560",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276
https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:448,Integrability,wrap,wrapped,448,"I still cannot make it report at least one score per query after solving issue #283.; Here is the log. search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /scratch/jobs/56067190 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276
https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:2678,Integrability,wrap,wrapped,2678," Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /scratch/jobs/56067190 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276
https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:4785,Integrability,wrap,wrapped-scoring,4785,"erage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. align /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /scratch/jobs/56067190/14902988131097346952/pref_0 /tmp/56067190/queryT.fa.mmsq.outDB --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 100000 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score and coverage; Query database size: 10000 type: Aminoacid; Target database size: 10000 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 130 0s 27ms ; Time for merging to queryT.fa.mmsq.outDB: 0h 0m 0s 0ms. 1711 alignments calculated.; 1711 sequence pairs passed the thresholds (1.000000 of overall calculated).; 13.161538 hits per query sequence.; Time for processing: 0h 0m 0s 119ms; convertalis /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /tmp/56067190/queryT.fa.mmsq.m8 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276
https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:5082,Modifiability,extend,extend,5082," start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. align /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /scratch/jobs/56067190/14902988131097346952/pref_0 /tmp/56067190/queryT.fa.mmsq.outDB --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 100000 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score and coverage; Query database size: 10000 type: Aminoacid; Target database size: 10000 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 130 0s 27ms ; Time for merging to queryT.fa.mmsq.outDB: 0h 0m 0s 0ms. 1711 alignments calculated.; 1711 sequence pairs passed the thresholds (1.000000 of overall calculated).; 13.161538 hits per query sequence.; Time for processing: 0h 0m 0s 119ms; convertalis /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /tmp/56067190/queryT.fa.mmsq.m8 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Translation table 	1; Gap open cost 	11; Gap extension cost 	1; Database output 	false; Preload mode 	0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276
https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:5017,Performance,load,load-mode,5017,"erage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. align /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /scratch/jobs/56067190/14902988131097346952/pref_0 /tmp/56067190/queryT.fa.mmsq.outDB --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 100000 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score and coverage; Query database size: 10000 type: Aminoacid; Target database size: 10000 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 130 0s 27ms ; Time for merging to queryT.fa.mmsq.outDB: 0h 0m 0s 0ms. 1711 alignments calculated.; 1711 sequence pairs passed the thresholds (1.000000 of overall calculated).; 13.161538 hits per query sequence.; Time for processing: 0h 0m 0s 119ms; convertalis /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /tmp/56067190/queryT.fa.mmsq.m8 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276
https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:98,Testability,log,log,98,"I still cannot make it report at least one score per query after solving issue #283.; Here is the log. search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /scratch/jobs/56067190 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276
https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593591780:22,Testability,log,log,22,Can you post the full log and call to MMseqs2 please?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593591780
https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497:96,Availability,mask,mask,96,"Thanks for your prompt replies!. mmseqs search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 $SCRATCHDIR/queryT.mmsq $SCRATCHDIR/queryT.mmsq $SCRATCHDIR/queryT.mmsq.outDB $SCRATCHDIR > $SCRATCHDIR/test.log. File $SCRATCHDIR/queryT.mmsq has 10000 lines, which I guess should confirm it has 10000 sequences. . prefilter /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/9822650028334564073/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 4.0 . Query database size: 313 type: Aminoacid; Estimated memory consumption: 979M; Target database size: 313 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 313 0s 11ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 313 0s 11ms; Index statistics; Entries: 99064; DB size: 488 MB; Avg k-mer size: 0.001548; Top 10 k-mers; GQQVAR 4; QRAALA 3; LSGRVA 3; LGEIVD 3; RELAEE 3; LAAAVG 3; SGQQAI 3; RAVSFK 3; AIGSGK 3; ALGSGK 3; Time for index table init: 0h 0m 0s 582ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 313; Target db start 1 to 313; [=================================================================] 313 0s 95ms. 46.584655 k-mers per position; 349 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497
https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497:746,Availability,mask,mask,746,"Thanks for your prompt replies!. mmseqs search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 $SCRATCHDIR/queryT.mmsq $SCRATCHDIR/queryT.mmsq $SCRATCHDIR/queryT.mmsq.outDB $SCRATCHDIR > $SCRATCHDIR/test.log. File $SCRATCHDIR/queryT.mmsq has 10000 lines, which I guess should confirm it has 10000 sequences. . prefilter /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/9822650028334564073/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 4.0 . Query database size: 313 type: Aminoacid; Estimated memory consumption: 979M; Target database size: 313 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 313 0s 11ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 313 0s 11ms; Index statistics; Entries: 99064; DB size: 488 MB; Avg k-mer size: 0.001548; Top 10 k-mers; GQQVAR 4; QRAALA 3; LSGRVA 3; LGEIVD 3; RELAEE 3; LAAAVG 3; SGQQAI 3; RAVSFK 3; AIGSGK 3; ALGSGK 3; Time for index table init: 0h 0m 0s 582ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 313; Target db start 1 to 313; [=================================================================] 313 0s 95ms. 46.584655 k-mers per position; 349 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497
https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497:755,Availability,mask,mask-lower-case,755,"Thanks for your prompt replies!. mmseqs search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 $SCRATCHDIR/queryT.mmsq $SCRATCHDIR/queryT.mmsq $SCRATCHDIR/queryT.mmsq.outDB $SCRATCHDIR > $SCRATCHDIR/test.log. File $SCRATCHDIR/queryT.mmsq has 10000 lines, which I guess should confirm it has 10000 sequences. . prefilter /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/9822650028334564073/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 4.0 . Query database size: 313 type: Aminoacid; Estimated memory consumption: 979M; Target database size: 313 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 313 0s 11ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 313 0s 11ms; Index statistics; Entries: 99064; DB size: 488 MB; Avg k-mer size: 0.001548; Top 10 k-mers; GQQVAR 4; QRAALA 3; LSGRVA 3; LGEIVD 3; RELAEE 3; LAAAVG 3; SGQQAI 3; RAVSFK 3; AIGSGK 3; ALGSGK 3; Time for index table init: 0h 0m 0s 582ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 313; Target db start 1 to 313; [=================================================================] 313 0s 95ms. 46.584655 k-mers per position; 349 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497
https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497:1212,Availability,Mask,Masked,1212,"HDIR/queryT.mmsq.outDB $SCRATCHDIR > $SCRATCHDIR/test.log. File $SCRATCHDIR/queryT.mmsq has 10000 lines, which I guess should confirm it has 10000 sequences. . prefilter /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/9822650028334564073/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 4.0 . Query database size: 313 type: Aminoacid; Estimated memory consumption: 979M; Target database size: 313 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 313 0s 11ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 313 0s 11ms; Index statistics; Entries: 99064; DB size: 488 MB; Avg k-mer size: 0.001548; Top 10 k-mers; GQQVAR 4; QRAALA 3; LSGRVA 3; LGEIVD 3; RELAEE 3; LAAAVG 3; SGQQAI 3; RAVSFK 3; AIGSGK 3; ALGSGK 3; Time for index table init: 0h 0m 0s 582ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 313; Target db start 1 to 313; [=================================================================] 313 0s 95ms. 46.584655 k-mers per position; 349 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 219ms; Time for processing: 0h 0m 6s 996ms; align /scra",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497
https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497:975,Energy Efficiency,consumption,consumption,975,"HDIR/queryT.mmsq.outDB $SCRATCHDIR > $SCRATCHDIR/test.log. File $SCRATCHDIR/queryT.mmsq has 10000 lines, which I guess should confirm it has 10000 sequences. . prefilter /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/9822650028334564073/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 4.0 . Query database size: 313 type: Aminoacid; Estimated memory consumption: 979M; Target database size: 313 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 313 0s 11ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 313 0s 11ms; Index statistics; Entries: 99064; DB size: 488 MB; Avg k-mer size: 0.001548; Top 10 k-mers; GQQVAR 4; QRAALA 3; LSGRVA 3; LGEIVD 3; RELAEE 3; LAAAVG 3; SGQQAI 3; RAVSFK 3; AIGSGK 3; ALGSGK 3; Time for index table init: 0h 0m 0s 582ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 313; Target db start 1 to 313; [=================================================================] 313 0s 95ms. 46.584655 k-mers per position; 349 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 219ms; Time for processing: 0h 0m 6s 996ms; align /scra",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497
https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497:2374,Integrability,wrap,wrapped-scoring,2374,"========] 313 0s 11ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 313 0s 11ms; Index statistics; Entries: 99064; DB size: 488 MB; Avg k-mer size: 0.001548; Top 10 k-mers; GQQVAR 4; QRAALA 3; LSGRVA 3; LGEIVD 3; RELAEE 3; LAAAVG 3; SGQQAI 3; RAVSFK 3; AIGSGK 3; ALGSGK 3; Time for index table init: 0h 0m 0s 582ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 313; Target db start 1 to 313; [=================================================================] 313 0s 95ms. 46.584655 k-mers per position; 349 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 219ms; Time for processing: 0h 0m 6s 996ms; align /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/9822650028334564073/pref_0 /scratch/orakov/tmp/queryT.mmsq.outDB --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 100000 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score and coverage; Query database size: 313 type: Aminoacid; Target database size: 313 type: Aminoacid; Calculation of alignments; [=================================================================] 313 0s 75ms; Time for merging to queryT.mmsq.outDB: 0h 0m 0s 320ms. 408 alignments calculated.; 408 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.303514 hits per query sequence.; Time for processing: 0h 0m 0s 966ms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497
https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497:2671,Modifiability,extend,extend,2671,"========] 313 0s 11ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 313 0s 11ms; Index statistics; Entries: 99064; DB size: 488 MB; Avg k-mer size: 0.001548; Top 10 k-mers; GQQVAR 4; QRAALA 3; LSGRVA 3; LGEIVD 3; RELAEE 3; LAAAVG 3; SGQQAI 3; RAVSFK 3; AIGSGK 3; ALGSGK 3; Time for index table init: 0h 0m 0s 582ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 313; Target db start 1 to 313; [=================================================================] 313 0s 95ms. 46.584655 k-mers per position; 349 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 219ms; Time for processing: 0h 0m 6s 996ms; align /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/9822650028334564073/pref_0 /scratch/orakov/tmp/queryT.mmsq.outDB --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 100000 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score and coverage; Query database size: 313 type: Aminoacid; Target database size: 313 type: Aminoacid; Calculation of alignments; [=================================================================] 313 0s 75ms; Time for merging to queryT.mmsq.outDB: 0h 0m 0s 320ms. 408 alignments calculated.; 408 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.303514 hits per query sequence.; Time for processing: 0h 0m 0s 966ms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497
https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497:844,Performance,load,load-mode,844,"Thanks for your prompt replies!. mmseqs search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 $SCRATCHDIR/queryT.mmsq $SCRATCHDIR/queryT.mmsq $SCRATCHDIR/queryT.mmsq.outDB $SCRATCHDIR > $SCRATCHDIR/test.log. File $SCRATCHDIR/queryT.mmsq has 10000 lines, which I guess should confirm it has 10000 sequences. . prefilter /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/9822650028334564073/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 4.0 . Query database size: 313 type: Aminoacid; Estimated memory consumption: 979M; Target database size: 313 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 313 0s 11ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 313 0s 11ms; Index statistics; Entries: 99064; DB size: 488 MB; Avg k-mer size: 0.001548; Top 10 k-mers; GQQVAR 4; QRAALA 3; LSGRVA 3; LGEIVD 3; RELAEE 3; LAAAVG 3; SGQQAI 3; RAVSFK 3; AIGSGK 3; ALGSGK 3; Time for index table init: 0h 0m 0s 582ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 313; Target db start 1 to 313; [=================================================================] 313 0s 95ms. 46.584655 k-mers per position; 349 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497
https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497:2606,Performance,load,load-mode,2606,"========] 313 0s 11ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 313 0s 11ms; Index statistics; Entries: 99064; DB size: 488 MB; Avg k-mer size: 0.001548; Top 10 k-mers; GQQVAR 4; QRAALA 3; LSGRVA 3; LGEIVD 3; RELAEE 3; LAAAVG 3; SGQQAI 3; RAVSFK 3; AIGSGK 3; ALGSGK 3; Time for index table init: 0h 0m 0s 582ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 313; Target db start 1 to 313; [=================================================================] 313 0s 95ms. 46.584655 k-mers per position; 349 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 219ms; Time for processing: 0h 0m 6s 996ms; align /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/9822650028334564073/pref_0 /scratch/orakov/tmp/queryT.mmsq.outDB --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 100000 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score and coverage; Query database size: 313 type: Aminoacid; Target database size: 313 type: Aminoacid; Calculation of alignments; [=================================================================] 313 0s 75ms; Time for merging to queryT.mmsq.outDB: 0h 0m 0s 320ms. 408 alignments calculated.; 408 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.303514 hits per query sequence.; Time for processing: 0h 0m 0s 966ms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497
https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497:207,Testability,test,test,207,"Thanks for your prompt replies!. mmseqs search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 $SCRATCHDIR/queryT.mmsq $SCRATCHDIR/queryT.mmsq $SCRATCHDIR/queryT.mmsq.outDB $SCRATCHDIR > $SCRATCHDIR/test.log. File $SCRATCHDIR/queryT.mmsq has 10000 lines, which I guess should confirm it has 10000 sequences. . prefilter /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/9822650028334564073/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 4.0 . Query database size: 313 type: Aminoacid; Estimated memory consumption: 979M; Target database size: 313 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 313 0s 11ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 313 0s 11ms; Index statistics; Entries: 99064; DB size: 488 MB; Avg k-mer size: 0.001548; Top 10 k-mers; GQQVAR 4; QRAALA 3; LSGRVA 3; LGEIVD 3; RELAEE 3; LAAAVG 3; SGQQAI 3; RAVSFK 3; AIGSGK 3; ALGSGK 3; Time for index table init: 0h 0m 0s 582ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 313; Target db start 1 to 313; [=================================================================] 313 0s 95ms. 46.584655 k-mers per position; 349 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497
https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497:212,Testability,log,log,212,"Thanks for your prompt replies!. mmseqs search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 $SCRATCHDIR/queryT.mmsq $SCRATCHDIR/queryT.mmsq $SCRATCHDIR/queryT.mmsq.outDB $SCRATCHDIR > $SCRATCHDIR/test.log. File $SCRATCHDIR/queryT.mmsq has 10000 lines, which I guess should confirm it has 10000 sequences. . prefilter /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/9822650028334564073/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 4.0 . Query database size: 313 type: Aminoacid; Estimated memory consumption: 979M; Target database size: 313 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 313 0s 11ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 313 0s 11ms; Index statistics; Entries: 99064; DB size: 488 MB; Avg k-mer size: 0.001548; Top 10 k-mers; GQQVAR 4; QRAALA 3; LSGRVA 3; LGEIVD 3; RELAEE 3; LAAAVG 3; SGQQAI 3; RAVSFK 3; AIGSGK 3; ALGSGK 3; Time for index table init: 0h 0m 0s 582ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 313; Target db start 1 to 313; [=================================================================] 313 0s 95ms. 46.584655 k-mers per position; 349 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497
https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593660260:210,Testability,log,logs,210,"Something is going wrong before the prefiltering stage already, could you recreate `$SCRATCHDIR` completely? Also please specify a scratch directory that does not contain anything (e.g. query, target, results, logs).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593660260
https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367:23,Availability,error,error,23,"I get the same type of error when using the parallel MPI version with ""RUNNER=mpirun -np 8"" . I only encountered this error while testing. I ideally would like to use a cluster configuration but will not be able to if this error persists.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367
https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367:118,Availability,error,error,118,"I get the same type of error when using the parallel MPI version with ""RUNNER=mpirun -np 8"" . I only encountered this error while testing. I ideally would like to use a cluster configuration but will not be able to if this error persists.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367
https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367:223,Availability,error,error,223,"I get the same type of error when using the parallel MPI version with ""RUNNER=mpirun -np 8"" . I only encountered this error while testing. I ideally would like to use a cluster configuration but will not be able to if this error persists.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367
https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367:177,Deployability,configurat,configuration,177,"I get the same type of error when using the parallel MPI version with ""RUNNER=mpirun -np 8"" . I only encountered this error while testing. I ideally would like to use a cluster configuration but will not be able to if this error persists.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367
https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367:177,Modifiability,config,configuration,177,"I get the same type of error when using the parallel MPI version with ""RUNNER=mpirun -np 8"" . I only encountered this error while testing. I ideally would like to use a cluster configuration but will not be able to if this error persists.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367
https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367:130,Testability,test,testing,130,"I get the same type of error when using the parallel MPI version with ""RUNNER=mpirun -np 8"" . I only encountered this error while testing. I ideally would like to use a cluster configuration but will not be able to if this error persists.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367
https://github.com/soedinglab/MMseqs2/issues/287#issuecomment-597886353:295,Usability,clear,clearer,295,"I improved the wiki documentation on how to produce a correct MPI build:; https://github.com/soedinglab/MMseqs2/wiki#how-to-run-mmseqs2-on-multiple-servers-using-mpi. You have to pass the `-DHAVE_MPI=1` parameter during `cmake` invocation or MPI support will not be enabled. We should make this clearer somehow and let MMseqs2 fail more gracefully if called with MPI without having been built with MPI support. If you want a set of stickers (see https://twitter.com/thesteinegger/status/1201076220957315074), send me your address to milot at mirdita de.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287#issuecomment-597886353
https://github.com/soedinglab/MMseqs2/issues/288#issuecomment-598867813:41,Usability,simpl,simple,41,I was sure I was missing something quite simple.; Thanks a lot for your quick reply and have a nice week-end (despite the circumstances).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/288#issuecomment-598867813
https://github.com/soedinglab/MMseqs2/issues/289#issuecomment-604142976:25,Deployability,update,updated,25,"Fix was just merged, the updated brew package should now work correctly multi-threaded. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/289#issuecomment-604142976
https://github.com/soedinglab/MMseqs2/issues/289#issuecomment-604142976:72,Performance,multi-thread,multi-threaded,72,"Fix was just merged, the updated brew package should now work correctly multi-threaded. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/289#issuecomment-604142976
https://github.com/soedinglab/MMseqs2/issues/290#issuecomment-626146091:32,Availability,error,error,32,"Hi, ; I'm running into the same error. My installation is via conda, so, has this been pushed to conda yet, or should I be compiling from source?. Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/290#issuecomment-626146091
https://github.com/soedinglab/MMseqs2/issues/290#issuecomment-626146091:42,Deployability,install,installation,42,"Hi, ; I'm running into the same error. My installation is via conda, so, has this been pushed to conda yet, or should I be compiling from source?. Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/290#issuecomment-626146091
https://github.com/soedinglab/MMseqs2/issues/290#issuecomment-626221576:30,Deployability,release,release,30,"This will be part of the next release, please use either our statically compiled binaries (mmseqs.com/latest) or compile from source.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/290#issuecomment-626221576
https://github.com/soedinglab/MMseqs2/issues/290#issuecomment-626221741:101,Deployability,release,release,101,Thank you. I compiled from the source and it seems to work fine. Any tentative timeline for the next release though?!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/290#issuecomment-626221741
https://github.com/soedinglab/MMseqs2/issues/291#issuecomment-604144335:78,Deployability,release,release,78,Could you please try to rerun the clustering the same dataset with the latest release? We have since improved the handling of long sequence and the issue might already be resolved.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/291#issuecomment-604144335
https://github.com/soedinglab/MMseqs2/issues/291#issuecomment-604150179:58,Deployability,release,release,58,"Thank you for getting back! We will try to use the latest release. ; Meanwhile, we are testing whether increasing `--max-seqs` will help. Do you think this could be one possibility/ direction to try?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/291#issuecomment-604150179
https://github.com/soedinglab/MMseqs2/issues/291#issuecomment-604150179:87,Testability,test,testing,87,"Thank you for getting back! We will try to use the latest release. ; Meanwhile, we are testing whether increasing `--max-seqs` will help. Do you think this could be one possibility/ direction to try?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/291#issuecomment-604150179
https://github.com/soedinglab/MMseqs2/issues/291#issuecomment-604511463:220,Integrability,message,messages,220,"The cluster used to contain less sequences than the input when we used the older version. ; We tried to use the latest version and now the number seems to match! One more question is still on the truncation, that we got messages ""1 queries produce too much hits (truncated result)"". What does this mean? Should this be a concern? Thank you very much! ; [log_clu_03_25.txt](https://github.com/soedinglab/MMseqs2/files/4388245/log_clu_03_25.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/291#issuecomment-604511463
https://github.com/soedinglab/MMseqs2/issues/292#issuecomment-604419252:189,Availability,down,down,189,"@linsalrob Thanks for opening this issue. I am not very familiar with snakemake but we intentionally do not produce a single file with these modules since this would cost extra IO and slow down the software. Why do you need exactly one output file? The modules that produce output for consumption by other software (e.g. `convertalis`) already produce single files. As a workaround for your Snakemake issue, you can check if a process was successfully by checking if the `.dbtype` file exists. If you want a set of stickers (see https://twitter.com/thesteinegger/status/1201076220957315074), send your address to themartinsteinegger gmail com",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/292#issuecomment-604419252
https://github.com/soedinglab/MMseqs2/issues/292#issuecomment-604419252:285,Energy Efficiency,consumption,consumption,285,"@linsalrob Thanks for opening this issue. I am not very familiar with snakemake but we intentionally do not produce a single file with these modules since this would cost extra IO and slow down the software. Why do you need exactly one output file? The modules that produce output for consumption by other software (e.g. `convertalis`) already produce single files. As a workaround for your Snakemake issue, you can check if a process was successfully by checking if the `.dbtype` file exists. If you want a set of stickers (see https://twitter.com/thesteinegger/status/1201076220957315074), send your address to themartinsteinegger gmail com",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/292#issuecomment-604419252
https://github.com/soedinglab/MMseqs2/issues/292#issuecomment-604527513:68,Availability,down,downstream,68,"Yes they should produce it. Only the modules that create output for downstream analysis do not `createtsv`, `convertalis`, `convert2fasta`, `result2flat`, `taxonomyreport`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/292#issuecomment-604527513
https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604468047:135,Testability,test,tested,135,"Could you provide the calls how you generated the matrix, and how you called MMseqs2? . Alternative substitution matrices are not well tested, so we might have to work more on that code branch.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604468047
https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:1198,Availability,mask,mask,1198,"default matrix with the value ""5"" (except for -1 in X) and that died(!). So that makes me think there is something magic about not being allowed to make diagonal too uniform. . Matrix gen code (modify disperse parameter). ```; import random; alph=""A C D E F G H I K L M N P Q R S T V W Y X"".split(). disperse=0.7; print("" A C D E F G H I K L M N P Q R S T V W Y X""); #print("""",*alph,sep="" ""); for idx,l in enumerate(alph):; scores=[random.uniform(-1.0-disperse,-1.0+disperse) for _ in alph]; if l!=""X"":; scores[idx]=random.uniform(7.0-disperse,7.0+disperse); else:; scores[idx]=random.uniform(-1.0-disperse,-1.0+disperse); print(l,*(""{0:.4f}"".format(s) for s in scores),sep="" ""); ```. Then `identity.out` is produced by `python3 print_identity.py | ../MMseqs2/util/format_substitution_matrix.R > identity.out`. MMseqs call is; 1. `mmseqs createdb data.fasta mydb/mmdb --dbtype 1`; 2. `mmseqs createindex mydb/mmdb mydb/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0`. And here's the output of the 2nd command:. ```; Create dir eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp; createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0 . MMseqs Version: 	12c499dcd647fb0d1c799bc5c6f9f25328ca3e09; Seed substitution matrix 	nucl:identity.out,aa:identity.out; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526
https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:1545,Availability,mask,mask,1545," Q R S T V W Y X""); #print("""",*alph,sep="" ""); for idx,l in enumerate(alph):; scores=[random.uniform(-1.0-disperse,-1.0+disperse) for _ in alph]; if l!=""X"":; scores[idx]=random.uniform(7.0-disperse,7.0+disperse); else:; scores[idx]=random.uniform(-1.0-disperse,-1.0+disperse); print(l,*(""{0:.4f}"".format(s) for s in scores),sep="" ""); ```. Then `identity.out` is produced by `python3 print_identity.py | ../MMseqs2/util/format_substitution_matrix.R > identity.out`. MMseqs call is; 1. `mmseqs createdb data.fasta mydb/mmdb --dbtype 1`; 2. `mmseqs createindex mydb/mmdb mydb/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0`. And here's the output of the 2nd command:. ```; Create dir eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp; createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0 . MMseqs Version: 	12c499dcd647fb0d1c799bc5c6f9f25328ca3e09; Seed substitution matrix 	nucl:identity.out,aa:identity.out; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526
https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:1799,Availability,Mask,Mask,1799,"pe 1`; 2. `mmseqs createindex mydb/mmdb mydb/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0`. And here's the output of the 2nd command:. ```; Create dir eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp; createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0 . MMseqs Version: 	12c499dcd647fb0d1c799bc5c6f9f25328ca3e09; Seed substitution matrix 	nucl:identity.out,aa:identity.out; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0 . MMseqs Version: 	12c499dcd647fb0d1c799bc5c6f9f25328ca3e09; Seed substitution matrix 	nucl:identity.out,aa:identity.out; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatibl",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526
https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:1817,Availability,Mask,Mask,1817,"pe 1`; 2. `mmseqs createindex mydb/mmdb mydb/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0`. And here's the output of the 2nd command:. ```; Create dir eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp; createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0 . MMseqs Version: 	12c499dcd647fb0d1c799bc5c6f9f25328ca3e09; Seed substitution matrix 	nucl:identity.out,aa:identity.out; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0 . MMseqs Version: 	12c499dcd647fb0d1c799bc5c6f9f25328ca3e09; Seed substitution matrix 	nucl:identity.out,aa:identity.out; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatibl",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526
https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:2679,Availability,mask,mask,2679,"t; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0 . MMseqs Version: 	12c499dcd647fb0d1c799bc5c6f9f25328ca3e09; Seed substitution matrix 	nucl:identity.out,aa:identity.out; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. indexdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526
https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:2933,Availability,Mask,Mask,2933," 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0 . MMseqs Version: 	12c499dcd647fb0d1c799bc5c6f9f25328ca3e09; Seed substitution matrix 	nucl:identity.out,aa:identity.out; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. indexdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb --seed-sub-mat nucl:identity.out,aa:identity.out -k 5 --alph-size nucl:5,aa:21 --comp-bias-corr 0 --max-seq-len 65535 --max-seqs 300 --mask 0 --mask-lower-case 0 --spaced-kmer-mode 1 -s 1 --k-score 2147483647 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 9G -v 3 --threads 8 . Estimated memory consumption: 7G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23);",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526
https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:2951,Availability,Mask,Mask,2951," 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0 . MMseqs Version: 	12c499dcd647fb0d1c799bc5c6f9f25328ca3e09; Seed substitution matrix 	nucl:identity.out,aa:identity.out; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. indexdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb --seed-sub-mat nucl:identity.out,aa:identity.out -k 5 --alph-size nucl:5,aa:21 --comp-bias-corr 0 --max-seq-len 65535 --max-seqs 300 --mask 0 --mask-lower-case 0 --spaced-kmer-mode 1 -s 1 --k-score 2147483647 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 9G -v 3 --threads 8 . Estimated memory consumption: 7G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23);",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526
https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:3860,Availability,mask,mask,3860," 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. indexdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb --seed-sub-mat nucl:identity.out,aa:identity.out -k 5 --alph-size nucl:5,aa:21 --comp-bias-corr 0 --max-seq-len 65535 --max-seqs 300 --mask 0 --mask-lower-case 0 --spaced-kmer-mode 1 -s 1 --k-score 2147483647 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 9G -v 3 --threads 8 . Estimated memory consumption: 7G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Write GENERATOR (22); Index table: counting k-mers; [=================================================================] 100.00% 10.04M 2s 583ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 10.04M 2s 281ms ; Index statistics; Entries: 298595; DB size: 26 MB; Avg k-mer size: 0.093311; Top 10 k-mers; PPHPH	8644; PPHKV	7060; PPHPT	4123; TVPLP	2413; PPVLP	1740; PPVPT	1290; HHPVP	1173; PPHLV	1150; KVPPP	915; PHHVP	868; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526
https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:3869,Availability,mask,mask-lower-case,3869," 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. indexdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb --seed-sub-mat nucl:identity.out,aa:identity.out -k 5 --alph-size nucl:5,aa:21 --comp-bias-corr 0 --max-seq-len 65535 --max-seqs 300 --mask 0 --mask-lower-case 0 --spaced-kmer-mode 1 -s 1 --k-score 2147483647 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 9G -v 3 --threads 8 . Estimated memory consumption: 7G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Write GENERATOR (22); Index table: counting k-mers; [=================================================================] 100.00% 10.04M 2s 583ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 10.04M 2s 281ms ; Index statistics; Entries: 298595; DB size: 26 MB; Avg k-mer size: 0.093311; Top 10 k-mers; PPHPH	8644; PPHKV	7060; PPHPT	4123; TVPLP	2413; PPVLP	1740; PPVPT	1290; HHPVP	1173; PPHLV	1150; KVPPP	915; PHHVP	868; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526
https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:4443,Availability,Mask,Masked,4443," 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. indexdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb --seed-sub-mat nucl:identity.out,aa:identity.out -k 5 --alph-size nucl:5,aa:21 --comp-bias-corr 0 --max-seq-len 65535 --max-seqs 300 --mask 0 --mask-lower-case 0 --spaced-kmer-mode 1 -s 1 --k-score 2147483647 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 9G -v 3 --threads 8 . Estimated memory consumption: 7G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Write GENERATOR (22); Index table: counting k-mers; [=================================================================] 100.00% 10.04M 2s 583ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 10.04M 2s 281ms ; Index statistics; Entries: 298595; DB size: 26 MB; Avg k-mer size: 0.093311; Top 10 k-mers; PPHPH	8644; PPHKV	7060; PPHPT	4123; TVPLP	2413; PPVLP	1740; PPVPT	1290; HHPVP	1173; PPHLV	1150; KVPPP	915; PHHVP	868; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write SEQINDEXDATA (14); Write ENTRIESNUM (12); Write SEQCOUNT (13); Time for merging to mmdb.idx: 0h 0m 0s 0ms; Time for processing: 0h 0m 10s 928ms; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526
https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:4041,Energy Efficiency,consumption,consumption,4041," 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. indexdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb --seed-sub-mat nucl:identity.out,aa:identity.out -k 5 --alph-size nucl:5,aa:21 --comp-bias-corr 0 --max-seq-len 65535 --max-seqs 300 --mask 0 --mask-lower-case 0 --spaced-kmer-mode 1 -s 1 --k-score 2147483647 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 9G -v 3 --threads 8 . Estimated memory consumption: 7G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Write GENERATOR (22); Index table: counting k-mers; [=================================================================] 100.00% 10.04M 2s 583ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 10.04M 2s 281ms ; Index statistics; Entries: 298595; DB size: 26 MB; Avg k-mer size: 0.093311; Top 10 k-mers; PPHPH	8644; PPHKV	7060; PPHPT	4123; TVPLP	2413; PPVLP	1740; PPVPT	1290; HHPVP	1173; PPHLV	1150; KVPPP	915; PHHVP	868; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write SEQINDEXDATA (14); Write ENTRIESNUM (12); Write SEQCOUNT (13); Time for merging to mmdb.idx: 0h 0m 0s 0ms; Time for processing: 0h 0m 10s 928ms; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526
https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604515938:60,Integrability,message,message,60,"the indexing dies after the step ""counting k-mers"" with the message ""no k-mers extracted"" (or something to that effect, I'm not at the terminal now). So the second command above dies.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604515938
https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604517220:36,Usability,progress bar,progress bar,36,"the counting k-mers shows the usual progress bar, fails after that. the progress bar seems tad faster than it should be, so I think the k-mers get discarded after creation",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604517220
https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604517220:72,Usability,progress bar,progress bar,72,"the counting k-mers shows the usual progress bar, fails after that. the progress bar seems tad faster than it should be, so I think the k-mers get discarded after creation",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604517220
https://github.com/soedinglab/MMseqs2/issues/296#issuecomment-607941034:76,Testability,benchmark,benchmark,76,"Everything should be here: ; https://bitbucket.org/martin_steinegger/mmseqs-benchmark; http://gwdu111.gwdg.de/~compbiol/mmseqs2/mmseqs2-benchmark.tar.gz. However, most scripts are also kind of outdated, parameters changed etc. So getting them to run with the latest MMseqs2 version might be a bit of work. We run a far smaller set of tests on every commit:; https://github.com/soedinglab/mmseqs2-regression; These scripts here originated from the above mentioned repository and might be useful to get commands to run again with the latest MMseqs2.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/296#issuecomment-607941034
https://github.com/soedinglab/MMseqs2/issues/296#issuecomment-607941034:136,Testability,benchmark,benchmark,136,"Everything should be here: ; https://bitbucket.org/martin_steinegger/mmseqs-benchmark; http://gwdu111.gwdg.de/~compbiol/mmseqs2/mmseqs2-benchmark.tar.gz. However, most scripts are also kind of outdated, parameters changed etc. So getting them to run with the latest MMseqs2 version might be a bit of work. We run a far smaller set of tests on every commit:; https://github.com/soedinglab/mmseqs2-regression; These scripts here originated from the above mentioned repository and might be useful to get commands to run again with the latest MMseqs2.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/296#issuecomment-607941034
https://github.com/soedinglab/MMseqs2/issues/296#issuecomment-607941034:334,Testability,test,tests,334,"Everything should be here: ; https://bitbucket.org/martin_steinegger/mmseqs-benchmark; http://gwdu111.gwdg.de/~compbiol/mmseqs2/mmseqs2-benchmark.tar.gz. However, most scripts are also kind of outdated, parameters changed etc. So getting them to run with the latest MMseqs2 version might be a bit of work. We run a far smaller set of tests on every commit:; https://github.com/soedinglab/mmseqs2-regression; These scripts here originated from the above mentioned repository and might be useful to get commands to run again with the latest MMseqs2.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/296#issuecomment-607941034
https://github.com/soedinglab/MMseqs2/issues/296#issuecomment-607943844:46,Testability,test,testing,46,Thanks this is very helpful -- the regression testing is awesome,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/296#issuecomment-607943844
https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-612083536:4,Availability,error,error,4,The error is happening in the call for ksw_extz2_sse in BandedNucleotideAligner::align. I have made a few tests with increasing number of sequences in the database. I tested up to 50 000 sequences and it went fine. I have also done a test including the longer sequence and about 5000 other sequences and it went fine.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-612083536
https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-612083536:106,Testability,test,tests,106,The error is happening in the call for ksw_extz2_sse in BandedNucleotideAligner::align. I have made a few tests with increasing number of sequences in the database. I tested up to 50 000 sequences and it went fine. I have also done a test including the longer sequence and about 5000 other sequences and it went fine.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-612083536
https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-612083536:167,Testability,test,tested,167,The error is happening in the call for ksw_extz2_sse in BandedNucleotideAligner::align. I have made a few tests with increasing number of sequences in the database. I tested up to 50 000 sequences and it went fine. I have also done a test including the longer sequence and about 5000 other sequences and it went fine.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-612083536
https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-612083536:234,Testability,test,test,234,The error is happening in the call for ksw_extz2_sse in BandedNucleotideAligner::align. I have made a few tests with increasing number of sequences in the database. I tested up to 50 000 sequences and it went fine. I have also done a test including the longer sequence and about 5000 other sequences and it went fine.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-612083536
https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-1674167207:27,Availability,fault,fault,27,"I also encountered segment fault issue when clustering long nucleotide sequences (up to 99 million bases). Does anyone have luck with long sequences?. ==========Invalid database read for id=4294967295, database index=dump/9317603370475534640/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (8247802); =====================Error: Offset step died; [===dump/16153251853230858118/linclust/13629425479186879042/linclust.sh: line 76: 195145 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; Error: linclust died",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-1674167207
https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-1674167207:347,Availability,Error,Error,347,"I also encountered segment fault issue when clustering long nucleotide sequences (up to 99 million bases). Does anyone have luck with long sequences?. ==========Invalid database read for id=4294967295, database index=dump/9317603370475534640/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (8247802); =====================Error: Offset step died; [===dump/16153251853230858118/linclust/13629425479186879042/linclust.sh: line 76: 195145 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; Error: linclust died",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-1674167207
https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-1674167207:474,Availability,fault,fault,474,"I also encountered segment fault issue when clustering long nucleotide sequences (up to 99 million bases). Does anyone have luck with long sequences?. ==========Invalid database read for id=4294967295, database index=dump/9317603370475534640/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (8247802); =====================Error: Offset step died; [===dump/16153251853230858118/linclust/13629425479186879042/linclust.sh: line 76: 195145 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; Error: linclust died",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-1674167207
https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-1674167207:596,Availability,Error,Error,596,"I also encountered segment fault issue when clustering long nucleotide sequences (up to 99 million bases). Does anyone have luck with long sequences?. ==========Invalid database read for id=4294967295, database index=dump/9317603370475534640/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (8247802); =====================Error: Offset step died; [===dump/16153251853230858118/linclust/13629425479186879042/linclust.sh: line 76: 195145 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; Error: linclust died",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-1674167207
https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-1674167207:624,Availability,Error,Error,624,"I also encountered segment fault issue when clustering long nucleotide sequences (up to 99 million bases). Does anyone have luck with long sequences?. ==========Invalid database read for id=4294967295, database index=dump/9317603370475534640/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (8247802); =====================Error: Offset step died; [===dump/16153251853230858118/linclust/13629425479186879042/linclust.sh: line 76: 195145 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; Error: linclust died",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-1674167207
https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616635868:44,Deployability,install,installed,44,"Thanks again. I had some issues getting gdb installed and running. Is this the output you asked for:; ```; Attaching to process 36724; [New LWP 36727]; [New LWP 36729]; [New LWP 36730]; [New LWP 36781]; [New LWP 36782]; [New LWP 36783]; [New LWP 36784]; [New LWP 36785]; [New LWP 36786]; [New LWP 36787]; [New LWP 36788]; [New LWP 36789]; [New LWP 36790]; [New LWP 36791]; [New LWP 36792]; [New LWP 36793]; [New LWP 36794]; [New LWP 36795]; [New LWP 36796]; [New LWP 36797]; [New LWP 36798]; [New LWP 36799]; [New LWP 36800]; [New LWP 36801]; [New LWP 36802]; [New LWP 36803]; [New LWP 36804]; [New LWP 36805]; [New LWP 36806]; [New LWP 36807]; [New LWP 36808]; [New LWP 36809]; [New LWP 36810]; [New LWP 36811]; [New LWP 36812]; [New LWP 36813]; [New LWP 36814]; [New LWP 36815]; [New LWP 36816]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; --Type <RET> for more, q to quit, c to continue without paging--RET; 0x00005623f9de6504 in CacheFriendlyOperations<512u>::hashIndexEntry(unsigned short, IndexEntryLocal*, unsigned long, CounterResult*) (); (gdb) bt; #0 0x00005623f9de6504 in CacheFriendlyOperations<512u>::hashIndexEntry(unsigned short, IndexEntryLocal*, unsigned long, CounterResult*) (); #1 0x00005623f9de68e5 in CacheFriendlyOperations<512u>::findDuplicates(IndexEntryLocal**, CounterResult*, unsigned long, unsigned short, unsigned short, bool) (); #2 0x00005623f9c42be0 in QueryMatcher::match(Sequence*, float*) (); #3 0x00005623f9c4393d in QueryMatcher::matchQuery(Sequence*, unsigned int) (); #4 0x00005623f9c2e113 in Prefiltering::runSplit(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, bool) [clone ._omp_fn.1] (); #5 0x00007fdb5f003cff in GOMP_parallel () from /usr/lib/x86_64-linux-gnu/libgomp.so.1; #6 0x00005623f9c337f4 in Prefiltering::runSplit(std::__cxx1",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616635868
https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616635868:1012,Performance,Cache,CacheFriendlyOperations,1012,"WP 36792]; [New LWP 36793]; [New LWP 36794]; [New LWP 36795]; [New LWP 36796]; [New LWP 36797]; [New LWP 36798]; [New LWP 36799]; [New LWP 36800]; [New LWP 36801]; [New LWP 36802]; [New LWP 36803]; [New LWP 36804]; [New LWP 36805]; [New LWP 36806]; [New LWP 36807]; [New LWP 36808]; [New LWP 36809]; [New LWP 36810]; [New LWP 36811]; [New LWP 36812]; [New LWP 36813]; [New LWP 36814]; [New LWP 36815]; [New LWP 36816]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; --Type <RET> for more, q to quit, c to continue without paging--RET; 0x00005623f9de6504 in CacheFriendlyOperations<512u>::hashIndexEntry(unsigned short, IndexEntryLocal*, unsigned long, CounterResult*) (); (gdb) bt; #0 0x00005623f9de6504 in CacheFriendlyOperations<512u>::hashIndexEntry(unsigned short, IndexEntryLocal*, unsigned long, CounterResult*) (); #1 0x00005623f9de68e5 in CacheFriendlyOperations<512u>::findDuplicates(IndexEntryLocal**, CounterResult*, unsigned long, unsigned short, unsigned short, bool) (); #2 0x00005623f9c42be0 in QueryMatcher::match(Sequence*, float*) (); #3 0x00005623f9c4393d in QueryMatcher::matchQuery(Sequence*, unsigned int) (); #4 0x00005623f9c2e113 in Prefiltering::runSplit(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, bool) [clone ._omp_fn.1] (); #5 0x00007fdb5f003cff in GOMP_parallel () from /usr/lib/x86_64-linux-gnu/libgomp.so.1; #6 0x00005623f9c337f4 in Prefiltering::runSplit(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, bool) (); #7 0x00005623f9c352ae in Prefiltering::runSplits(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<ch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616635868
https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616635868:1162,Performance,Cache,CacheFriendlyOperations,1162,"WP 36792]; [New LWP 36793]; [New LWP 36794]; [New LWP 36795]; [New LWP 36796]; [New LWP 36797]; [New LWP 36798]; [New LWP 36799]; [New LWP 36800]; [New LWP 36801]; [New LWP 36802]; [New LWP 36803]; [New LWP 36804]; [New LWP 36805]; [New LWP 36806]; [New LWP 36807]; [New LWP 36808]; [New LWP 36809]; [New LWP 36810]; [New LWP 36811]; [New LWP 36812]; [New LWP 36813]; [New LWP 36814]; [New LWP 36815]; [New LWP 36816]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; --Type <RET> for more, q to quit, c to continue without paging--RET; 0x00005623f9de6504 in CacheFriendlyOperations<512u>::hashIndexEntry(unsigned short, IndexEntryLocal*, unsigned long, CounterResult*) (); (gdb) bt; #0 0x00005623f9de6504 in CacheFriendlyOperations<512u>::hashIndexEntry(unsigned short, IndexEntryLocal*, unsigned long, CounterResult*) (); #1 0x00005623f9de68e5 in CacheFriendlyOperations<512u>::findDuplicates(IndexEntryLocal**, CounterResult*, unsigned long, unsigned short, unsigned short, bool) (); #2 0x00005623f9c42be0 in QueryMatcher::match(Sequence*, float*) (); #3 0x00005623f9c4393d in QueryMatcher::matchQuery(Sequence*, unsigned int) (); #4 0x00005623f9c2e113 in Prefiltering::runSplit(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, bool) [clone ._omp_fn.1] (); #5 0x00007fdb5f003cff in GOMP_parallel () from /usr/lib/x86_64-linux-gnu/libgomp.so.1; #6 0x00005623f9c337f4 in Prefiltering::runSplit(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, bool) (); #7 0x00005623f9c352ae in Prefiltering::runSplits(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<ch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616635868
https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616635868:1302,Performance,Cache,CacheFriendlyOperations,1302,"WP 36792]; [New LWP 36793]; [New LWP 36794]; [New LWP 36795]; [New LWP 36796]; [New LWP 36797]; [New LWP 36798]; [New LWP 36799]; [New LWP 36800]; [New LWP 36801]; [New LWP 36802]; [New LWP 36803]; [New LWP 36804]; [New LWP 36805]; [New LWP 36806]; [New LWP 36807]; [New LWP 36808]; [New LWP 36809]; [New LWP 36810]; [New LWP 36811]; [New LWP 36812]; [New LWP 36813]; [New LWP 36814]; [New LWP 36815]; [New LWP 36816]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; --Type <RET> for more, q to quit, c to continue without paging--RET; 0x00005623f9de6504 in CacheFriendlyOperations<512u>::hashIndexEntry(unsigned short, IndexEntryLocal*, unsigned long, CounterResult*) (); (gdb) bt; #0 0x00005623f9de6504 in CacheFriendlyOperations<512u>::hashIndexEntry(unsigned short, IndexEntryLocal*, unsigned long, CounterResult*) (); #1 0x00005623f9de68e5 in CacheFriendlyOperations<512u>::findDuplicates(IndexEntryLocal**, CounterResult*, unsigned long, unsigned short, unsigned short, bool) (); #2 0x00005623f9c42be0 in QueryMatcher::match(Sequence*, float*) (); #3 0x00005623f9c4393d in QueryMatcher::matchQuery(Sequence*, unsigned int) (); #4 0x00005623f9c2e113 in Prefiltering::runSplit(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, bool) [clone ._omp_fn.1] (); #5 0x00007fdb5f003cff in GOMP_parallel () from /usr/lib/x86_64-linux-gnu/libgomp.so.1; #6 0x00005623f9c337f4 in Prefiltering::runSplit(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, bool) (); #7 0x00005623f9c352ae in Prefiltering::runSplits(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<ch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616635868
https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616635868:1043,Security,hash,hashIndexEntry,1043,"WP 36792]; [New LWP 36793]; [New LWP 36794]; [New LWP 36795]; [New LWP 36796]; [New LWP 36797]; [New LWP 36798]; [New LWP 36799]; [New LWP 36800]; [New LWP 36801]; [New LWP 36802]; [New LWP 36803]; [New LWP 36804]; [New LWP 36805]; [New LWP 36806]; [New LWP 36807]; [New LWP 36808]; [New LWP 36809]; [New LWP 36810]; [New LWP 36811]; [New LWP 36812]; [New LWP 36813]; [New LWP 36814]; [New LWP 36815]; [New LWP 36816]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; --Type <RET> for more, q to quit, c to continue without paging--RET; 0x00005623f9de6504 in CacheFriendlyOperations<512u>::hashIndexEntry(unsigned short, IndexEntryLocal*, unsigned long, CounterResult*) (); (gdb) bt; #0 0x00005623f9de6504 in CacheFriendlyOperations<512u>::hashIndexEntry(unsigned short, IndexEntryLocal*, unsigned long, CounterResult*) (); #1 0x00005623f9de68e5 in CacheFriendlyOperations<512u>::findDuplicates(IndexEntryLocal**, CounterResult*, unsigned long, unsigned short, unsigned short, bool) (); #2 0x00005623f9c42be0 in QueryMatcher::match(Sequence*, float*) (); #3 0x00005623f9c4393d in QueryMatcher::matchQuery(Sequence*, unsigned int) (); #4 0x00005623f9c2e113 in Prefiltering::runSplit(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, bool) [clone ._omp_fn.1] (); #5 0x00007fdb5f003cff in GOMP_parallel () from /usr/lib/x86_64-linux-gnu/libgomp.so.1; #6 0x00005623f9c337f4 in Prefiltering::runSplit(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, bool) (); #7 0x00005623f9c352ae in Prefiltering::runSplits(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<ch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616635868
https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616635868:1193,Security,hash,hashIndexEntry,1193,"WP 36792]; [New LWP 36793]; [New LWP 36794]; [New LWP 36795]; [New LWP 36796]; [New LWP 36797]; [New LWP 36798]; [New LWP 36799]; [New LWP 36800]; [New LWP 36801]; [New LWP 36802]; [New LWP 36803]; [New LWP 36804]; [New LWP 36805]; [New LWP 36806]; [New LWP 36807]; [New LWP 36808]; [New LWP 36809]; [New LWP 36810]; [New LWP 36811]; [New LWP 36812]; [New LWP 36813]; [New LWP 36814]; [New LWP 36815]; [New LWP 36816]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; --Type <RET> for more, q to quit, c to continue without paging--RET; 0x00005623f9de6504 in CacheFriendlyOperations<512u>::hashIndexEntry(unsigned short, IndexEntryLocal*, unsigned long, CounterResult*) (); (gdb) bt; #0 0x00005623f9de6504 in CacheFriendlyOperations<512u>::hashIndexEntry(unsigned short, IndexEntryLocal*, unsigned long, CounterResult*) (); #1 0x00005623f9de68e5 in CacheFriendlyOperations<512u>::findDuplicates(IndexEntryLocal**, CounterResult*, unsigned long, unsigned short, unsigned short, bool) (); #2 0x00005623f9c42be0 in QueryMatcher::match(Sequence*, float*) (); #3 0x00005623f9c4393d in QueryMatcher::matchQuery(Sequence*, unsigned int) (); #4 0x00005623f9c2e113 in Prefiltering::runSplit(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, bool) [clone ._omp_fn.1] (); #5 0x00007fdb5f003cff in GOMP_parallel () from /usr/lib/x86_64-linux-gnu/libgomp.so.1; #6 0x00005623f9c337f4 in Prefiltering::runSplit(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, bool) (); #7 0x00005623f9c352ae in Prefiltering::runSplits(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<ch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616635868
https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616662747:111,Availability,down,down,111,@bresyd only `linclust` and `easy-linclust` supports nucleotide and should be also sensitive enough to cluster down to 75% sequence identity. I would recommend the following parameter for your use case: ; ```; mmseqs liniclust ../so245_combined_assembly_mmseqDB so245_combined_assembly_mmseq_clustered cluster_tmp --kmer-per-seq-scale 0.2 --cluster-mode 2 --alignment-mode 3 --cov-mode 1 -c 0.99 --min-seq-id 0.99 --max-seq-len 10000000 --cluster-reassign 1 --threads 40; ```; I have just added `--kmer-per-seq-scale 0.2`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616662747
https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-617174684:516,Safety,avoid,avoid,516,You set very high thresholds for coverage and sequence identity. Additional sensitivity in the clustering won't be able to combine many sequences due to the thresholds anyway. Linclust has a problem with long sequences where comparing one long sequence with another (short or long) sequence can return no common 20 (default `-m`) k-mers just by chance since one sequence is very long and it becomes unlikely to find the same k-mers. `--kmer-per-seq-scale` scales the number of `-m` k-mers up with sequence length to avoid this pitfall. Martin enable the parameter yesterday by default for nucleotide clustering.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-617174684
https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-617736180:68,Usability,responsiv,responsive,68,"Ok, good to know. Thanks a lot for explaining and also for being so responsive to all my questions, much appreciated.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-617736180
https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-624785799:19,Testability,log,log,19,"Could you post the log and the machine specs? It should work up to UINT_MAX without issue, however RAM overhead just for holding the entries also increases linearly and might become an issue at this point.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-624785799
https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625661317:72,Testability,log,log,72,@altaetran this is indeed not right. Could you please provide the whole log and command call?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625661317
https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:1339,Availability,Mask,Mask,1339,"eq-id 0.90 --kmer-per-seq 40 -c 0.9. MMseqs Version: 290668474611312a94a868bf041b38c8618f5ef6; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 160; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311
https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:1356,Availability,Mask,Mask,1356,"eq-id 0.90 --kmer-per-seq 40 -c 0.9. MMseqs Version: 290668474611312a94a868bf041b38c8618f5ef6; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 160; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311
https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:1919,Availability,mask,mask,1919,"5; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311
https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:1928,Availability,mask,mask-lower-case,1928,"5; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311
https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:2355,Availability,mask,mask,2355,"case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s 620ms; Time for processing: 5h 43m 57s 88ms; rescorediagonal inDB inDB tmp/18375844090983922724/pref tmp/18375844090983922724/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 ; -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 160 --compressed 0 -v 3. [====================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311
https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:2364,Availability,mask,mask-lower-case,2364,"case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s 620ms; Time for processing: 5h 43m 57s 88ms; rescorediagonal inDB inDB tmp/18375844090983922724/pref tmp/18375844090983922724/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 ; -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 160 --compressed 0 -v 3. [====================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311
https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:185,Deployability,install,installations,185,"the whole log overwhelms my system, but I captured most of the information that occurs before this bug:. ```; clusterer:/mnt/cluster/filt_80_2020-04-19/combined12$ time /custom_install/installations/mmseqs-nonmpi/MMseqs2/build/bin/mmseqs linclust inDB linClu90DB tmp --min-seq-id 0.90 --kme; r-per-seq 40 -c 0.9; Tmp tmp folder does not exist or is not a directory.; Create dir tmp; linclust inDB linClu90DB tmp --min-seq-id 0.90 --kmer-per-seq 40 -c 0.9. MMseqs Version: 290668474611312a94a868bf041b38c8618f5ef6; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 160; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311
https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:2596,Energy Efficiency,Reduce,Reduced,2596,"est tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s 620ms; Time for processing: 5h 43m 57s 88ms; rescorediagonal inDB inDB tmp/18375844090983922724/pref tmp/18375844090983922724/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 ; -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 160 --compressed 0 -v 3. [=================================================================] 100.00% 2.83B 1h 11m 50s 841ms. [=================================================================] ; .; .; .; 100.00% 1.00M 0s 440ms; [=================================================================] 100.00% 1",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311
https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:727,Integrability,wrap,wrapped,727,"the whole log overwhelms my system, but I captured most of the information that occurs before this bug:. ```; clusterer:/mnt/cluster/filt_80_2020-04-19/combined12$ time /custom_install/installations/mmseqs-nonmpi/MMseqs2/build/bin/mmseqs linclust inDB linClu90DB tmp --min-seq-id 0.90 --kme; r-per-seq 40 -c 0.9; Tmp tmp folder does not exist or is not a directory.; Create dir tmp; linclust inDB linClu90DB tmp --min-seq-id 0.90 --kmer-per-seq 40 -c 0.9. MMseqs Version: 290668474611312a94a868bf041b38c8618f5ef6; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 160; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311
https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:3137,Integrability,wrap,wrapped-scoring,3137,"090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s 620ms; Time for processing: 5h 43m 57s 88ms; rescorediagonal inDB inDB tmp/18375844090983922724/pref tmp/18375844090983922724/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 ; -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 160 --compressed 0 -v 3. [=================================================================] 100.00% 2.83B 1h 11m 50s 841ms. [=================================================================] ; .; .; .; 100.00% 1.00M 0s 440ms; [=================================================================] 100.00% 1.00M 0s 541ms; [=================================================================] 100.00% 1.00M 0s 501ms; [=================================================================] 100.00% 1.00M 0s 455ms; [=================================================================] 100.00% 1.00M 0s 609ms; [=================================================================] 100.00% 1.00M 0s 536ms; [=================================================================] 100.00% 1.00M 0s 626ms; [============================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311
https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:1450,Modifiability,extend,extendable,1450,"eq-id 0.90 --kmer-per-seq 40 -c 0.9. MMseqs Version: 290668474611312a94a868bf041b38c8618f5ef6; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 160; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311
https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:2045,Modifiability,extend,extendable,2045,"q. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s 620ms; Time for processing: 5h 43m 57s 88ms; rescorediagonal inDB inDB tmp/18375844090983922724/pref tmp/183758",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311
https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:2481,Modifiability,extend,extendable,2481,"ting k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s 620ms; Time for processing: 5h 43m 57s 88ms; rescorediagonal inDB inDB tmp/18375844090983922724/pref tmp/18375844090983922724/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 ; -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 160 --compressed 0 -v 3. [=================================================================] 100.00% 2.83B 1h 11m 50s 841ms. [================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311
https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:3299,Performance,load,load-mode,3299,"-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s 620ms; Time for processing: 5h 43m 57s 88ms; rescorediagonal inDB inDB tmp/18375844090983922724/pref tmp/18375844090983922724/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 ; -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 160 --compressed 0 -v 3. [=================================================================] 100.00% 2.83B 1h 11m 50s 841ms. [=================================================================] ; .; .; .; 100.00% 1.00M 0s 440ms; [=================================================================] 100.00% 1.00M 0s 541ms; [=================================================================] 100.00% 1.00M 0s 501ms; [=================================================================] 100.00% 1.00M 0s 455ms; [=================================================================] 100.00% 1.00M 0s 609ms; [=================================================================] 100.00% 1.00M 0s 536ms; [=================================================================] 100.00% 1.00M 0s 626ms; [=================================================================] 100.00% 1.00M 0s 591ms; [=================================================================] 100.00% 1.00M 0s 572ms;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311
https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:1406,Security,hash,hash,1406,"eq-id 0.90 --kmer-per-seq 40 -c 0.9. MMseqs Version: 290668474611312a94a868bf041b38c8618f5ef6; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 160; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311
https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:1993,Security,hash,hash-shift,1993,"q. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s 620ms; Time for processing: 5h 43m 57s 88ms; rescorediagonal inDB inDB tmp/18375844090983922724/pref tmp/183758",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311
https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:2429,Security,hash,hash-shift,2429,"ting k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s 620ms; Time for processing: 5h 43m 57s 88ms; rescorediagonal inDB inDB tmp/18375844090983922724/pref tmp/18375844090983922724/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 ; -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 160 --compressed 0 -v 3. [=================================================================] 100.00% 2.83B 1h 11m 50s 841ms. [================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311
https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:10,Testability,log,log,10,"the whole log overwhelms my system, but I captured most of the information that occurs before this bug:. ```; clusterer:/mnt/cluster/filt_80_2020-04-19/combined12$ time /custom_install/installations/mmseqs-nonmpi/MMseqs2/build/bin/mmseqs linclust inDB linClu90DB tmp --min-seq-id 0.90 --kme; r-per-seq 40 -c 0.9; Tmp tmp folder does not exist or is not a directory.; Create dir tmp; linclust inDB linClu90DB tmp --min-seq-id 0.90 --kmer-per-seq 40 -c 0.9. MMseqs Version: 290668474611312a94a868bf041b38c8618f5ef6; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 160; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311
https://github.com/soedinglab/MMseqs2/issues/305#issuecomment-623449501:100,Integrability,depend,dependencies,100,Glad it's working. That was super weird. Regarding your guix definition. You might also want to add dependencies to bzlib and wget. (Theoretically also awk but awk seems to demanded by the POSIX standard to always be present).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/305#issuecomment-623449501
https://github.com/soedinglab/MMseqs2/issues/306#issuecomment-624790273:35,Availability,down,download,35,"Hi @milot-mirdita . I did:; ```; # download the NCBI NR; mmseqs databases NR nr tmp; # Create index; mmseqs createindex nr tmp; # Create linsearch index; mmseqs createlinindex nr tmp; ```. Perhaps I checked again, somehow the process has failed then I runner again the `createlinindex` and it created an index with `*.linidx`. Sorry, my mistake. Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/306#issuecomment-624790273
https://github.com/soedinglab/MMseqs2/issues/308#issuecomment-625286399:708,Integrability,depend,depending,708,"1) Sounds about right. You still need to merge all clusterings in the end with `mergeclusters` (careful about the order of the input clusterings). Also keep in mind that the `cluster` workflow also has a reassignment stage since some time that is more involved to emulate (if you need something like that).; 2) You should use `filterdb` `--filter-column` + `--comparison-operator` + `--comparison-value`. It's a lot faster than `apply`.; However, I am not sure this approach is actually faster. Doing a low sensitivity clustering at 90% first and then taking all representatives and clustering at 50% is a lot faster than clustering at 50% directly and then reconstructing the 90% step.; 3. Createsubdb will depending on `--subdb-mode` either only write a new `.index` and symlink the data, or write only the selected entries (+ their respective index entry). The headers are currently always symlinked.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/308#issuecomment-625286399
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-626641482:416,Availability,failure,failure,416,"Thanks a lot! I would suggest to temporarily remove `-DENABLE_WERROR=1` from the cmake calls in Azure and Travis. I'll try to look at your changes in more detail later. I tried the debian binaries on Friday. x64 worked fine, however the ARM build failed in the regression test. I ran it inside QEMU during the night. I hope Travis and the other changes I had done based on sse2neon will be helpful to solve the test failure.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-626641482
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-626641482:272,Testability,test,test,272,"Thanks a lot! I would suggest to temporarily remove `-DENABLE_WERROR=1` from the cmake calls in Azure and Travis. I'll try to look at your changes in more detail later. I tried the debian binaries on Friday. x64 worked fine, however the ARM build failed in the regression test. I ran it inside QEMU during the night. I hope Travis and the other changes I had done based on sse2neon will be helpful to solve the test failure.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-626641482
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-626641482:411,Testability,test,test,411,"Thanks a lot! I would suggest to temporarily remove `-DENABLE_WERROR=1` from the cmake calls in Azure and Travis. I'll try to look at your changes in more detail later. I tried the debian binaries on Friday. x64 worked fine, however the ARM build failed in the regression test. I ran it inside QEMU during the night. I hope Travis and the other changes I had done based on sse2neon will be helpful to solve the test failure.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-626641482
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-627221446:112,Testability,log,log,112,Could you rebase ontop of 67d61013628911d8fce01a5aed6380f2a3de7f23? I think that should solve some of the weird log length issues with travis.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-627221446
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-627328740:199,Availability,error,error,199,The current issues seem to be:; * There seems to be an issue with older gcc and the use of`isnan` in SIMDe; * Alignments on both clang and gcc get stuck eventually; * macOS clang has a weird compile error; * GCC+ASan crashes with an internal error somewhere completely random (might be solved by using a newer gcc?). I don't have time to look at the issues until later this week though :/,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-627328740
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-627328740:242,Availability,error,error,242,The current issues seem to be:; * There seems to be an issue with older gcc and the use of`isnan` in SIMDe; * Alignments on both clang and gcc get stuck eventually; * macOS clang has a weird compile error; * GCC+ASan crashes with an internal error somewhere completely random (might be solved by using a newer gcc?). I don't have time to look at the issues until later this week though :/,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-627328740
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-627354222:96,Safety,avoid,avoid,96,> The current issues seem to be:. I think if the issues are related to SIMDe on x86 CPU. We can avoid some of the issues by enabling SIMDe only on non-x86 CPU architectures like this for now. https://github.com/lh3/minimap2/blob/master/ksw2_extd2_sse.c. ```; #ifdef __SSE2__; #ifdef USE_SIMDE; #include <simde/x86/sse2.h>; #else; #include <emmintrin.h>; #endif; ...; #ifdef __SSE4_1__; #ifdef USE_SIMDE; #include <simde/x86/sse4.1.h>; #else; #include <smmintrin.h>; #endif; #endif; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-627354222
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-629809703:36,Availability,error,error,36,"I tried compiling your fork and the error/warning list seems quite daunting. Instead I took a look at what instructions are missing for SSE2 support and found we are using exactly three ones that are only available in SSS3/SSE4.1:; * _mm_shuffle_epi8; * _mm_minpos_epu16; * _mm_extract_epi8. Porting only these instructions back from SIMDe is super easy. For Debian we then would produce only three binaries: mmseqs-sse2 mmseqs-sse41 and mmseqs-avx2. Would that be okay?. How does Debian produce binaries for architectures other than x86(_64), ARM(64) and PPCLE? SIMDe seems to only support those (and ppcle only partially). https://packages.debian.org/sid/mmseqs2 shows a lot of architectures.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-629809703
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-629809703:205,Availability,avail,available,205,"I tried compiling your fork and the error/warning list seems quite daunting. Instead I took a look at what instructions are missing for SSE2 support and found we are using exactly three ones that are only available in SSS3/SSE4.1:; * _mm_shuffle_epi8; * _mm_minpos_epu16; * _mm_extract_epi8. Porting only these instructions back from SIMDe is super easy. For Debian we then would produce only three binaries: mmseqs-sse2 mmseqs-sse41 and mmseqs-avx2. Would that be okay?. How does Debian produce binaries for architectures other than x86(_64), ARM(64) and PPCLE? SIMDe seems to only support those (and ppcle only partially). https://packages.debian.org/sid/mmseqs2 shows a lot of architectures.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-629809703
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-629985459:1239,Safety,detect,detection,1239,"> Instead I took a look at what instructions are missing for SSE2 support . I think more those are required for not-X86 ?. I've force pushed to this branch [with a newer SIMDe version](https://github.com/nemequ/simde/compare/0a0cdd20c9ac4f0cd787f60cca30c0aa1e71b6c1...aa6c5739159ca2a862b50258ad8f61afed4ca94f) including the following fixes:. https://github.com/nemequ/simde/commit/9d29f2b56ff3a93e4f13ab2075fe043ca10b7e7e common: prefer __builtin_isnan over std::isnan ; https://github.com/nemequ/simde/commit/c0af7afcc8290fba98803febb503015c2cf5a4d7 avx2: fix -Wconversion warning when assigning int to int16_t; https://github.com/nemequ/simde/commit/6791c8f891a4153a8736b7b7cdbc6f4bda7e31f8 Switch some C-style casts to use HEDLEY_STATIC_CAST.; https://github.com/nemequ/simde/commit/dbf8394561e699cb11a75a2e26d1efa121f11c79 mmx, sse, sse2: get rid of compound literals; https://github.com/nemequ/simde/commit/7185559a4df6cfb00d4730b9edb7bdb7ac3967b8 common: add -Wc++98-compat-pedantic to list of disabled warnings ; https://github.com/nemequ/simde/commit/f11544f282376cd06f53e694e9d5fd51b640e67d avx: fix aliasing issue in simde_mm_maskload_pd; https://github.com/nemequ/simde/commit/e314ce18967350aec8e899eb2acae59b95e07660 math: fix detection of __builtin_* functions; https://github.com/nemequ/simde/commit/bdf27512d41d583278ae5efee02a636d139fd806 test: disable -Wreserved-id-macro in µnit header. ; https://github.com/nemequ/simde/commit/aa6c5739159ca2a862b50258ad8f61afed4ca94f sse2, sse4.1, avx2: add some additional casts to vector types . So hopefully the result is less daunting!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-629985459
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-629985459:1355,Testability,test,test,1355,"> Instead I took a look at what instructions are missing for SSE2 support . I think more those are required for not-X86 ?. I've force pushed to this branch [with a newer SIMDe version](https://github.com/nemequ/simde/compare/0a0cdd20c9ac4f0cd787f60cca30c0aa1e71b6c1...aa6c5739159ca2a862b50258ad8f61afed4ca94f) including the following fixes:. https://github.com/nemequ/simde/commit/9d29f2b56ff3a93e4f13ab2075fe043ca10b7e7e common: prefer __builtin_isnan over std::isnan ; https://github.com/nemequ/simde/commit/c0af7afcc8290fba98803febb503015c2cf5a4d7 avx2: fix -Wconversion warning when assigning int to int16_t; https://github.com/nemequ/simde/commit/6791c8f891a4153a8736b7b7cdbc6f4bda7e31f8 Switch some C-style casts to use HEDLEY_STATIC_CAST.; https://github.com/nemequ/simde/commit/dbf8394561e699cb11a75a2e26d1efa121f11c79 mmx, sse, sse2: get rid of compound literals; https://github.com/nemequ/simde/commit/7185559a4df6cfb00d4730b9edb7bdb7ac3967b8 common: add -Wc++98-compat-pedantic to list of disabled warnings ; https://github.com/nemequ/simde/commit/f11544f282376cd06f53e694e9d5fd51b640e67d avx: fix aliasing issue in simde_mm_maskload_pd; https://github.com/nemequ/simde/commit/e314ce18967350aec8e899eb2acae59b95e07660 math: fix detection of __builtin_* functions; https://github.com/nemequ/simde/commit/bdf27512d41d583278ae5efee02a636d139fd806 test: disable -Wreserved-id-macro in µnit header. ; https://github.com/nemequ/simde/commit/aa6c5739159ca2a862b50258ad8f61afed4ca94f sse2, sse4.1, avx2: add some additional casts to vector types . So hopefully the result is less daunting!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-629985459
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495:86,Availability,error,error,86,"I still can't manage to compile the code on our servers. I get many instances of this error (or similar):; ```; lib/simde/simde/x86/avx2.h:718:62: error: cannot convert ‘simd_int {aka __vector(4) long long int}’ to ‘__vector(4) long int’ for argument ‘1’ to ‘__vector(4) long int simde_mm256_cmpeq_epi8(__vector(4) long int, __vector(4) long int)’; ```. Any idea what's happening?. ```; $ gcc -v; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/5/lto-wrapper; Target: x86_64-linux-gnu; Configured with: ../src/configure -v --with-pkgversion='Ubuntu 5.4.0-6ubuntu1~16.04.12' --with-bugurl=file:///usr/share/doc/gcc-5/README.Bugs --enable-languages=c,ada,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-5 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-5-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-5-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-5-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu; Thread model: posix; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495:147,Availability,error,error,147,"I still can't manage to compile the code on our servers. I get many instances of this error (or similar):; ```; lib/simde/simde/x86/avx2.h:718:62: error: cannot convert ‘simd_int {aka __vector(4) long long int}’ to ‘__vector(4) long int’ for argument ‘1’ to ‘__vector(4) long int simde_mm256_cmpeq_epi8(__vector(4) long int, __vector(4) long int)’; ```. Any idea what's happening?. ```; $ gcc -v; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/5/lto-wrapper; Target: x86_64-linux-gnu; Configured with: ../src/configure -v --with-pkgversion='Ubuntu 5.4.0-6ubuntu1~16.04.12' --with-bugurl=file:///usr/share/doc/gcc-5/README.Bugs --enable-languages=c,ada,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-5 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-5-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-5-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-5-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu; Thread model: posix; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495:1648,Deployability,release,release,1648,"I still can't manage to compile the code on our servers. I get many instances of this error (or similar):; ```; lib/simde/simde/x86/avx2.h:718:62: error: cannot convert ‘simd_int {aka __vector(4) long long int}’ to ‘__vector(4) long int’ for argument ‘1’ to ‘__vector(4) long int simde_mm256_cmpeq_epi8(__vector(4) long int, __vector(4) long int)’; ```. Any idea what's happening?. ```; $ gcc -v; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/5/lto-wrapper; Target: x86_64-linux-gnu; Configured with: ../src/configure -v --with-pkgversion='Ubuntu 5.4.0-6ubuntu1~16.04.12' --with-bugurl=file:///usr/share/doc/gcc-5/README.Bugs --enable-languages=c,ada,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-5 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-5-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-5-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-5-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu; Thread model: posix; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495:493,Integrability,wrap,wrapper,493,"I still can't manage to compile the code on our servers. I get many instances of this error (or similar):; ```; lib/simde/simde/x86/avx2.h:718:62: error: cannot convert ‘simd_int {aka __vector(4) long long int}’ to ‘__vector(4) long int’ for argument ‘1’ to ‘__vector(4) long int simde_mm256_cmpeq_epi8(__vector(4) long int, __vector(4) long int)’; ```. Any idea what's happening?. ```; $ gcc -v; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/5/lto-wrapper; Target: x86_64-linux-gnu; Configured with: ../src/configure -v --with-pkgversion='Ubuntu 5.4.0-6ubuntu1~16.04.12' --with-bugurl=file:///usr/share/doc/gcc-5/README.Bugs --enable-languages=c,ada,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-5 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-5-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-5-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-5-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu; Thread model: posix; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495:528,Modifiability,Config,Configured,528,"I still can't manage to compile the code on our servers. I get many instances of this error (or similar):; ```; lib/simde/simde/x86/avx2.h:718:62: error: cannot convert ‘simd_int {aka __vector(4) long long int}’ to ‘__vector(4) long int’ for argument ‘1’ to ‘__vector(4) long int simde_mm256_cmpeq_epi8(__vector(4) long int, __vector(4) long int)’; ```. Any idea what's happening?. ```; $ gcc -v; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/5/lto-wrapper; Target: x86_64-linux-gnu; Configured with: ../src/configure -v --with-pkgversion='Ubuntu 5.4.0-6ubuntu1~16.04.12' --with-bugurl=file:///usr/share/doc/gcc-5/README.Bugs --enable-languages=c,ada,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-5 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-5-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-5-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-5-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu; Thread model: posix; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495:552,Modifiability,config,configure,552,"I still can't manage to compile the code on our servers. I get many instances of this error (or similar):; ```; lib/simde/simde/x86/avx2.h:718:62: error: cannot convert ‘simd_int {aka __vector(4) long long int}’ to ‘__vector(4) long int’ for argument ‘1’ to ‘__vector(4) long int simde_mm256_cmpeq_epi8(__vector(4) long int, __vector(4) long int)’; ```. Any idea what's happening?. ```; $ gcc -v; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/5/lto-wrapper; Target: x86_64-linux-gnu; Configured with: ../src/configure -v --with-pkgversion='Ubuntu 5.4.0-6ubuntu1~16.04.12' --with-bugurl=file:///usr/share/doc/gcc-5/README.Bugs --enable-languages=c,ada,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-5 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-5-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-5-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-5-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu; Thread model: posix; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495:1108,Modifiability,plugin,plugin,1108,"I still can't manage to compile the code on our servers. I get many instances of this error (or similar):; ```; lib/simde/simde/x86/avx2.h:718:62: error: cannot convert ‘simd_int {aka __vector(4) long long int}’ to ‘__vector(4) long int’ for argument ‘1’ to ‘__vector(4) long int simde_mm256_cmpeq_epi8(__vector(4) long int, __vector(4) long int)’; ```. Any idea what's happening?. ```; $ gcc -v; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/5/lto-wrapper; Target: x86_64-linux-gnu; Configured with: ../src/configure -v --with-pkgversion='Ubuntu 5.4.0-6ubuntu1~16.04.12' --with-bugurl=file:///usr/share/doc/gcc-5/README.Bugs --enable-languages=c,ada,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-5 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-5-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-5-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-5-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu; Thread model: posix; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495:1152,Modifiability,plugin,plugin,1152,"I still can't manage to compile the code on our servers. I get many instances of this error (or similar):; ```; lib/simde/simde/x86/avx2.h:718:62: error: cannot convert ‘simd_int {aka __vector(4) long long int}’ to ‘__vector(4) long int’ for argument ‘1’ to ‘__vector(4) long int simde_mm256_cmpeq_epi8(__vector(4) long int, __vector(4) long int)’; ```. Any idea what's happening?. ```; $ gcc -v; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/5/lto-wrapper; Target: x86_64-linux-gnu; Configured with: ../src/configure -v --with-pkgversion='Ubuntu 5.4.0-6ubuntu1~16.04.12' --with-bugurl=file:///usr/share/doc/gcc-5/README.Bugs --enable-languages=c,ada,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-5 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-5-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-5-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-5-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu; Thread model: posix; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495:1617,Performance,tune,tune,1617,"I still can't manage to compile the code on our servers. I get many instances of this error (or similar):; ```; lib/simde/simde/x86/avx2.h:718:62: error: cannot convert ‘simd_int {aka __vector(4) long long int}’ to ‘__vector(4) long int’ for argument ‘1’ to ‘__vector(4) long int simde_mm256_cmpeq_epi8(__vector(4) long int, __vector(4) long int)’; ```. Any idea what's happening?. ```; $ gcc -v; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/5/lto-wrapper; Target: x86_64-linux-gnu; Configured with: ../src/configure -v --with-pkgversion='Ubuntu 5.4.0-6ubuntu1~16.04.12' --with-bugurl=file:///usr/share/doc/gcc-5/README.Bugs --enable-languages=c,ada,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-5 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-5-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-5-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-5-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu; Thread model: posix; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630190990:12,Performance,perform,performance,12,SIMDe ARM64 performance seems to be problematic. There is still some minor difference in the PROFILE regression test (AUC: 0.36739**6** vs 0.36739**8**). However the runtime is over 2x slower (14min vs 31min). I think we might want to keep sse2neon at least in the short term until SIMDe can catch. I guess PPCLE will be similar (the work for that was still incomplete though). HEAD: https://travis-ci.org/github/soedinglab/MMseqs2/jobs/687741954; PR: https://travis-ci.org/github/soedinglab/MMseqs2/jobs/688351766,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630190990
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630190990:112,Testability,test,test,112,SIMDe ARM64 performance seems to be problematic. There is still some minor difference in the PROFILE regression test (AUC: 0.36739**6** vs 0.36739**8**). However the runtime is over 2x slower (14min vs 31min). I think we might want to keep sse2neon at least in the short term until SIMDe can catch. I guess PPCLE will be similar (the work for that was still incomplete though). HEAD: https://travis-ci.org/github/soedinglab/MMseqs2/jobs/687741954; PR: https://travis-ci.org/github/soedinglab/MMseqs2/jobs/688351766,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630190990
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630814909:254,Integrability,wrap,wrapper,254,I checked it's indeed in this function. It doesn't like the simde implementation of `_mm256_loadu_si256` (https://github.com/nemequ/simde/blob/000f9bac0d339d32ec7d06d32f362e381cf4f960/simde/x86/avx.h#L3375). I think this is a function where the `simd.h` wrapper to generate either native SSE4.1 or AVX2 code was actually pretty useful. We should probably just keep using 128-bit SIMD in this case.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630814909
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630832361:200,Energy Efficiency,adapt,adapted,200,That's a bit more complicated. We had a contribution to HH-suite to support PPCLE from @dmiller423 and subsequently improvements from @jhuber6. I wanted a different approach similar to `sse2neon` and adapted the code. To re-license the code we might need to ask two more people.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630832361
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630832361:200,Modifiability,adapt,adapted,200,That's a bit more complicated. We had a contribution to HH-suite to support PPCLE from @dmiller423 and subsequently improvements from @jhuber6. I wanted a different approach similar to `sse2neon` and adapted the code. To re-license the code we might need to ask two more people.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630832361
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630944351:48,Testability,test,test,48,"The ppc64le build now only fails one regression test, the same as arm64 https://travis-ci.org/github/soedinglab/MMseqs2/jobs/688790571#L11062. > PROFILE (Time: 259s); TEST FAILED; BAD; Expected: 0.367398; Actual: 0.367396. Without this PR the ppc64le build fails 25 regression tests: https://travis-ci.org/github/soedinglab/MMseqs2/jobs/688479773#L10132",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630944351
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630944351:167,Testability,TEST,TEST,167,"The ppc64le build now only fails one regression test, the same as arm64 https://travis-ci.org/github/soedinglab/MMseqs2/jobs/688790571#L11062. > PROFILE (Time: 259s); TEST FAILED; BAD; Expected: 0.367398; Actual: 0.367396. Without this PR the ppc64le build fails 25 regression tests: https://travis-ci.org/github/soedinglab/MMseqs2/jobs/688479773#L10132",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630944351
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630944351:277,Testability,test,tests,277,"The ppc64le build now only fails one regression test, the same as arm64 https://travis-ci.org/github/soedinglab/MMseqs2/jobs/688790571#L11062. > PROFILE (Time: 259s); TEST FAILED; BAD; Expected: 0.367398; Actual: 0.367396. Without this PR the ppc64le build fails 25 regression tests: https://travis-ci.org/github/soedinglab/MMseqs2/jobs/688479773#L10132",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630944351
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-632486345:303,Performance,perform,performance,303,"@mr-c Thank you for this huge effort to port MMseqs2 to simde. I think the there are two road block at the moment for this, (1) there is difference in the regression between SSE and the scalar code, (2) the neon code not yet fully supported. . The first issues is not so easy to fix without having some performance penalty in the SSE branch. The differences betwen SSE and the scalar code originates from the following code:. simdf32_store(w_contrib[j] + (a * VECSIZE_INT), simdf32_rcp(res));. The intrinsic `simdf32_rcp` is approximating 1/res but the scalar version is computing the real value. A fix would be to switch from `simdf32_rcp` to `simdf32_div`. However this instruction is much slower and this performance critical code. The second issue has to be solved in the `simde` abstraction layer. We would require a full support of the instruction for NEON architecture. There is currently a huge speed penalty using `simde` in our regression.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-632486345
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-632486345:708,Performance,perform,performance,708,"@mr-c Thank you for this huge effort to port MMseqs2 to simde. I think the there are two road block at the moment for this, (1) there is difference in the regression between SSE and the scalar code, (2) the neon code not yet fully supported. . The first issues is not so easy to fix without having some performance penalty in the SSE branch. The differences betwen SSE and the scalar code originates from the following code:. simdf32_store(w_contrib[j] + (a * VECSIZE_INT), simdf32_rcp(res));. The intrinsic `simdf32_rcp` is approximating 1/res but the scalar version is computing the real value. A fix would be to switch from `simdf32_rcp` to `simdf32_div`. However this instruction is much slower and this performance critical code. The second issue has to be solved in the `simde` abstraction layer. We would require a full support of the instruction for NEON architecture. There is currently a huge speed penalty using `simde` in our regression.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-632486345
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-646635552:118,Performance,Perform,Performance,118,"I am not sure why Github is not linking to travis (https://travis-ci.org/github/soedinglab/MMseqs2/builds/700050415). Performance on ARM64 seems much better now, I suspect the remaining performance difference since we only issued 128-bit instructions with the `simd.h` split between 256/128 before and now ARM64 has to do 128-bit instructions from 256-bit instructions in a more round about way. We could reintroduce the code for that again and see if we get equal performance.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-646635552
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-646635552:186,Performance,perform,performance,186,"I am not sure why Github is not linking to travis (https://travis-ci.org/github/soedinglab/MMseqs2/builds/700050415). Performance on ARM64 seems much better now, I suspect the remaining performance difference since we only issued 128-bit instructions with the `simd.h` split between 256/128 before and now ARM64 has to do 128-bit instructions from 256-bit instructions in a more round about way. We could reintroduce the code for that again and see if we get equal performance.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-646635552
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-646635552:465,Performance,perform,performance,465,"I am not sure why Github is not linking to travis (https://travis-ci.org/github/soedinglab/MMseqs2/builds/700050415). Performance on ARM64 seems much better now, I suspect the remaining performance difference since we only issued 128-bit instructions with the `simd.h` split between 256/128 before and now ARM64 has to do 128-bit instructions from 256-bit instructions in a more round about way. We could reintroduce the code for that again and see if we get equal performance.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-646635552
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-646658968:71,Performance,perform,performance,71,> We could reintroduce the code for that again and see if we get equal performance. @milot-mirdita Could you push a commit that restores the 128 bit path to this PR? I don't think I understand that part of the code very well.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-646658968
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-646683517:34,Availability,down,down,34,"I think you can squash everything down to one commit soon. Only a few things remain to do I think. I wrote you in gitter, could you take a look when you have time?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-646683517
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-649132530:18,Deployability,integrat,integration,18,I finished up the integration in #321. Thanks a lot again!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-649132530
https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-649132530:18,Integrability,integrat,integration,18,I finished up the integration in #321. Thanks a lot again!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-649132530
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-626718710:198,Availability,error,error,198,Could you please run `cat /proc/cpuinfo` or `lscpu` on the 64GB node? ; If you were using the binary with the wrong instruction set (e.g. AVX2 on a CPU that does not support AVX2) it should give an error message way earlier.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-626718710
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-626718710:204,Integrability,message,message,204,Could you please run `cat /proc/cpuinfo` or `lscpu` on the 64GB node? ; If you were using the binary with the wrong instruction set (e.g. AVX2 on a CPU that does not support AVX2) it should give an error message way earlier.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-626718710
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641389444:847,Energy Efficiency,monitor,monitor,847,"[bioseq@compute-0-294 ~]$ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 12; Socket(s): 2; NUMA node(s): 4; Vendor ID: AuthenticAMD; CPU family: 16; Model: 9; Model name: AMD Opteron(tm) Processor 6172; Stepping: 1; CPU MHz: 800.000; CPU max MHz: 2100.0000; CPU min MHz: 800.0000; BogoMIPS: 4200.23; Virtualization: AMD-V; L1d cache: 64K; L1i cache: 64K; L2 cache: 512K; L3 cache: 5118K; NUMA node0 CPU(s): 0-5; NUMA node1 CPU(s): 6-11; NUMA node2 CPU(s): 18-23; NUMA node3 CPU(s): 12-17; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm 3dnowext 3dnow constant_tsc art rep_good nopl nonstop_tsc extd_apicid amd_dcm pni monitor cx16 popcnt lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt nodeid_msr hw_pstate npt lbrv svm_lock nrip_save pausefilter",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641389444
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641389444:450,Performance,cache,cache,450,"[bioseq@compute-0-294 ~]$ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 12; Socket(s): 2; NUMA node(s): 4; Vendor ID: AuthenticAMD; CPU family: 16; Model: 9; Model name: AMD Opteron(tm) Processor 6172; Stepping: 1; CPU MHz: 800.000; CPU max MHz: 2100.0000; CPU min MHz: 800.0000; BogoMIPS: 4200.23; Virtualization: AMD-V; L1d cache: 64K; L1i cache: 64K; L2 cache: 512K; L3 cache: 5118K; NUMA node0 CPU(s): 0-5; NUMA node1 CPU(s): 6-11; NUMA node2 CPU(s): 18-23; NUMA node3 CPU(s): 12-17; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm 3dnowext 3dnow constant_tsc art rep_good nopl nonstop_tsc extd_apicid amd_dcm pni monitor cx16 popcnt lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt nodeid_msr hw_pstate npt lbrv svm_lock nrip_save pausefilter",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641389444
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641389444:466,Performance,cache,cache,466,"[bioseq@compute-0-294 ~]$ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 12; Socket(s): 2; NUMA node(s): 4; Vendor ID: AuthenticAMD; CPU family: 16; Model: 9; Model name: AMD Opteron(tm) Processor 6172; Stepping: 1; CPU MHz: 800.000; CPU max MHz: 2100.0000; CPU min MHz: 800.0000; BogoMIPS: 4200.23; Virtualization: AMD-V; L1d cache: 64K; L1i cache: 64K; L2 cache: 512K; L3 cache: 5118K; NUMA node0 CPU(s): 0-5; NUMA node1 CPU(s): 6-11; NUMA node2 CPU(s): 18-23; NUMA node3 CPU(s): 12-17; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm 3dnowext 3dnow constant_tsc art rep_good nopl nonstop_tsc extd_apicid amd_dcm pni monitor cx16 popcnt lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt nodeid_msr hw_pstate npt lbrv svm_lock nrip_save pausefilter",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641389444
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641389444:481,Performance,cache,cache,481,"[bioseq@compute-0-294 ~]$ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 12; Socket(s): 2; NUMA node(s): 4; Vendor ID: AuthenticAMD; CPU family: 16; Model: 9; Model name: AMD Opteron(tm) Processor 6172; Stepping: 1; CPU MHz: 800.000; CPU max MHz: 2100.0000; CPU min MHz: 800.0000; BogoMIPS: 4200.23; Virtualization: AMD-V; L1d cache: 64K; L1i cache: 64K; L2 cache: 512K; L3 cache: 5118K; NUMA node0 CPU(s): 0-5; NUMA node1 CPU(s): 6-11; NUMA node2 CPU(s): 18-23; NUMA node3 CPU(s): 12-17; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm 3dnowext 3dnow constant_tsc art rep_good nopl nonstop_tsc extd_apicid amd_dcm pni monitor cx16 popcnt lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt nodeid_msr hw_pstate npt lbrv svm_lock nrip_save pausefilter",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641389444
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641389444:497,Performance,cache,cache,497,"[bioseq@compute-0-294 ~]$ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 12; Socket(s): 2; NUMA node(s): 4; Vendor ID: AuthenticAMD; CPU family: 16; Model: 9; Model name: AMD Opteron(tm) Processor 6172; Stepping: 1; CPU MHz: 800.000; CPU max MHz: 2100.0000; CPU min MHz: 800.0000; BogoMIPS: 4200.23; Virtualization: AMD-V; L1d cache: 64K; L1i cache: 64K; L2 cache: 512K; L3 cache: 5118K; NUMA node0 CPU(s): 0-5; NUMA node1 CPU(s): 6-11; NUMA node2 CPU(s): 18-23; NUMA node3 CPU(s): 12-17; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm 3dnowext 3dnow constant_tsc art rep_good nopl nonstop_tsc extd_apicid amd_dcm pni monitor cx16 popcnt lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt nodeid_msr hw_pstate npt lbrv svm_lock nrip_save pausefilter",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641389444
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641389444:1014,Usability,pause,pausefilter,1014,"[bioseq@compute-0-294 ~]$ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 12; Socket(s): 2; NUMA node(s): 4; Vendor ID: AuthenticAMD; CPU family: 16; Model: 9; Model name: AMD Opteron(tm) Processor 6172; Stepping: 1; CPU MHz: 800.000; CPU max MHz: 2100.0000; CPU min MHz: 800.0000; BogoMIPS: 4200.23; Virtualization: AMD-V; L1d cache: 64K; L1i cache: 64K; L2 cache: 512K; L3 cache: 5118K; NUMA node0 CPU(s): 0-5; NUMA node1 CPU(s): 6-11; NUMA node2 CPU(s): 18-23; NUMA node3 CPU(s): 12-17; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm 3dnowext 3dnow constant_tsc art rep_good nopl nonstop_tsc extd_apicid amd_dcm pni monitor cx16 popcnt lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt nodeid_msr hw_pstate npt lbrv svm_lock nrip_save pausefilter",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641389444
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641444843:217,Deployability,install,install,217,Your CPU does not support the minimum requirements of MMseqs2. However once this PR (https://github.com/soedinglab/MMseqs2/pull/309) is merged SSE2 will also be supported. If you have a Debian based machine you could install the mmseqs2 package from the debian-med apt. It already contains a precursor of this patch and should already work correctly on your CPU.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641444843
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641444843:310,Deployability,patch,patch,310,Your CPU does not support the minimum requirements of MMseqs2. However once this PR (https://github.com/soedinglab/MMseqs2/pull/309) is merged SSE2 will also be supported. If you have a Debian based machine you could install the mmseqs2 package from the debian-med apt. It already contains a precursor of this patch and should already work correctly on your CPU.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641444843
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464:153,Availability,error,error,153,"Hi There,. I'm having problems trying to install fix #309. https://github.com/soedinglab/MMseqs2/pull/309. When trying to checkout the fix code I get an error.; https://github.com/soedinglab/MMseqs2/pull/309/commits/bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; It appear that this commit is not part of the mmeseq main branch. . see below:. # git clone https://github.com/soedinglab/MMseqs2.git; Cloning into 'MMseqs2'...; remote: Enumerating objects: 284, done.; remote: Counting objects: 100% (284/284), done.; remote: Compressing objects: 100% (206/206), done.; remote: Total 34346 (delta 175), reused 143 (delta 78), pack-reused 34062; Receiving objects: 100% (34346/34346), 27.68 MiB | 13.72 MiB/s, done.; Resolving deltas: 100% (26632/26632), done.; Checking out files: 100% (968/968), done. # git checkout bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; fatal: Not a git repository (or any parent up to mount point /powerapps); Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set). I also tried to download the SIMD as a sub module.; https://github.com/simd-everywhere/simde; And integrated it with mmeseq with no success. Can you please share a guide on how to install mmesq2 from source with this fix. Your help is much appreciated. Thanks. BR,; Eyal.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464:1017,Availability,down,download,1017,"Hi There,. I'm having problems trying to install fix #309. https://github.com/soedinglab/MMseqs2/pull/309. When trying to checkout the fix code I get an error.; https://github.com/soedinglab/MMseqs2/pull/309/commits/bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; It appear that this commit is not part of the mmeseq main branch. . see below:. # git clone https://github.com/soedinglab/MMseqs2.git; Cloning into 'MMseqs2'...; remote: Enumerating objects: 284, done.; remote: Counting objects: 100% (284/284), done.; remote: Compressing objects: 100% (206/206), done.; remote: Total 34346 (delta 175), reused 143 (delta 78), pack-reused 34062; Receiving objects: 100% (34346/34346), 27.68 MiB | 13.72 MiB/s, done.; Resolving deltas: 100% (26632/26632), done.; Checking out files: 100% (968/968), done. # git checkout bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; fatal: Not a git repository (or any parent up to mount point /powerapps); Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set). I also tried to download the SIMD as a sub module.; https://github.com/simd-everywhere/simde; And integrated it with mmeseq with no success. Can you please share a guide on how to install mmesq2 from source with this fix. Your help is much appreciated. Thanks. BR,; Eyal.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464:41,Deployability,install,install,41,"Hi There,. I'm having problems trying to install fix #309. https://github.com/soedinglab/MMseqs2/pull/309. When trying to checkout the fix code I get an error.; https://github.com/soedinglab/MMseqs2/pull/309/commits/bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; It appear that this commit is not part of the mmeseq main branch. . see below:. # git clone https://github.com/soedinglab/MMseqs2.git; Cloning into 'MMseqs2'...; remote: Enumerating objects: 284, done.; remote: Counting objects: 100% (284/284), done.; remote: Compressing objects: 100% (206/206), done.; remote: Total 34346 (delta 175), reused 143 (delta 78), pack-reused 34062; Receiving objects: 100% (34346/34346), 27.68 MiB | 13.72 MiB/s, done.; Resolving deltas: 100% (26632/26632), done.; Checking out files: 100% (968/968), done. # git checkout bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; fatal: Not a git repository (or any parent up to mount point /powerapps); Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set). I also tried to download the SIMD as a sub module.; https://github.com/simd-everywhere/simde; And integrated it with mmeseq with no success. Can you please share a guide on how to install mmesq2 from source with this fix. Your help is much appreciated. Thanks. BR,; Eyal.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464:1099,Deployability,integrat,integrated,1099,"Hi There,. I'm having problems trying to install fix #309. https://github.com/soedinglab/MMseqs2/pull/309. When trying to checkout the fix code I get an error.; https://github.com/soedinglab/MMseqs2/pull/309/commits/bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; It appear that this commit is not part of the mmeseq main branch. . see below:. # git clone https://github.com/soedinglab/MMseqs2.git; Cloning into 'MMseqs2'...; remote: Enumerating objects: 284, done.; remote: Counting objects: 100% (284/284), done.; remote: Compressing objects: 100% (206/206), done.; remote: Total 34346 (delta 175), reused 143 (delta 78), pack-reused 34062; Receiving objects: 100% (34346/34346), 27.68 MiB | 13.72 MiB/s, done.; Resolving deltas: 100% (26632/26632), done.; Checking out files: 100% (968/968), done. # git checkout bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; fatal: Not a git repository (or any parent up to mount point /powerapps); Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set). I also tried to download the SIMD as a sub module.; https://github.com/simd-everywhere/simde; And integrated it with mmeseq with no success. Can you please share a guide on how to install mmesq2 from source with this fix. Your help is much appreciated. Thanks. BR,; Eyal.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464:1181,Deployability,install,install,1181,"Hi There,. I'm having problems trying to install fix #309. https://github.com/soedinglab/MMseqs2/pull/309. When trying to checkout the fix code I get an error.; https://github.com/soedinglab/MMseqs2/pull/309/commits/bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; It appear that this commit is not part of the mmeseq main branch. . see below:. # git clone https://github.com/soedinglab/MMseqs2.git; Cloning into 'MMseqs2'...; remote: Enumerating objects: 284, done.; remote: Counting objects: 100% (284/284), done.; remote: Compressing objects: 100% (206/206), done.; remote: Total 34346 (delta 175), reused 143 (delta 78), pack-reused 34062; Receiving objects: 100% (34346/34346), 27.68 MiB | 13.72 MiB/s, done.; Resolving deltas: 100% (26632/26632), done.; Checking out files: 100% (968/968), done. # git checkout bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; fatal: Not a git repository (or any parent up to mount point /powerapps); Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set). I also tried to download the SIMD as a sub module.; https://github.com/simd-everywhere/simde; And integrated it with mmeseq with no success. Can you please share a guide on how to install mmesq2 from source with this fix. Your help is much appreciated. Thanks. BR,; Eyal.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464:914,Energy Efficiency,power,powerapps,914,"Hi There,. I'm having problems trying to install fix #309. https://github.com/soedinglab/MMseqs2/pull/309. When trying to checkout the fix code I get an error.; https://github.com/soedinglab/MMseqs2/pull/309/commits/bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; It appear that this commit is not part of the mmeseq main branch. . see below:. # git clone https://github.com/soedinglab/MMseqs2.git; Cloning into 'MMseqs2'...; remote: Enumerating objects: 284, done.; remote: Counting objects: 100% (284/284), done.; remote: Compressing objects: 100% (206/206), done.; remote: Total 34346 (delta 175), reused 143 (delta 78), pack-reused 34062; Receiving objects: 100% (34346/34346), 27.68 MiB | 13.72 MiB/s, done.; Resolving deltas: 100% (26632/26632), done.; Checking out files: 100% (968/968), done. # git checkout bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; fatal: Not a git repository (or any parent up to mount point /powerapps); Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set). I also tried to download the SIMD as a sub module.; https://github.com/simd-everywhere/simde; And integrated it with mmeseq with no success. Can you please share a guide on how to install mmesq2 from source with this fix. Your help is much appreciated. Thanks. BR,; Eyal.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464:1099,Integrability,integrat,integrated,1099,"Hi There,. I'm having problems trying to install fix #309. https://github.com/soedinglab/MMseqs2/pull/309. When trying to checkout the fix code I get an error.; https://github.com/soedinglab/MMseqs2/pull/309/commits/bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; It appear that this commit is not part of the mmeseq main branch. . see below:. # git clone https://github.com/soedinglab/MMseqs2.git; Cloning into 'MMseqs2'...; remote: Enumerating objects: 284, done.; remote: Counting objects: 100% (284/284), done.; remote: Compressing objects: 100% (206/206), done.; remote: Total 34346 (delta 175), reused 143 (delta 78), pack-reused 34062; Receiving objects: 100% (34346/34346), 27.68 MiB | 13.72 MiB/s, done.; Resolving deltas: 100% (26632/26632), done.; Checking out files: 100% (968/968), done. # git checkout bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; fatal: Not a git repository (or any parent up to mount point /powerapps); Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set). I also tried to download the SIMD as a sub module.; https://github.com/simd-everywhere/simde; And integrated it with mmeseq with no success. Can you please share a guide on how to install mmesq2 from source with this fix. Your help is much appreciated. Thanks. BR,; Eyal.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464:1165,Usability,guid,guide,1165,"Hi There,. I'm having problems trying to install fix #309. https://github.com/soedinglab/MMseqs2/pull/309. When trying to checkout the fix code I get an error.; https://github.com/soedinglab/MMseqs2/pull/309/commits/bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; It appear that this commit is not part of the mmeseq main branch. . see below:. # git clone https://github.com/soedinglab/MMseqs2.git; Cloning into 'MMseqs2'...; remote: Enumerating objects: 284, done.; remote: Counting objects: 100% (284/284), done.; remote: Compressing objects: 100% (206/206), done.; remote: Total 34346 (delta 175), reused 143 (delta 78), pack-reused 34062; Receiving objects: 100% (34346/34346), 27.68 MiB | 13.72 MiB/s, done.; Resolving deltas: 100% (26632/26632), done.; Checking out files: 100% (968/968), done. # git checkout bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; fatal: Not a git repository (or any parent up to mount point /powerapps); Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set). I also tried to download the SIMD as a sub module.; https://github.com/simd-everywhere/simde; And integrated it with mmeseq with no success. Can you please share a guide on how to install mmesq2 from source with this fix. Your help is much appreciated. Thanks. BR,; Eyal.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649410251:22,Deployability,integrat,integration,22,"We finished the SIMDe integration yesterday. Please use the main MMseqs2 git. I am happy for any feedback since this is fresh from the oven, but please make a new issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649410251
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649410251:22,Integrability,integrat,integration,22,"We finished the SIMDe integration yesterday. Please use the main MMseqs2 git. I am happy for any feedback since this is fresh from the oven, but please make a new issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649410251
https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649410251:97,Usability,feedback,feedback,97,"We finished the SIMDe integration yesterday. Please use the main MMseqs2 git. I am happy for any feedback since this is fresh from the oven, but please make a new issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649410251
https://github.com/soedinglab/MMseqs2/issues/313#issuecomment-632646531:409,Availability,redundant,redundant,409,"The parameter was wrongly named. In release 11 it's now called `--shuffle` and 0 means no shuffling and 1 shuffling is enabled. However I would recommend not changing them. They are an internal optimization to help MMseqs2 not lose sensitivity in one specific case. If a machine does not have enough RAM (or if MPI is used) the target database is split and processed into multiple chunks. If one chunk is too redundant/similar/biased then `--max-seqs` can explode within this one chunk and we might lose good hits. By more or less randomly assigning sequences to any chunk we can prevent this. This parameter does not affect the order of the results in the result file (i.e. the `.m8` file). This will still pretty much random, as each query is processed by a different thread and the order of results written is thus not deterministic. If you want a sorted result file I would recommend to use `sort`:; `sort -s -k1,1 result.m8 > result_sorted.m8`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/313#issuecomment-632646531
https://github.com/soedinglab/MMseqs2/issues/313#issuecomment-632646531:36,Deployability,release,release,36,"The parameter was wrongly named. In release 11 it's now called `--shuffle` and 0 means no shuffling and 1 shuffling is enabled. However I would recommend not changing them. They are an internal optimization to help MMseqs2 not lose sensitivity in one specific case. If a machine does not have enough RAM (or if MPI is used) the target database is split and processed into multiple chunks. If one chunk is too redundant/similar/biased then `--max-seqs` can explode within this one chunk and we might lose good hits. By more or less randomly assigning sequences to any chunk we can prevent this. This parameter does not affect the order of the results in the result file (i.e. the `.m8` file). This will still pretty much random, as each query is processed by a different thread and the order of results written is thus not deterministic. If you want a sorted result file I would recommend to use `sort`:; `sort -s -k1,1 result.m8 > result_sorted.m8`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/313#issuecomment-632646531
https://github.com/soedinglab/MMseqs2/issues/313#issuecomment-632646531:194,Performance,optimiz,optimization,194,"The parameter was wrongly named. In release 11 it's now called `--shuffle` and 0 means no shuffling and 1 shuffling is enabled. However I would recommend not changing them. They are an internal optimization to help MMseqs2 not lose sensitivity in one specific case. If a machine does not have enough RAM (or if MPI is used) the target database is split and processed into multiple chunks. If one chunk is too redundant/similar/biased then `--max-seqs` can explode within this one chunk and we might lose good hits. By more or less randomly assigning sequences to any chunk we can prevent this. This parameter does not affect the order of the results in the result file (i.e. the `.m8` file). This will still pretty much random, as each query is processed by a different thread and the order of results written is thus not deterministic. If you want a sorted result file I would recommend to use `sort`:; `sort -s -k1,1 result.m8 > result_sorted.m8`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/313#issuecomment-632646531
https://github.com/soedinglab/MMseqs2/issues/313#issuecomment-632646531:409,Safety,redund,redundant,409,"The parameter was wrongly named. In release 11 it's now called `--shuffle` and 0 means no shuffling and 1 shuffling is enabled. However I would recommend not changing them. They are an internal optimization to help MMseqs2 not lose sensitivity in one specific case. If a machine does not have enough RAM (or if MPI is used) the target database is split and processed into multiple chunks. If one chunk is too redundant/similar/biased then `--max-seqs` can explode within this one chunk and we might lose good hits. By more or less randomly assigning sequences to any chunk we can prevent this. This parameter does not affect the order of the results in the result file (i.e. the `.m8` file). This will still pretty much random, as each query is processed by a different thread and the order of results written is thus not deterministic. If you want a sorted result file I would recommend to use `sort`:; `sort -s -k1,1 result.m8 > result_sorted.m8`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/313#issuecomment-632646531
https://github.com/soedinglab/MMseqs2/issues/314#issuecomment-633199244:57,Testability,log,log,57,Thank you for reporting it. Could you please provide the log and commands to reproduce the issue?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/314#issuecomment-633199244
https://github.com/soedinglab/MMseqs2/issues/314#issuecomment-633213113:665,Testability,log,log,665,"Commands to reproduce follow. First commands on the whole database (these will run OK):; mmseqs createindex db tmp. Now, split the same database, make sub-databases out of the splits and try createindex on any of the splits. This will sometimes work but most of the time will get stucked, as described. The commands:. mmseqs splitdb db db_p --split 2; mmseqs createsubdb db_p_0_2.index db_h db_p_0_2_h. These commands run smoothly and without reporting any problems. The last one is repeated for each split, as per the manual.; The problematic is then:. mmseqs createindex db_p_0_2 tmp. db can be any amino acid database, the number of splits does not matter.; The log is for db==uniref90 and 4 splits. In interactive mode I can see that there is a summary of time taken to fill the index printed after the last ""="", not sure why it is not wisible in the log. But no more lines and no progress beyond this step.; HTH; j131",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/314#issuecomment-633213113
https://github.com/soedinglab/MMseqs2/issues/314#issuecomment-633213113:855,Testability,log,log,855,"Commands to reproduce follow. First commands on the whole database (these will run OK):; mmseqs createindex db tmp. Now, split the same database, make sub-databases out of the splits and try createindex on any of the splits. This will sometimes work but most of the time will get stucked, as described. The commands:. mmseqs splitdb db db_p --split 2; mmseqs createsubdb db_p_0_2.index db_h db_p_0_2_h. These commands run smoothly and without reporting any problems. The last one is repeated for each split, as per the manual.; The problematic is then:. mmseqs createindex db_p_0_2 tmp. db can be any amino acid database, the number of splits does not matter.; The log is for db==uniref90 and 4 splits. In interactive mode I can see that there is a summary of time taken to fill the index printed after the last ""="", not sure why it is not wisible in the log. But no more lines and no progress beyond this step.; HTH; j131",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/314#issuecomment-633213113
https://github.com/soedinglab/MMseqs2/issues/316#issuecomment-642054816:8,Deployability,update,update,8,"A short update: I started working on this, however found some potential weirdness in result2msa that I want to look first before pushing the changes. Should be done in the next few days.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316#issuecomment-642054816
https://github.com/soedinglab/MMseqs2/issues/316#issuecomment-665665007:27,Testability,test,test,27,Awesome! @ChiaraVanni will test it and will we back to you in case we find any problem. Many thanks!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316#issuecomment-665665007
https://github.com/soedinglab/MMseqs2/issues/316#issuecomment-797630405:572,Availability,down,down,572,"Hi @milot-mirdita ; finally, we got our hands on the `filterresult`, and we have a couple of questions about how to proceed after the filtering.; After running:; ```; mmseqs filterresult seqDB seqDB cluDB cluDB-filt --threads 28; ```; we got few alignment DBs, the index and dbtype files. Looking at the alignment DB files, it seems that they have the cluster DB format, and the number of entries has decreased substantially. Any suggestions on converting the output of `filterresult` to a cluster DB we can use for updating? Here you can get the DB we are trying to slim down https://ndownloader.figshare.com/files/23066651. Many thanks!; Antonio",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316#issuecomment-797630405
https://github.com/soedinglab/MMseqs2/issues/316#issuecomment-797690051:149,Availability,down,down,149,"Thanks @milot-mirdita This works perfect. ; Last question, if we want to have the associated sequence DB with the subset of sequences in the slimmed down cluster DB. If we use `createsubd` with the original sequence DB and the slimmer cluster DB will only pick the representative sequences, any tips?. Many thanks!; Antonio",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316#issuecomment-797690051
https://github.com/soedinglab/MMseqs2/issues/317#issuecomment-643981473:164,Testability,log,log,164,"@liuxianghui thank you for asking this question! . ```; cd-hit-est -i $CLUSTERS.IN -c 0.95 -T $MC_CPU -M 0 -G 0 -aS 0.9 -g 1 -r 1 -d 0 -o $CLUSTERS.OUT > $CLUSTERS.log; ```. CD-HIT computes in default global sequence identity, while MMseqs2 computes local. Therefore it is not possible to mimic exactly the same behaviour. But since you turn of the the global sequence identity computation, you can get fairly close to CD-HIT's criteria. Here is my suggested parameter mapping. ```; -c 0.95 -> --min-seq-id 0.95 ; -T $MC_CPU -> --threads $MC_CPU; -G 0 -> MMseqs2 uses local alignments is the default, there is no way to make alignments global; -aS 0.9 -> --cov-mode 1 -c 0.9; -g 1 -> it is not possible with MMseqs2 using greedy incremental clustering (needed for --cov-mode 1). However, setcover assigns sequence to the best matching representative in default. ; -r 1 -> MMseqs2 in default considers forward and reverse strand; ```. Final command: . ```; mmseqs easy-cluster in.fa clu tmp --min-seq-id 0.95 --cov-mode 1 -c 0.9 --threads $MC_CPU; ```. I have also added a guide how parameters of CD-HIT and MMseqs2 are related in the documentation https://github.com/soedinglab/MMseqs2/wiki#how-do-parameters-of-cd-hit-relate-to-mmseqs2",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/317#issuecomment-643981473
https://github.com/soedinglab/MMseqs2/issues/317#issuecomment-643981473:1072,Usability,guid,guide,1072,"@liuxianghui thank you for asking this question! . ```; cd-hit-est -i $CLUSTERS.IN -c 0.95 -T $MC_CPU -M 0 -G 0 -aS 0.9 -g 1 -r 1 -d 0 -o $CLUSTERS.OUT > $CLUSTERS.log; ```. CD-HIT computes in default global sequence identity, while MMseqs2 computes local. Therefore it is not possible to mimic exactly the same behaviour. But since you turn of the the global sequence identity computation, you can get fairly close to CD-HIT's criteria. Here is my suggested parameter mapping. ```; -c 0.95 -> --min-seq-id 0.95 ; -T $MC_CPU -> --threads $MC_CPU; -G 0 -> MMseqs2 uses local alignments is the default, there is no way to make alignments global; -aS 0.9 -> --cov-mode 1 -c 0.9; -g 1 -> it is not possible with MMseqs2 using greedy incremental clustering (needed for --cov-mode 1). However, setcover assigns sequence to the best matching representative in default. ; -r 1 -> MMseqs2 in default considers forward and reverse strand; ```. Final command: . ```; mmseqs easy-cluster in.fa clu tmp --min-seq-id 0.95 --cov-mode 1 -c 0.9 --threads $MC_CPU; ```. I have also added a guide how parameters of CD-HIT and MMseqs2 are related in the documentation https://github.com/soedinglab/MMseqs2/wiki#how-do-parameters-of-cd-hit-relate-to-mmseqs2",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/317#issuecomment-643981473
https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644486973:505,Testability,benchmark,benchmarks,505,"@salvoc81 thank you for sharing this results. Very interesting! ; If you index a database with MMseqs2 then all k-mers are stored if no sensitivity `-s` is provided to `createindex`. However, if you search without an index then only k-mers above a certain `blosom62` threshold, defined by `-s`, are indexed. But it might be possible that these rejected k-mers might can be useful since compositional bias correction (`--comp-bias-corr`) can produce results with lower score than the reject k-mers. In our benchmarks this had no measurable effect. You could test if this is the causes of the disparity by providing the same `-s` as used for the search to `createindex`. Do you have a small example that I could use the reproduce this issue?. Some remark: MMseqs2 ignores indexes on the query site.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644486973
https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644486973:557,Testability,test,test,557,"@salvoc81 thank you for sharing this results. Very interesting! ; If you index a database with MMseqs2 then all k-mers are stored if no sensitivity `-s` is provided to `createindex`. However, if you search without an index then only k-mers above a certain `blosom62` threshold, defined by `-s`, are indexed. But it might be possible that these rejected k-mers might can be useful since compositional bias correction (`--comp-bias-corr`) can produce results with lower score than the reject k-mers. In our benchmarks this had no measurable effect. You could test if this is the causes of the disparity by providing the same `-s` as used for the search to `createindex`. Do you have a small example that I could use the reproduce this issue?. Some remark: MMseqs2 ignores indexes on the query site.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644486973
https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644526537:1051,Availability,down,download,1051,"@martin-steinegger I have tested by passing the same `-s` when creating the indexes, following are the results: . >Using same `-s` as `search` in `createindex` . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a*-a* | 10107 | 23.81 |; | b*-b* | 23206 | 42.43 |; | a*-b* | 8155 | 26.46 |; | b*-a* | 8390 | 37.12 |. They are just slightly different. > If you index a database with MMseqs2 then all k-mers are stored if no sensitivity -s is provided to createindex ; ; Actually I thought that could have been the problem. . In the early versions of MMseqs I had noticed the difference when running without the indexed DBs, but it was not that much, and the only side-effect was a slight increase in the overall execution time (maybe 10~20% slower).; Nevertheless, now it runs faster and matches less, which is caused from what you explained about I guess. . > Do you have a small example that I could use the reproduce this issue? . Yes, get the 2 small proteomes I used from the following link ; https://send.firefox.com/download/8d4ac7f72e90671b/#ioryCshD4vIZCAPxd30CCw. I will do another couple of tests to see if I can increase the accuracy when no indexing is performed. . `UPDATE`; @martin-steinegger I think just found the problem... ; When running `search` without selecting the matrix for pre-filtering the number of hits, as well as the running times, go back to what expect. The differences are caused in this case by the use of the default VTML in the prefiltering step. As you can see from the following table, the results are much more reasonable. >Without `--seed-sub-mat nucl:nucleotide.out,aa:blosum62.ou` in `search` . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a-a | 10209 | 29.87 |; | b-b | 23523 | 52.05 |; | a-b | 8281 | 32.13 |; | b-a | 8533 | 45.62 |; ; I confirm this is only happening when using blosum62 in the `prefilter` step",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644526537
https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644526537:1208,Deployability,UPDATE,UPDATE,1208,"@martin-steinegger I have tested by passing the same `-s` when creating the indexes, following are the results: . >Using same `-s` as `search` in `createindex` . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a*-a* | 10107 | 23.81 |; | b*-b* | 23206 | 42.43 |; | a*-b* | 8155 | 26.46 |; | b*-a* | 8390 | 37.12 |. They are just slightly different. > If you index a database with MMseqs2 then all k-mers are stored if no sensitivity -s is provided to createindex ; ; Actually I thought that could have been the problem. . In the early versions of MMseqs I had noticed the difference when running without the indexed DBs, but it was not that much, and the only side-effect was a slight increase in the overall execution time (maybe 10~20% slower).; Nevertheless, now it runs faster and matches less, which is caused from what you explained about I guess. . > Do you have a small example that I could use the reproduce this issue? . Yes, get the 2 small proteomes I used from the following link ; https://send.firefox.com/download/8d4ac7f72e90671b/#ioryCshD4vIZCAPxd30CCw. I will do another couple of tests to see if I can increase the accuracy when no indexing is performed. . `UPDATE`; @martin-steinegger I think just found the problem... ; When running `search` without selecting the matrix for pre-filtering the number of hits, as well as the running times, go back to what expect. The differences are caused in this case by the use of the default VTML in the prefiltering step. As you can see from the following table, the results are much more reasonable. >Without `--seed-sub-mat nucl:nucleotide.out,aa:blosum62.ou` in `search` . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a-a | 10209 | 29.87 |; | b-b | 23523 | 52.05 |; | a-b | 8281 | 32.13 |; | b-a | 8533 | 45.62 |; ; I confirm this is only happening when using blosum62 in the `prefilter` step",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644526537
https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644526537:1194,Performance,perform,performed,1194,"@martin-steinegger I have tested by passing the same `-s` when creating the indexes, following are the results: . >Using same `-s` as `search` in `createindex` . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a*-a* | 10107 | 23.81 |; | b*-b* | 23206 | 42.43 |; | a*-b* | 8155 | 26.46 |; | b*-a* | 8390 | 37.12 |. They are just slightly different. > If you index a database with MMseqs2 then all k-mers are stored if no sensitivity -s is provided to createindex ; ; Actually I thought that could have been the problem. . In the early versions of MMseqs I had noticed the difference when running without the indexed DBs, but it was not that much, and the only side-effect was a slight increase in the overall execution time (maybe 10~20% slower).; Nevertheless, now it runs faster and matches less, which is caused from what you explained about I guess. . > Do you have a small example that I could use the reproduce this issue? . Yes, get the 2 small proteomes I used from the following link ; https://send.firefox.com/download/8d4ac7f72e90671b/#ioryCshD4vIZCAPxd30CCw. I will do another couple of tests to see if I can increase the accuracy when no indexing is performed. . `UPDATE`; @martin-steinegger I think just found the problem... ; When running `search` without selecting the matrix for pre-filtering the number of hits, as well as the running times, go back to what expect. The differences are caused in this case by the use of the default VTML in the prefiltering step. As you can see from the following table, the results are much more reasonable. >Without `--seed-sub-mat nucl:nucleotide.out,aa:blosum62.ou` in `search` . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a-a | 10209 | 29.87 |; | b-b | 23523 | 52.05 |; | a-b | 8281 | 32.13 |; | b-a | 8533 | 45.62 |; ; I confirm this is only happening when using blosum62 in the `prefilter` step",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644526537
https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644526537:26,Testability,test,tested,26,"@martin-steinegger I have tested by passing the same `-s` when creating the indexes, following are the results: . >Using same `-s` as `search` in `createindex` . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a*-a* | 10107 | 23.81 |; | b*-b* | 23206 | 42.43 |; | a*-b* | 8155 | 26.46 |; | b*-a* | 8390 | 37.12 |. They are just slightly different. > If you index a database with MMseqs2 then all k-mers are stored if no sensitivity -s is provided to createindex ; ; Actually I thought that could have been the problem. . In the early versions of MMseqs I had noticed the difference when running without the indexed DBs, but it was not that much, and the only side-effect was a slight increase in the overall execution time (maybe 10~20% slower).; Nevertheless, now it runs faster and matches less, which is caused from what you explained about I guess. . > Do you have a small example that I could use the reproduce this issue? . Yes, get the 2 small proteomes I used from the following link ; https://send.firefox.com/download/8d4ac7f72e90671b/#ioryCshD4vIZCAPxd30CCw. I will do another couple of tests to see if I can increase the accuracy when no indexing is performed. . `UPDATE`; @martin-steinegger I think just found the problem... ; When running `search` without selecting the matrix for pre-filtering the number of hits, as well as the running times, go back to what expect. The differences are caused in this case by the use of the default VTML in the prefiltering step. As you can see from the following table, the results are much more reasonable. >Without `--seed-sub-mat nucl:nucleotide.out,aa:blosum62.ou` in `search` . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a-a | 10209 | 29.87 |; | b-b | 23523 | 52.05 |; | a-b | 8281 | 32.13 |; | b-a | 8533 | 45.62 |; ; I confirm this is only happening when using blosum62 in the `prefilter` step",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644526537
https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644526537:1130,Testability,test,tests,1130,"@martin-steinegger I have tested by passing the same `-s` when creating the indexes, following are the results: . >Using same `-s` as `search` in `createindex` . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a*-a* | 10107 | 23.81 |; | b*-b* | 23206 | 42.43 |; | a*-b* | 8155 | 26.46 |; | b*-a* | 8390 | 37.12 |. They are just slightly different. > If you index a database with MMseqs2 then all k-mers are stored if no sensitivity -s is provided to createindex ; ; Actually I thought that could have been the problem. . In the early versions of MMseqs I had noticed the difference when running without the indexed DBs, but it was not that much, and the only side-effect was a slight increase in the overall execution time (maybe 10~20% slower).; Nevertheless, now it runs faster and matches less, which is caused from what you explained about I guess. . > Do you have a small example that I could use the reproduce this issue? . Yes, get the 2 small proteomes I used from the following link ; https://send.firefox.com/download/8d4ac7f72e90671b/#ioryCshD4vIZCAPxd30CCw. I will do another couple of tests to see if I can increase the accuracy when no indexing is performed. . `UPDATE`; @martin-steinegger I think just found the problem... ; When running `search` without selecting the matrix for pre-filtering the number of hits, as well as the running times, go back to what expect. The differences are caused in this case by the use of the default VTML in the prefiltering step. As you can see from the following table, the results are much more reasonable. >Without `--seed-sub-mat nucl:nucleotide.out,aa:blosum62.ou` in `search` . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a-a | 10209 | 29.87 |; | b-b | 23523 | 52.05 |; | a-b | 8281 | 32.13 |; | b-a | 8533 | 45.62 |; ; I confirm this is only happening when using blosum62 in the `prefilter` step",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644526537
https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-674686756:1199,Availability,error,error,1199,"Hello @milot-mirdita and @martin-steinegger . ; Sorry if it took me some time to extra testing. As Milot was suggesting the problem happens when `createindex` and `search` are not set to use the Matrix.; Following I am showing the results alignments of a proteome against itself, using different combinations of of VTML80 and blosum62 for `createindex` and `search`. . | Pair | createindex | search | count | seconds |; | ------ | ------ | ------ | ------ | ------ |; | a-a | blosum62 | blosum62 | 10205 | 17.11 |; | a-a | VTML80 | blosum62 | 13962 | 91.36 |; | a-a | VTML80 | VTML80 | 14268 | 98.56 |; | a-a | blosum62 | VTML80 | 10709 | 16.5 |; | a-a | VTML40 | VTML40 | 14032 | 105.10 |. # Same alignments without indexing. | Pair | createindex | search | count | seconds |; | ------ | ------ | ------ | ------ | ------ |; | a-a | none | VTML80 | 14268 | 69.96 |; | a-a | none | blosum62 | 10205 | 13.66 |. As you can see from the second line, the results are same as in the first line of the fist table (in which only blosum62 was used). . I guess this solves the issue, and I am happy we found the problem :) ; Nevertheless, it would be very useful to have some kind of warning or even better, error message to avoid such things to happen (unless it is not the user's decision, in which case a ""--force-submat"" parameter might be handy). . Also, as I understand, among the `BLOSUM` matrixes only `blosum62` can be set at present, while different VTML matrixes can be set. . Could you please point me to somewhere I can see which MATRIXES can be used? ; Most matrixes files are under the `data` directory, but many did not work in my tests.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-674686756
https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-674686756:1205,Integrability,message,message,1205,"Hello @milot-mirdita and @martin-steinegger . ; Sorry if it took me some time to extra testing. As Milot was suggesting the problem happens when `createindex` and `search` are not set to use the Matrix.; Following I am showing the results alignments of a proteome against itself, using different combinations of of VTML80 and blosum62 for `createindex` and `search`. . | Pair | createindex | search | count | seconds |; | ------ | ------ | ------ | ------ | ------ |; | a-a | blosum62 | blosum62 | 10205 | 17.11 |; | a-a | VTML80 | blosum62 | 13962 | 91.36 |; | a-a | VTML80 | VTML80 | 14268 | 98.56 |; | a-a | blosum62 | VTML80 | 10709 | 16.5 |; | a-a | VTML40 | VTML40 | 14032 | 105.10 |. # Same alignments without indexing. | Pair | createindex | search | count | seconds |; | ------ | ------ | ------ | ------ | ------ |; | a-a | none | VTML80 | 14268 | 69.96 |; | a-a | none | blosum62 | 10205 | 13.66 |. As you can see from the second line, the results are same as in the first line of the fist table (in which only blosum62 was used). . I guess this solves the issue, and I am happy we found the problem :) ; Nevertheless, it would be very useful to have some kind of warning or even better, error message to avoid such things to happen (unless it is not the user's decision, in which case a ""--force-submat"" parameter might be handy). . Also, as I understand, among the `BLOSUM` matrixes only `blosum62` can be set at present, while different VTML matrixes can be set. . Could you please point me to somewhere I can see which MATRIXES can be used? ; Most matrixes files are under the `data` directory, but many did not work in my tests.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-674686756
https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-674686756:1216,Safety,avoid,avoid,1216,"Hello @milot-mirdita and @martin-steinegger . ; Sorry if it took me some time to extra testing. As Milot was suggesting the problem happens when `createindex` and `search` are not set to use the Matrix.; Following I am showing the results alignments of a proteome against itself, using different combinations of of VTML80 and blosum62 for `createindex` and `search`. . | Pair | createindex | search | count | seconds |; | ------ | ------ | ------ | ------ | ------ |; | a-a | blosum62 | blosum62 | 10205 | 17.11 |; | a-a | VTML80 | blosum62 | 13962 | 91.36 |; | a-a | VTML80 | VTML80 | 14268 | 98.56 |; | a-a | blosum62 | VTML80 | 10709 | 16.5 |; | a-a | VTML40 | VTML40 | 14032 | 105.10 |. # Same alignments without indexing. | Pair | createindex | search | count | seconds |; | ------ | ------ | ------ | ------ | ------ |; | a-a | none | VTML80 | 14268 | 69.96 |; | a-a | none | blosum62 | 10205 | 13.66 |. As you can see from the second line, the results are same as in the first line of the fist table (in which only blosum62 was used). . I guess this solves the issue, and I am happy we found the problem :) ; Nevertheless, it would be very useful to have some kind of warning or even better, error message to avoid such things to happen (unless it is not the user's decision, in which case a ""--force-submat"" parameter might be handy). . Also, as I understand, among the `BLOSUM` matrixes only `blosum62` can be set at present, while different VTML matrixes can be set. . Could you please point me to somewhere I can see which MATRIXES can be used? ; Most matrixes files are under the `data` directory, but many did not work in my tests.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-674686756
https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-674686756:87,Testability,test,testing,87,"Hello @milot-mirdita and @martin-steinegger . ; Sorry if it took me some time to extra testing. As Milot was suggesting the problem happens when `createindex` and `search` are not set to use the Matrix.; Following I am showing the results alignments of a proteome against itself, using different combinations of of VTML80 and blosum62 for `createindex` and `search`. . | Pair | createindex | search | count | seconds |; | ------ | ------ | ------ | ------ | ------ |; | a-a | blosum62 | blosum62 | 10205 | 17.11 |; | a-a | VTML80 | blosum62 | 13962 | 91.36 |; | a-a | VTML80 | VTML80 | 14268 | 98.56 |; | a-a | blosum62 | VTML80 | 10709 | 16.5 |; | a-a | VTML40 | VTML40 | 14032 | 105.10 |. # Same alignments without indexing. | Pair | createindex | search | count | seconds |; | ------ | ------ | ------ | ------ | ------ |; | a-a | none | VTML80 | 14268 | 69.96 |; | a-a | none | blosum62 | 10205 | 13.66 |. As you can see from the second line, the results are same as in the first line of the fist table (in which only blosum62 was used). . I guess this solves the issue, and I am happy we found the problem :) ; Nevertheless, it would be very useful to have some kind of warning or even better, error message to avoid such things to happen (unless it is not the user's decision, in which case a ""--force-submat"" parameter might be handy). . Also, as I understand, among the `BLOSUM` matrixes only `blosum62` can be set at present, while different VTML matrixes can be set. . Could you please point me to somewhere I can see which MATRIXES can be used? ; Most matrixes files are under the `data` directory, but many did not work in my tests.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-674686756
https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-674686756:1638,Testability,test,tests,1638,"Hello @milot-mirdita and @martin-steinegger . ; Sorry if it took me some time to extra testing. As Milot was suggesting the problem happens when `createindex` and `search` are not set to use the Matrix.; Following I am showing the results alignments of a proteome against itself, using different combinations of of VTML80 and blosum62 for `createindex` and `search`. . | Pair | createindex | search | count | seconds |; | ------ | ------ | ------ | ------ | ------ |; | a-a | blosum62 | blosum62 | 10205 | 17.11 |; | a-a | VTML80 | blosum62 | 13962 | 91.36 |; | a-a | VTML80 | VTML80 | 14268 | 98.56 |; | a-a | blosum62 | VTML80 | 10709 | 16.5 |; | a-a | VTML40 | VTML40 | 14032 | 105.10 |. # Same alignments without indexing. | Pair | createindex | search | count | seconds |; | ------ | ------ | ------ | ------ | ------ |; | a-a | none | VTML80 | 14268 | 69.96 |; | a-a | none | blosum62 | 10205 | 13.66 |. As you can see from the second line, the results are same as in the first line of the fist table (in which only blosum62 was used). . I guess this solves the issue, and I am happy we found the problem :) ; Nevertheless, it would be very useful to have some kind of warning or even better, error message to avoid such things to happen (unless it is not the user's decision, in which case a ""--force-submat"" parameter might be handy). . Also, as I understand, among the `BLOSUM` matrixes only `blosum62` can be set at present, while different VTML matrixes can be set. . Could you please point me to somewhere I can see which MATRIXES can be used? ; Most matrixes files are under the `data` directory, but many did not work in my tests.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-674686756
https://github.com/soedinglab/MMseqs2/issues/319#issuecomment-645040050:355,Safety,avoid,avoid,355,Thank you for the very prompt response! Your correction of course solved my problem. I don't see the dual purpose of createtsv as a deficiency at all; I simply missed the the distinction between the command formats. Perhaps adding to the clustering format documentation a line that notes the different createtsv input formats for dual purposes would help avoid confusion.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/319#issuecomment-645040050
https://github.com/soedinglab/MMseqs2/issues/319#issuecomment-645040050:153,Usability,simpl,simply,153,Thank you for the very prompt response! Your correction of course solved my problem. I don't see the dual purpose of createtsv as a deficiency at all; I simply missed the the distinction between the command formats. Perhaps adding to the clustering format documentation a line that notes the different createtsv input formats for dual purposes would help avoid confusion.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/319#issuecomment-645040050
https://github.com/soedinglab/MMseqs2/issues/320#issuecomment-665664188:94,Security,validat,validation,94,"MMseqs2 does something more sensible with `,` in `--taxon-list`. No idea what to do about the validation step though. We could add a regex to check for only sensible operators and numbers?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320#issuecomment-665664188
https://github.com/soedinglab/MMseqs2/pull/321#issuecomment-649263563:30,Deployability,release,release,30,Huzzah! When can expect a new release with these changes incorporated?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/321#issuecomment-649263563
https://github.com/soedinglab/MMseqs2/pull/321#issuecomment-649476038:24,Deployability,release,release,24,"@mr-c yes, we will soon release a new version! Thank you so much for this great work.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/321#issuecomment-649476038
https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649841049:102,Availability,recover,recover,102,"I tried to reconstruct the command that probably crashed. Could you run it again inside a debugger to recover the backtrace? I have no clue what could have gone wrong so early in the command invocation (the running module had no output at all before it crashed).; 1) Run the following command; ```; gdb --args mmseqs rescorediagonal /export/tmp/MERC/4233864688410091672/input_step_redundancy /export/tmp/MERC/4233864688410091672/input_step_redundancy /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter2 /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3; ```; 2) wait for a command prompt; 3) press `r` for run and then enter; 4) wait for the crash; 5) press `bt` for backtrace and then enter; 6) copy the output and paste it here. Thanks a lot for reporting the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649841049
https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649841049:675,Integrability,wrap,wrapped-scoring,675,"I tried to reconstruct the command that probably crashed. Could you run it again inside a debugger to recover the backtrace? I have no clue what could have gone wrong so early in the command invocation (the running module had no output at all before it crashed).; 1) Run the following command; ```; gdb --args mmseqs rescorediagonal /export/tmp/MERC/4233864688410091672/input_step_redundancy /export/tmp/MERC/4233864688410091672/input_step_redundancy /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter2 /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3; ```; 2) wait for a command prompt; 3) press `r` for run and then enter; 4) wait for the crash; 5) press `bt` for backtrace and then enter; 6) copy the output and paste it here. Thanks a lot for reporting the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649841049
https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649841049:835,Performance,load,load-mode,835,"I tried to reconstruct the command that probably crashed. Could you run it again inside a debugger to recover the backtrace? I have no clue what could have gone wrong so early in the command invocation (the running module had no output at all before it crashed).; 1) Run the following command; ```; gdb --args mmseqs rescorediagonal /export/tmp/MERC/4233864688410091672/input_step_redundancy /export/tmp/MERC/4233864688410091672/input_step_redundancy /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter2 /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3; ```; 2) wait for a command prompt; 3) press `r` for run and then enter; 4) wait for the crash; 5) press `bt` for backtrace and then enter; 6) copy the output and paste it here. Thanks a lot for reporting the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649841049
https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649841049:102,Safety,recover,recover,102,"I tried to reconstruct the command that probably crashed. Could you run it again inside a debugger to recover the backtrace? I have no clue what could have gone wrong so early in the command invocation (the running module had no output at all before it crashed).; 1) Run the following command; ```; gdb --args mmseqs rescorediagonal /export/tmp/MERC/4233864688410091672/input_step_redundancy /export/tmp/MERC/4233864688410091672/input_step_redundancy /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter2 /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3; ```; 2) wait for a command prompt; 3) press `r` for run and then enter; 4) wait for the crash; 5) press `bt` for backtrace and then enter; 6) copy the output and paste it here. Thanks a lot for reporting the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649841049
https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649892972:1417,Availability,fault,fault,1417,"I re-ran from the very beginning (because it seems the temp files were auto-removed, e.g., `input_step_redundancy`). However, there is no backtrace output.; ```; Time for merging to pref_filter1: 0h 0m 45s 203ms; Time for processing: 0h 1m 56s 417ms; filterdb /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter1 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 --filter-file /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/order_redundancy --threads 96 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 245.75M 2m 6s 123ms; Time for merging to pref_filter2: 0h 2m 13s 365ms; Time for processing: 0h 6m 17s 259ms; rescorediagonal /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0; --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3. Segmentation fault (core dumped) ] 0.00% 1 eta -; Error: Ungapped alignment step died; Error: Search died; [Inferior 1 (process 161684) exited with code 01]; (gdb) bt; No stack.; ```; Let me know if there is something else I can test.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649892972
https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649892972:1454,Availability,Error,Error,1454,"I re-ran from the very beginning (because it seems the temp files were auto-removed, e.g., `input_step_redundancy`). However, there is no backtrace output.; ```; Time for merging to pref_filter1: 0h 0m 45s 203ms; Time for processing: 0h 1m 56s 417ms; filterdb /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter1 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 --filter-file /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/order_redundancy --threads 96 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 245.75M 2m 6s 123ms; Time for merging to pref_filter2: 0h 2m 13s 365ms; Time for processing: 0h 6m 17s 259ms; rescorediagonal /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0; --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3. Segmentation fault (core dumped) ] 0.00% 1 eta -; Error: Ungapped alignment step died; Error: Search died; [Inferior 1 (process 161684) exited with code 01]; (gdb) bt; No stack.; ```; Let me know if there is something else I can test.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649892972
https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649892972:1491,Availability,Error,Error,1491,"I re-ran from the very beginning (because it seems the temp files were auto-removed, e.g., `input_step_redundancy`). However, there is no backtrace output.; ```; Time for merging to pref_filter1: 0h 0m 45s 203ms; Time for processing: 0h 1m 56s 417ms; filterdb /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter1 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 --filter-file /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/order_redundancy --threads 96 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 245.75M 2m 6s 123ms; Time for merging to pref_filter2: 0h 2m 13s 365ms; Time for processing: 0h 6m 17s 259ms; rescorediagonal /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0; --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3. Segmentation fault (core dumped) ] 0.00% 1 eta -; Error: Ungapped alignment step died; Error: Search died; [Inferior 1 (process 161684) exited with code 01]; (gdb) bt; No stack.; ```; Let me know if there is something else I can test.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649892972
https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649892972:1197,Integrability,wrap,wrapped-scoring,1197,"I re-ran from the very beginning (because it seems the temp files were auto-removed, e.g., `input_step_redundancy`). However, there is no backtrace output.; ```; Time for merging to pref_filter1: 0h 0m 45s 203ms; Time for processing: 0h 1m 56s 417ms; filterdb /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter1 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 --filter-file /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/order_redundancy --threads 96 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 245.75M 2m 6s 123ms; Time for merging to pref_filter2: 0h 2m 13s 365ms; Time for processing: 0h 6m 17s 259ms; rescorediagonal /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0; --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3. Segmentation fault (core dumped) ] 0.00% 1 eta -; Error: Ungapped alignment step died; Error: Search died; [Inferior 1 (process 161684) exited with code 01]; (gdb) bt; No stack.; ```; Let me know if there is something else I can test.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649892972
https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649892972:1358,Performance,load,load-mode,1358,"I re-ran from the very beginning (because it seems the temp files were auto-removed, e.g., `input_step_redundancy`). However, there is no backtrace output.; ```; Time for merging to pref_filter1: 0h 0m 45s 203ms; Time for processing: 0h 1m 56s 417ms; filterdb /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter1 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 --filter-file /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/order_redundancy --threads 96 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 245.75M 2m 6s 123ms; Time for merging to pref_filter2: 0h 2m 13s 365ms; Time for processing: 0h 6m 17s 259ms; rescorediagonal /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0; --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3. Segmentation fault (core dumped) ] 0.00% 1 eta -; Error: Ungapped alignment step died; Error: Search died; [Inferior 1 (process 161684) exited with code 01]; (gdb) bt; No stack.; ```; Let me know if there is something else I can test.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649892972
https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649892972:1633,Testability,test,test,1633,"I re-ran from the very beginning (because it seems the temp files were auto-removed, e.g., `input_step_redundancy`). However, there is no backtrace output.; ```; Time for merging to pref_filter1: 0h 0m 45s 203ms; Time for processing: 0h 1m 56s 417ms; filterdb /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter1 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 --filter-file /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/order_redundancy --threads 96 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 245.75M 2m 6s 123ms; Time for merging to pref_filter2: 0h 2m 13s 365ms; Time for processing: 0h 6m 17s 259ms; rescorediagonal /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0; --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3. Segmentation fault (core dumped) ] 0.00% 1 eta -; Error: Ungapped alignment step died; Error: Search died; [Inferior 1 (process 161684) exited with code 01]; (gdb) bt; No stack.; ```; Let me know if there is something else I can test.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649892972
https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649893743:544,Integrability,wrap,wrapped-scoring,544,"Please run only the `rescorediagonal` module in GDB or it won't be able to catch the crash:; ```; gdb --args mmseqs rescorediagonal /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0; --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649893743
https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649893743:705,Performance,load,load-mode,705,"Please run only the `rescorediagonal` module in GDB or it won't be able to catch the crash:; ```; gdb --args mmseqs rescorediagonal /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0; --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649893743
https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649895137:95,Availability,fault,fault,95,"Good to know. Here is the output; ```; Thread 1 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; 0x00005555555c0446 in doRescorediagonal(Parameters&, DBWriter&, DBReader<unsigned int>&, unsigned long, unsigned long) [clone ._omp_fn.0] (); (gdb) bt; #0 0x00005555555c0446 in doRescorediagonal(Parameters&, DBWriter&, DBReader<unsigned int>&, unsigned long, unsigned long) [clone ._omp_fn.0] (); #1 0x00007ffff726fecf in GOMP_parallel () from /usr/lib/x86_64-linux-gnu/libgomp.so.1; #2 0x00005555555bc7de in doRescorediagonal(Parameters&, DBWriter&, DBReader<unsigned int>&, unsigned long, unsigned long) (); #3 0x00005555555c2014 in rescorediagonal(int, char const**, Command const&) (); #4 0x00005555555ac4a5 in runCommand(Command*, int, char const**) (); #5 0x000055555559dfbc in main (); (gdb); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649895137
https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649899862:114,Availability,fault,fault,114,"Yes. This is the gdb output using Debug compiling. ```; Thread 156 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x7ffd0fff7700 (LWP 230283)]; 0x00005555556f98a4 in DistanceCalculator::computeSubstitutionDistance<char> (seq1=0x7ff249252000 ""\037\213\b\b\217-h["",; seq2=0x7ff249252000 ""\037\213\b\b\217-h["", length=295, subMat=0x555555d7a8a0, globalAlignment=false); at /export/premium/software/MMseqs2/src/alignment/DistanceCalculator.h:29; 29 int curr = subMat[static_cast<int>(seq1[pos])][static_cast<int>(seq2[pos])];; (gdb) bt; #0 0x00005555556f98a4 in DistanceCalculator::computeSubstitutionDistance<char> (seq1=0x7ff249252000 ""\037\213\b\b\217-h["",; seq2=0x7ff249252000 ""\037\213\b\b\217-h["", length=295, subMat=0x555555d7a8a0, globalAlignment=false); at /export/premium/software/MMseqs2/src/alignment/DistanceCalculator.h:29; #1 0x00005555556f85d3 in DistanceCalculator::ungappedAlignmentByDiagonal<char> (querySeq=0x7ff249252000 ""\037\213\b\b\217-h["", querySeqLen=295,; dbSeq=0x7ff249252000 ""\037\213\b\b\217-h["", dbSeqLen=295, diagonal=0, subMat=0x555555d7a8a0, alnMode=1); at /export/premium/software/MMseqs2/src/alignment/DistanceCalculator.h:130; #2 0x00005555556f783c in DistanceCalculator::computeUngappedAlignment<char> (querySeq=0x7ff249252000 ""\037\213\b\b\217-h["", querySeqLen=295,; dbSeq=0x7ff249252000 ""\037\213\b\b\217-h["", dbSeqLen=295, diagonal=0, subMat=0x555555d7a8a0, alnMode=1); at /export/premium/software/MMseqs2/src/alignment/DistanceCalculator.h:107; #3 0x00005555556f311b in doRescorediagonal(Parameters&, DBWriter&, DBReader<unsigned int>&, unsigned long, unsigned long) [clone ._omp_fn.0] (); at /export/premium/software/MMseqs2/src/alignment/rescorediagonal.cpp:222; #4 0x00007ffff727895e in ?? () from /usr/lib/x86_64-linux-gnu/libgomp.so.1; #5 0x00007ffff6e326db in start_thread (arg=0x7ffd0fff7700) at pthread_create.c:463; #6 0x00007ffff6b5b88f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95; (gdb); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649899862
https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649908107:228,Performance,perform,performance,228,"I think I know what's going on. I think MERC contains `*` character to mark gene starts and stop codons. In the normal MMseqs2 search etc we handle this case correctly, but Linclust uses a special sequence reading mode for best performance. You can get around the issue by doing something like:; ```; zcat MERC.fasta.gz | tr -d '*' | mmseqs easy-linclust stdin MERC /export/tmp/MERC -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 0.5 --split-memory-limit 500G; ```; (Not 100% sure the FASTA headers don't contain any `*` characters, this command will eliminate all `*`).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649908107
https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649912553:50,Availability,error,error,50,That's my initial guess actually 😄 I got the same error for MERC and metaclust_nr and I found they all have stop codon symbols in it. I really appreciate your help in investigating this issue. Let me remove `*` symbols and run it again.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649912553
https://github.com/soedinglab/MMseqs2/issues/324#issuecomment-650853144:106,Performance,perform,performance,106,That's most likely a different issue. We have a problem if we estimate RAM usage wrong. When that happens performance usually tanks pretty hard. Martin did some improvements recently to lessen this problem but apparently its still a problem. . What are the system specs where you are running this clustering on?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324#issuecomment-650853144
https://github.com/soedinglab/MMseqs2/issues/324#issuecomment-651239232:355,Performance,cache,cache,355,"I think the sequence database is just a bit too large to fit into RAM. You could try to use the `--compressed 1` parameter to compress each sequence (and all intermediate databases). You will pay a slight cost in runtime for the constant decompression, but that will be more than offset since the sequences will not be constantly evicted from the OS file cache. Dealing with billions of sequences is still kind of awkward and difficult. We have to improve memory management for these cases.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324#issuecomment-651239232
https://github.com/soedinglab/MMseqs2/issues/325#issuecomment-652402322:258,Availability,error,error,258,"The issue is basically that MMseqs2 cannot extract any putative protein ORFs from the nucleotide reads since the default minimum length threshold is too long. You can reduce this threshold with something like `--min-length 15` (15*3=45 nucl min length). The error message is pretty bad, we should fix this. Btw `plass` include a `mergereads` module to produce merged reads from paired reads and produces a sequence database that can then be read by `mmseqs search` that might be useful to extend some of the read lengths a bit and produce better annotations.; You can also first run the complete `plass` workflow to produce assembled proteins that can be better annotated. Plass will also struggle with the same parameter though and would also need a shorter `--min-length`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/325#issuecomment-652402322
https://github.com/soedinglab/MMseqs2/issues/325#issuecomment-652402322:167,Energy Efficiency,reduce,reduce,167,"The issue is basically that MMseqs2 cannot extract any putative protein ORFs from the nucleotide reads since the default minimum length threshold is too long. You can reduce this threshold with something like `--min-length 15` (15*3=45 nucl min length). The error message is pretty bad, we should fix this. Btw `plass` include a `mergereads` module to produce merged reads from paired reads and produces a sequence database that can then be read by `mmseqs search` that might be useful to extend some of the read lengths a bit and produce better annotations.; You can also first run the complete `plass` workflow to produce assembled proteins that can be better annotated. Plass will also struggle with the same parameter though and would also need a shorter `--min-length`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/325#issuecomment-652402322
https://github.com/soedinglab/MMseqs2/issues/325#issuecomment-652402322:264,Integrability,message,message,264,"The issue is basically that MMseqs2 cannot extract any putative protein ORFs from the nucleotide reads since the default minimum length threshold is too long. You can reduce this threshold with something like `--min-length 15` (15*3=45 nucl min length). The error message is pretty bad, we should fix this. Btw `plass` include a `mergereads` module to produce merged reads from paired reads and produces a sequence database that can then be read by `mmseqs search` that might be useful to extend some of the read lengths a bit and produce better annotations.; You can also first run the complete `plass` workflow to produce assembled proteins that can be better annotated. Plass will also struggle with the same parameter though and would also need a shorter `--min-length`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/325#issuecomment-652402322
https://github.com/soedinglab/MMseqs2/issues/325#issuecomment-652402322:489,Modifiability,extend,extend,489,"The issue is basically that MMseqs2 cannot extract any putative protein ORFs from the nucleotide reads since the default minimum length threshold is too long. You can reduce this threshold with something like `--min-length 15` (15*3=45 nucl min length). The error message is pretty bad, we should fix this. Btw `plass` include a `mergereads` module to produce merged reads from paired reads and produces a sequence database that can then be read by `mmseqs search` that might be useful to extend some of the read lengths a bit and produce better annotations.; You can also first run the complete `plass` workflow to produce assembled proteins that can be better annotated. Plass will also struggle with the same parameter though and would also need a shorter `--min-length`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/325#issuecomment-652402322
https://github.com/soedinglab/MMseqs2/issues/327#issuecomment-653693937:577,Availability,down,down,577,"MMseqs2 uses by default spaced double consecutive 15-mer matches for prefiltering in the nucleotide search. Since they are spaced (i.e. are actually 22-mers with 15 informative and 7 ignored position) we can still find non-exact matches. . For your sequences this is still much to long of a k-mer and it did not stand a chance to find a match. The 5-mers (actually 11 mer with 5 informative and 6 ignored positions) were able to find this, however this will increase the number of false positive matches that have to rejected by the alignment stage by a lot and therefore slow down the search by quite a bit. You can play with k-mers and k-mer pattern parameters (`-k`, `--spaced-kmer-mode`, `--spaced-kmer-pattern`). `-s` doesn't do anything for nucleotide searches we don't have real substitution matrices so we cannot generate similar k-mers. . You might want to do a translated-translated search (`--search-type 2`) though, there you will probably be able to find a lot more since synonymous mutations disappear and we can generate similar k-mers (`-s` sensitivity parameter). I am not 100% sure why the alignment is truncated though since I am not super familiar with the nucleotide search code, but It might be to the `--zdrop` parameter which stops nucleotide alignments early if they become to bad. See the documentation of minimap2 for how it works (https://lh3.github.io/minimap2/minimap2.html, we use the alignment algorithm implemented by minimap2).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/327#issuecomment-653693937
https://github.com/soedinglab/MMseqs2/issues/327#issuecomment-654266176:606,Modifiability,extend,extending,606,"Thank you for your response. > -s doesn't do anything for nucleotide searches we don't have real substitution matrices so we cannot generate similar k-mers. I think the wiki misses this detail. The `mmseqs` manual even suggests that a substitution matrix is used for nucleotide k-mer generation (the part with `nucl:nucleotide.out`):. ```; --seed-sub-mat MAT Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]; ```. > but It might be to the --zdrop parameter which stops nucleotide alignments early. Unfortunately, increasing `--zdrop` does not fix the truncation. Actually, extending the alignment to the left should even increase the score because the next position would contain a match (`C` with `C`).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/327#issuecomment-654266176
https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-663085284:55,Availability,error,error,55,with the latest release (11-e1a1c) I also get the same error reported above:. Clustering mode: Set Cover; [=================================================================] 17.92K 0s 5ms; Sort entries; Find missing connections; Found 16944 new connections.; Reconstruct initial order; Alignment format is not supported!; Error: Clustering step 2 died,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-663085284
https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-663085284:322,Availability,Error,Error,322,with the latest release (11-e1a1c) I also get the same error reported above:. Clustering mode: Set Cover; [=================================================================] 17.92K 0s 5ms; Sort entries; Find missing connections; Found 16944 new connections.; Reconstruct initial order; Alignment format is not supported!; Error: Clustering step 2 died,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-663085284
https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-663085284:16,Deployability,release,release,16,with the latest release (11-e1a1c) I also get the same error reported above:. Clustering mode: Set Cover; [=================================================================] 17.92K 0s 5ms; Sort entries; Find missing connections; Found 16944 new connections.; Reconstruct initial order; Alignment format is not supported!; Error: Clustering step 2 died,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-663085284
https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-771475381:90,Availability,error,error,90,"Was this bug actually fixed, aside from the way you use the command? I still get the same error when using --cluster-reassign:. Input:; ` mmseqs cluster DB_in DB_clustered tmp/ --cluster-reassign --cluster-mode 1 --cov-mode 0` . Error:; `Found 100 new connections.; Reconstruct initial order; Alignment format is not supported! ] 0.00% 1 eta -; Alignment format is not supported!; Alignment format is not supported!; Error: Clustering step 2 died`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-771475381
https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-771475381:229,Availability,Error,Error,229,"Was this bug actually fixed, aside from the way you use the command? I still get the same error when using --cluster-reassign:. Input:; ` mmseqs cluster DB_in DB_clustered tmp/ --cluster-reassign --cluster-mode 1 --cov-mode 0` . Error:; `Found 100 new connections.; Reconstruct initial order; Alignment format is not supported! ] 0.00% 1 eta -; Alignment format is not supported!; Alignment format is not supported!; Error: Clustering step 2 died`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-771475381
https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-771475381:417,Availability,Error,Error,417,"Was this bug actually fixed, aside from the way you use the command? I still get the same error when using --cluster-reassign:. Input:; ` mmseqs cluster DB_in DB_clustered tmp/ --cluster-reassign --cluster-mode 1 --cov-mode 0` . Error:; `Found 100 new connections.; Reconstruct initial order; Alignment format is not supported! ] 0.00% 1 eta -; Alignment format is not supported!; Alignment format is not supported!; Error: Clustering step 2 died`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-771475381
https://github.com/soedinglab/MMseqs2/issues/331#issuecomment-658817648:210,Availability,down,down,210,"It seems like your clustering step does not need to align a lot. Single node alignment time is ~50 sec, multi node is 10 sec. So there is not much speed up when using MPI. However if you cluster large database down to 30% sequence identity using `easy-cluster` then it should significantly faster.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/331#issuecomment-658817648
https://github.com/soedinglab/MMseqs2/issues/331#issuecomment-665657349:32,Performance,optimiz,optimized,32,"Linclust is just not super well optimized to exploit MPI very well since it clusters up to the max of 2^32 sequences in a day or so on our servers. A lot of time is probably also spent on IO operations, which are necessary for MPI to workand are not needed in the non-MPI version. I would recommend only to try out the MPI version when you get to datasets of a few hundred million to billions of sequences. Or in case you run `easy-cluster` as martin said, `easy-cluster` runs Linclust as a preclustering step and then runs the way more compute intensive `prefilter` and `align` algorithms. These can profit a lot from MPI.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/331#issuecomment-665657349
https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656621988:310,Availability,down,download,310,"We introduced the module after the 11th release. It will be part of the next one. You can either use the non ""easy"" workflow, i.e. something like:; ```; mmseqs createdb query.fasta qdb; mmseqs createdb target.fasta tdb; mmseqs rbh qdb tdb res tmp; mmseqs convertalis qdb tdb res res.m8; ```. or you can either download precompiled binaries from the latest git commit at https://mmseqs.com/latest or build the code from source.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656621988
https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656621988:40,Deployability,release,release,40,"We introduced the module after the 11th release. It will be part of the next one. You can either use the non ""easy"" workflow, i.e. something like:; ```; mmseqs createdb query.fasta qdb; mmseqs createdb target.fasta tdb; mmseqs rbh qdb tdb res tmp; mmseqs convertalis qdb tdb res res.m8; ```. or you can either download precompiled binaries from the latest git commit at https://mmseqs.com/latest or build the code from source.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656621988
https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656969705:454,Availability,down,download,454,"I did what you suggested. It worked well. Thanks. On Fri, Jul 10, 2020, 16:44 Milot Mirdita <notifications@github.com> wrote:. > We introduced the module after the 11th release. It will be part of the; > next one.; >; > You can either use the non ""easy"" workflow, i.e. something like:; >; > mmseqs createdb query.fasta qdb; > mmseqs createdb target.fasta tdb; > mmseqs rbh qdb tdb res tmp; > mmseqs convertalis qdb tdb res res.m8; >; > or you can either download precompiled binaries from the latest git commit; > at https://mmseqs.com/latest or build the code from source.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656621988>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AE545CK2WHJAOVZ6JC27IUDR23Z2BANCNFSM4OWPFQCA>; > .; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656969705
https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656969705:169,Deployability,release,release,169,"I did what you suggested. It worked well. Thanks. On Fri, Jul 10, 2020, 16:44 Milot Mirdita <notifications@github.com> wrote:. > We introduced the module after the 11th release. It will be part of the; > next one.; >; > You can either use the non ""easy"" workflow, i.e. something like:; >; > mmseqs createdb query.fasta qdb; > mmseqs createdb target.fasta tdb; > mmseqs rbh qdb tdb res tmp; > mmseqs convertalis qdb tdb res res.m8; >; > or you can either download precompiled binaries from the latest git commit; > at https://mmseqs.com/latest or build the code from source.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656621988>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AE545CK2WHJAOVZ6JC27IUDR23Z2BANCNFSM4OWPFQCA>; > .; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656969705
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-662996304:91,Availability,error,errors,91,"An issue with the associated files (eg., `.index`) is that if >=1 of them are missing, the errors are often cryptic and not just ""File X is missing"".",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-662996304
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:150,Availability,error,error,150,"I tried re-making both sequence databases via `mmseqs createdb`, and I now get a longer output, but it still dies with a `No datafile could be found` error. . <details>; <summary>The entire output</summary>. ```; diffseqdbs /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/all_genes/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/removedSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/mappingSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqs --use-seq-id 0 --threads 12 --compressed 0 -v 3. Time for processing: 0h 0m 0s 96ms; ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs -v 3 --subdb-mode 1. Time for merging to NEWDB.newSeqs: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 117ms; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq. [=================================================================] 34.26K 0s 16ms; Time for merging to OLDDB.r",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:2901,Availability,mask,mask,2901,"==============================] 34.26K 0s 16ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 253ms; Time for processing: 0h 0m 0s 470ms; ===================================================; ======== Search the new sequences against =========; ========= previous (rep seq of) clusters ==========; ===================================================; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/search/9308835922661050105/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3 -s 4.0. Query database size: 6 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 34258 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6; Index table: counting k-mers; [=================================================================] 34.26K 0s 519ms; Index table: Masked residues: 72412; Index table: fill; [=================================================================] 34.26K 0s 429ms; Index statistics; Entries: 9905952; DB size: 544 MB; Avg k-mer size: 0.154780; Top 10 k-mers; GPGGTL	164; GQQVAR	114; GLGNGK	80; GEGGVV	73; GPGGTT	69; LLDPAL	54; SGGSLR	53; LLGPGK	49; GQQIAR	49; GQQLAR	48; Time for index table init: 0h 0m 1s 840ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 34258; [========",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:2910,Availability,mask,mask-lower-case,2910,"==============================] 34.26K 0s 16ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 253ms; Time for processing: 0h 0m 0s 470ms; ===================================================; ======== Search the new sequences against =========; ========= previous (rep seq of) clusters ==========; ===================================================; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/search/9308835922661050105/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3 -s 4.0. Query database size: 6 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 34258 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6; Index table: counting k-mers; [=================================================================] 34.26K 0s 519ms; Index table: Masked residues: 72412; Index table: fill; [=================================================================] 34.26K 0s 429ms; Index statistics; Entries: 9905952; DB size: 544 MB; Avg k-mer size: 0.154780; Top 10 k-mers; GPGGTL	164; GQQVAR	114; GLGNGK	80; GEGGVV	73; GPGGTT	69; LLDPAL	54; SGGSLR	53; LLGPGK	49; GQQIAR	49; GQQLAR	48; Time for index table init: 0h 0m 1s 840ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 34258; [========",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:3367,Availability,Mask,Masked,3367,"ut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/search/9308835922661050105/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3 -s 4.0. Query database size: 6 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 34258 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6; Index table: counting k-mers; [=================================================================] 34.26K 0s 519ms; Index table: Masked residues: 72412; Index table: fill; [=================================================================] 34.26K 0s 429ms; Index statistics; Entries: 9905952; DB size: 544 MB; Avg k-mer size: 0.154780; Top 10 k-mers; GPGGTL	164; GQQVAR	114; GLGNGK	80; GEGGVV	73; GPGGTT	69; LLDPAL	54; SGGSLR	53; LLGPGK	49; GQQIAR	49; GQQLAR	48; Time for index table init: 0h 0m 1s 840ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 34258; [=================================================================] 6 0s 2ms. 37.492909 k-mers per position; 726 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 3 sequences passed prefiltering per query sequence; 4 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 4ms; Time for processing: 0h 0m 2s 431ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:7729,Availability,mask,mask,7729,"============; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/noHitSeqList /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately -v 3 --subdb-mode 1. Time for merging to toBeClusteredSeparately: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 114ms; ===================================================; ===== Cluster separately the alone sequences ======; ===================================================; kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. Database size: 6 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:7738,Availability,mask,mask-lower-case,7738,"============; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/noHitSeqList /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately -v 3 --subdb-mode 1. Time for merging to toBeClusteredSeparately: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 114ms; ===================================================; ===== Cluster separately the alone sequences ======; ===================================================; kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. Database size: 6 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:8356,Availability,mask,mask,8356,"/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. Database size: 6 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 6 0s 1ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 22ms; rescorediagonal /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:8365,Availability,mask,mask-lower-case,8365,"/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. Database size: 6 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 6 0s 1ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 22ms; rescorediagonal /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:18909,Availability,mask,mask,18909,"eredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 4ms; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 237; DB size: 488 MB; Avg k-mer size: 0.000004; Top 10 k-mers; LHNWEA	1; NCKEQA	1; VLRCRA	1; VTFMDC	1; RAHQKC	1; KRKVLC	1; ESKRNC	1; KRHLRC	1; GKKFSC	1; HYKKSC	1; Time for index table init: 0h 0m 0s 897ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; [=======================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:18918,Availability,mask,mask-lower-case,18918,"eredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 4ms; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 237; DB size: 488 MB; Avg k-mer size: 0.000004; Top 10 k-mers; LHNWEA	1; NCKEQA	1; VLRCRA	1; VTFMDC	1; RAHQKC	1; KRKVLC	1; ESKRNC	1; KRHLRC	1; GKKFSC	1; HYKKSC	1; Time for index table init: 0h 0m 0s 897ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; [=======================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:19358,Availability,Mask,Masked,19358,"9053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 237; DB size: 488 MB; Avg k-mer size: 0.000004; Top 10 k-mers; LHNWEA	1; NCKEQA	1; VLRCRA	1; VTFMDC	1; RAHQKC	1; KRKVLC	1; ESKRNC	1; KRHLRC	1; GKKFSC	1; HYKKSC	1; Time for index table init: 0h 0m 0s 897ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; [=================================================================] 6 0s 0ms. 1.337707 k-mers per position; 39 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 473ms; align /ebio/abt3_scratch/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:24000,Availability,mask,mask,24000,"79/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 4ms; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2.5 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 140 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 497; DB size: 488 MB; Avg k-mer size: 0.000008; Top 10 k-mers; GMTEEA	1; LHNWEA	1; SRLLFA	1; VRGIGA	1; ERIAKA	1; TEVGKA	1; NKEIKA	1; GIKKKA	1; DVSNKA	1; INISKA	1; Time for index table init: 0h 0m 0s 885ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 140; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; [=======================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:24009,Availability,mask,mask-lower-case,24009,"79/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 4ms; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2.5 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 140 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 497; DB size: 488 MB; Avg k-mer size: 0.000008; Top 10 k-mers; GMTEEA	1; LHNWEA	1; SRLLFA	1; VRGIGA	1; ERIAKA	1; TEVGKA	1; NKEIKA	1; GIKKKA	1; DVSNKA	1; INISKA	1; Time for index table init: 0h 0m 0s 885ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 140; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; [=======================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:24450,Availability,Mask,Masked,24450,"16679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2.5 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 140 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 497; DB size: 488 MB; Avg k-mer size: 0.000008; Top 10 k-mers; GMTEEA	1; LHNWEA	1; SRLLFA	1; VRGIGA	1; ERIAKA	1; TEVGKA	1; NKEIKA	1; GIKKKA	1; DVSNKA	1; INISKA	1; Time for index table init: 0h 0m 0s 885ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 140; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; [=================================================================] 6 0s 1ms. 7.473668 k-mers per position; 69 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 25ms; Time for processing: 0h 0m 1s 533ms; align /ebio/abt3_scratch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:29051,Availability,mask,mask,29051,"10948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 4ms; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 4 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 542; DB size: 488 MB; Avg k-mer size: 0.000008; Top 10 k-mers; GMTEEA	1; LHNWEA	1; SRLLFA	1; VRGIGA	1; LSLTGA	1; ERIAKA	1; TEVGKA	1; NKEIKA	1; GIKKKA	1; DVSNKA	1; Time for index table init: 0h 0m 0s 907ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; =[======================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:29060,Availability,mask,mask-lower-case,29060,"10948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 4ms; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 4 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 542; DB size: 488 MB; Avg k-mer size: 0.000008; Top 10 k-mers; GMTEEA	1; LHNWEA	1; SRLLFA	1; VRGIGA	1; LSLTGA	1; ERIAKA	1; TEVGKA	1; NKEIKA	1; GIKKKA	1; DVSNKA	1; Time for index table init: 0h 0m 0s 907ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; =[======================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:29501,Availability,Mask,Masked,29501,"5416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 4 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 542; DB size: 488 MB; Avg k-mer size: 0.000008; Top 10 k-mers; GMTEEA	1; LHNWEA	1; SRLLFA	1; VRGIGA	1; LSLTGA	1; ERIAKA	1; TEVGKA	1; NKEIKA	1; GIKKKA	1; DVSNKA	1; Time for index table init: 0h 0m 0s 907ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; =[================================================================] 6 0s 2ms. 37.492909 k-mers per position; 87 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 474ms; align /ebio/abt3_scratch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:34879,Availability,Error,Error,34879,ms; mergeclusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newClusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step2 --threads 12 --compressed 0 -v 3. Clustering step 1; [=================================================================] 6 0s 1ms; Clustering step 2; [=================================================================] 6 0s 4ms; Clustering step 3; [=================================================================] 6 0s 8ms; Clustering step 4; [=================================================================] 6 0s 11ms; Write merged clustering; [=================================================================] 6 0s 16ms; Time for merging to newClusters: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 31ms; ===================================================; ==== Merge the updated clustering together with ===; ===== the new clusters ======; ===================================================; concatdbs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newClusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/clusters_db.0 --preserve-keys. No datafile could be found for /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust!; Error: Dbconcat died; ```. </details>,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:805,Deployability,Update,Update,805,"quence databases via `mmseqs createdb`, and I now get a longer output, but it still dies with a `No datafile could be found` error. . <details>; <summary>The entire output</summary>. ```; diffseqdbs /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/all_genes/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/removedSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/mappingSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqs --use-seq-id 0 --threads 12 --compressed 0 -v 3. Time for processing: 0h 0m 0s 96ms; ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs -v 3 --subdb-mode 1. Time for merging to NEWDB.newSeqs: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 117ms; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq. [=================================================================] 34.26K 0s 16ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 253ms; T",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:34321,Deployability,update,updated,34321,ms; mergeclusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newClusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step2 --threads 12 --compressed 0 -v 3. Clustering step 1; [=================================================================] 6 0s 1ms; Clustering step 2; [=================================================================] 6 0s 4ms; Clustering step 3; [=================================================================] 6 0s 8ms; Clustering step 4; [=================================================================] 6 0s 11ms; Write merged clustering; [=================================================================] 6 0s 16ms; Time for merging to newClusters: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 31ms; ===================================================; ==== Merge the updated clustering together with ===; ===== the new clusters ======; ===================================================; concatdbs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newClusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/clusters_db.0 --preserve-keys. No datafile could be found for /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust!; Error: Dbconcat died; ```. </details>,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:34539,Deployability,update,updatedClust,34539,ms; mergeclusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newClusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step2 --threads 12 --compressed 0 -v 3. Clustering step 1; [=================================================================] 6 0s 1ms; Clustering step 2; [=================================================================] 6 0s 4ms; Clustering step 3; [=================================================================] 6 0s 8ms; Clustering step 4; [=================================================================] 6 0s 11ms; Write merged clustering; [=================================================================] 6 0s 16ms; Time for merging to newClusters: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 31ms; ===================================================; ==== Merge the updated clustering together with ===; ===== the new clusters ======; ===================================================; concatdbs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newClusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/clusters_db.0 --preserve-keys. No datafile could be found for /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust!; Error: Dbconcat died; ```. </details>,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:34864,Deployability,update,updatedClust,34864,ms; mergeclusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newClusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step2 --threads 12 --compressed 0 -v 3. Clustering step 1; [=================================================================] 6 0s 1ms; Clustering step 2; [=================================================================] 6 0s 4ms; Clustering step 3; [=================================================================] 6 0s 8ms; Clustering step 4; [=================================================================] 6 0s 11ms; Write merged clustering; [=================================================================] 6 0s 16ms; Time for merging to newClusters: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 31ms; ===================================================; ==== Merge the updated clustering together with ===; ===== the new clusters ======; ===================================================; concatdbs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newClusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/clusters_db.0 --preserve-keys. No datafile could be found for /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust!; Error: Dbconcat died; ```. </details>,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:3127,Energy Efficiency,consumption,consumption,3127,"ers ==========; ===================================================; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/search/9308835922661050105/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3 -s 4.0. Query database size: 6 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 34258 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6; Index table: counting k-mers; [=================================================================] 34.26K 0s 519ms; Index table: Masked residues: 72412; Index table: fill; [=================================================================] 34.26K 0s 429ms; Index statistics; Entries: 9905952; DB size: 544 MB; Avg k-mer size: 0.154780; Top 10 k-mers; GPGGTL	164; GQQVAR	114; GLGNGK	80; GEGGVV	73; GPGGTT	69; LLDPAL	54; SGGSLR	53; LLGPGK	49; GQQIAR	49; GQQLAR	48; Time for index table init: 0h 0m 1s 840ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 34258; [=================================================================] 6 0s 2ms. 37.492909 k-mers per position; 726 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 3 sequences passed prefiltering per query sequence; 4 median result list length; 0 s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:8585,Energy Efficiency,Reduce,Reduced,8585,"-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. Database size: 6 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 6 0s 1ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 22ms; rescorediagonal /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:19127,Energy Efficiency,consumption,consumption,19127,"9053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 237; DB size: 488 MB; Avg k-mer size: 0.000004; Top 10 k-mers; LHNWEA	1; NCKEQA	1; VLRCRA	1; VTFMDC	1; RAHQKC	1; KRKVLC	1; ESKRNC	1; KRHLRC	1; GKKFSC	1; HYKKSC	1; Time for index table init: 0h 0m 0s 897ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; [=================================================================] 6 0s 0ms. 1.337707 k-mers per position; 39 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 473ms; align /ebio/abt3_scratch/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:24219,Energy Efficiency,consumption,consumption,24219,"16679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2.5 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 140 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 497; DB size: 488 MB; Avg k-mer size: 0.000008; Top 10 k-mers; GMTEEA	1; LHNWEA	1; SRLLFA	1; VRGIGA	1; ERIAKA	1; TEVGKA	1; NKEIKA	1; GIKKKA	1; DVSNKA	1; INISKA	1; Time for index table init: 0h 0m 0s 885ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 140; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; [=================================================================] 6 0s 1ms. 7.473668 k-mers per position; 69 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 25ms; Time for processing: 0h 0m 1s 533ms; align /ebio/abt3_scratch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:29270,Energy Efficiency,consumption,consumption,29270,"5416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 4 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 542; DB size: 488 MB; Avg k-mer size: 0.000008; Top 10 k-mers; GMTEEA	1; LHNWEA	1; SRLLFA	1; VRGIGA	1; LSLTGA	1; ERIAKA	1; TEVGKA	1; NKEIKA	1; GIKKKA	1; DVSNKA	1; Time for index table init: 0h 0m 0s 907ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; =[================================================================] 6 0s 2ms. 37.492909 k-mers per position; 87 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 474ms; align /ebio/abt3_scratch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:4814,Integrability,wrap,wrapped-scoring,4814," Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 34258; [=================================================================] 6 0s 2ms. 37.492909 k-mers per position; 726 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 3 sequences passed prefiltering per query sequence; 4 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 4ms; Time for processing: 0h 0m 2s 431ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/search/9308835922661050105/pref_0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqsHits --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 1 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 34258 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to newSeqsHits: 0h 0m 0s 4ms. 1 alignments calculated.; 0 sequence pairs passed the thresholds (0.000000 of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 0s 20ms; swapdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqsHits /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeq",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:9572,Integrability,wrap,wrapped-scoring,9572,"cid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 6 0s 1ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 22ms; rescorediagonal /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3. [=================================================================] 6 0s 3ms; Time for merging to pref_rescore1: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 23ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 6 0s 0ms; Sort entries; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:13651,Integrability,wrap,wrapped-scoring,13651,"79/cluster/3119053913462861916/linclust/8450400992607156393/order_redundancy. Filtering using file(s); [=================================================================] 6 0s 29ms; Time for merging to pref_filter2: 0h 0m 0s 53ms; Time for processing: 0h 0m 0s 270ms; rescorediagonal /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_filter2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3. [=====================] ===================6= ========0s 1ms==; ==============Time for merging to pref_rescore2: 0h 0m 0s 8ms; Time for processing: 0h 0m 0s 27ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/aln",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:14732,Integrability,wrap,wrapped-scoring,14732,"-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3. [=====================] ===================6= ========0s 1ms==; ==============Time for merging to pref_rescore2: 0h 0m 0s 8ms; Time for processing: 0h 0m 0s 27ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to aln: 0h 0m 0s 3ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 15ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:20880,Integrability,wrap,wrapped-scoring,20880,"; [=================================================================] 6 0s 0ms. 1.337707 k-mers per position; 39 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 473ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 0ms; Time for merging to aln_step0: 0h 0m 0s 3ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 13ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cl",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:25953,Integrability,wrap,wrapped-scoring,25953,"get db start 1 to 6; [=================================================================] 6 0s 1ms. 7.473668 k-mers per position; 69 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 25ms; Time for processing: 0h 0m 1s 533ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to aln_step1: 0h 0m 0s 4ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 17ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_upda",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:31004,Integrability,wrap,wrapped-scoring,31004,"get db start 1 to 6; =[================================================================] 6 0s 2ms. 37.492909 k-mers per position; 87 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 474ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to aln_step2: 0h 0m 0s 3ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 15ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_upda",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:5105,Modifiability,extend,extend,5105,"esult); 3 sequences passed prefiltering per query sequence; 4 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 4ms; Time for processing: 0h 0m 2s 431ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/search/9308835922661050105/pref_0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqsHits --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 1 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 34258 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to newSeqsHits: 0h 0m 0s 4ms. 1 alignments calculated.; 0 sequence pairs passed the thresholds (0.000000 of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 0s 20ms; swapdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqsHits /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqsHits.swapped.all. [=================================================================] 6 0s 23ms; Computing offsets.; [=================================================================] 6 0s 14ms. Reading results.; [=================================================================] 6 0s 2ms. Output da",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:7855,Modifiability,extend,extendable,7855,"tch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately -v 3 --subdb-mode 1. Time for merging to toBeClusteredSeparately: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 114ms; ===================================================; ===== Cluster separately the alone sequences ======; ===================================================; kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. Database size: 6 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 6 0s 1ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:8482,Modifiability,extend,extendable,8482,"pdate/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. Database size: 6 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 6 0s 1ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 22ms; rescorediagonal /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/84504",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:15032,Modifiability,extend,extend,15032,"atch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to aln: 0h 0m 0s 3ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 15ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/aln /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/clust --cluster-mode 0 --max-iterations 1000 --sim",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:21180,Modifiability,extend,extend,21180,"lt lists; Time for merging to pref_step0: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 473ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 0ms; Time for merging to aln_step0: 0h 0m 0s 3ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 13ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3. Clustering mode: Set C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:26253,Modifiability,extend,extend,26253,"es with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 25ms; Time for processing: 0h 0m 1s 533ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to aln_step1: 0h 0m 0s 4ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 17ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step1 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3. Clustering mode: Set Cover; [===",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:31304,Modifiability,extend,extend,31304,"ces with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 474ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to aln_step2: 0h 0m 0s 3ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 15ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step2 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3. Clustering mode: Set Cover; [===",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:2999,Performance,load,load-mode,2999,"==============================] 34.26K 0s 16ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 253ms; Time for processing: 0h 0m 0s 470ms; ===================================================; ======== Search the new sequences against =========; ========= previous (rep seq of) clusters ==========; ===================================================; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/search/9308835922661050105/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3 -s 4.0. Query database size: 6 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 34258 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6; Index table: counting k-mers; [=================================================================] 34.26K 0s 519ms; Index table: Masked residues: 72412; Index table: fill; [=================================================================] 34.26K 0s 429ms; Index statistics; Entries: 9905952; DB size: 544 MB; Avg k-mer size: 0.154780; Top 10 k-mers; GPGGTL	164; GQQVAR	114; GLGNGK	80; GEGGVV	73; GPGGTT	69; LLDPAL	54; SGGSLR	53; LLGPGK	49; GQQIAR	49; GQQLAR	48; Time for index table init: 0h 0m 1s 840ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 34258; [========",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:5040,Performance,load,load-mode,5040," 0s 2ms. 37.492909 k-mers per position; 726 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 3 sequences passed prefiltering per query sequence; 4 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 4ms; Time for processing: 0h 0m 2s 431ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/search/9308835922661050105/pref_0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqsHits --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 1 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 34258 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to newSeqsHits: 0h 0m 0s 4ms. 1 alignments calculated.; 0 sequence pairs passed the thresholds (0.000000 of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 0s 20ms; swapdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqsHits /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqsHits.swapped.all. [=================================================================] 6 0s 23ms; Computing offsets.; [==========================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:9732,Performance,load,load-mode,9732,"split; [=================================================================] 6 0s 1ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 22ms; rescorediagonal /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3. [=================================================================] 6 0s 3ms; Time for merging to pref_rescore1: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 23ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 6 0s 0ms; Sort entries; Find missing connections; Found 0 new connections.; Reconstruct initial order; [========================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:13811,Performance,load,load-mode,13811,"=================================] 6 0s 29ms; Time for merging to pref_filter2: 0h 0m 0s 53ms; Time for processing: 0h 0m 0s 270ms; rescorediagonal /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_filter2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3. [=====================] ===================6= ========0s 1ms==; ==============Time for merging to pref_rescore2: 0h 0m 0s 8ms; Time for processing: 0h 0m 0s 27ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:14967,Performance,load,load-mode,14967,"=0s 1ms==; ==============Time for merging to pref_rescore2: 0h 0m 0s 8ms; Time for processing: 0h 0m 0s 27ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to aln: 0h 0m 0s 3ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 15ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/aln /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updat",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:19006,Performance,load,load-mode,19006,"eredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 4ms; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 237; DB size: 488 MB; Avg k-mer size: 0.000004; Top 10 k-mers; LHNWEA	1; NCKEQA	1; VLRCRA	1; VTFMDC	1; RAHQKC	1; KRKVLC	1; ESKRNC	1; KRHLRC	1; GKKFSC	1; HYKKSC	1; Time for index table init: 0h 0m 0s 897ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; [=======================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:21115,Performance,load,load-mode,21115," (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 473ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 0ms; Time for merging to aln_step0: 0h 0m 0s 3ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 13ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/311905391346286",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:24098,Performance,load,load-mode,24098,"79/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 4ms; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2.5 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 140 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 497; DB size: 488 MB; Avg k-mer size: 0.000008; Top 10 k-mers; GMTEEA	1; LHNWEA	1; SRLLFA	1; VRGIGA	1; ERIAKA	1; TEVGKA	1; NKEIKA	1; GIKKKA	1; DVSNKA	1; INISKA	1; Time for index table init: 0h 0m 0s 885ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 140; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; [=======================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:26188,Performance,load,load-mode,26188,"oduce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 25ms; Time for processing: 0h 0m 1s 533ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to aln_step1: 0h 0m 0s 4ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 17ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:29149,Performance,load,load-mode,29149,"10948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 4ms; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 4 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 542; DB size: 488 MB; Avg k-mer size: 0.000008; Top 10 k-mers; GMTEEA	1; LHNWEA	1; SRLLFA	1; VRGIGA	1; LSLTGA	1; ERIAKA	1; TEVGKA	1; NKEIKA	1; GIKKKA	1; DVSNKA	1; Time for index table init: 0h 0m 0s 907ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; =[======================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:31239,Performance,load,load-mode,31239,"roduce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 474ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to aln_step2: 0h 0m 0s 3ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 15ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:7803,Security,hash,hash-shift,7803,"tch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately -v 3 --subdb-mode 1. Time for merging to toBeClusteredSeparately: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 114ms; ===================================================; ===== Cluster separately the alone sequences ======; ===================================================; kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. Database size: 6 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 6 0s 1ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:8430,Security,hash,hash-shift,8430,"pdate/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. Database size: 6 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 6 0s 1ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 22ms; rescorediagonal /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/84504",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:264,Testability,test,tests,264,"I tried re-making both sequence databases via `mmseqs createdb`, and I now get a longer output, but it still dies with a `No datafile could be found` error. . <details>; <summary>The entire output</summary>. ```; diffseqdbs /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/all_genes/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/removedSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/mappingSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqs --use-seq-id 0 --threads 12 --compressed 0 -v 3. Time for processing: 0h 0m 0s 96ms; ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs -v 3 --subdb-mode 1. Time for merging to NEWDB.newSeqs: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 117ms; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq. [=================================================================] 34.26K 0s 16ms; Time for merging to OLDDB.r",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:1667,Testability,test,tests,1667,"7510948275416679/newSeqs --use-seq-id 0 --threads 12 --compressed 0 -v 3. Time for processing: 0h 0m 0s 96ms; ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs -v 3 --subdb-mode 1. Time for merging to NEWDB.newSeqs: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 117ms; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq. [=================================================================] 34.26K 0s 16ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 253ms; Time for processing: 0h 0m 0s 470ms; ===================================================; ======== Search the new sequences against =========; ========= previous (rep seq of) clusters ==========; ===================================================; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/search/9308835922661050105/pref_0 --sub-mat nucl:nucleotide.out,aa:blo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:1747,Testability,test,tests,1747,"7510948275416679/newSeqs --use-seq-id 0 --threads 12 --compressed 0 -v 3. Time for processing: 0h 0m 0s 96ms; ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs -v 3 --subdb-mode 1. Time for merging to NEWDB.newSeqs: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 117ms; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq. [=================================================================] 34.26K 0s 16ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 253ms; Time for processing: 0h 0m 0s 470ms; ===================================================; ======== Search the new sequences against =========; ========= previous (rep seq of) clusters ==========; ===================================================; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/search/9308835922661050105/pref_0 --sub-mat nucl:nucleotide.out,aa:blo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:33,Availability,error,error,33,"The `No datafile could be found` error seems to be caused by the fact that the data file in question is a symlink:. ```; lrwxrwxrwx 1 nyoungblut abt3 82 Jul 23 19:44 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust -> /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db; ```. ...and the symlink doesn't point to a file, since my original cluster database was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:252,Deployability,update,updatedClust,252,"The `No datafile could be found` error seems to be caused by the fact that the data file in question is a symlink:. ```; lrwxrwxrwx 1 nyoungblut abt3 82 Jul 23 19:44 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust -> /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db; ```. ...and the symlink doesn't point to a file, since my original cluster database was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:308,Testability,test,tests,308,"The `No datafile could be found` error seems to be caused by the fact that the data file in question is a symlink:. ```; lrwxrwxrwx 1 nyoungblut abt3 82 Jul 23 19:44 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust -> /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db; ```. ...and the symlink doesn't point to a file, since my original cluster database was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:653,Testability,test,tests,653,"The `No datafile could be found` error seems to be caused by the fact that the data file in question is a symlink:. ```; lrwxrwxrwx 1 nyoungblut abt3 82 Jul 23 19:44 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust -> /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db; ```. ...and the symlink doesn't point to a file, since my original cluster database was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:739,Testability,test,tests,739,"The `No datafile could be found` error seems to be caused by the fact that the data file in question is a symlink:. ```; lrwxrwxrwx 1 nyoungblut abt3 82 Jul 23 19:44 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust -> /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db; ```. ...and the symlink doesn't point to a file, since my original cluster database was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:825,Testability,test,tests,825,"The `No datafile could be found` error seems to be caused by the fact that the data file in question is a symlink:. ```; lrwxrwxrwx 1 nyoungblut abt3 82 Jul 23 19:44 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust -> /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db; ```. ...and the symlink doesn't point to a file, since my original cluster database was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:912,Testability,test,tests,912,"The `No datafile could be found` error seems to be caused by the fact that the data file in question is a symlink:. ```; lrwxrwxrwx 1 nyoungblut abt3 82 Jul 23 19:44 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust -> /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db; ```. ...and the symlink doesn't point to a file, since my original cluster database was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:999,Testability,test,tests,999,"The `No datafile could be found` error seems to be caused by the fact that the data file in question is a symlink:. ```; lrwxrwxrwx 1 nyoungblut abt3 82 Jul 23 19:44 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust -> /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db; ```. ...and the symlink doesn't point to a file, since my original cluster database was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:1086,Testability,test,tests,1086,"ile in question is a symlink:. ```; lrwxrwxrwx 1 nyoungblut abt3 82 Jul 23 19:44 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust -> /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db; ```. ...and the symlink doesn't point to a file, since my original cluster database was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.8; /eb",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:1173,Testability,test,tests,1173,"abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust -> /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db; ```. ...and the symlink doesn't point to a file, since my original cluster database was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.8; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.9; ```.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:1260,Testability,test,tests,1260,"Clust -> /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db; ```. ...and the symlink doesn't point to a file, since my original cluster database was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.8; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.9; ```. ...another reason why the multi-file output of mmseqs commands produces headaches. Why",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:1347,Testability,test,tests,1347,"s_db; ```. ...and the symlink doesn't point to a file, since my original cluster database was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.8; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.9; ```. ...another reason why the multi-file output of mmseqs commands produces headaches. Why aren't the multi-output files generated when using multiple threads (as the example ab",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:1434,Testability,test,tests,1434,"se was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.8; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.9; ```. ...another reason why the multi-file output of mmseqs commands produces headaches. Why aren't the multi-output files generated when using multiple threads (as the example above) just automatically merged back into one database file instead of leaving many `clu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:1521,Testability,test,tests,1521," `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.8; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.9; ```. ...another reason why the multi-file output of mmseqs commands produces headaches. Why aren't the multi-output files generated when using multiple threads (as the example above) just automatically merged back into one database file instead of leaving many `cluster_db.<#>` files?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:1607,Testability,test,tests,1607," `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.8; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.9; ```. ...another reason why the multi-file output of mmseqs commands produces headaches. Why aren't the multi-output files generated when using multiple threads (as the example above) just automatically merged back into one database file instead of leaving many `cluster_db.<#>` files?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:1693,Testability,test,tests,1693," `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.8; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.9; ```. ...another reason why the multi-file output of mmseqs commands produces headaches. Why aren't the multi-output files generated when using multiple threads (as the example above) just automatically merged back into one database file instead of leaving many `cluster_db.<#>` files?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:1779,Testability,test,tests,1779," `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.8; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.9; ```. ...another reason why the multi-file output of mmseqs commands produces headaches. Why aren't the multi-output files generated when using multiple threads (as the example above) just automatically merged back into one database file instead of leaving many `cluster_db.<#>` files?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:1865,Testability,test,tests,1865," `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.8; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.9; ```. ...another reason why the multi-file output of mmseqs commands produces headaches. Why aren't the multi-output files generated when using multiple threads (as the example above) just automatically merged back into one database file instead of leaving many `cluster_db.<#>` files?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:1951,Testability,test,tests,1951," `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.8; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.9; ```. ...another reason why the multi-file output of mmseqs commands produces headaches. Why aren't the multi-output files generated when using multiple threads (as the example above) just automatically merged back into one database file instead of leaving many `cluster_db.<#>` files?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:2037,Testability,test,tests,2037," `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.8; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.9; ```. ...another reason why the multi-file output of mmseqs commands produces headaches. Why aren't the multi-output files generated when using multiple threads (as the example above) just automatically merged back into one database file instead of leaving many `cluster_db.<#>` files?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:2123,Testability,test,tests,2123," `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.8; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.9; ```. ...another reason why the multi-file output of mmseqs commands produces headaches. Why aren't the multi-output files generated when using multiple threads (as the example above) just automatically merged back into one database file instead of leaving many `cluster_db.<#>` files?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664790179:761,Deployability,update,update,761,"@nick-youngblut I am sorry about the multi output. The main reason for them is to avoid IO. Slow IO system can take hours/days to merge tera bytes of data and MMseqs2 modular architecture require multiple IO steps unlike other aligners. The IO step is especially critical if the search was performed using many threads since the merging runs single threaded. ; However, every module should create a `.dbtype` file at the end, which can be used to check if the module finished successfully. . The `clusterupdate` is one of the modules that needs ground up rebuild. Too much of its logic is done in Bash steps that do not verify the consistency correctly. . I am a bit confused why your `clusterupdate` uses `extractorfs`. What is your exact setup? Do you try to update protein clusters using genomes?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664790179
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664790179:290,Performance,perform,performed,290,"@nick-youngblut I am sorry about the multi output. The main reason for them is to avoid IO. Slow IO system can take hours/days to merge tera bytes of data and MMseqs2 modular architecture require multiple IO steps unlike other aligners. The IO step is especially critical if the search was performed using many threads since the merging runs single threaded. ; However, every module should create a `.dbtype` file at the end, which can be used to check if the module finished successfully. . The `clusterupdate` is one of the modules that needs ground up rebuild. Too much of its logic is done in Bash steps that do not verify the consistency correctly. . I am a bit confused why your `clusterupdate` uses `extractorfs`. What is your exact setup? Do you try to update protein clusters using genomes?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664790179
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664790179:82,Safety,avoid,avoid,82,"@nick-youngblut I am sorry about the multi output. The main reason for them is to avoid IO. Slow IO system can take hours/days to merge tera bytes of data and MMseqs2 modular architecture require multiple IO steps unlike other aligners. The IO step is especially critical if the search was performed using many threads since the merging runs single threaded. ; However, every module should create a `.dbtype` file at the end, which can be used to check if the module finished successfully. . The `clusterupdate` is one of the modules that needs ground up rebuild. Too much of its logic is done in Bash steps that do not verify the consistency correctly. . I am a bit confused why your `clusterupdate` uses `extractorfs`. What is your exact setup? Do you try to update protein clusters using genomes?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664790179
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664790179:580,Testability,log,logic,580,"@nick-youngblut I am sorry about the multi output. The main reason for them is to avoid IO. Slow IO system can take hours/days to merge tera bytes of data and MMseqs2 modular architecture require multiple IO steps unlike other aligners. The IO step is especially critical if the search was performed using many threads since the merging runs single threaded. ; However, every module should create a `.dbtype` file at the end, which can be used to check if the module finished successfully. . The `clusterupdate` is one of the modules that needs ground up rebuild. Too much of its logic is done in Bash steps that do not verify the consistency correctly. . I am a bit confused why your `clusterupdate` uses `extractorfs`. What is your exact setup? Do you try to update protein clusters using genomes?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664790179
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664823477:67,Deployability,integrat,integrating,67,"I get the helpfulness of the multi-output, but it really does make integrating mmseqs in a snakemake pipeline a pain. It would be helpful to know which files are actually the input and output of each subcommand, but I get that it would be a large change to the script help docs, and if you were to change the implementation, you'd have to change all of the docs. . I don't know why `clusterupdate` is using `extractorfs` either. For my test, I'm just taking some full-length gene AA sequences (generated by prodigal from a set of genomes), and trying to update those with a few more full-length gene AA sequences. I'll double check my code.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664823477
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664823477:101,Deployability,pipeline,pipeline,101,"I get the helpfulness of the multi-output, but it really does make integrating mmseqs in a snakemake pipeline a pain. It would be helpful to know which files are actually the input and output of each subcommand, but I get that it would be a large change to the script help docs, and if you were to change the implementation, you'd have to change all of the docs. . I don't know why `clusterupdate` is using `extractorfs` either. For my test, I'm just taking some full-length gene AA sequences (generated by prodigal from a set of genomes), and trying to update those with a few more full-length gene AA sequences. I'll double check my code.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664823477
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664823477:554,Deployability,update,update,554,"I get the helpfulness of the multi-output, but it really does make integrating mmseqs in a snakemake pipeline a pain. It would be helpful to know which files are actually the input and output of each subcommand, but I get that it would be a large change to the script help docs, and if you were to change the implementation, you'd have to change all of the docs. . I don't know why `clusterupdate` is using `extractorfs` either. For my test, I'm just taking some full-length gene AA sequences (generated by prodigal from a set of genomes), and trying to update those with a few more full-length gene AA sequences. I'll double check my code.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664823477
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664823477:67,Integrability,integrat,integrating,67,"I get the helpfulness of the multi-output, but it really does make integrating mmseqs in a snakemake pipeline a pain. It would be helpful to know which files are actually the input and output of each subcommand, but I get that it would be a large change to the script help docs, and if you were to change the implementation, you'd have to change all of the docs. . I don't know why `clusterupdate` is using `extractorfs` either. For my test, I'm just taking some full-length gene AA sequences (generated by prodigal from a set of genomes), and trying to update those with a few more full-length gene AA sequences. I'll double check my code.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664823477
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664823477:436,Testability,test,test,436,"I get the helpfulness of the multi-output, but it really does make integrating mmseqs in a snakemake pipeline a pain. It would be helpful to know which files are actually the input and output of each subcommand, but I get that it would be a large change to the script help docs, and if you were to change the implementation, you'd have to change all of the docs. . I don't know why `clusterupdate` is using `extractorfs` either. For my test, I'm just taking some full-length gene AA sequences (generated by prodigal from a set of genomes), and trying to update those with a few more full-length gene AA sequences. I'll double check my code.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664823477
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665613918:824,Deployability,update,updatedClust,824,"I checked over my code, and I don't see why `extractorfs` is being called during `mmseqs clusterupdate`. My entire workflow is:. * existing mmseqs db of full length gene amino acid sequences (created via `mmseqs createdb`); * existing mmseqs cluster db for all of the sequences in the db (created via `mmseqs linclust`); * 18 threads used, so the cluster db files end in `.<#>`; * new db of full length gene amino acid sequences (created via `mmseqs createdb`); * no overlap with the original set of sequences; * concat of both sequence databases via `mmseqs concatdbs` (also done on the `*_h` files); * `mmseqs clusterupdate {original_seq_db} {concat_seq_db} {cluster_db} {output_db} {output_cluster_db} {tmp_dir}`. Is there anything that I can do to get `clusterupdate` working in my case? For instance, can I change the `updatedClust` symlink to `clusters_db.0`?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665613918
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665656135:288,Availability,error,error,288,Here's the reproducible example: [reprod_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/4995028/reprod_example.tar.gz). I ran the following on it:. ```; mmseqs clusterupdate --threads 12 genes_db all_genes/genes_db clusters_db out_db clusters_out_db tmp; ```. ...and got the error:. ```; [...]; Clustering step 1; [=================================================================] 100.00% 6 0s 0ms; Clustering step 2; [=================================================================] 100.00% 6 0s 5ms; Clustering step 3; [=================================================================] 100.00% 6 0s 6ms; Clustering step 4; [=================================================================] 100.00% 6 0s 9ms; Write merged clustering; [=================================================================] 100.00% 6 0s 13ms; Time for merging to newClusters: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 25ms; ===================================================; ==== Merge the updated clustering together with ===; ===== the new clusters ======; ===================================================; concatdbs /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/updatedClust /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/newClusters /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/clusters_out_db --preserve-keys. No datafile could be found for /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/updatedClust!; Error: Dbconcat died; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665656135
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665656135:1575,Availability,Error,Error,1575,Here's the reproducible example: [reprod_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/4995028/reprod_example.tar.gz). I ran the following on it:. ```; mmseqs clusterupdate --threads 12 genes_db all_genes/genes_db clusters_db out_db clusters_out_db tmp; ```. ...and got the error:. ```; [...]; Clustering step 1; [=================================================================] 100.00% 6 0s 0ms; Clustering step 2; [=================================================================] 100.00% 6 0s 5ms; Clustering step 3; [=================================================================] 100.00% 6 0s 6ms; Clustering step 4; [=================================================================] 100.00% 6 0s 9ms; Write merged clustering; [=================================================================] 100.00% 6 0s 13ms; Time for merging to newClusters: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 25ms; ===================================================; ==== Merge the updated clustering together with ===; ===== the new clusters ======; ===================================================; concatdbs /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/updatedClust /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/newClusters /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/clusters_out_db --preserve-keys. No datafile could be found for /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/updatedClust!; Error: Dbconcat died; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665656135
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665656135:991,Deployability,update,updated,991,Here's the reproducible example: [reprod_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/4995028/reprod_example.tar.gz). I ran the following on it:. ```; mmseqs clusterupdate --threads 12 genes_db all_genes/genes_db clusters_db out_db clusters_out_db tmp; ```. ...and got the error:. ```; [...]; Clustering step 1; [=================================================================] 100.00% 6 0s 0ms; Clustering step 2; [=================================================================] 100.00% 6 0s 5ms; Clustering step 3; [=================================================================] 100.00% 6 0s 6ms; Clustering step 4; [=================================================================] 100.00% 6 0s 9ms; Write merged clustering; [=================================================================] 100.00% 6 0s 13ms; Time for merging to newClusters: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 25ms; ===================================================; ==== Merge the updated clustering together with ===; ===== the new clusters ======; ===================================================; concatdbs /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/updatedClust /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/newClusters /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/clusters_out_db --preserve-keys. No datafile could be found for /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/updatedClust!; Error: Dbconcat died; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665656135
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665656135:1216,Deployability,update,updatedClust,1216,Here's the reproducible example: [reprod_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/4995028/reprod_example.tar.gz). I ran the following on it:. ```; mmseqs clusterupdate --threads 12 genes_db all_genes/genes_db clusters_db out_db clusters_out_db tmp; ```. ...and got the error:. ```; [...]; Clustering step 1; [=================================================================] 100.00% 6 0s 0ms; Clustering step 2; [=================================================================] 100.00% 6 0s 5ms; Clustering step 3; [=================================================================] 100.00% 6 0s 6ms; Clustering step 4; [=================================================================] 100.00% 6 0s 9ms; Write merged clustering; [=================================================================] 100.00% 6 0s 13ms; Time for merging to newClusters: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 25ms; ===================================================; ==== Merge the updated clustering together with ===; ===== the new clusters ======; ===================================================; concatdbs /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/updatedClust /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/newClusters /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/clusters_out_db --preserve-keys. No datafile could be found for /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/updatedClust!; Error: Dbconcat died; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665656135
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665656135:1560,Deployability,update,updatedClust,1560,Here's the reproducible example: [reprod_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/4995028/reprod_example.tar.gz). I ran the following on it:. ```; mmseqs clusterupdate --threads 12 genes_db all_genes/genes_db clusters_db out_db clusters_out_db tmp; ```. ...and got the error:. ```; [...]; Clustering step 1; [=================================================================] 100.00% 6 0s 0ms; Clustering step 2; [=================================================================] 100.00% 6 0s 5ms; Clustering step 3; [=================================================================] 100.00% 6 0s 6ms; Clustering step 4; [=================================================================] 100.00% 6 0s 9ms; Write merged clustering; [=================================================================] 100.00% 6 0s 13ms; Time for merging to newClusters: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 25ms; ===================================================; ==== Merge the updated clustering together with ===; ===== the new clusters ======; ===================================================; concatdbs /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/updatedClust /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/newClusters /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/clusters_out_db --preserve-keys. No datafile could be found for /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/updatedClust!; Error: Dbconcat died; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665656135
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665659529:24,Modifiability,refactor,refactoring,24,I'll try to dig out the refactoring I had begun before the general chaos. I think I dealt with that and should be able to isolate the changes from the unfinished deleted sequences updating. Not quite sure on which computer it was though.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665659529
https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-684083474:187,Deployability,update,update,187,Deleted sequences should also be handled correctly now. Also we were not very consistent with producing the same parameters as the normal clustering workflow would have produced. Cluster update should now be in quite a bit better shape.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-684083474
https://github.com/soedinglab/MMseqs2/issues/334#issuecomment-665645856:147,Availability,error,error,147,I am trying to reproduce the issue but can't manage to. Could you upload the files somewhere (or at least a small subset that also fails with this error message)?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/334#issuecomment-665645856
https://github.com/soedinglab/MMseqs2/issues/334#issuecomment-665645856:153,Integrability,message,message,153,I am trying to reproduce the issue but can't manage to. Could you upload the files somewhere (or at least a small subset that also fails with this error message)?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/334#issuecomment-665645856
https://github.com/soedinglab/MMseqs2/issues/336#issuecomment-664795094:656,Security,validat,validate,656,"Thank you this bug report. The problem is that our `DBReader` searches first for the extension `.[0-9]` if it exists then it knows that it is a multi-part database. In your case your single part database is not seen by the `DBReader` since you have leftover files from your pervious search that uses the same output file name. I currently do not have a solution for this issue. I will discuss this later with @milot-mirdita. For your suggestion to provide a guide for output per module, I totally agree we need this. We might be able to generate something from your command declaration in `MMseqsBase.cpp` since we already define input and output types to validate the user input.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/336#issuecomment-664795094
https://github.com/soedinglab/MMseqs2/issues/336#issuecomment-664795094:458,Usability,guid,guide,458,"Thank you this bug report. The problem is that our `DBReader` searches first for the extension `.[0-9]` if it exists then it knows that it is a multi-part database. In your case your single part database is not seen by the `DBReader` since you have leftover files from your pervious search that uses the same output file name. I currently do not have a solution for this issue. I will discuss this later with @milot-mirdita. For your suggestion to provide a guide for output per module, I totally agree we need this. We might be able to generate something from your command declaration in `MMseqsBase.cpp` since we already define input and output types to validate the user input.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/336#issuecomment-664795094
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-664995019:282,Performance,perform,performance,282,So what's going on is that you created an index with `createindex` that was not aware of how large it may become. So it was created to use as much memory as possible. You would have to call `createindex` also with `--split-memory-limit`. This split indices work but have unexpected performance pitfalls: You need to have the index on a fast IO system so you can import each split into memory fast enough. Since the index is larger than the input sequences it can be faster to just recompute the index on the fly instead of reading in an existing one.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-664995019
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-665032064:113,Availability,error,error,113,"Currently, I think it should crash no matter what since there is an index present that doesn't fit into RAM. The error message for that is very useless. You have to either recreate the index with a certain memory limit in mind or remove it (actually rename just the `.idx.dbtype` to something else and it won't be able to find and use it anymore, then you can name it back again later if you still need it).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-665032064
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-665032064:119,Integrability,message,message,119,"Currently, I think it should crash no matter what since there is an index present that doesn't fit into RAM. The error message for that is very useless. You have to either recreate the index with a certain memory limit in mind or remove it (actually rename just the `.idx.dbtype` to something else and it won't be able to find and use it anymore, then you can name it back again later if you still need it).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-665032064
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-739947702:324,Availability,error,error,324,"I created an index for UniRef90 using `--split 4`, which produced 4 splits and required ~70G of memory to generate. Now I'm trying to run `mmseqs search` on that target database with the associated idx that I just created. My `mmseq search` cluster jobs all die (even when providing up to 200G of memory) with the following error: . ```; Failed to mmap memory dataSize=58928025600 File=/ebio/abt3_scratch/nyoungblut/Struo2_255873462447/humann3_search/mmseqs_search_db/db.idx. Error 12; ```. According to the error message, the database size is < 100G, so why am I getting an `mmap` error? . I also get this error when using `--db-load-mode 1`, which should use fread instead of mmap, according to the help docs, so I don't understand why I'm still getting the `Failed to mmap memory` in that situation. . I'm using mmseq2 12.113e3. The `mmseqs search` jobs complete successfully when running them locally (a server with plenty of memory). It appears to be something specific to the SGE cluster. Both local and cluster nodes are running `Ubuntu 18.04.5`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-739947702
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-739947702:476,Availability,Error,Error,476,"I created an index for UniRef90 using `--split 4`, which produced 4 splits and required ~70G of memory to generate. Now I'm trying to run `mmseqs search` on that target database with the associated idx that I just created. My `mmseq search` cluster jobs all die (even when providing up to 200G of memory) with the following error: . ```; Failed to mmap memory dataSize=58928025600 File=/ebio/abt3_scratch/nyoungblut/Struo2_255873462447/humann3_search/mmseqs_search_db/db.idx. Error 12; ```. According to the error message, the database size is < 100G, so why am I getting an `mmap` error? . I also get this error when using `--db-load-mode 1`, which should use fread instead of mmap, according to the help docs, so I don't understand why I'm still getting the `Failed to mmap memory` in that situation. . I'm using mmseq2 12.113e3. The `mmseqs search` jobs complete successfully when running them locally (a server with plenty of memory). It appears to be something specific to the SGE cluster. Both local and cluster nodes are running `Ubuntu 18.04.5`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-739947702
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-739947702:508,Availability,error,error,508,"I created an index for UniRef90 using `--split 4`, which produced 4 splits and required ~70G of memory to generate. Now I'm trying to run `mmseqs search` on that target database with the associated idx that I just created. My `mmseq search` cluster jobs all die (even when providing up to 200G of memory) with the following error: . ```; Failed to mmap memory dataSize=58928025600 File=/ebio/abt3_scratch/nyoungblut/Struo2_255873462447/humann3_search/mmseqs_search_db/db.idx. Error 12; ```. According to the error message, the database size is < 100G, so why am I getting an `mmap` error? . I also get this error when using `--db-load-mode 1`, which should use fread instead of mmap, according to the help docs, so I don't understand why I'm still getting the `Failed to mmap memory` in that situation. . I'm using mmseq2 12.113e3. The `mmseqs search` jobs complete successfully when running them locally (a server with plenty of memory). It appears to be something specific to the SGE cluster. Both local and cluster nodes are running `Ubuntu 18.04.5`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-739947702
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-739947702:582,Availability,error,error,582,"I created an index for UniRef90 using `--split 4`, which produced 4 splits and required ~70G of memory to generate. Now I'm trying to run `mmseqs search` on that target database with the associated idx that I just created. My `mmseq search` cluster jobs all die (even when providing up to 200G of memory) with the following error: . ```; Failed to mmap memory dataSize=58928025600 File=/ebio/abt3_scratch/nyoungblut/Struo2_255873462447/humann3_search/mmseqs_search_db/db.idx. Error 12; ```. According to the error message, the database size is < 100G, so why am I getting an `mmap` error? . I also get this error when using `--db-load-mode 1`, which should use fread instead of mmap, according to the help docs, so I don't understand why I'm still getting the `Failed to mmap memory` in that situation. . I'm using mmseq2 12.113e3. The `mmseqs search` jobs complete successfully when running them locally (a server with plenty of memory). It appears to be something specific to the SGE cluster. Both local and cluster nodes are running `Ubuntu 18.04.5`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-739947702
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-739947702:607,Availability,error,error,607,"I created an index for UniRef90 using `--split 4`, which produced 4 splits and required ~70G of memory to generate. Now I'm trying to run `mmseqs search` on that target database with the associated idx that I just created. My `mmseq search` cluster jobs all die (even when providing up to 200G of memory) with the following error: . ```; Failed to mmap memory dataSize=58928025600 File=/ebio/abt3_scratch/nyoungblut/Struo2_255873462447/humann3_search/mmseqs_search_db/db.idx. Error 12; ```. According to the error message, the database size is < 100G, so why am I getting an `mmap` error? . I also get this error when using `--db-load-mode 1`, which should use fread instead of mmap, according to the help docs, so I don't understand why I'm still getting the `Failed to mmap memory` in that situation. . I'm using mmseq2 12.113e3. The `mmseqs search` jobs complete successfully when running them locally (a server with plenty of memory). It appears to be something specific to the SGE cluster. Both local and cluster nodes are running `Ubuntu 18.04.5`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-739947702
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-739947702:514,Integrability,message,message,514,"I created an index for UniRef90 using `--split 4`, which produced 4 splits and required ~70G of memory to generate. Now I'm trying to run `mmseqs search` on that target database with the associated idx that I just created. My `mmseq search` cluster jobs all die (even when providing up to 200G of memory) with the following error: . ```; Failed to mmap memory dataSize=58928025600 File=/ebio/abt3_scratch/nyoungblut/Struo2_255873462447/humann3_search/mmseqs_search_db/db.idx. Error 12; ```. According to the error message, the database size is < 100G, so why am I getting an `mmap` error? . I also get this error when using `--db-load-mode 1`, which should use fread instead of mmap, according to the help docs, so I don't understand why I'm still getting the `Failed to mmap memory` in that situation. . I'm using mmseq2 12.113e3. The `mmseqs search` jobs complete successfully when running them locally (a server with plenty of memory). It appears to be something specific to the SGE cluster. Both local and cluster nodes are running `Ubuntu 18.04.5`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-739947702
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-739947702:630,Performance,load,load-mode,630,"I created an index for UniRef90 using `--split 4`, which produced 4 splits and required ~70G of memory to generate. Now I'm trying to run `mmseqs search` on that target database with the associated idx that I just created. My `mmseq search` cluster jobs all die (even when providing up to 200G of memory) with the following error: . ```; Failed to mmap memory dataSize=58928025600 File=/ebio/abt3_scratch/nyoungblut/Struo2_255873462447/humann3_search/mmseqs_search_db/db.idx. Error 12; ```. According to the error message, the database size is < 100G, so why am I getting an `mmap` error? . I also get this error when using `--db-load-mode 1`, which should use fread instead of mmap, according to the help docs, so I don't understand why I'm still getting the `Failed to mmap memory` in that situation. . I'm using mmseq2 12.113e3. The `mmseqs search` jobs complete successfully when running them locally (a server with plenty of memory). It appears to be something specific to the SGE cluster. Both local and cluster nodes are running `Ubuntu 18.04.5`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-739947702
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-740157233:106,Availability,error,error,106,"It turns out that I just need ~300G of memory for the job in order to not get the `Failed to mmap memory` error, even though the `mmseq search` job states: `Estimated memory consumption: 122G`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-740157233
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-740157233:174,Energy Efficiency,consumption,consumption,174,"It turns out that I just need ~300G of memory for the job in order to not get the `Failed to mmap memory` error, even though the `mmseq search` job states: `Estimated memory consumption: 122G`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-740157233
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-740482507:230,Energy Efficiency,reduce,reduce,230,"It appears that no matter how many splits I use for `mmseqs createindex`, the amount of memory for running `mmseqs search` on the UniRef90 database + split idx is always ~300G. Shouldn't splitting the database index into portions reduce the memory required for mmap'ing? . Using `mmseqs search --split N` doesn't help, but I didn't expect it to, given that the splitting was done prior during the `mmseqs createindex` step. . I'm using 8 threads. Is the `Estimated memory consumption:` listed during `mmseq search` the amount of memory required per thread?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-740482507
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-740482507:472,Energy Efficiency,consumption,consumption,472,"It appears that no matter how many splits I use for `mmseqs createindex`, the amount of memory for running `mmseqs search` on the UniRef90 database + split idx is always ~300G. Shouldn't splitting the database index into portions reduce the memory required for mmap'ing? . Using `mmseqs search --split N` doesn't help, but I didn't expect it to, given that the splitting was done prior during the `mmseqs createindex` step. . I'm using 8 threads. Is the `Estimated memory consumption:` listed during `mmseq search` the amount of memory required per thread?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-740482507
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-740568050:162,Availability,down,down,162,"Yeah, the first split is ~2x larger than the rest. `sysctl` is not present on the cluster nodes. . I tried using 16 splits & 8 mmseq-search threads, and that cut down on the memory requirement from 296G to *just* 232G",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-740568050
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741764936:239,Availability,avail,available,239,Does the issue also happen if you don't set that? What linux kernel version are your nodes running?; I am super surprised that linux seems to be enforcing this limit. We should be able to allocate a lot more virtual memory than physically available one.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741764936
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741764936:188,Energy Efficiency,allocate,allocate,188,Does the issue also happen if you don't set that? What linux kernel version are your nodes running?; I am super surprised that linux seems to be enforcing this limit. We should be able to allocate a lot more virtual memory than physically available one.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741764936
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741765898:138,Availability,error,error,138,"> Does the issue also happen if you don't set that?. If I don't set `h_vmem` then the default is used (2G), and I definitely get the mmap error. . The nodes are running `Ubuntu 18.04.5`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741765898
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741769461:311,Usability,clear,clear,311,"Computing the idx with 8 threads takes ~1 hour. Transferring the large index is much faster. My previous jobs that created the idx on the fly took ~2 hours, but with the pre-computed idx, the jobs take ~30 minutes. . Is there any why to homogenize the splits so that they are all approx. the same size. . To be clear, ~29G of h_vmem per thread (using 8 threads) is needed to run the `mmseqs search` jobs, but the largest split idx file is 70G.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741769461
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741772613:298,Availability,fault,fault-tolerant,298,"Maybe I should note that I'm splitting the query fasta into subsets, creating mmseqs dbs for each, and searching against UniRef90 (with the pre-generated idx). I know that I could use openmpi for scaling on a cluster, but splitting and running all of the queries in parallel with snakemake is more fault-tolerant. . Having to request ~300G per cluster job greatly limits the number of parallel jobs that will run on the cluster at the same time, so I'd prefer to reduce the memory requirements, if possible. It seems that the first split stays fairly large in size regardless of the total number of splits. I'd try ~30 splits, but I'm guessing that I will still be stuck with a split file that's ~70G.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741772613
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741772613:463,Energy Efficiency,reduce,reduce,463,"Maybe I should note that I'm splitting the query fasta into subsets, creating mmseqs dbs for each, and searching against UniRef90 (with the pre-generated idx). I know that I could use openmpi for scaling on a cluster, but splitting and running all of the queries in parallel with snakemake is more fault-tolerant. . Having to request ~300G per cluster job greatly limits the number of parallel jobs that will run on the cluster at the same time, so I'd prefer to reduce the memory requirements, if possible. It seems that the first split stays fairly large in size regardless of the total number of splits. I'd try ~30 splits, but I'm guessing that I will still be stuck with a split file that's ~70G.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741772613
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742364404:1256,Availability,error,errors,1256,"The good news is that the updated code splits the idx rather evenly: . ```; -rw-r--r-- 1 nyoungblut abt3 371M Dec 9 22:32 db.idx.0; -rw-r--r-- 1 nyoungblut abt3 37G Dec 9 22:32 db.idx.1; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.2; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.3; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.4; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.5; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.6; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.7; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.8; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.9; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.10; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.11; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.12; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.13; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.14; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.15; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.16; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.17; -rw-r--r-- 1 nyoungblut abt3 3.0K Dec 9 22:32 db.idx.index; -rw-r--r-- 1 nyoungblut abt3 4 Dec 9 22:32 db.idx.dbtype; ```. The bad news is that `mmseqs search` still generates mmap errors (`Failed to mmap memory dataSize=12723929088`) unless I provide ~240G of memory (parallel=8, h_vmem=29G). So, it appears that splitting the idx more evenly didn't help with the memory requirements for `mmseqs search`. Maybe the issue is that the `idx.1` split is still rather large?. Note: I still require ~240G of memory if I just use 1 thread (parallel=1, h_vmem=240G)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742364404
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742364404:26,Deployability,update,updated,26,"The good news is that the updated code splits the idx rather evenly: . ```; -rw-r--r-- 1 nyoungblut abt3 371M Dec 9 22:32 db.idx.0; -rw-r--r-- 1 nyoungblut abt3 37G Dec 9 22:32 db.idx.1; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.2; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.3; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.4; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.5; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.6; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.7; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.8; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.9; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.10; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.11; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.12; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.13; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.14; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.15; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.16; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.17; -rw-r--r-- 1 nyoungblut abt3 3.0K Dec 9 22:32 db.idx.index; -rw-r--r-- 1 nyoungblut abt3 4 Dec 9 22:32 db.idx.dbtype; ```. The bad news is that `mmseqs search` still generates mmap errors (`Failed to mmap memory dataSize=12723929088`) unless I provide ~240G of memory (parallel=8, h_vmem=29G). So, it appears that splitting the idx more evenly didn't help with the memory requirements for `mmseqs search`. Maybe the issue is that the `idx.1` split is still rather large?. Note: I still require ~240G of memory if I just use 1 thread (parallel=1, h_vmem=240G)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742364404
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742545669:302,Energy Efficiency,consumption,consumption,302,"I am not sure what the fix is. I think the issue is now that this `RLIMIT_DATA` limit not actually per allocation but per process. So the additional splits weren't really useful. . IMO the `h_vmem` is a weird feature of SGE and MMseqs2 allocating a lot of virtual memory is reasonable. Its real memory consumption is much smaller, however I am not sure that SGE can track that. I would suggest to talk to your SGE admin to setup a separate queue that doesn't enforce memory limits. Reengineering MMseqs2 to page in splits on-demand is I think quite a big reengineering effort. We can keep it in mind for the future.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742545669
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742545669:440,Performance,queue,queue,440,"I am not sure what the fix is. I think the issue is now that this `RLIMIT_DATA` limit not actually per allocation but per process. So the additional splits weren't really useful. . IMO the `h_vmem` is a weird feature of SGE and MMseqs2 allocating a lot of virtual memory is reasonable. Its real memory consumption is much smaller, however I am not sure that SGE can track that. I would suggest to talk to your SGE admin to setup a separate queue that doesn't enforce memory limits. Reengineering MMseqs2 to page in splits on-demand is I think quite a big reengineering effort. We can keep it in mind for the future.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742545669
https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742599340:344,Energy Efficiency,reduce,reduce,344,"Thanks for your help with this! Yeah, no matter how many splits I create, `.idx.1` is always 37G, while the other files are much smaller, and regardless, the required `h_vmem` is ~240G. . Given the speed/accuracy of mmseqs, I'll probably still use it for my needs, if at all possible. Otherwise, I'll have to switch back to diamond in order to reduce the memory required for each job.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742599340
https://github.com/soedinglab/MMseqs2/issues/339#issuecomment-668703258:67,Deployability,release,release,67,"Thank you, @milot-mirdita!. Are you guys planning to publish a new release?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339#issuecomment-668703258
https://github.com/soedinglab/MMseqs2/issues/340#issuecomment-670201400:13,Deployability,update,update,13,"Thanks, i'll update that when I have a chance. An update version is now already implemented in the (git version of the) `databases` workflow. You can setup SILVA by calling:; ```; mmseqs databases SILVA silvadb tmp; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/340#issuecomment-670201400
https://github.com/soedinglab/MMseqs2/issues/340#issuecomment-670201400:50,Deployability,update,update,50,"Thanks, i'll update that when I have a chance. An update version is now already implemented in the (git version of the) `databases` workflow. You can setup SILVA by calling:; ```; mmseqs databases SILVA silvadb tmp; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/340#issuecomment-670201400
https://github.com/soedinglab/MMseqs2/issues/340#issuecomment-670360006:153,Availability,avail,available,153,"Thank you!. As for silvadb - it would be very helpful! ; When are you planning to release this version on Docker Hub? Or, maybe, this version is already available?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/340#issuecomment-670360006
https://github.com/soedinglab/MMseqs2/issues/340#issuecomment-670360006:82,Deployability,release,release,82,"Thank you!. As for silvadb - it would be very helpful! ; When are you planning to release this version on Docker Hub? Or, maybe, this version is already available?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/340#issuecomment-670360006
https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669600074:369,Availability,reliab,reliably,369,"You can use the `filtertaxseqdb` command (https://github.com/soedinglab/MMseqs2/wiki#filtering-a-seqtaxdb) to build a subset of the Uniprot that only contains bacterial sequences. For bacteria you would run (after `createdb/databases`):; ```; mmseqs filtertaxseqdb uniprot uniprot_bak --taxon-list 2; ```. I am also trying to integrate taxonomy information into the NR reliably. Once that's working you would have an even larger resource. . (Btw in the `filtertaxseqdb` module of MMseqs2 release 11 seperating taxon ids by `,` does something weird. I would recommend to use the latest git MMseqs2, statically compiled binaries at https://mmseqs.com/latest).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669600074
https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669600074:326,Deployability,integrat,integrate,326,"You can use the `filtertaxseqdb` command (https://github.com/soedinglab/MMseqs2/wiki#filtering-a-seqtaxdb) to build a subset of the Uniprot that only contains bacterial sequences. For bacteria you would run (after `createdb/databases`):; ```; mmseqs filtertaxseqdb uniprot uniprot_bak --taxon-list 2; ```. I am also trying to integrate taxonomy information into the NR reliably. Once that's working you would have an even larger resource. . (Btw in the `filtertaxseqdb` module of MMseqs2 release 11 seperating taxon ids by `,` does something weird. I would recommend to use the latest git MMseqs2, statically compiled binaries at https://mmseqs.com/latest).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669600074
https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669600074:488,Deployability,release,release,488,"You can use the `filtertaxseqdb` command (https://github.com/soedinglab/MMseqs2/wiki#filtering-a-seqtaxdb) to build a subset of the Uniprot that only contains bacterial sequences. For bacteria you would run (after `createdb/databases`):; ```; mmseqs filtertaxseqdb uniprot uniprot_bak --taxon-list 2; ```. I am also trying to integrate taxonomy information into the NR reliably. Once that's working you would have an even larger resource. . (Btw in the `filtertaxseqdb` module of MMseqs2 release 11 seperating taxon ids by `,` does something weird. I would recommend to use the latest git MMseqs2, statically compiled binaries at https://mmseqs.com/latest).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669600074
https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669600074:326,Integrability,integrat,integrate,326,"You can use the `filtertaxseqdb` command (https://github.com/soedinglab/MMseqs2/wiki#filtering-a-seqtaxdb) to build a subset of the Uniprot that only contains bacterial sequences. For bacteria you would run (after `createdb/databases`):; ```; mmseqs filtertaxseqdb uniprot uniprot_bak --taxon-list 2; ```. I am also trying to integrate taxonomy information into the NR reliably. Once that's working you would have an even larger resource. . (Btw in the `filtertaxseqdb` module of MMseqs2 release 11 seperating taxon ids by `,` does something weird. I would recommend to use the latest git MMseqs2, statically compiled binaries at https://mmseqs.com/latest).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669600074
https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669637865:325,Availability,avail,available,325,Thank you! My homology search only seems to run 300 alignments on the filtered database (uniprotKB/swissprot) even though this protein should be in most bacteria. Perhaps doing the search via protein sequences isn't the way to go for estimating taxonomic commonness. Is there a database with whole bacterial genome sequences available (one genome per fasta)? I could then do a repeat search for my gene's NT sequence against each genome,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669637865
https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-670978160:37,Availability,down,download,37,"I've found that GenBank allows me to download complete bacterial genome assembly fasta files, which I built into a database using 'createdb'. I downloaded a total of 19084 complete genomes and in my database.source file, I see 19084 rows in the file. When I look in the database.index file I have 38630 rows (as I understand it, createdb will break up long sequences into multiple entries to help processing speed). When I run a 'mmseqs search' function for my one query gene against this entire target database of bacterial genomes using a '--max-seqs' value of 40000 (well above the 38630 entries in my database index) and a '-s' value of 7.0 for full pre-filtering sensitivity, my final index statistics tell me that only 18615 alignments were calculated and that only 13173 sequences pairs passed the alignment threshold. . Is it true that a '-s' value of 7.0 applies a list of similar K-mers with only 7 entries for each K-mer during pre-filtering, or is the value 7.0 scaled differently? I ask because a float value seems weird for what would seem to be an integer parameter.. Also, I noticed that in my .m8 result file, none of my alignments have any gaps present. Is this normal? Is it advisable/possible to modify the Smith-Waterman alignment parameters to include gaps in my alignment algorithm to ensure that I'm not screening out a large number of false-negatives?. Also, is it possible to remove repeat rows (2 or more rows corresponding to the same original bacterial target genome) from my result .m8 file in order to determine the final number of bacterial genomes in the total original set (19084 genomes) that aligned successfully to my gene? (basically undoing the breaking up of sequences into multiple entries during 'createdb'). Thank you for all of your help!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-670978160
https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-670978160:144,Availability,down,downloaded,144,"I've found that GenBank allows me to download complete bacterial genome assembly fasta files, which I built into a database using 'createdb'. I downloaded a total of 19084 complete genomes and in my database.source file, I see 19084 rows in the file. When I look in the database.index file I have 38630 rows (as I understand it, createdb will break up long sequences into multiple entries to help processing speed). When I run a 'mmseqs search' function for my one query gene against this entire target database of bacterial genomes using a '--max-seqs' value of 40000 (well above the 38630 entries in my database index) and a '-s' value of 7.0 for full pre-filtering sensitivity, my final index statistics tell me that only 18615 alignments were calculated and that only 13173 sequences pairs passed the alignment threshold. . Is it true that a '-s' value of 7.0 applies a list of similar K-mers with only 7 entries for each K-mer during pre-filtering, or is the value 7.0 scaled differently? I ask because a float value seems weird for what would seem to be an integer parameter.. Also, I noticed that in my .m8 result file, none of my alignments have any gaps present. Is this normal? Is it advisable/possible to modify the Smith-Waterman alignment parameters to include gaps in my alignment algorithm to ensure that I'm not screening out a large number of false-negatives?. Also, is it possible to remove repeat rows (2 or more rows corresponding to the same original bacterial target genome) from my result .m8 file in order to determine the final number of bacterial genomes in the total original set (19084 genomes) that aligned successfully to my gene? (basically undoing the breaking up of sequences into multiple entries during 'createdb'). Thank you for all of your help!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-670978160
https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-670978160:1672,Usability,undo,undoing,1672,"I've found that GenBank allows me to download complete bacterial genome assembly fasta files, which I built into a database using 'createdb'. I downloaded a total of 19084 complete genomes and in my database.source file, I see 19084 rows in the file. When I look in the database.index file I have 38630 rows (as I understand it, createdb will break up long sequences into multiple entries to help processing speed). When I run a 'mmseqs search' function for my one query gene against this entire target database of bacterial genomes using a '--max-seqs' value of 40000 (well above the 38630 entries in my database index) and a '-s' value of 7.0 for full pre-filtering sensitivity, my final index statistics tell me that only 18615 alignments were calculated and that only 13173 sequences pairs passed the alignment threshold. . Is it true that a '-s' value of 7.0 applies a list of similar K-mers with only 7 entries for each K-mer during pre-filtering, or is the value 7.0 scaled differently? I ask because a float value seems weird for what would seem to be an integer parameter.. Also, I noticed that in my .m8 result file, none of my alignments have any gaps present. Is this normal? Is it advisable/possible to modify the Smith-Waterman alignment parameters to include gaps in my alignment algorithm to ensure that I'm not screening out a large number of false-negatives?. Also, is it possible to remove repeat rows (2 or more rows corresponding to the same original bacterial target genome) from my result .m8 file in order to determine the final number of bacterial genomes in the total original set (19084 genomes) that aligned successfully to my gene? (basically undoing the breaking up of sequences into multiple entries during 'createdb'). Thank you for all of your help!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-670978160
https://github.com/soedinglab/MMseqs2/issues/344#issuecomment-678089285:118,Deployability,release,release,118,Could you try using the latest git version? I think we already fixed the issue and the fix should be part of the next release (sorry for the delay).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/344#issuecomment-678089285
https://github.com/soedinglab/MMseqs2/issues/346#issuecomment-687244044:55,Availability,down,downloading,55,"`createtaxdb` does a somewhat inefficient procedure of downloading the rather large idmapping file from uniprot and using that for mapping to taxids. I would recommend to use the `databases` workflow, which doesn't need the idmapping. And then creating a subset of the database with a combination of the `createsubdb` module and the `db.lookup` file. The `.lookup` file has a mapping of internal database identifiers to accessions. So you can make a list of database identifiers you want to keep and then call `createsubdb`:. ```; mmseqs createsubdb subset.tsv swissprot swissprot_subset; ```. Alternatively if you want specific taxa in your database you can use the `filtertaxseqdb` module:. ```; mmseqs filtertaxseqdb swissprot swissprot_human --taxon-list 9606; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/346#issuecomment-687244044
https://github.com/soedinglab/MMseqs2/issues/346#issuecomment-687244044:420,Security,access,accessions,420,"`createtaxdb` does a somewhat inefficient procedure of downloading the rather large idmapping file from uniprot and using that for mapping to taxids. I would recommend to use the `databases` workflow, which doesn't need the idmapping. And then creating a subset of the database with a combination of the `createsubdb` module and the `db.lookup` file. The `.lookup` file has a mapping of internal database identifiers to accessions. So you can make a list of database identifiers you want to keep and then call `createsubdb`:. ```; mmseqs createsubdb subset.tsv swissprot swissprot_subset; ```. Alternatively if you want specific taxa in your database you can use the `filtertaxseqdb` module:. ```; mmseqs filtertaxseqdb swissprot swissprot_human --taxon-list 9606; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/346#issuecomment-687244044
https://github.com/soedinglab/MMseqs2/issues/347#issuecomment-688527651:10,Deployability,update,update,10,"Forgot to update you, df69c26e1c9aaeaa3f5d72fd6e782d02742b2b0c fixed the issue. You can use git head again.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/347#issuecomment-688527651
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441:54,Deployability,update,update,54,You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module `result2repseq`. I think I fixed the performance issue in the latest commit cc7d7da30ec779d6a2e886438f8295f59e2192f1. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the `easy-` workflows yet. I'd recommend to stick to the basic commands as shown in the user guide.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441:157,Deployability,release,release,157,You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module `result2repseq`. I think I fixed the performance issue in the latest commit cc7d7da30ec779d6a2e886438f8295f59e2192f1. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the `easy-` workflows yet. I'd recommend to stick to the basic commands as shown in the user guide.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441:254,Performance,perform,performance,254,You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module `result2repseq`. I think I fixed the performance issue in the latest commit cc7d7da30ec779d6a2e886438f8295f59e2192f1. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the `easy-` workflows yet. I'd recommend to stick to the basic commands as shown in the user guide.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441:203,Usability,simpl,simple,203,You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module `result2repseq`. I think I fixed the performance issue in the latest commit cc7d7da30ec779d6a2e886438f8295f59e2192f1. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the `easy-` workflows yet. I'd recommend to stick to the basic commands as shown in the user guide.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441:576,Usability,guid,guide,576,You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module `result2repseq`. I think I fixed the performance issue in the latest commit cc7d7da30ec779d6a2e886438f8295f59e2192f1. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the `easy-` workflows yet. I'd recommend to stick to the basic commands as shown in the user guide.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337:52,Deployability,update,updated,52,"Dear Milot,. Thanks you for recommending the use of updated version and fixing performance issues. There were 3 billion sequences which clustered in 1 billion using was-cluster approach. I do not want to re-cluster the version of data I processed previously since I annotated these ~1 billion sequences and used in different projects already. As it seems, It may not be good idea to use db files from easy-cluster output. Do you think it is useful to create a new db (EBdb) out of easy-cluster output of the previous run, using rep_seq.fasta, and use EBdb as a template to compare newer sequences I want to cluster and finally update the EBdb to EBdb_new?. Intikhab. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 12:42; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module result2repseq. I think I fixed the performance issue in the latest commit cc7d7da<https://github.com/soedinglab/MMseqs2/commit/cc7d7da30ec779d6a2e886438f8295f59e2192f1>. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the easy- workflows yet. I'd recommend to stick to the basic commands as shown in the user guide. -; You",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337:627,Deployability,update,update,627,"Dear Milot,. Thanks you for recommending the use of updated version and fixing performance issues. There were 3 billion sequences which clustered in 1 billion using was-cluster approach. I do not want to re-cluster the version of data I processed previously since I annotated these ~1 billion sequences and used in different projects already. As it seems, It may not be good idea to use db files from easy-cluster output. Do you think it is useful to create a new db (EBdb) out of easy-cluster output of the previous run, using rep_seq.fasta, and use EBdb as a template to compare newer sequences I want to cluster and finally update the EBdb to EBdb_new?. Intikhab. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 12:42; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module result2repseq. I think I fixed the performance issue in the latest commit cc7d7da<https://github.com/soedinglab/MMseqs2/commit/cc7d7da30ec779d6a2e886438f8295f59e2192f1>. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the easy- workflows yet. I'd recommend to stick to the basic commands as shown in the user guide. -; You",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337:1416,Deployability,update,update,1416,"lion sequences and used in different projects already. As it seems, It may not be good idea to use db files from easy-cluster output. Do you think it is useful to create a new db (EBdb) out of easy-cluster output of the previous run, using rep_seq.fasta, and use EBdb as a template to compare newer sequences I want to cluster and finally update the EBdb to EBdb_new?. Intikhab. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 12:42; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module result2repseq. I think I fixed the performance issue in the latest commit cc7d7da<https://github.com/soedinglab/MMseqs2/commit/cc7d7da30ec779d6a2e886438f8295f59e2192f1>. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the easy- workflows yet. I'd recommend to stick to the basic commands as shown in the user guide. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAV63EW3N5Z32FV3JA5T3JDSEX37XANCNFSM4Q7W6YLA>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337:1519,Deployability,release,release,1519,"lion sequences and used in different projects already. As it seems, It may not be good idea to use db files from easy-cluster output. Do you think it is useful to create a new db (EBdb) out of easy-cluster output of the previous run, using rep_seq.fasta, and use EBdb as a template to compare newer sequences I want to cluster and finally update the EBdb to EBdb_new?. Intikhab. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 12:42; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module result2repseq. I think I fixed the performance issue in the latest commit cc7d7da<https://github.com/soedinglab/MMseqs2/commit/cc7d7da30ec779d6a2e886438f8295f59e2192f1>. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the easy- workflows yet. I'd recommend to stick to the basic commands as shown in the user guide. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAV63EW3N5Z32FV3JA5T3JDSEX37XANCNFSM4Q7W6YLA>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337:79,Performance,perform,performance,79,"Dear Milot,. Thanks you for recommending the use of updated version and fixing performance issues. There were 3 billion sequences which clustered in 1 billion using was-cluster approach. I do not want to re-cluster the version of data I processed previously since I annotated these ~1 billion sequences and used in different projects already. As it seems, It may not be good idea to use db files from easy-cluster output. Do you think it is useful to create a new db (EBdb) out of easy-cluster output of the previous run, using rep_seq.fasta, and use EBdb as a template to compare newer sequences I want to cluster and finally update the EBdb to EBdb_new?. Intikhab. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 12:42; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module result2repseq. I think I fixed the performance issue in the latest commit cc7d7da<https://github.com/soedinglab/MMseqs2/commit/cc7d7da30ec779d6a2e886438f8295f59e2192f1>. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the easy- workflows yet. I'd recommend to stick to the basic commands as shown in the user guide. -; You",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337:1614,Performance,perform,performance,1614,"lion sequences and used in different projects already. As it seems, It may not be good idea to use db files from easy-cluster output. Do you think it is useful to create a new db (EBdb) out of easy-cluster output of the previous run, using rep_seq.fasta, and use EBdb as a template to compare newer sequences I want to cluster and finally update the EBdb to EBdb_new?. Intikhab. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 12:42; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module result2repseq. I think I fixed the performance issue in the latest commit cc7d7da<https://github.com/soedinglab/MMseqs2/commit/cc7d7da30ec779d6a2e886438f8295f59e2192f1>. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the easy- workflows yet. I'd recommend to stick to the basic commands as shown in the user guide. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAV63EW3N5Z32FV3JA5T3JDSEX37XANCNFSM4Q7W6YLA>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337:1565,Usability,simpl,simple,1565,"lion sequences and used in different projects already. As it seems, It may not be good idea to use db files from easy-cluster output. Do you think it is useful to create a new db (EBdb) out of easy-cluster output of the previous run, using rep_seq.fasta, and use EBdb as a template to compare newer sequences I want to cluster and finally update the EBdb to EBdb_new?. Intikhab. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 12:42; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module result2repseq. I think I fixed the performance issue in the latest commit cc7d7da<https://github.com/soedinglab/MMseqs2/commit/cc7d7da30ec779d6a2e886438f8295f59e2192f1>. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the easy- workflows yet. I'd recommend to stick to the basic commands as shown in the user guide. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAV63EW3N5Z32FV3JA5T3JDSEX37XANCNFSM4Q7W6YLA>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337:1988,Usability,guid,guide,1988,"lion sequences and used in different projects already. As it seems, It may not be good idea to use db files from easy-cluster output. Do you think it is useful to create a new db (EBdb) out of easy-cluster output of the previous run, using rep_seq.fasta, and use EBdb as a template to compare newer sequences I want to cluster and finally update the EBdb to EBdb_new?. Intikhab. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 12:42; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module result2repseq. I think I fixed the performance issue in the latest commit cc7d7da<https://github.com/soedinglab/MMseqs2/commit/cc7d7da30ec779d6a2e886438f8295f59e2192f1>. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the easy- workflows yet. I'd recommend to stick to the basic commands as shown in the user guide. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAV63EW3N5Z32FV3JA5T3JDSEX37XANCNFSM4Q7W6YLA>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688971058:182,Deployability,update,update,182,I think it's probably salvageable. I'll need to look over your output in detail. . Another question: This was clustered using `easy-linclust` not using `easy-cluster` right? Cluster update currently will try to use the normal clustering for the sequences that cannot be assigned to an existing cluster. This will also likely be very slow (probably slower than clustering anew using linclust). We will have to build support for updating with linclust.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688971058
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616:295,Availability,redundant,redundant,295,"Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 18:53; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). I think it's probably salvageable. I'll need to look over your output in detail. Another question: This was clustered using easy-linclust not using easy-cluster right? Cluster update currently will try to use the normal clustering for the sequences that cannot be assigned to an existing cluster. This will also likely be very slow (probably slower than clustering anew using linclust). We will have to build support for updating with linclust. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688971058",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616:338,Availability,redundant,redundant,338,"Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 18:53; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). I think it's probably salvageable. I'll need to look over your output in detail. Another question: This was clustered using easy-linclust not using easy-cluster right? Cluster update currently will try to use the normal clustering for the sequences that cannot be assigned to an existing cluster. This will also likely be very slow (probably slower than clustering anew using linclust). We will have to build support for updating with linclust. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688971058",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616:157,Deployability,update,update,157,"Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 18:53; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). I think it's probably salvageable. I'll need to look over your output in detail. Another question: This was clustered using easy-linclust not using easy-cluster right? Cluster update currently will try to use the normal clustering for the sequences that cannot be assigned to an existing cluster. This will also likely be very slow (probably slower than clustering anew using linclust). We will have to build support for updating with linclust. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688971058",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616:1553,Deployability,update,update,1553,"u use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 18:53; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). I think it's probably salvageable. I'll need to look over your output in detail. Another question: This was clustered using easy-linclust not using easy-cluster right? Cluster update currently will try to use the normal clustering for the sequences that cannot be assigned to an existing cluster. This will also likely be very slow (probably slower than clustering anew using linclust). We will have to build support for updating with linclust. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688971058>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAV63ERPGWSKH3ZELTLYWA3SEZHO5ANCNFSM4Q7W6YLA>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616:295,Safety,redund,redundant,295,"Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 18:53; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). I think it's probably salvageable. I'll need to look over your output in detail. Another question: This was clustered using easy-linclust not using easy-cluster right? Cluster update currently will try to use the normal clustering for the sequences that cannot be assigned to an existing cluster. This will also likely be very slow (probably slower than clustering anew using linclust). We will have to build support for updating with linclust. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688971058",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616:338,Safety,redund,redundant,338,"Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 18:53; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). I think it's probably salvageable. I'll need to look over your output in detail. Another question: This was clustered using easy-linclust not using easy-cluster right? Cluster update currently will try to use the normal clustering for the sequences that cannot be assigned to an existing cluster. This will also likely be very slow (probably slower than clustering anew using linclust). We will have to build support for updating with linclust. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688971058",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180:180,Availability,redundant,redundant,180,"?Dear Milot,. I restarted the clustering to make a new DB, EarthMicrobiomeDB20200910, that includes previous representative DNA gene sequences (~800 million) and recently obtained redundant sequences (around 12 million), using the following command:. mmseqs cluster EarthICEmetagenomesDB EarthICEmetagenomesDB_clu EarthICEmetagenomesDB.tmp --min-seq-id 0.95 --cov-mode 2 -c 0.8 --max-seq-len 132768 --threads 32 >EarthICEmetagenomesDB_clu.log 2>&1 &. It is running since September 10, attached is the log, what do you think how long it will take to finish?. ?Many Thanks,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Intikhab S. Alam; Sent: 10 September 2020 00:45; To: soedinglab/MMseqs2; soedinglab/MMseqs2; Cc: Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscie",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180:1545,Availability,redundant,redundant,1545,"Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Intikhab S. Alam; Sent: 10 September 2020 00:45; To: soedinglab/MMseqs2; soedinglab/MMseqs2; Cc: Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 18:53; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180:1588,Availability,redundant,redundant,1588,"Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Intikhab S. Alam; Sent: 10 September 2020 00:45; To: soedinglab/MMseqs2; soedinglab/MMseqs2; Cc: Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 18:53; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180:1407,Deployability,update,update,1407,"genomesDB_clu.log 2>&1 &. It is running since September 10, attached is the log, what do you think how long it will take to finish?. ?Many Thanks,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Intikhab S. Alam; Sent: 10 September 2020 00:45; To: soedinglab/MMseqs2; soedinglab/MMseqs2; Cc: Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdit",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180:2803,Deployability,update,update,2803,"u use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 18:53; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). I think it's probably salvageable. I'll need to look over your output in detail. Another question: This was clustered using easy-linclust not using easy-cluster right? Cluster update currently will try to use the normal clustering for the sequences that cannot be assigned to an existing cluster. This will also likely be very slow (probably slower than clustering anew using linclust). We will have to build support for updating with linclust. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688971058>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAV63ERPGWSKH3ZELTLYWA3SEZHO5ANCNFSM4Q7W6YLA>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180:180,Safety,redund,redundant,180,"?Dear Milot,. I restarted the clustering to make a new DB, EarthMicrobiomeDB20200910, that includes previous representative DNA gene sequences (~800 million) and recently obtained redundant sequences (around 12 million), using the following command:. mmseqs cluster EarthICEmetagenomesDB EarthICEmetagenomesDB_clu EarthICEmetagenomesDB.tmp --min-seq-id 0.95 --cov-mode 2 -c 0.8 --max-seq-len 132768 --threads 32 >EarthICEmetagenomesDB_clu.log 2>&1 &. It is running since September 10, attached is the log, what do you think how long it will take to finish?. ?Many Thanks,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Intikhab S. Alam; Sent: 10 September 2020 00:45; To: soedinglab/MMseqs2; soedinglab/MMseqs2; Cc: Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscie",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180:1545,Safety,redund,redundant,1545,"Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Intikhab S. Alam; Sent: 10 September 2020 00:45; To: soedinglab/MMseqs2; soedinglab/MMseqs2; Cc: Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 18:53; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180:1588,Safety,redund,redundant,1588,"Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Intikhab S. Alam; Sent: 10 September 2020 00:45; To: soedinglab/MMseqs2; soedinglab/MMseqs2; Cc: Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 18:53; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180:439,Testability,log,log,439,"?Dear Milot,. I restarted the clustering to make a new DB, EarthMicrobiomeDB20200910, that includes previous representative DNA gene sequences (~800 million) and recently obtained redundant sequences (around 12 million), using the following command:. mmseqs cluster EarthICEmetagenomesDB EarthICEmetagenomesDB_clu EarthICEmetagenomesDB.tmp --min-seq-id 0.95 --cov-mode 2 -c 0.8 --max-seq-len 132768 --threads 32 >EarthICEmetagenomesDB_clu.log 2>&1 &. It is running since September 10, attached is the log, what do you think how long it will take to finish?. ?Many Thanks,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Intikhab S. Alam; Sent: 10 September 2020 00:45; To: soedinglab/MMseqs2; soedinglab/MMseqs2; Cc: Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscie",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180:501,Testability,log,log,501,"?Dear Milot,. I restarted the clustering to make a new DB, EarthMicrobiomeDB20200910, that includes previous representative DNA gene sequences (~800 million) and recently obtained redundant sequences (around 12 million), using the following command:. mmseqs cluster EarthICEmetagenomesDB EarthICEmetagenomesDB_clu EarthICEmetagenomesDB.tmp --min-seq-id 0.95 --cov-mode 2 -c 0.8 --max-seq-len 132768 --threads 32 >EarthICEmetagenomesDB_clu.log 2>&1 &. It is running since September 10, attached is the log, what do you think how long it will take to finish?. ?Many Thanks,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Intikhab S. Alam; Sent: 10 September 2020 00:45; To: soedinglab/MMseqs2; soedinglab/MMseqs2; Cc: Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscie",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699957190:45,Integrability,message,message,45,"Ah sorry I had forgotten about your previous message, too many different projects are going on!. Could you check the log-file upload again, I don't see a log.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699957190
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699957190:117,Testability,log,log-file,117,"Ah sorry I had forgotten about your previous message, too many different projects are going on!. Could you check the log-file upload again, I don't see a log.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699957190
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699957190:154,Testability,log,log,154,"Ah sorry I had forgotten about your previous message, too many different projects are going on!. Could you check the log-file upload again, I don't see a log.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699957190
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699966117:853,Integrability,message,message,853,"?Dear Milot,. I attached the log file here with this email, please check if you can access it. Many Thanks,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 28 September 2020 14:48; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Ah sorry I had forgotten about your previous message, too many different projects are going on!. Could you check the log-file upload again, I don't see a log. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699957190>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAV63ERYGGXCIXN2ZXRHM3LSIBZXBANCNFSM4Q7W6YLA>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699966117
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699966117:84,Security,access,access,84,"?Dear Milot,. I attached the log file here with this email, please check if you can access it. Many Thanks,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 28 September 2020 14:48; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Ah sorry I had forgotten about your previous message, too many different projects are going on!. Could you check the log-file upload again, I don't see a log. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699957190>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAV63ERYGGXCIXN2ZXRHM3LSIBZXBANCNFSM4Q7W6YLA>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699966117
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699966117:29,Testability,log,log,29,"?Dear Milot,. I attached the log file here with this email, please check if you can access it. Many Thanks,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 28 September 2020 14:48; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Ah sorry I had forgotten about your previous message, too many different projects are going on!. Could you check the log-file upload again, I don't see a log. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699957190>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAV63ERYGGXCIXN2ZXRHM3LSIBZXBANCNFSM4Q7W6YLA>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699966117
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699966117:925,Testability,log,log-file,925,"?Dear Milot,. I attached the log file here with this email, please check if you can access it. Many Thanks,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 28 September 2020 14:48; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Ah sorry I had forgotten about your previous message, too many different projects are going on!. Could you check the log-file upload again, I don't see a log. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699957190>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAV63ERYGGXCIXN2ZXRHM3LSIBZXBANCNFSM4Q7W6YLA>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699966117
https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699966117:962,Testability,log,log,962,"?Dear Milot,. I attached the log file here with this email, please check if you can access it. Many Thanks,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 28 September 2020 14:48; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Ah sorry I had forgotten about your previous message, too many different projects are going on!. Could you check the log-file upload again, I don't see a log. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699957190>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAV63ERYGGXCIXN2ZXRHM3LSIBZXBANCNFSM4Q7W6YLA>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699966117
https://github.com/soedinglab/MMseqs2/issues/350#issuecomment-689453353:774,Availability,down,downstream,774,"Well, we probably can not call the ""align"" module since it would ""ruin"" the sequence-profile alignments for remote query-target pairs indeed. I wonder if re-scoring using the profile from the last iteration could work. Is it possible to re-score all previously identified targets against the profile from the last iteration? That could guarantee comparable significance metrics across the entire hit list. I have checked how psi-blast is handling this case: it seems to re-score all hits within each iteration. As a ""bypass"" method, I am planning to use the ""nident/qlen"" (number of identical aligned residues divided by query sequence length) ratio as a globally valid measure of alignment goodness, allowing ranking hits regardless to iteration, that is essential for our downstream work.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350#issuecomment-689453353
https://github.com/soedinglab/MMseqs2/issues/351#issuecomment-695797950:131,Performance,perform,performs,131,"Yes, this is indeed a counter intuitive behavior. The reason is that cascaded clustering has a big effect on the runtime. Linclust performs the following steps: ; (1) `kmermatcher`<- assign sequences to cluster centroids ; (2) `rescorediagonal` <- using some fast ungapped alignment between centroids and members ; (3) `clust` <- clusters the sequences that already passed the alignment criteria and remove them from the remaining set ; (4) `rescorediagonal` <- remove hits that have a low chance to fulfil the alignment criteria ; (5) `align` <- align the remaining hits with Gotoh-Smith-Waterman . The more sequences that Linclust filters at an early stage (3) the faster the algorithm runs since the slowest part is the Gotoh-Smith-Waterman algorithm.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/351#issuecomment-695797950
https://github.com/soedinglab/MMseqs2/issues/351#issuecomment-695797950:30,Usability,intuit,intuitive,30,"Yes, this is indeed a counter intuitive behavior. The reason is that cascaded clustering has a big effect on the runtime. Linclust performs the following steps: ; (1) `kmermatcher`<- assign sequences to cluster centroids ; (2) `rescorediagonal` <- using some fast ungapped alignment between centroids and members ; (3) `clust` <- clusters the sequences that already passed the alignment criteria and remove them from the remaining set ; (4) `rescorediagonal` <- remove hits that have a low chance to fulfil the alignment criteria ; (5) `align` <- align the remaining hits with Gotoh-Smith-Waterman . The more sequences that Linclust filters at an early stage (3) the faster the algorithm runs since the slowest part is the Gotoh-Smith-Waterman algorithm.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/351#issuecomment-695797950
https://github.com/soedinglab/MMseqs2/issues/351#issuecomment-706843430:552,Testability,log,log,552,"Here are the exact statistics of the sequences that I am trying to cluster to help understand what's going on. - Number of Nucleotide Sequences: **60,621,169**; - Sum of the Lengths of all Sequences: **326,476,863,573 bp**; - Length of the Shortest Sequence: **6 bp** ; - Length of the Longest Sequence: **99,791,824 bp**; - Average Length of Sequences: **5,385 bp**; - Median Length of Sequences: **1,154 bp**; - 25% of Sequences are below: **579 bp**; - 75% of Sequences are below: **2,304 bp**; - N50 of Sequences: **2,879,031 bp**. And here is the log file of `mmseqs easy-linclust` after 3000 CPU hours. [log.txt](https://github.com/soedinglab/MMseqs2/files/5362803/log.txt). What parameters of `mmseqs easy-linclust` would be best to cluster such a distribution of sequences at 99% identity?. Thanks for your time.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/351#issuecomment-706843430
https://github.com/soedinglab/MMseqs2/issues/351#issuecomment-706843430:610,Testability,log,log,610,"Here are the exact statistics of the sequences that I am trying to cluster to help understand what's going on. - Number of Nucleotide Sequences: **60,621,169**; - Sum of the Lengths of all Sequences: **326,476,863,573 bp**; - Length of the Shortest Sequence: **6 bp** ; - Length of the Longest Sequence: **99,791,824 bp**; - Average Length of Sequences: **5,385 bp**; - Median Length of Sequences: **1,154 bp**; - 25% of Sequences are below: **579 bp**; - 75% of Sequences are below: **2,304 bp**; - N50 of Sequences: **2,879,031 bp**. And here is the log file of `mmseqs easy-linclust` after 3000 CPU hours. [log.txt](https://github.com/soedinglab/MMseqs2/files/5362803/log.txt). What parameters of `mmseqs easy-linclust` would be best to cluster such a distribution of sequences at 99% identity?. Thanks for your time.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/351#issuecomment-706843430
https://github.com/soedinglab/MMseqs2/issues/351#issuecomment-706843430:671,Testability,log,log,671,"Here are the exact statistics of the sequences that I am trying to cluster to help understand what's going on. - Number of Nucleotide Sequences: **60,621,169**; - Sum of the Lengths of all Sequences: **326,476,863,573 bp**; - Length of the Shortest Sequence: **6 bp** ; - Length of the Longest Sequence: **99,791,824 bp**; - Average Length of Sequences: **5,385 bp**; - Median Length of Sequences: **1,154 bp**; - 25% of Sequences are below: **579 bp**; - 75% of Sequences are below: **2,304 bp**; - N50 of Sequences: **2,879,031 bp**. And here is the log file of `mmseqs easy-linclust` after 3000 CPU hours. [log.txt](https://github.com/soedinglab/MMseqs2/files/5362803/log.txt). What parameters of `mmseqs easy-linclust` would be best to cluster such a distribution of sequences at 99% identity?. Thanks for your time.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/351#issuecomment-706843430
https://github.com/soedinglab/MMseqs2/issues/351#issuecomment-706849886:373,Safety,avoid,avoids,373,"My assumption is that the long sequences dominates the run time. Linclust was built for short sequences < 100kb and is slow when you try to align genomes against each other. . One trick that might speed up the process would be to use bi-directional coverage `--cov-mode 0`. This coverage mode rejects all sequences that cannot fulfil the coverage criteria, which hopefully avoids most of the long running alignments.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/351#issuecomment-706849886
https://github.com/soedinglab/MMseqs2/issues/352#issuecomment-696712051:23,Availability,down,downloads,23,"It looks like multiple downloads have failed before you the MMseqs2 calls. I would recommend downloading the files again (taxdump and also recreating the NR fasta) and try again. However, I am not sure how well this procedure will work at all since I think something in the the blast database format has changed and the `blastdbcmd` might run into issues. The NR is now also available in our `databases` workflow you can let MMseqs2 download the NR and create all the associated taxonomy files. The latest git MMseqs2 also has a a faster version with a few more kinks ironed out (you can download binaries at https://mmseqs.com/latest). The call for that would be:; ```; mmseqs databases NR nrdb tmp; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/352#issuecomment-696712051
https://github.com/soedinglab/MMseqs2/issues/352#issuecomment-696712051:93,Availability,down,downloading,93,"It looks like multiple downloads have failed before you the MMseqs2 calls. I would recommend downloading the files again (taxdump and also recreating the NR fasta) and try again. However, I am not sure how well this procedure will work at all since I think something in the the blast database format has changed and the `blastdbcmd` might run into issues. The NR is now also available in our `databases` workflow you can let MMseqs2 download the NR and create all the associated taxonomy files. The latest git MMseqs2 also has a a faster version with a few more kinks ironed out (you can download binaries at https://mmseqs.com/latest). The call for that would be:; ```; mmseqs databases NR nrdb tmp; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/352#issuecomment-696712051
https://github.com/soedinglab/MMseqs2/issues/352#issuecomment-696712051:375,Availability,avail,available,375,"It looks like multiple downloads have failed before you the MMseqs2 calls. I would recommend downloading the files again (taxdump and also recreating the NR fasta) and try again. However, I am not sure how well this procedure will work at all since I think something in the the blast database format has changed and the `blastdbcmd` might run into issues. The NR is now also available in our `databases` workflow you can let MMseqs2 download the NR and create all the associated taxonomy files. The latest git MMseqs2 also has a a faster version with a few more kinks ironed out (you can download binaries at https://mmseqs.com/latest). The call for that would be:; ```; mmseqs databases NR nrdb tmp; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/352#issuecomment-696712051
https://github.com/soedinglab/MMseqs2/issues/352#issuecomment-696712051:433,Availability,down,download,433,"It looks like multiple downloads have failed before you the MMseqs2 calls. I would recommend downloading the files again (taxdump and also recreating the NR fasta) and try again. However, I am not sure how well this procedure will work at all since I think something in the the blast database format has changed and the `blastdbcmd` might run into issues. The NR is now also available in our `databases` workflow you can let MMseqs2 download the NR and create all the associated taxonomy files. The latest git MMseqs2 also has a a faster version with a few more kinks ironed out (you can download binaries at https://mmseqs.com/latest). The call for that would be:; ```; mmseqs databases NR nrdb tmp; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/352#issuecomment-696712051
https://github.com/soedinglab/MMseqs2/issues/352#issuecomment-696712051:588,Availability,down,download,588,"It looks like multiple downloads have failed before you the MMseqs2 calls. I would recommend downloading the files again (taxdump and also recreating the NR fasta) and try again. However, I am not sure how well this procedure will work at all since I think something in the the blast database format has changed and the `blastdbcmd` might run into issues. The NR is now also available in our `databases` workflow you can let MMseqs2 download the NR and create all the associated taxonomy files. The latest git MMseqs2 also has a a faster version with a few more kinks ironed out (you can download binaries at https://mmseqs.com/latest). The call for that would be:; ```; mmseqs databases NR nrdb tmp; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/352#issuecomment-696712051
https://github.com/soedinglab/MMseqs2/issues/355#issuecomment-704308206:38,Deployability,release,release,38,`addtaxonomy` is broken in the latest release. We fixed the issue in 333cc350af97e735d8321bbe7a68d8a1bf870e7d. ; You can compile from git or use the latest statically compiled binaries from mmseqs.com/latest/,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/355#issuecomment-704308206
https://github.com/soedinglab/MMseqs2/issues/356#issuecomment-705441447:208,Usability,simpl,simple,208,"Are you using the `easy-search`? You can use the `--format-output` parameter to print any/all of the following fields `qseq,tseq,qheader,theader,qaln,Talk `. Then you can reformat the resulting tsv with some simple script into a fasta file.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/356#issuecomment-705441447
https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-706941832:112,Performance,perform,performs,112,"@TsviyaOlender Could you please provide a minimal example that we can reproduce this issue? ; `--search-type 2` performs a translated search, which is similar to blastx. To just perform a amino acid search use `--search-type 1`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-706941832
https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-706941832:178,Performance,perform,perform,178,"@TsviyaOlender Could you please provide a minimal example that we can reproduce this issue? ; `--search-type 2` performs a translated search, which is similar to blastx. To just perform a amino acid search use `--search-type 1`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-706941832
https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-707026678:723,Availability,mask,mask,723,"Hi; Kindly see the following example:; I am attaching the fasta files, the sequences contains ‘*’ stop codons as some of the sequences are pseudogenes, however the similarity that mmseqs misses is with intact genes.; The sequence cand_290 (file: macaque_oct20_input.fa.F) shares 90% sequence identity over 290 aa with OR51V1B_dog (file: all_ORs_pep_12Oct15.fa.F).; MMseqs didn’t find this similarity. I have tried several parameters. Commands:; mmseqs createdb macaque_oct20_input.fa.F macaqueDB; mmseqs createindex macaqueDB tmp; mmseqs createdb all_ORs_pep_12Oct15.fa.F all_ORsDB; mmseqs createindex all_ORsDB tmp; mmseqs search macaqueDB ../macaque_oct20/libs/all_ORs_pep_12Oct15.DB resultDB \; tmp --alignment-mode 3 --mask 0 --comp-bias-corr 0; mmseqs convertalis macaqueDB hordeDB resultDB resultFinal.txt. Result:; [lvzvia@molgen3 test]$ grep 'cand_290' finalResult.txt |grep '51V'; cand_290.fasta OR51V25_horse 0.884 309 35 0 2 311 3 312 6.26E-185 567; cand_290.fasta OR51V1_chimp 0.768 310 71 0 2 312 10 320 1.76E-159 495; cand_290.fasta OR51V1_dog 0.761 309 73 0 1 310 1 310 1.92E-159 494; cand_290.fasta OR51V22_cow 0.763 307 72 0 4 311 5 312 5.68E-159 494; cand_290.fasta OR51V28_horse 0.756 306 74 0 3 309 4 310 2.69E-158 491; cand_290.fasta OR51V21_dog 0.761 309 73 0 1 309 1 310 1.47E-156 486; cand_290.fasta OR51V19P_dog 0.750 303 75 0 9 312 10 313 5.17E-155 482; cand_290.fasta OR51V1_orang 0.750 311 77 0 1 312 7 318 1.09E-153 479; cand_290.fasta OR51V1D_cow 0.740 310 80 0 1 311 2 312 3.54E-153 477; cand_290.fasta OR51V30P_horse 0.743 311 79 0 1 311 3 314 4.03E-153 476; cand_290.fasta OR51V23_orang 0.750 303 75 0 9 312 10 313 1.43E-152 475. Blast Results:; [lvzvia@molgen3 test]$ grep 'cand_290' ../macaque_test/blast/macaque_test_vs_all.txt|grep '51V'; cand_290.fasta OR51V1B_dog 90.00 310 31 0 3 312 4 313 0.0 562; cand_290.fasta OR51V1B_cow 88.10 311 37 0 2 312 3 313 0.0 558; cand_290.fasta OR51V25_horse 88.39 310 36 0 2 311 3 312 0.0 556; cand_290.fasta OR51V27_horse 80.81",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-707026678
https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-707026678:3140,Performance,perform,performs,3140,"horse 0.743 311 79 0 1 311 3 314 4.03E-153 476; cand_290.fasta OR51V23_orang 0.750 303 75 0 9 312 10 313 1.43E-152 475. Blast Results:; [lvzvia@molgen3 test]$ grep 'cand_290' ../macaque_test/blast/macaque_test_vs_all.txt|grep '51V'; cand_290.fasta OR51V1B_dog 90.00 310 31 0 3 312 4 313 0.0 562; cand_290.fasta OR51V1B_cow 88.10 311 37 0 2 312 3 313 0.0 558; cand_290.fasta OR51V25_horse 88.39 310 36 0 2 311 3 312 0.0 556; cand_290.fasta OR51V27_horse 80.81 297 57 0 15 311 18 314 2e-176 488; cand_290.fasta OR51V20_dog 74.84 306 77 0 7 312 8 313 4e-172 478; cand_290.fasta OR51V22_cow 76.92 299 69 0 13 311 14 312 1e-171 476; cand_290.fasta OR51V21_dog 76.14 306 73 0 4 309 5 310 1e-171 476; cand_290.fasta OR51V1_cow 77.23 303 69 0 9 311 10 312 2e-171 475; cand_290.fasta OR51V1_horse 77.89 303 67 0 9 311 10 312 3e-171 475; cand_290.fasta OR51V19P_dog 74.51 306 78 0 7 312 8 313 3e-169 470; cand_290.fasta OR51V18P_dog 74.51 306 78 0 7 312 8 313 3e-169 470; cand_290.fasta OR51V1_chimp 76.85 311 72 0 2 312 10 320 2e-167 466; cand_290.fasta OR51V1_orang 75.00 312 78 0 1 312 7 318 5e-167 465; cand_290.fasta OR51V22_dog 78.79 297 63 0 15 311 16 312 9e-167 464. From: Martin Steinegger <notifications@github.com>; Sent: יום ב 12 אוקטובר 2020 10:46; To: soedinglab/MMseqs2 <MMseqs2@noreply.github.com>; Cc: Tsviya Olender <tsviya.olender@weizmann.ac.il>; Mention <mention@noreply.github.com>; Subject: Re: [soedinglab/MMseqs2] mmseqs vs blastp (#357). @TsviyaOlender<https://github.com/TsviyaOlender> Could you please provide a minimal example that we can reproduce this issue?; --search-type 2 performs a translated search, which is similar to blastx. To just perform a amino acid search use --search-type 1. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-706941832>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ADIHHAXFIMDTZHVYBW4U6O3SKKX2PANCNFSM4SIM43YQ>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-707026678
https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-707026678:3206,Performance,perform,perform,3206,"horse 0.743 311 79 0 1 311 3 314 4.03E-153 476; cand_290.fasta OR51V23_orang 0.750 303 75 0 9 312 10 313 1.43E-152 475. Blast Results:; [lvzvia@molgen3 test]$ grep 'cand_290' ../macaque_test/blast/macaque_test_vs_all.txt|grep '51V'; cand_290.fasta OR51V1B_dog 90.00 310 31 0 3 312 4 313 0.0 562; cand_290.fasta OR51V1B_cow 88.10 311 37 0 2 312 3 313 0.0 558; cand_290.fasta OR51V25_horse 88.39 310 36 0 2 311 3 312 0.0 556; cand_290.fasta OR51V27_horse 80.81 297 57 0 15 311 18 314 2e-176 488; cand_290.fasta OR51V20_dog 74.84 306 77 0 7 312 8 313 4e-172 478; cand_290.fasta OR51V22_cow 76.92 299 69 0 13 311 14 312 1e-171 476; cand_290.fasta OR51V21_dog 76.14 306 73 0 4 309 5 310 1e-171 476; cand_290.fasta OR51V1_cow 77.23 303 69 0 9 311 10 312 2e-171 475; cand_290.fasta OR51V1_horse 77.89 303 67 0 9 311 10 312 3e-171 475; cand_290.fasta OR51V19P_dog 74.51 306 78 0 7 312 8 313 3e-169 470; cand_290.fasta OR51V18P_dog 74.51 306 78 0 7 312 8 313 3e-169 470; cand_290.fasta OR51V1_chimp 76.85 311 72 0 2 312 10 320 2e-167 466; cand_290.fasta OR51V1_orang 75.00 312 78 0 1 312 7 318 5e-167 465; cand_290.fasta OR51V22_dog 78.79 297 63 0 15 311 16 312 9e-167 464. From: Martin Steinegger <notifications@github.com>; Sent: יום ב 12 אוקטובר 2020 10:46; To: soedinglab/MMseqs2 <MMseqs2@noreply.github.com>; Cc: Tsviya Olender <tsviya.olender@weizmann.ac.il>; Mention <mention@noreply.github.com>; Subject: Re: [soedinglab/MMseqs2] mmseqs vs blastp (#357). @TsviyaOlender<https://github.com/TsviyaOlender> Could you please provide a minimal example that we can reproduce this issue?; --search-type 2 performs a translated search, which is similar to blastx. To just perform a amino acid search use --search-type 1. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-706941832>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ADIHHAXFIMDTZHVYBW4U6O3SKKX2PANCNFSM4SIM43YQ>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-707026678
https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-707026678:838,Testability,test,test,838,"Hi; Kindly see the following example:; I am attaching the fasta files, the sequences contains ‘*’ stop codons as some of the sequences are pseudogenes, however the similarity that mmseqs misses is with intact genes.; The sequence cand_290 (file: macaque_oct20_input.fa.F) shares 90% sequence identity over 290 aa with OR51V1B_dog (file: all_ORs_pep_12Oct15.fa.F).; MMseqs didn’t find this similarity. I have tried several parameters. Commands:; mmseqs createdb macaque_oct20_input.fa.F macaqueDB; mmseqs createindex macaqueDB tmp; mmseqs createdb all_ORs_pep_12Oct15.fa.F all_ORsDB; mmseqs createindex all_ORsDB tmp; mmseqs search macaqueDB ../macaque_oct20/libs/all_ORs_pep_12Oct15.DB resultDB \; tmp --alignment-mode 3 --mask 0 --comp-bias-corr 0; mmseqs convertalis macaqueDB hordeDB resultDB resultFinal.txt. Result:; [lvzvia@molgen3 test]$ grep 'cand_290' finalResult.txt |grep '51V'; cand_290.fasta OR51V25_horse 0.884 309 35 0 2 311 3 312 6.26E-185 567; cand_290.fasta OR51V1_chimp 0.768 310 71 0 2 312 10 320 1.76E-159 495; cand_290.fasta OR51V1_dog 0.761 309 73 0 1 310 1 310 1.92E-159 494; cand_290.fasta OR51V22_cow 0.763 307 72 0 4 311 5 312 5.68E-159 494; cand_290.fasta OR51V28_horse 0.756 306 74 0 3 309 4 310 2.69E-158 491; cand_290.fasta OR51V21_dog 0.761 309 73 0 1 309 1 310 1.47E-156 486; cand_290.fasta OR51V19P_dog 0.750 303 75 0 9 312 10 313 5.17E-155 482; cand_290.fasta OR51V1_orang 0.750 311 77 0 1 312 7 318 1.09E-153 479; cand_290.fasta OR51V1D_cow 0.740 310 80 0 1 311 2 312 3.54E-153 477; cand_290.fasta OR51V30P_horse 0.743 311 79 0 1 311 3 314 4.03E-153 476; cand_290.fasta OR51V23_orang 0.750 303 75 0 9 312 10 313 1.43E-152 475. Blast Results:; [lvzvia@molgen3 test]$ grep 'cand_290' ../macaque_test/blast/macaque_test_vs_all.txt|grep '51V'; cand_290.fasta OR51V1B_dog 90.00 310 31 0 3 312 4 313 0.0 562; cand_290.fasta OR51V1B_cow 88.10 311 37 0 2 312 3 313 0.0 558; cand_290.fasta OR51V25_horse 88.39 310 36 0 2 311 3 312 0.0 556; cand_290.fasta OR51V27_horse 80.81",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-707026678
https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-707026678:1695,Testability,test,test,1695,ltDB \; tmp --alignment-mode 3 --mask 0 --comp-bias-corr 0; mmseqs convertalis macaqueDB hordeDB resultDB resultFinal.txt. Result:; [lvzvia@molgen3 test]$ grep 'cand_290' finalResult.txt |grep '51V'; cand_290.fasta OR51V25_horse 0.884 309 35 0 2 311 3 312 6.26E-185 567; cand_290.fasta OR51V1_chimp 0.768 310 71 0 2 312 10 320 1.76E-159 495; cand_290.fasta OR51V1_dog 0.761 309 73 0 1 310 1 310 1.92E-159 494; cand_290.fasta OR51V22_cow 0.763 307 72 0 4 311 5 312 5.68E-159 494; cand_290.fasta OR51V28_horse 0.756 306 74 0 3 309 4 310 2.69E-158 491; cand_290.fasta OR51V21_dog 0.761 309 73 0 1 309 1 310 1.47E-156 486; cand_290.fasta OR51V19P_dog 0.750 303 75 0 9 312 10 313 5.17E-155 482; cand_290.fasta OR51V1_orang 0.750 311 77 0 1 312 7 318 1.09E-153 479; cand_290.fasta OR51V1D_cow 0.740 310 80 0 1 311 2 312 3.54E-153 477; cand_290.fasta OR51V30P_horse 0.743 311 79 0 1 311 3 314 4.03E-153 476; cand_290.fasta OR51V23_orang 0.750 303 75 0 9 312 10 313 1.43E-152 475. Blast Results:; [lvzvia@molgen3 test]$ grep 'cand_290' ../macaque_test/blast/macaque_test_vs_all.txt|grep '51V'; cand_290.fasta OR51V1B_dog 90.00 310 31 0 3 312 4 313 0.0 562; cand_290.fasta OR51V1B_cow 88.10 311 37 0 2 312 3 313 0.0 558; cand_290.fasta OR51V25_horse 88.39 310 36 0 2 311 3 312 0.0 556; cand_290.fasta OR51V27_horse 80.81 297 57 0 15 311 18 314 2e-176 488; cand_290.fasta OR51V20_dog 74.84 306 77 0 7 312 8 313 4e-172 478; cand_290.fasta OR51V22_cow 76.92 299 69 0 13 311 14 312 1e-171 476; cand_290.fasta OR51V21_dog 76.14 306 73 0 4 309 5 310 1e-171 476; cand_290.fasta OR51V1_cow 77.23 303 69 0 9 311 10 312 2e-171 475; cand_290.fasta OR51V1_horse 77.89 303 67 0 9 311 10 312 3e-171 475; cand_290.fasta OR51V19P_dog 74.51 306 78 0 7 312 8 313 3e-169 470; cand_290.fasta OR51V18P_dog 74.51 306 78 0 7 312 8 313 3e-169 470; cand_290.fasta OR51V1_chimp 76.85 311 72 0 2 312 10 320 2e-167 466; cand_290.fasta OR51V1_orang 75.00 312 78 0 1 312 7 318 5e-167 465; cand_290.fasta OR51V22_dog 78.79 297 63 0 15 311 16,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-707026678
https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-707829562:183,Deployability,continuous,continuous,183,"Can you use the `MMSEQS_ARCH` cmake flag to fix the mips build? I could add a flag like HAVE_ARM8 for MIPS. However, I am not sure we want to add code that is not regularly tested by continuous integration.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-707829562
https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-707829562:194,Deployability,integrat,integration,194,"Can you use the `MMSEQS_ARCH` cmake flag to fix the mips build? I could add a flag like HAVE_ARM8 for MIPS. However, I am not sure we want to add code that is not regularly tested by continuous integration.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-707829562
https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-707829562:194,Integrability,integrat,integration,194,"Can you use the `MMSEQS_ARCH` cmake flag to fix the mips build? I could add a flag like HAVE_ARM8 for MIPS. However, I am not sure we want to add code that is not regularly tested by continuous integration.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-707829562
https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-707829562:173,Testability,test,tested,173,"Can you use the `MMSEQS_ARCH` cmake flag to fix the mips build? I could add a flag like HAVE_ARM8 for MIPS. However, I am not sure we want to add code that is not regularly tested by continuous integration.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-707829562
https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-762352047:47,Availability,failure,failure,47,Is this still relevant? There don't seem to be failure on MIPS anymore. The two remaining failures (on hurd and sparc) should be covered by this commit https://github.com/soedinglab/MMseqs2/commit/1f302134aa1c6c7c4e2b9da272fd26af33860780. Actually the sparc failure probably won't be covered as Debian is using `-DNATIVE_ARCH=0`. I think you have to add a `-DDISABLE_IPS4O=1` for the sparc failure.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-762352047
https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-762352047:90,Availability,failure,failures,90,Is this still relevant? There don't seem to be failure on MIPS anymore. The two remaining failures (on hurd and sparc) should be covered by this commit https://github.com/soedinglab/MMseqs2/commit/1f302134aa1c6c7c4e2b9da272fd26af33860780. Actually the sparc failure probably won't be covered as Debian is using `-DNATIVE_ARCH=0`. I think you have to add a `-DDISABLE_IPS4O=1` for the sparc failure.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-762352047
https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-762352047:258,Availability,failure,failure,258,Is this still relevant? There don't seem to be failure on MIPS anymore. The two remaining failures (on hurd and sparc) should be covered by this commit https://github.com/soedinglab/MMseqs2/commit/1f302134aa1c6c7c4e2b9da272fd26af33860780. Actually the sparc failure probably won't be covered as Debian is using `-DNATIVE_ARCH=0`. I think you have to add a `-DDISABLE_IPS4O=1` for the sparc failure.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-762352047
https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-762352047:390,Availability,failure,failure,390,Is this still relevant? There don't seem to be failure on MIPS anymore. The two remaining failures (on hurd and sparc) should be covered by this commit https://github.com/soedinglab/MMseqs2/commit/1f302134aa1c6c7c4e2b9da272fd26af33860780. Actually the sparc failure probably won't be covered as Debian is using `-DNATIVE_ARCH=0`. I think you have to add a `-DDISABLE_IPS4O=1` for the sparc failure.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-762352047
https://github.com/soedinglab/MMseqs2/pull/359#issuecomment-706567191:92,Testability,test,tests,92,@martin-steinegger You are welcome; they were found by the automated Debian package quality tests,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/359#issuecomment-706567191
https://github.com/soedinglab/MMseqs2/issues/360#issuecomment-706502242:18,Testability,test,tested,18,"Hi Milot,. I just tested it, and it works nicely. . Thanks a lot!!. Stijn",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/360#issuecomment-706502242
https://github.com/soedinglab/MMseqs2/issues/362#issuecomment-709046082:70,Deployability,update,update,70,I think MMseqs2 12 should now deal with this better. Could you please update? We resolved many issues with cluster updating in the last release.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/362#issuecomment-709046082
https://github.com/soedinglab/MMseqs2/issues/362#issuecomment-709046082:136,Deployability,release,release,136,I think MMseqs2 12 should now deal with this better. Could you please update? We resolved many issues with cluster updating in the last release.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/362#issuecomment-709046082
https://github.com/soedinglab/MMseqs2/issues/362#issuecomment-734828336:213,Availability,down,down,213,"Currently still no, however I just added an environment variable to prohibit MMseqs2 to create split databases. ; If you `export MMSEQS_FORCE_MERGE=1` split databases will not be produced anymore. This might slow down some intermediate steps somewhat though. I might also build a module to merge databases when I have time.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/362#issuecomment-734828336
https://github.com/soedinglab/MMseqs2/issues/362#issuecomment-734828336:56,Modifiability,variab,variable,56,"Currently still no, however I just added an environment variable to prohibit MMseqs2 to create split databases. ; If you `export MMSEQS_FORCE_MERGE=1` split databases will not be produced anymore. This might slow down some intermediate steps somewhat though. I might also build a module to merge databases when I have time.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/362#issuecomment-734828336
https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673:23,Availability,error,error,23,"Hello,; I get the same error when trying the clustering of DNA sequences extracted from prokka annotation (.ffn). the command is : . $ mmseqs easy-cluster pacbio_assembly_protein_DNA_dereplicated.ffn clusterPacbio temp --min-seq-id 0.9. The error messages are after this step : ; ""; [=================================================================] 100.00% 245.49K 0s 110ms ; Add missing connections; [=================================================================] 100.00% 245.49K 0s 7ms . Time for read in: 0h 0m 0s 279ms; there must be an error: 138172 deleted from 117856 that now is empty, but not assigned to a cluster; there must be an error: 139364 deleted from 144033 that now is empty, but not assigned to a cluster; there must be an error: 119199 deleted from 119499 that now is empty, but not assigned to a cluster; there must be an error: 119078 deleted from 137716 that now is empty, but not assigned to a cluster; there must be an error: 120853 deleted from 137082 that now is empty, but not assigned to a cluster; there must be an error: 17414 deleted from 150027 that now is empty, but not assigned to a cluster; there must be an error: 119826 deleted from 117153 that now is empty, but not assigned to a cluster; there must be an error: 117154 deleted from 119723 that now is empty, but not assigned to a cluster; "". and before Clestering step 1. Those these errors affects the quality of the clustering ? . Thanks for your time. Aline. MMseqs Version: 5b03cdff7a91206bfd5db82b5b2f23bd6c8f0813. Complete log : [log_pacbio_error.txt](https://github.com/soedinglab/MMseqs2/files/5829621/log_pacbio_error.txt). The compressed 'pacbio_assembly_protein_DNA_dereplicated.ffn' input file can be found here https://enacshare.epfl.ch/dqTYpbvUuJiCnsktFWyfN",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673
https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673:241,Availability,error,error,241,"Hello,; I get the same error when trying the clustering of DNA sequences extracted from prokka annotation (.ffn). the command is : . $ mmseqs easy-cluster pacbio_assembly_protein_DNA_dereplicated.ffn clusterPacbio temp --min-seq-id 0.9. The error messages are after this step : ; ""; [=================================================================] 100.00% 245.49K 0s 110ms ; Add missing connections; [=================================================================] 100.00% 245.49K 0s 7ms . Time for read in: 0h 0m 0s 279ms; there must be an error: 138172 deleted from 117856 that now is empty, but not assigned to a cluster; there must be an error: 139364 deleted from 144033 that now is empty, but not assigned to a cluster; there must be an error: 119199 deleted from 119499 that now is empty, but not assigned to a cluster; there must be an error: 119078 deleted from 137716 that now is empty, but not assigned to a cluster; there must be an error: 120853 deleted from 137082 that now is empty, but not assigned to a cluster; there must be an error: 17414 deleted from 150027 that now is empty, but not assigned to a cluster; there must be an error: 119826 deleted from 117153 that now is empty, but not assigned to a cluster; there must be an error: 117154 deleted from 119723 that now is empty, but not assigned to a cluster; "". and before Clestering step 1. Those these errors affects the quality of the clustering ? . Thanks for your time. Aline. MMseqs Version: 5b03cdff7a91206bfd5db82b5b2f23bd6c8f0813. Complete log : [log_pacbio_error.txt](https://github.com/soedinglab/MMseqs2/files/5829621/log_pacbio_error.txt). The compressed 'pacbio_assembly_protein_DNA_dereplicated.ffn' input file can be found here https://enacshare.epfl.ch/dqTYpbvUuJiCnsktFWyfN",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673
https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673:547,Availability,error,error,547,"Hello,; I get the same error when trying the clustering of DNA sequences extracted from prokka annotation (.ffn). the command is : . $ mmseqs easy-cluster pacbio_assembly_protein_DNA_dereplicated.ffn clusterPacbio temp --min-seq-id 0.9. The error messages are after this step : ; ""; [=================================================================] 100.00% 245.49K 0s 110ms ; Add missing connections; [=================================================================] 100.00% 245.49K 0s 7ms . Time for read in: 0h 0m 0s 279ms; there must be an error: 138172 deleted from 117856 that now is empty, but not assigned to a cluster; there must be an error: 139364 deleted from 144033 that now is empty, but not assigned to a cluster; there must be an error: 119199 deleted from 119499 that now is empty, but not assigned to a cluster; there must be an error: 119078 deleted from 137716 that now is empty, but not assigned to a cluster; there must be an error: 120853 deleted from 137082 that now is empty, but not assigned to a cluster; there must be an error: 17414 deleted from 150027 that now is empty, but not assigned to a cluster; there must be an error: 119826 deleted from 117153 that now is empty, but not assigned to a cluster; there must be an error: 117154 deleted from 119723 that now is empty, but not assigned to a cluster; "". and before Clestering step 1. Those these errors affects the quality of the clustering ? . Thanks for your time. Aline. MMseqs Version: 5b03cdff7a91206bfd5db82b5b2f23bd6c8f0813. Complete log : [log_pacbio_error.txt](https://github.com/soedinglab/MMseqs2/files/5829621/log_pacbio_error.txt). The compressed 'pacbio_assembly_protein_DNA_dereplicated.ffn' input file can be found here https://enacshare.epfl.ch/dqTYpbvUuJiCnsktFWyfN",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673
https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673:648,Availability,error,error,648,"Hello,; I get the same error when trying the clustering of DNA sequences extracted from prokka annotation (.ffn). the command is : . $ mmseqs easy-cluster pacbio_assembly_protein_DNA_dereplicated.ffn clusterPacbio temp --min-seq-id 0.9. The error messages are after this step : ; ""; [=================================================================] 100.00% 245.49K 0s 110ms ; Add missing connections; [=================================================================] 100.00% 245.49K 0s 7ms . Time for read in: 0h 0m 0s 279ms; there must be an error: 138172 deleted from 117856 that now is empty, but not assigned to a cluster; there must be an error: 139364 deleted from 144033 that now is empty, but not assigned to a cluster; there must be an error: 119199 deleted from 119499 that now is empty, but not assigned to a cluster; there must be an error: 119078 deleted from 137716 that now is empty, but not assigned to a cluster; there must be an error: 120853 deleted from 137082 that now is empty, but not assigned to a cluster; there must be an error: 17414 deleted from 150027 that now is empty, but not assigned to a cluster; there must be an error: 119826 deleted from 117153 that now is empty, but not assigned to a cluster; there must be an error: 117154 deleted from 119723 that now is empty, but not assigned to a cluster; "". and before Clestering step 1. Those these errors affects the quality of the clustering ? . Thanks for your time. Aline. MMseqs Version: 5b03cdff7a91206bfd5db82b5b2f23bd6c8f0813. Complete log : [log_pacbio_error.txt](https://github.com/soedinglab/MMseqs2/files/5829621/log_pacbio_error.txt). The compressed 'pacbio_assembly_protein_DNA_dereplicated.ffn' input file can be found here https://enacshare.epfl.ch/dqTYpbvUuJiCnsktFWyfN",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673
https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673:749,Availability,error,error,749,"Hello,; I get the same error when trying the clustering of DNA sequences extracted from prokka annotation (.ffn). the command is : . $ mmseqs easy-cluster pacbio_assembly_protein_DNA_dereplicated.ffn clusterPacbio temp --min-seq-id 0.9. The error messages are after this step : ; ""; [=================================================================] 100.00% 245.49K 0s 110ms ; Add missing connections; [=================================================================] 100.00% 245.49K 0s 7ms . Time for read in: 0h 0m 0s 279ms; there must be an error: 138172 deleted from 117856 that now is empty, but not assigned to a cluster; there must be an error: 139364 deleted from 144033 that now is empty, but not assigned to a cluster; there must be an error: 119199 deleted from 119499 that now is empty, but not assigned to a cluster; there must be an error: 119078 deleted from 137716 that now is empty, but not assigned to a cluster; there must be an error: 120853 deleted from 137082 that now is empty, but not assigned to a cluster; there must be an error: 17414 deleted from 150027 that now is empty, but not assigned to a cluster; there must be an error: 119826 deleted from 117153 that now is empty, but not assigned to a cluster; there must be an error: 117154 deleted from 119723 that now is empty, but not assigned to a cluster; "". and before Clestering step 1. Those these errors affects the quality of the clustering ? . Thanks for your time. Aline. MMseqs Version: 5b03cdff7a91206bfd5db82b5b2f23bd6c8f0813. Complete log : [log_pacbio_error.txt](https://github.com/soedinglab/MMseqs2/files/5829621/log_pacbio_error.txt). The compressed 'pacbio_assembly_protein_DNA_dereplicated.ffn' input file can be found here https://enacshare.epfl.ch/dqTYpbvUuJiCnsktFWyfN",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673
https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673:850,Availability,error,error,850,"Hello,; I get the same error when trying the clustering of DNA sequences extracted from prokka annotation (.ffn). the command is : . $ mmseqs easy-cluster pacbio_assembly_protein_DNA_dereplicated.ffn clusterPacbio temp --min-seq-id 0.9. The error messages are after this step : ; ""; [=================================================================] 100.00% 245.49K 0s 110ms ; Add missing connections; [=================================================================] 100.00% 245.49K 0s 7ms . Time for read in: 0h 0m 0s 279ms; there must be an error: 138172 deleted from 117856 that now is empty, but not assigned to a cluster; there must be an error: 139364 deleted from 144033 that now is empty, but not assigned to a cluster; there must be an error: 119199 deleted from 119499 that now is empty, but not assigned to a cluster; there must be an error: 119078 deleted from 137716 that now is empty, but not assigned to a cluster; there must be an error: 120853 deleted from 137082 that now is empty, but not assigned to a cluster; there must be an error: 17414 deleted from 150027 that now is empty, but not assigned to a cluster; there must be an error: 119826 deleted from 117153 that now is empty, but not assigned to a cluster; there must be an error: 117154 deleted from 119723 that now is empty, but not assigned to a cluster; "". and before Clestering step 1. Those these errors affects the quality of the clustering ? . Thanks for your time. Aline. MMseqs Version: 5b03cdff7a91206bfd5db82b5b2f23bd6c8f0813. Complete log : [log_pacbio_error.txt](https://github.com/soedinglab/MMseqs2/files/5829621/log_pacbio_error.txt). The compressed 'pacbio_assembly_protein_DNA_dereplicated.ffn' input file can be found here https://enacshare.epfl.ch/dqTYpbvUuJiCnsktFWyfN",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673
https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673:951,Availability,error,error,951,"Hello,; I get the same error when trying the clustering of DNA sequences extracted from prokka annotation (.ffn). the command is : . $ mmseqs easy-cluster pacbio_assembly_protein_DNA_dereplicated.ffn clusterPacbio temp --min-seq-id 0.9. The error messages are after this step : ; ""; [=================================================================] 100.00% 245.49K 0s 110ms ; Add missing connections; [=================================================================] 100.00% 245.49K 0s 7ms . Time for read in: 0h 0m 0s 279ms; there must be an error: 138172 deleted from 117856 that now is empty, but not assigned to a cluster; there must be an error: 139364 deleted from 144033 that now is empty, but not assigned to a cluster; there must be an error: 119199 deleted from 119499 that now is empty, but not assigned to a cluster; there must be an error: 119078 deleted from 137716 that now is empty, but not assigned to a cluster; there must be an error: 120853 deleted from 137082 that now is empty, but not assigned to a cluster; there must be an error: 17414 deleted from 150027 that now is empty, but not assigned to a cluster; there must be an error: 119826 deleted from 117153 that now is empty, but not assigned to a cluster; there must be an error: 117154 deleted from 119723 that now is empty, but not assigned to a cluster; "". and before Clestering step 1. Those these errors affects the quality of the clustering ? . Thanks for your time. Aline. MMseqs Version: 5b03cdff7a91206bfd5db82b5b2f23bd6c8f0813. Complete log : [log_pacbio_error.txt](https://github.com/soedinglab/MMseqs2/files/5829621/log_pacbio_error.txt). The compressed 'pacbio_assembly_protein_DNA_dereplicated.ffn' input file can be found here https://enacshare.epfl.ch/dqTYpbvUuJiCnsktFWyfN",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673
https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673:1052,Availability,error,error,1052,"Hello,; I get the same error when trying the clustering of DNA sequences extracted from prokka annotation (.ffn). the command is : . $ mmseqs easy-cluster pacbio_assembly_protein_DNA_dereplicated.ffn clusterPacbio temp --min-seq-id 0.9. The error messages are after this step : ; ""; [=================================================================] 100.00% 245.49K 0s 110ms ; Add missing connections; [=================================================================] 100.00% 245.49K 0s 7ms . Time for read in: 0h 0m 0s 279ms; there must be an error: 138172 deleted from 117856 that now is empty, but not assigned to a cluster; there must be an error: 139364 deleted from 144033 that now is empty, but not assigned to a cluster; there must be an error: 119199 deleted from 119499 that now is empty, but not assigned to a cluster; there must be an error: 119078 deleted from 137716 that now is empty, but not assigned to a cluster; there must be an error: 120853 deleted from 137082 that now is empty, but not assigned to a cluster; there must be an error: 17414 deleted from 150027 that now is empty, but not assigned to a cluster; there must be an error: 119826 deleted from 117153 that now is empty, but not assigned to a cluster; there must be an error: 117154 deleted from 119723 that now is empty, but not assigned to a cluster; "". and before Clestering step 1. Those these errors affects the quality of the clustering ? . Thanks for your time. Aline. MMseqs Version: 5b03cdff7a91206bfd5db82b5b2f23bd6c8f0813. Complete log : [log_pacbio_error.txt](https://github.com/soedinglab/MMseqs2/files/5829621/log_pacbio_error.txt). The compressed 'pacbio_assembly_protein_DNA_dereplicated.ffn' input file can be found here https://enacshare.epfl.ch/dqTYpbvUuJiCnsktFWyfN",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673
https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673:1152,Availability,error,error,1152,"Hello,; I get the same error when trying the clustering of DNA sequences extracted from prokka annotation (.ffn). the command is : . $ mmseqs easy-cluster pacbio_assembly_protein_DNA_dereplicated.ffn clusterPacbio temp --min-seq-id 0.9. The error messages are after this step : ; ""; [=================================================================] 100.00% 245.49K 0s 110ms ; Add missing connections; [=================================================================] 100.00% 245.49K 0s 7ms . Time for read in: 0h 0m 0s 279ms; there must be an error: 138172 deleted from 117856 that now is empty, but not assigned to a cluster; there must be an error: 139364 deleted from 144033 that now is empty, but not assigned to a cluster; there must be an error: 119199 deleted from 119499 that now is empty, but not assigned to a cluster; there must be an error: 119078 deleted from 137716 that now is empty, but not assigned to a cluster; there must be an error: 120853 deleted from 137082 that now is empty, but not assigned to a cluster; there must be an error: 17414 deleted from 150027 that now is empty, but not assigned to a cluster; there must be an error: 119826 deleted from 117153 that now is empty, but not assigned to a cluster; there must be an error: 117154 deleted from 119723 that now is empty, but not assigned to a cluster; "". and before Clestering step 1. Those these errors affects the quality of the clustering ? . Thanks for your time. Aline. MMseqs Version: 5b03cdff7a91206bfd5db82b5b2f23bd6c8f0813. Complete log : [log_pacbio_error.txt](https://github.com/soedinglab/MMseqs2/files/5829621/log_pacbio_error.txt). The compressed 'pacbio_assembly_protein_DNA_dereplicated.ffn' input file can be found here https://enacshare.epfl.ch/dqTYpbvUuJiCnsktFWyfN",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673
https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673:1253,Availability,error,error,1253,"Hello,; I get the same error when trying the clustering of DNA sequences extracted from prokka annotation (.ffn). the command is : . $ mmseqs easy-cluster pacbio_assembly_protein_DNA_dereplicated.ffn clusterPacbio temp --min-seq-id 0.9. The error messages are after this step : ; ""; [=================================================================] 100.00% 245.49K 0s 110ms ; Add missing connections; [=================================================================] 100.00% 245.49K 0s 7ms . Time for read in: 0h 0m 0s 279ms; there must be an error: 138172 deleted from 117856 that now is empty, but not assigned to a cluster; there must be an error: 139364 deleted from 144033 that now is empty, but not assigned to a cluster; there must be an error: 119199 deleted from 119499 that now is empty, but not assigned to a cluster; there must be an error: 119078 deleted from 137716 that now is empty, but not assigned to a cluster; there must be an error: 120853 deleted from 137082 that now is empty, but not assigned to a cluster; there must be an error: 17414 deleted from 150027 that now is empty, but not assigned to a cluster; there must be an error: 119826 deleted from 117153 that now is empty, but not assigned to a cluster; there must be an error: 117154 deleted from 119723 that now is empty, but not assigned to a cluster; "". and before Clestering step 1. Those these errors affects the quality of the clustering ? . Thanks for your time. Aline. MMseqs Version: 5b03cdff7a91206bfd5db82b5b2f23bd6c8f0813. Complete log : [log_pacbio_error.txt](https://github.com/soedinglab/MMseqs2/files/5829621/log_pacbio_error.txt). The compressed 'pacbio_assembly_protein_DNA_dereplicated.ffn' input file can be found here https://enacshare.epfl.ch/dqTYpbvUuJiCnsktFWyfN",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673
https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673:1382,Availability,error,errors,1382,"Hello,; I get the same error when trying the clustering of DNA sequences extracted from prokka annotation (.ffn). the command is : . $ mmseqs easy-cluster pacbio_assembly_protein_DNA_dereplicated.ffn clusterPacbio temp --min-seq-id 0.9. The error messages are after this step : ; ""; [=================================================================] 100.00% 245.49K 0s 110ms ; Add missing connections; [=================================================================] 100.00% 245.49K 0s 7ms . Time for read in: 0h 0m 0s 279ms; there must be an error: 138172 deleted from 117856 that now is empty, but not assigned to a cluster; there must be an error: 139364 deleted from 144033 that now is empty, but not assigned to a cluster; there must be an error: 119199 deleted from 119499 that now is empty, but not assigned to a cluster; there must be an error: 119078 deleted from 137716 that now is empty, but not assigned to a cluster; there must be an error: 120853 deleted from 137082 that now is empty, but not assigned to a cluster; there must be an error: 17414 deleted from 150027 that now is empty, but not assigned to a cluster; there must be an error: 119826 deleted from 117153 that now is empty, but not assigned to a cluster; there must be an error: 117154 deleted from 119723 that now is empty, but not assigned to a cluster; "". and before Clestering step 1. Those these errors affects the quality of the clustering ? . Thanks for your time. Aline. MMseqs Version: 5b03cdff7a91206bfd5db82b5b2f23bd6c8f0813. Complete log : [log_pacbio_error.txt](https://github.com/soedinglab/MMseqs2/files/5829621/log_pacbio_error.txt). The compressed 'pacbio_assembly_protein_DNA_dereplicated.ffn' input file can be found here https://enacshare.epfl.ch/dqTYpbvUuJiCnsktFWyfN",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673
https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673:247,Integrability,message,messages,247,"Hello,; I get the same error when trying the clustering of DNA sequences extracted from prokka annotation (.ffn). the command is : . $ mmseqs easy-cluster pacbio_assembly_protein_DNA_dereplicated.ffn clusterPacbio temp --min-seq-id 0.9. The error messages are after this step : ; ""; [=================================================================] 100.00% 245.49K 0s 110ms ; Add missing connections; [=================================================================] 100.00% 245.49K 0s 7ms . Time for read in: 0h 0m 0s 279ms; there must be an error: 138172 deleted from 117856 that now is empty, but not assigned to a cluster; there must be an error: 139364 deleted from 144033 that now is empty, but not assigned to a cluster; there must be an error: 119199 deleted from 119499 that now is empty, but not assigned to a cluster; there must be an error: 119078 deleted from 137716 that now is empty, but not assigned to a cluster; there must be an error: 120853 deleted from 137082 that now is empty, but not assigned to a cluster; there must be an error: 17414 deleted from 150027 that now is empty, but not assigned to a cluster; there must be an error: 119826 deleted from 117153 that now is empty, but not assigned to a cluster; there must be an error: 117154 deleted from 119723 that now is empty, but not assigned to a cluster; "". and before Clestering step 1. Those these errors affects the quality of the clustering ? . Thanks for your time. Aline. MMseqs Version: 5b03cdff7a91206bfd5db82b5b2f23bd6c8f0813. Complete log : [log_pacbio_error.txt](https://github.com/soedinglab/MMseqs2/files/5829621/log_pacbio_error.txt). The compressed 'pacbio_assembly_protein_DNA_dereplicated.ffn' input file can be found here https://enacshare.epfl.ch/dqTYpbvUuJiCnsktFWyfN",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673
https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673:1527,Testability,log,log,1527,"Hello,; I get the same error when trying the clustering of DNA sequences extracted from prokka annotation (.ffn). the command is : . $ mmseqs easy-cluster pacbio_assembly_protein_DNA_dereplicated.ffn clusterPacbio temp --min-seq-id 0.9. The error messages are after this step : ; ""; [=================================================================] 100.00% 245.49K 0s 110ms ; Add missing connections; [=================================================================] 100.00% 245.49K 0s 7ms . Time for read in: 0h 0m 0s 279ms; there must be an error: 138172 deleted from 117856 that now is empty, but not assigned to a cluster; there must be an error: 139364 deleted from 144033 that now is empty, but not assigned to a cluster; there must be an error: 119199 deleted from 119499 that now is empty, but not assigned to a cluster; there must be an error: 119078 deleted from 137716 that now is empty, but not assigned to a cluster; there must be an error: 120853 deleted from 137082 that now is empty, but not assigned to a cluster; there must be an error: 17414 deleted from 150027 that now is empty, but not assigned to a cluster; there must be an error: 119826 deleted from 117153 that now is empty, but not assigned to a cluster; there must be an error: 117154 deleted from 119723 that now is empty, but not assigned to a cluster; "". and before Clestering step 1. Those these errors affects the quality of the clustering ? . Thanks for your time. Aline. MMseqs Version: 5b03cdff7a91206bfd5db82b5b2f23bd6c8f0813. Complete log : [log_pacbio_error.txt](https://github.com/soedinglab/MMseqs2/files/5829621/log_pacbio_error.txt). The compressed 'pacbio_assembly_protein_DNA_dereplicated.ffn' input file can be found here https://enacshare.epfl.ch/dqTYpbvUuJiCnsktFWyfN",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673
https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-1081616830:95,Availability,down,downloaded,95,"I have similar problem when using mmseqs cluster (version 13.45111) to clustering RNA sequence downloaded from http://ftp.ebi.ac.uk/pub/databases/RNAcentral/current_release/sequences/by-database/rfam.fasta, while mmseqs linclust seems work fine... Really appreciate it if the developer could take a look ...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-1081616830
https://github.com/soedinglab/MMseqs2/issues/364#issuecomment-711474276:249,Security,validat,validator,249,Nucleotide cluster results can currently not be converted into MSAs since we miss a seeding point to start the alignment (see https://github.com/soedinglab/MMseqs2/issues/268). Using `result2dnamsa` only works for searches. We will change the input validator.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/364#issuecomment-711474276
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-712785542:102,Performance,perform,performs,102,@ShangjinTan using your parameter (90% covered at 95% sequence identity) I would assume that linclust performs just slightly worse than CD-HIT. It is very odd at that `--kmer-per-seq to 80` does produce exactly the same. ; What version of MMseqs2 do you use? What parameter do you use for CD-HIT? Could you please post the log of default linclust and the `--kmer-per-seq to 80` run?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-712785542
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-712785542:323,Testability,log,log,323,@ShangjinTan using your parameter (90% covered at 95% sequence identity) I would assume that linclust performs just slightly worse than CD-HIT. It is very odd at that `--kmer-per-seq to 80` does produce exactly the same. ; What version of MMseqs2 do you use? What parameter do you use for CD-HIT? Could you please post the log of default linclust and the `--kmer-per-seq to 80` run?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-712785542
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:656,Availability,mask,mask,656,"The version of MMseqs2 is: MMseqs2 Version: 12.113e3. CD-HIT command is: ; `cd-hit -i all_protein_final_95_rep.fasta.1 -c 0.95 -aS 0.9 -d 200 -M 0 -T 40 -g 0 -l 30 -o all_protein_final_95_rep_95_1.fasta`. log of default linclust is; kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N01",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:665,Availability,mask,mask-lower-case,665,"The version of MMseqs2 is: MMseqs2 Version: 12.113e3. CD-HIT command is: ; `cd-hit -i all_protein_final_95_rep.fasta.1 -c 0.95 -aS 0.9 -d 200 -M 0 -T 40 -g 0 -l 30 -o all_protein_final_95_rep_95_1.fasta`. log of default linclust is; kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N01",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:1277,Availability,mask,mask,1277,"ER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/109161483509685",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:1286,Availability,mask,mask-lower-case,1286,"ER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/109161483509685",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:9624,Availability,mask,mask,9624," 11ms; Time for processing: 0h 10m 41s 827ms; convert2fasta /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep.fasta . MMseqs Version:	12.113e3; Use header DB	false; Verbosity 	3. Start writing file to /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep.fasta; Time for processing: 0h 54m 42s 51ms. log of linclust with `--kmer-per-seq to 80`. kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Not enough memory to process at once need to split; [=================================================================] 773.45M 1h 49m 44s 916ms; Pr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:9633,Availability,mask,mask-lower-case,9633," 11ms; Time for processing: 0h 10m 41s 827ms; convert2fasta /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep.fasta . MMseqs Version:	12.113e3; Use header DB	false; Verbosity 	3. Start writing file to /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep.fasta; Time for processing: 0h 54m 42s 51ms. log of linclust with `--kmer-per-seq to 80`. kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Not enough memory to process at once need to split; [=================================================================] 773.45M 1h 49m 44s 916ms; Pr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:10246,Availability,mask,mask,10246,"R/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Not enough memory to process at once need to split; [=================================================================] 773.45M 1h 49m 44s 916ms; Process file into 1 parts; Generate k-mers list for 1 split; [=================================================================] 773.45M 3m 43s 762ms. Adjusted k-mer length 18; Sort kmer 0h 0m 8s 851ms; Sort by rep. sequence 0h 0m 0s 535ms; Merge splits ... Time for fill: 0h 0m 8s 279ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 2h 8m 37s 699ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:10255,Availability,mask,mask-lower-case,10255,"R/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Not enough memory to process at once need to split; [=================================================================] 773.45M 1h 49m 44s 916ms; Process file into 1 parts; Generate k-mers list for 1 split; [=================================================================] 773.45M 3m 43s 762ms. Adjusted k-mer length 18; Sort kmer 0h 0m 8s 851ms; Sort by rep. sequence 0h 0m 0s 535ms; Merge splits ... Time for fill: 0h 0m 8s 279ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 2h 8m 37s 699ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:2374,Integrability,wrap,wrapped-scoring,2374,"mit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 100 --compressed 0 -v 3 . [=================================================================] 773.45M 13m 49s 19ms; Time for merging to pref_rescore1: 0h 25m 43s 735ms; Time for processing: 0h 53m 14s 579ms; clust /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref_rescore1 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 100 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 0m 42s 573ms. Size of the sequence database: 773451991; Size of the alignment database: 773451991; Number of clusters: 764944038.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:5674,Integrability,wrap,wrapped-scoring,5674,"t/protein_cat/tmp/10916148350968526968/pref_filter2 --filter-file /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/order_redundancy --threads 100 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 764.94M 1m 44s 691ms; Time for merging to pref_filter2: 0h 20m 18s 697ms; Time for processing: 0h 33m 25s 677ms; align /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref_filter2 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 100 --compressed 0 -v 3 . Compute score and coverage; Query database size: 764944038 type: Nucleotide; Target database size: 764944038 type: Nucleotide; Calculation of alignments; [=================================================================] 764.94M 11m 10s 977ms; Time for merging to aln: 0h 22m 11s 346ms. 781259144 alignments calculated.; 765501715 sequence pairs passed the thresholds (0.979831 of overall calculated).; 1.000729 hits per query sequence.; Time for processing: 0h 49m 18s 712ms; clust /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/input_step_redundancy /hwfss",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:11532,Integrability,wrap,wrapped-scoring,11532,"[=================================================================] 773.45M 1h 49m 44s 916ms; Process file into 1 parts; Generate k-mers list for 1 split; [=================================================================] 773.45M 3m 43s 762ms. Adjusted k-mer length 18; Sort kmer 0h 0m 8s 851ms; Sort by rep. sequence 0h 0m 0s 535ms; Merge splits ... Time for fill: 0h 0m 8s 279ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 2h 8m 37s 699ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 50 --compressed 0 -v 3 . [=================================================================] 773.45M 16m 6s 276ms; Time for merging to pref_rescore1: 0h 37m 19s 763ms; Time for processing: 1h 10m 8s 990ms; clust /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref_rescore1 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 50 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 1m 16s 664ms. Size of the sequence database: 773451991; Size of the alignment database: 773451991; Number of clusters: 764944220. Wr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:14829,Integrability,wrap,wrapped-scoring,14829,"cat/protein_cat/tmp/14045843375066908893/pref_filter2 --filter-file /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/order_redundancy --threads 50 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 764.94M 2m 3s 835ms; Time for merging to pref_filter2: 0h 26m 51s 419ms; Time for processing: 0h 44m 18s 340ms; align /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref_filter2 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 50 --compressed 0 -v 3 . Compute score and coverage; Query database size: 764944220 type: Nucleotide; Target database size: 764944220 type: Nucleotide; Calculation of alignments; [=================================================================] 764.94M 23m 36s 275ms; Time for merging to aln: 0h 32m 14s 887ms. 781315288 alignments calculated.; 765501793 sequence pairs passed the thresholds (0.979760 of overall calculated).; 1.000729 hits per query sequence.; Time for processing: 1h 9m 13s 720ms; clust /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/input_step_redundancy /hwfssz1",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:783,Modifiability,extend,extendable,783,"The version of MMseqs2 is: MMseqs2 Version: 12.113e3. CD-HIT command is: ; `cd-hit -i all_protein_final_95_rep.fasta.1 -c 0.95 -aS 0.9 -d 200 -M 0 -T 40 -g 0 -l 30 -o all_protein_final_95_rep_95_1.fasta`. log of default linclust is; kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N01",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:1404,Modifiability,extend,extendable,1404,"anshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:5985,Modifiability,extend,extend,5985,"94M 1m 44s 691ms; Time for merging to pref_filter2: 0h 20m 18s 697ms; Time for processing: 0h 33m 25s 677ms; align /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref_filter2 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 100 --compressed 0 -v 3 . Compute score and coverage; Query database size: 764944038 type: Nucleotide; Target database size: 764944038 type: Nucleotide; Calculation of alignments; [=================================================================] 764.94M 11m 10s 977ms; Time for merging to aln: 0h 22m 11s 346ms. 781259144 alignments calculated.; 765501715 sequence pairs passed the thresholds (0.979831 of overall calculated).; 1.000729 hits per query sequence.; Time for processing: 0h 49m 18s 712ms; clust /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/aln /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 100 --compressed 0 -v 3 . Clusteri",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:9753,Modifiability,extend,extendable,9753,"angjin/01_gene_cat/protein_cat/all_protein_final_95_rep /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep.fasta . MMseqs Version:	12.113e3; Use header DB	false; Verbosity 	3. Start writing file to /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep.fasta; Time for processing: 0h 54m 42s 51ms. log of linclust with `--kmer-per-seq to 80`. kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Not enough memory to process at once need to split; [=================================================================] 773.45M 1h 49m 44s 916ms; Process file into 1 parts; Generate k-mers list for 1 split; [====================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:10375,Modifiability,extend,extendable,10375,"shangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Not enough memory to process at once need to split; [=================================================================] 773.45M 1h 49m 44s 916ms; Process file into 1 parts; Generate k-mers list for 1 split; [=================================================================] 773.45M 3m 43s 762ms. Adjusted k-mer length 18; Sort kmer 0h 0m 8s 851ms; Sort by rep. sequence 0h 0m 0s 535ms; Merge splits ... Time for fill: 0h 0m 8s 279ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 2h 8m 37s 699ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref /hwfssz1/ST_DIVERSITY/P18",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:15140,Modifiability,extend,extend,15140,"4.94M 2m 3s 835ms; Time for merging to pref_filter2: 0h 26m 51s 419ms; Time for processing: 0h 44m 18s 340ms; align /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref_filter2 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 50 --compressed 0 -v 3 . Compute score and coverage; Query database size: 764944220 type: Nucleotide; Target database size: 764944220 type: Nucleotide; Calculation of alignments; [=================================================================] 764.94M 23m 36s 275ms; Time for merging to aln: 0h 32m 14s 887ms. 781315288 alignments calculated.; 765501793 sequence pairs passed the thresholds (0.979760 of overall calculated).; 1.000729 hits per query sequence.; Time for processing: 1h 9m 13s 720ms; clust /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/aln /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 50 --compressed 0 -v 3 . Clustering ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:2535,Performance,load,load-mode,2535,"enerate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 100 --compressed 0 -v 3 . [=================================================================] 773.45M 13m 49s 19ms; Time for merging to pref_rescore1: 0h 25m 43s 735ms; Time for processing: 0h 53m 14s 579ms; clust /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref_rescore1 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 100 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 0m 42s 573ms. Size of the sequence database: 773451991; Size of the alignment database: 773451991; Number of clusters: 764944038. Writing results 0h 2m 46s 588ms; Time for merging to pre_clust: 0h 0m 0s 16ms; Time for processing: 0h 12m 8s 93ms; createsubdb /hwfssz1/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:5910,Performance,load,load-mode,5910,"undancy --threads 100 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 764.94M 1m 44s 691ms; Time for merging to pref_filter2: 0h 20m 18s 697ms; Time for processing: 0h 33m 25s 677ms; align /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref_filter2 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 100 --compressed 0 -v 3 . Compute score and coverage; Query database size: 764944038 type: Nucleotide; Target database size: 764944038 type: Nucleotide; Calculation of alignments; [=================================================================] 764.94M 11m 10s 977ms; Time for merging to aln: 0h 22m 11s 346ms. 781259144 alignments calculated.; 765501715 sequence pairs passed the thresholds (0.979831 of overall calculated).; 1.000729 hits per query sequence.; Time for processing: 0h 49m 18s 712ms; clust /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/aln /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/prote",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:11693,Performance,load,load-mode,11693,"list for 1 split; [=================================================================] 773.45M 3m 43s 762ms. Adjusted k-mer length 18; Sort kmer 0h 0m 8s 851ms; Sort by rep. sequence 0h 0m 0s 535ms; Merge splits ... Time for fill: 0h 0m 8s 279ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 2h 8m 37s 699ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 50 --compressed 0 -v 3 . [=================================================================] 773.45M 16m 6s 276ms; Time for merging to pref_rescore1: 0h 37m 19s 763ms; Time for processing: 1h 10m 8s 990ms; clust /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref_rescore1 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 50 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 1m 16s 664ms. Size of the sequence database: 773451991; Size of the alignment database: 773451991; Number of clusters: 764944220. Writing results 0h 3m 47s 47ms; Time for merging to pre_clust: 0h 0m 0s 32ms; Time for processing: 0h 15m 54s 367ms; createsubdb /hwfssz1/S",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:15065,Performance,load,load-mode,15065,"edundancy --threads 50 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 764.94M 2m 3s 835ms; Time for merging to pref_filter2: 0h 26m 51s 419ms; Time for processing: 0h 44m 18s 340ms; align /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref_filter2 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 50 --compressed 0 -v 3 . Compute score and coverage; Query database size: 764944220 type: Nucleotide; Target database size: 764944220 type: Nucleotide; Calculation of alignments; [=================================================================] 764.94M 23m 36s 275ms; Time for merging to aln: 0h 32m 14s 887ms. 781315288 alignments calculated.; 765501793 sequence pairs passed the thresholds (0.979760 of overall calculated).; 1.000729 hits per query sequence.; Time for processing: 1h 9m 13s 720ms; clust /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/aln /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:730,Security,hash,hash-shift,730,"The version of MMseqs2 is: MMseqs2 Version: 12.113e3. CD-HIT command is: ; `cd-hit -i all_protein_final_95_rep.fasta.1 -c 0.95 -aS 0.9 -d 200 -M 0 -T 40 -g 0 -l 30 -o all_protein_final_95_rep_95_1.fasta`. log of default linclust is; kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N01",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:1351,Security,hash,hash-shift,1351,"anshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:9698,Security,hash,hash-shift,9698,"angjin/01_gene_cat/protein_cat/all_protein_final_95_rep /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep.fasta . MMseqs Version:	12.113e3; Use header DB	false; Verbosity 	3. Start writing file to /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep.fasta; Time for processing: 0h 54m 42s 51ms. log of linclust with `--kmer-per-seq to 80`. kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Not enough memory to process at once need to split; [=================================================================] 773.45M 1h 49m 44s 916ms; Process file into 1 parts; Generate k-mers list for 1 split; [====================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:10320,Security,hash,hash-shift,10320,"shangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Not enough memory to process at once need to split; [=================================================================] 773.45M 1h 49m 44s 916ms; Process file into 1 parts; Generate k-mers list for 1 split; [=================================================================] 773.45M 3m 43s 762ms. Adjusted k-mer length 18; Sort kmer 0h 0m 8s 851ms; Sort by rep. sequence 0h 0m 0s 535ms; Merge splits ... Time for fill: 0h 0m 8s 279ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 2h 8m 37s 699ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref /hwfssz1/ST_DIVERSITY/P18",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:205,Testability,log,log,205,"The version of MMseqs2 is: MMseqs2 Version: 12.113e3. CD-HIT command is: ; `cd-hit -i all_protein_final_95_rep.fasta.1 -c 0.95 -aS 0.9 -d 200 -M 0 -T 40 -g 0 -l 30 -o all_protein_final_95_rep_95_1.fasta`. log of default linclust is; kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N01",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:9156,Testability,log,log,9156,"0h 31m 29s 407ms; createsubdb /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep . MMseqs Version:	12.113e3; Subdb mode	0; Verbosity 	3. Time for merging to all_protein_final_95_rep: 0h 0m 0s 11ms; Time for processing: 0h 10m 41s 827ms; convert2fasta /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep.fasta . MMseqs Version:	12.113e3; Use header DB	false; Verbosity 	3. Start writing file to /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep.fasta; Time for processing: 0h 54m 42s 51ms. log of linclust with `--kmer-per-seq to 80`. kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153
https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-713695619:13,Availability,error,error,13,The `Killed` error message sounds like your job system killed the job for running out of memory. You can use the `--split-memory-Limit` parameter to adjust the maximum memory MMseqs2 is allowed to use. By default it will try to use as much as the system has.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-713695619
https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-713695619:19,Integrability,message,message,19,The `Killed` error message sounds like your job system killed the job for running out of memory. You can use the `--split-memory-Limit` parameter to adjust the maximum memory MMseqs2 is allowed to use. By default it will try to use as much as the system has.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-713695619
https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-714505555:199,Availability,error,error,199,"Hi, I rerun the search with this command line:; `mmseqs easy-search query.fasta individual.fna.tar.gz result.m8 tmp --cov-mode 0 -c 0.7 -e 0.00001 --split-memory-limit 60G`. This turned into another error:; `/scratch/yw/tmp/753367603623873521/search_tmp/4970649135515174898/translated_search.sh: line 45: 7447 Killed ""$MMSEQS"" extractorfs ""$2"" ""${TMP_PATH}/t_orfs_aa"" ${ORF_PAR}`. And in the log file, this search gave lots of warnings that the sequence is invalid:; ```; Invalid sequence with index 1463370!; =Error: extract target orfs step died; Error: Search died; ```. Could you please tell me what might be the cause? Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-714505555
https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-714505555:511,Availability,Error,Error,511,"Hi, I rerun the search with this command line:; `mmseqs easy-search query.fasta individual.fna.tar.gz result.m8 tmp --cov-mode 0 -c 0.7 -e 0.00001 --split-memory-limit 60G`. This turned into another error:; `/scratch/yw/tmp/753367603623873521/search_tmp/4970649135515174898/translated_search.sh: line 45: 7447 Killed ""$MMSEQS"" extractorfs ""$2"" ""${TMP_PATH}/t_orfs_aa"" ${ORF_PAR}`. And in the log file, this search gave lots of warnings that the sequence is invalid:; ```; Invalid sequence with index 1463370!; =Error: extract target orfs step died; Error: Search died; ```. Could you please tell me what might be the cause? Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-714505555
https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-714505555:549,Availability,Error,Error,549,"Hi, I rerun the search with this command line:; `mmseqs easy-search query.fasta individual.fna.tar.gz result.m8 tmp --cov-mode 0 -c 0.7 -e 0.00001 --split-memory-limit 60G`. This turned into another error:; `/scratch/yw/tmp/753367603623873521/search_tmp/4970649135515174898/translated_search.sh: line 45: 7447 Killed ""$MMSEQS"" extractorfs ""$2"" ""${TMP_PATH}/t_orfs_aa"" ${ORF_PAR}`. And in the log file, this search gave lots of warnings that the sequence is invalid:; ```; Invalid sequence with index 1463370!; =Error: extract target orfs step died; Error: Search died; ```. Could you please tell me what might be the cause? Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-714505555
https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-714505555:392,Testability,log,log,392,"Hi, I rerun the search with this command line:; `mmseqs easy-search query.fasta individual.fna.tar.gz result.m8 tmp --cov-mode 0 -c 0.7 -e 0.00001 --split-memory-limit 60G`. This turned into another error:; `/scratch/yw/tmp/753367603623873521/search_tmp/4970649135515174898/translated_search.sh: line 45: 7447 Killed ""$MMSEQS"" extractorfs ""$2"" ""${TMP_PATH}/t_orfs_aa"" ${ORF_PAR}`. And in the log file, this search gave lots of warnings that the sequence is invalid:; ```; Invalid sequence with index 1463370!; =Error: extract target orfs step died; Error: Search died; ```. Could you please tell me what might be the cause? Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-714505555
https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-715265248:15,Availability,error,error,15,"Hi, it gave an error again. ; Here are my command lines:; ```; mmseqs tar2db individual.fna.tar.gz smdb --output-dbtype 11; mmseqs createdb smdb sm_mm_db; mmseqs easy-search query.fasta sm_mm_db result.m8 tmp --cov-mode 0 -c 0.7 -e 0.00001 --split-memory-limit 60G; ```. Here is the error:; `/scratch/yw14n20/gp44/tmp/9201396113348300296/search_tmp/11342421226002340810/translated_search.sh: line 45: 21293 Killed ""$MMSEQS"" extractorfs ""$2"" ""${TMP_PATH}/t_orfs_aa"" ${ORF_PAR} `",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-715265248
https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-715265248:283,Availability,error,error,283,"Hi, it gave an error again. ; Here are my command lines:; ```; mmseqs tar2db individual.fna.tar.gz smdb --output-dbtype 11; mmseqs createdb smdb sm_mm_db; mmseqs easy-search query.fasta sm_mm_db result.m8 tmp --cov-mode 0 -c 0.7 -e 0.00001 --split-memory-limit 60G; ```. Here is the error:; `/scratch/yw14n20/gp44/tmp/9201396113348300296/search_tmp/11342421226002340810/translated_search.sh: line 45: 21293 Killed ""$MMSEQS"" extractorfs ""$2"" ""${TMP_PATH}/t_orfs_aa"" ${ORF_PAR} `",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-715265248
https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568:295,Availability,error,error,295,"> `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`; > ; > MMseqs Version: 12.113e3; > Compressed 0; > Extract mode 2; > Preload mode 0; > Threads 40; > Verbosity 3; > ; > Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. I tried to reproduce the above error on a different target database to see if its something to do with the sequences and got the same error with the following additional error messages. Just thought reporting it might help to figure out what's wrong. `free(): corrupted unsorted chunks`; `Aborted (core dumped)`. @milot-mirdita or @martin-steinegger do you have any idea what's going on? Any help is appreciated. . Thanks,; Manu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568
https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568:398,Availability,error,error,398,"> `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`; > ; > MMseqs Version: 12.113e3; > Compressed 0; > Extract mode 2; > Preload mode 0; > Threads 40; > Verbosity 3; > ; > Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. I tried to reproduce the above error on a different target database to see if its something to do with the sequences and got the same error with the following additional error messages. Just thought reporting it might help to figure out what's wrong. `free(): corrupted unsorted chunks`; `Aborted (core dumped)`. @milot-mirdita or @martin-steinegger do you have any idea what's going on? Any help is appreciated. . Thanks,; Manu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568
https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568:434,Availability,error,error,434,"> `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`; > ; > MMseqs Version: 12.113e3; > Compressed 0; > Extract mode 2; > Preload mode 0; > Threads 40; > Verbosity 3; > ; > Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. I tried to reproduce the above error on a different target database to see if its something to do with the sequences and got the same error with the following additional error messages. Just thought reporting it might help to figure out what's wrong. `free(): corrupted unsorted chunks`; `Aborted (core dumped)`. @milot-mirdita or @martin-steinegger do you have any idea what's going on? Any help is appreciated. . Thanks,; Manu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568
https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568:440,Integrability,message,messages,440,"> `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`; > ; > MMseqs Version: 12.113e3; > Compressed 0; > Extract mode 2; > Preload mode 0; > Threads 40; > Verbosity 3; > ; > Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. I tried to reproduce the above error on a different target database to see if its something to do with the sequences and got the same error with the following additional error messages. Just thought reporting it might help to figure out what's wrong. `free(): corrupted unsorted chunks`; `Aborted (core dumped)`. @milot-mirdita or @martin-steinegger do you have any idea what's going on? Any help is appreciated. . Thanks,; Manu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568
https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568:553,Safety,Abort,Aborted,553,"> `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`; > ; > MMseqs Version: 12.113e3; > Compressed 0; > Extract mode 2; > Preload mode 0; > Threads 40; > Verbosity 3; > ; > Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. I tried to reproduce the above error on a different target database to see if its something to do with the sequences and got the same error with the following additional error messages. Just thought reporting it might help to figure out what's wrong. `free(): corrupted unsorted chunks`; `Aborted (core dumped)`. @milot-mirdita or @martin-steinegger do you have any idea what's going on? Any help is appreciated. . Thanks,; Manu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568
https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568:31,Testability,test,test,31,"> `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`; > ; > MMseqs Version: 12.113e3; > Compressed 0; > Extract mode 2; > Preload mode 0; > Threads 40; > Verbosity 3; > ; > Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. I tried to reproduce the above error on a different target database to see if its something to do with the sequences and got the same error with the following additional error messages. Just thought reporting it might help to figure out what's wrong. `free(): corrupted unsorted chunks`; `Aborted (core dumped)`. @milot-mirdita or @martin-steinegger do you have any idea what's going on? Any help is appreciated. . Thanks,; Manu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568
https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568:51,Testability,test,test,51,"> `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`; > ; > MMseqs Version: 12.113e3; > Compressed 0; > Extract mode 2; > Preload mode 0; > Threads 40; > Verbosity 3; > ; > Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. I tried to reproduce the above error on a different target database to see if its something to do with the sequences and got the same error with the following additional error messages. Just thought reporting it might help to figure out what's wrong. `free(): corrupted unsorted chunks`; `Aborted (core dumped)`. @milot-mirdita or @martin-steinegger do you have any idea what's going on? Any help is appreciated. . Thanks,; Manu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568
https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568:66,Testability,test,test,66,"> `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`; > ; > MMseqs Version: 12.113e3; > Compressed 0; > Extract mode 2; > Preload mode 0; > Threads 40; > Verbosity 3; > ; > Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. I tried to reproduce the above error on a different target database to see if its something to do with the sequences and got the same error with the following additional error messages. Just thought reporting it might help to figure out what's wrong. `free(): corrupted unsorted chunks`; `Aborted (core dumped)`. @milot-mirdita or @martin-steinegger do you have any idea what's going on? Any help is appreciated. . Thanks,; Manu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568
https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568:229,Testability,test,test,229,"> `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`; > ; > MMseqs Version: 12.113e3; > Compressed 0; > Extract mode 2; > Preload mode 0; > Threads 40; > Verbosity 3; > ; > Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. I tried to reproduce the above error on a different target database to see if its something to do with the sequences and got the same error with the following additional error messages. Just thought reporting it might help to figure out what's wrong. `free(): corrupted unsorted chunks`; `Aborted (core dumped)`. @milot-mirdita or @martin-steinegger do you have any idea what's going on? Any help is appreciated. . Thanks,; Manu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568
https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-720089354:117,Availability,avail,available,117,Thank you for your reply.; I have seen that from the documentation and wish I could use it but this module seems not available with my install:; MMseqs2 Version: 4224ae469df44631b5d8e20aa5c7fd9d74d48c0e; I tried to install more a recent version of mmseqs but had kernel issue (FATAL: kernel too old),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-720089354
https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-720089354:135,Deployability,install,install,135,Thank you for your reply.; I have seen that from the documentation and wish I could use it but this module seems not available with my install:; MMseqs2 Version: 4224ae469df44631b5d8e20aa5c7fd9d74d48c0e; I tried to install more a recent version of mmseqs but had kernel issue (FATAL: kernel too old),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-720089354
https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-720089354:215,Deployability,install,install,215,Thank you for your reply.; I have seen that from the documentation and wish I could use it but this module seems not available with my install:; MMseqs2 Version: 4224ae469df44631b5d8e20aa5c7fd9d74d48c0e; I tried to install more a recent version of mmseqs but had kernel issue (FATAL: kernel too old),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-720089354
https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-725981645:65,Availability,error,error,65,"Thanks a lot for your reply,. I tried but I am getting assembler error:; /tmp/cccDx2GQ.s: Assembler messages:; /tmp/cccDx2GQ.s:516: Error: no such instruction: `vpbroadcastq %xmm2,%ymm1'; /tmp/cccDx2GQ.s:525: Error: suffix or operands invalid for `vpaddq'; make[2]: *** [lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o] Error 1; make[1]: *** [lib/cacode/CMakeFiles/cacode.dir/all] Error 2; make: *** [all] Error 2. I have; cmake version 2.8.12.2; gcc version 5.5.0 (GCC). Florian",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-725981645
https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-725981645:132,Availability,Error,Error,132,"Thanks a lot for your reply,. I tried but I am getting assembler error:; /tmp/cccDx2GQ.s: Assembler messages:; /tmp/cccDx2GQ.s:516: Error: no such instruction: `vpbroadcastq %xmm2,%ymm1'; /tmp/cccDx2GQ.s:525: Error: suffix or operands invalid for `vpaddq'; make[2]: *** [lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o] Error 1; make[1]: *** [lib/cacode/CMakeFiles/cacode.dir/all] Error 2; make: *** [all] Error 2. I have; cmake version 2.8.12.2; gcc version 5.5.0 (GCC). Florian",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-725981645
https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-725981645:209,Availability,Error,Error,209,"Thanks a lot for your reply,. I tried but I am getting assembler error:; /tmp/cccDx2GQ.s: Assembler messages:; /tmp/cccDx2GQ.s:516: Error: no such instruction: `vpbroadcastq %xmm2,%ymm1'; /tmp/cccDx2GQ.s:525: Error: suffix or operands invalid for `vpaddq'; make[2]: *** [lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o] Error 1; make[1]: *** [lib/cacode/CMakeFiles/cacode.dir/all] Error 2; make: *** [all] Error 2. I have; cmake version 2.8.12.2; gcc version 5.5.0 (GCC). Florian",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-725981645
https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-725981645:329,Availability,Error,Error,329,"Thanks a lot for your reply,. I tried but I am getting assembler error:; /tmp/cccDx2GQ.s: Assembler messages:; /tmp/cccDx2GQ.s:516: Error: no such instruction: `vpbroadcastq %xmm2,%ymm1'; /tmp/cccDx2GQ.s:525: Error: suffix or operands invalid for `vpaddq'; make[2]: *** [lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o] Error 1; make[1]: *** [lib/cacode/CMakeFiles/cacode.dir/all] Error 2; make: *** [all] Error 2. I have; cmake version 2.8.12.2; gcc version 5.5.0 (GCC). Florian",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-725981645
https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-725981645:390,Availability,Error,Error,390,"Thanks a lot for your reply,. I tried but I am getting assembler error:; /tmp/cccDx2GQ.s: Assembler messages:; /tmp/cccDx2GQ.s:516: Error: no such instruction: `vpbroadcastq %xmm2,%ymm1'; /tmp/cccDx2GQ.s:525: Error: suffix or operands invalid for `vpaddq'; make[2]: *** [lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o] Error 1; make[1]: *** [lib/cacode/CMakeFiles/cacode.dir/all] Error 2; make: *** [all] Error 2. I have; cmake version 2.8.12.2; gcc version 5.5.0 (GCC). Florian",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-725981645
https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-725981645:415,Availability,Error,Error,415,"Thanks a lot for your reply,. I tried but I am getting assembler error:; /tmp/cccDx2GQ.s: Assembler messages:; /tmp/cccDx2GQ.s:516: Error: no such instruction: `vpbroadcastq %xmm2,%ymm1'; /tmp/cccDx2GQ.s:525: Error: suffix or operands invalid for `vpaddq'; make[2]: *** [lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o] Error 1; make[1]: *** [lib/cacode/CMakeFiles/cacode.dir/all] Error 2; make: *** [all] Error 2. I have; cmake version 2.8.12.2; gcc version 5.5.0 (GCC). Florian",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-725981645
https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-725981645:100,Integrability,message,messages,100,"Thanks a lot for your reply,. I tried but I am getting assembler error:; /tmp/cccDx2GQ.s: Assembler messages:; /tmp/cccDx2GQ.s:516: Error: no such instruction: `vpbroadcastq %xmm2,%ymm1'; /tmp/cccDx2GQ.s:525: Error: suffix or operands invalid for `vpaddq'; make[2]: *** [lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o] Error 1; make[1]: *** [lib/cacode/CMakeFiles/cacode.dir/all] Error 2; make: *** [all] Error 2. I have; cmake version 2.8.12.2; gcc version 5.5.0 (GCC). Florian",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-725981645
https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-726200095:310,Modifiability,variab,variables,310,"That sounds like the binutils on your system are also very old. Forcing an SSE4.1 build by calling `cmake` with `cmake -DHAVE_SSE4_1=1 ...` should work. Alternatively, if you want to profit from the speedup that AVX2 would enable you need to compile a newer binutils on your own somehow and then set the CMAKE variables to the corresponding paths (CMAKE_AR, CMAKE_LINKER, ...). You don't have conda or linuxbrew on the system? Either option should come with their own set of standard libraries that might be compatible with older systems.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-726200095
https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203:510,Integrability,wrap,wrapped-scoring,510,"Here's the output from that search job:. ```; align /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search/seqs17_db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/pref_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 1 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score only; Query database size: 6526 type: Aminoacid; Target database size: 41195879 type: Aminoacid; Calculation of alignments; [=================================================================] 7.00K 0s 8ms; Time for merging to aln_0: 0h 0m 0s 9ms. 0 alignments calculated.; 0 sequence pairs passed the thresholds (-nan of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 3s 593ms; align /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/profile_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/pref_1 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 1 --add-self-ma",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203
https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203:1792,Integrability,wrap,wrapped-scoring,1792,"nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score only; Query database size: 6526 type: Aminoacid; Target database size: 41195879 type: Aminoacid; Calculation of alignments; [=================================================================] 7.00K 0s 8ms; Time for merging to aln_0: 0h 0m 0s 9ms. 0 alignments calculated.; 0 sequence pairs passed the thresholds (-nan of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 3s 593ms; align /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/profile_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/pref_1 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 1 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 7002 type: Profile; Target database size: 41195879 type: Aminoacid; Calculation of alignments; [=================================================================] 7.00K 0s 20ms; Time for merging to aln_tmp_1: 0h 0m 0s 10ms. 0 alignments calculated.; 0 sequence pairs passed the thresholds (-nan of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 4s 529ms; mergedbs /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/profile_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/Un",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203
https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203:807,Modifiability,extend,extend,807,"Here's the output from that search job:. ```; align /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search/seqs17_db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/pref_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 1 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score only; Query database size: 6526 type: Aminoacid; Target database size: 41195879 type: Aminoacid; Calculation of alignments; [=================================================================] 7.00K 0s 8ms; Time for merging to aln_0: 0h 0m 0s 9ms. 0 alignments calculated.; 0 sequence pairs passed the thresholds (-nan of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 3s 593ms; align /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/profile_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/pref_1 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 1 --add-self-ma",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203
https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203:2089,Modifiability,extend,extend,2089,"or merging to aln_0: 0h 0m 0s 9ms. 0 alignments calculated.; 0 sequence pairs passed the thresholds (-nan of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 3s 593ms; align /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/profile_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/pref_1 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 1 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 7002 type: Profile; Target database size: 41195879 type: Aminoacid; Calculation of alignments; [=================================================================] 7.00K 0s 20ms; Time for merging to aln_tmp_1: 0h 0m 0s 10ms. 0 alignments calculated.; 0 sequence pairs passed the thresholds (-nan of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 4s 529ms; mergedbs /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/profile_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search/hits_seqs17_db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_tmp_1. Merging the results to /ebio/abt3_s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203
https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203:732,Performance,load,load-mode,732,"Here's the output from that search job:. ```; align /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search/seqs17_db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/pref_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 1 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score only; Query database size: 6526 type: Aminoacid; Target database size: 41195879 type: Aminoacid; Calculation of alignments; [=================================================================] 7.00K 0s 8ms; Time for merging to aln_0: 0h 0m 0s 9ms. 0 alignments calculated.; 0 sequence pairs passed the thresholds (-nan of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 3s 593ms; align /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/profile_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/pref_1 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 1 --add-self-ma",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203
https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203:2014,Performance,load,load-mode,2014,"cid; Target database size: 41195879 type: Aminoacid; Calculation of alignments; [=================================================================] 7.00K 0s 8ms; Time for merging to aln_0: 0h 0m 0s 9ms. 0 alignments calculated.; 0 sequence pairs passed the thresholds (-nan of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 3s 593ms; align /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/profile_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/pref_1 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 1 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 7002 type: Profile; Target database size: 41195879 type: Aminoacid; Calculation of alignments; [=================================================================] 7.00K 0s 20ms; Time for merging to aln_tmp_1: 0h 0m 0s 10ms. 0 alignments calculated.; 0 sequence pairs passed the thresholds (-nan of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 4s 529ms; mergedbs /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/profile_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search/hits_seqs17_db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203
https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726118628:52,Usability,clear,clear,52,"Do you also have the previous steps? Alternatively, clear the temp directory and rerun the command. At this point the profiles already contain over 7k entries for some reason (`7.00K 0s 8ms`).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726118628
https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-728166556:335,Modifiability,extend,extend,335,"We have done some testing on finding very short proteins in our SpacePHARER manuscript (https://github.com/soedinglab/spacepharer, https://www.biorxiv.org/content/10.1101/2020.05.15.090266v1). The parameters we have found to work well are as follows:; `-k 6 --spaced-kmer-pattern 11011101 --seed-sub-mat VTML40.out --gap-open 16 --gap-extend 2 --min-length 9`. We'll eventually add a short fragment search mode to MMseqs2 itself in the form of setting presets or something like that.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-728166556
https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-728166556:18,Testability,test,testing,18,"We have done some testing on finding very short proteins in our SpacePHARER manuscript (https://github.com/soedinglab/spacepharer, https://www.biorxiv.org/content/10.1101/2020.05.15.090266v1). The parameters we have found to work well are as follows:; `-k 6 --spaced-kmer-pattern 11011101 --seed-sub-mat VTML40.out --gap-open 16 --gap-extend 2 --min-length 9`. We'll eventually add a short fragment search mode to MMseqs2 itself in the form of setting presets or something like that.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-728166556
https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-728957193:599,Availability,mask,mask,599,"I think we kept default sensitivity. I assume that sensitivity won't help a lot for short sequence search. The sensitivity parameter controls the number of similar k-mers generated for the double-consecutive-kmer-matching in the prefilter. I assume that using too dissimilar k-mers would result in low scores and e-values. Those would then be rejected anyway.; My assumption might be wrong though, I'd appreciate if you could report what you learn. . I don't think ` --exact-kmer-matching` would be useful as that would disable the similar k-mer generation completely. . `--comp-bias-corr 0` and `--mask 0` might be useful though. We suppress false positives homologes with these parameters. However, we didn't benchmark on super short sequences. They might be doing nothing (as both algorithms use a window-approach), they might work correctly or they might be suppressing true useful hits.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-728957193
https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-728957193:711,Testability,benchmark,benchmark,711,"I think we kept default sensitivity. I assume that sensitivity won't help a lot for short sequence search. The sensitivity parameter controls the number of similar k-mers generated for the double-consecutive-kmer-matching in the prefilter. I assume that using too dissimilar k-mers would result in low scores and e-values. Those would then be rejected anyway.; My assumption might be wrong though, I'd appreciate if you could report what you learn. . I don't think ` --exact-kmer-matching` would be useful as that would disable the similar k-mer generation completely. . `--comp-bias-corr 0` and `--mask 0` might be useful though. We suppress false positives homologes with these parameters. However, we didn't benchmark on super short sequences. They might be doing nothing (as both algorithms use a window-approach), they might work correctly or they might be suppressing true useful hits.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-728957193
https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-728957193:442,Usability,learn,learn,442,"I think we kept default sensitivity. I assume that sensitivity won't help a lot for short sequence search. The sensitivity parameter controls the number of similar k-mers generated for the double-consecutive-kmer-matching in the prefilter. I assume that using too dissimilar k-mers would result in low scores and e-values. Those would then be rejected anyway.; My assumption might be wrong though, I'd appreciate if you could report what you learn. . I don't think ` --exact-kmer-matching` would be useful as that would disable the similar k-mer generation completely. . `--comp-bias-corr 0` and `--mask 0` might be useful though. We suppress false positives homologes with these parameters. However, we didn't benchmark on super short sequences. They might be doing nothing (as both algorithms use a window-approach), they might work correctly or they might be suppressing true useful hits.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-728957193
https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160:586,Availability,mask,mask,586,"Thanks again! . Here are my observations: ; * sensitivity hardly matters (with a restrictive evalue, the results are almost identical. With a permissive evalue, there are slightly more hits with an increased sensitivity) -> I'll stick with `s=1` or `s=2` for speed. ; * In fact, the evalue seems to be the restrictive factor (which makes sense, given that the peptides are so small and the database so large). With the default evalue of `0.001`, only 26k out of 630k peptides generate a match (all of them *are* contained in the database at least once). ; * `--comp-bias-corr 0` and `--mask 0` seem to be advantageous. With a permissive evalue of `1e7`, `630467/630487` peptides are found if the both options are set to 0. If they are set to 1, only 594113/630487 peptides are found. On the first sight, the missing peptides do not look particularly low complexity (e.g. `LASLSSVFFFIISFI`, `LKEKLNRNRENSTAT`, `NEGCNSNSSTPRQNT`). ; * With a sensitivity of `s=1`, `--comp-bias-corr 0` and `--mask 0` and an evalue of `1e7` *almost all* perfect matches are found (`630467/630487`). With `s>=2` and otherwise same settings *all* perfect matches are found. . ---. For now, I will, therefore, use the following settings and see how that works out: ; ```bash; --seed-sub-mat VTML40.out ; -s 2 ; --comp-bias-corr 0 --mask 0; --gap-open 16 ; --gap-extend 2 ; --min-length 9 ; --spaced-kmer-pattern 11011101 ; -e 10000000; -k 6 ; ```. ---. Here are the raw counts of matches. `biascorr = 0` implies `mask = 0`. ; ```console; > wc -l * | sort -n ; 1283115 AE009951.2_sens1_biascorr0_eval0.001_mmseqs.tsv ; 1283126 AE009951.2_sens4_biascorr0_eval0.001_mmseqs.tsv; 1283235 AE009951.2_sens2_biascorr0_eval0.001_mmseqs.tsv; 1419374 AE009951.2_sens1_biascorr1_eval0.001_mmseqs.tsv; 1419971 AE009951.2_sens2_biascorr1_eval0.001_mmseqs.tsv; 1420095 AE009951.2_sens4_biascorr1_eval0.001_mmseqs.tsv; 155001100 AE009951.2_sens1_biascorr1_eval10000000_mmseqs.tsv; 198438767 AE009951.2_sens2_biascorr1_eval10000000_mmseqs.ts",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160
https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160:990,Availability,mask,mask,990,"nks again! . Here are my observations: ; * sensitivity hardly matters (with a restrictive evalue, the results are almost identical. With a permissive evalue, there are slightly more hits with an increased sensitivity) -> I'll stick with `s=1` or `s=2` for speed. ; * In fact, the evalue seems to be the restrictive factor (which makes sense, given that the peptides are so small and the database so large). With the default evalue of `0.001`, only 26k out of 630k peptides generate a match (all of them *are* contained in the database at least once). ; * `--comp-bias-corr 0` and `--mask 0` seem to be advantageous. With a permissive evalue of `1e7`, `630467/630487` peptides are found if the both options are set to 0. If they are set to 1, only 594113/630487 peptides are found. On the first sight, the missing peptides do not look particularly low complexity (e.g. `LASLSSVFFFIISFI`, `LKEKLNRNRENSTAT`, `NEGCNSNSSTPRQNT`). ; * With a sensitivity of `s=1`, `--comp-bias-corr 0` and `--mask 0` and an evalue of `1e7` *almost all* perfect matches are found (`630467/630487`). With `s>=2` and otherwise same settings *all* perfect matches are found. . ---. For now, I will, therefore, use the following settings and see how that works out: ; ```bash; --seed-sub-mat VTML40.out ; -s 2 ; --comp-bias-corr 0 --mask 0; --gap-open 16 ; --gap-extend 2 ; --min-length 9 ; --spaced-kmer-pattern 11011101 ; -e 10000000; -k 6 ; ```. ---. Here are the raw counts of matches. `biascorr = 0` implies `mask = 0`. ; ```console; > wc -l * | sort -n ; 1283115 AE009951.2_sens1_biascorr0_eval0.001_mmseqs.tsv ; 1283126 AE009951.2_sens4_biascorr0_eval0.001_mmseqs.tsv; 1283235 AE009951.2_sens2_biascorr0_eval0.001_mmseqs.tsv; 1419374 AE009951.2_sens1_biascorr1_eval0.001_mmseqs.tsv; 1419971 AE009951.2_sens2_biascorr1_eval0.001_mmseqs.tsv; 1420095 AE009951.2_sens4_biascorr1_eval0.001_mmseqs.tsv; 155001100 AE009951.2_sens1_biascorr1_eval10000000_mmseqs.tsv; 198438767 AE009951.2_sens2_biascorr1_eval10000000_mmseqs.tsv;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160
https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160:1309,Availability,mask,mask,1309,"fact, the evalue seems to be the restrictive factor (which makes sense, given that the peptides are so small and the database so large). With the default evalue of `0.001`, only 26k out of 630k peptides generate a match (all of them *are* contained in the database at least once). ; * `--comp-bias-corr 0` and `--mask 0` seem to be advantageous. With a permissive evalue of `1e7`, `630467/630487` peptides are found if the both options are set to 0. If they are set to 1, only 594113/630487 peptides are found. On the first sight, the missing peptides do not look particularly low complexity (e.g. `LASLSSVFFFIISFI`, `LKEKLNRNRENSTAT`, `NEGCNSNSSTPRQNT`). ; * With a sensitivity of `s=1`, `--comp-bias-corr 0` and `--mask 0` and an evalue of `1e7` *almost all* perfect matches are found (`630467/630487`). With `s>=2` and otherwise same settings *all* perfect matches are found. . ---. For now, I will, therefore, use the following settings and see how that works out: ; ```bash; --seed-sub-mat VTML40.out ; -s 2 ; --comp-bias-corr 0 --mask 0; --gap-open 16 ; --gap-extend 2 ; --min-length 9 ; --spaced-kmer-pattern 11011101 ; -e 10000000; -k 6 ; ```. ---. Here are the raw counts of matches. `biascorr = 0` implies `mask = 0`. ; ```console; > wc -l * | sort -n ; 1283115 AE009951.2_sens1_biascorr0_eval0.001_mmseqs.tsv ; 1283126 AE009951.2_sens4_biascorr0_eval0.001_mmseqs.tsv; 1283235 AE009951.2_sens2_biascorr0_eval0.001_mmseqs.tsv; 1419374 AE009951.2_sens1_biascorr1_eval0.001_mmseqs.tsv; 1419971 AE009951.2_sens2_biascorr1_eval0.001_mmseqs.tsv; 1420095 AE009951.2_sens4_biascorr1_eval0.001_mmseqs.tsv; 155001100 AE009951.2_sens1_biascorr1_eval10000000_mmseqs.tsv; 198438767 AE009951.2_sens2_biascorr1_eval10000000_mmseqs.tsv; 212674670 AE009951.2_sens1_biascorr0_eval10000000_mmseqs.tsv; 237331138 AE009951.2_sens4_biascorr1_eval10000000_mmseqs.tsv; 247063054 AE009951.2_sens2_biascorr0_eval10000000_mmseqs.tsv; 249672852 AE009951.2_sens4_biascorr0_eval10000000_mmseqs.tsv; 1308290497 total; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160
https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160:1490,Availability,mask,mask,1490,"fact, the evalue seems to be the restrictive factor (which makes sense, given that the peptides are so small and the database so large). With the default evalue of `0.001`, only 26k out of 630k peptides generate a match (all of them *are* contained in the database at least once). ; * `--comp-bias-corr 0` and `--mask 0` seem to be advantageous. With a permissive evalue of `1e7`, `630467/630487` peptides are found if the both options are set to 0. If they are set to 1, only 594113/630487 peptides are found. On the first sight, the missing peptides do not look particularly low complexity (e.g. `LASLSSVFFFIISFI`, `LKEKLNRNRENSTAT`, `NEGCNSNSSTPRQNT`). ; * With a sensitivity of `s=1`, `--comp-bias-corr 0` and `--mask 0` and an evalue of `1e7` *almost all* perfect matches are found (`630467/630487`). With `s>=2` and otherwise same settings *all* perfect matches are found. . ---. For now, I will, therefore, use the following settings and see how that works out: ; ```bash; --seed-sub-mat VTML40.out ; -s 2 ; --comp-bias-corr 0 --mask 0; --gap-open 16 ; --gap-extend 2 ; --min-length 9 ; --spaced-kmer-pattern 11011101 ; -e 10000000; -k 6 ; ```. ---. Here are the raw counts of matches. `biascorr = 0` implies `mask = 0`. ; ```console; > wc -l * | sort -n ; 1283115 AE009951.2_sens1_biascorr0_eval0.001_mmseqs.tsv ; 1283126 AE009951.2_sens4_biascorr0_eval0.001_mmseqs.tsv; 1283235 AE009951.2_sens2_biascorr0_eval0.001_mmseqs.tsv; 1419374 AE009951.2_sens1_biascorr1_eval0.001_mmseqs.tsv; 1419971 AE009951.2_sens2_biascorr1_eval0.001_mmseqs.tsv; 1420095 AE009951.2_sens4_biascorr1_eval0.001_mmseqs.tsv; 155001100 AE009951.2_sens1_biascorr1_eval10000000_mmseqs.tsv; 198438767 AE009951.2_sens2_biascorr1_eval10000000_mmseqs.tsv; 212674670 AE009951.2_sens1_biascorr0_eval10000000_mmseqs.tsv; 237331138 AE009951.2_sens4_biascorr1_eval10000000_mmseqs.tsv; 247063054 AE009951.2_sens2_biascorr0_eval10000000_mmseqs.tsv; 249672852 AE009951.2_sens4_biascorr0_eval10000000_mmseqs.tsv; 1308290497 total; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160
https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160:1339,Modifiability,extend,extend,1339,"fact, the evalue seems to be the restrictive factor (which makes sense, given that the peptides are so small and the database so large). With the default evalue of `0.001`, only 26k out of 630k peptides generate a match (all of them *are* contained in the database at least once). ; * `--comp-bias-corr 0` and `--mask 0` seem to be advantageous. With a permissive evalue of `1e7`, `630467/630487` peptides are found if the both options are set to 0. If they are set to 1, only 594113/630487 peptides are found. On the first sight, the missing peptides do not look particularly low complexity (e.g. `LASLSSVFFFIISFI`, `LKEKLNRNRENSTAT`, `NEGCNSNSSTPRQNT`). ; * With a sensitivity of `s=1`, `--comp-bias-corr 0` and `--mask 0` and an evalue of `1e7` *almost all* perfect matches are found (`630467/630487`). With `s>=2` and otherwise same settings *all* perfect matches are found. . ---. For now, I will, therefore, use the following settings and see how that works out: ; ```bash; --seed-sub-mat VTML40.out ; -s 2 ; --comp-bias-corr 0 --mask 0; --gap-open 16 ; --gap-extend 2 ; --min-length 9 ; --spaced-kmer-pattern 11011101 ; -e 10000000; -k 6 ; ```. ---. Here are the raw counts of matches. `biascorr = 0` implies `mask = 0`. ; ```console; > wc -l * | sort -n ; 1283115 AE009951.2_sens1_biascorr0_eval0.001_mmseqs.tsv ; 1283126 AE009951.2_sens4_biascorr0_eval0.001_mmseqs.tsv; 1283235 AE009951.2_sens2_biascorr0_eval0.001_mmseqs.tsv; 1419374 AE009951.2_sens1_biascorr1_eval0.001_mmseqs.tsv; 1419971 AE009951.2_sens2_biascorr1_eval0.001_mmseqs.tsv; 1420095 AE009951.2_sens4_biascorr1_eval0.001_mmseqs.tsv; 155001100 AE009951.2_sens1_biascorr1_eval10000000_mmseqs.tsv; 198438767 AE009951.2_sens2_biascorr1_eval10000000_mmseqs.tsv; 212674670 AE009951.2_sens1_biascorr0_eval10000000_mmseqs.tsv; 237331138 AE009951.2_sens4_biascorr1_eval10000000_mmseqs.tsv; 247063054 AE009951.2_sens2_biascorr0_eval10000000_mmseqs.tsv; 249672852 AE009951.2_sens4_biascorr0_eval10000000_mmseqs.tsv; 1308290497 total; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160
https://github.com/soedinglab/MMseqs2/issues/374#issuecomment-730183914:29,Availability,error,error,29,"Hello,. In order to fix this error, I removed all sequences less than 50 aa long. I also put a ""*"" at the end of each sequence in order for the multiple to be equally divisible by 3. I now get the following error; `m313131mmAlignment format is not supported! ] 0.00% 1 eta -`; `3131mmAlignment format is not supported!`; `m3131Alignment format is not supported!`; `Alignment format is not supported!`; `Alignment format is not supported!`; `39lignment format is not supported!d!`; `Alignment format is not supported!`; `Alignment format is not supported!`; `mmAlignment format is not supported!`; `39m39mmAlignment format is not supported!`; `39mAlignment format is not supported!`; `Error: Clustering step 6 died`; `Error: Search died`; ; Please advice how to proceed. Thanks. -Abhijit",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/374#issuecomment-730183914
https://github.com/soedinglab/MMseqs2/issues/374#issuecomment-730183914:207,Availability,error,error,207,"Hello,. In order to fix this error, I removed all sequences less than 50 aa long. I also put a ""*"" at the end of each sequence in order for the multiple to be equally divisible by 3. I now get the following error; `m313131mmAlignment format is not supported! ] 0.00% 1 eta -`; `3131mmAlignment format is not supported!`; `m3131Alignment format is not supported!`; `Alignment format is not supported!`; `Alignment format is not supported!`; `39lignment format is not supported!d!`; `Alignment format is not supported!`; `Alignment format is not supported!`; `mmAlignment format is not supported!`; `39m39mmAlignment format is not supported!`; `39mAlignment format is not supported!`; `Error: Clustering step 6 died`; `Error: Search died`; ; Please advice how to proceed. Thanks. -Abhijit",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/374#issuecomment-730183914
https://github.com/soedinglab/MMseqs2/issues/374#issuecomment-730183914:684,Availability,Error,Error,684,"Hello,. In order to fix this error, I removed all sequences less than 50 aa long. I also put a ""*"" at the end of each sequence in order for the multiple to be equally divisible by 3. I now get the following error; `m313131mmAlignment format is not supported! ] 0.00% 1 eta -`; `3131mmAlignment format is not supported!`; `m3131Alignment format is not supported!`; `Alignment format is not supported!`; `Alignment format is not supported!`; `39lignment format is not supported!d!`; `Alignment format is not supported!`; `Alignment format is not supported!`; `mmAlignment format is not supported!`; `39m39mmAlignment format is not supported!`; `39mAlignment format is not supported!`; `Error: Clustering step 6 died`; `Error: Search died`; ; Please advice how to proceed. Thanks. -Abhijit",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/374#issuecomment-730183914
https://github.com/soedinglab/MMseqs2/issues/374#issuecomment-730183914:717,Availability,Error,Error,717,"Hello,. In order to fix this error, I removed all sequences less than 50 aa long. I also put a ""*"" at the end of each sequence in order for the multiple to be equally divisible by 3. I now get the following error; `m313131mmAlignment format is not supported! ] 0.00% 1 eta -`; `3131mmAlignment format is not supported!`; `m3131Alignment format is not supported!`; `Alignment format is not supported!`; `Alignment format is not supported!`; `39lignment format is not supported!d!`; `Alignment format is not supported!`; `Alignment format is not supported!`; `mmAlignment format is not supported!`; `39m39mmAlignment format is not supported!`; `39mAlignment format is not supported!`; `Error: Clustering step 6 died`; `Error: Search died`; ; Please advice how to proceed. Thanks. -Abhijit",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/374#issuecomment-730183914
https://github.com/soedinglab/MMseqs2/issues/374#issuecomment-730411136:94,Availability,error,error,94,Some sequences in there are proprietary. But I can get some public sequences and recreate the error. Those I can send to you.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/374#issuecomment-730411136
https://github.com/soedinglab/MMseqs2/issues/376#issuecomment-734387106:86,Deployability,pipeline,pipeline,86,"I was trying to avoid MPI so far... Mostly because I run mmseqs as part of a nextflow pipeline, and I'm not even sure if it is possible to use MPI from there, because nextflow usually takes care of the parallelization.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/376#issuecomment-734387106
https://github.com/soedinglab/MMseqs2/issues/376#issuecomment-734387106:16,Safety,avoid,avoid,16,"I was trying to avoid MPI so far... Mostly because I run mmseqs as part of a nextflow pipeline, and I'm not even sure if it is possible to use MPI from there, because nextflow usually takes care of the parallelization.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/376#issuecomment-734387106
https://github.com/soedinglab/MMseqs2/issues/377#issuecomment-1087333103:25,Integrability,depend,depends,25,"@mshrngci118 this really depends on your use case. You could use the sequence identity or score to define the strength of the connection between two proteins. The output fields are `query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits`. Score = `bits`, `fident`= sequence identity.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/377#issuecomment-1087333103
https://github.com/soedinglab/MMseqs2/issues/377#issuecomment-1088497268:225,Testability,log,log,225,"@martin-steinegger ; Thanks!; I couldn't find out the header info from the manual, so it is very helpful.; I'd like to reflect structural differences especially in their motifs, on visualization.; It seems like 'fident' or '-log(evalue)' will be indicators for such criteria.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/377#issuecomment-1088497268
https://github.com/soedinglab/MMseqs2/issues/378#issuecomment-736715983:37,Deployability,update,updated,37,"Ok, I'll play with it. I'll keep you updated on any progress. Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/378#issuecomment-736715983
https://github.com/soedinglab/MMseqs2/issues/379#issuecomment-735712461:68,Availability,avail,available,68,Should be fixed now. Statically built binaries with the fix will be available at http://mmseqs.com/latest/ in about an hour. We will also make a new release in the next few weeks.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/379#issuecomment-735712461
https://github.com/soedinglab/MMseqs2/issues/379#issuecomment-735712461:149,Deployability,release,release,149,Should be fixed now. Statically built binaries with the fix will be available at http://mmseqs.com/latest/ in about an hour. We will also make a new release in the next few weeks.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/379#issuecomment-735712461
https://github.com/soedinglab/MMseqs2/issues/381#issuecomment-744417949:312,Integrability,message,message,312,"We were a bit busy with a paper submission, sorry for the delay. This behavior is kind of okay and expected.; The procedure to map an NR entry to a taxonomic label is a bit involved since NCBI's NR, accession2taxid and taxdump don't match very well and it's difficult to bring them into a consistent state. This message happens when we can parse a taxonomic identifier looking the accession up in one of the accession2taxid files, but the taxonomic identifier is not contained in the taxdump anymore. In this case we either try to take the taxonomic identifier of the next sequence that was clustered into this entry or leave this entry unannotated (thus it cannot contribute to LCA computation despite being findable through searching). For nearly all sequences the mapping procedure works correctly (331375261 vs 331433500). The remaining 50K entries are however kind of tricky and we don't have a good solution yet to get a taxonomic identifier automatically for those.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/381#issuecomment-744417949
https://github.com/soedinglab/MMseqs2/issues/381#issuecomment-744417949:381,Security,access,accession,381,"We were a bit busy with a paper submission, sorry for the delay. This behavior is kind of okay and expected.; The procedure to map an NR entry to a taxonomic label is a bit involved since NCBI's NR, accession2taxid and taxdump don't match very well and it's difficult to bring them into a consistent state. This message happens when we can parse a taxonomic identifier looking the accession up in one of the accession2taxid files, but the taxonomic identifier is not contained in the taxdump anymore. In this case we either try to take the taxonomic identifier of the next sequence that was clustered into this entry or leave this entry unannotated (thus it cannot contribute to LCA computation despite being findable through searching). For nearly all sequences the mapping procedure works correctly (331375261 vs 331433500). The remaining 50K entries are however kind of tricky and we don't have a good solution yet to get a taxonomic identifier automatically for those.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/381#issuecomment-744417949
https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-740497921:1583,Usability,simpl,simplify,1583,"Thanks for the answer, find below the results. # Result of bt. `#0 0x00000000006c9ef3 in IndexTable::sortDBSeqLists (); #1 0x00007efc5116705f in GOMP_parallel () from /env/ig/soft/ig/gcc-7.3.0/el6-x86_64-generic/lib64/libgomp.so.1; #2 0x00000000006c5935 in IndexBuilder::fillDatabase(IndexTable*, SequenceLookup**, SequenceLookup**, BaseMatrix&, Sequence*, DBReader<unsigned int>*, unsigned long, unsigned long, int, bool, bool) (); #3 0x00000000004e0049 in Prefiltering::getIndexTable (); #4 0x00000000004ebdcd in Prefiltering::Prefiltering(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, int, Parameters const&) (); #5 0x00000000004df035 in prefilter(int, char const**, Command const&) (); #6 0x00000000004587f0 in runCommand(Command*, int, char const**) (); #7 0x000000000044a1f0 in main ()`. # Result of ps. `Warning: bad syntax, perhaps a bogus '-'? See /usr/share/doc/procps-3.2.8/FAQ; jarnoux 96787 99.4 0.7 5468368 2884544 ? Rl Dec07 993:48 mmseqs prefilter /dev/shm/U5yXKTXUDw/FRAG/panfam_frag_subDB /dev/shm/U5yXKTXUDw/FRAG/panfam_frag_subDB /dev/shm/U5yXKTXUDw/CLUST/PanFam8080/panfam_pref --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 2 --split-memory-limit 250G --threads 32; jarnoux 150328 0.0 0.0 103360 920 pts/0 S+ 10:14 0:00 grep mmseqs`. # Others. I try to simplify like this prefilter+align = search and prefilter+align+clust=cluster. It's look working for the time.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-740497921
https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741791452:93,Deployability,install,install,93,"I can't reproduce the issue locally. It doesn't get stuck in the index building. How did you install MMseqs2 (condo, self-compiled etc?) Whats your hardware specs?. If your computer supports AVX2, please try using the avx2 binary at https://mmseqs.com/latest.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741791452
https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741805975:22,Availability,avail,available,22,"I use the source code available [here](https://github.com/soedinglab/MMseqs2/archive/12-113e3.tar.gz). . Here the specs : . Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 36; On-line CPU(s) list: 0-35; Thread(s) par coeur : 1; Coeur(s) par support CPU :18; Socket(s): 2; Noeud(s) NUMA : 2; ID du vendeur : GenuineIntel; Famille CPU : 6; Modèle : 79; Model name: Intel(R) Xeon(R) CPU E5-2697 v4 @ 2.30GHz; Version : 1; CPU MHz : 2300.113; BogoMIPS: 4599.34; Virtualisation : VT-x; L1d cache : 32K; L1i cache : 32K; L2 cache : 256K; L3 cache : 46080K; NUMA node0 CPU(s): 0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34; NUMA node1 CPU(s): 1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741805975
https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741805975:526,Performance,cache,cache,526,"I use the source code available [here](https://github.com/soedinglab/MMseqs2/archive/12-113e3.tar.gz). . Here the specs : . Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 36; On-line CPU(s) list: 0-35; Thread(s) par coeur : 1; Coeur(s) par support CPU :18; Socket(s): 2; Noeud(s) NUMA : 2; ID du vendeur : GenuineIntel; Famille CPU : 6; Modèle : 79; Model name: Intel(R) Xeon(R) CPU E5-2697 v4 @ 2.30GHz; Version : 1; CPU MHz : 2300.113; BogoMIPS: 4599.34; Virtualisation : VT-x; L1d cache : 32K; L1i cache : 32K; L2 cache : 256K; L3 cache : 46080K; NUMA node0 CPU(s): 0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34; NUMA node1 CPU(s): 1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741805975
https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741805975:543,Performance,cache,cache,543,"I use the source code available [here](https://github.com/soedinglab/MMseqs2/archive/12-113e3.tar.gz). . Here the specs : . Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 36; On-line CPU(s) list: 0-35; Thread(s) par coeur : 1; Coeur(s) par support CPU :18; Socket(s): 2; Noeud(s) NUMA : 2; ID du vendeur : GenuineIntel; Famille CPU : 6; Modèle : 79; Model name: Intel(R) Xeon(R) CPU E5-2697 v4 @ 2.30GHz; Version : 1; CPU MHz : 2300.113; BogoMIPS: 4599.34; Virtualisation : VT-x; L1d cache : 32K; L1i cache : 32K; L2 cache : 256K; L3 cache : 46080K; NUMA node0 CPU(s): 0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34; NUMA node1 CPU(s): 1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741805975
https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741805975:559,Performance,cache,cache,559,"I use the source code available [here](https://github.com/soedinglab/MMseqs2/archive/12-113e3.tar.gz). . Here the specs : . Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 36; On-line CPU(s) list: 0-35; Thread(s) par coeur : 1; Coeur(s) par support CPU :18; Socket(s): 2; Noeud(s) NUMA : 2; ID du vendeur : GenuineIntel; Famille CPU : 6; Modèle : 79; Model name: Intel(R) Xeon(R) CPU E5-2697 v4 @ 2.30GHz; Version : 1; CPU MHz : 2300.113; BogoMIPS: 4599.34; Virtualisation : VT-x; L1d cache : 32K; L1i cache : 32K; L2 cache : 256K; L3 cache : 46080K; NUMA node0 CPU(s): 0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34; NUMA node1 CPU(s): 1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741805975
https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741805975:576,Performance,cache,cache,576,"I use the source code available [here](https://github.com/soedinglab/MMseqs2/archive/12-113e3.tar.gz). . Here the specs : . Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 36; On-line CPU(s) list: 0-35; Thread(s) par coeur : 1; Coeur(s) par support CPU :18; Socket(s): 2; Noeud(s) NUMA : 2; ID du vendeur : GenuineIntel; Famille CPU : 6; Modèle : 79; Model name: Intel(R) Xeon(R) CPU E5-2697 v4 @ 2.30GHz; Version : 1; CPU MHz : 2300.113; BogoMIPS: 4599.34; Virtualisation : VT-x; L1d cache : 32K; L1i cache : 32K; L2 cache : 256K; L3 cache : 46080K; NUMA node0 CPU(s): 0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34; NUMA node1 CPU(s): 1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741805975
https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741817483:65,Deployability,install,install,65,"Okay I will try to change the temporary directory. I will see to install the avx2 binary too. Thanks for your help, I will test all this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741817483
https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741817483:123,Testability,test,test,123,"Okay I will try to change the temporary directory. I will see to install the avx2 binary too. Thanks for your help, I will test all this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741817483
https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-744279206:17,Deployability,install,install,17,"Hi,. I use a new install of mmseqs2 and I change the temporary directory. Now it's work. . Thanks for your help.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-744279206
https://github.com/soedinglab/MMseqs2/issues/383#issuecomment-744474518:20,Availability,down,download,20,"I think you have to download the NT first (e.g. with BLAST's `update_blastdb.pl`) and then you can theoretically use `blastdbcmd` for the remaining commands. However, I am not sure if the procedure described in the wiki still works with NCBI's recent change to the V5 database format. As far as I remember, it shouldn't work anymore. You might still be able to download the V4 format BLAST NT with `update_blastdb.pl`. By the way, the new algorithm described in the preprint currently only works against protein databases. The search against nucleotide databases (such as the NT) still uses the older slower algorithm.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/383#issuecomment-744474518
https://github.com/soedinglab/MMseqs2/issues/383#issuecomment-744474518:361,Availability,down,download,361,"I think you have to download the NT first (e.g. with BLAST's `update_blastdb.pl`) and then you can theoretically use `blastdbcmd` for the remaining commands. However, I am not sure if the procedure described in the wiki still works with NCBI's recent change to the V5 database format. As far as I remember, it shouldn't work anymore. You might still be able to download the V4 format BLAST NT with `update_blastdb.pl`. By the way, the new algorithm described in the preprint currently only works against protein databases. The search against nucleotide databases (such as the NT) still uses the older slower algorithm.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/383#issuecomment-744474518
https://github.com/soedinglab/MMseqs2/issues/383#issuecomment-1097182040:52,Availability,error,error,52,Was this issue ever resolved? I am getting the same error trying to build a database using blastdbcmd with NCBI nr.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/383#issuecomment-1097182040
https://github.com/soedinglab/MMseqs2/issues/384#issuecomment-742564711:51,Deployability,pipeline,pipeline,51,"That parameter is gone since a while. The Uniclust pipeline would require multiple changes to use with the latest MMseqs2. As the UniRef team is now also using MMseqs2 and are graciously providing us with their clusterings, we now only produce HHsuite databases based on these and have stopped using the Uniclust pipeline.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/384#issuecomment-742564711
https://github.com/soedinglab/MMseqs2/issues/384#issuecomment-742564711:313,Deployability,pipeline,pipeline,313,"That parameter is gone since a while. The Uniclust pipeline would require multiple changes to use with the latest MMseqs2. As the UniRef team is now also using MMseqs2 and are graciously providing us with their clusterings, we now only produce HHsuite databases based on these and have stopped using the Uniclust pipeline.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/384#issuecomment-742564711
https://github.com/soedinglab/MMseqs2/issues/384#issuecomment-743114975:18,Availability,avail,available,18,"The clustering is available on the website: http://wwwuser.gwdg.de/~compbiol/uniclust/2018_08/; However, there is no Uniclust50 HHsuite database.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/384#issuecomment-743114975
https://github.com/soedinglab/MMseqs2/issues/385#issuecomment-742763807:69,Availability,down,download,69,Please try the git version of MMseqs2 (either compile from source or download from https://mmseqs.com/latest). The recent changes from the just published preprint or not part of the latest released version yet.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/385#issuecomment-742763807
https://github.com/soedinglab/MMseqs2/issues/385#issuecomment-742763807:189,Deployability,release,released,189,Please try the git version of MMseqs2 (either compile from source or download from https://mmseqs.com/latest). The recent changes from the just published preprint or not part of the latest released version yet.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/385#issuecomment-742763807
https://github.com/soedinglab/MMseqs2/issues/385#issuecomment-744013366:23,Deployability,install,installed,23,"On my first try, I had installed mmseqs2 with conda. Then, I used the git version, it was faster ~8 hrs. However, I am thinking if this is expected or if it is still slow. Any thoughts?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/385#issuecomment-744013366
https://github.com/soedinglab/MMseqs2/issues/385#issuecomment-744418706:24,Testability,log,log,24,Could you post the full log output of MMseqs2?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/385#issuecomment-744418706
https://github.com/soedinglab/MMseqs2/issues/386#issuecomment-744325996:40,Testability,benchmark,benchmarking,40,"I have the same issue with annotating a benchmarking dataset, but out of 56k contigs it annotates only ~300.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/386#issuecomment-744325996
https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-744803194:12,Deployability,release,release,12,"No official release quite yet, but the latest git version already contains the new algorithm. ; You can either compile from source or use the precompiled static binaries at [mmseqs.com/latest](https://mmseqs.com/latest).; We'll also make a release soonish.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-744803194
https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-744803194:240,Deployability,release,release,240,"No official release quite yet, but the latest git version already contains the new algorithm. ; You can either compile from source or use the precompiled static binaries at [mmseqs.com/latest](https://mmseqs.com/latest).; We'll also make a release soonish.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-744803194
https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-756416360:145,Availability,error,error,145,"Hi @milot-mirdita,. I have successfully installed the precompiled version of the latest mmseqs. But when I run my script It keeps throwing me an error says:. ```; Input database ""./results/contigs/mmseqs_aa_out/taxonomyResult"" is wrong!; Current input: Taxonomy. Allowed input: Alignment; ```. when I switch to the old version, I don't see this error. . Is there any advice on that?. Thanks very much!!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-756416360
https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-756416360:345,Availability,error,error,345,"Hi @milot-mirdita,. I have successfully installed the precompiled version of the latest mmseqs. But when I run my script It keeps throwing me an error says:. ```; Input database ""./results/contigs/mmseqs_aa_out/taxonomyResult"" is wrong!; Current input: Taxonomy. Allowed input: Alignment; ```. when I switch to the old version, I don't see this error. . Is there any advice on that?. Thanks very much!!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-756416360
https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-756416360:40,Deployability,install,installed,40,"Hi @milot-mirdita,. I have successfully installed the precompiled version of the latest mmseqs. But when I run my script It keeps throwing me an error says:. ```; Input database ""./results/contigs/mmseqs_aa_out/taxonomyResult"" is wrong!; Current input: Taxonomy. Allowed input: Alignment; ```. when I switch to the old version, I don't see this error. . Is there any advice on that?. Thanks very much!!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-756416360
https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-757961804:122,Deployability,update,update,122,"I assume you are using the `easy-taxonomy`? I think it's currently broken, I am in the process of fixing that again. I'll update you once everything works again.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-757961804
https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759543900:579,Availability,error,error,579,"Hi @milot-mirdita,. Actually I'm not using the easy-taxonomy module. This is what I used in my previous script:; ```; /home/leranwang/mmseqs/bin/mmseqs lca $DB $OUT/taxonomyResult $OUT/lcaDB --tax-lineage true \; --lca-ranks ""superkingdom:phylum:class:order:family:genus:species"";; ```. And here is what I modified:. ```; /home/leranwang/mmseqs/bin/mmseqs majoritylca $DB $OUT/taxonomyResult $OUT/lcaDB --tax-lineage true \; --lca-ranks ""superkingdom:phylum:class:order:family:genus:species"";; ```. So as you can see, I just switched from ""lca"" to ""majoritylca"", then I got this error. I was wondering if there were other modifications in my previous steps required before using this majoritylca module? . For our reference, the modules I have been using in my script are (in order):. mmseqs createdb; mmseqs taxonomy; mmseqs convertalis; mmseqs majoritylca; mmseqs createtsv; mmseqs taxonomyreport. Thank you!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759543900
https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759664504:77,Availability,error,error,77,"Thanks @milot-mirdita! After reinstalling the updated version from git, that error is gone. But I got a new one says:. ```; majoritylca /scratch/ref/hecatomb_databases/virus_uniprot/targetDB ./results/contigs/mmseqs_aa_out/taxonomyResult ./results/contigs/mmseqs_aa_out/lcaDB --tax-lineage 1 --lca-ranks superkingdom,phylum,class,order,family,genus,species . MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Majority threshold 0.5; Vote mode 1; LCA ranks superkingdom,phylum,class,order,family,genus,species; Taxon blacklist 12908,28384; Column with taxonomic lineage 1; Compressed 0; Threads 24; Verbosity 3. Loading NCBI taxonomy; Loading nodes file ... Done, got 2227973 nodes; Loading merged file ... Done, added 56613 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Computing LCA; [====taxonid: 1046081 does not match a legal taxonomy node.; ================================taxonid: 1046081 does not match a legal taxonomy node.; ===============taxonid: 1046081 does not match a legal taxonomy node.; =============. ```. So..do you have any suggestion on this one?. Thank you!!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759664504
https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759664504:46,Deployability,update,updated,46,"Thanks @milot-mirdita! After reinstalling the updated version from git, that error is gone. But I got a new one says:. ```; majoritylca /scratch/ref/hecatomb_databases/virus_uniprot/targetDB ./results/contigs/mmseqs_aa_out/taxonomyResult ./results/contigs/mmseqs_aa_out/lcaDB --tax-lineage 1 --lca-ranks superkingdom,phylum,class,order,family,genus,species . MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Majority threshold 0.5; Vote mode 1; LCA ranks superkingdom,phylum,class,order,family,genus,species; Taxon blacklist 12908,28384; Column with taxonomic lineage 1; Compressed 0; Threads 24; Verbosity 3. Loading NCBI taxonomy; Loading nodes file ... Done, got 2227973 nodes; Loading merged file ... Done, added 56613 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Computing LCA; [====taxonid: 1046081 does not match a legal taxonomy node.; ================================taxonid: 1046081 does not match a legal taxonomy node.; ===============taxonid: 1046081 does not match a legal taxonomy node.; =============. ```. So..do you have any suggestion on this one?. Thank you!!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759664504
https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759664504:619,Performance,Load,Loading,619,"Thanks @milot-mirdita! After reinstalling the updated version from git, that error is gone. But I got a new one says:. ```; majoritylca /scratch/ref/hecatomb_databases/virus_uniprot/targetDB ./results/contigs/mmseqs_aa_out/taxonomyResult ./results/contigs/mmseqs_aa_out/lcaDB --tax-lineage 1 --lca-ranks superkingdom,phylum,class,order,family,genus,species . MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Majority threshold 0.5; Vote mode 1; LCA ranks superkingdom,phylum,class,order,family,genus,species; Taxon blacklist 12908,28384; Column with taxonomic lineage 1; Compressed 0; Threads 24; Verbosity 3. Loading NCBI taxonomy; Loading nodes file ... Done, got 2227973 nodes; Loading merged file ... Done, added 56613 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Computing LCA; [====taxonid: 1046081 does not match a legal taxonomy node.; ================================taxonid: 1046081 does not match a legal taxonomy node.; ===============taxonid: 1046081 does not match a legal taxonomy node.; =============. ```. So..do you have any suggestion on this one?. Thank you!!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759664504
https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759664504:642,Performance,Load,Loading,642,"Thanks @milot-mirdita! After reinstalling the updated version from git, that error is gone. But I got a new one says:. ```; majoritylca /scratch/ref/hecatomb_databases/virus_uniprot/targetDB ./results/contigs/mmseqs_aa_out/taxonomyResult ./results/contigs/mmseqs_aa_out/lcaDB --tax-lineage 1 --lca-ranks superkingdom,phylum,class,order,family,genus,species . MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Majority threshold 0.5; Vote mode 1; LCA ranks superkingdom,phylum,class,order,family,genus,species; Taxon blacklist 12908,28384; Column with taxonomic lineage 1; Compressed 0; Threads 24; Verbosity 3. Loading NCBI taxonomy; Loading nodes file ... Done, got 2227973 nodes; Loading merged file ... Done, added 56613 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Computing LCA; [====taxonid: 1046081 does not match a legal taxonomy node.; ================================taxonid: 1046081 does not match a legal taxonomy node.; ===============taxonid: 1046081 does not match a legal taxonomy node.; =============. ```. So..do you have any suggestion on this one?. Thank you!!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759664504
https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759664504:690,Performance,Load,Loading,690,"Thanks @milot-mirdita! After reinstalling the updated version from git, that error is gone. But I got a new one says:. ```; majoritylca /scratch/ref/hecatomb_databases/virus_uniprot/targetDB ./results/contigs/mmseqs_aa_out/taxonomyResult ./results/contigs/mmseqs_aa_out/lcaDB --tax-lineage 1 --lca-ranks superkingdom,phylum,class,order,family,genus,species . MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Majority threshold 0.5; Vote mode 1; LCA ranks superkingdom,phylum,class,order,family,genus,species; Taxon blacklist 12908,28384; Column with taxonomic lineage 1; Compressed 0; Threads 24; Verbosity 3. Loading NCBI taxonomy; Loading nodes file ... Done, got 2227973 nodes; Loading merged file ... Done, added 56613 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Computing LCA; [====taxonid: 1046081 does not match a legal taxonomy node.; ================================taxonid: 1046081 does not match a legal taxonomy node.; ===============taxonid: 1046081 does not match a legal taxonomy node.; =============. ```. So..do you have any suggestion on this one?. Thank you!!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759664504
https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759664504:747,Performance,Load,Loading,747,"Thanks @milot-mirdita! After reinstalling the updated version from git, that error is gone. But I got a new one says:. ```; majoritylca /scratch/ref/hecatomb_databases/virus_uniprot/targetDB ./results/contigs/mmseqs_aa_out/taxonomyResult ./results/contigs/mmseqs_aa_out/lcaDB --tax-lineage 1 --lca-ranks superkingdom,phylum,class,order,family,genus,species . MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Majority threshold 0.5; Vote mode 1; LCA ranks superkingdom,phylum,class,order,family,genus,species; Taxon blacklist 12908,28384; Column with taxonomic lineage 1; Compressed 0; Threads 24; Verbosity 3. Loading NCBI taxonomy; Loading nodes file ... Done, got 2227973 nodes; Loading merged file ... Done, added 56613 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Computing LCA; [====taxonid: 1046081 does not match a legal taxonomy node.; ================================taxonid: 1046081 does not match a legal taxonomy node.; ===============taxonid: 1046081 does not match a legal taxonomy node.; =============. ```. So..do you have any suggestion on this one?. Thank you!!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759664504
https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759696735:237,Deployability,configurat,configuration,237,"Hi @milot-mirdita ,. I found this 1046081 in our targetDB.lookup file, which looks like this:. ```; >grep 1046081 targetDB.lookup; 1046081	A0A0U2C0X9	0; ```. I wondered if the new version of mmseqs expects this file to be in a different configuration? Like maybe no row number, but directly ""A0A0U2C0X9""? Or what format of the ""legal taxonomy node"" it looks for?. Thank you!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759696735
https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759696735:237,Modifiability,config,configuration,237,"Hi @milot-mirdita ,. I found this 1046081 in our targetDB.lookup file, which looks like this:. ```; >grep 1046081 targetDB.lookup; 1046081	A0A0U2C0X9	0; ```. I wondered if the new version of mmseqs expects this file to be in a different configuration? Like maybe no row number, but directly ""A0A0U2C0X9""? Or what format of the ""legal taxonomy node"" it looks for?. Thank you!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759696735
https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-762299994:68,Security,access,accession,68,"This looks about right. The `.lookup` contains mmseqs database key, accession, set id. The set id is referenced in the `.source` file. There you will find a list of set id and filename (the filename that was given to `createdb`). How does the corresponding `_mapping` entry look?; I would expect it to look like this (mmseqs database key tab taxonomy id):; ```; >grep 1046081 targetDB_mapping; 1046081\t2560625; ```. (Sorry for the slow answers, was a quite busy start into the new year.)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-762299994
https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-795950334:3,Availability,down,downloaded,3,"We downloaded all of the UniProt entries for viruses from the UniProt website, and clustered them with CD-Hit at with -c 0.99. Then we run mmseqs createdb on that file.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-795950334
https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-745433666:788,Performance,perform,perform,788,"I noticed only after I wrote my answer below that you are trying to use nucleotides for profiles. We don't support that, as nulceotide searches below 80% sequence identity don't tend to be very useful, and normal sequence search is more than sufficient for that. -----. If you had protein input you could do this:. If each database entry is a normal aligned FASTA MSA, then you should be able to give this database to `msa2profile`.; `msa2profile` expects a special database type (11 for MSA db) though:; ```; awk 'BEGIN { printf(""%c%c%c%c"",11,0,0,0); exit; }' > AthselfDBSEQ_msa.dbtype ; mmseqs msa2profile AthselfDBSEQ_msa AthselfDBSEQ_profile ...; ```; Usually you don't want global MSAs for profile computation though. Generally from experience, local alignments to a center sequence perform better.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-745433666
https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-747471744:180,Availability,error,error,180,"Thanks a lot for offering your help, we will check how to make this a project. It's really kind of you. I have tried indexing with --max-seq-len 30000 but the search then run into error:; mmseqs createindex Ath /tmp/ --search-type 3 --max-seq-len 30000; mmseqs search Ath Ath AthDB /tmp --search-type 3 --max-seq-len 30000; Writing results to: AthDB; terminate called after throwing an instance of 'std::logic_error' ] 0.00% 1 eta -; what(): basic_string::_M_construct null not valid; /tmp/16276944363020795345/blastn.sh: line 66: 15898 Aborted ""$MMSEQS"" offsetalignment ""$1"" ""${QUERY}"" ""$2"" ""${TARGET}"" ""$4/aln"" ""$3"" ${OFFSETALIGNMENT_PAR}; Error: Offset step died. Ath, being the genome database (query and target)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-747471744
https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-747471744:642,Availability,Error,Error,642,"Thanks a lot for offering your help, we will check how to make this a project. It's really kind of you. I have tried indexing with --max-seq-len 30000 but the search then run into error:; mmseqs createindex Ath /tmp/ --search-type 3 --max-seq-len 30000; mmseqs search Ath Ath AthDB /tmp --search-type 3 --max-seq-len 30000; Writing results to: AthDB; terminate called after throwing an instance of 'std::logic_error' ] 0.00% 1 eta -; what(): basic_string::_M_construct null not valid; /tmp/16276944363020795345/blastn.sh: line 66: 15898 Aborted ""$MMSEQS"" offsetalignment ""$1"" ""${QUERY}"" ""$2"" ""${TARGET}"" ""$4/aln"" ""$3"" ${OFFSETALIGNMENT_PAR}; Error: Offset step died. Ath, being the genome database (query and target)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-747471744
https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-747471744:537,Safety,Abort,Aborted,537,"Thanks a lot for offering your help, we will check how to make this a project. It's really kind of you. I have tried indexing with --max-seq-len 30000 but the search then run into error:; mmseqs createindex Ath /tmp/ --search-type 3 --max-seq-len 30000; mmseqs search Ath Ath AthDB /tmp --search-type 3 --max-seq-len 30000; Writing results to: AthDB; terminate called after throwing an instance of 'std::logic_error' ] 0.00% 1 eta -; what(): basic_string::_M_construct null not valid; /tmp/16276944363020795345/blastn.sh: line 66: 15898 Aborted ""$MMSEQS"" offsetalignment ""$1"" ""${QUERY}"" ""$2"" ""${TARGET}"" ""$4/aln"" ""$3"" ${OFFSETALIGNMENT_PAR}; Error: Offset step died. Ath, being the genome database (query and target)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-747471744
https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-750402275:65,Availability,error,error,65,I have tried the search against nucleotide db with the following error:; mmseqs search AthselfDBSEQ_profile Ath resdb tmp; Invalid input database and --search-type combination; queryDbType: Profile; targetDbType: Nucleotide; targetSrcDbType: Nucleotide; searchMode: 0. or with --search-type 3:; mmseqs search AthselfDBSEQ_profile Ath resdb tmp --search-type 3; Invalid input database and --search-type combination; queryDbType: Profile; targetDbType: Nucleotide; targetSrcDbType: Nucleotide; searchMode: 3. Is there any specific search-type when using profile against dna?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-750402275
https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-750566414:233,Integrability,rout,route,233,"Sorry, I misunderstood you. Any combination of profiles and nucleotides will not currently. Adding nucleotide profile support to HHblits would be a far more difficult task than doing that in MMseqs2. I would not recommend going that route.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-750566414
https://github.com/soedinglab/MMseqs2/pull/389#issuecomment-755369024:90,Deployability,release,release,90,I unprefixed the MMseqs2 macros and replaced our undefined version xxhash with the latest release v0.8.; I'll merge once I get a green light from the CI. Thanks a lot :),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/389#issuecomment-755369024
https://github.com/soedinglab/MMseqs2/pull/389#issuecomment-755369024:129,Energy Efficiency,green,green,129,I unprefixed the MMseqs2 macros and replaced our undefined version xxhash with the latest release v0.8.; I'll merge once I get a green light from the CI. Thanks a lot :),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/389#issuecomment-755369024
https://github.com/soedinglab/MMseqs2/pull/389#issuecomment-756104658:232,Availability,mainten,maintenance,232,"I guess we could remove the arm subfolder, however it's already part of the git history anyway, so it doesn't change that much anymore. It would be nice to have a repo similar to `simde-no-tests`, but I don't want these to become a maintenance burden for you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/389#issuecomment-756104658
https://github.com/soedinglab/MMseqs2/pull/389#issuecomment-756104658:189,Testability,test,tests,189,"I guess we could remove the arm subfolder, however it's already part of the git history anyway, so it doesn't change that much anymore. It would be nice to have a repo similar to `simde-no-tests`, but I don't want these to become a maintenance burden for you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/389#issuecomment-756104658
https://github.com/soedinglab/MMseqs2/issues/390#issuecomment-755029635:365,Usability,guid,guide,365,Thank you for this question. We have currently not documented this format. Here is the format definition: . ```; (1) Target identifier ; (2) Number of sequences aligning to target; (3) Unique coverage of target uniqueAlignedResidues / totalLength; (4) Target coverage alignedResidues / totalLength; (5) Average sequence identity; ```. I will also added it the user guide.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/390#issuecomment-755029635
https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-758752094:282,Availability,mask,mask,282,"Thanks for your fast response!; I can't reproduce the result, still facing problems with short peptides. . My commands are:. ```; mmseqs createdb IP.fasta IP_DB/IP_DB ; mmseqs createdb cryptic_DB.fasta Cryptic_DB/Cryptic_DB . mmseqs createindex IP_DB/IP_DB tmp --comp-bias-corr 0 --mask 0 -k 5; mmseqs createindex Cryptic_DB/Cryptic_DB tmp --comp-bias-corr 0 --mask 0 -k 5. mmseqs search \; --comp-bias-corr 0 --mask 0 -e inf \; --spaced-kmer-pattern 1101101 -k 5 \; --alignment-mode 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp. mmseqs filterdb result_DB/result_DB bestResultDB/bestResultDB; ```. Can you share the full command you used?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-758752094
https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-758752094:361,Availability,mask,mask,361,"Thanks for your fast response!; I can't reproduce the result, still facing problems with short peptides. . My commands are:. ```; mmseqs createdb IP.fasta IP_DB/IP_DB ; mmseqs createdb cryptic_DB.fasta Cryptic_DB/Cryptic_DB . mmseqs createindex IP_DB/IP_DB tmp --comp-bias-corr 0 --mask 0 -k 5; mmseqs createindex Cryptic_DB/Cryptic_DB tmp --comp-bias-corr 0 --mask 0 -k 5. mmseqs search \; --comp-bias-corr 0 --mask 0 -e inf \; --spaced-kmer-pattern 1101101 -k 5 \; --alignment-mode 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp. mmseqs filterdb result_DB/result_DB bestResultDB/bestResultDB; ```. Can you share the full command you used?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-758752094
https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-758752094:412,Availability,mask,mask,412,"Thanks for your fast response!; I can't reproduce the result, still facing problems with short peptides. . My commands are:. ```; mmseqs createdb IP.fasta IP_DB/IP_DB ; mmseqs createdb cryptic_DB.fasta Cryptic_DB/Cryptic_DB . mmseqs createindex IP_DB/IP_DB tmp --comp-bias-corr 0 --mask 0 -k 5; mmseqs createindex Cryptic_DB/Cryptic_DB tmp --comp-bias-corr 0 --mask 0 -k 5. mmseqs search \; --comp-bias-corr 0 --mask 0 -e inf \; --spaced-kmer-pattern 1101101 -k 5 \; --alignment-mode 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp. mmseqs filterdb result_DB/result_DB bestResultDB/bestResultDB; ```. Can you share the full command you used?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-758752094
https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-767698082:644,Availability,Mask,Masking,644,"In order to identify the best settings I have changed the search conditions. Now looking for a set of ~11K peptides (8-15 mers) against the human proteome. All the peptides are known to occur at least once in the target database. . My findings over the last week:; 1. not running `createindex` helps; 2. In order to find 8-mer peptides the `--spaced-kmer-pattern 110111 -k 5` or any other with 1 non-informative positions works. When increasing the number of non-informative positions or using 6-mers, numbers of detected 8-mer peptides drop dramatically. Changing the non-informative position leads to different peptides not being found. ; 3. Masking and compositional bias correction at 0 helps; 4. `--exact-kmer-matching` increases the numbers of detected peptides, alternatively I was able to reach similar numbers of detected peptides by running an iterative search with a lot of iterative searches which was slower. ; 5. `mmseqs search` was producing false-positive mappings, fixed by using `map`. These I have identified manually. . As a result, the current command looks like this:; ```; mmseqs map --comp-bias-corr 0 --mask 0 -e inf --max-seqs 300 --exact-kmer-matching 1 \; --spaced-kmer-pattern 110111 -k 5 -a 1 --min-seq-id 1 \; IP_nonspliced_DB/IP_nonspliced_DB proteome_DB/proteome_DB result_DB/result_DB tmp; ```. This yields 98-99% of the peptides mapped to the proteome. ; When using the translated genome database which is the actual target I see ~90% peptides mapped.; 100% true positive mapping without mismatches is my main goal when using mmseqs, because in the experiment context it is very important to find peptides even if they are mapped only to a single location and all the other locations for multi-mappers. . Can this result be improved to 100% or is this the limit in your opinion?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-767698082
https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-767698082:1128,Availability,mask,mask,1128,"In order to identify the best settings I have changed the search conditions. Now looking for a set of ~11K peptides (8-15 mers) against the human proteome. All the peptides are known to occur at least once in the target database. . My findings over the last week:; 1. not running `createindex` helps; 2. In order to find 8-mer peptides the `--spaced-kmer-pattern 110111 -k 5` or any other with 1 non-informative positions works. When increasing the number of non-informative positions or using 6-mers, numbers of detected 8-mer peptides drop dramatically. Changing the non-informative position leads to different peptides not being found. ; 3. Masking and compositional bias correction at 0 helps; 4. `--exact-kmer-matching` increases the numbers of detected peptides, alternatively I was able to reach similar numbers of detected peptides by running an iterative search with a lot of iterative searches which was slower. ; 5. `mmseqs search` was producing false-positive mappings, fixed by using `map`. These I have identified manually. . As a result, the current command looks like this:; ```; mmseqs map --comp-bias-corr 0 --mask 0 -e inf --max-seqs 300 --exact-kmer-matching 1 \; --spaced-kmer-pattern 110111 -k 5 -a 1 --min-seq-id 1 \; IP_nonspliced_DB/IP_nonspliced_DB proteome_DB/proteome_DB result_DB/result_DB tmp; ```. This yields 98-99% of the peptides mapped to the proteome. ; When using the translated genome database which is the actual target I see ~90% peptides mapped.; 100% true positive mapping without mismatches is my main goal when using mmseqs, because in the experiment context it is very important to find peptides even if they are mapped only to a single location and all the other locations for multi-mappers. . Can this result be improved to 100% or is this the limit in your opinion?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-767698082
https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-767698082:513,Safety,detect,detected,513,"In order to identify the best settings I have changed the search conditions. Now looking for a set of ~11K peptides (8-15 mers) against the human proteome. All the peptides are known to occur at least once in the target database. . My findings over the last week:; 1. not running `createindex` helps; 2. In order to find 8-mer peptides the `--spaced-kmer-pattern 110111 -k 5` or any other with 1 non-informative positions works. When increasing the number of non-informative positions or using 6-mers, numbers of detected 8-mer peptides drop dramatically. Changing the non-informative position leads to different peptides not being found. ; 3. Masking and compositional bias correction at 0 helps; 4. `--exact-kmer-matching` increases the numbers of detected peptides, alternatively I was able to reach similar numbers of detected peptides by running an iterative search with a lot of iterative searches which was slower. ; 5. `mmseqs search` was producing false-positive mappings, fixed by using `map`. These I have identified manually. . As a result, the current command looks like this:; ```; mmseqs map --comp-bias-corr 0 --mask 0 -e inf --max-seqs 300 --exact-kmer-matching 1 \; --spaced-kmer-pattern 110111 -k 5 -a 1 --min-seq-id 1 \; IP_nonspliced_DB/IP_nonspliced_DB proteome_DB/proteome_DB result_DB/result_DB tmp; ```. This yields 98-99% of the peptides mapped to the proteome. ; When using the translated genome database which is the actual target I see ~90% peptides mapped.; 100% true positive mapping without mismatches is my main goal when using mmseqs, because in the experiment context it is very important to find peptides even if they are mapped only to a single location and all the other locations for multi-mappers. . Can this result be improved to 100% or is this the limit in your opinion?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-767698082
https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-767698082:750,Safety,detect,detected,750,"In order to identify the best settings I have changed the search conditions. Now looking for a set of ~11K peptides (8-15 mers) against the human proteome. All the peptides are known to occur at least once in the target database. . My findings over the last week:; 1. not running `createindex` helps; 2. In order to find 8-mer peptides the `--spaced-kmer-pattern 110111 -k 5` or any other with 1 non-informative positions works. When increasing the number of non-informative positions or using 6-mers, numbers of detected 8-mer peptides drop dramatically. Changing the non-informative position leads to different peptides not being found. ; 3. Masking and compositional bias correction at 0 helps; 4. `--exact-kmer-matching` increases the numbers of detected peptides, alternatively I was able to reach similar numbers of detected peptides by running an iterative search with a lot of iterative searches which was slower. ; 5. `mmseqs search` was producing false-positive mappings, fixed by using `map`. These I have identified manually. . As a result, the current command looks like this:; ```; mmseqs map --comp-bias-corr 0 --mask 0 -e inf --max-seqs 300 --exact-kmer-matching 1 \; --spaced-kmer-pattern 110111 -k 5 -a 1 --min-seq-id 1 \; IP_nonspliced_DB/IP_nonspliced_DB proteome_DB/proteome_DB result_DB/result_DB tmp; ```. This yields 98-99% of the peptides mapped to the proteome. ; When using the translated genome database which is the actual target I see ~90% peptides mapped.; 100% true positive mapping without mismatches is my main goal when using mmseqs, because in the experiment context it is very important to find peptides even if they are mapped only to a single location and all the other locations for multi-mappers. . Can this result be improved to 100% or is this the limit in your opinion?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-767698082
https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-767698082:822,Safety,detect,detected,822,"In order to identify the best settings I have changed the search conditions. Now looking for a set of ~11K peptides (8-15 mers) against the human proteome. All the peptides are known to occur at least once in the target database. . My findings over the last week:; 1. not running `createindex` helps; 2. In order to find 8-mer peptides the `--spaced-kmer-pattern 110111 -k 5` or any other with 1 non-informative positions works. When increasing the number of non-informative positions or using 6-mers, numbers of detected 8-mer peptides drop dramatically. Changing the non-informative position leads to different peptides not being found. ; 3. Masking and compositional bias correction at 0 helps; 4. `--exact-kmer-matching` increases the numbers of detected peptides, alternatively I was able to reach similar numbers of detected peptides by running an iterative search with a lot of iterative searches which was slower. ; 5. `mmseqs search` was producing false-positive mappings, fixed by using `map`. These I have identified manually. . As a result, the current command looks like this:; ```; mmseqs map --comp-bias-corr 0 --mask 0 -e inf --max-seqs 300 --exact-kmer-matching 1 \; --spaced-kmer-pattern 110111 -k 5 -a 1 --min-seq-id 1 \; IP_nonspliced_DB/IP_nonspliced_DB proteome_DB/proteome_DB result_DB/result_DB tmp; ```. This yields 98-99% of the peptides mapped to the proteome. ; When using the translated genome database which is the actual target I see ~90% peptides mapped.; 100% true positive mapping without mismatches is my main goal when using mmseqs, because in the experiment context it is very important to find peptides even if they are mapped only to a single location and all the other locations for multi-mappers. . Can this result be improved to 100% or is this the limit in your opinion?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-767698082
https://github.com/soedinglab/MMseqs2/issues/392#issuecomment-1693133548:569,Testability,test,test,569,hey ! I am struggling using mmseqs map for the same issue. I tried what you @milot-mirdita suggested but apparently I am doing something wrong.; ```; mmseqs map queryDB resultDB tmp -e 10 --min-seq-id 0.1 . mmseqs filterdb resultDB bestResultDB --extract-lines 20 . mmseqs createsubdb bestResultDB queryDB queryDB_sub; rm -f -- queryDB_sub_h*; mmseqs createsubdb bestResultDB queryDB queryDB_sub_h. awk '{ print $1 }' bestResultDB.[0-9]* | sort -u > subset.list; mmseqs createsubdb subset.list queryDB queryDB_sub. mmseqs convert2fasta mmseqs convert2fasta queryDB_sub test.fasta. ```; In the fasta file I have 20 sequences but it is the same one repeated. ; Thanks a lot !,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/392#issuecomment-1693133548
https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762294329:1608,Availability,error,error,1608,"Hi Milot,. Thank you so much for the explanation. I was not sure if it was the chain or KOG and did not want to misinterpret it. Kathie; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: Monday, January 18, 2021 8:31 AM; To: soedinglab/MMseqs2 <MMseqs2@noreply.github.com>; Cc: Mihindukulasuriya, Kathie <mihindu@wustl.edu>; Author <author@noreply.github.com>; Subject: Re: [soedinglab/MMseqs2] interpretation of web mmseqs2 output (#393). * External Email - Caution *. I am not sure which output this exactly is. The server at web output of search.mmseqs.com gives a slightly different presentation. But how you listed it, I think it should be these columns:. query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln. target is the target identifier, in this case it's just a PDB identifier. The part after the _ is the PDB chain. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762286505>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ANDVLDIQ64ZCBT3HF3OERJDS2RA43ANCNFSM4WDGPERA>. ________________________________; The materials in this message are private and may contain Protected Healthcare Information or other information of a sensitive nature. If you are not the intended recipient, be advised that any unauthorized use, disclosure, copying or the taking of any action in reliance on the contents of this information is strictly prohibited. If you have received this email in error, please immediately notify the sender via telephone or return mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762294329
https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762294329:1263,Integrability,message,message,1263,"Hi Milot,. Thank you so much for the explanation. I was not sure if it was the chain or KOG and did not want to misinterpret it. Kathie; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: Monday, January 18, 2021 8:31 AM; To: soedinglab/MMseqs2 <MMseqs2@noreply.github.com>; Cc: Mihindukulasuriya, Kathie <mihindu@wustl.edu>; Author <author@noreply.github.com>; Subject: Re: [soedinglab/MMseqs2] interpretation of web mmseqs2 output (#393). * External Email - Caution *. I am not sure which output this exactly is. The server at web output of search.mmseqs.com gives a slightly different presentation. But how you listed it, I think it should be these columns:. query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln. target is the target identifier, in this case it's just a PDB identifier. The part after the _ is the PDB chain. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762286505>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ANDVLDIQ64ZCBT3HF3OERJDS2RA43ANCNFSM4WDGPERA>. ________________________________; The materials in this message are private and may contain Protected Healthcare Information or other information of a sensitive nature. If you are not the intended recipient, be advised that any unauthorized use, disclosure, copying or the taking of any action in reliance on the contents of this information is strictly prohibited. If you have received this email in error, please immediately notify the sender via telephone or return mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762294329
https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762298123:67,Availability,Down,Download,67,"I ran mmseqs2 on the web, choosing all databases and then clicked ""Download M8""; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: Monday, January 18, 2021 8:46 AM; To: soedinglab/MMseqs2 <MMseqs2@noreply.github.com>; Cc: Mihindukulasuriya, Kathie <mihindu@wustl.edu>; Author <author@noreply.github.com>; Subject: Re: [soedinglab/MMseqs2] interpretation of web mmseqs2 output (#393). * External Email - Caution *. Where exactly did you find this output? I probably should add an explanation there. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762295185>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ANDVLDNB2TDE2GSSTSCIU6TS2RCU3ANCNFSM4WDGPERA>. ________________________________; The materials in this message are private and may contain Protected Healthcare Information or other information of a sensitive nature. If you are not the intended recipient, be advised that any unauthorized use, disclosure, copying or the taking of any action in reliance on the contents of this information is strictly prohibited. If you have received this email in error, please immediately notify the sender via telephone or return mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762298123
https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762298123:1231,Availability,error,error,1231,"I ran mmseqs2 on the web, choosing all databases and then clicked ""Download M8""; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: Monday, January 18, 2021 8:46 AM; To: soedinglab/MMseqs2 <MMseqs2@noreply.github.com>; Cc: Mihindukulasuriya, Kathie <mihindu@wustl.edu>; Author <author@noreply.github.com>; Subject: Re: [soedinglab/MMseqs2] interpretation of web mmseqs2 output (#393). * External Email - Caution *. Where exactly did you find this output? I probably should add an explanation there. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762295185>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ANDVLDNB2TDE2GSSTSCIU6TS2RCU3ANCNFSM4WDGPERA>. ________________________________; The materials in this message are private and may contain Protected Healthcare Information or other information of a sensitive nature. If you are not the intended recipient, be advised that any unauthorized use, disclosure, copying or the taking of any action in reliance on the contents of this information is strictly prohibited. If you have received this email in error, please immediately notify the sender via telephone or return mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762298123
https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762298123:886,Integrability,message,message,886,"I ran mmseqs2 on the web, choosing all databases and then clicked ""Download M8""; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: Monday, January 18, 2021 8:46 AM; To: soedinglab/MMseqs2 <MMseqs2@noreply.github.com>; Cc: Mihindukulasuriya, Kathie <mihindu@wustl.edu>; Author <author@noreply.github.com>; Subject: Re: [soedinglab/MMseqs2] interpretation of web mmseqs2 output (#393). * External Email - Caution *. Where exactly did you find this output? I probably should add an explanation there. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762295185>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ANDVLDNB2TDE2GSSTSCIU6TS2RCU3ANCNFSM4WDGPERA>. ________________________________; The materials in this message are private and may contain Protected Healthcare Information or other information of a sensitive nature. If you are not the intended recipient, be advised that any unauthorized use, disclosure, copying or the taking of any action in reliance on the contents of this information is strictly prohibited. If you have received this email in error, please immediately notify the sender via telephone or return mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762298123
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762278641:593,Modifiability,extend,extend,593,"Do you have the tmp directory still? If you could run `swapdb` in a debugger that would be very helpful:. ```; gdb --args mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; ```. Then once you get a prompt enter `r` (for run) and press enter. Once it crashes enter `bt` (for backtrace) and press enter. ; Please copy the output and paste it here.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762278641
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762278641:646,Performance,load,load-mode,646,"Do you have the tmp directory still? If you could run `swapdb` in a debugger that would be very helpful:. ```; gdb --args mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; ```. Then once you get a prompt enter `r` (for run) and press enter. Once it crashes enter `bt` (for backtrace) and press enter. ; Please copy the output and paste it here.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762278641
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:1021,Deployability,configurat,configuration,1021,"Here is the gdb outputs:. $ gdb --args mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...(no debugging symbols found)...done.; (gdb) r; Starting program: /ebio/abt6_projects8/1001g_plus/code/Programs/miniconda3/envs/MMseqs2/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --com",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:1040,Deployability,configurat,configuration,1040,"Here is the gdb outputs:. $ gdb --args mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...(no debugging symbols found)...done.; (gdb) r; Starting program: /ebio/abt6_projects8/1001g_plus/code/Programs/miniconda3/envs/MMseqs2/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --com",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:545,Modifiability,extend,extend,545,"Thanks a lot for the help, Milot!; Here is the gdb outputs:. $ gdb --args mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...(no debugging symbols found)...done.; (gdb) r; Starting program: /ebio/abt6_projects8/1001g_plus/code/Programs/miniconda3/envs/MMseqs2/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-exte",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:975,Modifiability,config,configured,975,"Thanks a lot for the help, Milot!; Here is the gdb outputs:. $ gdb --args mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...(no debugging symbols found)...done.; (gdb) r; Starting program: /ebio/abt6_projects8/1001g_plus/code/Programs/miniconda3/envs/MMseqs2/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-exte",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:1021,Modifiability,config,configuration,1021,"Here is the gdb outputs:. $ gdb --args mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...(no debugging symbols found)...done.; (gdb) r; Starting program: /ebio/abt6_projects8/1001g_plus/code/Programs/miniconda3/envs/MMseqs2/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --com",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:1040,Modifiability,config,configuration,1040,"Here is the gdb outputs:. $ gdb --args mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...(no debugging symbols found)...done.; (gdb) r; Starting program: /ebio/abt6_projects8/1001g_plus/code/Programs/miniconda3/envs/MMseqs2/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --com",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:1997,Modifiability,extend,extend,1997,"ils.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...(no debugging symbols found)...done.; (gdb) r; Starting program: /ebio/abt6_projects8/1001g_plus/code/Programs/miniconda3/envs/MMseqs2/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . MMseqs Version: 	12.113e3; Substitution matrix	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	3.40282e+38; Split memory limit 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	256; Compressed 	0; Preload mode 	0; Verbosity 	3. [New Thread 0x7fac58648700 (LWP 183880)]; [New Thread 0x7fac57e47700 (L",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:2655,Modifiability,extend,extend,2655,"875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . MMseqs Version: 	12.113e3; Substitution matrix	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	3.40282e+38; Split memory limit 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	256; Compressed 	0; Preload mode 	0; Verbosity 	3. [New Thread 0x7fac58648700 (LWP 183880)]; [New Thread 0x7fac57e47700 (LWP 183881)]; [New Thread 0x7fac57646700 (LWP 183882)]; [New Thread 0x7face5571700 (LWP 184398)]; [New Thread 0x7face4d70700 (LWP 184399)]; [New Thread 0x7face456f700 (LWP 184400)]; [New Thread 0x7face3d6e700 (LWP 184401)]; [New Thread 0x7face356d700 (LWP 184402)]; [New Thread 0x7face2d6c700 (LWP 184403)]; [New Thread 0x7face256b700 (LWP 184404)]; [New Thread 0x7face1d6a700 (LWP 184405)]; [New Thread 0x7face1569700 (LWP 184406)]; [New Thread 0x7face0d68700 (LWP 184407)]; [New Thread 0x7face0567700 (LWP 184408)]; [New Thread 0x7facdfd66700 (LWP 184409)]; [New Thread 0x7facdf565700 (LWP 184410)];",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:598,Performance,load,load-mode,598,"Thanks a lot for the help, Milot!; Here is the gdb outputs:. $ gdb --args mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...(no debugging symbols found)...done.; (gdb) r; Starting program: /ebio/abt6_projects8/1001g_plus/code/Programs/miniconda3/envs/MMseqs2/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-exte",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:2050,Performance,load,load-mode,2050,"ils.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...(no debugging symbols found)...done.; (gdb) r; Starting program: /ebio/abt6_projects8/1001g_plus/code/Programs/miniconda3/envs/MMseqs2/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . MMseqs Version: 	12.113e3; Substitution matrix	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	3.40282e+38; Split memory limit 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	256; Compressed 	0; Preload mode 	0; Verbosity 	3. [New Thread 0x7fac58648700 (LWP 183880)]; [New Thread 0x7fac57e47700 (L",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:2708,Performance,load,load-mode,2708,"875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . MMseqs Version: 	12.113e3; Substitution matrix	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	3.40282e+38; Split memory limit 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	256; Compressed 	0; Preload mode 	0; Verbosity 	3. [New Thread 0x7fac58648700 (LWP 183880)]; [New Thread 0x7fac57e47700 (LWP 183881)]; [New Thread 0x7fac57646700 (LWP 183882)]; [New Thread 0x7face5571700 (LWP 184398)]; [New Thread 0x7face4d70700 (LWP 184399)]; [New Thread 0x7face456f700 (LWP 184400)]; [New Thread 0x7face3d6e700 (LWP 184401)]; [New Thread 0x7face356d700 (LWP 184402)]; [New Thread 0x7face2d6c700 (LWP 184403)]; [New Thread 0x7face256b700 (LWP 184404)]; [New Thread 0x7face1d6a700 (LWP 184405)]; [New Thread 0x7face1569700 (LWP 184406)]; [New Thread 0x7face0d68700 (LWP 184407)]; [New Thread 0x7face0567700 (LWP 184408)]; [New Thread 0x7facdfd66700 (LWP 184409)]; [New Thread 0x7facdf565700 (LWP 184410)];",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:36445,Performance,optimiz,optimized,36445,"hread 0x7f7418e00700 (LWP 184984)]; [New Thread 0x7f74185ff700 (LWP 184985)]; [New Thread 0x7f7417dfe700 (LWP 184986)]; [New Thread 0x7f74175fd700 (LWP 184987)]; Computing offsets.; [=================================================================] 100.00% 15.11M 19m 14s 460ms ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Thread 1 ""mmseqs"" received signal SIGABRT, Aborted.; __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; 51	../sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt ; #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; #1 0x00007ffff7438921 in __GI_abort () at abort.c:79; #2 0x00007ffff7ef6892 in __gnu_cxx::__verbose_terminate_handler () at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x00007ffff7ef4f69 in __cxxabiv1::__terminate (handler=<optimized out>) at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #4 0x00007ffff7ef4fab in std::terminate () at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #5 0x00007ffff7ef5194 in __cxxabiv1::__cxa_throw (obj=0x555555ae5950, tinfo=0x7ffff7fad300 <typeinfo for std::bad_alloc>, dest=0x7ffff7ef3c64 <std::bad_alloc::~bad_alloc()>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/eh_throw.cc:95; #6 0x00007ffff7ef556a in operator new (sz=610460681573) at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/build/build-cc-gcc-final/x86_64-conda-linux-gnu/libstdc++-v3/include/bits/exception.h:63; #7 0x000055555581a6b7 in doswap(Parameters&, bo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:35873,Safety,Abort,Aborted,35873," 184969)]; [New Thread 0x7f741fe0e700 (LWP 184970)]; [New Thread 0x7f741f60d700 (LWP 184971)]; [New Thread 0x7f741ee0c700 (LWP 184972)]; [New Thread 0x7f741e60b700 (LWP 184973)]; [New Thread 0x7f741de0a700 (LWP 184974)]; [New Thread 0x7f741d609700 (LWP 184975)]; [New Thread 0x7f741ce08700 (LWP 184976)]; [New Thread 0x7f741c607700 (LWP 184977)]; [New Thread 0x7f741be06700 (LWP 184978)]; [New Thread 0x7f741b605700 (LWP 184979)]; [New Thread 0x7f741ae04700 (LWP 184980)]; [New Thread 0x7f741a603700 (LWP 184981)]; [New Thread 0x7f7419e02700 (LWP 184982)]; [New Thread 0x7f7419601700 (LWP 184983)]; [New Thread 0x7f7418e00700 (LWP 184984)]; [New Thread 0x7f74185ff700 (LWP 184985)]; [New Thread 0x7f7417dfe700 (LWP 184986)]; [New Thread 0x7f74175fd700 (LWP 184987)]; Computing offsets.; [=================================================================] 100.00% 15.11M 19m 14s 460ms ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Thread 1 ""mmseqs"" received signal SIGABRT, Aborted.; __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; 51	../sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt ; #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; #1 0x00007ffff7438921 in __GI_abort () at abort.c:79; #2 0x00007ffff7ef6892 in __gnu_cxx::__verbose_terminate_handler () at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x00007ffff7ef4f69 in __cxxabiv1::__terminate (handler=<optimized out>) at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #4 0x00007ffff7ef4fab in std::terminate () at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #5 0x00007ffff7ef5194 in __cx",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:36148,Safety,abort,abort,36148,"ad 0x7f741ce08700 (LWP 184976)]; [New Thread 0x7f741c607700 (LWP 184977)]; [New Thread 0x7f741be06700 (LWP 184978)]; [New Thread 0x7f741b605700 (LWP 184979)]; [New Thread 0x7f741ae04700 (LWP 184980)]; [New Thread 0x7f741a603700 (LWP 184981)]; [New Thread 0x7f7419e02700 (LWP 184982)]; [New Thread 0x7f7419601700 (LWP 184983)]; [New Thread 0x7f7418e00700 (LWP 184984)]; [New Thread 0x7f74185ff700 (LWP 184985)]; [New Thread 0x7f7417dfe700 (LWP 184986)]; [New Thread 0x7f74175fd700 (LWP 184987)]; Computing offsets.; [=================================================================] 100.00% 15.11M 19m 14s 460ms ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Thread 1 ""mmseqs"" received signal SIGABRT, Aborted.; __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; 51	../sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt ; #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; #1 0x00007ffff7438921 in __GI_abort () at abort.c:79; #2 0x00007ffff7ef6892 in __gnu_cxx::__verbose_terminate_handler () at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x00007ffff7ef4f69 in __cxxabiv1::__terminate (handler=<optimized out>) at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #4 0x00007ffff7ef4fab in std::terminate () at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #5 0x00007ffff7ef5194 in __cxxabiv1::__cxa_throw (obj=0x555555ae5950, tinfo=0x7ffff7fad300 <typeinfo for std::bad_alloc>, dest=0x7ffff7ef3c64 <std::bad_alloc::~bad_alloc()>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc+",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762396410:10,Availability,down,download,10,Could you download the binary from https://mmseqs.com/archive/113e3212c137d026e297c7540e1fcd039f6812b1/mmseqs-linux-avx2.tar.gz and rerun it with this binary? It includes Debug symbols. The backtrace should be a bit more informative.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762396410
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:1013,Deployability,configurat,configuration,1013,"re informative:. gdb --args mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs/bin/mmseqs...done.; (gdb) r; Starting program: mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Usi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:1032,Deployability,configurat,configuration,1032,"re informative:. gdb --args mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs/bin/mmseqs...done.; (gdb) r; Starting program: mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Usi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:537,Modifiability,extend,extend,537,"Here it is. I hope it is more informative:. gdb --args mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs/bin/mmseqs...done.; (gdb) r; Starting program: mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:967,Modifiability,config,configured,967,"Here it is. I hope it is more informative:. gdb --args mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs/bin/mmseqs...done.; (gdb) r; Starting program: mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:1013,Modifiability,config,configuration,1013,"re informative:. gdb --args mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs/bin/mmseqs...done.; (gdb) r; Starting program: mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Usi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:1032,Modifiability,config,configuration,1032,"re informative:. gdb --args mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs/bin/mmseqs...done.; (gdb) r; Starting program: mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Usi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:1906,Modifiability,extend,extend,1906,"configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs/bin/mmseqs...done.; (gdb) r; Starting program: mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	3.40282e+38; Split memory limit 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	256; Compressed 	0; Preload mode 	0; Verbosity 	3. [New Thread 0x7fac59656700 (LWP 38112)]",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:2564,Modifiability,extend,extend,2564,"875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	3.40282e+38; Split memory limit 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	256; Compressed 	0; Preload mode 	0; Verbosity 	3. [New Thread 0x7fac59656700 (LWP 38112)]; [New Thread 0x7fac58e55700 (LWP 38113)]; [New Thread 0x7fac58654700 (LWP 38114)]; [New Thread 0x7face657f700 (LWP 38639)]; [New Thread 0x7face5d7e700 (LWP 38640)]; [New Thread 0x7face557d700 (LWP 38641)]; [New Thread 0x7face4d7c700 (LWP 38642)]; [New Thread 0x7face457b700 (LWP 38643)]; [New Thread 0x7face3d7a700 (LWP 38644)]; [New Thread 0x7face3579700 (LWP 38645)]; [New Thread 0x7face2d78700 (LWP 38646)]; [New Thread 0x7face2577700 (LWP 38647)]; [New Thread 0x7face1d76700 (LWP 38648)]; [New Thread 0x7face1575700 (LWP 38649)]; [New Thread 0x7face0d74700 (LWP 38650)]; [New Thread 0x7face05737",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:590,Performance,load,load-mode,590,"Here it is. I hope it is more informative:. gdb --args mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs/bin/mmseqs...done.; (gdb) r; Starting program: mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:1959,Performance,load,load-mode,1959,"configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs/bin/mmseqs...done.; (gdb) r; Starting program: mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	3.40282e+38; Split memory limit 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	256; Compressed 	0; Preload mode 	0; Verbosity 	3. [New Thread 0x7fac59656700 (LWP 38112)]",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:2617,Performance,load,load-mode,2617,"875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	3.40282e+38; Split memory limit 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	256; Compressed 	0; Preload mode 	0; Verbosity 	3. [New Thread 0x7fac59656700 (LWP 38112)]; [New Thread 0x7fac58e55700 (LWP 38113)]; [New Thread 0x7fac58654700 (LWP 38114)]; [New Thread 0x7face657f700 (LWP 38639)]; [New Thread 0x7face5d7e700 (LWP 38640)]; [New Thread 0x7face557d700 (LWP 38641)]; [New Thread 0x7face4d7c700 (LWP 38642)]; [New Thread 0x7face457b700 (LWP 38643)]; [New Thread 0x7face3d7a700 (LWP 38644)]; [New Thread 0x7face3579700 (LWP 38645)]; [New Thread 0x7face2d78700 (LWP 38646)]; [New Thread 0x7face2577700 (LWP 38647)]; [New Thread 0x7face1d76700 (LWP 38648)]; [New Thread 0x7face1575700 (LWP 38649)]; [New Thread 0x7face0d74700 (LWP 38650)]; [New Thread 0x7face05737",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:35055,Safety,Abort,Aborted,35055,"700 (LWP 39216)]; [New Thread 0x7f7424de8700 (LWP 39217)]; [New Thread 0x7f74245e7700 (LWP 39218)]; [New Thread 0x7f7423de6700 (LWP 39219)]; [New Thread 0x7f74235e5700 (LWP 39220)]; [New Thread 0x7f7422de4700 (LWP 39221)]; [New Thread 0x7f74225e3700 (LWP 39222)]; [New Thread 0x7f7421de2700 (LWP 39223)]; [New Thread 0x7f74215e1700 (LWP 39224)]; [New Thread 0x7f7420de0700 (LWP 39225)]; [New Thread 0x7f74205df700 (LWP 39226)]; [New Thread 0x7f741fdde700 (LWP 39227)]; [New Thread 0x7f741f5dd700 (LWP 39228)]; [New Thread 0x7f741eddc700 (LWP 39229)]; [New Thread 0x7f741e5db700 (LWP 39230)]; [New Thread 0x7f741ddda700 (LWP 39231)]; [New Thread 0x7f741d5d9700 (LWP 39232)]; [New Thread 0x7f741cdd8700 (LWP 39233)]; [New Thread 0x7f741c5d7700 (LWP 39234)]; [New Thread 0x7f741bdd6700 (LWP 39235)]; [New Thread 0x7f741b5d5700 (LWP 39236)]; [New Thread 0x7f741add4700 (LWP 39237)]; [New Thread 0x7f741a5d3700 (LWP 39238)]; [New Thread 0x7f7419dd2700 (LWP 39239)]; Computing offsets.; [=================================================================] 100.00% 15.11M 19m 10s 206ms ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Thread 1 ""mmseqs"" received signal SIGABRT, Aborted.; 0x0000000000853207 in raise (); (gdb) bt; #0 0x0000000000853207 in raise (); #1 0x0000000000853421 in abort (); #2 0x00000000007b7505 in __gnu_cxx::__verbose_terminate_handler() (); #3 0x000000000071f7a6 in __cxxabiv1::__terminate(void (*)()) (); #4 0x000000000071f7f1 in std::terminate() (); #5 0x000000000071d9e4 in __cxa_throw (); #6 0x000000000071f97c in operator new(unsigned long) (); #7 0x00000000005f7e0b in doswap (par=..., isGeneralMode=false) at /home/vsts/work/1/s/src/util/swapresults.cpp:170; #8 0x00000000004122db in runCommand (p=0xd63aa0, argc=argc@entry=22, argv=argv@entry=0x7fffffffde28) at /home/vsts/work/1/s/src/commons/Application.cpp:38; #9 0x00000000004016fa in main (argc=24, argv=0x7fffffffde18) at /home/vsts/work/1/s/src/commons/Application.cpp:196",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:35167,Safety,abort,abort,35167,"700 (LWP 39216)]; [New Thread 0x7f7424de8700 (LWP 39217)]; [New Thread 0x7f74245e7700 (LWP 39218)]; [New Thread 0x7f7423de6700 (LWP 39219)]; [New Thread 0x7f74235e5700 (LWP 39220)]; [New Thread 0x7f7422de4700 (LWP 39221)]; [New Thread 0x7f74225e3700 (LWP 39222)]; [New Thread 0x7f7421de2700 (LWP 39223)]; [New Thread 0x7f74215e1700 (LWP 39224)]; [New Thread 0x7f7420de0700 (LWP 39225)]; [New Thread 0x7f74205df700 (LWP 39226)]; [New Thread 0x7f741fdde700 (LWP 39227)]; [New Thread 0x7f741f5dd700 (LWP 39228)]; [New Thread 0x7f741eddc700 (LWP 39229)]; [New Thread 0x7f741e5db700 (LWP 39230)]; [New Thread 0x7f741ddda700 (LWP 39231)]; [New Thread 0x7f741d5d9700 (LWP 39232)]; [New Thread 0x7f741cdd8700 (LWP 39233)]; [New Thread 0x7f741c5d7700 (LWP 39234)]; [New Thread 0x7f741bdd6700 (LWP 39235)]; [New Thread 0x7f741b5d5700 (LWP 39236)]; [New Thread 0x7f741add4700 (LWP 39237)]; [New Thread 0x7f741a5d3700 (LWP 39238)]; [New Thread 0x7f7419dd2700 (LWP 39239)]; Computing offsets.; [=================================================================] 100.00% 15.11M 19m 10s 206ms ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Thread 1 ""mmseqs"" received signal SIGABRT, Aborted.; 0x0000000000853207 in raise (); (gdb) bt; #0 0x0000000000853207 in raise (); #1 0x0000000000853421 in abort (); #2 0x00000000007b7505 in __gnu_cxx::__verbose_terminate_handler() (); #3 0x000000000071f7a6 in __cxxabiv1::__terminate(void (*)()) (); #4 0x000000000071f7f1 in std::terminate() (); #5 0x000000000071d9e4 in __cxa_throw (); #6 0x000000000071f97c in operator new(unsigned long) (); #7 0x00000000005f7e0b in doswap (par=..., isGeneralMode=false) at /home/vsts/work/1/s/src/util/swapresults.cpp:170; #8 0x00000000004122db in runCommand (p=0xd63aa0, argc=argc@entry=22, argv=argv@entry=0x7fffffffde28) at /home/vsts/work/1/s/src/commons/Application.cpp:38; #9 0x00000000004016fa in main (argc=24, argv=0x7fffffffde18) at /home/vsts/work/1/s/src/commons/Application.cpp:196",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-776908014:18,Deployability,release,release,18,Did using a newer release help? I am trying to see what should be urgently dealt with before a new release.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-776908014
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-776908014:99,Deployability,release,release,99,Did using a newer release help? I am trying to see what should be urgently dealt with before a new release.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-776908014
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:170,Availability,error,error,170,"Thanks a lot for your help, Milot! I am sorry for the late response!; I think the newer release made a progress and it seems swapresults does not give the std::bad_alloc error anymore (see the stdout printout below). However now I'm facing a problem with disk-space usage, it seems my run fills up ~1.2 TB and fails since I have no disk space left. Is there any suggestion of how to reduce the needed disk-space? From your guide I understand that reducing `--max-seqs` and `--max-accept` could be the way to go but I was not sure whether indeed this is the correct direction and what would be reasonable values to use. What I actually need, is only the best hit(s) for my queries. I would be thankful for any advice ;-) . My command: ; `Programs/MMSeqs2/mmseqs/bin/mmseqs easy-search --slice-search --search-type 3 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen"" A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ 1> A2p515F2F4F6_vs_NT_Jan2021.mmseq2.std 2>&1`. The stdout:; ```; easy-search --slice-search --search-type 3 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:2461,Availability,Mask,Mask,2461,"n: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	256; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:2479,Availability,Mask,Mask,2479,"n: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	256; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:2680,Availability,Mask,Mask,2680," length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	256; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	true; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Alignment format 	0; Format alignment output 	",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:6559,Availability,mask,mask,6559,": 0h 0m 0s 19ms; Time for merging to query_seqs: 0h 0m 0s 29ms; Time for processing: 0h 0m 0s 419ms; splitsequence /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 256 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 3ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 280714 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 80ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 68ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 5",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:6568,Availability,mask,mask-lower-case,6568,": 0h 0m 0s 19ms; Time for merging to query_seqs: 0h 0m 0s 29ms; Time for processing: 0h 0m 0s 419ms; splitsequence /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 256 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 3ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 280714 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 80ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 68ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 5",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:7026,Availability,Mask,Masked,7026,"tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 280714 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 80ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 68ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 5s 578ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 280714; Target db start 1 to 69220; [=================================================================] 280.71K 5s 447ms. 0.936617 k-mers per position; 8306 DB matches per sequence; 48 overflows; 0 queries produce too many hits (truncated result); 1271 sequences passed prefiltering per query sequence; 0 median result list length; 248942 sequences with 0 size result lists; Time for merging to pref: 0h 0m 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:12137,Availability,mask,mask,12137,"====] 69.22K 3s 841ms. Time for merging to aln_swap: 0h 0m 0s 23ms; Time for processing: 0h 0m 12s 313ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln -v 3 . Time for processing: 0h 0m 11s 128ms; mvdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 176ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15288254 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 75ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 73ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:12146,Availability,mask,mask-lower-case,12146,"====] 69.22K 3s 841ms. Time for merging to aln_swap: 0h 0m 0s 23ms; Time for processing: 0h 0m 12s 313ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln -v 3 . Time for processing: 0h 0m 11s 128ms; mvdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 176ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15288254 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 75ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 73ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:12606,Availability,Mask,Masked,12606,"p/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15288254 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 75ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 73ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 6s 52ms; Hard disk might not have enough free space (1T left).The prefilter result might need up to 40T.; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 15288254; Target db start 1 to 69220; [=================================================================] 15.29M 16m 57s 724ms. 0.965255 k-mers per position; 6486 DB matches per sequence; 5917 overflows; 0 queries produce too many hits (truncated result); 816 sequences passed prefiltering per query sequence; 0 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:18791,Availability,mask,mask,18791,"69/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 881ms; mvdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged_new /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap -v 3 . Time for processing: 0h 0m 36s 927ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 23551830 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 211ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 73ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:18800,Availability,mask,mask-lower-case,18800,"69/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 881ms; mvdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged_new /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap -v 3 . Time for processing: 0h 0m 36s 927ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 23551830 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 211ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 73ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:19261,Availability,Mask,Masked,19261,"p/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 23551830 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 211ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 73ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 6s 967ms; Hard disk might not have enough free space (622G left).The prefilter result might need up to 62T.; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 23551830; Target db start 1 to 69220; [=================================================================] 23.55M 26m 33s 986ms. 0.965963 k-mers per position; 6331 DB matches per sequence; 9167 overflows; 0 queries produce too many hits (truncated result); 784 sequences passed prefiltering per query sequence;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:22634,Availability,fault,fault,22634,"893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 23.55M 2s 494ms; Time for merging to pref_count.tsv: 0h 0m 8s 27ms; Time for processing: 0h 0m 21s 772ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 23551830 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [===============================Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.200; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.166; free(): corrupted unsorted chunks; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.241; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.167; Can not write to data file ?; Segmentation fault; Error: align died; Error: Search step died; Error: Search died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:22641,Availability,Error,Error,22641,"893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 23.55M 2s 494ms; Time for merging to pref_count.tsv: 0h 0m 8s 27ms; Time for processing: 0h 0m 21s 772ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 23551830 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [===============================Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.200; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.166; free(): corrupted unsorted chunks; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.241; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.167; Can not write to data file ?; Segmentation fault; Error: align died; Error: Search step died; Error: Search died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:22660,Availability,Error,Error,22660,"893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 23.55M 2s 494ms; Time for merging to pref_count.tsv: 0h 0m 8s 27ms; Time for processing: 0h 0m 21s 772ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 23551830 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [===============================Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.200; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.166; free(): corrupted unsorted chunks; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.241; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.167; Can not write to data file ?; Segmentation fault; Error: align died; Error: Search step died; Error: Search died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:22685,Availability,Error,Error,22685,"893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 23.55M 2s 494ms; Time for merging to pref_count.tsv: 0h 0m 8s 27ms; Time for processing: 0h 0m 21s 772ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 23551830 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [===============================Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.200; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.166; free(): corrupted unsorted chunks; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.241; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.167; Can not write to data file ?; Segmentation fault; Error: align died; Error: Search step died; Error: Search died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:88,Deployability,release,release,88,"Thanks a lot for your help, Milot! I am sorry for the late response!; I think the newer release made a progress and it seems swapresults does not give the std::bad_alloc error anymore (see the stdout printout below). However now I'm facing a problem with disk-space usage, it seems my run fills up ~1.2 TB and fails since I have no disk space left. Is there any suggestion of how to reduce the needed disk-space? From your guide I understand that reducing `--max-seqs` and `--max-accept` could be the way to go but I was not sure whether indeed this is the correct direction and what would be reasonable values to use. What I actually need, is only the best hit(s) for my queries. I would be thankful for any advice ;-) . My command: ; `Programs/MMSeqs2/mmseqs/bin/mmseqs easy-search --slice-search --search-type 3 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen"" A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ 1> A2p515F2F4F6_vs_NT_Jan2021.mmseq2.std 2>&1`. The stdout:; ```; easy-search --slice-search --search-type 3 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:383,Energy Efficiency,reduce,reduce,383,"Thanks a lot for your help, Milot! I am sorry for the late response!; I think the newer release made a progress and it seems swapresults does not give the std::bad_alloc error anymore (see the stdout printout below). However now I'm facing a problem with disk-space usage, it seems my run fills up ~1.2 TB and fails since I have no disk space left. Is there any suggestion of how to reduce the needed disk-space? From your guide I understand that reducing `--max-seqs` and `--max-accept` could be the way to go but I was not sure whether indeed this is the correct direction and what would be reasonable values to use. What I actually need, is only the best hit(s) for my queries. I would be thankful for any advice ;-) . My command: ; `Programs/MMSeqs2/mmseqs/bin/mmseqs easy-search --slice-search --search-type 3 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen"" A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ 1> A2p515F2F4F6_vs_NT_Jan2021.mmseq2.std 2>&1`. The stdout:; ```; easy-search --slice-search --search-type 3 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:6786,Energy Efficiency,consumption,consumption,6786,"headers-split-mode 0 --create-lookup 0 --threads 256 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 3ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 280714 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 80ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 68ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 5s 578ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 280714; Target db start 1 to 69220; [=================================================================] 280.71K 5s 447ms. 0.936617 k-mers per position; 8306 DB matches per sequence; 48 overflows; 0 qu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:12366,Energy Efficiency,consumption,consumption,12366,"25152138277869/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 176ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15288254 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 75ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 73ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 6s 52ms; Hard disk might not have enough free space (1T left).The prefilter result might need up to 40T.; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 15288254; Target db start 1 to 69220; [================================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:19020,Energy Efficiency,consumption,consumption,19020,"625152138277869/search_tmp/17414849138893322762/search/aln_swap -v 3 . Time for processing: 0h 0m 36s 927ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 23551830 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 211ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 73ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 6s 967ms; Hard disk might not have enough free space (622G left).The prefilter result might need up to 62T.; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 23551830; Target db start 1 to 69220; [============================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:1598,Integrability,wrap,wrapped,1598,"easonable values to use. What I actually need, is only the best hit(s) for my queries. I would be thankful for any advice ;-) . My command: ; `Programs/MMSeqs2/mmseqs/bin/mmseqs easy-search --slice-search --search-type 3 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen"" A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ 1> A2p515F2F4F6_vs_NT_Jan2021.mmseq2.std 2>&1`. The stdout:; ```; easy-search --slice-search --search-type 3 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	256; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary p",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:9123,Integrability,wrap,wrapped-scoring,9123,"lt2stats /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 280.71K 0s 74ms; Time for merging to pref_count.tsv: 0h 0m 0s 77ms; Time for processing: 0h 0m 0s 753ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 280714 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 280.71K 3m 53s 720ms; Time for merging to aln: 0h 0m 0s 84ms; 356937745 alignments calculated; 350790208 sequence pairs passed the thresholds (0.982777 of overall calculated); 1249.635620 hits per query sequence; Time for processing: 0h 3m 57s 914ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/sea",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:14810,Integrability,wrap,wrapped-scoring,14810,"t2stats /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 15.29M 1s 717ms; Time for merging to pref_count.tsv: 0h 0m 4s 684ms; Time for processing: 0h 0m 14s 46ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 15288254 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.29M 2h 10m 35s 557ms; Time for merging to aln: 0h 0m 13s 903ms; 12490036390 alignments calculated; 12287580750 sequence pairs passed the thresholds (0.983791 of overall calculated); 803.726868 hits per query sequence; Time for processing: 2h 10m 56s 695ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/1741484913889",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:21470,Integrability,wrap,wrapped-scoring,21470,"t2stats /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 23.55M 2s 494ms; Time for merging to pref_count.tsv: 0h 0m 8s 27ms; Time for processing: 0h 0m 21s 772ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 23551830 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [===============================Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.200; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.166; free(): corrupted unsorted chunks; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/searc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:9491,Modifiability,extend,extend,9491," --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 280.71K 0s 74ms; Time for merging to pref_count.tsv: 0h 0m 0s 77ms; Time for processing: 0h 0m 0s 753ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 280714 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 280.71K 3m 53s 720ms; Time for merging to aln: 0h 0m 0s 84ms; 356937745 alignments calculated; 350790208 sequence pairs passed the thresholds (0.982777 of overall calculated); 1249.635620 hits per query sequence; Time for processing: 0h 3m 57s 914ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref -v 3 . Time for processing: 0h 0m 0s 432ms; swapresults /tmp/tmp_MMSeq2/17595625152138277869/search_tmp/17414849138893322762/target_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/1741",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:10641,Modifiability,extend,extend,10641,"tide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 280.71K 3m 53s 720ms; Time for merging to aln: 0h 0m 0s 84ms; 356937745 alignments calculated; 350790208 sequence pairs passed the thresholds (0.982777 of overall calculated); 1249.635620 hits per query sequence; Time for processing: 0h 3m 57s 914ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref -v 3 . Time for processing: 0h 0m 0s 432ms; swapresults /tmp/tmp_MMSeq2/17595625152138277869/search_tmp/17414849138893322762/target_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1.79769e+308 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 280.71K 0s 514ms. Reading results.; [=================================================================] 280.71K 1s 567ms. Output database: /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap; [=================================================================] 69.22K 3s 841ms. Time for merging to aln_swap: 0h 0m 0s 23ms; Time for processing: 0h 0m 12s 313ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln -v 3 . Time for processing: 0h 0m 11s 128ms; mvdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 176ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:15178,Modifiability,extend,extend,15178,"--tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 15.29M 1s 717ms; Time for merging to pref_count.tsv: 0h 0m 4s 684ms; Time for processing: 0h 0m 14s 46ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 15288254 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.29M 2h 10m 35s 557ms; Time for merging to aln: 0h 0m 13s 903ms; 12490036390 alignments calculated; 12287580750 sequence pairs passed the thresholds (0.983791 of overall calculated); 803.726868 hits per query sequence; Time for processing: 2h 10m 56s 695ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref -v 3 . Time for processing: 0h 0m 8s 279ms; swapresults /tmp/tmp_MMSeq2/17595625152138277869/search_tmp/17414849138893322762/target_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln /tmp/tmp_MMSeq2//17595625152138277869/sear",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:16339,Modifiability,extend,extend,16339,"get database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.29M 2h 10m 35s 557ms; Time for merging to aln: 0h 0m 13s 903ms; 12490036390 alignments calculated; 12287580750 sequence pairs passed the thresholds (0.983791 of overall calculated); 803.726868 hits per query sequence; Time for processing: 2h 10m 56s 695ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref -v 3 . Time for processing: 0h 0m 8s 279ms; swapresults /tmp/tmp_MMSeq2/17595625152138277869/search_tmp/17414849138893322762/target_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1.79769e+308 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 15.29M 2m 38s 69ms. Reading results.; [=================================================================] 15.29M 13m 33s 98ms. Output database: /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap; [=================================================================] 69.22K 37m 16s 381ms. Time for merging to aln_swap: 0h 0m 1s 553ms; Time for processing: 0h 54m 56s 451ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln -v 3 . Time for processing: 0h 0m 9s 464ms; mergedbs /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged_new /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged /tmp/tmp_MMSeq2//175956251521382",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:21838,Modifiability,extend,extend,21838,"893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 23.55M 2s 494ms; Time for merging to pref_count.tsv: 0h 0m 8s 27ms; Time for processing: 0h 0m 21s 772ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 23551830 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [===============================Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.200; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.166; free(): corrupted unsorted chunks; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.241; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.167; Can not write to data file ?; Segmentation fault; Error: align died; Error: Search step died; Error: Search died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:6657,Performance,load,load-mode,6657,": 0h 0m 0s 19ms; Time for merging to query_seqs: 0h 0m 0s 29ms; Time for processing: 0h 0m 0s 419ms; splitsequence /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 256 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 3ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 280714 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 80ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 68ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 5",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:9348,Performance,load,load-mode,9348,"mp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 280.71K 0s 74ms; Time for merging to pref_count.tsv: 0h 0m 0s 77ms; Time for processing: 0h 0m 0s 753ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 280714 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 280.71K 3m 53s 720ms; Time for merging to aln: 0h 0m 0s 84ms; 356937745 alignments calculated; 350790208 sequence pairs passed the thresholds (0.982777 of overall calculated); 1249.635620 hits per query sequence; Time for processing: 0h 3m 57s 914ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref -v 3 . Time for processing: 0h 0m 0s 432ms; swapresults /tmp/tmp_MMSeq2/17595625152138277869/search_tmp/17414849138893322762/target_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:10694,Performance,load,load-mode,10694,"tide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 280.71K 3m 53s 720ms; Time for merging to aln: 0h 0m 0s 84ms; 356937745 alignments calculated; 350790208 sequence pairs passed the thresholds (0.982777 of overall calculated); 1249.635620 hits per query sequence; Time for processing: 0h 3m 57s 914ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref -v 3 . Time for processing: 0h 0m 0s 432ms; swapresults /tmp/tmp_MMSeq2/17595625152138277869/search_tmp/17414849138893322762/target_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1.79769e+308 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 280.71K 0s 514ms. Reading results.; [=================================================================] 280.71K 1s 567ms. Output database: /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap; [=================================================================] 69.22K 3s 841ms. Time for merging to aln_swap: 0h 0m 0s 23ms; Time for processing: 0h 0m 12s 313ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln -v 3 . Time for processing: 0h 0m 11s 128ms; mvdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 176ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:12235,Performance,load,load-mode,12235,"====] 69.22K 3s 841ms. Time for merging to aln_swap: 0h 0m 0s 23ms; Time for processing: 0h 0m 12s 313ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln -v 3 . Time for processing: 0h 0m 11s 128ms; mvdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 176ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15288254 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 75ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 73ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:15035,Performance,load,load-mode,15035,"p/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 15.29M 1s 717ms; Time for merging to pref_count.tsv: 0h 0m 4s 684ms; Time for processing: 0h 0m 14s 46ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 15288254 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.29M 2h 10m 35s 557ms; Time for merging to aln: 0h 0m 13s 903ms; 12490036390 alignments calculated; 12287580750 sequence pairs passed the thresholds (0.983791 of overall calculated); 803.726868 hits per query sequence; Time for processing: 2h 10m 56s 695ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref -v 3 . Time for processing: 0h 0m 8s 279ms; swapresults /tmp/tmp_MMSeq2/17595625152138277869/search_tmp/17414849138893322",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:16392,Performance,load,load-mode,16392,"get database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.29M 2h 10m 35s 557ms; Time for merging to aln: 0h 0m 13s 903ms; 12490036390 alignments calculated; 12287580750 sequence pairs passed the thresholds (0.983791 of overall calculated); 803.726868 hits per query sequence; Time for processing: 2h 10m 56s 695ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref -v 3 . Time for processing: 0h 0m 8s 279ms; swapresults /tmp/tmp_MMSeq2/17595625152138277869/search_tmp/17414849138893322762/target_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1.79769e+308 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 15.29M 2m 38s 69ms. Reading results.; [=================================================================] 15.29M 13m 33s 98ms. Output database: /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap; [=================================================================] 69.22K 37m 16s 381ms. Time for merging to aln_swap: 0h 0m 1s 553ms; Time for processing: 0h 54m 56s 451ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln -v 3 . Time for processing: 0h 0m 9s 464ms; mergedbs /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged_new /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged /tmp/tmp_MMSeq2//175956251521382",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:18889,Performance,load,load-mode,18889,"69/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 881ms; mvdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged_new /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap -v 3 . Time for processing: 0h 0m 36s 927ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 23551830 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 211ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 73ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:21695,Performance,load,load-mode,21695,"p/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 23.55M 2s 494ms; Time for merging to pref_count.tsv: 0h 0m 8s 27ms; Time for processing: 0h 0m 21s 772ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 23551830 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [===============================Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.200; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.166; free(): corrupted unsorted chunks; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.241; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.167; Can not write to ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:423,Usability,guid,guide,423,"Thanks a lot for your help, Milot! I am sorry for the late response!; I think the newer release made a progress and it seems swapresults does not give the std::bad_alloc error anymore (see the stdout printout below). However now I'm facing a problem with disk-space usage, it seems my run fills up ~1.2 TB and fails since I have no disk space left. Is there any suggestion of how to reduce the needed disk-space? From your guide I understand that reducing `--max-seqs` and `--max-accept` could be the way to go but I was not sure whether indeed this is the correct direction and what would be reasonable values to use. What I actually need, is only the best hit(s) for my queries. I would be thankful for any advice ;-) . My command: ; `Programs/MMSeqs2/mmseqs/bin/mmseqs easy-search --slice-search --search-type 3 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen"" A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ 1> A2p515F2F4F6_vs_NT_Jan2021.mmseq2.std 2>&1`. The stdout:; ```; easy-search --slice-search --search-type 3 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782444789:529,Availability,down,down,529,"Martin did some refactoring to speed up slice search (now called exhaustive search) and get it to use less space during the run last week. However, in the end it will still need quite a lot of space. A more general question: Are you sure you need the slice/exhaustive search? A normal nucl-nucl search will be much much faster and use less disk space. If you want to keep using the exhaustive search:; You could use the `--compressed` parameter to get it to write zstd compressed output databases, that would help get the output down to a more manageable size. `--max-accept` kind of defeats the purpose of the exhaustive search, `--max-rejected` however could be very valuable to save time and disk space.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782444789
https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782444789:16,Modifiability,refactor,refactoring,16,"Martin did some refactoring to speed up slice search (now called exhaustive search) and get it to use less space during the run last week. However, in the end it will still need quite a lot of space. A more general question: Are you sure you need the slice/exhaustive search? A normal nucl-nucl search will be much much faster and use less disk space. If you want to keep using the exhaustive search:; You could use the `--compressed` parameter to get it to write zstd compressed output databases, that would help get the output down to a more manageable size. `--max-accept` kind of defeats the purpose of the exhaustive search, `--max-rejected` however could be very valuable to save time and disk space.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782444789
https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-764877090:219,Deployability,release,release,219,"We have decided against semantic versioning a while ago. Getting consensus on a versioning scheme was kind of difficult, I don't want to reopen that can of worms. Generally we decide every few months that we have a new release and increment the version number by one. Additionally we add a short git hash to the string. You should use the CMake `-DVERSION_OVERRIDE` parameter to override the version string when you package MMseqs2 (see ; https://github.com/soedinglab/MMseqs2/wiki#customizing-compilation-through-cmake for cmake flags, if you are packaging MMseqs2 for a Linux distribution you might want to pay close attention to how Debian dealt with multi-arch and different SIMD levels of x64). I've linked bioconda, homebrew and debian below if you want to see packaging is dealt with in other places:; https://github.com/bioconda/bioconda-recipes/blob/master/recipes/mmseqs2/build.sh; https://github.com/Homebrew/homebrew-core/tree/master/Formula/mmseqs2.rb; https://salsa.debian.org/med-team/mmseqs2/-/blob/master/debian/rules#L34",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-764877090
https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-764877090:300,Security,hash,hash,300,"We have decided against semantic versioning a while ago. Getting consensus on a versioning scheme was kind of difficult, I don't want to reopen that can of worms. Generally we decide every few months that we have a new release and increment the version number by one. Additionally we add a short git hash to the string. You should use the CMake `-DVERSION_OVERRIDE` parameter to override the version string when you package MMseqs2 (see ; https://github.com/soedinglab/MMseqs2/wiki#customizing-compilation-through-cmake for cmake flags, if you are packaging MMseqs2 for a Linux distribution you might want to pay close attention to how Debian dealt with multi-arch and different SIMD levels of x64). I've linked bioconda, homebrew and debian below if you want to see packaging is dealt with in other places:; https://github.com/bioconda/bioconda-recipes/blob/master/recipes/mmseqs2/build.sh; https://github.com/Homebrew/homebrew-core/tree/master/Formula/mmseqs2.rb; https://salsa.debian.org/med-team/mmseqs2/-/blob/master/debian/rules#L34",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-764877090
https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559:706,Availability,avail,available,706,"My point of view is that of a computational biologist who is both an end-user and developer of software that includes mmseqs as a dependency. As a developer myself, I view end users who are sophisticated enough to say things about builds as a fairly precious resource. So let me make my point one more time before I accept your decision and move on. . While I admit there are things that suck about semantic versioning, it has two outstanding qualities: (1) it has a controlled syntax that is widely used, and (2) it's easy to determine whether software that follow the pattern is older, newer, or equal to a reference version that someone else tested. Among the three recipes shown above and the binaries available for download, it seems that there are 3 different versioning schemes in use that will show up as the output of ""mmseqs version"" (12.11e3, 12-11e3, and the full SHA1). If I add my software (which uses VERSION_OVERRIDE=12.0 internally for compatibility with python semantic versioning), that's a 4th. My install code can't easily determine if a binary of unknown provenance is lower, equal, or higher than the recommended version. Neither can any downstream users without the sophistication to look at your repository's version tags. Using semantic versioning as a standard (that can be overridden by packagers or users if needed) would avoid this issue. To finish with something nice, your build system is well-done and build are smooth on the various linux and macos BigSur platforms I've tested it on. Feel free to close this issue after reading.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559
https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559:720,Availability,down,download,720,"My point of view is that of a computational biologist who is both an end-user and developer of software that includes mmseqs as a dependency. As a developer myself, I view end users who are sophisticated enough to say things about builds as a fairly precious resource. So let me make my point one more time before I accept your decision and move on. . While I admit there are things that suck about semantic versioning, it has two outstanding qualities: (1) it has a controlled syntax that is widely used, and (2) it's easy to determine whether software that follow the pattern is older, newer, or equal to a reference version that someone else tested. Among the three recipes shown above and the binaries available for download, it seems that there are 3 different versioning schemes in use that will show up as the output of ""mmseqs version"" (12.11e3, 12-11e3, and the full SHA1). If I add my software (which uses VERSION_OVERRIDE=12.0 internally for compatibility with python semantic versioning), that's a 4th. My install code can't easily determine if a binary of unknown provenance is lower, equal, or higher than the recommended version. Neither can any downstream users without the sophistication to look at your repository's version tags. Using semantic versioning as a standard (that can be overridden by packagers or users if needed) would avoid this issue. To finish with something nice, your build system is well-done and build are smooth on the various linux and macos BigSur platforms I've tested it on. Feel free to close this issue after reading.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559
https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559:1161,Availability,down,downstream,1161,"My point of view is that of a computational biologist who is both an end-user and developer of software that includes mmseqs as a dependency. As a developer myself, I view end users who are sophisticated enough to say things about builds as a fairly precious resource. So let me make my point one more time before I accept your decision and move on. . While I admit there are things that suck about semantic versioning, it has two outstanding qualities: (1) it has a controlled syntax that is widely used, and (2) it's easy to determine whether software that follow the pattern is older, newer, or equal to a reference version that someone else tested. Among the three recipes shown above and the binaries available for download, it seems that there are 3 different versioning schemes in use that will show up as the output of ""mmseqs version"" (12.11e3, 12-11e3, and the full SHA1). If I add my software (which uses VERSION_OVERRIDE=12.0 internally for compatibility with python semantic versioning), that's a 4th. My install code can't easily determine if a binary of unknown provenance is lower, equal, or higher than the recommended version. Neither can any downstream users without the sophistication to look at your repository's version tags. Using semantic versioning as a standard (that can be overridden by packagers or users if needed) would avoid this issue. To finish with something nice, your build system is well-done and build are smooth on the various linux and macos BigSur platforms I've tested it on. Feel free to close this issue after reading.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559
https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559:1018,Deployability,install,install,1018,"My point of view is that of a computational biologist who is both an end-user and developer of software that includes mmseqs as a dependency. As a developer myself, I view end users who are sophisticated enough to say things about builds as a fairly precious resource. So let me make my point one more time before I accept your decision and move on. . While I admit there are things that suck about semantic versioning, it has two outstanding qualities: (1) it has a controlled syntax that is widely used, and (2) it's easy to determine whether software that follow the pattern is older, newer, or equal to a reference version that someone else tested. Among the three recipes shown above and the binaries available for download, it seems that there are 3 different versioning schemes in use that will show up as the output of ""mmseqs version"" (12.11e3, 12-11e3, and the full SHA1). If I add my software (which uses VERSION_OVERRIDE=12.0 internally for compatibility with python semantic versioning), that's a 4th. My install code can't easily determine if a binary of unknown provenance is lower, equal, or higher than the recommended version. Neither can any downstream users without the sophistication to look at your repository's version tags. Using semantic versioning as a standard (that can be overridden by packagers or users if needed) would avoid this issue. To finish with something nice, your build system is well-done and build are smooth on the various linux and macos BigSur platforms I've tested it on. Feel free to close this issue after reading.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559
https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559:130,Integrability,depend,dependency,130,"My point of view is that of a computational biologist who is both an end-user and developer of software that includes mmseqs as a dependency. As a developer myself, I view end users who are sophisticated enough to say things about builds as a fairly precious resource. So let me make my point one more time before I accept your decision and move on. . While I admit there are things that suck about semantic versioning, it has two outstanding qualities: (1) it has a controlled syntax that is widely used, and (2) it's easy to determine whether software that follow the pattern is older, newer, or equal to a reference version that someone else tested. Among the three recipes shown above and the binaries available for download, it seems that there are 3 different versioning schemes in use that will show up as the output of ""mmseqs version"" (12.11e3, 12-11e3, and the full SHA1). If I add my software (which uses VERSION_OVERRIDE=12.0 internally for compatibility with python semantic versioning), that's a 4th. My install code can't easily determine if a binary of unknown provenance is lower, equal, or higher than the recommended version. Neither can any downstream users without the sophistication to look at your repository's version tags. Using semantic versioning as a standard (that can be overridden by packagers or users if needed) would avoid this issue. To finish with something nice, your build system is well-done and build are smooth on the various linux and macos BigSur platforms I've tested it on. Feel free to close this issue after reading.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559
https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559:1351,Safety,avoid,avoid,1351,"My point of view is that of a computational biologist who is both an end-user and developer of software that includes mmseqs as a dependency. As a developer myself, I view end users who are sophisticated enough to say things about builds as a fairly precious resource. So let me make my point one more time before I accept your decision and move on. . While I admit there are things that suck about semantic versioning, it has two outstanding qualities: (1) it has a controlled syntax that is widely used, and (2) it's easy to determine whether software that follow the pattern is older, newer, or equal to a reference version that someone else tested. Among the three recipes shown above and the binaries available for download, it seems that there are 3 different versioning schemes in use that will show up as the output of ""mmseqs version"" (12.11e3, 12-11e3, and the full SHA1). If I add my software (which uses VERSION_OVERRIDE=12.0 internally for compatibility with python semantic versioning), that's a 4th. My install code can't easily determine if a binary of unknown provenance is lower, equal, or higher than the recommended version. Neither can any downstream users without the sophistication to look at your repository's version tags. Using semantic versioning as a standard (that can be overridden by packagers or users if needed) would avoid this issue. To finish with something nice, your build system is well-done and build are smooth on the various linux and macos BigSur platforms I've tested it on. Feel free to close this issue after reading.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559
https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559:645,Testability,test,tested,645,"My point of view is that of a computational biologist who is both an end-user and developer of software that includes mmseqs as a dependency. As a developer myself, I view end users who are sophisticated enough to say things about builds as a fairly precious resource. So let me make my point one more time before I accept your decision and move on. . While I admit there are things that suck about semantic versioning, it has two outstanding qualities: (1) it has a controlled syntax that is widely used, and (2) it's easy to determine whether software that follow the pattern is older, newer, or equal to a reference version that someone else tested. Among the three recipes shown above and the binaries available for download, it seems that there are 3 different versioning schemes in use that will show up as the output of ""mmseqs version"" (12.11e3, 12-11e3, and the full SHA1). If I add my software (which uses VERSION_OVERRIDE=12.0 internally for compatibility with python semantic versioning), that's a 4th. My install code can't easily determine if a binary of unknown provenance is lower, equal, or higher than the recommended version. Neither can any downstream users without the sophistication to look at your repository's version tags. Using semantic versioning as a standard (that can be overridden by packagers or users if needed) would avoid this issue. To finish with something nice, your build system is well-done and build are smooth on the various linux and macos BigSur platforms I've tested it on. Feel free to close this issue after reading.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559
https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559:1505,Testability,test,tested,1505,"My point of view is that of a computational biologist who is both an end-user and developer of software that includes mmseqs as a dependency. As a developer myself, I view end users who are sophisticated enough to say things about builds as a fairly precious resource. So let me make my point one more time before I accept your decision and move on. . While I admit there are things that suck about semantic versioning, it has two outstanding qualities: (1) it has a controlled syntax that is widely used, and (2) it's easy to determine whether software that follow the pattern is older, newer, or equal to a reference version that someone else tested. Among the three recipes shown above and the binaries available for download, it seems that there are 3 different versioning schemes in use that will show up as the output of ""mmseqs version"" (12.11e3, 12-11e3, and the full SHA1). If I add my software (which uses VERSION_OVERRIDE=12.0 internally for compatibility with python semantic versioning), that's a 4th. My install code can't easily determine if a binary of unknown provenance is lower, equal, or higher than the recommended version. Neither can any downstream users without the sophistication to look at your repository's version tags. Using semantic versioning as a standard (that can be overridden by packagers or users if needed) would avoid this issue. To finish with something nice, your build system is well-done and build are smooth on the various linux and macos BigSur platforms I've tested it on. Feel free to close this issue after reading.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559
https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765403000:108,Energy Efficiency,consumption,consumption,108,"The database is not large enough to use 300GB of RAM (See https://github.com/soedinglab/MMseqs2/wiki#memory-consumption). So it would be expected to use far less. However, if MMseqs2 was only uses 30GB of 300GB, then that would be weird. Could you post the full log?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765403000
https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765403000:262,Testability,log,log,262,"The database is not large enough to use 300GB of RAM (See https://github.com/soedinglab/MMseqs2/wiki#memory-consumption). So it would be expected to use far less. However, if MMseqs2 was only uses 30GB of 300GB, then that would be weird. Could you post the full log?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765403000
https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034:700,Availability,mask,mask,700,"It is very long so I prefer to give to you all the log in a file. You can find the search step from line 723 or below, but I prefer to give to you everything. ; ```; prefilter /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//ALIGN/635041581728617992/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 36 --compressed 0 -v 3 -s 7.0 . Query database size: 12187255 type: Aminoacid; Estimated memory consumption: 42G; Target database size: 12187255 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 12.19M 26s 362ms; Index table: Masked residues: 43826477; Index table: fill; [=================================================================] 12.19M 38s 306ms; Index statistics; Entries: 3083105370; DB size: 18129 MB; Avg k-mer size: 48.173521; Top 10 k-mers; GPGGTL	40332; GQQVAR	22194; GEGGVV	20313; NAIAAG	18525; YTGTPK	18522; ALAIAR	16978; GFVAVR	15587; GPGGTT	14728; GEGGTL	13758; LAMHRT	13125; Time for index table init: 0h 1m 7s 827ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12187255; Target db start 1 to 12187255; [======; ```; [pipeline.log](https://github.com/soedinglab/MMseqs2/files/5856223/pipeline.log); Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034
https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034:709,Availability,mask,mask-lower-case,709,"It is very long so I prefer to give to you all the log in a file. You can find the search step from line 723 or below, but I prefer to give to you everything. ; ```; prefilter /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//ALIGN/635041581728617992/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 36 --compressed 0 -v 3 -s 7.0 . Query database size: 12187255 type: Aminoacid; Estimated memory consumption: 42G; Target database size: 12187255 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 12.19M 26s 362ms; Index table: Masked residues: 43826477; Index table: fill; [=================================================================] 12.19M 38s 306ms; Index statistics; Entries: 3083105370; DB size: 18129 MB; Avg k-mer size: 48.173521; Top 10 k-mers; GPGGTL	40332; GQQVAR	22194; GEGGVV	20313; NAIAAG	18525; YTGTPK	18522; ALAIAR	16978; GFVAVR	15587; GPGGTT	14728; GEGGTL	13758; LAMHRT	13125; Time for index table init: 0h 1m 7s 827ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12187255; Target db start 1 to 12187255; [======; ```; [pipeline.log](https://github.com/soedinglab/MMseqs2/files/5856223/pipeline.log); Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034
https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034:1180,Availability,Mask,Masked,1180,"It is very long so I prefer to give to you all the log in a file. You can find the search step from line 723 or below, but I prefer to give to you everything. ; ```; prefilter /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//ALIGN/635041581728617992/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 36 --compressed 0 -v 3 -s 7.0 . Query database size: 12187255 type: Aminoacid; Estimated memory consumption: 42G; Target database size: 12187255 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 12.19M 26s 362ms; Index table: Masked residues: 43826477; Index table: fill; [=================================================================] 12.19M 38s 306ms; Index statistics; Entries: 3083105370; DB size: 18129 MB; Avg k-mer size: 48.173521; Top 10 k-mers; GPGGTL	40332; GQQVAR	22194; GEGGVV	20313; NAIAAG	18525; YTGTPK	18522; ALAIAR	16978; GFVAVR	15587; GPGGTT	14728; GEGGTL	13758; LAMHRT	13125; Time for index table init: 0h 1m 7s 827ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12187255; Target db start 1 to 12187255; [======; ```; [pipeline.log](https://github.com/soedinglab/MMseqs2/files/5856223/pipeline.log); Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034
https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034:200,Deployability,Pipeline,PipelineProteome,200,"It is very long so I prefer to give to you all the log in a file. You can find the search step from line 723 or below, but I prefer to give to you everything. ; ```; prefilter /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//ALIGN/635041581728617992/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 36 --compressed 0 -v 3 -s 7.0 . Query database size: 12187255 type: Aminoacid; Estimated memory consumption: 42G; Target database size: 12187255 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 12.19M 26s 362ms; Index table: Masked residues: 43826477; Index table: fill; [=================================================================] 12.19M 38s 306ms; Index statistics; Entries: 3083105370; DB size: 18129 MB; Avg k-mer size: 48.173521; Top 10 k-mers; GPGGTL	40332; GQQVAR	22194; GEGGVV	20313; NAIAAG	18525; YTGTPK	18522; ALAIAR	16978; GFVAVR	15587; GPGGTT	14728; GEGGTL	13758; LAMHRT	13125; Time for index table init: 0h 1m 7s 827ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12187255; Target db start 1 to 12187255; [======; ```; [pipeline.log](https://github.com/soedinglab/MMseqs2/files/5856223/pipeline.log); Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034
https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034:270,Deployability,Pipeline,PipelineProteome,270,"It is very long so I prefer to give to you all the log in a file. You can find the search step from line 723 or below, but I prefer to give to you everything. ; ```; prefilter /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//ALIGN/635041581728617992/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 36 --compressed 0 -v 3 -s 7.0 . Query database size: 12187255 type: Aminoacid; Estimated memory consumption: 42G; Target database size: 12187255 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 12.19M 26s 362ms; Index table: Masked residues: 43826477; Index table: fill; [=================================================================] 12.19M 38s 306ms; Index statistics; Entries: 3083105370; DB size: 18129 MB; Avg k-mer size: 48.173521; Top 10 k-mers; GPGGTL	40332; GQQVAR	22194; GEGGVV	20313; NAIAAG	18525; YTGTPK	18522; ALAIAR	16978; GFVAVR	15587; GPGGTT	14728; GEGGTL	13758; LAMHRT	13125; Time for index table init: 0h 1m 7s 827ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12187255; Target db start 1 to 12187255; [======; ```; [pipeline.log](https://github.com/soedinglab/MMseqs2/files/5856223/pipeline.log); Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034
https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034:340,Deployability,Pipeline,PipelineProteome,340,"It is very long so I prefer to give to you all the log in a file. You can find the search step from line 723 or below, but I prefer to give to you everything. ; ```; prefilter /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//ALIGN/635041581728617992/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 36 --compressed 0 -v 3 -s 7.0 . Query database size: 12187255 type: Aminoacid; Estimated memory consumption: 42G; Target database size: 12187255 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 12.19M 26s 362ms; Index table: Masked residues: 43826477; Index table: fill; [=================================================================] 12.19M 38s 306ms; Index statistics; Entries: 3083105370; DB size: 18129 MB; Avg k-mer size: 48.173521; Top 10 k-mers; GPGGTL	40332; GQQVAR	22194; GEGGVV	20313; NAIAAG	18525; YTGTPK	18522; ALAIAR	16978; GFVAVR	15587; GPGGTT	14728; GEGGTL	13758; LAMHRT	13125; Time for index table init: 0h 1m 7s 827ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12187255; Target db start 1 to 12187255; [======; ```; [pipeline.log](https://github.com/soedinglab/MMseqs2/files/5856223/pipeline.log); Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034
https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034:1794,Deployability,pipeline,pipeline,1794,"It is very long so I prefer to give to you all the log in a file. You can find the search step from line 723 or below, but I prefer to give to you everything. ; ```; prefilter /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//ALIGN/635041581728617992/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 36 --compressed 0 -v 3 -s 7.0 . Query database size: 12187255 type: Aminoacid; Estimated memory consumption: 42G; Target database size: 12187255 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 12.19M 26s 362ms; Index table: Masked residues: 43826477; Index table: fill; [=================================================================] 12.19M 38s 306ms; Index statistics; Entries: 3083105370; DB size: 18129 MB; Avg k-mer size: 48.173521; Top 10 k-mers; GPGGTL	40332; GQQVAR	22194; GEGGVV	20313; NAIAAG	18525; YTGTPK	18522; ALAIAR	16978; GFVAVR	15587; GPGGTT	14728; GEGGTL	13758; LAMHRT	13125; Time for index table init: 0h 1m 7s 827ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12187255; Target db start 1 to 12187255; [======; ```; [pipeline.log](https://github.com/soedinglab/MMseqs2/files/5856223/pipeline.log); Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034
https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034:1860,Deployability,pipeline,pipeline,1860,"It is very long so I prefer to give to you all the log in a file. You can find the search step from line 723 or below, but I prefer to give to you everything. ; ```; prefilter /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//ALIGN/635041581728617992/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 36 --compressed 0 -v 3 -s 7.0 . Query database size: 12187255 type: Aminoacid; Estimated memory consumption: 42G; Target database size: 12187255 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 12.19M 26s 362ms; Index table: Masked residues: 43826477; Index table: fill; [=================================================================] 12.19M 38s 306ms; Index statistics; Entries: 3083105370; DB size: 18129 MB; Avg k-mer size: 48.173521; Top 10 k-mers; GPGGTL	40332; GQQVAR	22194; GEGGVV	20313; NAIAAG	18525; YTGTPK	18522; ALAIAR	16978; GFVAVR	15587; GPGGTT	14728; GEGGTL	13758; LAMHRT	13125; Time for index table init: 0h 1m 7s 827ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12187255; Target db start 1 to 12187255; [======; ```; [pipeline.log](https://github.com/soedinglab/MMseqs2/files/5856223/pipeline.log); Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034
https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034:934,Energy Efficiency,consumption,consumption,934,"It is very long so I prefer to give to you all the log in a file. You can find the search step from line 723 or below, but I prefer to give to you everything. ; ```; prefilter /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//ALIGN/635041581728617992/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 36 --compressed 0 -v 3 -s 7.0 . Query database size: 12187255 type: Aminoacid; Estimated memory consumption: 42G; Target database size: 12187255 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 12.19M 26s 362ms; Index table: Masked residues: 43826477; Index table: fill; [=================================================================] 12.19M 38s 306ms; Index statistics; Entries: 3083105370; DB size: 18129 MB; Avg k-mer size: 48.173521; Top 10 k-mers; GPGGTL	40332; GQQVAR	22194; GEGGVV	20313; NAIAAG	18525; YTGTPK	18522; ALAIAR	16978; GFVAVR	15587; GPGGTT	14728; GEGGTL	13758; LAMHRT	13125; Time for index table init: 0h 1m 7s 827ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12187255; Target db start 1 to 12187255; [======; ```; [pipeline.log](https://github.com/soedinglab/MMseqs2/files/5856223/pipeline.log); Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034
https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034:798,Performance,load,load-mode,798,"It is very long so I prefer to give to you all the log in a file. You can find the search step from line 723 or below, but I prefer to give to you everything. ; ```; prefilter /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//ALIGN/635041581728617992/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 36 --compressed 0 -v 3 -s 7.0 . Query database size: 12187255 type: Aminoacid; Estimated memory consumption: 42G; Target database size: 12187255 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 12.19M 26s 362ms; Index table: Masked residues: 43826477; Index table: fill; [=================================================================] 12.19M 38s 306ms; Index statistics; Entries: 3083105370; DB size: 18129 MB; Avg k-mer size: 48.173521; Top 10 k-mers; GPGGTL	40332; GQQVAR	22194; GEGGVV	20313; NAIAAG	18525; YTGTPK	18522; ALAIAR	16978; GFVAVR	15587; GPGGTT	14728; GEGGTL	13758; LAMHRT	13125; Time for index table init: 0h 1m 7s 827ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12187255; Target db start 1 to 12187255; [======; ```; [pipeline.log](https://github.com/soedinglab/MMseqs2/files/5856223/pipeline.log); Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034
https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034:51,Testability,log,log,51,"It is very long so I prefer to give to you all the log in a file. You can find the search step from line 723 or below, but I prefer to give to you everything. ; ```; prefilter /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//ALIGN/635041581728617992/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 36 --compressed 0 -v 3 -s 7.0 . Query database size: 12187255 type: Aminoacid; Estimated memory consumption: 42G; Target database size: 12187255 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 12.19M 26s 362ms; Index table: Masked residues: 43826477; Index table: fill; [=================================================================] 12.19M 38s 306ms; Index statistics; Entries: 3083105370; DB size: 18129 MB; Avg k-mer size: 48.173521; Top 10 k-mers; GPGGTL	40332; GQQVAR	22194; GEGGVV	20313; NAIAAG	18525; YTGTPK	18522; ALAIAR	16978; GFVAVR	15587; GPGGTT	14728; GEGGTL	13758; LAMHRT	13125; Time for index table init: 0h 1m 7s 827ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12187255; Target db start 1 to 12187255; [======; ```; [pipeline.log](https://github.com/soedinglab/MMseqs2/files/5856223/pipeline.log); Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034
https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034:1803,Testability,log,log,1803,"It is very long so I prefer to give to you all the log in a file. You can find the search step from line 723 or below, but I prefer to give to you everything. ; ```; prefilter /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//ALIGN/635041581728617992/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 36 --compressed 0 -v 3 -s 7.0 . Query database size: 12187255 type: Aminoacid; Estimated memory consumption: 42G; Target database size: 12187255 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 12.19M 26s 362ms; Index table: Masked residues: 43826477; Index table: fill; [=================================================================] 12.19M 38s 306ms; Index statistics; Entries: 3083105370; DB size: 18129 MB; Avg k-mer size: 48.173521; Top 10 k-mers; GPGGTL	40332; GQQVAR	22194; GEGGVV	20313; NAIAAG	18525; YTGTPK	18522; ALAIAR	16978; GFVAVR	15587; GPGGTT	14728; GEGGTL	13758; LAMHRT	13125; Time for index table init: 0h 1m 7s 827ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12187255; Target db start 1 to 12187255; [======; ```; [pipeline.log](https://github.com/soedinglab/MMseqs2/files/5856223/pipeline.log); Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034
https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034:1869,Testability,log,log,1869,"It is very long so I prefer to give to you all the log in a file. You can find the search step from line 723 or below, but I prefer to give to you everything. ; ```; prefilter /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//ALIGN/635041581728617992/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 36 --compressed 0 -v 3 -s 7.0 . Query database size: 12187255 type: Aminoacid; Estimated memory consumption: 42G; Target database size: 12187255 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 12.19M 26s 362ms; Index table: Masked residues: 43826477; Index table: fill; [=================================================================] 12.19M 38s 306ms; Index statistics; Entries: 3083105370; DB size: 18129 MB; Avg k-mer size: 48.173521; Top 10 k-mers; GPGGTL	40332; GQQVAR	22194; GEGGVV	20313; NAIAAG	18525; YTGTPK	18522; ALAIAR	16978; GFVAVR	15587; GPGGTT	14728; GEGGTL	13758; LAMHRT	13125; Time for index table init: 0h 1m 7s 827ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12187255; Target db start 1 to 12187255; [======; ```; [pipeline.log](https://github.com/soedinglab/MMseqs2/files/5856223/pipeline.log); Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034
https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765439644:149,Availability,down,down,149,"Everything seems to be going alright. As this is a later clustering step, fewer sequences (~12M) remain to be clustered. The memory requirement goes down with the number of sequences remaining.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765439644
https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765448075:195,Availability,down,downloading,195,"What parameters did you use (the log doesn't show the call to `mmseqs (easy-)cluster`)? What MMseqs2 version/commit is this (please compile from a git checkout if you compile from source, not by downloading the tar.gz/zip)?. It seems like you are using the single step clustering, that should be much slower than the cascaded clustering.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765448075
https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765448075:33,Testability,log,log,33,"What parameters did you use (the log doesn't show the call to `mmseqs (easy-)cluster`)? What MMseqs2 version/commit is this (please compile from a git checkout if you compile from source, not by downloading the tar.gz/zip)?. It seems like you are using the single step clustering, that should be much slower than the cascaded clustering.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765448075
https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765522172:175,Deployability,pipeline,pipeline,175,"I am not sure what exactly you are running currently. Could you make a list of all MMseqs2 commands you are running or link to the script you are running?. Using the Uniclust pipeline doesn't really make sense anymore, since it's extremely slow.; You should use multiple separate `mmseqs cluster` calls with `--cluster-reassign` at different `--min-seq-id` levels.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765522172
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:693,Availability,Mask,Mask,693,"And the full output of a clustering run:. Tmp DB_clustered/tmp folder does not exist or is not a directory.; Create dir DB_clustered/tmp; cluster DB_in/shuffle_in DB_clustered/shuffle_cl DB_clustered/tmp --min-seq-id 0.9. MMseqs Version: 96d452cb432fc4674991a48952deaf24d1787e77; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:710,Availability,Mask,Mask,710,"And the full output of a clustering run:. Tmp DB_clustered/tmp folder does not exist or is not a directory.; Create dir DB_clustered/tmp; cluster DB_in/shuffle_in DB_clustered/shuffle_cl DB_clustered/tmp --min-seq-id 0.9. MMseqs Version: 96d452cb432fc4674991a48952deaf24d1787e77; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:2623,Availability,mask,mask,2623,"de only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-li",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:2632,Availability,mask,mask-lower-case,2632,"de only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-li",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:3123,Availability,mask,mask,3123,"--alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1951 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 1.95K 0s 41ms; Sort kmer 0h 0m 0s 1ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:3132,Availability,mask,mask-lower-case,3132,"--alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1951 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 1.95K 0s 41ms; Sort kmer 0h 0m 0s 1ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:3609,Availability,mask,mask,3609,"--mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1951 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 1.95K 0s 41ms; Sort kmer 0h 0m 0s 1ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 156ms; rescorediagonal DB_in/shuffle_in DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-se",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:3618,Availability,mask,mask-lower-case,3618,"--mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1951 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 1.95K 0s 41ms; Sort kmer 0h 0m 0s 1ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 156ms; rescorediagonal DB_in/shuffle_in DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-se",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:11392,Availability,mask,mask,11392,"===================] 416 0s 33ms; Write merged clustering; [=================================================================] 1.95K 0s 45ms; Time for merging to clu_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 69ms; createsubdb DB_clustered/tmp/17526443716087640986/clu_redundancy DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 416 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 416 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 416 0s 41ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 416 0s 6ms; Index statistics; Entries: 125; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; XXXXXX 6; XXXXXX 6; XXXXXX 4; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 1; Time for index table init: 0h 0m 1s 308ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 416; Target db start 1 to 416; [==========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:11401,Availability,mask,mask-lower-case,11401,"===================] 416 0s 33ms; Write merged clustering; [=================================================================] 1.95K 0s 45ms; Time for merging to clu_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 69ms; createsubdb DB_clustered/tmp/17526443716087640986/clu_redundancy DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 416 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 416 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 416 0s 41ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 416 0s 6ms; Index statistics; Entries: 125; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; XXXXXX 6; XXXXXX 6; XXXXXX 4; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 1; Time for index table init: 0h 0m 1s 308ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 416; Target db start 1 to 416; [==========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:11848,Availability,Mask,Masked,11848,"-subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 416 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 416 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 416 0s 41ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 416 0s 6ms; Index statistics; Entries: 125; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; XXXXXX 6; XXXXXX 6; XXXXXX 4; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 1; Time for index table init: 0h 0m 1s 308ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 416; Target db start 1 to 416; [=================================================================] 416 0s 20ms. 0.116417 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; Time for processing: 0h 0m 2s 35ms; align DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/input_step_redundancy DB",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:3841,Energy Efficiency,Reduce,Reduced,3841,"/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1951 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 1.95K 0s 41ms; Sort kmer 0h 0m 0s 1ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 156ms; rescorediagonal DB_in/shuffle_in DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [==============================================================] ===1.95K 0s 40ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 71ms; clus",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:11612,Energy Efficiency,consumption,consumption,11612,"-subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 416 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 416 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 416 0s 41ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 416 0s 6ms; Index statistics; Entries: 125; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; XXXXXX 6; XXXXXX 6; XXXXXX 4; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 1; Time for index table init: 0h 0m 1s 308ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 416; Target db start 1 to 416; [=================================================================] 416 0s 20ms. 0.116417 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; Time for processing: 0h 0m 2s 35ms; align DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/input_step_redundancy DB",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:998,Integrability,wrap,wrapped,998,"And the full output of a clustering run:. Tmp DB_clustered/tmp folder does not exist or is not a directory.; Create dir DB_clustered/tmp; cluster DB_in/shuffle_in DB_clustered/shuffle_cl DB_clustered/tmp --min-seq-id 0.9. MMseqs Version: 96d452cb432fc4674991a48952deaf24d1787e77; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:2156,Integrability,wrap,wrapped-scoring,2156,"lse; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --c",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:4496,Integrability,wrap,wrapped-scoring,4496,".9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1951 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 1.95K 0s 41ms; Sort kmer 0h 0m 0s 1ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 156ms; rescorediagonal DB_in/shuffle_in DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [==============================================================] ===1.95K 0s 40ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 71ms; clust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore1 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 1.95K 0s 9ms; Sort entries; Find missing connections; Found 1534 new connections.; Reconstruct initial order; [=================================================================] 1.95K 0s 10ms; Add missing connections; [=============================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:7391,Integrability,wrap,wrapped-scoring,7391,"me for merging to pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; filterdb DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_filter1 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_filter2 --filter-file DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 417 0s 17ms; Time for merging to pref_filter2: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 37ms; rescorediagonal DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_filter2 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================================] 417 0s 10ms; ==Time for merging to pref_rescore2: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 52ms; align DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore2 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:8171,Integrability,wrap,wrapped-scoring,8171,"_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_filter2 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================================] 417 0s 10ms; ==Time for merging to pref_rescore2: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 52ms; align DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore2 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 417 type: Aminoacid; Target database size: 417 type: Aminoacid; Calculation of alignments; [=================================================================] 417 0s 37ms; Time for merging to aln: 0h 0m 0s 2ms. 615 alignments calculated.; 418 sequence pairs passed the thresholds (0.679675 of overall calculated).; 1.002398 hits per query sequence.; Time for processing: 0h 0m 0s 81ms; clust DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/aln DB_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:12960,Integrability,wrap,wrapped-scoring,12960,"16 0s 6ms; Index statistics; Entries: 125; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; XXXXXX 6; XXXXXX 6; XXXXXX 4; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 1; Time for index table init: 0h 0m 1s 308ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 416; Target db start 1 to 416; [=================================================================] 416 0s 20ms. 0.116417 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; Time for processing: 0h 0m 2s 35ms; align DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/pref_step0 DB_clustered/tmp/17526443716087640986/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 416 type: Aminoacid; Target database size: 416 type: Aminoacid; Calculation of alignments; [=================================================================] 416 0s 60ms; Time for merging to aln_step0: 0h 0m 0s 1ms. 464 alignments calculated.; 437 sequence pairs passed the thresholds (0.941810 of overall calculated).; 1.050481 hits per query sequence.; Time for processing: 0h 0m 0s 117ms; clust DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/aln_step0 DB_clustered/tmp/17526443716087640986/clu_step0 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:1722,Modifiability,extend,extendable,1722,"lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extend",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:2466,Modifiability,extend,extend,2466,"assign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:2709,Modifiability,extend,extendable,2709,"de only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-li",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:3249,Modifiability,extend,extendable,3249,"c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1951 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 1.95K 0s 41ms; Sort kmer 0h 0m 0s 1ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 156ms; rescorediagonal D",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:3735,Modifiability,extend,extendable,3735,"multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1951 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 1.95K 0s 41ms; Sort kmer 0h 0m 0s 1ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 156ms; rescorediagonal DB_in/shuffle_in DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:8481,Modifiability,extend,extend,8481," 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================================] 417 0s 10ms; ==Time for merging to pref_rescore2: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 52ms; align DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore2 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 417 type: Aminoacid; Target database size: 417 type: Aminoacid; Calculation of alignments; [=================================================================] 417 0s 37ms; Time for merging to aln: 0h 0m 0s 2ms. 615 alignments calculated.; 418 sequence pairs passed the thresholds (0.679675 of overall calculated).; 1.002398 hits per query sequence.; Time for processing: 0h 0m 0s 81ms; clust DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/aln DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 417 0s 4ms; Sort entries; Find missing connections; Found 1 ne",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:13270,Modifiability,extend,extend,13270,"efiltering scores calculation (step 1 of 1); Query db start 1 to 416; Target db start 1 to 416; [=================================================================] 416 0s 20ms. 0.116417 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; Time for processing: 0h 0m 2s 35ms; align DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/pref_step0 DB_clustered/tmp/17526443716087640986/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 416 type: Aminoacid; Target database size: 416 type: Aminoacid; Calculation of alignments; [=================================================================] 416 0s 60ms; Time for merging to aln_step0: 0h 0m 0s 1ms. 464 alignments calculated.; 437 sequence pairs passed the thresholds (0.941810 of overall calculated).; 1.050481 hits per query sequence.; Time for processing: 0h 0m 0s 117ms; clust DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/aln_step0 DB_clustered/tmp/17526443716087640986/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 416 0s 3ms; Sort entries; Find missing connections; Found 1 new connections.; Reconstruct initial order; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:2391,Performance,load,load-mode,2391,"erage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_i",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:4656,Performance,load,load-mode,4656,"v-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1951 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 1.95K 0s 41ms; Sort kmer 0h 0m 0s 1ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 156ms; rescorediagonal DB_in/shuffle_in DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [==============================================================] ===1.95K 0s 40ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 71ms; clust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore1 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 1.95K 0s 9ms; Sort entries; Find missing connections; Found 1534 new connections.; Reconstruct initial order; [=================================================================] 1.95K 0s 10ms; Add missing connections; [=================================================================] 1.95K 0s 0ms. Time for read in: 0h 0m 0s 95ms; Total time: 0h 0m 0s 137ms. Size of the sequence database: 1951; Si",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:7551,Performance,load,load-mode,7551,"/4509971647793470292/pref_filter1 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_filter2 --filter-file DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 417 0s 17ms; Time for merging to pref_filter2: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 37ms; rescorediagonal DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_filter2 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================================] 417 0s 10ms; ==Time for merging to pref_rescore2: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 52ms; align DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore2 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compresse",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:8406,Performance,load,load-mode,8406,"de.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================================] 417 0s 10ms; ==Time for merging to pref_rescore2: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 52ms; align DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore2 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 417 type: Aminoacid; Target database size: 417 type: Aminoacid; Calculation of alignments; [=================================================================] 417 0s 37ms; Time for merging to aln: 0h 0m 0s 2ms. 615 alignments calculated.; 418 sequence pairs passed the thresholds (0.679675 of overall calculated).; 1.002398 hits per query sequence.; Time for processing: 0h 0m 0s 81ms; clust DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/aln DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: S",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:11489,Performance,load,load-mode,11489,"===================] 416 0s 33ms; Write merged clustering; [=================================================================] 1.95K 0s 45ms; Time for merging to clu_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 69ms; createsubdb DB_clustered/tmp/17526443716087640986/clu_redundancy DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 416 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 416 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 416 0s 41ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 416 0s 6ms; Index statistics; Entries: 125; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; XXXXXX 6; XXXXXX 6; XXXXXX 4; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 1; Time for index table init: 0h 0m 1s 308ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 416; Target db start 1 to 416; [==========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:13195,Performance,load,load-mode,13195,"XXXXX 2; XXXXXX 1; Time for index table init: 0h 0m 1s 308ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 416; Target db start 1 to 416; [=================================================================] 416 0s 20ms. 0.116417 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; Time for processing: 0h 0m 2s 35ms; align DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/pref_step0 DB_clustered/tmp/17526443716087640986/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 416 type: Aminoacid; Target database size: 416 type: Aminoacid; Calculation of alignments; [=================================================================] 416 0s 60ms; Time for merging to aln_step0: 0h 0m 0s 1ms. 464 alignments calculated.; 437 sequence pairs passed the thresholds (0.941810 of overall calculated).; 1.050481 hits per query sequence.; Time for processing: 0h 0m 0s 117ms; clust DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/aln_step0 DB_clustered/tmp/17526443716087640986/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [===========================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:1700,Security,hash,hash,1700,"lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extend",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:2657,Security,hash,hash-shift,2657,"de only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-li",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:3197,Security,hash,hash-shift,3197,"c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1951 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 1.95K 0s 41ms; Sort kmer 0h 0m 0s 1ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 156ms; rescorediagonal D",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:3683,Security,hash,hash-shift,3683,"multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1951 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 1.95K 0s 41ms; Sort kmer 0h 0m 0s 1ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 156ms; rescorediagonal DB_in/shuffle_in DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093
https://github.com/soedinglab/MMseqs2/issues/399#issuecomment-767474520:216,Availability,avail,available,216,"I fixed this issue recently in https://github.com/soedinglab/MMseqs2/issues/379. It will be part of the next release, which should happen somewhat soonish. In the meantime you can use the static precompiled binaries available at https://mmseqs.com/latest/.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399#issuecomment-767474520
https://github.com/soedinglab/MMseqs2/issues/399#issuecomment-767474520:109,Deployability,release,release,109,"I fixed this issue recently in https://github.com/soedinglab/MMseqs2/issues/379. It will be part of the next release, which should happen somewhat soonish. In the meantime you can use the static precompiled binaries available at https://mmseqs.com/latest/.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399#issuecomment-767474520
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771502389:38,Testability,log,log,38,@s-devos could you please provide the log of the clustering?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771502389
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:670,Availability,Mask,Mask,670,"Tmp tmpfiles/ folder does not exist or is not a directory.; Create dir tmpfiles/; cluster DB_in/fasta_in_db_HC DB_clustered/clustered_HC tmpfiles/ --cluster-reassign 1 --cluster-mode 1 --cov-mode 0. MMseqs Version: 96d452cb432fc4674991a48952deaf24d1787e77; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundan",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:687,Availability,Mask,Mask,687,"Tmp tmpfiles/ folder does not exist or is not a directory.; Create dir tmpfiles/; cluster DB_in/fasta_in_db_HC DB_clustered/clustered_HC tmpfiles/ --cluster-reassign 1 --cluster-mode 1 --cov-mode 0. MMseqs Version: 96d452cb432fc4674991a48952deaf24d1787e77; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundan",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:2673,Availability,mask,mask,2673,"ty to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundancy tmpfiles//13298481167543164943/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:2682,Availability,mask,mask-lower-case,2682,"ty to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundancy tmpfiles//13298481167543164943/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:3169,Availability,mask,mask,3169," -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:3178,Availability,mask,mask-lower-case,3178," -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:3651,Availability,mask,mask,3651,"r-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 182ms; rescorediagonal DB_in/fasta_in_db_HC DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:3660,Availability,mask,mask-lower-case,3660,"r-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 182ms; rescorediagonal DB_in/fasta_in_db_HC DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:11427,Availability,mask,mask,11427,"===================================================] 276 0s 37ms; Write merged clustering; [=================================================================] 303 0s 48ms; Time for merging to clu_redundancy: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 102ms; createsubdb tmpfiles//13298481167543164943/clu_redundancy DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 276 0s 28ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 276 0s 5ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 36ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [==========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:11436,Availability,mask,mask-lower-case,11436,"===================================================] 276 0s 37ms; Write merged clustering; [=================================================================] 303 0s 48ms; Time for merging to clu_redundancy: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 102ms; createsubdb tmpfiles//13298481167543164943/clu_redundancy DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 276 0s 28ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 276 0s 5ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 36ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [==========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:11883,Availability,Mask,Masked,11883,"tep_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 276 0s 28ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 276 0s 5ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 36ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [================================================================] =276 0s 28ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 5ms; Time for processing: 0h 0m 1s 852ms; align tmpfiles/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:15543,Availability,mask,mask,15543,"s 66ms; connected component mode; Total time: 0h 0m 0s 90ms. Size of the sequence database: 276; Size of the alignment database: 276; Number of clusters: 237. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 96ms; createsubdb tmpfiles//13298481167543164943/clu_step0 tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 237 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 237 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 237 0s 39ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 237 0s 9ms; Index statistics; Entries: 1403; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 25ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 237; Target db start 1 to 237; [==========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:15552,Availability,mask,mask-lower-case,15552,"s 66ms; connected component mode; Total time: 0h 0m 0s 90ms. Size of the sequence database: 276; Size of the alignment database: 276; Number of clusters: 237. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 96ms; createsubdb tmpfiles//13298481167543164943/clu_step0 tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 237 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 237 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 237 0s 39ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 237 0s 9ms; Index statistics; Entries: 1403; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 25ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 237; Target db start 1 to 237; [==========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:16000,Availability,Mask,Masked,16000,"mpfiles//13298481167543164943/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 237 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 237 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 237 0s 39ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 237 0s 9ms; Index statistics; Entries: 1403; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 25ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 237; Target db start 1 to 237; [=================================================================] 237 0s 19ms. 20.483280 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 707ms; align tmpfiles",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:19620,Availability,mask,mask,19620," in: 0h 0m 0s 60ms; connected component mode; Total time: 0h 0m 0s 84ms. Size of the sequence database: 237; Size of the alignment database: 237; Number of clusters: 218. Writing results 0h 0m 0s 2ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; createsubdb tmpfiles//13298481167543164943/clu_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 218 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 218 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 218 0s 31ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 218 0s 4ms; Index statistics; Entries: 1318; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 994ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 218; Target db start 1 to 218; [=========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:19629,Availability,mask,mask-lower-case,19629," in: 0h 0m 0s 60ms; connected component mode; Total time: 0h 0m 0s 84ms. Size of the sequence database: 237; Size of the alignment database: 237; Number of clusters: 218. Writing results 0h 0m 0s 2ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; createsubdb tmpfiles//13298481167543164943/clu_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 218 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 218 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 218 0s 31ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 218 0s 4ms; Index statistics; Entries: 1318; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 994ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 218; Target db start 1 to 218; [=========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:20077,Availability,Mask,Masked,20077," tmpfiles//13298481167543164943/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 218 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 218 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 218 0s 31ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 218 0s 4ms; Index statistics; Entries: 1318; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 994ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 218; Target db start 1 to 218; [=================================================================] 218 0s 55ms. 193.314206 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 763ms; align tmpfil",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:27744,Availability,mask,mask,27744,"clu_not_accepted_swap: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 70ms; createsubdb tmpfiles//13298481167543164943/clu_not_accepted_swap DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; createsubdb tmpfiles//13298481167543164943/clu DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/seq_wrong_assigned tmpfiles//13298481167543164943/seq_seeds.merged tmpfiles//13298481167543164943/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 10 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 210 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 210 0s 6ms; Index statistics; Entries: 1284; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 989ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 10; Target db start 1 to 210; [===========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:27753,Availability,mask,mask-lower-case,27753,"clu_not_accepted_swap: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 70ms; createsubdb tmpfiles//13298481167543164943/clu_not_accepted_swap DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; createsubdb tmpfiles//13298481167543164943/clu DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/seq_wrong_assigned tmpfiles//13298481167543164943/seq_seeds.merged tmpfiles//13298481167543164943/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 10 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 210 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 210 0s 6ms; Index statistics; Entries: 1284; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 989ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 10; Target db start 1 to 210; [===========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:28200,Availability,Mask,Masked,28200,"les//13298481167543164943/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/seq_wrong_assigned tmpfiles//13298481167543164943/seq_seeds.merged tmpfiles//13298481167543164943/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 10 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 210 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 210 0s 6ms; Index statistics; Entries: 1284; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 989ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 10; Target db start 1 to 210; [=================================================================] 10 0s 14ms. 487.061439 k-mers per position; 14 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to seq_wrong_assigned_pref: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 609ms; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:33244,Availability,Error,Error,33244,============================] 22 0s 20ms; Time for merging to seq_wrong_assigned_pref_swaped_aln_ocol: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 57ms; mergedbs tmpfiles//13298481167543164943/seq_seeds.merged tmpfiles//13298481167543164943/clu_accepted_plus_wrong tmpfiles//13298481167543164943/clu_accepted tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped_aln_ocol --compressed 0 -v 3. Merging the results to tmpfiles//13298481167543164943/clu_accepted_plus_wrong; [=================================================================] 210 0s 0ms; Time for merging to clu_accepted_plus_wrong: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; tsv2db tmpfiles//13298481167543164943/missing.single.seqs tmpfiles//13298481167543164943/missing.single.seqs.db --output-dbtype 6 --compressed 0 -v 3. Output database type: Clustering; Time for merging to missing.single.seqs.db: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; mergedbs DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_accepted_plus_wrong_plus_single tmpfiles//13298481167543164943/clu_accepted_plus_wrong tmpfiles//13298481167543164943/missing.single.seqs.db --compressed 0 -v 3. Merging the results to tmpfiles//13298481167543164943/clu_accepted_plus_wrong_plus_single; [=================================================================] 303 0s 0ms; Time for merging to clu_accepted_plus_wrong_plus_single: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; clust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_accepted_plus_wrong_plus_single DB_clustered/clustered_HC --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component; [=================================================================Alignment format is not supported!; Alignment format is not supported!; Alignment format is not supported!; ] 303 0s 0ms; Sort entries; Find missing connections; Found 100 new connections.; Reconstruct initial order; [Error: Clustering step 2 died,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:3882,Energy Efficiency,Reduce,Reduced,3882,"tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 182ms; rescorediagonal DB_in/fasta_in_db_HC DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 303 0s 14ms; Time for merging to pref_rescore1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 46ms; clust DB_in/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:11647,Energy Efficiency,consumption,consumption,11647,"tep_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 276 0s 28ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 276 0s 5ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 36ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [================================================================] =276 0s 28ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 5ms; Time for processing: 0h 0m 1s 852ms; align tmpfiles/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:15764,Energy Efficiency,consumption,consumption,15764,"mpfiles//13298481167543164943/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 237 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 237 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 237 0s 39ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 237 0s 9ms; Index statistics; Entries: 1403; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 25ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 237; Target db start 1 to 237; [=================================================================] 237 0s 19ms. 20.483280 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 707ms; align tmpfiles",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:19841,Energy Efficiency,consumption,consumption,19841," tmpfiles//13298481167543164943/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 218 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 218 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 218 0s 31ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 218 0s 4ms; Index statistics; Entries: 1318; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 994ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 218; Target db start 1 to 218; [=================================================================] 218 0s 55ms. 193.314206 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 763ms; align tmpfil",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:27964,Energy Efficiency,consumption,consumption,27964,"les//13298481167543164943/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/seq_wrong_assigned tmpfiles//13298481167543164943/seq_seeds.merged tmpfiles//13298481167543164943/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 10 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 210 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 210 0s 6ms; Index statistics; Entries: 1284; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 989ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 10; Target db start 1 to 210; [=================================================================] 10 0s 14ms. 487.061439 k-mers per position; 14 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to seq_wrong_assigned_pref: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 609ms; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:975,Integrability,wrap,wrapped,975,"Tmp tmpfiles/ folder does not exist or is not a directory.; Create dir tmpfiles/; cluster DB_in/fasta_in_db_HC DB_clustered/clustered_HC tmpfiles/ --cluster-reassign 1 --cluster-mode 1 --cov-mode 0. MMseqs Version: 96d452cb432fc4674991a48952deaf24d1787e77; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundan",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:2208,Integrability,wrap,wrapped-scoring,2208,"t nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundancy tmpfiles//13298481167543164943/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mod",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:4531,Integrability,wrap,wrapped-scoring,4531,"-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 182ms; rescorediagonal DB_in/fasta_in_db_HC DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 303 0s 14ms; Time for merging to pref_rescore1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 46ms; clust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore1 tmpfiles//13298481167543164943/linclust/10229649346622198404/pre_clust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component; [=================================================================] 303 0s 0ms; Sort entries; Find missing connections; Found 28 new connections.; Reconstruct initial order; [=================================================================] 303 0s 6ms; Add missing connections; [====================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:7371,Integrability,wrap,wrapped-scoring,7371,"98404/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; filterdb tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_filter1 tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_filter2 --filter-file tmpfiles//13298481167543164943/linclust/10229649346622198404/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 276 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 31ms; rescorediagonal tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_filter2 tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 276 0s 20ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 52ms; align tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore2 tmpfiles//13298481167543164943/linclust/10229649346622198404/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-co",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:8239,Integrability,wrap,wrapped-scoring,8239,"iles//13298481167543164943/linclust/10229649346622198404/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 276 0s 20ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 52ms; align tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore2 tmpfiles//13298481167543164943/linclust/10229649346622198404/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 276 0s 26ms; Time for merging to aln: 0h 0m 0s 1ms. 276 alignments calculated.; 276 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 82ms; clust tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/aln tmpfiles//1329848",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:13081,Integrability,wrap,wrapped-scoring,13081," Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 36ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [================================================================] =276 0s 28ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 5ms; Time for processing: 0h 0m 1s 852ms; align tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/pref_step0 tmpfiles//13298481167543164943/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 276 0s 39ms; Time for merging to aln_step0: 0h 0m 0s 2ms. 413 alignments calculated.; 406 sequence pairs passed the thresholds (0.983051 of overall calculated).; 1.471014 hits per query sequence.; Time for processing: 0h 0m 0s 82ms; clust tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/aln_step0 tmpfiles//13298481167543164943/clu_step0 --cluster-mode 1 --max-i",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:17179,Integrability,wrap,wrapped-scoring,17179,"mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 25ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 237; Target db start 1 to 237; [=================================================================] 237 0s 19ms. 20.483280 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 707ms; align tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/pref_step1 tmpfiles//13298481167543164943/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 237 type: Aminoacid; Target database size: 237 type: Aminoacid; Calculation of alignments; [=================================================================] 237 0s 50ms; Time for merging to aln_step1: 0h 0m 0s 3ms. 306 alignments calculated.; 271 sequence pairs passed the thresholds (0.885621 of overall calculated).; 1.143460 hits per query sequence.; Time for processing: 0h 0m 0s 99ms; clust tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/aln_step1 tmpfiles//13298481167543164943/clu_step1 --cluster-mode 1 --max-iterations ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:21258,Integrability,wrap,wrapped-scoring,21258,"r size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 994ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 218; Target db start 1 to 218; [=================================================================] 218 0s 55ms. 193.314206 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 763ms; align tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/pref_step2 tmpfiles//13298481167543164943/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 218 type: Aminoacid; Target database size: 218 type: Aminoacid; Calculation of alignments; [=================================================================] 218 0s 82ms; Time for merging to aln_step2: 0h 0m 0s 2ms. 358 alignments calculated.; 247 sequence pairs passed the thresholds (0.689944 of overall calculated).; 1.133028 hits per query sequence.; Time for processing: 0h 0m 0s 123ms; clust tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/aln_step2 tmpfiles//13298481167543164943/clu_step2 --cluster-mode 1 --max-iterations",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:24019,Integrability,wrap,wrapped-scoring,24019,"usters DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu tmpfiles//13298481167543164943/clu_redundancy tmpfiles//13298481167543164943/clu_step0 tmpfiles//13298481167543164943/clu_step1 tmpfiles//13298481167543164943/clu_step2. Clustering step 1; [=================================================================] 276 0s 7ms; Clustering step 2; [=================================================================] 237 0s 23ms; Clustering step 3; [=================================================================] 218 0s 41ms; Clustering step 4; [=================================================================] 200 0s 62ms; Write merged clustering; [=================================================================] 303 0s 66ms; Time for merging to clu: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 112ms; align DB_in/fasta_in_db_HC DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu tmpfiles//13298481167543164943/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 303 type: Aminoacid; Target database size: 303 type: Aminoacid; Calculation of alignments; [=================================================================] 200 0s 16ms; Time for merging to aln: 0h 0m 0s 3ms. 303 alignments calculated.; 293 sequence pairs passed the thresholds (0.966997 of overall calculated).; 1.465000 hits per query sequence.; Time for processing: 0h 0m 0s 71ms; subtractdbs tmpfiles//13298481167543164943/clu tmpfiles//13298481167543164943/aln tmpfiles//13298481167543164943/clu_not_accepted --e-profile 100000000 -e 100000000 --thre",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:30145,Integrability,wrap,wrapped-scoring,30145,"9ms; swapdb tmpfiles//13298481167543164943/seq_wrong_assigned_pref tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped --threads 16 --compressed 0 -v 3. [=================================================================] 10 0s 5ms; Computing offsets.; [=================================================================] 10 0s 2ms. Reading results.; [=================================================================] 10 0s 5ms. Output database: tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped; [=================================================================] 297 0s 5ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 73ms; align tmpfiles//13298481167543164943/seq_seeds.merged tmpfiles//13298481167543164943/seq_wrong_assigned tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 210 type: Aminoacid; Target database size: 10 type: Aminoacid; Calculation of alignments; [=================================================================] 22 0s 31ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 0ms. 29 alignments calculated.; 21 sequence pairs passed the thresholds (0.724138 of overall calculated).; 0.954545 hits per query sequence.; Time for processing: 0h 0m 0s 80ms; filterdb tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped_aln tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped_aln_oco",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:1696,Modifiability,extend,extendable,1696,"sk lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundancy tmpfiles//13298481167543164943/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:2516,Modifiability,extend,extend,2516,"lse; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundancy tmpfiles//13298481167543164943/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kme",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:2759,Modifiability,extend,extendable,2759,"ty to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundancy tmpfiles//13298481167543164943/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:3295,Modifiability,extend,extendable,3295," 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 182ms; rescorediagonal DB_in/fa",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:3777,Modifiability,extend,extendable,3777,"-ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 182ms; rescorediagonal DB_in/fasta_in_db_HC DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:8547,Modifiability,extend,extend,8547,"-compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 276 0s 20ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 52ms; align tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore2 tmpfiles//13298481167543164943/linclust/10229649346622198404/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 276 0s 26ms; Time for merging to aln: 0h 0m 0s 1ms. 276 alignments calculated.; 276 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 82ms; clust tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/aln tmpfiles//13298481167543164943/linclust/10229649346622198404/clust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component; [=================================================================] 276 0s 0ms; Sort entries; Find missing connections; Found 0 new connec",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:13389,Modifiability,extend,extend,13389,"t 1 to 276; [================================================================] =276 0s 28ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 5ms; Time for processing: 0h 0m 1s 852ms; align tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/pref_step0 tmpfiles//13298481167543164943/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 276 0s 39ms; Time for merging to aln_step0: 0h 0m 0s 2ms. 413 alignments calculated.; 406 sequence pairs passed the thresholds (0.983051 of overall calculated).; 1.471014 hits per query sequence.; Time for processing: 0h 0m 0s 82ms; clust tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/aln_step0 tmpfiles//13298481167543164943/clu_step0 --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component; [=================================================================] 276 0s 6ms; Sort entries; Find missing connections; Found 0 new connections.; Reconstruct initial order; [======================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:17487,Modifiability,extend,extend,17487,"237; Target db start 1 to 237; [=================================================================] 237 0s 19ms. 20.483280 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 707ms; align tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/pref_step1 tmpfiles//13298481167543164943/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 237 type: Aminoacid; Target database size: 237 type: Aminoacid; Calculation of alignments; [=================================================================] 237 0s 50ms; Time for merging to aln_step1: 0h 0m 0s 3ms. 306 alignments calculated.; 271 sequence pairs passed the thresholds (0.885621 of overall calculated).; 1.143460 hits per query sequence.; Time for processing: 0h 0m 0s 99ms; clust tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/aln_step1 tmpfiles//13298481167543164943/clu_step1 --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component; [=================================================================] 237 0s 4ms; Sort entries; Find missing connections; Found 10 new connections.; Reconstruct initial order; [===============================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:21566,Modifiability,extend,extend,21566,"18; Target db start 1 to 218; [=================================================================] 218 0s 55ms. 193.314206 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 763ms; align tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/pref_step2 tmpfiles//13298481167543164943/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 218 type: Aminoacid; Target database size: 218 type: Aminoacid; Calculation of alignments; [=================================================================] 218 0s 82ms; Time for merging to aln_step2: 0h 0m 0s 2ms. 358 alignments calculated.; 247 sequence pairs passed the thresholds (0.689944 of overall calculated).; 1.133028 hits per query sequence.; Time for processing: 0h 0m 0s 123ms; clust tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/aln_step2 tmpfiles//13298481167543164943/clu_step2 --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component; [=================================================================] 218 0s 9ms; Sort entries; Find missing connections; Found 7 new connections.; Reconstruct initial order; [===============================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:24327,Modifiability,extend,extend,24327,"276 0s 7ms; Clustering step 2; [=================================================================] 237 0s 23ms; Clustering step 3; [=================================================================] 218 0s 41ms; Clustering step 4; [=================================================================] 200 0s 62ms; Write merged clustering; [=================================================================] 303 0s 66ms; Time for merging to clu: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 112ms; align DB_in/fasta_in_db_HC DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu tmpfiles//13298481167543164943/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 303 type: Aminoacid; Target database size: 303 type: Aminoacid; Calculation of alignments; [=================================================================] 200 0s 16ms; Time for merging to aln: 0h 0m 0s 3ms. 303 alignments calculated.; 293 sequence pairs passed the thresholds (0.966997 of overall calculated).; 1.465000 hits per query sequence.; Time for processing: 0h 0m 0s 71ms; subtractdbs tmpfiles//13298481167543164943/clu tmpfiles//13298481167543164943/aln tmpfiles//13298481167543164943/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. subtractdbs tmpfiles//13298481167543164943/clu tmpfiles//13298481167543164943/aln tmpfiles//13298481167543164943/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. Remove tmpfiles//13298481167543164943/aln ids from tmpfiles//13298481167543164943/clu; [====",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:30453,Modifiability,extend,extend,30453,"========] 10 0s 2ms. Reading results.; [=================================================================] 10 0s 5ms. Output database: tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped; [=================================================================] 297 0s 5ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 73ms; align tmpfiles//13298481167543164943/seq_seeds.merged tmpfiles//13298481167543164943/seq_wrong_assigned tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 210 type: Aminoacid; Target database size: 10 type: Aminoacid; Calculation of alignments; [=================================================================] 22 0s 31ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 0ms. 29 alignments calculated.; 21 sequence pairs passed the thresholds (0.724138 of overall calculated).; 0.954545 hits per query sequence.; Time for processing: 0h 0m 0s 80ms; filterdb tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped_aln tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped_aln_ocol --trim-to-one-column --threads 16 --compressed 0 -v 3. Filtering using regular expression; [=================================================================] 22 0s 20ms; Time for merging to seq_wrong_assigned_pref_swaped_aln_ocol: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 57ms; mergedbs tmpfiles//1329848116754316",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:2441,Performance,load,load-mode,2441,"1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundancy tmpfiles//13298481167543164943/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fa",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:4691,Performance,load,load-mode,4691," 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 182ms; rescorediagonal DB_in/fasta_in_db_HC DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 303 0s 14ms; Time for merging to pref_rescore1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 46ms; clust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore1 tmpfiles//13298481167543164943/linclust/10229649346622198404/pre_clust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component; [=================================================================] 303 0s 0ms; Sort entries; Find missing connections; Found 28 new connections.; Reconstruct initial order; [=================================================================] 303 0s 6ms; Add missing connections; [=================================================================] 303 0s 0ms. Time for read in: 0h 0m 0s 66ms; connected component mode; Total time: 0h 0m 0s 93ms. Size of the sequence da",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:7529,Performance,load,load-mode,7529," 1ms; filterdb tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_filter1 tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_filter2 --filter-file tmpfiles//13298481167543164943/linclust/10229649346622198404/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 276 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 31ms; rescorediagonal tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_filter2 tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 276 0s 20ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 52ms; align tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore2 tmpfiles//13298481167543164943/linclust/10229649346622198404/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:8472,Performance,load,load-mode,8472,"c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 276 0s 20ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 52ms; align tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore2 tmpfiles//13298481167543164943/linclust/10229649346622198404/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 276 0s 26ms; Time for merging to aln: 0h 0m 0s 1ms. 276 alignments calculated.; 276 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 82ms; clust tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/aln tmpfiles//13298481167543164943/linclust/10229649346622198404/clust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:11524,Performance,load,load-mode,11524,"===================================================] 276 0s 37ms; Write merged clustering; [=================================================================] 303 0s 48ms; Time for merging to clu_redundancy: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 102ms; createsubdb tmpfiles//13298481167543164943/clu_redundancy DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 276 0s 28ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 276 0s 5ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 36ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [==========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:13314,Performance,load,load-mode,13314,"tep 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [================================================================] =276 0s 28ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 5ms; Time for processing: 0h 0m 1s 852ms; align tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/pref_step0 tmpfiles//13298481167543164943/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 276 0s 39ms; Time for merging to aln_step0: 0h 0m 0s 2ms. 413 alignments calculated.; 406 sequence pairs passed the thresholds (0.983051 of overall calculated).; 1.471014 hits per query sequence.; Time for processing: 0h 0m 0s 82ms; clust tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/aln_step0 tmpfiles//13298481167543164943/clu_step0 --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component; [=================================================================] 276 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:15641,Performance,load,load-mode,15641,"s 66ms; connected component mode; Total time: 0h 0m 0s 90ms. Size of the sequence database: 276; Size of the alignment database: 276; Number of clusters: 237. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 96ms; createsubdb tmpfiles//13298481167543164943/clu_step0 tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 237 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 237 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 237 0s 39ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 237 0s 9ms; Index statistics; Entries: 1403; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 25ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 237; Target db start 1 to 237; [==========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:17412,Performance,load,load-mode,17412,"cess prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 237; Target db start 1 to 237; [=================================================================] 237 0s 19ms. 20.483280 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 707ms; align tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/pref_step1 tmpfiles//13298481167543164943/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 237 type: Aminoacid; Target database size: 237 type: Aminoacid; Calculation of alignments; [=================================================================] 237 0s 50ms; Time for merging to aln_step1: 0h 0m 0s 3ms. 306 alignments calculated.; 271 sequence pairs passed the thresholds (0.885621 of overall calculated).; 1.143460 hits per query sequence.; Time for processing: 0h 0m 0s 99ms; clust tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/aln_step1 tmpfiles//13298481167543164943/clu_step1 --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component; [=================================================================] 237 0s 4ms; So",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:19718,Performance,load,load-mode,19718," in: 0h 0m 0s 60ms; connected component mode; Total time: 0h 0m 0s 84ms. Size of the sequence database: 237; Size of the alignment database: 237; Number of clusters: 218. Writing results 0h 0m 0s 2ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; createsubdb tmpfiles//13298481167543164943/clu_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 218 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 218 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 218 0s 31ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 218 0s 4ms; Index statistics; Entries: 1318; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 994ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 218; Target db start 1 to 218; [=========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:21491,Performance,load,load-mode,21491,"ess prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 218; Target db start 1 to 218; [=================================================================] 218 0s 55ms. 193.314206 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 763ms; align tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/pref_step2 tmpfiles//13298481167543164943/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 218 type: Aminoacid; Target database size: 218 type: Aminoacid; Calculation of alignments; [=================================================================] 218 0s 82ms; Time for merging to aln_step2: 0h 0m 0s 2ms. 358 alignments calculated.; 247 sequence pairs passed the thresholds (0.689944 of overall calculated).; 1.133028 hits per query sequence.; Time for processing: 0h 0m 0s 123ms; clust tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/aln_step2 tmpfiles//13298481167543164943/clu_step2 --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component; [=================================================================] 218 0s 9ms; S",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:24252,Performance,load,load-mode,24252,"/clu_step1 tmpfiles//13298481167543164943/clu_step2. Clustering step 1; [=================================================================] 276 0s 7ms; Clustering step 2; [=================================================================] 237 0s 23ms; Clustering step 3; [=================================================================] 218 0s 41ms; Clustering step 4; [=================================================================] 200 0s 62ms; Write merged clustering; [=================================================================] 303 0s 66ms; Time for merging to clu: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 112ms; align DB_in/fasta_in_db_HC DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu tmpfiles//13298481167543164943/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 303 type: Aminoacid; Target database size: 303 type: Aminoacid; Calculation of alignments; [=================================================================] 200 0s 16ms; Time for merging to aln: 0h 0m 0s 3ms. 303 alignments calculated.; 293 sequence pairs passed the thresholds (0.966997 of overall calculated).; 1.465000 hits per query sequence.; Time for processing: 0h 0m 0s 71ms; subtractdbs tmpfiles//13298481167543164943/clu tmpfiles//13298481167543164943/aln tmpfiles//13298481167543164943/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. subtractdbs tmpfiles//13298481167543164943/clu tmpfiles//13298481167543164943/aln tmpfiles//13298481167543164943/clu_not_accepted --e-profile 100000000",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:27842,Performance,load,load-mode,27842,"clu_not_accepted_swap: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 70ms; createsubdb tmpfiles//13298481167543164943/clu_not_accepted_swap DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; createsubdb tmpfiles//13298481167543164943/clu DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/seq_wrong_assigned tmpfiles//13298481167543164943/seq_seeds.merged tmpfiles//13298481167543164943/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 10 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 210 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 210 0s 6ms; Index statistics; Entries: 1284; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 989ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 10; Target db start 1 to 210; [===========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:30378,Performance,load,load-mode,30378,"=================================================] 10 0s 5ms; Computing offsets.; [=================================================================] 10 0s 2ms. Reading results.; [=================================================================] 10 0s 5ms. Output database: tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped; [=================================================================] 297 0s 5ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 73ms; align tmpfiles//13298481167543164943/seq_seeds.merged tmpfiles//13298481167543164943/seq_wrong_assigned tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 210 type: Aminoacid; Target database size: 10 type: Aminoacid; Calculation of alignments; [=================================================================] 22 0s 31ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 0ms. 29 alignments calculated.; 21 sequence pairs passed the thresholds (0.724138 of overall calculated).; 0.954545 hits per query sequence.; Time for processing: 0h 0m 0s 80ms; filterdb tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped_aln tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped_aln_ocol --trim-to-one-column --threads 16 --compressed 0 -v 3. Filtering using regular expression; [=================================================================] 22 0s 20ms; Time f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:1674,Security,hash,hash,1674,"sk lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundancy tmpfiles//13298481167543164943/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:2707,Security,hash,hash-shift,2707,"ty to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundancy tmpfiles//13298481167543164943/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:3243,Security,hash,hash-shift,3243," 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 182ms; rescorediagonal DB_in/fa",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:3725,Security,hash,hash-shift,3725,"-ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 182ms; rescorediagonal DB_in/fasta_in_db_HC DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-772905780:49,Availability,error,errors,49,"With other clustering modes, I run into the same errors as mentioned earlier here:; #374 . Along with the other issues I am running into, I am under the strong impression that the small size of my sequences (7-20 AA long) Is the problem. Is MMseqs2 suited to handle such data?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-772905780
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:740,Availability,Mask,Mask,740,"@martin-steinegger That makes sense, although it also happens with Set Cover (it's --cluster-reassign, right? --reassign-cluster is not recognized):. Create directory tmp/; cluster ../DB_in/fasta_in_db_HC DB_clu tmp/ --cov-mode 0 --cluster-mode 0 --cluster-reassign 1. MMseqs Version: 0828d86539a4b6d7f64bc369a5b29920862afc5a; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:757,Availability,Mask,Mask,757,"@martin-steinegger That makes sense, although it also happens with Set Cover (it's --cluster-reassign, right? --reassign-cluster is not recognized):. Create directory tmp/; cluster ../DB_in/fasta_in_db_HC DB_clu tmp/ --cov-mode 0 --cluster-mode 0 --cluster-reassign 1. MMseqs Version: 0828d86539a4b6d7f64bc369a5b29920862afc5a; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:2726,Availability,mask,mask,2726,"ly extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redundancy tmp//538598962955004214/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:2735,Availability,mask,mask-lower-case,2735,"ly extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redundancy tmp//538598962955004214/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:3218,Availability,mask,mask,3218,"1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:3227,Availability,mask,mask-lower-case,3227,"1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:3696,Availability,mask,mask,3696,"just-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 160ms; rescorediagonal ../DB_in/fasta_in_db_HC ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref tmp//538598962955004214/linclust/16628284907041385511/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:3705,Availability,mask,mask-lower-case,3705,"just-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 160ms; rescorediagonal ../DB_in/fasta_in_db_HC ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref tmp//538598962955004214/linclust/16628284907041385511/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:11394,Availability,mask,mask,11394," [=================================================================] 100.00% 276 0s 54ms; Write merged clustering; [=================================================================] 100.00% 303 0s 67ms; Time for merging to clu_redundancy: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 121ms; createsubdb tmp//538598962955004214/clu_redundancy ../DB_in/fasta_in_db_HC tmp//538598962955004214/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 276 0s 26ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 276 0s 6ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 58ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:11403,Availability,mask,mask-lower-case,11403," [=================================================================] 100.00% 276 0s 54ms; Write merged clustering; [=================================================================] 100.00% 303 0s 67ms; Time for merging to clu_redundancy: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 121ms; createsubdb tmp//538598962955004214/clu_redundancy ../DB_in/fasta_in_db_HC tmp//538598962955004214/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 276 0s 26ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 276 0s 6ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 58ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:11858,Availability,Mask,Masked,11858,"0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 276 0s 26ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 276 0s 6ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 58ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=================================================================] 100.00% 276 0s 31ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 665ms; align tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step_redunda",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:15495,Availability,mask,mask,15495,"====================] 100.00% 276 0s 4ms. Time for read in: 0h 0m 0s 76ms; Total time: 0h 0m 0s 99ms. Size of the sequence database: 276; Size of the alignment database: 276; Number of clusters: 239. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 111ms; createsubdb tmp//538598962955004214/clu_step0 tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 239 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 239 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 239 0s 13ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 239 0s 2ms; Index statistics; Entries: 1414; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 51ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:15504,Availability,mask,mask-lower-case,15504,"====================] 100.00% 276 0s 4ms. Time for read in: 0h 0m 0s 76ms; Total time: 0h 0m 0s 99ms. Size of the sequence database: 276; Size of the alignment database: 276; Number of clusters: 239. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 111ms; createsubdb tmp//538598962955004214/clu_step0 tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 239 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 239 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 239 0s 13ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 239 0s 2ms; Index statistics; Entries: 1414; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 51ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:15960,Availability,Mask,Masked,15960," input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 239 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 239 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 239 0s 13ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 239 0s 2ms; Index statistics; Entries: 1414; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 51ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [=================================================================] 100.00% 239 0s 23ms; [============================================================> ] 92.44% 221 eta 0s; 20.598031 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 760ms; align tmp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:19637,Availability,mask,mask,19637,"=================================] 100.00% 239 0s 0ms. Time for read in: 0h 0m 0s 74ms; Total time: 0h 0m 0s 89ms. Size of the sequence database: 239; Size of the alignment database: 239; Number of clusters: 221. Writing results 0h 0m 0s 0ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; createsubdb tmp//538598962955004214/clu_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/input_step2 tmp//538598962955004214/input_step2 tmp//538598962955004214/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 221 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 221 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 221 0s 29ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 221 0s 17ms; Index statistics; Entries: 1337; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 985ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 221; Target db start 1 to 221; [========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:19646,Availability,mask,mask-lower-case,19646,"=================================] 100.00% 239 0s 0ms. Time for read in: 0h 0m 0s 74ms; Total time: 0h 0m 0s 89ms. Size of the sequence database: 239; Size of the alignment database: 239; Number of clusters: 221. Writing results 0h 0m 0s 0ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; createsubdb tmp//538598962955004214/clu_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/input_step2 tmp//538598962955004214/input_step2 tmp//538598962955004214/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 221 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 221 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 221 0s 29ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 221 0s 17ms; Index statistics; Entries: 1337; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 985ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 221; Target db start 1 to 221; [========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:20102,Availability,Mask,Masked,20102,"to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/input_step2 tmp//538598962955004214/input_step2 tmp//538598962955004214/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 221 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 221 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 221 0s 29ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 221 0s 17ms; Index statistics; Entries: 1337; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 985ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 221; Target db start 1 to 221; [=================================================================] 100.00% 221 0s 31ms. 190.836300 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 644ms; align tmp//538598962955004214/input_step2 tmp//538598962955004214/input_step2 tmp//5385989",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:27722,Availability,mask,mask,27722,"=] 100.00% 284 0s 5ms. Time for merging to clu_not_accepted_swap: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 66ms; createsubdb tmp//538598962955004214/clu_not_accepted_swap ../DB_in/fasta_in_db_HC tmp//538598962955004214/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//538598962955004214/clu ../DB_in/fasta_in_db_HC tmp//538598962955004214/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/seq_wrong_assigned tmp//538598962955004214/seq_seeds.merged tmp//538598962955004214/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 9 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 210 0s 27ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 210 0s 8ms; Index statistics; Entries: 1285; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 174ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9; Target db start 1 to 210; [=============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:27731,Availability,mask,mask-lower-case,27731,"=] 100.00% 284 0s 5ms. Time for merging to clu_not_accepted_swap: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 66ms; createsubdb tmp//538598962955004214/clu_not_accepted_swap ../DB_in/fasta_in_db_HC tmp//538598962955004214/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//538598962955004214/clu ../DB_in/fasta_in_db_HC tmp//538598962955004214/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/seq_wrong_assigned tmp//538598962955004214/seq_seeds.merged tmp//538598962955004214/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 9 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 210 0s 27ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 210 0s 8ms; Index statistics; Entries: 1285; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 174ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9; Target db start 1 to 210; [=============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:28185,Availability,Mask,Masked,28185,"s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/seq_wrong_assigned tmp//538598962955004214/seq_seeds.merged tmp//538598962955004214/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 9 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 210 0s 27ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 210 0s 8ms; Index statistics; Entries: 1285; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 174ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9; Target db start 1 to 210; [=================================================================] 100.00% 9 0s 11ms. 460.860859 k-mers per position; 14 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to seq_wrong_assigned_pref: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 801ms; swapdb tmp//538598962955004214/seq_wrong_assigned_pref tmp//538598962955004214/se",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:33291,Availability,Error,Error,33291,=======] 100.00% 18 0s 13ms; Time for merging to seq_wrong_assigned_pref_swaped_aln_ocol: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 61ms; mergedbs tmp//538598962955004214/seq_seeds.merged tmp//538598962955004214/clu_accepted_plus_wrong tmp//538598962955004214/clu_accepted tmp//538598962955004214/seq_wrong_assigned_pref_swaped_aln_ocol --merge-stop-empty 0 --compressed 0 -v 3. Merging the results to tmp//538598962955004214/clu_accepted_plus_wrong; [=================================================================] 100.00% 210 0s 1ms; Time for merging to clu_accepted_plus_wrong: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; tsv2db tmp//538598962955004214/missing.single.seqs tmp//538598962955004214/missing.single.seqs.db --output-dbtype 6 --compressed 0 -v 3. Output database type: Clustering; Time for merging to missing.single.seqs.db: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; mergedbs ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_accepted_plus_wrong_plus_single tmp//538598962955004214/clu_accepted_plus_wrong tmp//538598962955004214/missing.single.seqs.db --merge-stop-empty 0 --compressed 0 -v 3. Merging the results to tmp//538598962955004214/clu_accepted_plus_wrong_plus_single; [=================================================================] 100.00% 303 0s 2ms; Time for merging to clu_accepted_plus_wrong_plus_single: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 4ms; clust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_accepted_plus_wrong_plus_single DB_clu --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 303 0s 10ms; Sort entries; Find missing connections; Found 98 new connections.; Reconstruct initial order; Alignment format is not supported! ] 0.00% 1 eta -; Alignment format is not supported!; Alignment format is not supported!; 31mAlignment format is not supported!; Error: Clustering step 2 died,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:3927,Energy Efficiency,Reduce,Reduced,3927,"a_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 160ms; rescorediagonal ../DB_in/fasta_in_db_HC ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref tmp//538598962955004214/linclust/16628284907041385511/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 303 0s 15ms; Time for merging to pref_rescore1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 47ms; clus",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:11614,Energy Efficiency,consumption,consumption,11614,"g: 0h 0m 0s 121ms; createsubdb tmp//538598962955004214/clu_redundancy ../DB_in/fasta_in_db_HC tmp//538598962955004214/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 276 0s 26ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 276 0s 6ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 58ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=================================================================] 100.00% 276 0s 31ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 seque",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:15716,Energy Efficiency,consumption,consumption,15716,"; Time for processing: 0h 0m 0s 111ms; createsubdb tmp//538598962955004214/clu_step0 tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 239 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 239 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 239 0s 13ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 239 0s 2ms; Index statistics; Entries: 1414; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 51ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [=================================================================] 100.00% 239 0s 23ms; [============================================================> ] 92.44% 221 eta 0s; 20.598031 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:19858,Energy Efficiency,consumption,consumption,19858," 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; createsubdb tmp//538598962955004214/clu_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/input_step2 tmp//538598962955004214/input_step2 tmp//538598962955004214/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 221 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 221 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 221 0s 29ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 221 0s 17ms; Index statistics; Entries: 1337; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 985ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 221; Target db start 1 to 221; [=================================================================] 100.00% 221 0s 31ms. 190.836300 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:27941,Energy Efficiency,consumption,consumption,27941,"rong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//538598962955004214/clu ../DB_in/fasta_in_db_HC tmp//538598962955004214/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/seq_wrong_assigned tmp//538598962955004214/seq_seeds.merged tmp//538598962955004214/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 9 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 210 0s 27ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 210 0s 8ms; Index statistics; Entries: 1285; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 174ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9; Target db start 1 to 210; [=================================================================] 100.00% 9 0s 11ms. 460.860859 k-mers per position; 14 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequen",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:1045,Integrability,wrap,wrapped,1045,"martin-steinegger That makes sense, although it also happens with Set Cover (it's --cluster-reassign, right? --reassign-cluster is not recognized):. Create directory tmp/; cluster ../DB_in/fasta_in_db_HC DB_clu tmp/ --cov-mode 0 --cluster-mode 0 --cluster-reassign 1. MMseqs Version: 0828d86539a4b6d7f64bc369a5b29920862afc5a; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:2205,Integrability,wrap,wrapped-scoring,2205,"47; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redundancy tmp//538598962955004214/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adju",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:4576,Integrability,wrap,wrapped-scoring,4576,"-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 160ms; rescorediagonal ../DB_in/fasta_in_db_HC ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref tmp//538598962955004214/linclust/16628284907041385511/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 303 0s 15ms; Time for merging to pref_rescore1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 47ms; clust ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref_rescore1 tmp//538598962955004214/linclust/16628284907041385511/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 303 0s 5ms; Sort entries; Find missing connections; Found 28 new connections.; Reconstruct initial order; [=================================================================] 100.00% 303 0s 14ms; Add missing connections; [================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:7331,Integrability,wrap,wrapped-scoring,7331,"8598962955004214/linclust/16628284907041385511/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; filterdb tmp//538598962955004214/linclust/16628284907041385511/pref_filter1 tmp//538598962955004214/linclust/16628284907041385511/pref_filter2 --filter-file tmp//538598962955004214/linclust/16628284907041385511/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 276 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 46ms; rescorediagonal tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/pref_filter2 tmp//538598962955004214/linclust/16628284907041385511/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 276 0s 20ms; Time for merging to pref_rescore2: 0h 0m 0s 11ms ] 54.55% 151 eta 0s; Time for processing: 0h 0m 0s 54ms; align tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/pref_rescore2 tmp//538598962955004214/linclust/16628284907041385511/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:8200,Integrability,wrap,wrapped-scoring,8200,"2 tmp//538598962955004214/linclust/16628284907041385511/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 276 0s 20ms; Time for merging to pref_rescore2: 0h 0m 0s 11ms ] 54.55% 151 eta 0s; Time for processing: 0h 0m 0s 54ms; align tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/pref_rescore2 tmp//538598962955004214/linclust/16628284907041385511/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 97ms; Time for merging to aln: 0h 0m 0s 9ms; 276 alignments calculated; 276 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 117ms; clust tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/lin",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:13044,Integrability,wrap,wrapped-scoring,13044,"-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 58ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=================================================================] 100.00% 276 0s 31ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 665ms; align tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/pref_step0 tmp//538598962955004214/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 77ms; Time for merging to aln_step0: 0h 0m 0s 9ms; 413 alignments calculated; 406 sequence pairs passed the thresholds (0.983051 of overall calculated); 1.471014 hits per query sequence; Time for processing: 0h 0m 0s 121ms; clust tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/aln_step0 tmp//538598962955",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:17211,Integrability,wrap,wrapped-scoring,17211," XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 51ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [=================================================================] 100.00% 239 0s 23ms; [============================================================> ] 92.44% 221 eta 0s; 20.598031 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 760ms; align tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/pref_step1 tmp//538598962955004214/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 239 type: Aminoacid; Target database size: 239 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 239 0s 34ms; Time for merging to aln_step1: 0h 0m 0s 6ms; 308 alignments calculated; 274 sequence pairs passed the thresholds (0.889610 of overall calculated); 1.146443 hits per query sequence; Time for processing: 0h 0m 0s 70ms; clust tmp//538598962955004214/input_step1 tmp//538598962955004214/aln_step1 tmp//538598962955004214/clu_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:21272,Integrability,wrap,wrapped-scoring,21272,"ze: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 985ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 221; Target db start 1 to 221; [=================================================================] 100.00% 221 0s 31ms. 190.836300 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 644ms; align tmp//538598962955004214/input_step2 tmp//538598962955004214/input_step2 tmp//538598962955004214/pref_step2 tmp//538598962955004214/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 221 type: Aminoacid; Target database size: 221 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 221 0s 47ms; Time for merging to aln_step2: 0h 0m 0s 5ms; 364 alignments calculated; 254 sequence pairs passed the thresholds (0.697802 of overall calculated); 1.149321 hits per query sequence; Time for processing: 0h 0m 0s 94ms; clust tmp//538598962955004214/input_step2 tmp//538598962955004214/aln_step2 tmp//538598962955004214/clu_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:24060,Integrability,wrap,wrapped-scoring,24060,"sters ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu tmp//538598962955004214/clu_redundancy tmp//538598962955004214/clu_step0 tmp//538598962955004214/clu_step1 tmp//538598962955004214/clu_step2. Clustering step 1; [=================================================================] 100.00% 276 0s 4ms; Clustering step 2; [=================================================================] 100.00% 239 0s 23ms; Clustering step 3; [=================================================================] 100.00% 221 0s 37ms; Clustering step 4; [=================================================================] 100.00% 201 0s 68ms; Write merged clustering; [=================================================================] 100.00% 303 0s 91ms; Time for merging to clu: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 109ms; align ../DB_in/fasta_in_db_HC ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu tmp//538598962955004214/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 303 type: Aminoacid; Target database size: 303 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 201 0s 52ms; Time for merging to aln: 0h 0m 0s 1ms; 303 alignments calculated; 294 sequence pairs passed the thresholds (0.970297 of overall calculated); 1.462687 hits per query sequence; Time for processing: 0h 0m 0s 122ms; subtractdbs tmp//538598962955004214/clu tmp//538598962955004214/aln tmp//538598962955004214/clu_not_accepted ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:30125,Integrability,wrap,wrapped-scoring,30125,"essing: 0h 0m 1s 801ms; swapdb tmp//538598962955004214/seq_wrong_assigned_pref tmp//538598962955004214/seq_wrong_assigned_pref_swaped --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 9 0s 13ms; Computing offsets.; [=================================================================] 100.00% 9 0s 5ms. Reading results.; [=================================================================] 100.00% 9 0s 4ms. Output database: tmp//538598962955004214/seq_wrong_assigned_pref_swaped; [=================================================================] 100.00% 297 0s 6ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 85ms; align tmp//538598962955004214/seq_seeds.merged tmp//538598962955004214/seq_wrong_assigned tmp//538598962955004214/seq_wrong_assigned_pref_swaped tmp//538598962955004214/seq_wrong_assigned_pref_swaped_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 210 type: Aminoacid; Target database size: 9 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 18 0s 12ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 0ms; 24 alignments calculated; 18 sequence pairs passed the thresholds (0.750000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 63ms; filterdb tmp//538598962955004214/seq_wrong_assigned_pref_swaped_aln tmp//53859896295",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:1820,Modifiability,extend,extendable,1820,"nclude identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redundancy tmp//538598962955004214/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-e",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:2569,Modifiability,extend,extend,2569," reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redundancy tmp//538598962955004214/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kme",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:2812,Modifiability,extend,extendable,2812,"ly extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redundancy tmp//538598962955004214/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:3344,Modifiability,extend,extendable,3344,"as-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 160ms; rescorediagonal ../D",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:3822,Modifiability,extend,extendable,3822,"able 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 160ms; rescorediagonal ../DB_in/fasta_in_db_HC ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref tmp//538598962955004214/linclust/16628284907041385511/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:8564,Modifiability,extend,extend,8564,"lumn for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 276 0s 20ms; Time for merging to pref_rescore2: 0h 0m 0s 11ms ] 54.55% 151 eta 0s; Time for processing: 0h 0m 0s 54ms; align tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/pref_rescore2 tmp//538598962955004214/linclust/16628284907041385511/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 97ms; Time for merging to aln: 0h 0m 0s 9ms; 276 alignments calculated; 276 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 117ms; clust tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/aln tmp//538598962955004214/linclust/16628284907041385511/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 276 0s 9ms; Sort entries; Find missing connections; Found 0 new connections.; Re",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:13408,Modifiability,extend,extend,13408,"==================================================] 100.00% 276 0s 31ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 665ms; align tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/pref_step0 tmp//538598962955004214/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 77ms; Time for merging to aln_step0: 0h 0m 0s 9ms; 413 alignments calculated; 406 sequence pairs passed the thresholds (0.983051 of overall calculated); 1.471014 hits per query sequence; Time for processing: 0h 0m 0s 121ms; clust tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/aln_step0 tmp//538598962955004214/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 276 0s 12ms; Sort entries; Find missing connections; Found 0 new connections.; Reconstruct initial order; [===============================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:17575,Modifiability,extend,extend,17575,"s 23ms; [============================================================> ] 92.44% 221 eta 0s; 20.598031 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 760ms; align tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/pref_step1 tmp//538598962955004214/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 239 type: Aminoacid; Target database size: 239 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 239 0s 34ms; Time for merging to aln_step1: 0h 0m 0s 6ms; 308 alignments calculated; 274 sequence pairs passed the thresholds (0.889610 of overall calculated); 1.146443 hits per query sequence; Time for processing: 0h 0m 0s 70ms; clust tmp//538598962955004214/input_step1 tmp//538598962955004214/aln_step1 tmp//538598962955004214/clu_step1 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 239 0s 4ms; Sort entries; Find missing connections; Found 9 new connections.; Reconstruct initial order; [===========================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:21636,Modifiability,extend,extend,21636,"; [=================================================================] 100.00% 221 0s 31ms. 190.836300 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 644ms; align tmp//538598962955004214/input_step2 tmp//538598962955004214/input_step2 tmp//538598962955004214/pref_step2 tmp//538598962955004214/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 221 type: Aminoacid; Target database size: 221 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 221 0s 47ms; Time for merging to aln_step2: 0h 0m 0s 5ms; 364 alignments calculated; 254 sequence pairs passed the thresholds (0.697802 of overall calculated); 1.149321 hits per query sequence; Time for processing: 0h 0m 0s 94ms; clust tmp//538598962955004214/input_step2 tmp//538598962955004214/aln_step2 tmp//538598962955004214/clu_step2 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 221 0s 11ms; Sort entries; Find missing connections; Found 7 new connections.; Reconstruct initial order; [==========================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:24424,Modifiability,extend,extend,24424,"========================] 100.00% 239 0s 23ms; Clustering step 3; [=================================================================] 100.00% 221 0s 37ms; Clustering step 4; [=================================================================] 100.00% 201 0s 68ms; Write merged clustering; [=================================================================] 100.00% 303 0s 91ms; Time for merging to clu: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 109ms; align ../DB_in/fasta_in_db_HC ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu tmp//538598962955004214/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 303 type: Aminoacid; Target database size: 303 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 201 0s 52ms; Time for merging to aln: 0h 0m 0s 1ms; 303 alignments calculated; 294 sequence pairs passed the thresholds (0.970297 of overall calculated); 1.462687 hits per query sequence; Time for processing: 0h 0m 0s 122ms; subtractdbs tmp//538598962955004214/clu tmp//538598962955004214/aln tmp//538598962955004214/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. subtractdbs tmp//538598962955004214/clu tmp//538598962955004214/aln tmp//538598962955004214/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. Remove tmp//538598962955004214/aln ids from tmp//538598962955004214/clu; [===============================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:30489,Modifiability,extend,extend,30489," results.; [=================================================================] 100.00% 9 0s 4ms. Output database: tmp//538598962955004214/seq_wrong_assigned_pref_swaped; [=================================================================] 100.00% 297 0s 6ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 85ms; align tmp//538598962955004214/seq_seeds.merged tmp//538598962955004214/seq_wrong_assigned tmp//538598962955004214/seq_wrong_assigned_pref_swaped tmp//538598962955004214/seq_wrong_assigned_pref_swaped_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 210 type: Aminoacid; Target database size: 9 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 18 0s 12ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 0ms; 24 alignments calculated; 18 sequence pairs passed the thresholds (0.750000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 63ms; filterdb tmp//538598962955004214/seq_wrong_assigned_pref_swaped_aln tmp//538598962955004214/seq_wrong_assigned_pref_swaped_aln_ocol --trim-to-one-column --threads 16 --compressed 0 -v 3. Filtering using regular expression; [=================================================================] 100.00% 18 0s 13ms; Time for merging to seq_wrong_assigned_pref_swaped_aln_ocol: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 61ms; mergedbs tmp//5385989629550042",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:2426,Performance,load,load-mode,2426," Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redundancy tmp//538598962955004214/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kme",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:4736,Performance,load,load-mode,4736," 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 160ms; rescorediagonal ../DB_in/fasta_in_db_HC ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref tmp//538598962955004214/linclust/16628284907041385511/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 303 0s 15ms; Time for merging to pref_rescore1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 47ms; clust ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref_rescore1 tmp//538598962955004214/linclust/16628284907041385511/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 303 0s 5ms; Sort entries; Find missing connections; Found 28 new connections.; Reconstruct initial order; [=================================================================] 100.00% 303 0s 14ms; Add missing connections; [=================================================================] 100.00% 303 0s 1ms. Time for read in: 0h 0m 0s 74ms; Total time: 0h 0m 0s 108ms. Size of the sequence database: 303; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:7489,Performance,load,load-mode,7489," 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; filterdb tmp//538598962955004214/linclust/16628284907041385511/pref_filter1 tmp//538598962955004214/linclust/16628284907041385511/pref_filter2 --filter-file tmp//538598962955004214/linclust/16628284907041385511/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 276 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 46ms; rescorediagonal tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/pref_filter2 tmp//538598962955004214/linclust/16628284907041385511/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 276 0s 20ms; Time for merging to pref_rescore2: 0h 0m 0s 11ms ] 54.55% 151 eta 0s; Time for processing: 0h 0m 0s 54ms; align tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/pref_rescore2 tmp//538598962955004214/linclust/16628284907041385511/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --scor",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:8421,Performance,load,load-mode,8421,"001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 276 0s 20ms; Time for merging to pref_rescore2: 0h 0m 0s 11ms ] 54.55% 151 eta 0s; Time for processing: 0h 0m 0s 54ms; align tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/pref_rescore2 tmp//538598962955004214/linclust/16628284907041385511/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 97ms; Time for merging to aln: 0h 0m 0s 9ms; 276 alignments calculated; 276 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 117ms; clust tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/aln tmp//538598962955004214/linclust/16628284907041385511/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compress",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:11491,Performance,load,load-mode,11491," [=================================================================] 100.00% 276 0s 54ms; Write merged clustering; [=================================================================] 100.00% 303 0s 67ms; Time for merging to clu_redundancy: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 121ms; createsubdb tmp//538598962955004214/clu_redundancy ../DB_in/fasta_in_db_HC tmp//538598962955004214/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 276 0s 26ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 276 0s 6ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 58ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:13265,Performance,load,load-mode,13265,"ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=================================================================] 100.00% 276 0s 31ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 665ms; align tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/pref_step0 tmp//538598962955004214/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 77ms; Time for merging to aln_step0: 0h 0m 0s 9ms; 413 alignments calculated; 406 sequence pairs passed the thresholds (0.983051 of overall calculated); 1.471014 hits per query sequence; Time for processing: 0h 0m 0s 121ms; clust tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/aln_step0 tmp//538598962955004214/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [==================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:15593,Performance,load,load-mode,15593,"====================] 100.00% 276 0s 4ms. Time for read in: 0h 0m 0s 76ms; Total time: 0h 0m 0s 99ms. Size of the sequence database: 276; Size of the alignment database: 276; Number of clusters: 239. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 111ms; createsubdb tmp//538598962955004214/clu_step0 tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 239 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 239 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 239 0s 13ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 239 0s 2ms; Index statistics; Entries: 1414; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 51ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:17432,Performance,load,load-mode,17432," 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [=================================================================] 100.00% 239 0s 23ms; [============================================================> ] 92.44% 221 eta 0s; 20.598031 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 760ms; align tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/pref_step1 tmp//538598962955004214/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 239 type: Aminoacid; Target database size: 239 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 239 0s 34ms; Time for merging to aln_step1: 0h 0m 0s 6ms; 308 alignments calculated; 274 sequence pairs passed the thresholds (0.889610 of overall calculated); 1.146443 hits per query sequence; Time for processing: 0h 0m 0s 70ms; clust tmp//538598962955004214/input_step1 tmp//538598962955004214/aln_step1 tmp//538598962955004214/clu_step1 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=============================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:19735,Performance,load,load-mode,19735,"=================================] 100.00% 239 0s 0ms. Time for read in: 0h 0m 0s 74ms; Total time: 0h 0m 0s 89ms. Size of the sequence database: 239; Size of the alignment database: 239; Number of clusters: 221. Writing results 0h 0m 0s 0ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; createsubdb tmp//538598962955004214/clu_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/input_step2 tmp//538598962955004214/input_step2 tmp//538598962955004214/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 221 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 221 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 221 0s 29ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 221 0s 17ms; Index statistics; Entries: 1337; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 985ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 221; Target db start 1 to 221; [========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:21493,Performance,load,load-mode,21493,"init: 0h 0m 0s 985ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 221; Target db start 1 to 221; [=================================================================] 100.00% 221 0s 31ms. 190.836300 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 644ms; align tmp//538598962955004214/input_step2 tmp//538598962955004214/input_step2 tmp//538598962955004214/pref_step2 tmp//538598962955004214/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 221 type: Aminoacid; Target database size: 221 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 221 0s 47ms; Time for merging to aln_step2: 0h 0m 0s 5ms; 364 alignments calculated; 254 sequence pairs passed the thresholds (0.697802 of overall calculated); 1.149321 hits per query sequence; Time for processing: 0h 0m 0s 94ms; clust tmp//538598962955004214/input_step2 tmp//538598962955004214/aln_step2 tmp//538598962955004214/clu_step2 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=============================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:24281,Performance,load,load-mode,24281,"98962955004214/clu_step2. Clustering step 1; [=================================================================] 100.00% 276 0s 4ms; Clustering step 2; [=================================================================] 100.00% 239 0s 23ms; Clustering step 3; [=================================================================] 100.00% 221 0s 37ms; Clustering step 4; [=================================================================] 100.00% 201 0s 68ms; Write merged clustering; [=================================================================] 100.00% 303 0s 91ms; Time for merging to clu: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 109ms; align ../DB_in/fasta_in_db_HC ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu tmp//538598962955004214/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 303 type: Aminoacid; Target database size: 303 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 201 0s 52ms; Time for merging to aln: 0h 0m 0s 1ms; 303 alignments calculated; 294 sequence pairs passed the thresholds (0.970297 of overall calculated); 1.462687 hits per query sequence; Time for processing: 0h 0m 0s 122ms; subtractdbs tmp//538598962955004214/clu tmp//538598962955004214/aln tmp//538598962955004214/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. subtractdbs tmp//538598962955004214/clu tmp//538598962955004214/aln tmp//538598962955004214/clu_not_acce",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:27820,Performance,load,load-mode,27820,"=] 100.00% 284 0s 5ms. Time for merging to clu_not_accepted_swap: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 66ms; createsubdb tmp//538598962955004214/clu_not_accepted_swap ../DB_in/fasta_in_db_HC tmp//538598962955004214/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//538598962955004214/clu ../DB_in/fasta_in_db_HC tmp//538598962955004214/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/seq_wrong_assigned tmp//538598962955004214/seq_seeds.merged tmp//538598962955004214/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 9 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 210 0s 27ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 210 0s 8ms; Index statistics; Entries: 1285; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 174ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9; Target db start 1 to 210; [=============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:30346,Performance,load,load-mode,30346,"============================================================] 100.00% 9 0s 13ms; Computing offsets.; [=================================================================] 100.00% 9 0s 5ms. Reading results.; [=================================================================] 100.00% 9 0s 4ms. Output database: tmp//538598962955004214/seq_wrong_assigned_pref_swaped; [=================================================================] 100.00% 297 0s 6ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 85ms; align tmp//538598962955004214/seq_seeds.merged tmp//538598962955004214/seq_wrong_assigned tmp//538598962955004214/seq_wrong_assigned_pref_swaped tmp//538598962955004214/seq_wrong_assigned_pref_swaped_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 210 type: Aminoacid; Target database size: 9 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 18 0s 12ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 0ms; 24 alignments calculated; 18 sequence pairs passed the thresholds (0.750000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 63ms; filterdb tmp//538598962955004214/seq_wrong_assigned_pref_swaped_aln tmp//538598962955004214/seq_wrong_assigned_pref_swaped_aln_ocol --trim-to-one-column --threads 16 --compressed 0 -v 3. Filtering using regular expression; [=================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:1798,Security,hash,hash,1798,"nclude identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redundancy tmp//538598962955004214/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-e",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:2760,Security,hash,hash-shift,2760,"ly extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redundancy tmp//538598962955004214/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:3292,Security,hash,hash-shift,3292,"as-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 160ms; rescorediagonal ../D",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:3770,Security,hash,hash-shift,3770,"able 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 160ms; rescorediagonal ../DB_in/fasta_in_db_HC ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref tmp//538598962955004214/linclust/16628284907041385511/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773238581:170,Availability,mask,mask,170,This looks pretty bad:; ```; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; ```. Can you try using `--mask 0`? Also add `-k 5 --spaced-kmer-pattern 110111`. This should allow matching sequences that are 7 residues long.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773238581
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773240865:7,Availability,mask,mask,7,with --mask 0: . `mmseqs cluster ../DB_in/fasta_in_db_HC DB_clu tmp/ --mask 0 --cov-mode 0 --cluster-mode 0 --cluster-reassign 1`. `Alignment format is not supported! ] 0.00% 1 eta -; 31Alignment format is not supported!; 31Error: Clustering step 2 died`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773240865
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773240865:71,Availability,mask,mask,71,with --mask 0: . `mmseqs cluster ../DB_in/fasta_in_db_HC DB_clu tmp/ --mask 0 --cov-mode 0 --cluster-mode 0 --cluster-reassign 1`. `Alignment format is not supported! ] 0.00% 1 eta -; 31Alignment format is not supported!; 31Error: Clustering step 2 died`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773240865
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773242753:112,Availability,mask,mask,112,@milot-mirdita things are not getting much more logical:. `mmseqs cluster ../DB_in/fasta_in_db_HC DB_clu tmp/ --mask 0 -k 5 --spaced-kmer-pattern 110111 --cov-mode 0 --cluster-mode 0 --cluster-reassign 1`. output:; `User-specified k-mer pattern is not consistent with stated k-mer size`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773242753
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773242753:48,Testability,log,logical,48,@milot-mirdita things are not getting much more logical:. `mmseqs cluster ../DB_in/fasta_in_db_HC DB_clu tmp/ --mask 0 -k 5 --spaced-kmer-pattern 110111 --cov-mode 0 --cluster-mode 0 --cluster-reassign 1`. output:; `User-specified k-mer pattern is not consistent with stated k-mer size`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773242753
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773256934:210,Availability,Error,Error,210,`mmseqs createdb short_seqs.fasta DB_in/fasta_in`; `mmseqs cluster DB_in/fasta_in DB_clu tmp/ -k 5 --spaced-kmer-pattern 110111`. gives:. `User-specified k-mer pattern is not consistent with stated k-mer size; Error: kmermatcher died; Error: linclust died`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773256934
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773256934:235,Availability,Error,Error,235,`mmseqs createdb short_seqs.fasta DB_in/fasta_in`; `mmseqs cluster DB_in/fasta_in DB_clu tmp/ -k 5 --spaced-kmer-pattern 110111`. gives:. `User-specified k-mer pattern is not consistent with stated k-mer size; Error: kmermatcher died; Error: linclust died`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773256934
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773323042:463,Availability,Error,Error,463,Artificial fasta with short (10 AA) sequences:. [artificial.txt](https://github.com/soedinglab/MMseqs2/files/5926176/artificial.txt). commands:. `mmseqs createdb artificial.fasta DB_artificial/artificial_DB`; `mmseqs cluster DB_artificial/artificial_DB db_clu tmp/ -k 5 --spaced-kmer-pattern 110111`. output ends with:. `User-specified k-mer pattern is not consistent with stated k-mer size; User-specified k-mer pattern is not consistent with stated k-mer size; Error: kmermatcher died`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773323042
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-774039100:187,Availability,mask,mask,187,and for the original cluster-reassign problem:. ` mmseqs cluster DB_in/artificial_DB DB_clu/set_cover_reassign set_cover_reassign_tmp --cluster-mode 0 --cov-mode 0 --cluster-reassign 1 --mask 0`. gives:. ```; swapdb set_cover_reassign_tmp/17639961554283803127/seq_wrong_assigned_pref set_cover_reassign_tmp/17639961554283803127/seq_wrong_assigned_pref_swaped --threads 16 --compressed 0 -v 3. Input set_cover_reassign_tmp/17639961554283803127/seq_wrong_assigned_pref does not exist; Error: swapdb2 reassign died. ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-774039100
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-774039100:483,Availability,Error,Error,483,and for the original cluster-reassign problem:. ` mmseqs cluster DB_in/artificial_DB DB_clu/set_cover_reassign set_cover_reassign_tmp --cluster-mode 0 --cov-mode 0 --cluster-reassign 1 --mask 0`. gives:. ```; swapdb set_cover_reassign_tmp/17639961554283803127/seq_wrong_assigned_pref set_cover_reassign_tmp/17639961554283803127/seq_wrong_assigned_pref_swaped --threads 16 --compressed 0 -v 3. Input set_cover_reassign_tmp/17639961554283803127/seq_wrong_assigned_pref does not exist; Error: swapdb2 reassign died. ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-774039100
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-774090365:104,Availability,error,error,104,"I can reproduce both of these issue, I'll fix them hopefully later today. Still quite puzzled where the error `Alignment format is not supported!` came from though.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-774090365
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-774110380:65,Availability,error,error,65,"Very glad to hear it is not me!. > Still quite puzzled where the error Alignment format is not supported! came from though. It may or may not be a coincidence that the same error was mentioned in #329, also in the context of --cluster-reassign",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-774110380
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-774110380:173,Availability,error,error,173,"Very glad to hear it is not me!. > Still quite puzzled where the error Alignment format is not supported! came from though. It may or may not be a coincidence that the same error was mentioned in #329, also in the context of --cluster-reassign",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-774110380
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:938,Availability,Mask,Mask,938,"@milot-mirdita Your fix works for the artificial set, but unfortunately, not for my own set. I guess the artificial set has very little similarity between sequences, which should explain the differences in behaviour:. ~ See newest comment below for log with reproducible data ~. `mmseqs cluster DB_in DB_clu tmp/ --cluster-reassign 1 --cluster-mode 0 --cov-mode 0`. Create directory tmp/; cluster DB_in DB_clu tmp/ --cluster-reassign 1 --cluster-mode 0 --cov-mode 0. MMseqs Version: 9290a2b529da9763992bde2e6e0f95c61b003123; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:955,Availability,Mask,Mask,955,"@milot-mirdita Your fix works for the artificial set, but unfortunately, not for my own set. I guess the artificial set has very little similarity between sequences, which should explain the differences in behaviour:. ~ See newest comment below for log with reproducible data ~. `mmseqs cluster DB_in DB_clu tmp/ --cluster-reassign 1 --cluster-mode 0 --cov-mode 0`. Create directory tmp/; cluster DB_in DB_clu tmp/ --cluster-reassign 1 --cluster-mode 0 --cov-mode 0. MMseqs Version: 9290a2b529da9763992bde2e6e0f95c61b003123; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:2910,Availability,mask,mask,2910,"67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust DB_in tmp//10798751672030653963/clu_redundancy tmp//10798751672030653963/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-k",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:2919,Availability,mask,mask-lower-case,2919,"67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust DB_in tmp//10798751672030653963/clu_redundancy tmp//10798751672030653963/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-k",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:3385,Availability,mask,mask,3385,"scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:3394,Availability,mask,mask-lower-case,3394,"scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:3846,Availability,mask,mask,3846,"seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; rescorediagonal DB_in DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:3855,Availability,mask,mask-lower-case,3855,"seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; rescorediagonal DB_in DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:11500,Availability,mask,mask,11500,"g step 2; [=================================================================] 100.00% 276 0s 36ms; Write merged clustering; [=================================================================] 100.00% 303 0s 53ms; Time for merging to clu_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 67ms; createsubdb tmp//10798751672030653963/clu_redundancy DB_in tmp//10798751672030653963/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 276 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 276 0s 3ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 0s 848ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:11509,Availability,mask,mask-lower-case,11509,"g step 2; [=================================================================] 100.00% 276 0s 36ms; Write merged clustering; [=================================================================] 100.00% 303 0s 53ms; Time for merging to clu_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 67ms; createsubdb tmp//10798751672030653963/clu_redundancy DB_in tmp//10798751672030653963/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 276 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 276 0s 3ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 0s 848ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:11964,Availability,Mask,Masked,11964,"0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 276 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 276 0s 3ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 0s 848ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=================================================================] 100.00% 276 0s 19ms. 1.394095 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 477ms; align tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step_re",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:15629,Availability,mask,mask,15629,"=======] 100.00% 276 0s 0ms. Time for read in: 0h 0m 0s 83ms; Total time: 0h 0m 0s 118ms. Size of the sequence database: 276; Size of the alignment database: 276; Number of clusters: 239. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 125ms; createsubdb tmp//10798751672030653963/clu_step0 tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 239 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 239 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 239 0s 16ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 239 0s 6ms; Index statistics; Entries: 1415; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 50ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:15638,Availability,mask,mask-lower-case,15638,"=======] 100.00% 276 0s 0ms. Time for read in: 0h 0m 0s 83ms; Total time: 0h 0m 0s 118ms. Size of the sequence database: 276; Size of the alignment database: 276; Number of clusters: 239. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 125ms; createsubdb tmp//10798751672030653963/clu_step0 tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 239 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 239 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 239 0s 16ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 239 0s 6ms; Index statistics; Entries: 1415; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 50ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:16094,Availability,Mask,Masked,16094,"_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 239 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 239 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 239 0s 16ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 239 0s 6ms; Index statistics; Entries: 1415; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 50ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [=================================================================] 100.00% 239 0s 20ms; [================================================================>] 99.58% 238 eta 0s; 20.876247 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 824ms; align ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:19802,Availability,mask,mask,19802,"=====================] 100.00% 239 0s 0ms. Time for read in: 0h 0m 0s 50ms; Total time: 0h 0m 0s 71ms. Size of the sequence database: 239; Size of the alignment database: 239; Number of clusters: 222. Writing results 0h 0m 0s 0ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 73ms; createsubdb tmp//10798751672030653963/clu_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//10798751672030653963/input_step2 tmp//10798751672030653963/input_step2 tmp//10798751672030653963/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 222 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 222 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 222 0s 24ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 222 0s 3ms; Index statistics; Entries: 1342; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 970ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 222; Target db start 1 to 222; [=========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:19811,Availability,mask,mask-lower-case,19811,"=====================] 100.00% 239 0s 0ms. Time for read in: 0h 0m 0s 50ms; Total time: 0h 0m 0s 71ms. Size of the sequence database: 239; Size of the alignment database: 239; Number of clusters: 222. Writing results 0h 0m 0s 0ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 73ms; createsubdb tmp//10798751672030653963/clu_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//10798751672030653963/input_step2 tmp//10798751672030653963/input_step2 tmp//10798751672030653963/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 222 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 222 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 222 0s 24ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 222 0s 3ms; Index statistics; Entries: 1342; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 970ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 222; Target db start 1 to 222; [=========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:20267,Availability,Mask,Masked,20267,"ut_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//10798751672030653963/input_step2 tmp//10798751672030653963/input_step2 tmp//10798751672030653963/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 222 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 222 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 222 0s 24ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 222 0s 3ms; Index statistics; Entries: 1342; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 970ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 222; Target db start 1 to 222; [=================================================================] 100.00% 222 0s 52ms. 196.811469 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 11ms; Time for processing: 0h 0m 1s 704ms; align tmp//10798751672030653963/input_step2 tmp//10798751672030653963/input_step2 tmp//107",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:27879,Availability,mask,mask,27879,"===============================] 100.00% 200 0s 22ms; Time for merging to clu_accepted: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 40ms; createsubdb tmp//10798751672030653963/clu_not_accepted_swap DB_in tmp//10798751672030653963/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//10798751672030653963/clu DB_in tmp//10798751672030653963/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp//10798751672030653963/seq_wrong_assigned tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 14 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 214 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 214 0s 24ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 214 0s 9ms; Index statistics; Entries: 1312; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 857ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 14; Target db start 1 to 214; [===========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:27888,Availability,mask,mask-lower-case,27888,"===============================] 100.00% 200 0s 22ms; Time for merging to clu_accepted: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 40ms; createsubdb tmp//10798751672030653963/clu_not_accepted_swap DB_in tmp//10798751672030653963/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//10798751672030653963/clu DB_in tmp//10798751672030653963/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp//10798751672030653963/seq_wrong_assigned tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 14 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 214 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 214 0s 24ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 214 0s 9ms; Index statistics; Entries: 1312; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 857ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 14; Target db start 1 to 214; [===========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:28343,Availability,Mask,Masked,28343,"Time for processing: 0h 0m 0s 2ms; prefilter tmp//10798751672030653963/seq_wrong_assigned tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 14 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 214 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 214 0s 24ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 214 0s 9ms; Index statistics; Entries: 1312; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 857ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 14; Target db start 1 to 214; [=================================================================] 100.00% 14 0s 45ms. 376.012940 k-mers per position; 14 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to seq_wrong_assigned_pref: 0h 0m 0s 6ms; Time for processing: 0h 0m 1s 611ms; swapdb tmp//10798751672030653963/seq_wrong_assigned_pref tmp//10798751672030653",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:33423,Availability,Error,Error,33423,me for merging to seq_wrong_assigned_pref_swaped_aln_ocol: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 51ms; mergedbs tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/clu_accepted_plus_wrong tmp//10798751672030653963/clu_accepted tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln_ocol --merge-stop-empty 0 --compressed 0 -v 3. Merging the results to tmp//10798751672030653963/clu_accepted_plus_wrong; [=================================================================] 100.00% 214 0s 1ms; Time for merging to clu_accepted_plus_wrong: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; tsv2db tmp//10798751672030653963/missing.single.seqs tmp//10798751672030653963/missing.single.seqs.db --output-dbtype 6 --compressed 0 -v 3. Output database type: Clustering; Time for merging to missing.single.seqs.db: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; mergedbs DB_in tmp//10798751672030653963/clu_accepted_plus_wrong_plus_single tmp//10798751672030653963/clu_accepted_plus_wrong tmp//10798751672030653963/missing.single.seqs.db --merge-stop-empty 0 --compressed 0 -v 3. Merging the results to tmp//10798751672030653963/clu_accepted_plus_wrong_plus_single; [=================================================================] 100.00% 303 0s 0ms; Time for merging to clu_accepted_plus_wrong_plus_single: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; clust DB_in tmp//10798751672030653963/clu_accepted_plus_wrong_plus_single DB_clu --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 303 0s 8ms; Sort entries; Find missing connections; Found 99 new connections.; Reconstruct initial order; Alignment format is not supported! ] 0.00% 1 eta -; Alignment format is not supported!; Alignment format is not supported!; *** Error in Alignment format is not supported!; Segmentation fault (core dumped); Error: Clustering step 2 died,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:33481,Availability,fault,fault,33481,me for merging to seq_wrong_assigned_pref_swaped_aln_ocol: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 51ms; mergedbs tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/clu_accepted_plus_wrong tmp//10798751672030653963/clu_accepted tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln_ocol --merge-stop-empty 0 --compressed 0 -v 3. Merging the results to tmp//10798751672030653963/clu_accepted_plus_wrong; [=================================================================] 100.00% 214 0s 1ms; Time for merging to clu_accepted_plus_wrong: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; tsv2db tmp//10798751672030653963/missing.single.seqs tmp//10798751672030653963/missing.single.seqs.db --output-dbtype 6 --compressed 0 -v 3. Output database type: Clustering; Time for merging to missing.single.seqs.db: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; mergedbs DB_in tmp//10798751672030653963/clu_accepted_plus_wrong_plus_single tmp//10798751672030653963/clu_accepted_plus_wrong tmp//10798751672030653963/missing.single.seqs.db --merge-stop-empty 0 --compressed 0 -v 3. Merging the results to tmp//10798751672030653963/clu_accepted_plus_wrong_plus_single; [=================================================================] 100.00% 303 0s 0ms; Time for merging to clu_accepted_plus_wrong_plus_single: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; clust DB_in tmp//10798751672030653963/clu_accepted_plus_wrong_plus_single DB_clu --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 303 0s 8ms; Sort entries; Find missing connections; Found 99 new connections.; Reconstruct initial order; Alignment format is not supported! ] 0.00% 1 eta -; Alignment format is not supported!; Alignment format is not supported!; *** Error in Alignment format is not supported!; Segmentation fault (core dumped); Error: Clustering step 2 died,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:33502,Availability,Error,Error,33502,me for merging to seq_wrong_assigned_pref_swaped_aln_ocol: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 51ms; mergedbs tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/clu_accepted_plus_wrong tmp//10798751672030653963/clu_accepted tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln_ocol --merge-stop-empty 0 --compressed 0 -v 3. Merging the results to tmp//10798751672030653963/clu_accepted_plus_wrong; [=================================================================] 100.00% 214 0s 1ms; Time for merging to clu_accepted_plus_wrong: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; tsv2db tmp//10798751672030653963/missing.single.seqs tmp//10798751672030653963/missing.single.seqs.db --output-dbtype 6 --compressed 0 -v 3. Output database type: Clustering; Time for merging to missing.single.seqs.db: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; mergedbs DB_in tmp//10798751672030653963/clu_accepted_plus_wrong_plus_single tmp//10798751672030653963/clu_accepted_plus_wrong tmp//10798751672030653963/missing.single.seqs.db --merge-stop-empty 0 --compressed 0 -v 3. Merging the results to tmp//10798751672030653963/clu_accepted_plus_wrong_plus_single; [=================================================================] 100.00% 303 0s 0ms; Time for merging to clu_accepted_plus_wrong_plus_single: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; clust DB_in tmp//10798751672030653963/clu_accepted_plus_wrong_plus_single DB_clu --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 303 0s 8ms; Sort entries; Find missing connections; Found 99 new connections.; Reconstruct initial order; Alignment format is not supported! ] 0.00% 1 eta -; Alignment format is not supported!; Alignment format is not supported!; *** Error in Alignment format is not supported!; Segmentation fault (core dumped); Error: Clustering step 2 died,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:4077,Energy Efficiency,Reduce,Reduced,4077,"reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; rescorediagonal DB_in DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 303 0s 28ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms===============> ] 94.37% 286 eta 0s; Time for processing: 0h 0m 0s 69ms; clu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:11720,Energy Efficiency,consumption,consumption,11720,"processing: 0h 0m 0s 67ms; createsubdb tmp//10798751672030653963/clu_redundancy DB_in tmp//10798751672030653963/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 276 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 276 0s 3ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 0s 848ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=================================================================] 100.00% 276 0s 19ms. 1.394095 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:15850,Energy Efficiency,consumption,consumption,15850,"rocessing: 0h 0m 0s 125ms; createsubdb tmp//10798751672030653963/clu_step0 tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 239 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 239 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 239 0s 16ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 239 0s 6ms; Index statistics; Entries: 1415; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 50ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [=================================================================] 100.00% 239 0s 20ms; [================================================================>] 99.58% 238 eta 0s; 20.876247 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:20023,Energy Efficiency,consumption,consumption,20023,"s; Time for processing: 0h 0m 0s 73ms; createsubdb tmp//10798751672030653963/clu_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//10798751672030653963/input_step2 tmp//10798751672030653963/input_step2 tmp//10798751672030653963/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 222 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 222 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 222 0s 24ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 222 0s 3ms; Index statistics; Entries: 1342; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 970ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 222; Target db start 1 to 222; [=================================================================] 100.00% 222 0s 52ms. 196.811469 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 se",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:28099,Energy Efficiency,consumption,consumption,28099,"to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//10798751672030653963/clu DB_in tmp//10798751672030653963/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp//10798751672030653963/seq_wrong_assigned tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 14 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 214 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 214 0s 24ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 214 0s 9ms; Index statistics; Entries: 1312; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 857ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 14; Target db start 1 to 214; [=================================================================] 100.00% 14 0s 45ms. 376.012940 k-mers per position; 14 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:1243,Integrability,wrap,wrapped,1243,"ces in behaviour:. ~ See newest comment below for log with reproducible data ~. `mmseqs cluster DB_in DB_clu tmp/ --cluster-reassign 1 --cluster-mode 0 --cov-mode 0`. Create directory tmp/; cluster DB_in DB_clu tmp/ --cluster-reassign 1 --cluster-mode 0 --cov-mode 0. MMseqs Version: 9290a2b529da9763992bde2e6e0f95c61b003123; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust DB_in tmp//10798751672030653963/clu_redundancy tmp//1079",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:2389,Integrability,wrap,wrapped-scoring,2389,"eject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust DB_in tmp//10798751672030653963/clu_redundancy tmp//10798751672030653963/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --m",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:4691,Integrability,wrap,wrapped-scoring,4691,".out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; rescorediagonal DB_in DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 303 0s 28ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms===============> ] 94.37% 286 eta 0s; Time for processing: 0h 0m 0s 69ms; clust DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore1 tmp//10798751672030653963/linclust/5052420726377277994/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 303 0s 10ms; Sort entries; Find missing connections; Found 29 new connections.; Reconstruct initial order; [=================================================================] 100.00% 303 0s 9ms; Add missing connections; [============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:7459,Integrability,wrap,wrapped-scoring,7459,"72030653963/linclust/5052420726377277994/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; filterdb tmp//10798751672030653963/linclust/5052420726377277994/pref_filter1 tmp//10798751672030653963/linclust/5052420726377277994/pref_filter2 --filter-file tmp//10798751672030653963/linclust/5052420726377277994/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 276 0s 5ms; Time for merging to pref_filter2: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 20ms; rescorediagonal tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/pref_filter2 tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 276 0s 8ms; Time for merging to pref_rescore2: 0h 0m 0s 2ms ] 16.00% 45 eta 0s; Time for processing: 0h 0m 0s 37ms; align tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore2 tmp//10798751672030653963/linclust/5052420726377277994/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:8329,Integrability,wrap,wrapped-scoring,8329,"tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 276 0s 8ms; Time for merging to pref_rescore2: 0h 0m 0s 2ms ] 16.00% 45 eta 0s; Time for processing: 0h 0m 0s 37ms; align tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore2 tmp//10798751672030653963/linclust/5052420726377277994/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 64ms; Time for merging to aln: 0h 0m 0s 5ms; 276 alignments calculated; 276 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 80ms; clust tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/l",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:13159,Integrability,wrap,wrapped-scoring,13159,": 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 0s 848ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=================================================================] 100.00% 276 0s 19ms. 1.394095 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 477ms; align tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/pref_step0 tmp//10798751672030653963/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 44ms; Time for merging to aln_step0: 0h 0m 0s 7ms; 415 alignments calculated; 408 sequence pairs passed the thresholds (0.983133 of overall calculated); 1.478261 hits per query sequence; Time for processing: 0h 0m 0s 89ms; clust tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/aln_step0 tmp//107987516",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:17356,Integrability,wrap,wrapped-scoring,17356,"XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 50ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [=================================================================] 100.00% 239 0s 20ms; [================================================================>] 99.58% 238 eta 0s; 20.876247 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 824ms; align tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/pref_step1 tmp//10798751672030653963/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 239 type: Aminoacid; Target database size: 239 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 239 0s 46ms; Time for merging to aln_step1: 0h 0m 0s 11ms; 308 alignments calculated; 270 sequence pairs passed the thresholds (0.876623 of overall calculated); 1.129707 hits per query sequence; Time for processing: 0h 0m 0s 78ms; clust tmp//10798751672030653963/input_step1 tmp//10798751672030653963/aln_step1 tmp//107987516720306539",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:21445,Integrability,wrap,wrapped-scoring,21445,"B; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 970ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 222; Target db start 1 to 222; [=================================================================] 100.00% 222 0s 52ms. 196.811469 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 11ms; Time for processing: 0h 0m 1s 704ms; align tmp//10798751672030653963/input_step2 tmp//10798751672030653963/input_step2 tmp//10798751672030653963/pref_step2 tmp//10798751672030653963/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 222 type: Aminoacid; Target database size: 222 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 222 0s 80ms; Time for merging to aln_step2: 0h 0m 0s 11ms; 388 alignments calculated; 266 sequence pairs passed the thresholds (0.685567 of overall calculated); 1.198198 hits per query sequence; Time for processing: 0h 0m 0s 106ms; clust tmp//10798751672030653963/input_step2 tmp//10798751672030653963/aln_step2 tmp//10798751672030653",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:24200,Integrability,wrap,wrapped-scoring,24200,"e for processing: 0h 0m 0s 75ms; mergeclusters DB_in tmp//10798751672030653963/clu tmp//10798751672030653963/clu_redundancy tmp//10798751672030653963/clu_step0 tmp//10798751672030653963/clu_step1 tmp//10798751672030653963/clu_step2. Clustering step 1; [=================================================================] 100.00% 276 0s 5ms; Clustering step 2; [=================================================================] 100.00% 239 0s 25ms; Clustering step 3; [=================================================================] 100.00% 222 0s 44ms; Clustering step 4; [=================================================================] 100.00% 200 0s 61ms; Write merged clustering; [=================================================================] 100.00% 303 0s 73ms; Time for merging to clu: 0h 0m 0s 10ms; Time for processing: 0h 0m 0s 88ms; align DB_in DB_in tmp//10798751672030653963/clu tmp//10798751672030653963/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 303 type: Aminoacid; Target database size: 303 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 200 0s 20ms; Time for merging to aln: 0h 0m 0s 1ms; 303 alignments calculated; 289 sequence pairs passed the thresholds (0.953795 of overall calculated); 1.445000 hits per query sequence; Time for processing: 0h 0m 0s 47ms; subtractdbs tmp//10798751672030653963/clu tmp//10798751672030653963/aln tmp//10798751672030653963/clu_not_acce",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:30301,Integrability,wrap,wrapped-scoring,30301," 611ms; swapdb tmp//10798751672030653963/seq_wrong_assigned_pref tmp//10798751672030653963/seq_wrong_assigned_pref_swaped --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 14 0s 4ms; Computing offsets.; [=================================================================] 100.00% 14 0s 2ms. Reading results.; [=================================================================] 100.00% 14 0s 4ms. Output database: tmp//10798751672030653963/seq_wrong_assigned_pref_swaped; [=================================================================] 100.00% 284 0s 6ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 87ms; align tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/seq_wrong_assigned tmp//10798751672030653963/seq_wrong_assigned_pref_swaped tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 214 type: Aminoacid; Target database size: 14 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 29 0s 13ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 5ms; 41 alignments calculated; 32 sequence pairs passed the thresholds (0.780488 of overall calculated); 1.103448 hits per query sequence; Time for processing: 0h 0m 0s 56ms; filterdb tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln tmp//10798751",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:2018,Modifiability,extend,extendable,2018,"nclude identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust DB_in tmp//10798751672030653963/clu_redundancy tmp//10798751672030653963/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:2753,Modifiability,extend,extend,2753,"eps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust DB_in tmp//10798751672030653963/clu_redundancy tmp//10798751672030653963/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:2996,Modifiability,extend,extendable,2996,"67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust DB_in tmp//10798751672030653963/clu_redundancy tmp//10798751672030653963/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-k",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:3511,Modifiability,extend,extendable,3511,"n 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; rescorediagonal DB_in DB_in tmp//10798",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:3972,Modifiability,extend,extendable,3972,"mory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; rescorediagonal DB_in DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:8693,Modifiability,extend,extend,8693,"umn for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 276 0s 8ms; Time for merging to pref_rescore2: 0h 0m 0s 2ms ] 16.00% 45 eta 0s; Time for processing: 0h 0m 0s 37ms; align tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore2 tmp//10798751672030653963/linclust/5052420726377277994/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 64ms; Time for merging to aln: 0h 0m 0s 5ms; 276 alignments calculated; 276 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 80ms; clust tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/aln tmp//10798751672030653963/linclust/5052420726377277994/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 276 0s 8ms; Sort entries; Find missing connections; Found 0 new connections.; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:13523,Modifiability,extend,extend,13523,"==========================================] 100.00% 276 0s 19ms. 1.394095 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 477ms; align tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/pref_step0 tmp//10798751672030653963/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 44ms; Time for merging to aln_step0: 0h 0m 0s 7ms; 415 alignments calculated; 408 sequence pairs passed the thresholds (0.983133 of overall calculated); 1.478261 hits per query sequence; Time for processing: 0h 0m 0s 89ms; clust tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/aln_step0 tmp//10798751672030653963/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 276 0s 11ms; Sort entries; Find missing connections; Found 0 new connections.; Reconstruct initial order; [==========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:17720,Modifiability,extend,extend,17720,"==============================================================>] 99.58% 238 eta 0s; 20.876247 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 824ms; align tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/pref_step1 tmp//10798751672030653963/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 239 type: Aminoacid; Target database size: 239 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 239 0s 46ms; Time for merging to aln_step1: 0h 0m 0s 11ms; 308 alignments calculated; 270 sequence pairs passed the thresholds (0.876623 of overall calculated); 1.129707 hits per query sequence; Time for processing: 0h 0m 0s 78ms; clust tmp//10798751672030653963/input_step1 tmp//10798751672030653963/aln_step1 tmp//10798751672030653963/clu_step1 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 239 0s 12ms; Sort entries; Find missing connections; Found 7 new connections.; Reconstruct initial order; [===================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:21809,Modifiability,extend,extend,21809,"===========================================================] 100.00% 222 0s 52ms. 196.811469 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 11ms; Time for processing: 0h 0m 1s 704ms; align tmp//10798751672030653963/input_step2 tmp//10798751672030653963/input_step2 tmp//10798751672030653963/pref_step2 tmp//10798751672030653963/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 222 type: Aminoacid; Target database size: 222 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 222 0s 80ms; Time for merging to aln_step2: 0h 0m 0s 11ms; 388 alignments calculated; 266 sequence pairs passed the thresholds (0.685567 of overall calculated); 1.198198 hits per query sequence; Time for processing: 0h 0m 0s 106ms; clust tmp//10798751672030653963/input_step2 tmp//10798751672030653963/aln_step2 tmp//10798751672030653963/clu_step2 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 222 0s 2ms; Sort entries; Find missing connections; Found 6 new connections.; Reconstruct initial order; [===================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:24564,Modifiability,extend,extend,24564,"=========================================================] 100.00% 239 0s 25ms; Clustering step 3; [=================================================================] 100.00% 222 0s 44ms; Clustering step 4; [=================================================================] 100.00% 200 0s 61ms; Write merged clustering; [=================================================================] 100.00% 303 0s 73ms; Time for merging to clu: 0h 0m 0s 10ms; Time for processing: 0h 0m 0s 88ms; align DB_in DB_in tmp//10798751672030653963/clu tmp//10798751672030653963/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 303 type: Aminoacid; Target database size: 303 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 200 0s 20ms; Time for merging to aln: 0h 0m 0s 1ms; 303 alignments calculated; 289 sequence pairs passed the thresholds (0.953795 of overall calculated); 1.445000 hits per query sequence; Time for processing: 0h 0m 0s 47ms; subtractdbs tmp//10798751672030653963/clu tmp//10798751672030653963/aln tmp//10798751672030653963/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. subtractdbs tmp//10798751672030653963/clu tmp//10798751672030653963/aln tmp//10798751672030653963/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. Remove tmp//10798751672030653963/aln ids from tmp//10798751672030653963/clu; [================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:30665,Modifiability,extend,extend,30665,"[=================================================================] 100.00% 14 0s 4ms. Output database: tmp//10798751672030653963/seq_wrong_assigned_pref_swaped; [=================================================================] 100.00% 284 0s 6ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 87ms; align tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/seq_wrong_assigned tmp//10798751672030653963/seq_wrong_assigned_pref_swaped tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 214 type: Aminoacid; Target database size: 14 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 29 0s 13ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 5ms; 41 alignments calculated; 32 sequence pairs passed the thresholds (0.780488 of overall calculated); 1.103448 hits per query sequence; Time for processing: 0h 0m 0s 56ms; filterdb tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln_ocol --trim-to-one-column --threads 16 --compressed 0 -v 3. Filtering using regular expression; [=================================================================] 100.00% 29 0s 8ms; Time for merging to seq_wrong_assigned_pref_swaped_aln_ocol: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 51ms; mergedbs tmp//107987516720",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:2610,Performance,load,load-mode,2610,"t nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust DB_in tmp//10798751672030653963/clu_redundancy tmp//10798751672030653963/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:4851,Performance,load,load-mode,4851,"er-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; rescorediagonal DB_in DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 303 0s 28ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms===============> ] 94.37% 286 eta 0s; Time for processing: 0h 0m 0s 69ms; clust DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore1 tmp//10798751672030653963/linclust/5052420726377277994/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 303 0s 10ms; Sort entries; Find missing connections; Found 29 new connections.; Reconstruct initial order; [=================================================================] 100.00% 303 0s 9ms; Add missing connections; [=================================================================] 100.00% 303 0s 1ms. Time for read in: 0h 0m 0s 96ms; Total time: 0h 0m 0s 125ms. Size of the sequ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:7617,Performance,load,load-mode,7617," 0ms; Time for processing: 0h 0m 0s 0ms; filterdb tmp//10798751672030653963/linclust/5052420726377277994/pref_filter1 tmp//10798751672030653963/linclust/5052420726377277994/pref_filter2 --filter-file tmp//10798751672030653963/linclust/5052420726377277994/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 276 0s 5ms; Time for merging to pref_filter2: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 20ms; rescorediagonal tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/pref_filter2 tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 276 0s 8ms; Time for merging to pref_rescore2: 0h 0m 0s 2ms ] 16.00% 45 eta 0s; Time for processing: 0h 0m 0s 37ms; align tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore2 tmp//10798751672030653963/linclust/5052420726377277994/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --sco",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:8550,Performance,load,load-mode,8550,"01 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 276 0s 8ms; Time for merging to pref_rescore2: 0h 0m 0s 2ms ] 16.00% 45 eta 0s; Time for processing: 0h 0m 0s 37ms; align tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore2 tmp//10798751672030653963/linclust/5052420726377277994/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 64ms; Time for merging to aln: 0h 0m 0s 5ms; 276 alignments calculated; 276 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 80ms; clust tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/aln tmp//10798751672030653963/linclust/5052420726377277994/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compre",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:11597,Performance,load,load-mode,11597,"g step 2; [=================================================================] 100.00% 276 0s 36ms; Write merged clustering; [=================================================================] 100.00% 303 0s 53ms; Time for merging to clu_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 67ms; createsubdb tmp//10798751672030653963/clu_redundancy DB_in tmp//10798751672030653963/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 276 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 276 0s 3ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 0s 848ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:13380,Performance,load,load-mode,13380,"ess prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=================================================================] 100.00% 276 0s 19ms. 1.394095 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 477ms; align tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/pref_step0 tmp//10798751672030653963/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 44ms; Time for merging to aln_step0: 0h 0m 0s 7ms; 415 alignments calculated; 408 sequence pairs passed the thresholds (0.983133 of overall calculated); 1.478261 hits per query sequence; Time for processing: 0h 0m 0s 89ms; clust tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/aln_step0 tmp//10798751672030653963/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:15727,Performance,load,load-mode,15727,"=======] 100.00% 276 0s 0ms. Time for read in: 0h 0m 0s 83ms; Total time: 0h 0m 0s 118ms. Size of the sequence database: 276; Size of the alignment database: 276; Number of clusters: 239. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 125ms; createsubdb tmp//10798751672030653963/clu_step0 tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 239 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 239 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 239 0s 16ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 239 0s 6ms; Index statistics; Entries: 1415; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 50ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:17577,Performance,load,load-mode,17577,"ing prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [=================================================================] 100.00% 239 0s 20ms; [================================================================>] 99.58% 238 eta 0s; 20.876247 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 824ms; align tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/pref_step1 tmp//10798751672030653963/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 239 type: Aminoacid; Target database size: 239 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 239 0s 46ms; Time for merging to aln_step1: 0h 0m 0s 11ms; 308 alignments calculated; 270 sequence pairs passed the thresholds (0.876623 of overall calculated); 1.129707 hits per query sequence; Time for processing: 0h 0m 0s 78ms; clust tmp//10798751672030653963/input_step1 tmp//10798751672030653963/aln_step1 tmp//10798751672030653963/clu_step1 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [======================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:19900,Performance,load,load-mode,19900,"=====================] 100.00% 239 0s 0ms. Time for read in: 0h 0m 0s 50ms; Total time: 0h 0m 0s 71ms. Size of the sequence database: 239; Size of the alignment database: 239; Number of clusters: 222. Writing results 0h 0m 0s 0ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 73ms; createsubdb tmp//10798751672030653963/clu_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//10798751672030653963/input_step2 tmp//10798751672030653963/input_step2 tmp//10798751672030653963/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 222 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 222 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 222 0s 24ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 222 0s 3ms; Index statistics; Entries: 1342; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 970ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 222; Target db start 1 to 222; [=========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:21666,Performance,load,load-mode,21666,"0m 0s 970ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 222; Target db start 1 to 222; [=================================================================] 100.00% 222 0s 52ms. 196.811469 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 11ms; Time for processing: 0h 0m 1s 704ms; align tmp//10798751672030653963/input_step2 tmp//10798751672030653963/input_step2 tmp//10798751672030653963/pref_step2 tmp//10798751672030653963/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 222 type: Aminoacid; Target database size: 222 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 222 0s 80ms; Time for merging to aln_step2: 0h 0m 0s 11ms; 388 alignments calculated; 266 sequence pairs passed the thresholds (0.685567 of overall calculated); 1.198198 hits per query sequence; Time for processing: 0h 0m 0s 106ms; clust tmp//10798751672030653963/input_step2 tmp//10798751672030653963/aln_step2 tmp//10798751672030653963/clu_step2 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=====================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:24421,Performance,load,load-mode,24421,"72030653963/clu_step1 tmp//10798751672030653963/clu_step2. Clustering step 1; [=================================================================] 100.00% 276 0s 5ms; Clustering step 2; [=================================================================] 100.00% 239 0s 25ms; Clustering step 3; [=================================================================] 100.00% 222 0s 44ms; Clustering step 4; [=================================================================] 100.00% 200 0s 61ms; Write merged clustering; [=================================================================] 100.00% 303 0s 73ms; Time for merging to clu: 0h 0m 0s 10ms; Time for processing: 0h 0m 0s 88ms; align DB_in DB_in tmp//10798751672030653963/clu tmp//10798751672030653963/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 303 type: Aminoacid; Target database size: 303 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 200 0s 20ms; Time for merging to aln: 0h 0m 0s 1ms; 303 alignments calculated; 289 sequence pairs passed the thresholds (0.953795 of overall calculated); 1.445000 hits per query sequence; Time for processing: 0h 0m 0s 47ms; subtractdbs tmp//10798751672030653963/clu tmp//10798751672030653963/aln tmp//10798751672030653963/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. subtractdbs tmp//10798751672030653963/clu tmp//10798751672030653963/aln tmp//10798751672030653963/c",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:27977,Performance,load,load-mode,27977,"===============================] 100.00% 200 0s 22ms; Time for merging to clu_accepted: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 40ms; createsubdb tmp//10798751672030653963/clu_not_accepted_swap DB_in tmp//10798751672030653963/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//10798751672030653963/clu DB_in tmp//10798751672030653963/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp//10798751672030653963/seq_wrong_assigned tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 14 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 214 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 214 0s 24ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 214 0s 9ms; Index statistics; Entries: 1312; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 857ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 14; Target db start 1 to 214; [===========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:30522,Performance,load,load-mode,30522,"================================================] 100.00% 14 0s 4ms; Computing offsets.; [=================================================================] 100.00% 14 0s 2ms. Reading results.; [=================================================================] 100.00% 14 0s 4ms. Output database: tmp//10798751672030653963/seq_wrong_assigned_pref_swaped; [=================================================================] 100.00% 284 0s 6ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 87ms; align tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/seq_wrong_assigned tmp//10798751672030653963/seq_wrong_assigned_pref_swaped tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 214 type: Aminoacid; Target database size: 14 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 29 0s 13ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 5ms; 41 alignments calculated; 32 sequence pairs passed the thresholds (0.780488 of overall calculated); 1.103448 hits per query sequence; Time for processing: 0h 0m 0s 56ms; filterdb tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln_ocol --trim-to-one-column --threads 16 --compressed 0 -v 3. Filtering using regular expression; [============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:1996,Security,hash,hash,1996,"nclude identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust DB_in tmp//10798751672030653963/clu_redundancy tmp//10798751672030653963/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:2944,Security,hash,hash-shift,2944,"67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust DB_in tmp//10798751672030653963/clu_redundancy tmp//10798751672030653963/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-k",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:3459,Security,hash,hash-shift,3459,"n 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; rescorediagonal DB_in DB_in tmp//10798",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:3920,Security,hash,hash-shift,3920,"mory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; rescorediagonal DB_in DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:249,Testability,log,log,249,"@milot-mirdita Your fix works for the artificial set, but unfortunately, not for my own set. I guess the artificial set has very little similarity between sequences, which should explain the differences in behaviour:. ~ See newest comment below for log with reproducible data ~. `mmseqs cluster DB_in DB_clu tmp/ --cluster-reassign 1 --cluster-mode 0 --cov-mode 0`. Create directory tmp/; cluster DB_in DB_clu tmp/ --cluster-reassign 1 --cluster-mode 0 --cov-mode 0. MMseqs Version: 9290a2b529da9763992bde2e6e0f95c61b003123; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:957,Availability,Mask,Mask,957,"New artificial set, with a few highly similar sequences added (10 AA and 7 AA long); [artificial2.txt](https://github.com/soedinglab/MMseqs2/files/5950067/artificial2.txt). commands: ; `mmseqs createdb artificial2.fasta artificial2/DB_artificial`; `mmseqs cluster artificial2/DB_artificial db_clu tmp/ --cluster-reassign 1 --cov-mode 0 --cluster-mode 0`. output: . Create directory tmp/; cluster artificial2/DB_artificial db_clu tmp/ --cluster-reassign 1 --cov-mode 0 --cluster-mode 0. MMseqs Version: 9290a2b529da9763992bde2e6e0f95c61b003123; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:974,Availability,Mask,Mask,974,"New artificial set, with a few highly similar sequences added (10 AA and 7 AA long); [artificial2.txt](https://github.com/soedinglab/MMseqs2/files/5950067/artificial2.txt). commands: ; `mmseqs createdb artificial2.fasta artificial2/DB_artificial`; `mmseqs cluster artificial2/DB_artificial db_clu tmp/ --cluster-reassign 1 --cov-mode 0 --cluster-mode 0`. output: . Create directory tmp/; cluster artificial2/DB_artificial db_clu tmp/ --cluster-reassign 1 --cov-mode 0 --cluster-mode 0. MMseqs Version: 9290a2b529da9763992bde2e6e0f95c61b003123; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:2947,Availability,mask,mask,2947,"xtendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust artificial2/DB_artificial tmp//7897776346521331899/clu_redundancy tmp//7897776346521331899/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --in",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:2956,Availability,mask,mask-lower-case,2956,"xtendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust artificial2/DB_artificial tmp//7897776346521331899/clu_redundancy tmp//7897776346521331899/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --in",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:3442,Availability,mask,mask,3442,"-min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:3451,Availability,mask,mask-lower-case,3451,"-min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:3923,Availability,mask,mask,3923,"mer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 149ms; rescorediagonal artificial2/DB_artificial artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-sel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:3932,Availability,mask,mask-lower-case,3932,"mer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 149ms; rescorediagonal artificial2/DB_artificial artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-sel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:11659,Availability,mask,mask,11659,"=============================================================] 100.00% 124 0s 23ms; Write merged clustering; [=================================================================] 100.00% 136 0s 37ms; Time for merging to clu_redundancy: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 54ms; createsubdb tmp//7897776346521331899/clu_redundancy artificial2/DB_artificial tmp//7897776346521331899/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 51ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 1ms; Index statistics; Entries: 99; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; ERIATC 1; Time for index table init: 0h 0m 1s 150ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [===========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:11668,Availability,mask,mask-lower-case,11668,"=============================================================] 100.00% 124 0s 23ms; Write merged clustering; [=================================================================] 100.00% 136 0s 37ms; Time for merging to clu_redundancy: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 54ms; createsubdb tmp//7897776346521331899/clu_redundancy artificial2/DB_artificial tmp//7897776346521331899/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 51ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 1ms; Index statistics; Entries: 99; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; ERIATC 1; Time for index table init: 0h 0m 1s 150ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [===========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:12123,Availability,Mask,Masked,12123,"0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 51ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 1ms; Index statistics; Entries: 99; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; ERIATC 1; Time for index table init: 0h 0m 1s 150ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 29ms. 0.916862 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 849ms; align tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step_redund",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:15769,Availability,mask,mask,15769,"===============] 100.00% 124 0s 0ms. Time for read in: 0h 0m 0s 46ms; Total time: 0h 0m 0s 72ms. Size of the sequence database: 124; Size of the alignment database: 124; Number of clusters: 124. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 75ms; createsubdb tmp//7897776346521331899/clu_step0 tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 5ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 908ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:15778,Availability,mask,mask-lower-case,15778,"===============] 100.00% 124 0s 0ms. Time for read in: 0h 0m 0s 46ms; Total time: 0h 0m 0s 72ms. Size of the sequence database: 124; Size of the alignment database: 124; Number of clusters: 124. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 75ms; createsubdb tmp//7897776346521331899/clu_step0 tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 5ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 908ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:16234,Availability,Mask,Masked,16234,"put_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 5ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 908ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 24ms. 15.668402 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 591ms; align tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step1 tmp//78977763",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:19881,Availability,mask,mask,19881,"=========================] 100.00% 124 0s 0ms. Time for read in: 0h 0m 0s 87ms; Total time: 0h 0m 0s 107ms. Size of the sequence database: 124; Size of the alignment database: 124; Number of clusters: 124. Writing results 0h 0m 0s 0ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 110ms; createsubdb tmp//7897776346521331899/clu_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//7897776346521331899/input_step2 tmp//7897776346521331899/input_step2 tmp//7897776346521331899/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 19ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 3ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 975ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:19890,Availability,mask,mask-lower-case,19890,"=========================] 100.00% 124 0s 0ms. Time for read in: 0h 0m 0s 87ms; Total time: 0h 0m 0s 107ms. Size of the sequence database: 124; Size of the alignment database: 124; Number of clusters: 124. Writing results 0h 0m 0s 0ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 110ms; createsubdb tmp//7897776346521331899/clu_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//7897776346521331899/input_step2 tmp//7897776346521331899/input_step2 tmp//7897776346521331899/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 19ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 3ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 975ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:20346,Availability,Mask,Masked,20346,"input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//7897776346521331899/input_step2 tmp//7897776346521331899/input_step2 tmp//7897776346521331899/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 19ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 3ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 975ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 35ms. 125.182478 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 657ms; align tmp//7897776346521331899/input_step2 tmp//7897776346521331899/input_step2 tmp//7897776",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:28012,Availability,mask,mask,28012,"100.00% 124 0s 19ms; Time for merging to clu_accepted: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 37ms; createsubdb tmp//7897776346521331899/clu_not_accepted_swap artificial2/DB_artificial tmp//7897776346521331899/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//7897776346521331899/clu artificial2/DB_artificial tmp//7897776346521331899/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//7897776346521331899/seq_wrong_assigned tmp//7897776346521331899/seq_seeds.merged tmp//7897776346521331899/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 126 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 126 0s 29ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 126 0s 1ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 981ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2; Target db start 1 to 126; [==============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:28021,Availability,mask,mask-lower-case,28021,"100.00% 124 0s 19ms; Time for merging to clu_accepted: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 37ms; createsubdb tmp//7897776346521331899/clu_not_accepted_swap artificial2/DB_artificial tmp//7897776346521331899/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//7897776346521331899/clu artificial2/DB_artificial tmp//7897776346521331899/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//7897776346521331899/seq_wrong_assigned tmp//7897776346521331899/seq_seeds.merged tmp//7897776346521331899/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 126 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 126 0s 29ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 126 0s 1ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 981ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2; Target db start 1 to 126; [==============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:28475,Availability,Mask,Masked,28475,"ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//7897776346521331899/seq_wrong_assigned tmp//7897776346521331899/seq_seeds.merged tmp//7897776346521331899/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 126 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 126 0s 29ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 126 0s 1ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 981ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2; Target db start 1 to 126; [=================================================================] 100.00% 2 0s 4ms. 0.000000 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2 sequences with 0 size result lists; Time for merging to seq_wrong_assigned_pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 582ms; swapdb tmp//7897776346521331899/seq_wrong_assigned_pref tmp//7897776346521331899/seq_w",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:32628,Availability,Error,Error,32628,21331899/seq_wrong_assigned_pref_swaped_aln tmp//7897776346521331899/seq_wrong_assigned_pref_swaped_aln_ocol --trim-to-one-column --threads 16 --compressed 0 -v 3. Filtering using regular expression; mergedbs tmp//7897776346521331899/seq_seeds.merged tmp//7897776346521331899/clu_accepted_plus_wrong tmp//7897776346521331899/clu_accepted tmp//7897776346521331899/seq_wrong_assigned_pref_swaped_aln_ocol --merge-stop-empty 0 --compressed 0 -v 3. Merging the results to tmp//7897776346521331899/clu_accepted_plus_wrong; [=================================================================] 100.00% 126 0s 2ms; Time for merging to clu_accepted_plus_wrong: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 4ms; tsv2db tmp//7897776346521331899/missing.single.seqs tmp//7897776346521331899/missing.single.seqs.db --output-dbtype 6 --compressed 0 -v 3. Output database type: Clustering; Time for merging to missing.single.seqs.db: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; mergedbs artificial2/DB_artificial tmp//7897776346521331899/clu_accepted_plus_wrong_plus_single tmp//7897776346521331899/clu_accepted_plus_wrong tmp//7897776346521331899/missing.single.seqs.db --merge-stop-empty 0 --compressed 0 -v 3. Merging the results to tmp//7897776346521331899/clu_accepted_plus_wrong_plus_single; [=================================================================] 100.00% 136 0s 0ms; Time for merging to clu_accepted_plus_wrong_plus_single: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; clust artificial2/DB_artificial tmp//7897776346521331899/clu_accepted_plus_wrong_plus_single db_clu --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 136 0s 3ms; Sort entries; Find missing connections; Found 10 new connections.; Reconstruct initial order; Alignment format is not supported! ] 0.00% 1 eta -; Alignment format is not supported!; Error: Clustering step 2 died,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:4154,Energy Efficiency,Reduce,Reduced,4154,"ficial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 149ms; rescorediagonal artificial2/DB_artificial artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 136 0s 18ms; Time for merging to pref_rescore1: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 48ms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:11879,Energy Efficiency,consumption,consumption,11879,"0m 0s 54ms; createsubdb tmp//7897776346521331899/clu_redundancy artificial2/DB_artificial tmp//7897776346521331899/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 51ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 1ms; Index statistics; Entries: 99; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; ERIATC 1; Time for index table init: 0h 0m 1s 150ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 29ms. 0.916862 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequen",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:15990,Energy Efficiency,consumption,consumption,15990,"e for processing: 0h 0m 0s 75ms; createsubdb tmp//7897776346521331899/clu_step0 tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 5ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 908ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 24ms. 15.668402 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:20102,Energy Efficiency,consumption,consumption,20102,"0s 0ms; Time for processing: 0h 0m 0s 110ms; createsubdb tmp//7897776346521331899/clu_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//7897776346521331899/input_step2 tmp//7897776346521331899/input_step2 tmp//7897776346521331899/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 19ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 3ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 975ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 35ms. 125.182478 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 seq",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:28231,Energy Efficiency,consumption,consumption,28231,"signed: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//7897776346521331899/clu artificial2/DB_artificial tmp//7897776346521331899/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//7897776346521331899/seq_wrong_assigned tmp//7897776346521331899/seq_seeds.merged tmp//7897776346521331899/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 126 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 126 0s 29ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 126 0s 1ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 981ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2; Target db start 1 to 126; [=================================================================] 100.00% 2 0s 4ms. 0.000000 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2 sequences w",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:1262,Integrability,wrap,wrapped,1262,"a artificial2/DB_artificial`; `mmseqs cluster artificial2/DB_artificial db_clu tmp/ --cluster-reassign 1 --cov-mode 0 --cluster-mode 0`. output: . Create directory tmp/; cluster artificial2/DB_artificial db_clu tmp/ --cluster-reassign 1 --cov-mode 0 --cluster-mode 0. MMseqs Version: 9290a2b529da9763992bde2e6e0f95c61b003123; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust artificial2/DB_artificial tmp//7897776346521331899/clu_r",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:2426,Integrability,wrap,wrapped-scoring,2426,"Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust artificial2/DB_artificial tmp//7897776346521331899/clu_redundancy tmp//7897776346521331899/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:4809,Integrability,wrap,wrapped-scoring,4809,"d 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 149ms; rescorediagonal artificial2/DB_artificial artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 136 0s 18ms; Time for merging to pref_rescore1: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 48ms; clust artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore1 tmp//7897776346521331899/linclust/17269245559208916342/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 136 0s 1ms; Sort entries; Find missing connections; Found 9 new connections.; Reconstruct initial order; [=================================================================] 100.00% 136 0s 2ms; Add missing connections; [==============================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:7577,Integrability,wrap,wrapped-scoring,7577,"6521331899/linclust/17269245559208916342/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; filterdb tmp//7897776346521331899/linclust/17269245559208916342/pref_filter1 tmp//7897776346521331899/linclust/17269245559208916342/pref_filter2 --filter-file tmp//7897776346521331899/linclust/17269245559208916342/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 127 0s 8ms; Time for merging to pref_filter2: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 44ms; rescorediagonal tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/pref_filter2 tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 127 0s 5ms; Time for merging to pref_rescore2: 0h 0m 0s 2ms=====> ] 78.57% 100 eta 0s; Time for processing: 0h 0m 0s 27ms; align tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore2 tmp//7897776346521331899/linclust/17269245559208916342/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --com",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:8454,Integrability,wrap,wrapped-scoring,8454,"97776346521331899/linclust/17269245559208916342/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 127 0s 5ms; Time for merging to pref_rescore2: 0h 0m 0s 2ms=====> ] 78.57% 100 eta 0s; Time for processing: 0h 0m 0s 27ms; align tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore2 tmp//7897776346521331899/linclust/17269245559208916342/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 127 type: Aminoacid; Target database size: 127 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 127 0s 17ms; Time for merging to aln: 0h 0m 0s 1ms; 130 alignments calculated; 130 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.023622 hits per query sequence; Time for processing: 0h 0m 0s 57ms; clust tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/li",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:13312,Integrability,wrap,wrapped-scoring,13312,"size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; ERIATC 1; Time for index table init: 0h 0m 1s 150ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 29ms. 0.916862 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 849ms; align tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/pref_step0 tmp//7897776346521331899/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 124 type: Aminoacid; Target database size: 124 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 23ms; Time for merging to aln_step0: 0h 0m 0s 1ms; 124 alignments calculated; 124 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 72ms; clust tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/aln_step0 tmp//78977763465",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:17405,Integrability,wrap,wrapped-scoring,17405," 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 908ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 24ms. 15.668402 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 591ms; align tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/pref_step1 tmp//7897776346521331899/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 124 type: Aminoacid; Target database size: 124 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 26ms; Time for merging to aln_step1: 0h 0m 0s 3ms=================> ] 91.87% 114 eta 0s; 124 alignments calculated; 124 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 62ms; clust tmp//7897776346521331899/input_step1 tmp//789777634652133189",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:21518,Integrability,wrap,wrapped-scoring,21518,"488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 975ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 35ms. 125.182478 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 657ms; align tmp//7897776346521331899/input_step2 tmp//7897776346521331899/input_step2 tmp//7897776346521331899/pref_step2 tmp//7897776346521331899/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 124 type: Aminoacid; Target database size: 124 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 37ms; Time for merging to aln_step2: 0h 0m 0s 8ms; 124 alignments calculated; 124 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 80ms; clust tmp//7897776346521331899/input_step2 tmp//7897776346521331899/aln_step2 tmp//7897776346521331899/c",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:24322,Integrability,wrap,wrapped-scoring,24322,"icial2/DB_artificial tmp//7897776346521331899/clu tmp//7897776346521331899/clu_redundancy tmp//7897776346521331899/clu_step0 tmp//7897776346521331899/clu_step1 tmp//7897776346521331899/clu_step2. Clustering step 1; [=================================================================] 100.00% 124 0s 5ms; Clustering step 2; [=================================================================] 100.00% 124 0s 27ms; Clustering step 3; [=================================================================] 100.00% 124 0s 45ms; Clustering step 4; [=================================================================] 100.00% 124 0s 64ms; Write merged clustering; [=================================================================] 100.00% 136 0s 79ms; Time for merging to clu: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 99ms; align artificial2/DB_artificial artificial2/DB_artificial tmp//7897776346521331899/clu tmp//7897776346521331899/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 136 type: Aminoacid; Target database size: 136 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 17ms; Time for merging to aln: 0h 0m 0s 2ms; 136 alignments calculated; 134 sequence pairs passed the thresholds (0.985294 of overall calculated); 1.080645 hits per query sequence; Time for processing: 0h 0m 0s 43ms; subtractdbs tmp//7897776346521331899/clu tmp//7897776346521331899/aln tmp//7897776346521331899/clu_not_accepte",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:2037,Modifiability,extend,extendable,2037,"nclude identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust artificial2/DB_artificial tmp//7897776346521331899/clu_redundancy tmp//7897776346521331899/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-on",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:2790,Modifiability,extend,extend,2790,"ssign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust artificial2/DB_artificial tmp//7897776346521331899/clu_redundancy tmp//7897776346521331899/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:3033,Modifiability,extend,extendable,3033,"xtendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust artificial2/DB_artificial tmp//7897776346521331899/clu_redundancy tmp//7897776346521331899/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --in",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:3568,Modifiability,extend,extendable,3568,"corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 149ms; rescorediagonal a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:4049,Modifiability,extend,extendable,4049," --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 149ms; rescorediagonal artificial2/DB_artificial artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:8818,Modifiability,extend,extend,8818," coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 127 0s 5ms; Time for merging to pref_rescore2: 0h 0m 0s 2ms=====> ] 78.57% 100 eta 0s; Time for processing: 0h 0m 0s 27ms; align tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore2 tmp//7897776346521331899/linclust/17269245559208916342/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 127 type: Aminoacid; Target database size: 127 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 127 0s 17ms; Time for merging to aln: 0h 0m 0s 1ms; 130 alignments calculated; 130 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.023622 hits per query sequence; Time for processing: 0h 0m 0s 57ms; clust tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/aln tmp//7897776346521331899/linclust/17269245559208916342/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 127 0s 3ms; Sort entries; Find missing connections; Found 3 new connections.; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:13676,Modifiability,extend,extend,13676,"==============================================] 100.00% 124 0s 29ms. 0.916862 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 849ms; align tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/pref_step0 tmp//7897776346521331899/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 124 type: Aminoacid; Target database size: 124 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 23ms; Time for merging to aln_step0: 0h 0m 0s 1ms; 124 alignments calculated; 124 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 72ms; clust tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/aln_step0 tmp//7897776346521331899/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 124 0s 3ms; Sort entries; Find missing connections; Found 0 new connections.; Reconstruct initial order; [==============================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:17769,Modifiability,extend,extend,17769,"=================================================================] 100.00% 124 0s 24ms. 15.668402 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 591ms; align tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/pref_step1 tmp//7897776346521331899/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 124 type: Aminoacid; Target database size: 124 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 26ms; Time for merging to aln_step1: 0h 0m 0s 3ms=================> ] 91.87% 114 eta 0s; 124 alignments calculated; 124 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 62ms; clust tmp//7897776346521331899/input_step1 tmp//7897776346521331899/aln_step1 tmp//7897776346521331899/clu_step1 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 124 0s 5ms; Sort entries; Find missing connections; Found 0 new connections.; Reconstruct initial order; [==================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:21882,Modifiability,extend,extend,21882,"================================================================] 100.00% 124 0s 35ms. 125.182478 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 657ms; align tmp//7897776346521331899/input_step2 tmp//7897776346521331899/input_step2 tmp//7897776346521331899/pref_step2 tmp//7897776346521331899/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 124 type: Aminoacid; Target database size: 124 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 37ms; Time for merging to aln_step2: 0h 0m 0s 8ms; 124 alignments calculated; 124 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 80ms; clust tmp//7897776346521331899/input_step2 tmp//7897776346521331899/aln_step2 tmp//7897776346521331899/clu_step2 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 124 0s 13ms; Sort entries; Find missing connections; Found 0 new connections.; Reconstruct initial order; [=======================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:24686,Modifiability,extend,extend,24686,"====================] 100.00% 124 0s 27ms; Clustering step 3; [=================================================================] 100.00% 124 0s 45ms; Clustering step 4; [=================================================================] 100.00% 124 0s 64ms; Write merged clustering; [=================================================================] 100.00% 136 0s 79ms; Time for merging to clu: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 99ms; align artificial2/DB_artificial artificial2/DB_artificial tmp//7897776346521331899/clu tmp//7897776346521331899/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 136 type: Aminoacid; Target database size: 136 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 17ms; Time for merging to aln: 0h 0m 0s 2ms; 136 alignments calculated; 134 sequence pairs passed the thresholds (0.985294 of overall calculated); 1.080645 hits per query sequence; Time for processing: 0h 0m 0s 43ms; subtractdbs tmp//7897776346521331899/clu tmp//7897776346521331899/aln tmp//7897776346521331899/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. subtractdbs tmp//7897776346521331899/clu tmp//7897776346521331899/aln tmp//7897776346521331899/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. Remove tmp//7897776346521331899/aln ids from tmp//7897776346521331899/clu; [========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:30306,Modifiability,extend,extend,30306,"s with 0 size result lists; Time for merging to seq_wrong_assigned_pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 582ms; swapdb tmp//7897776346521331899/seq_wrong_assigned_pref tmp//7897776346521331899/seq_wrong_assigned_pref_swaped --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 2 0s 2ms; Computing offsets.; [=================================================================] 100.00% 2 0s 4ms. Reading results.; [=================================================================] 100.00% 2 0s 3ms. Output database: tmp//7897776346521331899/seq_wrong_assigned_pref_swaped; [=================================================================] 100.00% 1 eta -. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 110ms; 47 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 126 type: Aminoacid; Target database size: 2 type: Aminoacid; Calculation of alignments; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 7ms; filterdb tmp//7897776346521331899/seq_wrong_assigned_pref_swaped_aln tmp//7897776346521331899/seq_wrong_assigned_pref_swaped_aln_ocol --trim-to-one-column --threads 16 --compressed 0 -v 3. Filtering using regular expression; mergedbs tmp//7897776346521331899/seq_seeds.merged tmp//7897776346521331899/clu_accepted_plus_wrong tmp//7897776346521331899/clu_accepted tmp//7897776346521331899/seq_wrong_assigned_pref_swaped_aln_ocol --merge-stop-empty 0 --compressed 0 -v 3. Merging the results to tmp//7897776346521331899/clu_accepted_plus_wrong; [=================================================================] 100.00% 126 0s 2ms; Time for merging to clu_accepted_plus_wrong:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:2647,Performance,load,load-mode,2647,"op 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust artificial2/DB_artificial tmp//7897776346521331899/clu_redundancy tmp//7897776346521331899/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:4969,Performance,load,load-mode,4969,"ov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 149ms; rescorediagonal artificial2/DB_artificial artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 136 0s 18ms; Time for merging to pref_rescore1: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 48ms; clust artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore1 tmp//7897776346521331899/linclust/17269245559208916342/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 136 0s 1ms; Sort entries; Find missing connections; Found 9 new connections.; Reconstruct initial order; [=================================================================] 100.00% 136 0s 2ms; Add missing connections; [=================================================================] 100.00% 136 0s 0ms. Time for read in: 0h 0m 0s 30ms; Total time: 0h 0m 0s 33ms. Size of the sequence database: 136;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:7735,Performance,load,load-mode,7735," 0ms; Time for processing: 0h 0m 0s 0ms; filterdb tmp//7897776346521331899/linclust/17269245559208916342/pref_filter1 tmp//7897776346521331899/linclust/17269245559208916342/pref_filter2 --filter-file tmp//7897776346521331899/linclust/17269245559208916342/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 127 0s 8ms; Time for merging to pref_filter2: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 44ms; rescorediagonal tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/pref_filter2 tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 127 0s 5ms; Time for merging to pref_rescore2: 0h 0m 0s 2ms=====> ] 78.57% 100 eta 0s; Time for processing: 0h 0m 0s 27ms; align tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore2 tmp//7897776346521331899/linclust/17269245559208916342/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:8675,Performance,load,load-mode,8675,".8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 127 0s 5ms; Time for merging to pref_rescore2: 0h 0m 0s 2ms=====> ] 78.57% 100 eta 0s; Time for processing: 0h 0m 0s 27ms; align tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore2 tmp//7897776346521331899/linclust/17269245559208916342/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 127 type: Aminoacid; Target database size: 127 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 127 0s 17ms; Time for merging to aln: 0h 0m 0s 1ms; 130 alignments calculated; 130 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.023622 hits per query sequence; Time for processing: 0h 0m 0s 57ms; clust tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/aln tmp//7897776346521331899/linclust/17269245559208916342/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compre",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:11756,Performance,load,load-mode,11756,"=============================================================] 100.00% 124 0s 23ms; Write merged clustering; [=================================================================] 100.00% 136 0s 37ms; Time for merging to clu_redundancy: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 54ms; createsubdb tmp//7897776346521331899/clu_redundancy artificial2/DB_artificial tmp//7897776346521331899/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 51ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 1ms; Index statistics; Entries: 99; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; ERIATC 1; Time for index table init: 0h 0m 1s 150ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [===========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:13533,Performance,load,load-mode,13533,"Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 29ms. 0.916862 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 849ms; align tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/pref_step0 tmp//7897776346521331899/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 124 type: Aminoacid; Target database size: 124 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 23ms; Time for merging to aln_step0: 0h 0m 0s 1ms; 124 alignments calculated; 124 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 72ms; clust tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/aln_step0 tmp//7897776346521331899/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:15867,Performance,load,load-mode,15867,"===============] 100.00% 124 0s 0ms. Time for read in: 0h 0m 0s 46ms; Total time: 0h 0m 0s 72ms. Size of the sequence database: 124; Size of the alignment database: 124; Number of clusters: 124. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 75ms; createsubdb tmp//7897776346521331899/clu_step0 tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 5ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 908ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:17626,Performance,load,load-mode,17626,"t: 0h 0m 0s 908ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 24ms. 15.668402 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 591ms; align tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/pref_step1 tmp//7897776346521331899/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 124 type: Aminoacid; Target database size: 124 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 26ms; Time for merging to aln_step1: 0h 0m 0s 3ms=================> ] 91.87% 114 eta 0s; 124 alignments calculated; 124 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 62ms; clust tmp//7897776346521331899/input_step1 tmp//7897776346521331899/aln_step1 tmp//7897776346521331899/clu_step1 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [====",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:19979,Performance,load,load-mode,19979,"=========================] 100.00% 124 0s 0ms. Time for read in: 0h 0m 0s 87ms; Total time: 0h 0m 0s 107ms. Size of the sequence database: 124; Size of the alignment database: 124; Number of clusters: 124. Writing results 0h 0m 0s 0ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 110ms; createsubdb tmp//7897776346521331899/clu_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//7897776346521331899/input_step2 tmp//7897776346521331899/input_step2 tmp//7897776346521331899/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 19ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 3ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 975ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:21739,Performance,load,load-mode,21739,": 0h 0m 0s 975ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 35ms. 125.182478 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 657ms; align tmp//7897776346521331899/input_step2 tmp//7897776346521331899/input_step2 tmp//7897776346521331899/pref_step2 tmp//7897776346521331899/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 124 type: Aminoacid; Target database size: 124 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 37ms; Time for merging to aln_step2: 0h 0m 0s 8ms; 124 alignments calculated; 124 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 80ms; clust tmp//7897776346521331899/input_step2 tmp//7897776346521331899/aln_step2 tmp//7897776346521331899/clu_step2 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [==========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:24543,Performance,load,load-mode,24543,"6521331899/clu_step2. Clustering step 1; [=================================================================] 100.00% 124 0s 5ms; Clustering step 2; [=================================================================] 100.00% 124 0s 27ms; Clustering step 3; [=================================================================] 100.00% 124 0s 45ms; Clustering step 4; [=================================================================] 100.00% 124 0s 64ms; Write merged clustering; [=================================================================] 100.00% 136 0s 79ms; Time for merging to clu: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 99ms; align artificial2/DB_artificial artificial2/DB_artificial tmp//7897776346521331899/clu tmp//7897776346521331899/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 136 type: Aminoacid; Target database size: 136 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 17ms; Time for merging to aln: 0h 0m 0s 2ms; 136 alignments calculated; 134 sequence pairs passed the thresholds (0.985294 of overall calculated); 1.080645 hits per query sequence; Time for processing: 0h 0m 0s 43ms; subtractdbs tmp//7897776346521331899/clu tmp//7897776346521331899/aln tmp//7897776346521331899/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. subtractdbs tmp//7897776346521331899/clu tmp//7897776346521331899/aln tmp//7897776346521331899/clu_not",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:28110,Performance,load,load-mode,28110,"100.00% 124 0s 19ms; Time for merging to clu_accepted: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 37ms; createsubdb tmp//7897776346521331899/clu_not_accepted_swap artificial2/DB_artificial tmp//7897776346521331899/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//7897776346521331899/clu artificial2/DB_artificial tmp//7897776346521331899/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//7897776346521331899/seq_wrong_assigned tmp//7897776346521331899/seq_seeds.merged tmp//7897776346521331899/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 126 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 126 0s 29ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 126 0s 1ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 981ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2; Target db start 1 to 126; [==============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:30163,Performance,load,load-mode,30163,"er position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2 sequences with 0 size result lists; Time for merging to seq_wrong_assigned_pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 582ms; swapdb tmp//7897776346521331899/seq_wrong_assigned_pref tmp//7897776346521331899/seq_wrong_assigned_pref_swaped --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 2 0s 2ms; Computing offsets.; [=================================================================] 100.00% 2 0s 4ms. Reading results.; [=================================================================] 100.00% 2 0s 3ms. Output database: tmp//7897776346521331899/seq_wrong_assigned_pref_swaped; [=================================================================] 100.00% 1 eta -. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 110ms; 47 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 126 type: Aminoacid; Target database size: 2 type: Aminoacid; Calculation of alignments; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 7ms; filterdb tmp//7897776346521331899/seq_wrong_assigned_pref_swaped_aln tmp//7897776346521331899/seq_wrong_assigned_pref_swaped_aln_ocol --trim-to-one-column --threads 16 --compressed 0 -v 3. Filtering using regular expression; mergedbs tmp//7897776346521331899/seq_seeds.merged tmp//7897776346521331899/clu_accepted_plus_wrong tmp//7897776346521331899/clu_accepted tmp//7897776346521331899/seq_wrong_assigned_pref_swaped_aln_ocol --merge-stop-empty 0 --compressed 0 -v 3. Merging t",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:2015,Security,hash,hash,2015,"nclude identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust artificial2/DB_artificial tmp//7897776346521331899/clu_redundancy tmp//7897776346521331899/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-on",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:2981,Security,hash,hash-shift,2981,"xtendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust artificial2/DB_artificial tmp//7897776346521331899/clu_redundancy tmp//7897776346521331899/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --in",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:3516,Security,hash,hash-shift,3516,"corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 149ms; rescorediagonal a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:3997,Security,hash,hash-shift,3997," --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 149ms; rescorediagonal artificial2/DB_artificial artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775784541:55,Availability,error,errors,55,"Fortunately, the `--spaced-kmer-pattern` does not give errors anymore. Nonetheless, using this option with `-k 5` and `--mask 0` results in the same errors",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775784541
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775784541:121,Availability,mask,mask,121,"Fortunately, the `--spaced-kmer-pattern` does not give errors anymore. Nonetheless, using this option with `-k 5` and `--mask 0` results in the same errors",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775784541
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775784541:149,Availability,error,errors,149,"Fortunately, the `--spaced-kmer-pattern` does not give errors anymore. Nonetheless, using this option with `-k 5` and `--mask 0` results in the same errors",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775784541
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-776195438:28,Integrability,message,message,28,So I traced back where this message comes from. Seems like the current cluster reassignment procedure will only work with greedy incremental clustering. Not sure if it can be made to work with other cluster modes easily. I guess it should automatically choose greedy if `--cluster-reassign` is used.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-776195438
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-776539284:23,Testability,benchmark,benchmark,23,"I am currently doing a benchmark on clustering algorithms, where I find that Greedy Set Cover would also hugely benefit from this option. This is in line with the guidelines, describing `--cluster-reassign` as the one solution for the cascaded clustering caveat; without this option, there is no certainty that clustering criteria remain fulfilled over multiple cascade steps due to changing representatives.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-776539284
https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-776539284:163,Usability,guid,guidelines,163,"I am currently doing a benchmark on clustering algorithms, where I find that Greedy Set Cover would also hugely benefit from this option. This is in line with the guidelines, describing `--cluster-reassign` as the one solution for the cascaded clustering caveat; without this option, there is no certainty that clustering criteria remain fulfilled over multiple cascade steps due to changing representatives.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-776539284
https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771793382:15,Deployability,update,update,15,"Sorry I didn't update the documentation. The `_taxonomy` file is something new, it contains all the `.dmp` files in a binary format that is instantly loadable (no more 5-7s delay every time the taxonomy database is used).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771793382
https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771793382:150,Performance,load,loadable,150,"Sorry I didn't update the documentation. The `_taxonomy` file is something new, it contains all the `.dmp` files in a binary format that is instantly loadable (no more 5-7s delay every time the taxonomy database is used).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771793382
https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771803529:195,Usability,clear,clear,195,"I think you are nearly there, you just have to swap the order or `nrDB` and `resultDB` then it should work. The difference between a taxonomy result and a taxonomy sequence database is not quite clear in the output of MMseqs2, we should improve that.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771803529
https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771805923:57,Testability,log,log,57,"Thank you for the suggestion. I tried it and here is the log file:; ```; taxonomyreport ../nrDB resultDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""resultDB"" has the wrong type (Alignment); Allowed input:; - Taxonomy; ```. Edit: also the usage for `taxonomyreport` says the following:; ```; usage: mmseqs taxonomyreport <i:targetDB> <i:taxDB> <o:taxonomyReport> [options]; ```; So according to this, I believe that nrDB should go second?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771805923
https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771814053:1410,Deployability,install,installed,1410,"I used the following command, where `queryDB` is a sequence database created using a fasta file with 25 sequences. ; ```; mmseqs search test/query/queryDB ../nrDB resultDB tmp --num-iterations 3 --start-sens 1 --sens-steps 3 -s 7; ```; Only three files were created as the result:; ```; 1.5M Jan 30 11:52 resultDB; 4 Jan 30 11:52 resultDB.dbtype; 392 Jan 30 11:52 resultDB.index; ```; If I do `head -n 5 resultDB` I get the following:; ```; 329161555 773 1.00 2.658E-249 0 382 383 0 382 383 383M; 121000224 437 0.538 5.873E-133 0 382 383 0 389 390 217M7D166M; 187343874 431 0.520 6.546E-131 0 382 383 0 389 390 217M7D166M; 190748379 428 0.517 5.905E-130 0 382 383 0 389 390 217M7D166M; 100067444 424 0.513 1.872E-128 0 382 383 0 392 393 219M8D80M2D84M; ```; If I do `head -n resultDB.index` I get the following:; ```; 0 0 46663; 1 46663 71880; 2 118543 58035; 3 176578 50784; 4 227362 80826; ```. I also tried searching against my `nrDB` using a profileDB, and similarly got only those three files (`resultDB`, `resultDB.dbtype`, and `resultDB.index`) as the result. Here is the command I used there:; ```; mmseqs search ../profileDB /home/scratch60/new_ndDB/nrDB resultDB tmp --start-sens 1 --sens-steps 3 -s 7 -e 0.005 -a 1; ````. I see that makes sense about `taxDB`!. Edit: also I don't know if I mentioned that I am using `MMseqs2 Version: 6672bbc9de55e89b011c8a055982a2644d31a467` which was acquired and installed in mid-January. I am running it on my university's computer cluster (Red Hat Enterprise Linux Server 7.7 (Maipo)) which I ssh into.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771814053
https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771814053:136,Testability,test,test,136,"I used the following command, where `queryDB` is a sequence database created using a fasta file with 25 sequences. ; ```; mmseqs search test/query/queryDB ../nrDB resultDB tmp --num-iterations 3 --start-sens 1 --sens-steps 3 -s 7; ```; Only three files were created as the result:; ```; 1.5M Jan 30 11:52 resultDB; 4 Jan 30 11:52 resultDB.dbtype; 392 Jan 30 11:52 resultDB.index; ```; If I do `head -n 5 resultDB` I get the following:; ```; 329161555 773 1.00 2.658E-249 0 382 383 0 382 383 383M; 121000224 437 0.538 5.873E-133 0 382 383 0 389 390 217M7D166M; 187343874 431 0.520 6.546E-131 0 382 383 0 389 390 217M7D166M; 190748379 428 0.517 5.905E-130 0 382 383 0 389 390 217M7D166M; 100067444 424 0.513 1.872E-128 0 382 383 0 392 393 219M8D80M2D84M; ```; If I do `head -n resultDB.index` I get the following:; ```; 0 0 46663; 1 46663 71880; 2 118543 58035; 3 176578 50784; 4 227362 80826; ```. I also tried searching against my `nrDB` using a profileDB, and similarly got only those three files (`resultDB`, `resultDB.dbtype`, and `resultDB.index`) as the result. Here is the command I used there:; ```; mmseqs search ../profileDB /home/scratch60/new_ndDB/nrDB resultDB tmp --start-sens 1 --sens-steps 3 -s 7 -e 0.005 -a 1; ````. I see that makes sense about `taxDB`!. Edit: also I don't know if I mentioned that I am using `MMseqs2 Version: 6672bbc9de55e89b011c8a055982a2644d31a467` which was acquired and installed in mid-January. I am running it on my university's computer cluster (Red Hat Enterprise Linux Server 7.7 (Maipo)) which I ssh into.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771814053
https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771853116:46,Testability,test,test,46,You have to supply a sequence database (e.g. `test/query/queryDB`) for the first parameter of the `taxonomy`. That sentence is also not very precise. You cannot use `taxonomyreport` directly with a search result. Either you use the `taxonomy` workflow or one of the the `lca` approach I mentioned if you are sure that you want to include every single homologous hit found into the taxonomic label (usually not a good idea).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771853116
https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771860702:571,Security,access,accession,571,"I see. So when the documentation says ; > The result database of searching sequences against a seqTaxDB is referred to as `taxonomyResult`. ""searching"" does not refer to `mmseqs search` but rather the process that `mmseqs taxonomy` uses?. Here is the work-around I used previously to see the taxonomy of my search results. Does this look pretty normal to you, or is there a better way to do this? There seems to be no good way to go from an alignment database (search result) to a sequence database which can then can be used in the `taxonomy` workflow. . 1. get all the accession IDs of all my hits in `resultDB` with `convertalis`; 2. use `blastdbcmd` to get a fasta file containing sequences of all my hits; 3. then use `easy-taxonomy` to renerate a Kraken style report",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771860702
https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771891766:117,Deployability,update,update,117,"Okay sorry, this will not work after all, as `taxonomyreport` only reads the first entry and ignores the rest.; I'll update you when I fix `taxonomyreport` to support your use-case.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771891766
https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771981251:17,Deployability,install,install,17,"Amazing! I would install by compiling source, but my cluster only has g++ v9.8.5. . Are the static linux versions updated? I just tried reinstalling with ; ```; wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz ; tar xvzf mmseqs-linux-avx2.tar.gz; export PATH=$(pwd)/mmseqs/bin/:$PATH; ``` ; but the changes aren't reflected there yet.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771981251
https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771981251:114,Deployability,update,updated,114,"Amazing! I would install by compiling source, but my cluster only has g++ v9.8.5. . Are the static linux versions updated? I just tried reinstalling with ; ```; wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz ; tar xvzf mmseqs-linux-avx2.tar.gz; export PATH=$(pwd)/mmseqs/bin/:$PATH; ``` ; but the changes aren't reflected there yet.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771981251
https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771983647:162,Availability,down,down,162,"The static binaries take about one hour to build (running the tests take some time).; GCC 9 would be completely sufficient to compile, we support (and check for) down to GCC 4.9 and clang 5.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771983647
https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771983647:62,Testability,test,tests,62,"The static binaries take about one hour to build (running the tests take some time).; GCC 9 would be completely sufficient to compile, we support (and check for) down to GCC 4.9 and clang 5.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771983647
https://github.com/soedinglab/MMseqs2/issues/405#issuecomment-774499447:141,Availability,down,down,141,"Hi, I do these ordinal names in Python when I run a pipeline that uses MMSeqs2 as a backend.; You need to rank the clusters by size, and top-down number it. This output:; ```; a a; a b; a c; a d; e e; e f; e h; i i; i j; ```; might become something like this:. ```; 0 a; 0 b; 0 c; 0 d; 1 e; 1 f; 1 h; 2 i; 2 j; ```. I hope I help someway.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/405#issuecomment-774499447
https://github.com/soedinglab/MMseqs2/issues/405#issuecomment-774499447:52,Deployability,pipeline,pipeline,52,"Hi, I do these ordinal names in Python when I run a pipeline that uses MMSeqs2 as a backend.; You need to rank the clusters by size, and top-down number it. This output:; ```; a a; a b; a c; a d; e e; e f; e h; i i; i j; ```; might become something like this:. ```; 0 a; 0 b; 0 c; 0 d; 1 e; 1 f; 1 h; 2 i; 2 j; ```. I hope I help someway.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/405#issuecomment-774499447
https://github.com/soedinglab/MMseqs2/issues/407#issuecomment-774496377:171,Testability,benchmark,benchmarking,171,"The PDB and UniProtKB/Swiss-Prot are pretty small, if you want a smaller database you could use the `examples/DB.fasta` file, which is a subset of Uniprot we generated or benchmarking some time ago.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/407#issuecomment-774496377
https://github.com/soedinglab/MMseqs2/issues/408#issuecomment-774697002:174,Security,access,accession,174,"Yes perhaps I am using `taxonomyreport` in an unusual way. . I wanted to cluster sequences of all the proteins with a domain from the NCBI domain database so I got a list of accession numbers of all the proteins containing that domain, made a fasta file with them (using `blastdbcmd`), then created a taxidmapping for those sequences. Using the fasta file and the taxidmapping, I made a seqTaxDB (`createtaxdb` with `--tax-mapping-file` option). . I then ran `cluster` on the database, and then `taxonomyreport` on the cluster database which worked great. I wanted to compare the taxonomic distribution of the clustered sequences to the original set of sequences so I tried `taxonomyreport seqTaxDB seqTaxDB report`. Perhaps there is a better way to do what I am trying to do?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/408#issuecomment-774697002
https://github.com/soedinglab/MMseqs2/issues/409#issuecomment-775057492:166,Testability,benchmark,benchmarking,166,You could try to compare it with the single step clustering `--single-step-clustering`. But the regular Linclust + cascaded clustering workflow is much faster. ; For benchmarking you could do this two things: ; (1) Just hardcode your sensitivities levels in `src/workflows/Cluster.cpp` line 195 for now.; (2) Remove the linclust call in `data/cascaded_clustering.sh`. But we might add this feature the next days.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/409#issuecomment-775057492
https://github.com/soedinglab/MMseqs2/issues/409#issuecomment-776990567:72,Testability,Log,Log,72,I'll second the idea that being able to scan identity levels is useful. Log steps in (1-identity) is generally the right step spacing. Log-log plots of the deltas in cluster sizes make a very informative plot with peaks at any genome duplication events.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/409#issuecomment-776990567
https://github.com/soedinglab/MMseqs2/issues/409#issuecomment-776990567:135,Testability,Log,Log-log,135,I'll second the idea that being able to scan identity levels is useful. Log steps in (1-identity) is generally the right step spacing. Log-log plots of the deltas in cluster sizes make a very informative plot with peaks at any genome duplication events.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/409#issuecomment-776990567
https://github.com/soedinglab/MMseqs2/issues/410#issuecomment-776177415:535,Performance,perform,performs,535,"This should work:; ```; wget https://ftp.ncbi.nih.gov/pub/mmdb/cdd/fasta.tar.gz; mmseqs tar2db fasta.tar.gz cddmsa; sed 's|\.FASTA||g' cddmsa.lookup > cddmsa.lookup_tmp; mv -f cddmsa.lookup_tmp cddmsa.lookup; mmseqs apply cddmsa cddmsa_wo_cons -- awk '/^>/ { i++ } i > 1 { print; }'; awk 'BEGIN { printf(""%c%c%c%c"",11,0,0,0); exit; }' > cddmsa_wo_cons.dbtype; ln -s cddmsa.lookup cddmsa_wo_cons.lookup; mmseqs msa2profile cddmsa_wo_cons cdd --match-mode 1. mmseqs easy-search QUERY.fasta cdd res.m8 tmp; ```. Could you try out if this performs approximately how you expect it to? If this works well I can add it to the `databases` workflow. (I fixed a few things shortly after I posted this.)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/410#issuecomment-776177415
https://github.com/soedinglab/MMseqs2/issues/410#issuecomment-776955401:35,Availability,down,downloader,35,I added the CDD to the `databases` downloader. Thanks for the suggestion!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/410#issuecomment-776955401
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-776931258:177,Integrability,depend,dependencies,177,We can compile MMseqs2 without bz2 and zlib but we need zstd and xxhash. Therefore we included it into the repository. It might be not optimal for shipping but it decreases the dependencies to compile the software.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-776931258
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777005754:174,Deployability,patch,patch,174,"I realize that those are both required libraries, and needed for many platforms. . The request is for adding something like USE_SYSTEM_ZSTD and USE_SYSTEM_XXHASH. The Debian patch for system zstd has the minor changes needed except the cmake ifdefs. Debian also uses system gzstream (Debian is an outlier in having that lib), but no patch for xxhash. xxhash is central to your algorithm and also latest-release in your repo, but it's in pretty active development with fairly major bug fixes and performance improvements in the last 6 months, so it's good to have a pinned version in the repo that can be overridden with system if desired. Being able to build shared libs is pretty important, in either case.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777005754
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777005754:333,Deployability,patch,patch,333,"I realize that those are both required libraries, and needed for many platforms. . The request is for adding something like USE_SYSTEM_ZSTD and USE_SYSTEM_XXHASH. The Debian patch for system zstd has the minor changes needed except the cmake ifdefs. Debian also uses system gzstream (Debian is an outlier in having that lib), but no patch for xxhash. xxhash is central to your algorithm and also latest-release in your repo, but it's in pretty active development with fairly major bug fixes and performance improvements in the last 6 months, so it's good to have a pinned version in the repo that can be overridden with system if desired. Being able to build shared libs is pretty important, in either case.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777005754
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777005754:403,Deployability,release,release,403,"I realize that those are both required libraries, and needed for many platforms. . The request is for adding something like USE_SYSTEM_ZSTD and USE_SYSTEM_XXHASH. The Debian patch for system zstd has the minor changes needed except the cmake ifdefs. Debian also uses system gzstream (Debian is an outlier in having that lib), but no patch for xxhash. xxhash is central to your algorithm and also latest-release in your repo, but it's in pretty active development with fairly major bug fixes and performance improvements in the last 6 months, so it's good to have a pinned version in the repo that can be overridden with system if desired. Being able to build shared libs is pretty important, in either case.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777005754
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777005754:495,Performance,perform,performance,495,"I realize that those are both required libraries, and needed for many platforms. . The request is for adding something like USE_SYSTEM_ZSTD and USE_SYSTEM_XXHASH. The Debian patch for system zstd has the minor changes needed except the cmake ifdefs. Debian also uses system gzstream (Debian is an outlier in having that lib), but no patch for xxhash. xxhash is central to your algorithm and also latest-release in your repo, but it's in pretty active development with fairly major bug fixes and performance improvements in the last 6 months, so it's good to have a pinned version in the repo that can be overridden with system if desired. Being able to build shared libs is pretty important, in either case.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777005754
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777511188:135,Availability,avail,available,135,"I am still not 100% sure why the shared zstd works in debian. We use the zstd function `ZSTD_findDecompressedSize` that should only be available if `ZSTD_STATIC_LINKING_ONLY` is set and therefore zstd is linked statically. ; I just spent a few minutes trying to figure out how debian defeats this check, but didn't find where they do that. As we can't make sure that every native libzstd package does something similar, it's probably more appropriate to have distributions patch that themselves if they are confident it will work out fine. If `ZSTD_findDecompressedSize` becomes part of the stable zstd api, then we can provide as `USE_SYSTEM_ZSTD` option. Regarding xxhash I am very uncomfortable to encourage anyone to provide their own library. xxhash is a central part of the linclust algorithm and we have extensive tests to make sure that linclust produces exactly the same results on every platform/distribution/architecture. I think scientific reproducibility outweighs other concerns for our software.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777511188
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777511188:473,Deployability,patch,patch,473,"I am still not 100% sure why the shared zstd works in debian. We use the zstd function `ZSTD_findDecompressedSize` that should only be available if `ZSTD_STATIC_LINKING_ONLY` is set and therefore zstd is linked statically. ; I just spent a few minutes trying to figure out how debian defeats this check, but didn't find where they do that. As we can't make sure that every native libzstd package does something similar, it's probably more appropriate to have distributions patch that themselves if they are confident it will work out fine. If `ZSTD_findDecompressedSize` becomes part of the stable zstd api, then we can provide as `USE_SYSTEM_ZSTD` option. Regarding xxhash I am very uncomfortable to encourage anyone to provide their own library. xxhash is a central part of the linclust algorithm and we have extensive tests to make sure that linclust produces exactly the same results on every platform/distribution/architecture. I think scientific reproducibility outweighs other concerns for our software.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777511188
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777511188:821,Testability,test,tests,821,"I am still not 100% sure why the shared zstd works in debian. We use the zstd function `ZSTD_findDecompressedSize` that should only be available if `ZSTD_STATIC_LINKING_ONLY` is set and therefore zstd is linked statically. ; I just spent a few minutes trying to figure out how debian defeats this check, but didn't find where they do that. As we can't make sure that every native libzstd package does something similar, it's probably more appropriate to have distributions patch that themselves if they are confident it will work out fine. If `ZSTD_findDecompressedSize` becomes part of the stable zstd api, then we can provide as `USE_SYSTEM_ZSTD` option. Regarding xxhash I am very uncomfortable to encourage anyone to provide their own library. xxhash is a central part of the linclust algorithm and we have extensive tests to make sure that linclust produces exactly the same results on every platform/distribution/architecture. I think scientific reproducibility outweighs other concerns for our software.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777511188
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:637,Availability,reliab,reliable,637,"TL; DR: Enabling building against shared system libraries gives better modularity and a better end-user experience. The way that the Debian patch works is that on distros such as Debian (and Fedora and Gentoo) the system zstd library can optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development an",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:140,Deployability,patch,patch,140,"TL; DR: Enabling building against shared system libraries gives better modularity and a better end-user experience. The way that the Debian patch works is that on distros such as Debian (and Fedora and Gentoo) the system zstd library can optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development an",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:267,Deployability,install,installed,267,"TL; DR: Enabling building against shared system libraries gives better modularity and a better end-user experience. The way that the Debian patch works is that on distros such as Debian (and Fedora and Gentoo) the system zstd library can optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development an",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:409,Deployability,update,updates,409,"TL; DR: Enabling building against shared system libraries gives better modularity and a better end-user experience. The way that the Debian patch works is that on distros such as Debian (and Fedora and Gentoo) the system zstd library can optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development an",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:556,Deployability,update,updated,556,"TL; DR: Enabling building against shared system libraries gives better modularity and a better end-user experience. The way that the Debian patch works is that on distros such as Debian (and Fedora and Gentoo) the system zstd library can optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development an",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:597,Deployability,update,updated,597,"TL; DR: Enabling building against shared system libraries gives better modularity and a better end-user experience. The way that the Debian patch works is that on distros such as Debian (and Fedora and Gentoo) the system zstd library can optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development an",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1532,Deployability,release,release,1532,"an optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short projects always lean heavily on the distro. As for bugs, you can always strongly suggest that bug reports and issues be filed against your own project-compiled binaries and test against those binaries first when tracking bugs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1966,Integrability,depend,dependencies,1966,"an optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short projects always lean heavily on the distro. As for bugs, you can always strongly suggest that bug reports and issues be filed against your own project-compiled binaries and test against those binaries first when tracking bugs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1248,Performance,optimiz,optimize,1248,"an optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short projects always lean heavily on the distro. As for bugs, you can always strongly suggest that bug reports and issues be filed against your own project-compiled binaries and test against those binaries first when tracking bugs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1351,Performance,optimiz,optimizations,1351,"an optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short projects always lean heavily on the distro. As for bugs, you can always strongly suggest that bug reports and issues be filed against your own project-compiled binaries and test against those binaries first when tracking bugs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1396,Performance,optimiz,optimized,1396,"an optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short projects always lean heavily on the distro. As for bugs, you can always strongly suggest that bug reports and issues be filed against your own project-compiled binaries and test against those binaries first when tracking bugs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1442,Performance,optimiz,optimizations,1442,"an optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short projects always lean heavily on the distro. As for bugs, you can always strongly suggest that bug reports and issues be filed against your own project-compiled binaries and test against those binaries first when tracking bugs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1776,Performance,optimiz,optimizations,1776,"an optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short projects always lean heavily on the distro. As for bugs, you can always strongly suggest that bug reports and issues be filed against your own project-compiled binaries and test against those binaries first when tracking bugs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1210,Safety,risk,risk,1210,"Debian patch works is that on distros such as Debian (and Fedora and Gentoo) the system zstd library can optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short projects always lean heavily on the distro. As for bugs, you can always strongly suggest that bug reports and issues be file",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1514,Security,access,access,1514,"an optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short projects always lean heavily on the distro. As for bugs, you can always strongly suggest that bug reports and issues be filed against your own project-compiled binaries and test against those binaries first when tracking bugs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1724,Security,hash,hashing,1724,"an optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short projects always lean heavily on the distro. As for bugs, you can always strongly suggest that bug reports and issues be filed against your own project-compiled binaries and test against those binaries first when tracking bugs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1036,Testability,test,tested,1036,"g building against shared system libraries gives better modularity and a better end-user experience. The way that the Debian patch works is that on distros such as Debian (and Fedora and Gentoo) the system zstd library can optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short project",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1239,Testability,test,test,1239,"an optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short projects always lean heavily on the distro. As for bugs, you can always strongly suggest that bug reports and issues be filed against your own project-compiled binaries and test against those binaries first when tracking bugs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:2182,Testability,test,test,2182,"an optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short projects always lean heavily on the distro. As for bugs, you can always strongly suggest that bug reports and issues be filed against your own project-compiled binaries and test against those binaries first when tracking bugs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:99,Usability,user experience,user experience,99,"TL; DR: Enabling building against shared system libraries gives better modularity and a better end-user experience. The way that the Debian patch works is that on distros such as Debian (and Fedora and Gentoo) the system zstd library can optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development an",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1421,Usability,Clear,Clear,1421,"an optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short projects always lean heavily on the distro. As for bugs, you can always strongly suggest that bug reports and issues be filed against your own project-compiled binaries and test against those binaries first when tracking bugs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777699694:124,Availability,avail,available,124,I'm guessing this comment is the reason you only supported static linking:. `We use ZSTD_findDecompressedSize which is only available with ZSTD_STATIC_LINKING_ONLY`. This hasn't been true since zstd 1.4.7 when it went from the experimental features into supported features.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777699694
https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-779222347:94,Deployability,release,release,94,I see that this function is still defined still inside the static linking only block:; Latest release: https://github.com/facebook/zstd/blob/v1.4.8/lib/zstd.h#L1282; Current git HEAD: https://github.com/facebook/zstd/blob/f39178b445f96b456881268d29779964633f527d/lib/zstd.h#L1297. But I added a cmake flag to use the (static) system provided libzstd. Hope it helps.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-779222347
https://github.com/soedinglab/MMseqs2/issues/412#issuecomment-779229734:229,Testability,test,test,229,"Adding taxonomy support for the NT is on my todo list, but it is a bit more involved and I haven't had time for it yet. If you are using the assembly files with their original file names you could use something like this (didn't test it, only collected what I think might work from previous fragments i've written):; ```; ls -1 assemblies \; | awk 'match($1, /^(([A-Z]{3})_([0-9]{3})([0-9]{3})([0-9]{3})\.[0-9]+_.+?)_genomic/, a) { print ""https://ftp.ncbi.nlm.nih.gov/genomes/all/""a[2]""/""a[3]""/""a[4]""/""a[5]""/""a[1]""/""a[1]""_assembly_stats.txt""; }' > assembly_urls.tsv; mkdir tmp; cd tmp; aria2c --input-file=../assembly_urls.tsv; for i in *; do awk '/^# Taxid:/ { gsub(/_assembly_stats.txt/, """", FILENAME); print FILENAME""\t""$3; exit; }' $i; done > ../assembly_taxid_mapping.tsv; cd ..; mmseqs createdb assemblies/* refseqdb; mmseqs createtaxdb refseqdb tmp --tax-mapping-file assembly_taxid_mapping.tsv --tax-mapping-mode 1; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/412#issuecomment-779229734
https://github.com/soedinglab/MMseqs2/issues/412#issuecomment-780925754:545,Availability,down,downstream,545,"Thanks milot-mirdita!. I will take a closer look, but think I may have come up with a solution using bbtools gi2taxid to encode the taxonomy IDs in the fasta headers:. A simple for-do loop script like this:. `for i in *.fna.gz; do; 	F=`basename $i .fna.gz`;. gi2taxid.sh in=${i} out=${F}_taxID.fna.gz \; 	server=t \; 	taxpath=${TAXPATH} \; 	-Xmx64g \; 	pigz=6 unpigz=t bgzip=t preferbgzip=t zl=9;. done;`. This isn't exactly full taxonomy support, but I am then able to pull the taxIDs from either the tophit or lca reports and can analyze them downstream using something like taxonkit (https://bioinf.shenwei.me/taxonkit/). Not as optimal as built in taxonomy support within mmseqs2 and running LCA will be an additional challenge, but it is a partial and useful solution for us. Thanks! Look forward to seeing full NT taxonomy support!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/412#issuecomment-780925754
https://github.com/soedinglab/MMseqs2/issues/412#issuecomment-780925754:170,Usability,simpl,simple,170,"Thanks milot-mirdita!. I will take a closer look, but think I may have come up with a solution using bbtools gi2taxid to encode the taxonomy IDs in the fasta headers:. A simple for-do loop script like this:. `for i in *.fna.gz; do; 	F=`basename $i .fna.gz`;. gi2taxid.sh in=${i} out=${F}_taxID.fna.gz \; 	server=t \; 	taxpath=${TAXPATH} \; 	-Xmx64g \; 	pigz=6 unpigz=t bgzip=t preferbgzip=t zl=9;. done;`. This isn't exactly full taxonomy support, but I am then able to pull the taxIDs from either the tophit or lca reports and can analyze them downstream using something like taxonkit (https://bioinf.shenwei.me/taxonkit/). Not as optimal as built in taxonomy support within mmseqs2 and running LCA will be an additional challenge, but it is a partial and useful solution for us. Thanks! Look forward to seeing full NT taxonomy support!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/412#issuecomment-780925754
https://github.com/soedinglab/MMseqs2/issues/413#issuecomment-779220175:219,Availability,down,downloadable,219,We are in the process of preparing release 13. This will include all the recent changes in a stable release. It should be done in the next few days/this week. In the meantime you can use the static precompiled binaries downloadable from https://mmseqs.com/latest.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/413#issuecomment-779220175
https://github.com/soedinglab/MMseqs2/issues/413#issuecomment-779220175:35,Deployability,release,release,35,We are in the process of preparing release 13. This will include all the recent changes in a stable release. It should be done in the next few days/this week. In the meantime you can use the static precompiled binaries downloadable from https://mmseqs.com/latest.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/413#issuecomment-779220175
https://github.com/soedinglab/MMseqs2/issues/413#issuecomment-779220175:100,Deployability,release,release,100,We are in the process of preparing release 13. This will include all the recent changes in a stable release. It should be done in the next few days/this week. In the meantime you can use the static precompiled binaries downloadable from https://mmseqs.com/latest.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/413#issuecomment-779220175
https://github.com/soedinglab/MMseqs2/issues/414#issuecomment-782179653:141,Usability,guid,guidelines,141,"That is interesting. In that case, I mistakingly drew lines between this option and the explanation on sequence identity computations in the guidelines (Header ""**How does MMseqs2 compute the sequence identity**""). But now I understand that these distance metrics are hardcoded based on which coverage mode is selected. . > ""... and there it allows to switch to picking the cluster representative either by the highest sequence identity or alternatively by alignment score."". I am not sure how that works. the highest sequence identity or alignment score compared to what? Since set cover determines the representatives by the number of edges, is the sequence identity/alignment score for ties?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414#issuecomment-782179653
https://github.com/soedinglab/MMseqs2/issues/415#issuecomment-781922599:76,Availability,down,download,76,I think I fixed the same issue recently. You can either compile from git or download the latest statically compiled binaries from mmseqs.com/latest. The fix will be part of the next release that will be available very soon.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415#issuecomment-781922599
https://github.com/soedinglab/MMseqs2/issues/415#issuecomment-781922599:203,Availability,avail,available,203,I think I fixed the same issue recently. You can either compile from git or download the latest statically compiled binaries from mmseqs.com/latest. The fix will be part of the next release that will be available very soon.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415#issuecomment-781922599
https://github.com/soedinglab/MMseqs2/issues/415#issuecomment-781922599:182,Deployability,release,release,182,I think I fixed the same issue recently. You can either compile from git or download the latest statically compiled binaries from mmseqs.com/latest. The fix will be part of the next release that will be available very soon.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415#issuecomment-781922599
https://github.com/soedinglab/MMseqs2/issues/415#issuecomment-782045539:52,Deployability,release,release,52,Yes!! I saw that. I think its not part of the conda release yet. . Best Regards; Abhijit,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415#issuecomment-782045539
https://github.com/soedinglab/MMseqs2/issues/417#issuecomment-805219866:673,Availability,down,downstream,673,"Hi there, was wondering if this feature is in process of development? If so, any idea on timeline?; From doing a comparison analysis between mmseqs and taxonomic binning tool with frameshift-aware alignment (DIAMOND+MEGAN), we saw significantly improved results with this frameshift feature. Ex. In a metagenomic sample, 9 out of 10 organisms were correctly identified to species level with frameshift-corrected alignment, whereas mmseqs could only identify 6 out of 10 organisms to species level. Another feature that MEGAN provides (that would be very useful in mmseqs) is that it exports frameshift-corrected contigs, which is advantageous in performance improvement of downstream tools (ie. AMR detection).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/417#issuecomment-805219866
https://github.com/soedinglab/MMseqs2/issues/417#issuecomment-805219866:646,Performance,perform,performance,646,"Hi there, was wondering if this feature is in process of development? If so, any idea on timeline?; From doing a comparison analysis between mmseqs and taxonomic binning tool with frameshift-aware alignment (DIAMOND+MEGAN), we saw significantly improved results with this frameshift feature. Ex. In a metagenomic sample, 9 out of 10 organisms were correctly identified to species level with frameshift-corrected alignment, whereas mmseqs could only identify 6 out of 10 organisms to species level. Another feature that MEGAN provides (that would be very useful in mmseqs) is that it exports frameshift-corrected contigs, which is advantageous in performance improvement of downstream tools (ie. AMR detection).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/417#issuecomment-805219866
https://github.com/soedinglab/MMseqs2/issues/417#issuecomment-805219866:699,Safety,detect,detection,699,"Hi there, was wondering if this feature is in process of development? If so, any idea on timeline?; From doing a comparison analysis between mmseqs and taxonomic binning tool with frameshift-aware alignment (DIAMOND+MEGAN), we saw significantly improved results with this frameshift feature. Ex. In a metagenomic sample, 9 out of 10 organisms were correctly identified to species level with frameshift-corrected alignment, whereas mmseqs could only identify 6 out of 10 organisms to species level. Another feature that MEGAN provides (that would be very useful in mmseqs) is that it exports frameshift-corrected contigs, which is advantageous in performance improvement of downstream tools (ie. AMR detection).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/417#issuecomment-805219866
https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786279748:16,Availability,error,error,16,"So i fixed this error (https://github.com/soedinglab/MMseqs2/commit/d9744e3c28dadd2cc8c03c8c5c8179400d8fb55a + https://github.com/soedinglab/MMseqs2/commit/852f04de365a377b0d24b8382b51c281933d8250). I ran the regression test and there are a lot of failures. I guess some are related to https://github.com/soedinglab/MMseqs2/issues/253 as nucleotide 13-mers (or even worse by default 15-mers) require more than 4GB RAM. But other failures are way worse:; The sensitivity changes slightly in many tests, meaning 32-bit MMseqs2 produces different than 64-bit MMseqs2. This is pretty bad and would require to go through every module invocation separately to track where differences first happen and then find the root cause. This would be very time consuming and for an architecture where you can barely search against any realistically sized database.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786279748
https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786279748:248,Availability,failure,failures,248,"So i fixed this error (https://github.com/soedinglab/MMseqs2/commit/d9744e3c28dadd2cc8c03c8c5c8179400d8fb55a + https://github.com/soedinglab/MMseqs2/commit/852f04de365a377b0d24b8382b51c281933d8250). I ran the regression test and there are a lot of failures. I guess some are related to https://github.com/soedinglab/MMseqs2/issues/253 as nucleotide 13-mers (or even worse by default 15-mers) require more than 4GB RAM. But other failures are way worse:; The sensitivity changes slightly in many tests, meaning 32-bit MMseqs2 produces different than 64-bit MMseqs2. This is pretty bad and would require to go through every module invocation separately to track where differences first happen and then find the root cause. This would be very time consuming and for an architecture where you can barely search against any realistically sized database.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786279748
https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786279748:429,Availability,failure,failures,429,"So i fixed this error (https://github.com/soedinglab/MMseqs2/commit/d9744e3c28dadd2cc8c03c8c5c8179400d8fb55a + https://github.com/soedinglab/MMseqs2/commit/852f04de365a377b0d24b8382b51c281933d8250). I ran the regression test and there are a lot of failures. I guess some are related to https://github.com/soedinglab/MMseqs2/issues/253 as nucleotide 13-mers (or even worse by default 15-mers) require more than 4GB RAM. But other failures are way worse:; The sensitivity changes slightly in many tests, meaning 32-bit MMseqs2 produces different than 64-bit MMseqs2. This is pretty bad and would require to go through every module invocation separately to track where differences first happen and then find the root cause. This would be very time consuming and for an architecture where you can barely search against any realistically sized database.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786279748
https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786279748:220,Testability,test,test,220,"So i fixed this error (https://github.com/soedinglab/MMseqs2/commit/d9744e3c28dadd2cc8c03c8c5c8179400d8fb55a + https://github.com/soedinglab/MMseqs2/commit/852f04de365a377b0d24b8382b51c281933d8250). I ran the regression test and there are a lot of failures. I guess some are related to https://github.com/soedinglab/MMseqs2/issues/253 as nucleotide 13-mers (or even worse by default 15-mers) require more than 4GB RAM. But other failures are way worse:; The sensitivity changes slightly in many tests, meaning 32-bit MMseqs2 produces different than 64-bit MMseqs2. This is pretty bad and would require to go through every module invocation separately to track where differences first happen and then find the root cause. This would be very time consuming and for an architecture where you can barely search against any realistically sized database.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786279748
https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786279748:495,Testability,test,tests,495,"So i fixed this error (https://github.com/soedinglab/MMseqs2/commit/d9744e3c28dadd2cc8c03c8c5c8179400d8fb55a + https://github.com/soedinglab/MMseqs2/commit/852f04de365a377b0d24b8382b51c281933d8250). I ran the regression test and there are a lot of failures. I guess some are related to https://github.com/soedinglab/MMseqs2/issues/253 as nucleotide 13-mers (or even worse by default 15-mers) require more than 4GB RAM. But other failures are way worse:; The sensitivity changes slightly in many tests, meaning 32-bit MMseqs2 produces different than 64-bit MMseqs2. This is pretty bad and would require to go through every module invocation separately to track where differences first happen and then find the root cause. This would be very time consuming and for an architecture where you can barely search against any realistically sized database.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786279748
https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786501424:18,Availability,error,error,18,> So i fixed this error. Thanks!. > But other failures are way worse. Okay. Do you want to officially not support 32-bit architectures?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786501424
https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786501424:46,Availability,failure,failures,46,> So i fixed this error. Thanks!. > But other failures are way worse. Okay. Do you want to officially not support 32-bit architectures?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786501424
https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-792862255:87,Deployability,update,updates,87,"@milot-mirdita We have not uploaded MMSeqs2 version 13 to Debian yet. The deadline for updates for the forthcoming stable release of Debian is but a few days away. Should we; 1. Upload MMSeqs2 version 13, but drop 32-bit architectures; or; 2. Upload MMSeqs2 version 13 + some patches cherry picked; or; 3. Keep MMSeqs2 version 12 for Debian ""Bullseye"". Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-792862255
https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-792862255:122,Deployability,release,release,122,"@milot-mirdita We have not uploaded MMSeqs2 version 13 to Debian yet. The deadline for updates for the forthcoming stable release of Debian is but a few days away. Should we; 1. Upload MMSeqs2 version 13, but drop 32-bit architectures; or; 2. Upload MMSeqs2 version 13 + some patches cherry picked; or; 3. Keep MMSeqs2 version 12 for Debian ""Bullseye"". Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-792862255
https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-792862255:276,Deployability,patch,patches,276,"@milot-mirdita We have not uploaded MMSeqs2 version 13 to Debian yet. The deadline for updates for the forthcoming stable release of Debian is but a few days away. Should we; 1. Upload MMSeqs2 version 13, but drop 32-bit architectures; or; 2. Upload MMSeqs2 version 13 + some patches cherry picked; or; 3. Keep MMSeqs2 version 12 for Debian ""Bullseye"". Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-792862255
https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-794112505:163,Availability,down,down,163,Sorry for the delay. I was dealing with some private stuff :/. I would drop 32-bit support. Even with the patch it doesn't pass the integration tests and tracking down why would be very low priority as we require a >4GB address space for everything except small databases anyway.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-794112505
https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-794112505:106,Deployability,patch,patch,106,Sorry for the delay. I was dealing with some private stuff :/. I would drop 32-bit support. Even with the patch it doesn't pass the integration tests and tracking down why would be very low priority as we require a >4GB address space for everything except small databases anyway.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-794112505
https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-794112505:132,Deployability,integrat,integration,132,Sorry for the delay. I was dealing with some private stuff :/. I would drop 32-bit support. Even with the patch it doesn't pass the integration tests and tracking down why would be very low priority as we require a >4GB address space for everything except small databases anyway.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-794112505
https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-794112505:132,Integrability,integrat,integration,132,Sorry for the delay. I was dealing with some private stuff :/. I would drop 32-bit support. Even with the patch it doesn't pass the integration tests and tracking down why would be very low priority as we require a >4GB address space for everything except small databases anyway.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-794112505
https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-794112505:144,Testability,test,tests,144,Sorry for the delay. I was dealing with some private stuff :/. I would drop 32-bit support. Even with the patch it doesn't pass the integration tests and tracking down why would be very low priority as we require a >4GB address space for everything except small databases anyway.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-794112505
https://github.com/soedinglab/MMseqs2/issues/420#issuecomment-789791198:237,Performance,perform,perform,237,If you clustered a clustered database then you increase your initial search radius by `x^2`. E.g. your --min-seq-id is then 0.95^2 = 0.9025. Maybe this might explain this effect? . Nucleotide cluster is internally tested and it seems to perform well compared to CD-HIT. We did not write a paper about it but really should.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/420#issuecomment-789791198
https://github.com/soedinglab/MMseqs2/issues/420#issuecomment-789791198:214,Testability,test,tested,214,If you clustered a clustered database then you increase your initial search radius by `x^2`. E.g. your --min-seq-id is then 0.95^2 = 0.9025. Maybe this might explain this effect? . Nucleotide cluster is internally tested and it seems to perform well compared to CD-HIT. We did not write a paper about it but really should.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/420#issuecomment-789791198
https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591:1394,Availability,Mask,Mask,1394," Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	0.5; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	0; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591
https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591:1412,Availability,Mask,Mask,1412," Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	0.5; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	0; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591
https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591:1614,Availability,Mask,Mask,1614,"0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	0.5; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	0; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	tru",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591
https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591:30980,Availability,mask,mask,30980,"2531703396435525/tmp_taxonomy/8588819485854123580/tmp_hsp1; search /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/orfs_aa /nr /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/tmp_taxonomy/8588819485854123580/first /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/tmp_taxonomy/8588819485854123580/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 0.5 --split-mode 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1 . prefilter /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/orfs_aa /nr /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/tmp_taxonomy/8588819485854123580/tmp_hsp1/1723886274502240713/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 0 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 26 --compressed 0 -v 3 -s 0.5 . Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GD",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591
https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591:30989,Availability,mask,mask-lower-case,30989,"2531703396435525/tmp_taxonomy/8588819485854123580/tmp_hsp1; search /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/orfs_aa /nr /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/tmp_taxonomy/8588819485854123580/first /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/tmp_taxonomy/8588819485854123580/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 0.5 --split-mode 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1 . prefilter /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/orfs_aa /nr /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/tmp_taxonomy/8588819485854123580/tmp_hsp1/1723886274502240713/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 0 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 26 --compressed 0 -v 3 -s 0.5 . Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GD",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591
https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591:31551,Availability,Mask,Masked,31551,"03396435525/tmp_taxonomy/8588819485854123580/tmp_hsp1/1723886274502240713/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 0 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 26 --compressed 0 -v 3 -s 0.5 . Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GDQYNVT	84229; Time for index table init: 4h 18m 41s 415ms; k-mer similarity threshold: 180; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 695256546; Target db start 1 to 58919300; [=================================================================] 695.26M 61h 14m 42s 623ms. 2.307739 k-mers per position; 1254 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 11 sequences passed prefiltering per query sequence; 1 median result list length; 275899073 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 16m 3s 814ms; Time for merging to pref_0_tmp_0_tmp: 0h 26m 19s 3",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591
https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591:32820,Availability,Mask,Masked,32820,ov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 26 --compressed 0 -v 3 -s 0.5 . Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GDQYNVT	84229; Time for index table init: 4h 18m 41s 415ms; k-mer similarity threshold: 180; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 695256546; Target db start 1 to 58919300; [=================================================================] 695.26M 61h 14m 42s 623ms. 2.307739 k-mers per position; 1254 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 11 sequences passed prefiltering per query sequence; 1 median result list length; 275899073 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 16m 3s 814ms; Time for merging to pref_0_tmp_0_tmp: 0h 26m 19s 322ms; Process prefiltering step 2 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 18m 46s 598ms; Index table: Masked residues: 338371908; Index table: fill; [===========================Terminated; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591
https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591:31262,Energy Efficiency,consumption,consumption,31262,"1 -e 1 --max-rejected 5 --max-accept 30 -s 0.5 --split-mode 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1 . prefilter /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/orfs_aa /nr /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/tmp_taxonomy/8588819485854123580/tmp_hsp1/1723886274502240713/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 0 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 26 --compressed 0 -v 3 -s 0.5 . Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GDQYNVT	84229; Time for index table init: 4h 18m 41s 415ms; k-mer similarity threshold: 180; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 695256546; Target db start 1 to 58919300; [=================================================================] 695.26M 61h 14m 42s 623ms. 2.307739 k-mers per position; 1254 DB matches per s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591
https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591:574,Integrability,wrap,wrapped,574,"Cetrainly, I just had to edit some paths due to some data being private information. ```; easy-taxonomy /sample.fastq.gz /nr /result /tmp -s 0.5. MMseqs Version: 	13.45111; ORF filter 	0; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	26; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	0.5; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	0; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591
https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591:31078,Performance,load,load-mode,31078,"2531703396435525/tmp_taxonomy/8588819485854123580/tmp_hsp1; search /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/orfs_aa /nr /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/tmp_taxonomy/8588819485854123580/first /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/tmp_taxonomy/8588819485854123580/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 0.5 --split-mode 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1 . prefilter /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/orfs_aa /nr /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/tmp_taxonomy/8588819485854123580/tmp_hsp1/1723886274502240713/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 0 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 26 --compressed 0 -v 3 -s 0.5 . Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GD",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591
https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795337964:140,Performance,optimiz,optimization,140,"It seems like you accidentally defeated a speed-up mechanism by setting `-s 0.5`. ; By setting `-s` <= `--orf-filter-s` it deactivates this optimization.; In this mode, we first do a very low sensitivity search to see if an extracted ORF can find anything at all in the target database, thus we can reject a lot of fragments that won't be able to contribute at all later. You can try setting `--orf-filter-s 1` instead and leave the default sensitivity.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795337964
https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795339376:41,Testability,test,test,41,"Thank you for the quick response, I will test this soon and post the results when it is done",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795339376
https://github.com/soedinglab/MMseqs2/issues/423#issuecomment-796297988:554,Availability,down,down,554,"I am not sure how to tackle this, if this is indeed a NFS problem there is very little we can do. I would recommend to keep the temp directory (in this case `/pbi/flash/dportik/mmseqs`) on a local disk instead of NFS at least. The largest temporary database that should be created is this `pref_0` database everything else should be quite a bit smaller.; You can very roughly estimate its size with:; ```; numQueries * avgResultListLength * splits * 20 byte; ```; * `numQueries` are the query fragments left after the initial fast rejection stage (>300M down to 55.2M; see line ""Query database size: *55235334* type: Aminoacid"" in the second `prefilter` invocation).; * For `avgResultListLength` see e.g. ""*37* sequences passed prefiltering per query sequence"".; * For `splits` see e.g. ""Starting prefiltering scores calculation (step 1 of *8*)""; * 20 bytes per line in the prefiltering result. Resulting in about `55 * 10^6 * (40 * 8) * 20 byte ~= 325GB` total. Summing up sizes of the `pref_0_tmp_{0..7}` files (260GB) this seems to be about the right order of magnitude. . I agree that we need some lower level flow charts that explain more in detail what happens inside this module. I'll add some more details to the wiki soon.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423#issuecomment-796297988
https://github.com/soedinglab/MMseqs2/issues/423#issuecomment-797818932:75,Availability,error,error,75,"Thanks for your quick response! I wanted to make sure this was an uncommon error before escalating this to our HPC IT. They ended up upgrading the kernel on the node I was using, and the job finished successfully. It looked like some processes still entered D status but there wasn't an NFS timeout like before. This is all a little over my head, but the issue seems to be related to `kernel earlier than kernel-3.10.0-327.42.1.el7`, and the I/O from the analysis. Maybe that can help someone else if they run into issues running `easy-taxonomy` on HPC. I'll go ahead and close this issue now.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423#issuecomment-797818932
https://github.com/soedinglab/MMseqs2/issues/423#issuecomment-797818932:291,Safety,timeout,timeout,291,"Thanks for your quick response! I wanted to make sure this was an uncommon error before escalating this to our HPC IT. They ended up upgrading the kernel on the node I was using, and the job finished successfully. It looked like some processes still entered D status but there wasn't an NFS timeout like before. This is all a little over my head, but the issue seems to be related to `kernel earlier than kernel-3.10.0-327.42.1.el7`, and the I/O from the analysis. Maybe that can help someone else if they run into issues running `easy-taxonomy` on HPC. I'll go ahead and close this issue now.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423#issuecomment-797818932
https://github.com/soedinglab/MMseqs2/issues/423#issuecomment-797846442:21,Safety,avoid,avoid,21,I would still try to avoid placing the temp directory on NFS. Maybe that would help in the future.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423#issuecomment-797846442
https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-800279909:91,Security,access,access,91,I hope it will help you.; ```; (gdb) bt; Python Exception <class 'gdb.MemoryError'> Cannot access memory at address 0x7fff53ed22c8: ; #0 0x00000000004dfe25 in DBReader<unsigned int>::sortIndex(bool) (); Backtrace stopped: Cannot access memory at address 0x7fff53ed22c8; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-800279909
https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-800279909:229,Security,access,access,229,I hope it will help you.; ```; (gdb) bt; Python Exception <class 'gdb.MemoryError'> Cannot access memory at address 0x7fff53ed22c8: ; #0 0x00000000004dfe25 in DBReader<unsigned int>::sortIndex(bool) (); Backtrace stopped: Cannot access memory at address 0x7fff53ed22c8; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-800279909
https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-802035102:292,Availability,down,down,292,"So pretty sure I know what's going on. Doing a tblastx style search against the NT results in over 4B fragments (slightly over 7B). MMseqs2 can search at most against 4B (UINT_MAX) fragments at a time. You could use the `--min-length` parameter to increase the minimum fragment length to cut down on the number of ORFs produced. By default it will extract fragments of at least 30 codons (30*3 nucleotides) long. Getting around this limitation is a longer term goal, that we haven't really decided how to tackle yet.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-802035102
https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-968758784:522,Performance,optimiz,optimized,522,"Sorry for the delay to answer. Thank you for giving some help to avoir the problem. I give you the output with `-DCMAKE_BUILD_TYPE=RelWithDebInfo`; ```; #0 DBReader<unsigned int>::sortIndex (this=this@entry=0x7ffe5bd0a970, isSortedById=isSortedById@entry=false) at /path/to/MMseqs2/src/commons/DBReader.cpp:249; #1 0x00000000004fbc6b in DBReader<unsigned int>::open (this=this@entry=0x7ffe5bd0a970, accessType=accessType@entry=0) at /path/to/MMseqs2/src/commons/MemoryTracker.h:13; #2 0x00000000005c1c81 in indexdb (argc=<optimized out>, argv=<optimized out>, command=...) at /path/to//MMseqs2/src/util/indexdb.cpp:64; #3 0x0000000000471e20 in runCommand (p=0x2394310, argc=argc@entry=36, argv=argv@entry=0x7ffe5bd0af48) at /path/to/MMseqs2/src/commons/Application.cpp:40; #4 0x0000000000460455 in main (argc=38, argv=0x7ffe5bd0af38) at /path/to/MMseqs2/src/commons/Application.cpp:203; ```; As you said it is a issue with the max size, the size is greater than 4294967295 (unsigned int), so it becomes an infinite loop. Do you have see a solution in a long term goal about this problem?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-968758784
https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-968758784:544,Performance,optimiz,optimized,544,"Sorry for the delay to answer. Thank you for giving some help to avoir the problem. I give you the output with `-DCMAKE_BUILD_TYPE=RelWithDebInfo`; ```; #0 DBReader<unsigned int>::sortIndex (this=this@entry=0x7ffe5bd0a970, isSortedById=isSortedById@entry=false) at /path/to/MMseqs2/src/commons/DBReader.cpp:249; #1 0x00000000004fbc6b in DBReader<unsigned int>::open (this=this@entry=0x7ffe5bd0a970, accessType=accessType@entry=0) at /path/to/MMseqs2/src/commons/MemoryTracker.h:13; #2 0x00000000005c1c81 in indexdb (argc=<optimized out>, argv=<optimized out>, command=...) at /path/to//MMseqs2/src/util/indexdb.cpp:64; #3 0x0000000000471e20 in runCommand (p=0x2394310, argc=argc@entry=36, argv=argv@entry=0x7ffe5bd0af48) at /path/to/MMseqs2/src/commons/Application.cpp:40; #4 0x0000000000460455 in main (argc=38, argv=0x7ffe5bd0af38) at /path/to/MMseqs2/src/commons/Application.cpp:203; ```; As you said it is a issue with the max size, the size is greater than 4294967295 (unsigned int), so it becomes an infinite loop. Do you have see a solution in a long term goal about this problem?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-968758784
https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-968758784:399,Security,access,accessType,399,"Sorry for the delay to answer. Thank you for giving some help to avoir the problem. I give you the output with `-DCMAKE_BUILD_TYPE=RelWithDebInfo`; ```; #0 DBReader<unsigned int>::sortIndex (this=this@entry=0x7ffe5bd0a970, isSortedById=isSortedById@entry=false) at /path/to/MMseqs2/src/commons/DBReader.cpp:249; #1 0x00000000004fbc6b in DBReader<unsigned int>::open (this=this@entry=0x7ffe5bd0a970, accessType=accessType@entry=0) at /path/to/MMseqs2/src/commons/MemoryTracker.h:13; #2 0x00000000005c1c81 in indexdb (argc=<optimized out>, argv=<optimized out>, command=...) at /path/to//MMseqs2/src/util/indexdb.cpp:64; #3 0x0000000000471e20 in runCommand (p=0x2394310, argc=argc@entry=36, argv=argv@entry=0x7ffe5bd0af48) at /path/to/MMseqs2/src/commons/Application.cpp:40; #4 0x0000000000460455 in main (argc=38, argv=0x7ffe5bd0af38) at /path/to/MMseqs2/src/commons/Application.cpp:203; ```; As you said it is a issue with the max size, the size is greater than 4294967295 (unsigned int), so it becomes an infinite loop. Do you have see a solution in a long term goal about this problem?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-968758784
https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-968758784:410,Security,access,accessType,410,"Sorry for the delay to answer. Thank you for giving some help to avoir the problem. I give you the output with `-DCMAKE_BUILD_TYPE=RelWithDebInfo`; ```; #0 DBReader<unsigned int>::sortIndex (this=this@entry=0x7ffe5bd0a970, isSortedById=isSortedById@entry=false) at /path/to/MMseqs2/src/commons/DBReader.cpp:249; #1 0x00000000004fbc6b in DBReader<unsigned int>::open (this=this@entry=0x7ffe5bd0a970, accessType=accessType@entry=0) at /path/to/MMseqs2/src/commons/MemoryTracker.h:13; #2 0x00000000005c1c81 in indexdb (argc=<optimized out>, argv=<optimized out>, command=...) at /path/to//MMseqs2/src/util/indexdb.cpp:64; #3 0x0000000000471e20 in runCommand (p=0x2394310, argc=argc@entry=36, argv=argv@entry=0x7ffe5bd0af48) at /path/to/MMseqs2/src/commons/Application.cpp:40; #4 0x0000000000460455 in main (argc=38, argv=0x7ffe5bd0af38) at /path/to/MMseqs2/src/commons/Application.cpp:203; ```; As you said it is a issue with the max size, the size is greater than 4294967295 (unsigned int), so it becomes an infinite loop. Do you have see a solution in a long term goal about this problem?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-968758784
https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-804121974:61,Availability,error,error,61,Could you try to update to the latest release and see if the error still happens? I cannot reproduce it locally.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-804121974
https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-804121974:17,Deployability,update,update,17,Could you try to update to the latest release and see if the error still happens? I cannot reproduce it locally.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-804121974
https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-804121974:38,Deployability,release,release,38,Could you try to update to the latest release and see if the error still happens? I cannot reproduce it locally.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-804121974
https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611:150,Availability,error,error,150,"Hi @milot-mirdita, thanks! I updated the mmseqs to the latest version and set the --split-memory-limit parameter to 250G, this time I didn't get that error, but it threw me another error:. ```. Not enough memory to process at once need to split; [=================================================================tmp/2319642838547372155/clu_tmp/15550839581876067830/linclust.sh: line 26: 344 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: Search died; finished; slurmstepd: error: Detected 1 oom-kill event(s) in step 30119673.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ```; The command I'm using is like this:. `mmseqs easy-linclust ${sample}_R2.fastq.gz $OUT tmp -c 0.95 --split-memory-limit 250G`. Could you give me some help on that?. Thanks so much!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611
https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611:181,Availability,error,error,181,"Hi @milot-mirdita, thanks! I updated the mmseqs to the latest version and set the --split-memory-limit parameter to 250G, this time I didn't get that error, but it threw me another error:. ```. Not enough memory to process at once need to split; [=================================================================tmp/2319642838547372155/clu_tmp/15550839581876067830/linclust.sh: line 26: 344 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: Search died; finished; slurmstepd: error: Detected 1 oom-kill event(s) in step 30119673.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ```; The command I'm using is like this:. `mmseqs easy-linclust ${sample}_R2.fastq.gz $OUT tmp -c 0.95 --split-memory-limit 250G`. Could you give me some help on that?. Thanks so much!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611
https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611:476,Availability,Error,Error,476,"Hi @milot-mirdita, thanks! I updated the mmseqs to the latest version and set the --split-memory-limit parameter to 250G, this time I didn't get that error, but it threw me another error:. ```. Not enough memory to process at once need to split; [=================================================================tmp/2319642838547372155/clu_tmp/15550839581876067830/linclust.sh: line 26: 344 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: Search died; finished; slurmstepd: error: Detected 1 oom-kill event(s) in step 30119673.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ```; The command I'm using is like this:. `mmseqs easy-linclust ${sample}_R2.fastq.gz $OUT tmp -c 0.95 --split-memory-limit 250G`. Could you give me some help on that?. Thanks so much!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611
https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611:501,Availability,Error,Error,501,"Hi @milot-mirdita, thanks! I updated the mmseqs to the latest version and set the --split-memory-limit parameter to 250G, this time I didn't get that error, but it threw me another error:. ```. Not enough memory to process at once need to split; [=================================================================tmp/2319642838547372155/clu_tmp/15550839581876067830/linclust.sh: line 26: 344 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: Search died; finished; slurmstepd: error: Detected 1 oom-kill event(s) in step 30119673.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ```; The command I'm using is like this:. `mmseqs easy-linclust ${sample}_R2.fastq.gz $OUT tmp -c 0.95 --split-memory-limit 250G`. Could you give me some help on that?. Thanks so much!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611
https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611:543,Availability,error,error,543,"Hi @milot-mirdita, thanks! I updated the mmseqs to the latest version and set the --split-memory-limit parameter to 250G, this time I didn't get that error, but it threw me another error:. ```. Not enough memory to process at once need to split; [=================================================================tmp/2319642838547372155/clu_tmp/15550839581876067830/linclust.sh: line 26: 344 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: Search died; finished; slurmstepd: error: Detected 1 oom-kill event(s) in step 30119673.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ```; The command I'm using is like this:. `mmseqs easy-linclust ${sample}_R2.fastq.gz $OUT tmp -c 0.95 --split-memory-limit 250G`. Could you give me some help on that?. Thanks so much!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611
https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611:29,Deployability,update,updated,29,"Hi @milot-mirdita, thanks! I updated the mmseqs to the latest version and set the --split-memory-limit parameter to 250G, this time I didn't get that error, but it threw me another error:. ```. Not enough memory to process at once need to split; [=================================================================tmp/2319642838547372155/clu_tmp/15550839581876067830/linclust.sh: line 26: 344 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: Search died; finished; slurmstepd: error: Detected 1 oom-kill event(s) in step 30119673.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ```; The command I'm using is like this:. `mmseqs easy-linclust ${sample}_R2.fastq.gz $OUT tmp -c 0.95 --split-memory-limit 250G`. Could you give me some help on that?. Thanks so much!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611
https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611:550,Safety,Detect,Detected,550,"Hi @milot-mirdita, thanks! I updated the mmseqs to the latest version and set the --split-memory-limit parameter to 250G, this time I didn't get that error, but it threw me another error:. ```. Not enough memory to process at once need to split; [=================================================================tmp/2319642838547372155/clu_tmp/15550839581876067830/linclust.sh: line 26: 344 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: Search died; finished; slurmstepd: error: Detected 1 oom-kill event(s) in step 30119673.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ```; The command I'm using is like this:. `mmseqs easy-linclust ${sample}_R2.fastq.gz $OUT tmp -c 0.95 --split-memory-limit 250G`. Could you give me some help on that?. Thanks so much!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611
https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805861838:364,Availability,error,errors,364,"I think the memory the cluster allocate to me is 250G since I set the header of the .sbatch file as:. ```; #SBATCH -p gpu; #SBATCH --gres=gpu; #SBATCH --cpus-per-task=8; **#SBATCH --mem=250G**. ```. Before I tried this parameter, my command was like:. `mmseqs easy-cluster $OUT/${sample}_subsampled_R2.fastq.gz $OUT tmp --min-seq-id 1`. and it didn't threw me any errors. (But note that I applied the previous command on a subset of my original data (extracted 1 million reads), but I applied the --split-memory-limit parameter on the entire dataset).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805861838
https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805861838:31,Energy Efficiency,allocate,allocate,31,"I think the memory the cluster allocate to me is 250G since I set the header of the .sbatch file as:. ```; #SBATCH -p gpu; #SBATCH --gres=gpu; #SBATCH --cpus-per-task=8; **#SBATCH --mem=250G**. ```. Before I tried this parameter, my command was like:. `mmseqs easy-cluster $OUT/${sample}_subsampled_R2.fastq.gz $OUT tmp --min-seq-id 1`. and it didn't threw me any errors. (But note that I applied the previous command on a subset of my original data (extracted 1 million reads), but I applied the --split-memory-limit parameter on the entire dataset).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805861838
https://github.com/soedinglab/MMseqs2/issues/428#issuecomment-809598914:30,Deployability,release,release,30,Could you try with the latest release? Your issue was most likely fixed in the meantime.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/428#issuecomment-809598914
https://github.com/soedinglab/MMseqs2/issues/428#issuecomment-809672213:16,Availability,down,downloaded,16,"Indeed - I just downloaded the latest stable version with wget and it works fine! Thanks :); The problem persists in the latest conda version though, so it may be worth updating that one.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/428#issuecomment-809672213
https://github.com/soedinglab/MMseqs2/issues/428#issuecomment-809685553:6,Deployability,release,release,6,I get release 13 when I create a fresh conda env.; What does `conda list` say when you install MMseqs2?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/428#issuecomment-809685553
https://github.com/soedinglab/MMseqs2/issues/428#issuecomment-809685553:87,Deployability,install,install,87,I get release 13 when I create a fresh conda env.; What does `conda list` say when you install MMseqs2?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/428#issuecomment-809685553
https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809692612:13,Deployability,release,release,13,What MMseqs2 release are you using? I remember fixing this bug previously and can't reproduce it in release 13 anymore.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809692612
https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809692612:100,Deployability,release,release,100,What MMseqs2 release are you using? I remember fixing this bug previously and can't reproduce it in release 13 anymore.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809692612
https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809718243:73,Availability,down,downloaded,73,How do you check the release of MMSeqs2 that I am using? I just recently downloaded it a couple weeks ago.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809718243
https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809718243:21,Deployability,release,release,21,How do you check the release of MMSeqs2 that I am using? I just recently downloaded it a couple weeks ago.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809718243
https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809804854:112,Availability,down,downloaded,112,fb39ca1ee88313974f285740faa856ea68509193. this is the version that I get; I am not sure if this is correct or I downloaded something wrong.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809804854
https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809843104:227,Availability,down,downloaded,227,Could you list all steps you did in order you executed them and also copy paste the corresponding output on the terminal here? We fixed this issue with `result2flat` quite a while ago and it shouldn't happen in the version you downloaded.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809843104
https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809861684:350,Availability,error,error,350,"Here you go: ; mmseqs createdb seqdump.fasta (seqdump.fasta is my original database of proteins); mkdir tmp; mmseqs cluster seqdumpDB DB_cluster tmp --min-seq-id 0.7 (after this I get the list of cluster files and they have the file name like DB_cluster.#); mmseqs createseqfiledb seqdumpDB DB_cluster DB_clu_seq. After this last command, I get this error:; MMseqs Version:	fb39ca1ee88313974f285740faa856ea68509193; Min sequences	1; Max sequences	2147483647; HH format 	false; Preload mode 	0; Threads 	8; Compressed 	0; Verbosity 	3. Input database ""seqdumpDB"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid. Hopefully this helps; I appreciate the help!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809861684
https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-811947501:83,Availability,down,downstream,83,"I am not 100% sure what you want, from here there are multiple ways you can go for downstream processing:. * You can use `unpackdb` to split a database into separate files; * You can use `createsubdb` to get only a smaller subset based on a list of database keys ; * You can use `view` to extract a single entry. For `createsubdb` and `view` you need to give the internal database identifiers (keys). You can get those from the `seqdumpDB.lookup` file. You can grep for your FASTA accession in the second column and take the number from the first column for `view`'s `--id-list` parameter or `createsubdbs` first input file. `unpackdb` will name the files based on this internal identifier, if no `.lookup` file is present. You can copy/symlink the `.lookup` file from the `seqdumpDB` to the `DB_clu_seq` to get better names, as these share the same database keys:; ```; ln -s seqdumpDB.lookup DB_clu_seq.lookup; mmseqs unpackdb DB_clu_seq unpackdir; ````",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-811947501
https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-811947501:481,Security,access,accession,481,"I am not 100% sure what you want, from here there are multiple ways you can go for downstream processing:. * You can use `unpackdb` to split a database into separate files; * You can use `createsubdb` to get only a smaller subset based on a list of database keys ; * You can use `view` to extract a single entry. For `createsubdb` and `view` you need to give the internal database identifiers (keys). You can get those from the `seqdumpDB.lookup` file. You can grep for your FASTA accession in the second column and take the number from the first column for `view`'s `--id-list` parameter or `createsubdbs` first input file. `unpackdb` will name the files based on this internal identifier, if no `.lookup` file is present. You can copy/symlink the `.lookup` file from the `seqdumpDB` to the `DB_clu_seq` to get better names, as these share the same database keys:; ```; ln -s seqdumpDB.lookup DB_clu_seq.lookup; mmseqs unpackdb DB_clu_seq unpackdir; ````",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-811947501
https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-811982749:109,Security,access,accessions,109,"I improved `createsubdb` and `view` in 14a3dce2ae6319caf671e81d91a41c1292401285 to also directly parse FASTA accessions if a `.lookup` file is present, if the `--id-mode 1` parameter is given.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-811982749
https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-1865071906:2,Availability,down,downloaded,2,"I downloaded all NCBI phages and was able to trigger this error with them. MMseqs Version: 15.6f452. mmseqs search --search-type 3 -c 0.5 -v 3 --cov-mode 2 --alignment-mode 3 --threads 8 --headers-split-mode 1 --sort-results 1 --max-seq-len 10000000 --db-load-mode 2 /home/ubuntu/NCBI-phages-20231219.fa /home/ubuntu/allDB /home/ubuntu/mmseqs-results.tab /tmp/tmpbvzkw379. Input database ""/home/ubuntu/NCBI-phages-20231219.fa"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-1865071906
https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-1865071906:58,Availability,error,error,58,"I downloaded all NCBI phages and was able to trigger this error with them. MMseqs Version: 15.6f452. mmseqs search --search-type 3 -c 0.5 -v 3 --cov-mode 2 --alignment-mode 3 --threads 8 --headers-split-mode 1 --sort-results 1 --max-seq-len 10000000 --db-load-mode 2 /home/ubuntu/NCBI-phages-20231219.fa /home/ubuntu/allDB /home/ubuntu/mmseqs-results.tab /tmp/tmpbvzkw379. Input database ""/home/ubuntu/NCBI-phages-20231219.fa"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-1865071906
https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-1865071906:255,Performance,load,load-mode,255,"I downloaded all NCBI phages and was able to trigger this error with them. MMseqs Version: 15.6f452. mmseqs search --search-type 3 -c 0.5 -v 3 --cov-mode 2 --alignment-mode 3 --threads 8 --headers-split-mode 1 --sort-results 1 --max-seq-len 10000000 --db-load-mode 2 /home/ubuntu/NCBI-phages-20231219.fa /home/ubuntu/allDB /home/ubuntu/mmseqs-results.tab /tmp/tmpbvzkw379. Input database ""/home/ubuntu/NCBI-phages-20231219.fa"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-1865071906
https://github.com/soedinglab/MMseqs2/issues/431#issuecomment-811916088:185,Energy Efficiency,efficient,efficient,185,"How much RAM does your server have? It seems like it ran out of RAM during construction of the database. You can try creating a NR with the `databases` command, it uses a slightly more efficient procedure than `createtaxdb` to create this mapping.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/431#issuecomment-811916088
https://github.com/soedinglab/MMseqs2/issues/431#issuecomment-812985934:100,Availability,down,downloading,100,"Hi,; Thanks for your quick response. Anyhow the server had 35GB free memory.; Meanwhile we will try downloading the database using the database command. Thanks!. On Thu, 1 Apr, 2021, 7:10 pm Milot Mirdita, ***@***.***>; wrote:. > How much RAM does your server have? It seems like it ran out of RAM during; > construction of the database.; >; > You can try creating a NR with the databases command, it uses a slightly; > more efficient procedure than createtaxdb to create this mapping.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/soedinglab/MMseqs2/issues/431#issuecomment-811916088>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ATPTCL4PAS3IIYFWQZJIEHLTGRZV7ANCNFSM42GMDBGQ>; > .; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/431#issuecomment-812985934
https://github.com/soedinglab/MMseqs2/issues/431#issuecomment-812985934:425,Energy Efficiency,efficient,efficient,425,"Hi,; Thanks for your quick response. Anyhow the server had 35GB free memory.; Meanwhile we will try downloading the database using the database command. Thanks!. On Thu, 1 Apr, 2021, 7:10 pm Milot Mirdita, ***@***.***>; wrote:. > How much RAM does your server have? It seems like it ran out of RAM during; > construction of the database.; >; > You can try creating a NR with the databases command, it uses a slightly; > more efficient procedure than createtaxdb to create this mapping.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/soedinglab/MMseqs2/issues/431#issuecomment-811916088>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ATPTCL4PAS3IIYFWQZJIEHLTGRZV7ANCNFSM42GMDBGQ>; > .; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/431#issuecomment-812985934
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:8,Availability,fault,fault,8,"The seg-fault errors that I'm getting with `mmseqs taxonomy` don't appear to be due to the 2 extra split files. Even when tracking all `*.idx` files so they don't accidentally get deleted, I get the following error:. ```; taxonomy -e 1e-5 --max-seqs 200 --num-iterations 2 --start-sens 1 --sens-steps 3 -s 6 --lca-ranks superkingdom,kingdom,phylum,class,order,family,genus,species --threads 8 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/seqs_tax_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP. MMseqs Version: 	13.45111; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	superkingdom,kingdom,phylum,class,order,family,genus,species; Column with taxonomic lineage 	0; Compressed 	0; Threads 	8; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1e-05; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matchin",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:14,Availability,error,errors,14,"The seg-fault errors that I'm getting with `mmseqs taxonomy` don't appear to be due to the 2 extra split files. Even when tracking all `*.idx` files so they don't accidentally get deleted, I get the following error:. ```; taxonomy -e 1e-5 --max-seqs 200 --num-iterations 2 --start-sens 1 --sens-steps 3 -s 6 --lca-ranks superkingdom,kingdom,phylum,class,order,family,genus,species --threads 8 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/seqs_tax_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP. MMseqs Version: 	13.45111; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	superkingdom,kingdom,phylum,class,order,family,genus,species; Column with taxonomic lineage 	0; Compressed 	0; Threads 	8; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1e-05; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matchin",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:209,Availability,error,error,209,"The seg-fault errors that I'm getting with `mmseqs taxonomy` don't appear to be due to the 2 extra split files. Even when tracking all `*.idx` files so they don't accidentally get deleted, I get the following error:. ```; taxonomy -e 1e-5 --max-seqs 200 --num-iterations 2 --start-sens 1 --sens-steps 3 -s 6 --lca-ranks superkingdom,kingdom,phylum,class,order,family,genus,species --threads 8 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/seqs_tax_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP. MMseqs Version: 	13.45111; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	superkingdom,kingdom,phylum,class,order,family,genus,species; Column with taxonomic lineage 	0; Compressed 	0; Threads 	8; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1e-05; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matchin",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:2007,Availability,Mask,Mask,2007," 	0; Threads 	8; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1e-05; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitiv",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:2025,Availability,Mask,Mask,2025," 	0; Threads 	8; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1e-05; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitiv",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:2223,Availability,Mask,Mask,2223,"se; E-value threshold 	1e-05; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitivity 	1; Search steps 	3; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:4542,Availability,mask,mask,4542,"/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/first /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1 --alignment-mode 1 -e 1e-05 --max-rejected 5 --max-accept 30 --threads 8 -s 6 --max-seqs 200 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --num-iterations 2 --start-sens 1 --sens-steps 3 --lca-search 1. prefilter /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target split mode. Searching through 16 splits; Estimated memory consumption: 8G; Target database size: 41195879 type: Aminoacid; Process prefiltering step 1 of 16. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 16); Query db start 1 to 1075; Target db start 1 to 2572505; [=================================================================] 1.08K 2s 989ms. 390.206187 k-mers per position; 423278 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 25 sequences passed prefiltering per query sequence; 26 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:4551,Availability,mask,mask-lower-case,4551,"/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/first /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1 --alignment-mode 1 -e 1e-05 --max-rejected 5 --max-accept 30 --threads 8 -s 6 --max-seqs 200 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --num-iterations 2 --start-sens 1 --sens-steps 3 --lca-search 1. prefilter /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target split mode. Searching through 16 splits; Estimated memory consumption: 8G; Target database size: 41195879 type: Aminoacid; Process prefiltering step 1 of 16. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 16); Query db start 1 to 1075; Target db start 1 to 2572505; [=================================================================] 1.08K 2s 989ms. 390.206187 k-mers per position; 423278 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 25 sequences passed prefiltering per query sequence; 26 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:17188,Availability,mask,mask-profile,17188,"pressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=================================================================] 1.08K 0s 508ms; Time for merging to aln_0: 0h 0m 0s 8ms; 19048 alignments calculated; 15817 sequence pairs passed the thresholds (0.830376 of overall calculated); 14.713489 hits per query sequence; Time for processing: 0h 0m 54s 194ms; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [========================================Segmentation fault; Error: Create profile died; Error: First search died; ```. Note that sometimes when I re-run the command, I instead get the error:. ```; Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=======================================================]; free(): invalid next size (normal); Aborted; Error: Create profile died; Error: First search died; ```. System memory should not be the cause; I've got ~800 Gb free. . M",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:17664,Availability,fault,fault,17664,"lated); 14.713489 hits per query sequence; Time for processing: 0h 0m 54s 194ms; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [========================================Segmentation fault; Error: Create profile died; Error: First search died; ```. Note that sometimes when I re-run the command, I instead get the error:. ```; Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=======================================================]; free(): invalid next size (normal); Aborted; Error: Create profile died; Error: First search died; ```. System memory should not be the cause; I've got ~800 Gb free. . Maybe I'm missing a ""hidden"" input file (ie., one of the files associated with the main input files, which are generally no mentioned in any of the docs). The input files that are present:. * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.dbtype; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:17671,Availability,Error,Error,17671,"lated); 14.713489 hits per query sequence; Time for processing: 0h 0m 54s 194ms; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [========================================Segmentation fault; Error: Create profile died; Error: First search died; ```. Note that sometimes when I re-run the command, I instead get the error:. ```; Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=======================================================]; free(): invalid next size (normal); Aborted; Error: Create profile died; Error: First search died; ```. System memory should not be the cause; I've got ~800 Gb free. . Maybe I'm missing a ""hidden"" input file (ie., one of the files associated with the main input files, which are generally no mentioned in any of the docs). The input files that are present:. * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.dbtype; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:17699,Availability,Error,Error,17699,"lated); 14.713489 hits per query sequence; Time for processing: 0h 0m 54s 194ms; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [========================================Segmentation fault; Error: Create profile died; Error: First search died; ```. Note that sometimes when I re-run the command, I instead get the error:. ```; Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=======================================================]; free(): invalid next size (normal); Aborted; Error: Create profile died; Error: First search died; ```. System memory should not be the cause; I've got ~800 Gb free. . Maybe I'm missing a ""hidden"" input file (ie., one of the files associated with the main input files, which are generally no mentioned in any of the docs). The input files that are present:. * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.dbtype; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:17795,Availability,error,error,17795,"/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [========================================Segmentation fault; Error: Create profile died; Error: First search died; ```. Note that sometimes when I re-run the command, I instead get the error:. ```; Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=======================================================]; free(): invalid next size (normal); Aborted; Error: Create profile died; Error: First search died; ```. System memory should not be the cause; I've got ~800 Gb free. . Maybe I'm missing a ""hidden"" input file (ie., one of the files associated with the main input files, which are generally no mentioned in any of the docs). The input files that are present:. * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.dbtype; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.index; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db_h; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:18071,Availability,Error,Error,18071,"_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [========================================Segmentation fault; Error: Create profile died; Error: First search died; ```. Note that sometimes when I re-run the command, I instead get the error:. ```; Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=======================================================]; free(): invalid next size (normal); Aborted; Error: Create profile died; Error: First search died; ```. System memory should not be the cause; I've got ~800 Gb free. . Maybe I'm missing a ""hidden"" input file (ie., one of the files associated with the main input files, which are generally no mentioned in any of the docs). The input files that are present:. * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.dbtype; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.index; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db_h; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db_h.dbtype; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db_h.index; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db; * /ebio/abt3_scratch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:18099,Availability,Error,Error,18099,"_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [========================================Segmentation fault; Error: Create profile died; Error: First search died; ```. Note that sometimes when I re-run the command, I instead get the error:. ```; Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=======================================================]; free(): invalid next size (normal); Aborted; Error: Create profile died; Error: First search died; ```. System memory should not be the cause; I've got ~800 Gb free. . Maybe I'm missing a ""hidden"" input file (ie., one of the files associated with the main input files, which are generally no mentioned in any of the docs). The input files that are present:. * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.dbtype; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.index; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db_h; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db_h.dbtype; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db_h.index; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db; * /ebio/abt3_scratch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:4879,Energy Efficiency,consumption,consumption,4879,"ens-steps 3 --lca-search 1. prefilter /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target split mode. Searching through 16 splits; Estimated memory consumption: 8G; Target database size: 41195879 type: Aminoacid; Process prefiltering step 1 of 16. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 16); Query db start 1 to 1075; Target db start 1 to 2572505; [=================================================================] 1.08K 2s 989ms. 390.206187 k-mers per position; 423278 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 25 sequences passed prefiltering per query sequence; 26 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 0m 0s 8ms; Time for merging to pref_0_tmp_0_tmp: 0h 0m 0s 10ms; Process prefiltering step 2 of 16. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 2 of 16); Query db start 1 to 1075; Target db start 2572506 to 5147039; [=================================================================] 1.08K 3s 152ms. 390.206187 k-mers per position; 423330 DB matches per sequence; 0 overflow",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:1206,Integrability,wrap,wrapped,1206,"e following error:. ```; taxonomy -e 1e-5 --max-seqs 200 --num-iterations 2 --start-sens 1 --sens-steps 3 -s 6 --lca-ranks superkingdom,kingdom,phylum,class,order,family,genus,species --threads 8 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/seqs_tax_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP. MMseqs Version: 	13.45111; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	superkingdom,kingdom,phylum,class,order,family,genus,species; Column with taxonomic lineage 	0; Compressed 	0; Threads 	8; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1e-05; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:15803,Integrability,wrap,wrapped-scoring,15803,"Time for merging to pref_0_tmp_15_tmp: 0h 0m 0s 20ms; Merging 16 target splits to pref_0; Preparing offsets for merging: 0h 0m 0s 53ms; [=================================================================] 1.08K 0s 37ms; Time for merging to pref_0: 0h 0m 0s 23ms; Time for merging target splits: 0h 0m 0s 174ms; Time for merging to pref_0_tmp: 0h 0m 0s 45ms; Time for processing: 0h 6m 46s 299ms; lcaalign /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/pref_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=================================================================] 1.08K 0s 508ms; Time for merging to aln_0: 0h 0m 0s 8ms; 19048 alignments calculated; 15817 sequence pairs passed the thresholds (0.830376 of overall calculated); 14.713489 hits per query sequence; Time for processing: 0h 0m 54s 194ms; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:16148,Modifiability,extend,extend,16148,"ms; Time for merging target splits: 0h 0m 0s 174ms; Time for merging to pref_0_tmp: 0h 0m 0s 45ms; Time for processing: 0h 6m 46s 299ms; lcaalign /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/pref_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=================================================================] 1.08K 0s 508ms; Time for merging to aln_0: 0h 0m 0s 8ms; 19048 alignments calculated; 15817 sequence pairs passed the thresholds (0.830376 of overall calculated); 14.713489 hits per query sequence; Time for processing: 0h 0m 54s 194ms; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:17399,Modifiability,extend,extend,17399,"================================================================] 1.08K 0s 508ms; Time for merging to aln_0: 0h 0m 0s 8ms; 19048 alignments calculated; 15817 sequence pairs passed the thresholds (0.830376 of overall calculated); 14.713489 hits per query sequence; Time for processing: 0h 0m 54s 194ms; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [========================================Segmentation fault; Error: Create profile died; Error: First search died; ```. Note that sometimes when I re-run the command, I instead get the error:. ```; Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=======================================================]; free(): invalid next size (normal); Aborted; Error: Create profile died; Error: First search died; ```. System memory should not be the cause; I've got ~800 Gb free. . Maybe I'm missing a ""hidden"" input file (ie., one of the files associated with the main input files, which are generally no mentioned in any of the docs). The input files that are present:. * /ebio/abt3_scr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:4640,Performance,load,load-mode,4640,"/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/first /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1 --alignment-mode 1 -e 1e-05 --max-rejected 5 --max-accept 30 --threads 8 -s 6 --max-seqs 200 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --num-iterations 2 --start-sens 1 --sens-steps 3 --lca-search 1. prefilter /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target split mode. Searching through 16 splits; Estimated memory consumption: 8G; Target database size: 41195879 type: Aminoacid; Process prefiltering step 1 of 16. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 16); Query db start 1 to 1075; Target db start 1 to 2572505; [=================================================================] 1.08K 2s 989ms. 390.206187 k-mers per position; 423278 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 25 sequences passed prefiltering per query sequence; 26 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:16005,Performance,load,load-mode,16005,"Time for merging to pref_0_tmp_15_tmp: 0h 0m 0s 20ms; Merging 16 target splits to pref_0; Preparing offsets for merging: 0h 0m 0s 53ms; [=================================================================] 1.08K 0s 37ms; Time for merging to pref_0: 0h 0m 0s 23ms; Time for merging target splits: 0h 0m 0s 174ms; Time for merging to pref_0_tmp: 0h 0m 0s 45ms; Time for processing: 0h 6m 46s 299ms; lcaalign /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/pref_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=================================================================] 1.08K 0s 508ms; Time for merging to aln_0: 0h 0m 0s 8ms; 19048 alignments calculated; 15817 sequence pairs passed the thresholds (0.830376 of overall calculated); 14.713489 hits per query sequence; Time for processing: 0h 0m 54s 194ms; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:17357,Performance,load,load-mode,17357,"================================================================] 1.08K 0s 508ms; Time for merging to aln_0: 0h 0m 0s 8ms; 19048 alignments calculated; 15817 sequence pairs passed the thresholds (0.830376 of overall calculated); 14.713489 hits per query sequence; Time for processing: 0h 0m 54s 194ms; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [========================================Segmentation fault; Error: Create profile died; Error: First search died; ```. Note that sometimes when I re-run the command, I instead get the error:. ```; Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=======================================================]; free(): invalid next size (normal); Aborted; Error: Create profile died; Error: First search died; ```. System memory should not be the cause; I've got ~800 Gb free. . Maybe I'm missing a ""hidden"" input file (ie., one of the files associated with the main input files, which are generally no mentioned in any of the docs). The input files that are present:. * /ebio/abt3_scr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:18062,Safety,Abort,Aborted,18062,"_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [========================================Segmentation fault; Error: Create profile died; Error: First search died; ```. Note that sometimes when I re-run the command, I instead get the error:. ```; Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=======================================================]; free(): invalid next size (normal); Aborted; Error: Create profile died; Error: First search died; ```. System memory should not be the cause; I've got ~800 Gb free. . Maybe I'm missing a ""hidden"" input file (ie., one of the files associated with the main input files, which are generally no mentioned in any of the docs). The input files that are present:. * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.dbtype; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.index; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db_h; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db_h.dbtype; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db_h.index; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db; * /ebio/abt3_scratch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814300855:167,Availability,error,error,167,"I introduced the two additional splits because of https://github.com/soedinglab/MMseqs2/issues/338. Though that wasn't very effective to reduce peak memory use. . The error looks like a memory corruption though. I am not really sure how to reproduce the issue locally. ; Do you still have the tmp files? Could you try rerunning only the last step without the index:. ```; mmseqs result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; ```. The only change was to remove the `.idx` suffix after `mmseqs_tax.db`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814300855
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814300855:861,Availability,mask,mask-profile,861,"I introduced the two additional splits because of https://github.com/soedinglab/MMseqs2/issues/338. Though that wasn't very effective to reduce peak memory use. . The error looks like a memory corruption though. I am not really sure how to reproduce the issue locally. ; Do you still have the tmp files? Could you try rerunning only the last step without the index:. ```; mmseqs result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; ```. The only change was to remove the `.idx` suffix after `mmseqs_tax.db`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814300855
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814300855:137,Energy Efficiency,reduce,reduce,137,"I introduced the two additional splits because of https://github.com/soedinglab/MMseqs2/issues/338. Though that wasn't very effective to reduce peak memory use. . The error looks like a memory corruption though. I am not really sure how to reproduce the issue locally. ; Do you still have the tmp files? Could you try rerunning only the last step without the index:. ```; mmseqs result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; ```. The only change was to remove the `.idx` suffix after `mmseqs_tax.db`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814300855
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814300855:1072,Modifiability,extend,extend,1072,"I introduced the two additional splits because of https://github.com/soedinglab/MMseqs2/issues/338. Though that wasn't very effective to reduce peak memory use. . The error looks like a memory corruption though. I am not really sure how to reproduce the issue locally. ; Do you still have the tmp files? Could you try rerunning only the last step without the index:. ```; mmseqs result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; ```. The only change was to remove the `.idx` suffix after `mmseqs_tax.db`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814300855
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814300855:1030,Performance,load,load-mode,1030,"I introduced the two additional splits because of https://github.com/soedinglab/MMseqs2/issues/338. Though that wasn't very effective to reduce peak memory use. . The error looks like a memory corruption though. I am not really sure how to reproduce the issue locally. ; Do you still have the tmp files? Could you try rerunning only the last step without the index:. ```; mmseqs result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; ```. The only change was to remove the `.idx` suffix after `mmseqs_tax.db`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814300855
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814313609:969,Availability,mask,mask-profile,969,"The next step would be to try a MMseqs2 build instrumented with ASan. Sadly ASan doesn't support static builds so you would have to compile MMseqs2 yourself:. ```; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2;; mkdir build; cd build; cmake -DHAVE_SANITIZER=1 -DCMAKE_BUILD_TYPE=ASan ..; make -j $(nproc --all); ```. The new binary in `src/mmseqs` would then hopefully be able to tell what is going wrong:. ```; Path-To-Where-You-Git-Clone/MMseqs2/build/src/mmseqs result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; ````",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814313609
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814313609:1180,Modifiability,extend,extend,1180,"The next step would be to try a MMseqs2 build instrumented with ASan. Sadly ASan doesn't support static builds so you would have to compile MMseqs2 yourself:. ```; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2;; mkdir build; cd build; cmake -DHAVE_SANITIZER=1 -DCMAKE_BUILD_TYPE=ASan ..; make -j $(nproc --all); ```. The new binary in `src/mmseqs` would then hopefully be able to tell what is going wrong:. ```; Path-To-Where-You-Git-Clone/MMseqs2/build/src/mmseqs result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; ````",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814313609
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814313609:1138,Performance,load,load-mode,1138,"The next step would be to try a MMseqs2 build instrumented with ASan. Sadly ASan doesn't support static builds so you would have to compile MMseqs2 yourself:. ```; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2;; mkdir build; cd build; cmake -DHAVE_SANITIZER=1 -DCMAKE_BUILD_TYPE=ASan ..; make -j $(nproc --all); ```. The new binary in `src/mmseqs` would then hopefully be able to tell what is going wrong:. ```; Path-To-Where-You-Git-Clone/MMseqs2/build/src/mmseqs result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; ````",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814313609
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:565,Availability,mask,mask-profile,565,"Here's the output from the ASan run:. ```; ./build/src/mmseqs result2profile \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 \; > --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 \; > --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 \; > --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. MMseqs Version: 	a6cab565c98376623e82c3a04d186219d4c2f10c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	1e-05; Mask profile 	1; Profile E-value threshold 	1e-05; Compositional bias 	1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:1316,Availability,mask,mask-profile,1316,"0225373504351/tmp_hsp1/9650299475897910544/aln_0 \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 \; > --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 \; > --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 \; > --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. MMseqs Version: 	a6cab565c98376623e82c3a04d186219d4c2f10c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	1e-05; Mask profile 	1; Profile E-value threshold 	1e-05; Compositional bias 	1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Pseudo count a 	0; Pseudo count b 	1.5; Preload mode 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	8; Compressed 	0; Verbosity 	3. Query database size: 1151 type: Aminoacid; Target database size: 41195879 type: Aminoacid; =================================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:1722,Availability,Mask,Mask,1722,"extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. MMseqs Version: 	a6cab565c98376623e82c3a04d186219d4c2f10c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	1e-05; Mask profile 	1; Profile E-value threshold 	1e-05; Compositional bias 	1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Pseudo count a 	0; Pseudo count b 	1.5; Preload mode 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	8; Compressed 	0; Verbosity 	3. Query database size: 1151 type: Aminoacid; Target database size: 41195879 type: Aminoacid; ================================================================= ] 46.43% 535 eta 0s; ==71239==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61a0000233e0 at pc 0x55c61d242cd7 bp 0x7fc0f27db1b0 sp 0x7fc0f27db1a0; WRITE of size 1 at 0x61a0000233e0 thread T3; ==71239==AddressSanitizer: while reporting a bug found another one. Ignoring.08K eta 0s; #0 0x55c61d242cd6 in MultipleAlignment::updateGapsInSequenceSet(char**, unsigned long, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:2354,Availability,ERROR,ERROR,2354,"--pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. MMseqs Version: 	a6cab565c98376623e82c3a04d186219d4c2f10c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	1e-05; Mask profile 	1; Profile E-value threshold 	1e-05; Compositional bias 	1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Pseudo count a 	0; Pseudo count b 	1.5; Preload mode 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	8; Compressed 	0; Verbosity 	3. Query database size: 1151 type: Aminoacid; Target database size: 41195879 type: Aminoacid; ================================================================= ] 46.43% 535 eta 0s; ==71239==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61a0000233e0 at pc 0x55c61d242cd7 bp 0x7fc0f27db1b0 sp 0x7fc0f27db1a0; WRITE of size 1 at 0x61a0000233e0 thread T3; ==71239==AddressSanitizer: while reporting a bug found another one. Ignoring.08K eta 0s; #0 0x55c61d242cd6 in MultipleAlignment::updateGapsInSequenceSet(char**, unsigned long, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > > const&, std::vector<Matcher::result_t, std::allocator<Matcher::result_t> > const&, unsigned int*, bool) /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/alignment/MultipleAlignment.cpp:168; #1 0x55c61d2432cc in MultipleAlignment::computeMSA(Sequence*, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > > const&, std::vector<Matcher::result_t, std::allocator<Matcher::result_t> > const&, bool) /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/sr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:2658,Deployability,update,updateGapsInSequenceSet,2658,"letions 	false; Filter MSA 	1; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Pseudo count a 	0; Pseudo count b 	1.5; Preload mode 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	8; Compressed 	0; Verbosity 	3. Query database size: 1151 type: Aminoacid; Target database size: 41195879 type: Aminoacid; ================================================================= ] 46.43% 535 eta 0s; ==71239==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61a0000233e0 at pc 0x55c61d242cd7 bp 0x7fc0f27db1b0 sp 0x7fc0f27db1a0; WRITE of size 1 at 0x61a0000233e0 thread T3; ==71239==AddressSanitizer: while reporting a bug found another one. Ignoring.08K eta 0s; #0 0x55c61d242cd6 in MultipleAlignment::updateGapsInSequenceSet(char**, unsigned long, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > > const&, std::vector<Matcher::result_t, std::allocator<Matcher::result_t> > const&, unsigned int*, bool) /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/alignment/MultipleAlignment.cpp:168; #1 0x55c61d2432cc in MultipleAlignment::computeMSA(Sequence*, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > > const&, std::vector<Matcher::result_t, std::allocator<Matcher::result_t> > const&, bool) /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/alignment/MultipleAlignment.cpp:208; #2 0x55c61d180e7b in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/util/result2profile.cpp:203; #3 0x7fc0f70d796d (/usr/lib/x86_64-linux-gnu/libgomp.so.1+0x1696d); #4 0x7fc0f6c916da in start_thread (/lib/x86_64-linux-gnu/lib",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:5846,Deployability,update,updateGapsInSequenceSet,5846,"4-linux-gnu/libasan.so.4+0x37d2f); #1 0x7fc0f70d7f5f (/usr/lib/x86_64-linux-gnu/libgomp.so.1+0x16f5f); #2 0x7fc0f70ceed9 in GOMP_parallel (/usr/lib/x86_64-linux-gnu/libgomp.so.1+0xded9); #3 0x7ffc996a2d2f (<unknown module>). SUMMARY: AddressSanitizer: heap-buffer-overflow /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/alignment/MultipleAlignment.cpp:168 in MultipleAlignment::updateGapsInSequenceSet(char**, unsigned long, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > > const&, std::vector<Matcher::result_t, std::allocator<Matcher::result_t> > const&, unsigned int*, bool); Shadow bytes around the buggy address:; 0x0c347fffc620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; =>0x0c347fffc670: 00 00 00 00 00 00 00 00 00 00 00 00[fa]fa fa fa; 0x0c347fffc680: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c347fffc690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc6a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc6b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc6c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; ==71239==ABORTING; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:4034,Energy Efficiency,allocate,allocated,4034,"eqs2/src/alignment/MultipleAlignment.cpp:168; #1 0x55c61d2432cc in MultipleAlignment::computeMSA(Sequence*, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > > const&, std::vector<Matcher::result_t, std::allocator<Matcher::result_t> > const&, bool) /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/alignment/MultipleAlignment.cpp:208; #2 0x55c61d180e7b in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/util/result2profile.cpp:203; #3 0x7fc0f70d796d (/usr/lib/x86_64-linux-gnu/libgomp.so.1+0x1696d); #4 0x7fc0f6c916da in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x76da); #5 0x7fc0f69ba71e in __clone (/lib/x86_64-linux-gnu/libc.so.6+0x12171e). 0x61a0000233e0 is located 0 bytes to the right of 1376-byte region [0x61a000022e80,0x61a0000233e0); allocated by thread T3 here:; #0 0x7fc0f812b790 in posix_memalign (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xdf790); #1 0x55c61cd2e5c3 in mem_align(unsigned long, unsigned long) /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/lib/simd/simd.h:463; #2 0x55c61cee071f in malloc_simd_int(unsigned long) /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/lib/simd/simd.h:483; #3 0x55c61d2410c9 in MultipleAlignment::initX(int) /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/alignment/MultipleAlignment.cpp:19; #4 0x55c61d243175 in MultipleAlignment::computeMSA(Sequence*, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > > const&, std::vector<Matcher::result_t, std::allocator<Matcher::result_t> > const&, bool) /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/alignment/Mul",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:786,Modifiability,extend,extend,786,"Here's the output from the ASan run:. ```; ./build/src/mmseqs result2profile \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 \; > --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 \; > --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 \; > --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. MMseqs Version: 	a6cab565c98376623e82c3a04d186219d4c2f10c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	1e-05; Mask profile 	1; Profile E-value threshold 	1e-05; Compositional bias 	1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:1527,Modifiability,extend,extend,1527,"otide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 \; > --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 \; > --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. MMseqs Version: 	a6cab565c98376623e82c3a04d186219d4c2f10c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	1e-05; Mask profile 	1; Profile E-value threshold 	1e-05; Compositional bias 	1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Pseudo count a 	0; Pseudo count b 	1.5; Preload mode 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	8; Compressed 	0; Verbosity 	3. Query database size: 1151 type: Aminoacid; Target database size: 41195879 type: Aminoacid; ================================================================= ] 46.43% 535 eta 0s; ==71239==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61a0000233e0 at pc 0x55c61d242cd7 bp 0x7fc0f27db1b0 sp 0x7fc0f27db1a0; WRITE of size 1 at 0x61a0000233e0 thread T3;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:739,Performance,load,load-mode,739,"Here's the output from the ASan run:. ```; ./build/src/mmseqs result2profile \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 \; > --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 \; > --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 \; > --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. MMseqs Version: 	a6cab565c98376623e82c3a04d186219d4c2f10c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	1e-05; Mask profile 	1; Profile E-value threshold 	1e-05; Compositional bias 	1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:1485,Performance,load,load-mode,1485,"otide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 \; > --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 \; > --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. MMseqs Version: 	a6cab565c98376623e82c3a04d186219d4c2f10c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	1e-05; Mask profile 	1; Profile E-value threshold 	1e-05; Compositional bias 	1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Pseudo count a 	0; Pseudo count b 	1.5; Preload mode 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	8; Compressed 	0; Verbosity 	3. Query database size: 1151 type: Aminoacid; Target database size: 41195879 type: Aminoacid; ================================================================= ] 46.43% 535 eta 0s; ==71239==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61a0000233e0 at pc 0x55c61d242cd7 bp 0x7fc0f27db1b0 sp 0x7fc0f27db1a0; WRITE of size 1 at 0x61a0000233e0 thread T3;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:7418,Safety,ABORT,ABORTING,7418,"4-linux-gnu/libasan.so.4+0x37d2f); #1 0x7fc0f70d7f5f (/usr/lib/x86_64-linux-gnu/libgomp.so.1+0x16f5f); #2 0x7fc0f70ceed9 in GOMP_parallel (/usr/lib/x86_64-linux-gnu/libgomp.so.1+0xded9); #3 0x7ffc996a2d2f (<unknown module>). SUMMARY: AddressSanitizer: heap-buffer-overflow /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/alignment/MultipleAlignment.cpp:168 in MultipleAlignment::updateGapsInSequenceSet(char**, unsigned long, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > > const&, std::vector<Matcher::result_t, std::allocator<Matcher::result_t> > const&, unsigned int*, bool); Shadow bytes around the buggy address:; 0x0c347fffc620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; =>0x0c347fffc670: 00 00 00 00 00 00 00 00 00 00 00 00[fa]fa fa fa; 0x0c347fffc680: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c347fffc690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc6a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc6b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc6c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; ==71239==ABORTING; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814872621:64,Deployability,update,update,64,"Thanks, I suspected that this might have been the problem. I'll update you once we figure out how to fix this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814872621
https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814975954:439,Integrability,protocol,protocol,439,"Ah sorry, that makes a lot of sense that this doesn't work. Iterative-profile searches won't work currently together with the taxonomy workflow, since the alignment positions computed in the taxonomy workflow don't refer to the same things that the iterative-profile-search workflow expects. I am not this type of search makes sense. Could you explain your use case for combining these two?. I am not sure if it's fixable with the current protocol, we might just disallow taxonomy in combination with iterative-profile searches instead.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814975954
https://github.com/soedinglab/MMseqs2/issues/434#issuecomment-814574630:176,Deployability,release,releases,176,"@Benjamin-Lee yes, I agree this would be great but there is currently no way in MMseqs2 to add header lines. ; We already discussed this and we might add the feature in future releases.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/434#issuecomment-814574630
https://github.com/soedinglab/MMseqs2/issues/436#issuecomment-815852585:117,Deployability,integrat,integrated,117,"MMseqs2 doesn't have an inbuilt module to merge paired-end reads.; You could use plass `mergereads` module which has integrated [flash](http://ccb.jhu.edu/software/FLASH/index.shtml), to merge paired-end reads. The output from plass can be directly consumed by the MMseqs2 taxonomy.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/436#issuecomment-815852585
https://github.com/soedinglab/MMseqs2/issues/436#issuecomment-815852585:117,Integrability,integrat,integrated,117,"MMseqs2 doesn't have an inbuilt module to merge paired-end reads.; You could use plass `mergereads` module which has integrated [flash](http://ccb.jhu.edu/software/FLASH/index.shtml), to merge paired-end reads. The output from plass can be directly consumed by the MMseqs2 taxonomy.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/436#issuecomment-815852585
https://github.com/soedinglab/MMseqs2/issues/436#issuecomment-815864315:212,Testability,log,logic,212,"The plass `mergereads` module would merge all pairs that can be merged and leave all unmerged `pairs` alone to be classified separately. If you don't want that, then you have to build some custom post processing logic on the result tsv flies.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/436#issuecomment-815864315
https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-820762317:86,Availability,down,down,86,Compression is a good hint for where to look for the problem. I'll see if I can track down whats wrong in the next few days. Thanks.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-820762317
https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:35,Availability,fault,fault,35,"I'm getting a similar segemntation fault with a tblastn-style search against a taxonomy-annotated target database derived from BLAST NT. Interestingly, it looks like the prefilter step calculates the memory consumption at 60T but jumps right into prefiltering instead of splitting the database to handle the ~620G memory limit. I also used the --compressed flag, but will check to see if removing that flag fixes the problem for me too. @milot-mirdita It may be worth re-opening this issue. ```; search query_db/db target_db/db result_db/db /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search -s 6 -a --num-iterations 1 --use-all-table-starts 1 --compressed 1 --split-memory-limit 618475290624 --threads 96 . MMseqs Version: 45111b641859ed0ddd875b94d6fd1aef1a675b7e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 6; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 589824T; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510
https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:1767,Availability,Mask,Mask,1767,"24 --threads 96 . MMseqs Version: 45111b641859ed0ddd875b94d6fd1aef1a675b7e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 6; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 589824T; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts true; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive searc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510
https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:1784,Availability,Mask,Mask,1784,"24 --threads 96 . MMseqs Version: 45111b641859ed0ddd875b94d6fd1aef1a675b7e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 6; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 589824T; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts true; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive searc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510
https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:1978,Availability,Mask,Mask,1978,"001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 6; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 589824T; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts true; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner ; Force restart with latest tmp false; Remove temporary files false. prefilter query_db/db /fsx/scratch/mmse",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510
https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:3548,Availability,mask,mask,3548,"k profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts true; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner ; Force restart with latest tmp false; Remove temporary files false. prefilter query_db/db /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search/340477856621524793/t_orfs_aa /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search/340477856621524793/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 589824T -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 96 --compressed 1 -v 3 -s 6.0 . Query database size: 727664 type: Aminoacid; Estimated memory consumption: 60T; Target database size: 13319670203 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; Error: Prefilter died; Error: Search step died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510
https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:3557,Availability,mask,mask-lower-case,3557,"k profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts true; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner ; Force restart with latest tmp false; Remove temporary files false. prefilter query_db/db /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search/340477856621524793/t_orfs_aa /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search/340477856621524793/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 589824T -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 96 --compressed 1 -v 3 -s 6.0 . Query database size: 727664 type: Aminoacid; Estimated memory consumption: 60T; Target database size: 13319670203 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; Error: Prefilter died; Error: Search step died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510
https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:3930,Availability,Error,Error,3930,"k profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts true; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner ; Force restart with latest tmp false; Remove temporary files false. prefilter query_db/db /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search/340477856621524793/t_orfs_aa /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search/340477856621524793/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 589824T -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 96 --compressed 1 -v 3 -s 6.0 . Query database size: 727664 type: Aminoacid; Estimated memory consumption: 60T; Target database size: 13319670203 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; Error: Prefilter died; Error: Search step died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510
https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:3953,Availability,Error,Error,3953,"k profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts true; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner ; Force restart with latest tmp false; Remove temporary files false. prefilter query_db/db /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search/340477856621524793/t_orfs_aa /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search/340477856621524793/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 589824T -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 96 --compressed 1 -v 3 -s 6.0 . Query database size: 727664 type: Aminoacid; Estimated memory consumption: 60T; Target database size: 13319670203 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; Error: Prefilter died; Error: Search step died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510
https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:207,Energy Efficiency,consumption,consumption,207,"I'm getting a similar segemntation fault with a tblastn-style search against a taxonomy-annotated target database derived from BLAST NT. Interestingly, it looks like the prefilter step calculates the memory consumption at 60T but jumps right into prefiltering instead of splitting the database to handle the ~620G memory limit. I also used the --compressed flag, but will check to see if removing that flag fixes the problem for me too. @milot-mirdita It may be worth re-opening this issue. ```; search query_db/db target_db/db result_db/db /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search -s 6 -a --num-iterations 1 --use-all-table-starts 1 --compressed 1 --split-memory-limit 618475290624 --threads 96 . MMseqs Version: 45111b641859ed0ddd875b94d6fd1aef1a675b7e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 6; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 589824T; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510
https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:3780,Energy Efficiency,consumption,consumption,3780,"k profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts true; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner ; Force restart with latest tmp false; Remove temporary files false. prefilter query_db/db /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search/340477856621524793/t_orfs_aa /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search/340477856621524793/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 589824T -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 96 --compressed 1 -v 3 -s 6.0 . Query database size: 727664 type: Aminoacid; Estimated memory consumption: 60T; Target database size: 13319670203 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; Error: Prefilter died; Error: Search step died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510
https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:938,Integrability,wrap,wrapped,938,"I'm getting a similar segemntation fault with a tblastn-style search against a taxonomy-annotated target database derived from BLAST NT. Interestingly, it looks like the prefilter step calculates the memory consumption at 60T but jumps right into prefiltering instead of splitting the database to handle the ~620G memory limit. I also used the --compressed flag, but will check to see if removing that flag fixes the problem for me too. @milot-mirdita It may be worth re-opening this issue. ```; search query_db/db target_db/db result_db/db /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search -s 6 -a --num-iterations 1 --use-all-table-starts 1 --compressed 1 --split-memory-limit 618475290624 --threads 96 . MMseqs Version: 45111b641859ed0ddd875b94d6fd1aef1a675b7e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 6; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 589824T; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510
https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:3646,Performance,load,load-mode,3646,"k profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts true; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner ; Force restart with latest tmp false; Remove temporary files false. prefilter query_db/db /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search/340477856621524793/t_orfs_aa /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search/340477856621524793/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 589824T -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 96 --compressed 1 -v 3 -s 6.0 . Query database size: 727664 type: Aminoacid; Estimated memory consumption: 60T; Target database size: 13319670203 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; Error: Prefilter died; Error: Search step died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510
https://github.com/soedinglab/MMseqs2/issues/440#issuecomment-822443569:35,Availability,down,downloader,35,I also added VOGDB to the database downloader (https://github.com/soedinglab/MMseqs2/commit/7be4fca96e84fb3ef56c598967ae6a6925500b9c). You will be able to download and setup a VOGDB profile database with only one line now:; ```; mmseqs databases VOGDB vog tmp; mmseqs easy-search QUERY.fasta vog res.m8 tmp; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/440#issuecomment-822443569
https://github.com/soedinglab/MMseqs2/issues/440#issuecomment-822443569:155,Availability,down,download,155,I also added VOGDB to the database downloader (https://github.com/soedinglab/MMseqs2/commit/7be4fca96e84fb3ef56c598967ae6a6925500b9c). You will be able to download and setup a VOGDB profile database with only one line now:; ```; mmseqs databases VOGDB vog tmp; mmseqs easy-search QUERY.fasta vog res.m8 tmp; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/440#issuecomment-822443569
https://github.com/soedinglab/MMseqs2/issues/440#issuecomment-824909985:733,Usability,clear,clear,733,"I could use your help again. I am trying to replace hmmer in my work follow with mmseqs, but I am not getting the same results.; I am trying to replace:. ```BASH; hmmsearch --domtblout vogdb_output vogdb_loc query_faa; ```. With some form of:; ```BASH; mmseqs search query_db vogdb_profile vogdb_output tmp_dir -k 5 -s 7.5; # then convertalis; ```. However, when I match output on qId I see that before filtering I have 300 records that are in hmmer output and not in mmseqs output. After filtering the number jumps to 699. There are also some mmseqs hits that are not matched in hmmer about 129, but I am not as worried about extra information. In the end there are 1247 hmmer hits and only 749 mmseqs hits after filtering. . To be clear there are 1533 mmseqs hits before filtering but the 300 hits that were in the filtered hmmer hits are not in the unfiltered mmseqs hits. Any Ideas you have will be much appreciated.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/440#issuecomment-824909985
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823518160:1084,Performance,perform,perform,1084,"> Could you tell something about your input (and target database/search settings)?; > ; > We generally have had good experience with our own two socket Epic 7742 systems. One thing where the Epyc system is at a disadvantage is currently on IO. We write one output file per thread and these have to be merged in some steps. With 256 merges this can take quite a bit of time, in this case the Intel system would be slower in computing but as it has less threads it might be faster in merging and might thus win overall. Thank you very much for your reply.; Because I just want to test the new computer, I just entered these. The input file is very small. ""mmseqs taxonomy /data/testdb /data/datenbank/silvadb /data/testdb_result /data/tmp"". For my old computer (2Intel Xeon Silver 4210, Mem: 64G, Swap: 2G) it only takes 4 minutes, but this new computer takes 10 minutes. I have tried adding the following commands ""--threads 10; --threads 20; --threads 40; --threads 128; --threads 256"". But it takes at least 10 minutes. When --threads is greater than 100, the computer can no longer perform any other operations. (Memory usage never exceeds 20G.); After reading some information, we have a few unsure questions. Does the memory frequency (2933 or 3200) affect the operation of the program? We are now using 8 pieces of memory. If you add 8 pieces, can the current problem be improved?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823518160
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823518160:578,Testability,test,test,578,"> Could you tell something about your input (and target database/search settings)?; > ; > We generally have had good experience with our own two socket Epic 7742 systems. One thing where the Epyc system is at a disadvantage is currently on IO. We write one output file per thread and these have to be merged in some steps. With 256 merges this can take quite a bit of time, in this case the Intel system would be slower in computing but as it has less threads it might be faster in merging and might thus win overall. Thank you very much for your reply.; Because I just want to test the new computer, I just entered these. The input file is very small. ""mmseqs taxonomy /data/testdb /data/datenbank/silvadb /data/testdb_result /data/tmp"". For my old computer (2Intel Xeon Silver 4210, Mem: 64G, Swap: 2G) it only takes 4 minutes, but this new computer takes 10 minutes. I have tried adding the following commands ""--threads 10; --threads 20; --threads 40; --threads 128; --threads 256"". But it takes at least 10 minutes. When --threads is greater than 100, the computer can no longer perform any other operations. (Memory usage never exceeds 20G.); After reading some information, we have a few unsure questions. Does the memory frequency (2933 or 3200) affect the operation of the program? We are now using 8 pieces of memory. If you add 8 pieces, can the current problem be improved?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823518160
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823518160:676,Testability,test,testdb,676,"> Could you tell something about your input (and target database/search settings)?; > ; > We generally have had good experience with our own two socket Epic 7742 systems. One thing where the Epyc system is at a disadvantage is currently on IO. We write one output file per thread and these have to be merged in some steps. With 256 merges this can take quite a bit of time, in this case the Intel system would be slower in computing but as it has less threads it might be faster in merging and might thus win overall. Thank you very much for your reply.; Because I just want to test the new computer, I just entered these. The input file is very small. ""mmseqs taxonomy /data/testdb /data/datenbank/silvadb /data/testdb_result /data/tmp"". For my old computer (2Intel Xeon Silver 4210, Mem: 64G, Swap: 2G) it only takes 4 minutes, but this new computer takes 10 minutes. I have tried adding the following commands ""--threads 10; --threads 20; --threads 40; --threads 128; --threads 256"". But it takes at least 10 minutes. When --threads is greater than 100, the computer can no longer perform any other operations. (Memory usage never exceeds 20G.); After reading some information, we have a few unsure questions. Does the memory frequency (2933 or 3200) affect the operation of the program? We are now using 8 pieces of memory. If you add 8 pieces, can the current problem be improved?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823518160
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823522549:543,Performance,perform,performed,543,"> Do you notice that the system is swapping a lot? 1GB RAM per thread is also very little. Our systems usually have 8 to 16 GB RAM per thread. Thank you very much for your reply. Due to our current work, only 40G memory was used at the highest time. I believe your suggestions may be important to our next project.; I didn’t find any changes in swapping. When I noticed it was always 0. During the test，memory usage never exceeds 20G. But the calculation speed is very slow. And when the thread is greater than 100, other operations cannot be performed.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823522549
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823522549:398,Testability,test,test,398,"> Do you notice that the system is swapping a lot? 1GB RAM per thread is also very little. Our systems usually have 8 to 16 GB RAM per thread. Thank you very much for your reply. Due to our current work, only 40G memory was used at the highest time. I believe your suggestions may be important to our next project.; I didn’t find any changes in swapping. When I noticed it was always 0. During the test，memory usage never exceeds 20G. But the calculation speed is very slow. And when the thread is greater than 100, other operations cannot be performed.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823522549
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823623149:24,Testability,log,log,24,Could you post the full log of the two runs? That would make it easier to say what might be going wrong.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823623149
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:1675,Availability,Mask,Mask,1675," 	0; Threads 	256; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensit",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:1693,Availability,Mask,Mask,1693," 	0; Threads 	256; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensit",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:1895,Availability,Mask,Mask,1895,"se; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	fal",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:3784,Availability,mask,mask,3784,"stive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/tmp/17728638439372299279/first /data/ct/tmp/17728638439372299279/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 . prefilter /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/query_seqs_split /data/ct/datenbank/silva_mmseqs/silva.idx /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 type: Nucleotide; Estimated memory consumption: 18G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; ^C===============> ] 25.00% 2.00K eta 5m 1s . **Runs of Intel computer**; [kabru@bwp-cfdmain test]$ mmseqs taxonomy testdb ~/datenbank/silvadb testx_result tmp; taxonomy testdb /home/kabru/datenbank/silvadb testx_result tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy outp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:3793,Availability,mask,mask-lower-case,3793,"stive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/tmp/17728638439372299279/first /data/ct/tmp/17728638439372299279/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 . prefilter /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/query_seqs_split /data/ct/datenbank/silva_mmseqs/silva.idx /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 type: Nucleotide; Estimated memory consumption: 18G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; ^C===============> ] 25.00% 2.00K eta 5m 1s . **Runs of Intel computer**; [kabru@bwp-cfdmain test]$ mmseqs taxonomy testdb ~/datenbank/silvadb testx_result tmp; taxonomy testdb /home/kabru/datenbank/silvadb testx_result tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy outp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:5869,Availability,Mask,Mask,5869,"d 	0; Threads 	72; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensit",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:5887,Availability,Mask,Mask,5887,"d 	0; Threads 	72; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensit",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:6089,Availability,Mask,Mask,6089,"se; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	fal",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:89201,Availability,mask,mask,89201,"% 4.0[=================================================================] 100.00% 4.00K 0s 55ms; Time for merging to query_seqs_h: 0h 0m 0s 10ms; Time for merging to query_seqs: 0h 0m 0s 19ms; Time for processing: 0h 0m 0s 164ms; splitsequence tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 72 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 1ms; prefilter tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs_split /home/kabru/datenbank/silvadb.idx tmp/14943602774421092333/tmp_hsp1/7440312624435503015/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 72 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 type: Nucleotide; Estimated memory consumption: 14G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; [> ] 0.00% 1 et[> ] 1.00% 81 e[> ] 1.03% 83 e[> ] 1.01% 82 e[> ] 1.04% 84 e[> ] 1.05% 85 e[=> ] 2.05% 165 [=> ] 3.05% 245 [==> ] 4.05% 325 [===> ] 5.05% 405 [===> ] 6.05% 485 [====> ] 7.05% 565 [=====> ] 8.05% 645 [=====> ] 9.05% 725 [======> ] 10.05% 805[=======> ] 11.05% 885[=======> ] 12.05% 965[========> ] 13.05% 1.0[=========> ] 14.05% 1.1[=========> ] 15.05% 1.2[========",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:89210,Availability,mask,mask-lower-case,89210,"% 4.0[=================================================================] 100.00% 4.00K 0s 55ms; Time for merging to query_seqs_h: 0h 0m 0s 10ms; Time for merging to query_seqs: 0h 0m 0s 19ms; Time for processing: 0h 0m 0s 164ms; splitsequence tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 72 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 1ms; prefilter tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs_split /home/kabru/datenbank/silvadb.idx tmp/14943602774421092333/tmp_hsp1/7440312624435503015/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 72 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 type: Nucleotide; Estimated memory consumption: 14G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; [> ] 0.00% 1 et[> ] 1.00% 81 e[> ] 1.03% 83 e[> ] 1.01% 82 e[> ] 1.04% 84 e[> ] 1.05% 85 e[=> ] 2.05% 165 [=> ] 3.05% 245 [==> ] 4.05% 325 [===> ] 5.05% 405 [===> ] 6.05% 485 [====> ] 7.05% 565 [=====> ] 8.05% 645 [=====> ] 9.05% 725 [======> ] 10.05% 805[=======> ] 11.05% 885[=======> ] 12.05% 965[========> ] 13.05% 1.0[=========> ] 14.05% 1.1[=========> ] 15.05% 1.2[========",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:4120,Energy Efficiency,consumption,consumption,4120,"ent-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 . prefilter /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/query_seqs_split /data/ct/datenbank/silva_mmseqs/silva.idx /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 type: Nucleotide; Estimated memory consumption: 18G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; ^C===============> ] 25.00% 2.00K eta 5m 1s . **Runs of Intel computer**; [kabru@bwp-cfdmain test]$ mmseqs taxonomy testdb ~/datenbank/silvadb testx_result tmp; taxonomy testdb /home/kabru/datenbank/silvadb testx_result tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	72; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:89536,Energy Efficiency,consumption,consumption,89536,"43602774421092333/tmp_hsp1/7440312624435503015/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 72 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 1ms; prefilter tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs_split /home/kabru/datenbank/silvadb.idx tmp/14943602774421092333/tmp_hsp1/7440312624435503015/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 72 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 type: Nucleotide; Estimated memory consumption: 14G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; [> ] 0.00% 1 et[> ] 1.00% 81 e[> ] 1.03% 83 e[> ] 1.01% 82 e[> ] 1.04% 84 e[> ] 1.05% 85 e[=> ] 2.05% 165 [=> ] 3.05% 245 [==> ] 4.05% 325 [===> ] 5.05% 405 [===> ] 6.05% 485 [====> ] 7.05% 565 [=====> ] 8.05% 645 [=====> ] 9.05% 725 [======> ] 10.05% 805[=======> ] 11.05% 885[=======> ] 12.05% 965[========> ] 13.05% 1.0[=========> ] 14.05% 1.1[=========> ] 15.05% 1.2[==========> ] 16.05% 1.2[===========> ] 17.05% 1.3[===========> ] 18.05% 1.4[============> ] 19.05% 1.5[=============> ] 20.05% 1.6[=============> ] 21.05% 1.6[==============> ] 22.05% 1.7[==============> ] 23.05% 1.8[===============> ] 24.05% 1.9[================> ] 25.05% 2.0[================> ] 26.05% 2.0^C eta 1m 38s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:878,Integrability,wrap,wrapped,878,"> Could you post the full log of the two runs? That would make it easier to say what might be going wrong. Thank you!; **runs of EPYC 7742**; (base) ct@test:~$ ~/mmseqs/bin/mmseqs taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp ; taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	256; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	fals",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:5072,Integrability,wrap,wrapped,5072,"ery database size: 8000 type: Nucleotide; Estimated memory consumption: 18G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; ^C===============> ] 25.00% 2.00K eta 5m 1s . **Runs of Intel computer**; [kabru@bwp-cfdmain test]$ mmseqs taxonomy testdb ~/datenbank/silvadb testx_result tmp; taxonomy testdb /home/kabru/datenbank/silvadb testx_result tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	72; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverag",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:3882,Performance,load,load-mode,3882,"stive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/tmp/17728638439372299279/first /data/ct/tmp/17728638439372299279/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 . prefilter /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/query_seqs_split /data/ct/datenbank/silva_mmseqs/silva.idx /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 type: Nucleotide; Estimated memory consumption: 18G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; ^C===============> ] 25.00% 2.00K eta 5m 1s . **Runs of Intel computer**; [kabru@bwp-cfdmain test]$ mmseqs taxonomy testdb ~/datenbank/silvadb testx_result tmp; taxonomy testdb /home/kabru/datenbank/silvadb testx_result tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy outp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:89299,Performance,load,load-mode,89299,"% 4.0[=================================================================] 100.00% 4.00K 0s 55ms; Time for merging to query_seqs_h: 0h 0m 0s 10ms; Time for merging to query_seqs: 0h 0m 0s 19ms; Time for processing: 0h 0m 0s 164ms; splitsequence tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 72 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 1ms; prefilter tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs_split /home/kabru/datenbank/silvadb.idx tmp/14943602774421092333/tmp_hsp1/7440312624435503015/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 72 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 type: Nucleotide; Estimated memory consumption: 14G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; [> ] 0.00% 1 et[> ] 1.00% 81 e[> ] 1.03% 83 e[> ] 1.01% 82 e[> ] 1.04% 84 e[> ] 1.05% 85 e[=> ] 2.05% 165 [=> ] 3.05% 245 [==> ] 4.05% 325 [===> ] 5.05% 405 [===> ] 6.05% 485 [====> ] 7.05% 565 [=====> ] 8.05% 645 [=====> ] 9.05% 725 [======> ] 10.05% 805[=======> ] 11.05% 885[=======> ] 12.05% 965[========> ] 13.05% 1.0[=========> ] 14.05% 1.1[=========> ] 15.05% 1.2[========",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:26,Testability,log,log,26,"> Could you post the full log of the two runs? That would make it easier to say what might be going wrong. Thank you!; **runs of EPYC 7742**; (base) ct@test:~$ ~/mmseqs/bin/mmseqs taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp ; taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	256; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	fals",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:152,Testability,test,test,152,"> Could you post the full log of the two runs? That would make it easier to say what might be going wrong. Thank you!; **runs of EPYC 7742**; (base) ct@test:~$ ~/mmseqs/bin/mmseqs taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp ; taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	256; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	fals",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:198,Testability,test,test,198,"> Could you post the full log of the two runs? That would make it easier to say what might be going wrong. Thank you!; **runs of EPYC 7742**; (base) ct@test:~$ ~/mmseqs/bin/mmseqs taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp ; taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	256; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	fals",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:203,Testability,test,testdb,203,"> Could you post the full log of the two runs? That would make it easier to say what might be going wrong. Thank you!; **runs of EPYC 7742**; (base) ct@test:~$ ~/mmseqs/bin/mmseqs taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp ; taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	256; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	fals",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:257,Testability,test,test,257,"> Could you post the full log of the two runs? That would make it easier to say what might be going wrong. Thank you!; **runs of EPYC 7742**; (base) ct@test:~$ ~/mmseqs/bin/mmseqs taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp ; taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	256; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	fals",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:304,Testability,test,test,304,"> Could you post the full log of the two runs? That would make it easier to say what might be going wrong. Thank you!; **runs of EPYC 7742**; (base) ct@test:~$ ~/mmseqs/bin/mmseqs taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp ; taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	256; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	fals",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:309,Testability,test,testdb,309,"> Could you post the full log of the two runs? That would make it easier to say what might be going wrong. Thank you!; **runs of EPYC 7742**; (base) ct@test:~$ ~/mmseqs/bin/mmseqs taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp ; taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	256; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	fals",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:363,Testability,test,test,363,"> Could you post the full log of the two runs? That would make it easier to say what might be going wrong. Thank you!; **runs of EPYC 7742**; (base) ct@test:~$ ~/mmseqs/bin/mmseqs taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp ; taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	256; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	fals",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:2995,Testability,test,test,2995,"per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/tmp/17728638439372299279/first /data/ct/tmp/17728638439372299279/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 . prefilter /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/query_seqs_split /data/ct/datenbank/silva_mmseqs/silva.idx /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 typ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:3000,Testability,test,testdb,3000,"per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/tmp/17728638439372299279/first /data/ct/tmp/17728638439372299279/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 . prefilter /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/query_seqs_split /data/ct/datenbank/silva_mmseqs/silva.idx /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 typ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:4454,Testability,test,test,4454,"otide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 type: Nucleotide; Estimated memory consumption: 18G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; ^C===============> ] 25.00% 2.00K eta 5m 1s . **Runs of Intel computer**; [kabru@bwp-cfdmain test]$ mmseqs taxonomy testdb ~/datenbank/silvadb testx_result tmp; taxonomy testdb /home/kabru/datenbank/silvadb testx_result tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	72; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:4477,Testability,test,testdb,4477,"otide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 type: Nucleotide; Estimated memory consumption: 18G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; ^C===============> ] 25.00% 2.00K eta 5m 1s . **Runs of Intel computer**; [kabru@bwp-cfdmain test]$ mmseqs taxonomy testdb ~/datenbank/silvadb testx_result tmp; taxonomy testdb /home/kabru/datenbank/silvadb testx_result tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	72; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:4531,Testability,test,testdb,4531,"otide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 type: Nucleotide; Estimated memory consumption: 18G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; ^C===============> ] 25.00% 2.00K eta 5m 1s . **Runs of Intel computer**; [kabru@bwp-cfdmain test]$ mmseqs taxonomy testdb ~/datenbank/silvadb testx_result tmp; taxonomy testdb /home/kabru/datenbank/silvadb testx_result tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	72; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:7232,Testability,test,testdb,7232,"lumn 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; Create directory tmp/14943602774421092333/tmp_hsp1; search testdb /home/kabru/datenbank/silvadb tmp/14943602774421092333/first tmp/14943602774421092333/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 . extractframes testdb tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 72 --compressed 0 -v 3 . [> ] 1.35% 55 e[> ] 1.28% 52 e[> ] 1.10% 45 e[> ] 1.08% 44 e[> ] 1.23% 50 e[=> ] 1.55% 63 e[> ] 1.03% 42 e[> ] 1.13% 46 e[=> ] 1.80% 73 e[=> ] 1.88% 76 e[=> ] 2.80% 113 [=> ] 2.83% 114 [> ] 1.15% 47 e[> ] 1.38% 56 e[=> ] 3.05% 123 [=> ] 3.08% 124 [> ] 1.48% 60 e[=> ] 1.60% 65 e[==> ] 3.28% 132 [=> ] 1.78% 72 e[=> ] 1.58% 64 e[==> ] 3.50% 141 [==> ] 3.55% 143 [==> ] 3.65% 147 [==> ] 3.70% 149 [==> ] 3.83% 154 [==> ] 3.88% 156 [=> ] 1.68% 68 e[> ] 1.50% 61 e[==> ] 4.08% 164 [==> ] 4.10% 165 [=> ] 1.95% 79 e[> ] 1.33% 54 e[==> ] 4.33% 174 [=> ] 1.98% 80 e[==> ] 4.50% 181 [==> ] 4.55% 183 [==> ] 4.53% 182 [=> ] 1.65% 67 e[=> ] 2.33% 9",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:7487,Testability,test,testdb,7487,"Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; Create directory tmp/14943602774421092333/tmp_hsp1; search testdb /home/kabru/datenbank/silvadb tmp/14943602774421092333/first tmp/14943602774421092333/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 . extractframes testdb tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 72 --compressed 0 -v 3 . [> ] 1.35% 55 e[> ] 1.28% 52 e[> ] 1.10% 45 e[> ] 1.08% 44 e[> ] 1.23% 50 e[=> ] 1.55% 63 e[> ] 1.03% 42 e[> ] 1.13% 46 e[=> ] 1.80% 73 e[=> ] 1.88% 76 e[=> ] 2.80% 113 [=> ] 2.83% 114 [> ] 1.15% 47 e[> ] 1.38% 56 e[=> ] 3.05% 123 [=> ] 3.08% 124 [> ] 1.48% 60 e[=> ] 1.60% 65 e[==> ] 3.28% 132 [=> ] 1.78% 72 e[=> ] 1.58% 64 e[==> ] 3.50% 141 [==> ] 3.55% 143 [==> ] 3.65% 147 [==> ] 3.70% 149 [==> ] 3.83% 154 [==> ] 3.88% 156 [=> ] 1.68% 68 e[> ] 1.50% 61 e[==> ] 4.08% 164 [==> ] 4.10% 165 [=> ] 1.95% 79 e[> ] 1.33% 54 e[==> ] 4.33% 174 [=> ] 1.98% 80 e[==> ] 4.50% 181 [==> ] 4.55% 183 [==> ] 4.53% 182 [=> ] 1.65% 67 e[=> ] 2.33% 94 e[=> ] 2.23% 90 e[===> ] 4.78% 192 [===> ] 4.80% 193 [=> ] 2.45% 99 e[=> ] 2.50% 101 [=> ] 2.40% 97 e[=> ] 2.60% 105 [=> ] 2.58% 104 [===> ] 4.95% 199 [=> ] 2.65% 107 [===> ] 5.00% 201 [=> ] 2.70% 109 [===> ] 5.15% 207 [===> ] 5.18% 208 [===> ] 5.20% 209 [=> ] 2.68% 108 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824035474:187,Modifiability,variab,variable,187,The output is kind of mangled. Could you execute both runs with empty `tmp` directories and redirect the whole output to a file please? You might also want to set the `TTY=0` environment variable to disable the progress bar (not sure why it broke so badly in your output.; See: https://github.com/soedinglab/MMseqs2/wiki#environment-variables-used-by-mmseqs2,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824035474
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824035474:333,Modifiability,variab,variables-used-by-,333,The output is kind of mangled. Could you execute both runs with empty `tmp` directories and redirect the whole output to a file please? You might also want to set the `TTY=0` environment variable to disable the progress bar (not sure why it broke so badly in your output.; See: https://github.com/soedinglab/MMseqs2/wiki#environment-variables-used-by-mmseqs2,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824035474
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824035474:211,Usability,progress bar,progress bar,211,The output is kind of mangled. Could you execute both runs with empty `tmp` directories and redirect the whole output to a file please? You might also want to set the `TTY=0` environment variable to disable the progress bar (not sure why it broke so badly in your output.; See: https://github.com/soedinglab/MMseqs2/wiki#environment-variables-used-by-mmseqs2,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824035474
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824574374:189,Modifiability,variab,variable,189,> The output is kind of mangled. Could you execute both runs with empty `tmp` directories and redirect the whole output to a file please? You might also want to set the `TTY=0` environment variable to disable the progress bar (not sure why it broke so badly in your output.; > See: https://github.com/soedinglab/MMseqs2/wiki#environment-variables-used-by-mmseqs2. Thank you very much!; Thank you for your help. Our problem has been resolved. The order of memory insertion has been changed.; Dankschön!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824574374
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824574374:337,Modifiability,variab,variables-used-by-,337,> The output is kind of mangled. Could you execute both runs with empty `tmp` directories and redirect the whole output to a file please? You might also want to set the `TTY=0` environment variable to disable the progress bar (not sure why it broke so badly in your output.; > See: https://github.com/soedinglab/MMseqs2/wiki#environment-variables-used-by-mmseqs2. Thank you very much!; Thank you for your help. Our problem has been resolved. The order of memory insertion has been changed.; Dankschön!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824574374
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824574374:213,Usability,progress bar,progress bar,213,> The output is kind of mangled. Could you execute both runs with empty `tmp` directories and redirect the whole output to a file please? You might also want to set the `TTY=0` environment variable to disable the progress bar (not sure why it broke so badly in your output.; > See: https://github.com/soedinglab/MMseqs2/wiki#environment-variables-used-by-mmseqs2. Thank you very much!; Thank you for your help. Our problem has been resolved. The order of memory insertion has been changed.; Dankschön!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824574374
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824888140:94,Security,access,access,94,Bitteschön :) Was the RAM inserted only at the bank belong to a single socket? (So all memory access of socket 2 went through socket 1 or vise versa?),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824888140
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-826566571:96,Security,access,access,96,"> Bitteschön :) Was the RAM inserted only at the bank belong to a single socket? (So all memory access of socket 2 went through socket 1 or vise versa?). When we put all 8 RAMs next to CPU0 or CPU1, the speed has been improved very well.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-826566571
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-879721113:560,Performance,load,load,560,"Hello @milot-mirdita and @Ting1215 . I am writing in this thread mainly because I am having a strikingly similar problem.; Basically our EPYC 7742 machines are slower than Xeon E5-4627 CPUs. @milot-mirdita following what you mentioned about the IO,; I have noticed, with big surprise that the execution time is longer when using inxeded DBs.; Note that I only use small proteomes (1000~20000 sequences).; Additionally I am using: ; - Highest sensitivity (-s 7.5); - I only use 1 CPU (meaning 128 executions of MMseqs in Parallel); Do you think some of the way load the index DB might help?. Following are some info the present system:; CPU: 2x 64-Core AMD EPYC 7742. Memory: RAM: total: 1.96 TiB used: 14.31 GiB (0.7%) ; Array-1: capacity: 2.05 TiB note: est. slots: 16 EC: Multi-bit ECC ; Device-1: P1-DIMMA1 size: 128 GiB speed: 2667 MT/s ; Device-2: P1-DIMMB1 size: 128 GiB speed: 2667 MT/s ; Device-3: P1-DIMMC1 size: 128 GiB speed: 2667 MT/s ; Device-4: P1-DIMMD1 size: 128 GiB speed: 2667 MT/s ; Device-5: P1-DIMME1 size: 128 GiB speed: 2667 MT/s ; Device-6: P1-DIMMF1 size: 128 GiB speed: 2667 MT/s ; Device-7: P1-DIMMG1 size: 128 GiB speed: 2667 MT/s ; Device-8: P1-DIMMH1 size: 128 GiB speed: 2667 MT/s ; Device-9: P2-DIMMA1 size: 128 GiB speed: 2667 MT/s ; Device-10: P2-DIMMB1 size: 128 GiB speed: 2667 MT/s ; Device-11: P2-DIMMC1 size: 128 GiB speed: 2667 MT/s ; Device-12: P2-DIMMD1 size: 128 GiB speed: 2667 MT/s ; Device-13: P2-DIMME1 size: 128 GiB speed: 2667 MT/s ; Device-14: P2-DIMMF1 size: 128 GiB speed: 2667 MT/s ; Device-15: P2-DIMMG1 size: 128 GiB speed: 2667 MT/s ; Device-16: P2-DIMMH1 size: 128 GiB speed: 2667 MT/s . Although the servers are in another building from the above output it seems there is no empty memory slot. Thanks a lot guys,. I might open a separate issue if you find it more appropriate.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-879721113
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-879736667:36,Testability,log,log,36,"Hi @salvoc81, could you post a full log of both runs (on both AMD and Intel)? I am not sure how to tackle this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-879736667
https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-894054280:171,Testability,log,logs,171,"Hello @milot-mirdita and sorry for my late reply.; It seems MMseqs gets slower when using preindexed databases on AMD, although it was unexpected.; I will try to post the logs in a few week, ad the Intel machine is being completely used by other colleagues.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-894054280
https://github.com/soedinglab/MMseqs2/issues/442#issuecomment-823502799:85,Availability,avail,available,85,`linclust` implements a splitting mechanism and can process datasets larger than the available memory size. `clusthash` doesn't have a similar mechanism (it's also older and most unused since we have the `linclust` algorithm).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/442#issuecomment-823502799
https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824083071:755,Availability,avail,available,755,"> First question: do you have specific recommendations when dealing with a transcriptome as the query? For example taking into account the rather short contigs and splicing. I am not super familiar with transcriptomics datasets. Depending on the length of your queries you might want to turn of the early ORF filter (`--orf-filter 0`) as it can sometimes reject too many ORFs if the sequences are short. We also have a different project that deals with contamination: https://github.com/martin-steinegger/conterminator; Though that tool is currently only for all-vs-all genome contamination annotations. But Martin was planning to build a scan mode for one-vs-RefSeq/GenBank. > Second question: There are no genome assemblies form closely related species available. What are your thoughts regarding nucl-nucl search VS translated_nucl-prot search in this case?. Generally our nucl-nucl searching capabilities are less developed than than anything-prot. In the taxonomy assignment, nucl-nucl still uses top-hit taxon assignment instead of LCA. We haven't gotten around to thoroughly benchmark the nucl-nucl homology search and publish it (it does work quite well in the preliminary tests). And nucl-nucl homology search is limited to around ~80% sequence identity (which is usually more than enough for taxonomy though). Also building a taxonomy database for the NT is painful and the database might get extremely large (haven't tried it in a while though). I'd be quite interested in what you find out in your experiments with it though. We do plan to develop this part further. > Third questions: In case I do a translated_nucl-prot search how do I deal with the fact that my queries are both from Euk. and Prok. origin? I mean regarding translation table. Would you worry about this?. By default, we extract fragments from any codon to a stop codon and repeat the procedure. So the translation table matters a bit less (only affected by alternative stop codons). And since we only do local alignment",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824083071
https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824083071:229,Integrability,Depend,Depending,229,"> First question: do you have specific recommendations when dealing with a transcriptome as the query? For example taking into account the rather short contigs and splicing. I am not super familiar with transcriptomics datasets. Depending on the length of your queries you might want to turn of the early ORF filter (`--orf-filter 0`) as it can sometimes reject too many ORFs if the sequences are short. We also have a different project that deals with contamination: https://github.com/martin-steinegger/conterminator; Though that tool is currently only for all-vs-all genome contamination annotations. But Martin was planning to build a scan mode for one-vs-RefSeq/GenBank. > Second question: There are no genome assemblies form closely related species available. What are your thoughts regarding nucl-nucl search VS translated_nucl-prot search in this case?. Generally our nucl-nucl searching capabilities are less developed than than anything-prot. In the taxonomy assignment, nucl-nucl still uses top-hit taxon assignment instead of LCA. We haven't gotten around to thoroughly benchmark the nucl-nucl homology search and publish it (it does work quite well in the preliminary tests). And nucl-nucl homology search is limited to around ~80% sequence identity (which is usually more than enough for taxonomy though). Also building a taxonomy database for the NT is painful and the database might get extremely large (haven't tried it in a while though). I'd be quite interested in what you find out in your experiments with it though. We do plan to develop this part further. > Third questions: In case I do a translated_nucl-prot search how do I deal with the fact that my queries are both from Euk. and Prok. origin? I mean regarding translation table. Would you worry about this?. By default, we extract fragments from any codon to a stop codon and repeat the procedure. So the translation table matters a bit less (only affected by alternative stop codons). And since we only do local alignment",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824083071
https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824083071:2013,Modifiability,extend,extended,2013,"nscriptome as the query? For example taking into account the rather short contigs and splicing. I am not super familiar with transcriptomics datasets. Depending on the length of your queries you might want to turn of the early ORF filter (`--orf-filter 0`) as it can sometimes reject too many ORFs if the sequences are short. We also have a different project that deals with contamination: https://github.com/martin-steinegger/conterminator; Though that tool is currently only for all-vs-all genome contamination annotations. But Martin was planning to build a scan mode for one-vs-RefSeq/GenBank. > Second question: There are no genome assemblies form closely related species available. What are your thoughts regarding nucl-nucl search VS translated_nucl-prot search in this case?. Generally our nucl-nucl searching capabilities are less developed than than anything-prot. In the taxonomy assignment, nucl-nucl still uses top-hit taxon assignment instead of LCA. We haven't gotten around to thoroughly benchmark the nucl-nucl homology search and publish it (it does work quite well in the preliminary tests). And nucl-nucl homology search is limited to around ~80% sequence identity (which is usually more than enough for taxonomy though). Also building a taxonomy database for the NT is painful and the database might get extremely large (haven't tried it in a while though). I'd be quite interested in what you find out in your experiments with it though. We do plan to develop this part further. > Third questions: In case I do a translated_nucl-prot search how do I deal with the fact that my queries are both from Euk. and Prok. origin? I mean regarding translation table. Would you worry about this?. By default, we extract fragments from any codon to a stop codon and repeat the procedure. So the translation table matters a bit less (only affected by alternative stop codons). And since we only do local alignments, the over-extended start will get chopped off through the alignment anyway.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824083071
https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824083071:1082,Testability,benchmark,benchmark,1082,"nscriptome as the query? For example taking into account the rather short contigs and splicing. I am not super familiar with transcriptomics datasets. Depending on the length of your queries you might want to turn of the early ORF filter (`--orf-filter 0`) as it can sometimes reject too many ORFs if the sequences are short. We also have a different project that deals with contamination: https://github.com/martin-steinegger/conterminator; Though that tool is currently only for all-vs-all genome contamination annotations. But Martin was planning to build a scan mode for one-vs-RefSeq/GenBank. > Second question: There are no genome assemblies form closely related species available. What are your thoughts regarding nucl-nucl search VS translated_nucl-prot search in this case?. Generally our nucl-nucl searching capabilities are less developed than than anything-prot. In the taxonomy assignment, nucl-nucl still uses top-hit taxon assignment instead of LCA. We haven't gotten around to thoroughly benchmark the nucl-nucl homology search and publish it (it does work quite well in the preliminary tests). And nucl-nucl homology search is limited to around ~80% sequence identity (which is usually more than enough for taxonomy though). Also building a taxonomy database for the NT is painful and the database might get extremely large (haven't tried it in a while though). I'd be quite interested in what you find out in your experiments with it though. We do plan to develop this part further. > Third questions: In case I do a translated_nucl-prot search how do I deal with the fact that my queries are both from Euk. and Prok. origin? I mean regarding translation table. Would you worry about this?. By default, we extract fragments from any codon to a stop codon and repeat the procedure. So the translation table matters a bit less (only affected by alternative stop codons). And since we only do local alignments, the over-extended start will get chopped off through the alignment anyway.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824083071
https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824083071:1181,Testability,test,tests,1181,"nscriptome as the query? For example taking into account the rather short contigs and splicing. I am not super familiar with transcriptomics datasets. Depending on the length of your queries you might want to turn of the early ORF filter (`--orf-filter 0`) as it can sometimes reject too many ORFs if the sequences are short. We also have a different project that deals with contamination: https://github.com/martin-steinegger/conterminator; Though that tool is currently only for all-vs-all genome contamination annotations. But Martin was planning to build a scan mode for one-vs-RefSeq/GenBank. > Second question: There are no genome assemblies form closely related species available. What are your thoughts regarding nucl-nucl search VS translated_nucl-prot search in this case?. Generally our nucl-nucl searching capabilities are less developed than than anything-prot. In the taxonomy assignment, nucl-nucl still uses top-hit taxon assignment instead of LCA. We haven't gotten around to thoroughly benchmark the nucl-nucl homology search and publish it (it does work quite well in the preliminary tests). And nucl-nucl homology search is limited to around ~80% sequence identity (which is usually more than enough for taxonomy though). Also building a taxonomy database for the NT is painful and the database might get extremely large (haven't tried it in a while though). I'd be quite interested in what you find out in your experiments with it though. We do plan to develop this part further. > Third questions: In case I do a translated_nucl-prot search how do I deal with the fact that my queries are both from Euk. and Prok. origin? I mean regarding translation table. Would you worry about this?. By default, we extract fragments from any codon to a stop codon and repeat the procedure. So the translation table matters a bit less (only affected by alternative stop codons). And since we only do local alignments, the over-extended start will get chopped off through the alignment anyway.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824083071
https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824596494:90,Integrability,Depend,Depending,90,"Thanks for your detailed reply!. > I am not super familiar with transcriptomics datasets. Depending on the length of your queries you might want to turn of the early ORF filter (--orf-filter 0) as it can sometimes reject too many ORFs if the sequences are short. I'll try the `--orf-filter 0` option as you suggested. Yes, of course in the case of a transcriptome the ORFs are often short if the assembler is not able to resolve all the isoforms properly. > Generally our nucl-nucl searching capabilities are less developed than than anything-prot. In the taxonomy assignment, nucl-nucl still uses top-hit taxon assignment instead of LCA. We haven't gotten around to thoroughly benchmark the nucl-nucl homology search and publish it (it does work quite well in the preliminary tests). I run a nucl-nucl taxonomy assignment (against NT) and it performed well I think. I did not systematically check, but I did some cross-checks with blastn and it reported the exact same hits. Assuming blast to be the ""gold-standard"" I was quite impressed by the performance of your tool, because it was so much faster. > Also building a taxonomy database for the NT is painful and the database might get extremely large (haven't tried it in a while though). I just did that and it worked. According to your instructions in the Wiki. I'll let you know in case I have something interesting to report.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824596494
https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824596494:843,Performance,perform,performed,843,"Thanks for your detailed reply!. > I am not super familiar with transcriptomics datasets. Depending on the length of your queries you might want to turn of the early ORF filter (--orf-filter 0) as it can sometimes reject too many ORFs if the sequences are short. I'll try the `--orf-filter 0` option as you suggested. Yes, of course in the case of a transcriptome the ORFs are often short if the assembler is not able to resolve all the isoforms properly. > Generally our nucl-nucl searching capabilities are less developed than than anything-prot. In the taxonomy assignment, nucl-nucl still uses top-hit taxon assignment instead of LCA. We haven't gotten around to thoroughly benchmark the nucl-nucl homology search and publish it (it does work quite well in the preliminary tests). I run a nucl-nucl taxonomy assignment (against NT) and it performed well I think. I did not systematically check, but I did some cross-checks with blastn and it reported the exact same hits. Assuming blast to be the ""gold-standard"" I was quite impressed by the performance of your tool, because it was so much faster. > Also building a taxonomy database for the NT is painful and the database might get extremely large (haven't tried it in a while though). I just did that and it worked. According to your instructions in the Wiki. I'll let you know in case I have something interesting to report.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824596494
https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824596494:1046,Performance,perform,performance,1046,"Thanks for your detailed reply!. > I am not super familiar with transcriptomics datasets. Depending on the length of your queries you might want to turn of the early ORF filter (--orf-filter 0) as it can sometimes reject too many ORFs if the sequences are short. I'll try the `--orf-filter 0` option as you suggested. Yes, of course in the case of a transcriptome the ORFs are often short if the assembler is not able to resolve all the isoforms properly. > Generally our nucl-nucl searching capabilities are less developed than than anything-prot. In the taxonomy assignment, nucl-nucl still uses top-hit taxon assignment instead of LCA. We haven't gotten around to thoroughly benchmark the nucl-nucl homology search and publish it (it does work quite well in the preliminary tests). I run a nucl-nucl taxonomy assignment (against NT) and it performed well I think. I did not systematically check, but I did some cross-checks with blastn and it reported the exact same hits. Assuming blast to be the ""gold-standard"" I was quite impressed by the performance of your tool, because it was so much faster. > Also building a taxonomy database for the NT is painful and the database might get extremely large (haven't tried it in a while though). I just did that and it worked. According to your instructions in the Wiki. I'll let you know in case I have something interesting to report.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824596494
https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824596494:678,Testability,benchmark,benchmark,678,"Thanks for your detailed reply!. > I am not super familiar with transcriptomics datasets. Depending on the length of your queries you might want to turn of the early ORF filter (--orf-filter 0) as it can sometimes reject too many ORFs if the sequences are short. I'll try the `--orf-filter 0` option as you suggested. Yes, of course in the case of a transcriptome the ORFs are often short if the assembler is not able to resolve all the isoforms properly. > Generally our nucl-nucl searching capabilities are less developed than than anything-prot. In the taxonomy assignment, nucl-nucl still uses top-hit taxon assignment instead of LCA. We haven't gotten around to thoroughly benchmark the nucl-nucl homology search and publish it (it does work quite well in the preliminary tests). I run a nucl-nucl taxonomy assignment (against NT) and it performed well I think. I did not systematically check, but I did some cross-checks with blastn and it reported the exact same hits. Assuming blast to be the ""gold-standard"" I was quite impressed by the performance of your tool, because it was so much faster. > Also building a taxonomy database for the NT is painful and the database might get extremely large (haven't tried it in a while though). I just did that and it worked. According to your instructions in the Wiki. I'll let you know in case I have something interesting to report.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824596494
https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824596494:777,Testability,test,tests,777,"Thanks for your detailed reply!. > I am not super familiar with transcriptomics datasets. Depending on the length of your queries you might want to turn of the early ORF filter (--orf-filter 0) as it can sometimes reject too many ORFs if the sequences are short. I'll try the `--orf-filter 0` option as you suggested. Yes, of course in the case of a transcriptome the ORFs are often short if the assembler is not able to resolve all the isoforms properly. > Generally our nucl-nucl searching capabilities are less developed than than anything-prot. In the taxonomy assignment, nucl-nucl still uses top-hit taxon assignment instead of LCA. We haven't gotten around to thoroughly benchmark the nucl-nucl homology search and publish it (it does work quite well in the preliminary tests). I run a nucl-nucl taxonomy assignment (against NT) and it performed well I think. I did not systematically check, but I did some cross-checks with blastn and it reported the exact same hits. Assuming blast to be the ""gold-standard"" I was quite impressed by the performance of your tool, because it was so much faster. > Also building a taxonomy database for the NT is painful and the database might get extremely large (haven't tried it in a while though). I just did that and it worked. According to your instructions in the Wiki. I'll let you know in case I have something interesting to report.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824596494
https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896:29,Availability,error,error,29,"I just hit this as well. The error message doesn't make the formatting problem obvious, but after finding this thread it was a quick and easy fix to manually correct the fasta lines that start with `> ` to begin with `>`. If writing the logic to handle parsing both `> ` & `>` is more trouble than it is worth, revising the error message to indicate that the user may only need to fix the spacing issue and then try again would be very helpful! The file that caused the issue for me was downloaded from a small database maintained by an individual research lab, so I assume the issue was because the fasta file was likely manually updated at some point rather than machine-generated. That's just a suggestion though - I was able to find this thread and solution within easily enough and there seem to be a handful of existing fasta validator tools that could also help users identify the root cause of their issue without internalizing that logic into this suite of tools as well. P.S. thanks for MMSeqs!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896
https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896:324,Availability,error,error,324,"I just hit this as well. The error message doesn't make the formatting problem obvious, but after finding this thread it was a quick and easy fix to manually correct the fasta lines that start with `> ` to begin with `>`. If writing the logic to handle parsing both `> ` & `>` is more trouble than it is worth, revising the error message to indicate that the user may only need to fix the spacing issue and then try again would be very helpful! The file that caused the issue for me was downloaded from a small database maintained by an individual research lab, so I assume the issue was because the fasta file was likely manually updated at some point rather than machine-generated. That's just a suggestion though - I was able to find this thread and solution within easily enough and there seem to be a handful of existing fasta validator tools that could also help users identify the root cause of their issue without internalizing that logic into this suite of tools as well. P.S. thanks for MMSeqs!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896
https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896:487,Availability,down,downloaded,487,"I just hit this as well. The error message doesn't make the formatting problem obvious, but after finding this thread it was a quick and easy fix to manually correct the fasta lines that start with `> ` to begin with `>`. If writing the logic to handle parsing both `> ` & `>` is more trouble than it is worth, revising the error message to indicate that the user may only need to fix the spacing issue and then try again would be very helpful! The file that caused the issue for me was downloaded from a small database maintained by an individual research lab, so I assume the issue was because the fasta file was likely manually updated at some point rather than machine-generated. That's just a suggestion though - I was able to find this thread and solution within easily enough and there seem to be a handful of existing fasta validator tools that could also help users identify the root cause of their issue without internalizing that logic into this suite of tools as well. P.S. thanks for MMSeqs!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896
https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896:631,Deployability,update,updated,631,"I just hit this as well. The error message doesn't make the formatting problem obvious, but after finding this thread it was a quick and easy fix to manually correct the fasta lines that start with `> ` to begin with `>`. If writing the logic to handle parsing both `> ` & `>` is more trouble than it is worth, revising the error message to indicate that the user may only need to fix the spacing issue and then try again would be very helpful! The file that caused the issue for me was downloaded from a small database maintained by an individual research lab, so I assume the issue was because the fasta file was likely manually updated at some point rather than machine-generated. That's just a suggestion though - I was able to find this thread and solution within easily enough and there seem to be a handful of existing fasta validator tools that could also help users identify the root cause of their issue without internalizing that logic into this suite of tools as well. P.S. thanks for MMSeqs!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896
https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896:35,Integrability,message,message,35,"I just hit this as well. The error message doesn't make the formatting problem obvious, but after finding this thread it was a quick and easy fix to manually correct the fasta lines that start with `> ` to begin with `>`. If writing the logic to handle parsing both `> ` & `>` is more trouble than it is worth, revising the error message to indicate that the user may only need to fix the spacing issue and then try again would be very helpful! The file that caused the issue for me was downloaded from a small database maintained by an individual research lab, so I assume the issue was because the fasta file was likely manually updated at some point rather than machine-generated. That's just a suggestion though - I was able to find this thread and solution within easily enough and there seem to be a handful of existing fasta validator tools that could also help users identify the root cause of their issue without internalizing that logic into this suite of tools as well. P.S. thanks for MMSeqs!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896
https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896:330,Integrability,message,message,330,"I just hit this as well. The error message doesn't make the formatting problem obvious, but after finding this thread it was a quick and easy fix to manually correct the fasta lines that start with `> ` to begin with `>`. If writing the logic to handle parsing both `> ` & `>` is more trouble than it is worth, revising the error message to indicate that the user may only need to fix the spacing issue and then try again would be very helpful! The file that caused the issue for me was downloaded from a small database maintained by an individual research lab, so I assume the issue was because the fasta file was likely manually updated at some point rather than machine-generated. That's just a suggestion though - I was able to find this thread and solution within easily enough and there seem to be a handful of existing fasta validator tools that could also help users identify the root cause of their issue without internalizing that logic into this suite of tools as well. P.S. thanks for MMSeqs!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896
https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896:832,Security,validat,validator,832,"I just hit this as well. The error message doesn't make the formatting problem obvious, but after finding this thread it was a quick and easy fix to manually correct the fasta lines that start with `> ` to begin with `>`. If writing the logic to handle parsing both `> ` & `>` is more trouble than it is worth, revising the error message to indicate that the user may only need to fix the spacing issue and then try again would be very helpful! The file that caused the issue for me was downloaded from a small database maintained by an individual research lab, so I assume the issue was because the fasta file was likely manually updated at some point rather than machine-generated. That's just a suggestion though - I was able to find this thread and solution within easily enough and there seem to be a handful of existing fasta validator tools that could also help users identify the root cause of their issue without internalizing that logic into this suite of tools as well. P.S. thanks for MMSeqs!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896
https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896:237,Testability,log,logic,237,"I just hit this as well. The error message doesn't make the formatting problem obvious, but after finding this thread it was a quick and easy fix to manually correct the fasta lines that start with `> ` to begin with `>`. If writing the logic to handle parsing both `> ` & `>` is more trouble than it is worth, revising the error message to indicate that the user may only need to fix the spacing issue and then try again would be very helpful! The file that caused the issue for me was downloaded from a small database maintained by an individual research lab, so I assume the issue was because the fasta file was likely manually updated at some point rather than machine-generated. That's just a suggestion though - I was able to find this thread and solution within easily enough and there seem to be a handful of existing fasta validator tools that could also help users identify the root cause of their issue without internalizing that logic into this suite of tools as well. P.S. thanks for MMSeqs!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896
https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896:941,Testability,log,logic,941,"I just hit this as well. The error message doesn't make the formatting problem obvious, but after finding this thread it was a quick and easy fix to manually correct the fasta lines that start with `> ` to begin with `>`. If writing the logic to handle parsing both `> ` & `>` is more trouble than it is worth, revising the error message to indicate that the user may only need to fix the spacing issue and then try again would be very helpful! The file that caused the issue for me was downloaded from a small database maintained by an individual research lab, so I assume the issue was because the fasta file was likely manually updated at some point rather than machine-generated. That's just a suggestion though - I was able to find this thread and solution within easily enough and there seem to be a handful of existing fasta validator tools that could also help users identify the root cause of their issue without internalizing that logic into this suite of tools as well. P.S. thanks for MMSeqs!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896
https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-830090610:82,Testability,log,log,82,Could you upload a few contigs? I am confused where it's actually crashing in the log it's crashing in `summarizealis` and in the snippet in `addtaxonomy`. It would be great to have something to reproduce the issue locally.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-830090610
https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-830092919:53,Availability,error,error,53,There you go. . These contigs specifically raise the error I uploaded. . [BL090113.txt](https://github.com/soedinglab/MMseqs2/files/6405609/BL090113.txt),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-830092919
https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831942921:54,Availability,error,error,54,"It didn't cause a crash ! . So now I had the same log error: ; ```; data/04_taxgenes/contigs_tax/14073767031253215106/easy-taxonomy.sh: line 55: 19300 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```. In output: ; ```; Time for merging to result_aln_swapped_sum: 0h 0m 48s 61ms; Time for processing: 0h 1m 27s 597ms; Error: filterdb died; ```. But doing the `gdb` run in our master node it worked without any problem. . In my cluster we work through module installation for the programs, but I wanted to try out beforehand a local copy of the bin without being properly compiled in the system. Could that be the problem?. (I am basically running `mmseqs2` executing the script as follows: `./scripts/mmseqs_latest/mmseqs/bin/mmseqs <opts>`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831942921
https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831942921:164,Availability,fault,fault,164,"It didn't cause a crash ! . So now I had the same log error: ; ```; data/04_taxgenes/contigs_tax/14073767031253215106/easy-taxonomy.sh: line 55: 19300 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```. In output: ; ```; Time for merging to result_aln_swapped_sum: 0h 0m 48s 61ms; Time for processing: 0h 1m 27s 597ms; Error: filterdb died; ```. But doing the `gdb` run in our master node it worked without any problem. . In my cluster we work through module installation for the programs, but I wanted to try out beforehand a local copy of the bin without being properly compiled in the system. Could that be the problem?. (I am basically running `mmseqs2` executing the script as follows: `./scripts/mmseqs_latest/mmseqs/bin/mmseqs <opts>`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831942921
https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831942921:423,Availability,Error,Error,423,"It didn't cause a crash ! . So now I had the same log error: ; ```; data/04_taxgenes/contigs_tax/14073767031253215106/easy-taxonomy.sh: line 55: 19300 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```. In output: ; ```; Time for merging to result_aln_swapped_sum: 0h 0m 48s 61ms; Time for processing: 0h 1m 27s 597ms; Error: filterdb died; ```. But doing the `gdb` run in our master node it worked without any problem. . In my cluster we work through module installation for the programs, but I wanted to try out beforehand a local copy of the bin without being properly compiled in the system. Could that be the problem?. (I am basically running `mmseqs2` executing the script as follows: `./scripts/mmseqs_latest/mmseqs/bin/mmseqs <opts>`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831942921
https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831942921:563,Deployability,install,installation,563,"It didn't cause a crash ! . So now I had the same log error: ; ```; data/04_taxgenes/contigs_tax/14073767031253215106/easy-taxonomy.sh: line 55: 19300 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```. In output: ; ```; Time for merging to result_aln_swapped_sum: 0h 0m 48s 61ms; Time for processing: 0h 1m 27s 597ms; Error: filterdb died; ```. But doing the `gdb` run in our master node it worked without any problem. . In my cluster we work through module installation for the programs, but I wanted to try out beforehand a local copy of the bin without being properly compiled in the system. Could that be the problem?. (I am basically running `mmseqs2` executing the script as follows: `./scripts/mmseqs_latest/mmseqs/bin/mmseqs <opts>`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831942921
https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831942921:50,Testability,log,log,50,"It didn't cause a crash ! . So now I had the same log error: ; ```; data/04_taxgenes/contigs_tax/14073767031253215106/easy-taxonomy.sh: line 55: 19300 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```. In output: ; ```; Time for merging to result_aln_swapped_sum: 0h 0m 48s 61ms; Time for processing: 0h 1m 27s 597ms; Error: filterdb died; ```. But doing the `gdb` run in our master node it worked without any problem. . In my cluster we work through module installation for the programs, but I wanted to try out beforehand a local copy of the bin without being properly compiled in the system. Could that be the problem?. (I am basically running `mmseqs2` executing the script as follows: `./scripts/mmseqs_latest/mmseqs/bin/mmseqs <opts>`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831942921
https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831988024:43,Availability,fault,fault,43,"It is always crashing with a `segmentation fault`, yup. Maybe I should re-download the taxonomic database and rerun everything? ; Some of the samples did not presented the same problem.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831988024
https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831988024:74,Availability,down,download,74,"It is always crashing with a `segmentation fault`, yup. Maybe I should re-download the taxonomic database and rerun everything? ; Some of the samples did not presented the same problem.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831988024
https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-832068919:94,Deployability,install,installed,94,"Ok maybe it is a problem on my side: ; The gdb was executed in a master node in which we have installed gdb, whereas the `while` loop is in one of the nodes, which maybe presents a different architecture. . Right now it is impossible but I will talk to my admin tomorrow to see what we can do. Thanks for your patience!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-832068919
https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-832082425:438,Testability,log,log,438,"You can also run GDB non-interactively (if thats the issue):; ```; COMMAND='mmseqs addtaxonomy ""data/databases/gtdb"" ""data/04_taxgenes/contigs_tax/latest/result_aln_swapped_sum"" ""data/04_taxgenes/contigs_tax/latest/result_aln_swapped_sum_tax"" --tax-lineage 0 --lca-ranks species,genus,family,order,class,phylum,superkingdom --pick-id-from 1 --compressed 0 --threads 48 -v 3'; gdb -batch -ex ""run"" -ex ""bt"" --args ${COMMAND} 2>&1 > output.log; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-832082425
https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-839919421:298,Availability,error,error,298,"Hello! . So I had some time to look it up. From the whole fasta I sent I had only problems with a subset of sequences. Out of the 2248 sequences I obtained the result for 2164, creating the report and the `*lca.tsv` file I am interested in. So there were 84 sequences without the taxonomy. Now the error was different and I think maybe more informative. [mmseqs_test_362352_4294967294.out.txt](https://github.com/soedinglab/MMseqs2/files/6467556/mmseqs_test_362352_4294967294.out.txt); [mmseqs_test_362352_4294967294.err.txt](https://github.com/soedinglab/MMseqs2/files/6467557/mmseqs_test_362352_4294967294.err.txt). You seem to not have any error for this sequences: . [the_no_taxonomoed.txt](https://github.com/soedinglab/MMseqs2/files/6467583/the_no_taxonomoed.txt). The database version I am using is downloaded through the last release. ; Could you share the DB you were using to check if that is the problem? . Or else we can try to arrange the interactive connection :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-839919421
https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-839919421:643,Availability,error,error,643,"Hello! . So I had some time to look it up. From the whole fasta I sent I had only problems with a subset of sequences. Out of the 2248 sequences I obtained the result for 2164, creating the report and the `*lca.tsv` file I am interested in. So there were 84 sequences without the taxonomy. Now the error was different and I think maybe more informative. [mmseqs_test_362352_4294967294.out.txt](https://github.com/soedinglab/MMseqs2/files/6467556/mmseqs_test_362352_4294967294.out.txt); [mmseqs_test_362352_4294967294.err.txt](https://github.com/soedinglab/MMseqs2/files/6467557/mmseqs_test_362352_4294967294.err.txt). You seem to not have any error for this sequences: . [the_no_taxonomoed.txt](https://github.com/soedinglab/MMseqs2/files/6467583/the_no_taxonomoed.txt). The database version I am using is downloaded through the last release. ; Could you share the DB you were using to check if that is the problem? . Or else we can try to arrange the interactive connection :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-839919421
https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-839919421:806,Availability,down,downloaded,806,"Hello! . So I had some time to look it up. From the whole fasta I sent I had only problems with a subset of sequences. Out of the 2248 sequences I obtained the result for 2164, creating the report and the `*lca.tsv` file I am interested in. So there were 84 sequences without the taxonomy. Now the error was different and I think maybe more informative. [mmseqs_test_362352_4294967294.out.txt](https://github.com/soedinglab/MMseqs2/files/6467556/mmseqs_test_362352_4294967294.out.txt); [mmseqs_test_362352_4294967294.err.txt](https://github.com/soedinglab/MMseqs2/files/6467557/mmseqs_test_362352_4294967294.err.txt). You seem to not have any error for this sequences: . [the_no_taxonomoed.txt](https://github.com/soedinglab/MMseqs2/files/6467583/the_no_taxonomoed.txt). The database version I am using is downloaded through the last release. ; Could you share the DB you were using to check if that is the problem? . Or else we can try to arrange the interactive connection :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-839919421
https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-839919421:834,Deployability,release,release,834,"Hello! . So I had some time to look it up. From the whole fasta I sent I had only problems with a subset of sequences. Out of the 2248 sequences I obtained the result for 2164, creating the report and the `*lca.tsv` file I am interested in. So there were 84 sequences without the taxonomy. Now the error was different and I think maybe more informative. [mmseqs_test_362352_4294967294.out.txt](https://github.com/soedinglab/MMseqs2/files/6467556/mmseqs_test_362352_4294967294.out.txt); [mmseqs_test_362352_4294967294.err.txt](https://github.com/soedinglab/MMseqs2/files/6467557/mmseqs_test_362352_4294967294.err.txt). You seem to not have any error for this sequences: . [the_no_taxonomoed.txt](https://github.com/soedinglab/MMseqs2/files/6467583/the_no_taxonomoed.txt). The database version I am using is downloaded through the last release. ; Could you share the DB you were using to check if that is the problem? . Or else we can try to arrange the interactive connection :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-839919421
https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-842292089:5,Availability,error,error,5,"This error is very unexpected and I can't imagine how/why it could happen. I don't think it is related to this old issue though. If you can arrange some interactive session, i'd happy to take a look.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-842292089
https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833923971:322,Availability,mask,mask,322,I found one memory issue when giving only extremely short sequences to MMseqs2.; You can probably work around this issue in release 13 by adding one fake sequence that is longer than 20 AA residues to the input file. . I would also recommend to use the following parameters `-k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0` for clustering such extremely short sequences. You might also want to add `-e inf` as E-values are essentially meaningless for such short sequences. In this case you would only cluster based on seq. id. and coverage.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833923971
https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833923971:124,Deployability,release,release,124,I found one memory issue when giving only extremely short sequences to MMseqs2.; You can probably work around this issue in release 13 by adding one fake sequence that is longer than 20 AA residues to the input file. . I would also recommend to use the following parameters `-k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0` for clustering such extremely short sequences. You might also want to add `-e inf` as E-values are essentially meaningless for such short sequences. In this case you would only cluster based on seq. id. and coverage.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833923971
https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833996332:353,Availability,mask,mask,353,"Thank you for this tip, it worked! But I get many clusters, 997 representative sequences, is there a way to reduce the number of clusters? We are trying to identify general patterns/motifs from these sequences. The command I used is:; mmseqs easy-cluster Peptide_seqs.mod.fasta Peptide_seqs_clu tmp -e inf -k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0 --min-ungapped-score 0 --min-seq-id 0.0 -c 0.0 --cov-mode 1. Thank you!. > I found one memory issue when giving only extremely short sequences to MMseqs2.; > You can probably work around this issue in release 13 by adding one fake sequence that is longer than 20 AA residues to the input file.; > ; > I would also recommend to use the following parameters `-k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0` for clustering such extremely short sequences. You might also want to add `-e inf` as E-values are essentially meaningless for such short sequences. In this case you would only cluster based on seq. id. and coverage.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833996332
https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833996332:764,Availability,mask,mask,764,"Thank you for this tip, it worked! But I get many clusters, 997 representative sequences, is there a way to reduce the number of clusters? We are trying to identify general patterns/motifs from these sequences. The command I used is:; mmseqs easy-cluster Peptide_seqs.mod.fasta Peptide_seqs_clu tmp -e inf -k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0 --min-ungapped-score 0 --min-seq-id 0.0 -c 0.0 --cov-mode 1. Thank you!. > I found one memory issue when giving only extremely short sequences to MMseqs2.; > You can probably work around this issue in release 13 by adding one fake sequence that is longer than 20 AA residues to the input file.; > ; > I would also recommend to use the following parameters `-k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0` for clustering such extremely short sequences. You might also want to add `-e inf` as E-values are essentially meaningless for such short sequences. In this case you would only cluster based on seq. id. and coverage.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833996332
https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833996332:561,Deployability,release,release,561,"Thank you for this tip, it worked! But I get many clusters, 997 representative sequences, is there a way to reduce the number of clusters? We are trying to identify general patterns/motifs from these sequences. The command I used is:; mmseqs easy-cluster Peptide_seqs.mod.fasta Peptide_seqs_clu tmp -e inf -k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0 --min-ungapped-score 0 --min-seq-id 0.0 -c 0.0 --cov-mode 1. Thank you!. > I found one memory issue when giving only extremely short sequences to MMseqs2.; > You can probably work around this issue in release 13 by adding one fake sequence that is longer than 20 AA residues to the input file.; > ; > I would also recommend to use the following parameters `-k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0` for clustering such extremely short sequences. You might also want to add `-e inf` as E-values are essentially meaningless for such short sequences. In this case you would only cluster based on seq. id. and coverage.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833996332
https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833996332:108,Energy Efficiency,reduce,reduce,108,"Thank you for this tip, it worked! But I get many clusters, 997 representative sequences, is there a way to reduce the number of clusters? We are trying to identify general patterns/motifs from these sequences. The command I used is:; mmseqs easy-cluster Peptide_seqs.mod.fasta Peptide_seqs_clu tmp -e inf -k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0 --min-ungapped-score 0 --min-seq-id 0.0 -c 0.0 --cov-mode 1. Thank you!. > I found one memory issue when giving only extremely short sequences to MMseqs2.; > You can probably work around this issue in release 13 by adding one fake sequence that is longer than 20 AA residues to the input file.; > ; > I would also recommend to use the following parameters `-k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0` for clustering such extremely short sequences. You might also want to add `-e inf` as E-values are essentially meaningless for such short sequences. In this case you would only cluster based on seq. id. and coverage.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833996332
https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833998598:283,Energy Efficiency,reduce,reduce,283,"I wouldn't turn of all three of min seq. id., coverage and e-value. You should keep a high coverage, a low sequence identity also doesn't really make a lot of sense as there isn't really enough homology signal to tell if two of these fragments belong together. I don't think you can reduce the number of representatives much more, without clustering basically random sequences with each other.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833998598
https://github.com/soedinglab/MMseqs2/issues/450#issuecomment-834598461:105,Availability,error,error,105,"That looks already like an impressive amount of work for a PoC. . A few (disjointed) thoughts:. * How is error management handled in your project? We rely on `exit()` quite heavily as you have probably noticed already and in these cases we don't free memory or file handles anymore either. Refactoring that would be a major undertaking. * We would prefer to not give API/ABI stability guarantees, ideally we would only have to worry about keeping the command line interface as stable as possible. Personally, I would have tried auto-generating bindings by extracting information from `MMseqsBase.cpp` and `Parameters.h/cpp` and keep MMseqs2 as a separate binary around. * Another thing that we have only realized a few years after having started MMseqs2 is that we have essentially build a database management system for sequence data. I think if we had the chance to reimagine MMseqs2 as something new and consumable directly through APIs I would emphasize this aspect. * Do you have any experience with Python and Rust? There is a good chance we will add the first Rust dependency within the next half year or so and we are interesting in investigating something so new modules could be written in Rust instead of C++ (but continue to use the existing C++ classes). This might make the build system much more complicated in the near future.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450#issuecomment-834598461
https://github.com/soedinglab/MMseqs2/issues/450#issuecomment-834598461:464,Integrability,interface,interface,464,"That looks already like an impressive amount of work for a PoC. . A few (disjointed) thoughts:. * How is error management handled in your project? We rely on `exit()` quite heavily as you have probably noticed already and in these cases we don't free memory or file handles anymore either. Refactoring that would be a major undertaking. * We would prefer to not give API/ABI stability guarantees, ideally we would only have to worry about keeping the command line interface as stable as possible. Personally, I would have tried auto-generating bindings by extracting information from `MMseqsBase.cpp` and `Parameters.h/cpp` and keep MMseqs2 as a separate binary around. * Another thing that we have only realized a few years after having started MMseqs2 is that we have essentially build a database management system for sequence data. I think if we had the chance to reimagine MMseqs2 as something new and consumable directly through APIs I would emphasize this aspect. * Do you have any experience with Python and Rust? There is a good chance we will add the first Rust dependency within the next half year or so and we are interesting in investigating something so new modules could be written in Rust instead of C++ (but continue to use the existing C++ classes). This might make the build system much more complicated in the near future.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450#issuecomment-834598461
https://github.com/soedinglab/MMseqs2/issues/450#issuecomment-834598461:1072,Integrability,depend,dependency,1072,"That looks already like an impressive amount of work for a PoC. . A few (disjointed) thoughts:. * How is error management handled in your project? We rely on `exit()` quite heavily as you have probably noticed already and in these cases we don't free memory or file handles anymore either. Refactoring that would be a major undertaking. * We would prefer to not give API/ABI stability guarantees, ideally we would only have to worry about keeping the command line interface as stable as possible. Personally, I would have tried auto-generating bindings by extracting information from `MMseqsBase.cpp` and `Parameters.h/cpp` and keep MMseqs2 as a separate binary around. * Another thing that we have only realized a few years after having started MMseqs2 is that we have essentially build a database management system for sequence data. I think if we had the chance to reimagine MMseqs2 as something new and consumable directly through APIs I would emphasize this aspect. * Do you have any experience with Python and Rust? There is a good chance we will add the first Rust dependency within the next half year or so and we are interesting in investigating something so new modules could be written in Rust instead of C++ (but continue to use the existing C++ classes). This might make the build system much more complicated in the near future.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450#issuecomment-834598461
https://github.com/soedinglab/MMseqs2/issues/450#issuecomment-834598461:290,Modifiability,Refactor,Refactoring,290,"That looks already like an impressive amount of work for a PoC. . A few (disjointed) thoughts:. * How is error management handled in your project? We rely on `exit()` quite heavily as you have probably noticed already and in these cases we don't free memory or file handles anymore either. Refactoring that would be a major undertaking. * We would prefer to not give API/ABI stability guarantees, ideally we would only have to worry about keeping the command line interface as stable as possible. Personally, I would have tried auto-generating bindings by extracting information from `MMseqsBase.cpp` and `Parameters.h/cpp` and keep MMseqs2 as a separate binary around. * Another thing that we have only realized a few years after having started MMseqs2 is that we have essentially build a database management system for sequence data. I think if we had the chance to reimagine MMseqs2 as something new and consumable directly through APIs I would emphasize this aspect. * Do you have any experience with Python and Rust? There is a good chance we will add the first Rust dependency within the next half year or so and we are interesting in investigating something so new modules could be written in Rust instead of C++ (but continue to use the existing C++ classes). This might make the build system much more complicated in the near future.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450#issuecomment-834598461
https://github.com/soedinglab/MMseqs2/issues/454#issuecomment-843144980:98,Availability,error,error,98,"Thanks a lot for your response. I tried reducing with ""-k 5"" which improved a bit and then got an error when trying ""-k 4"".; But isn't it doing a BLASTP against translated ORFs anyhow?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/454#issuecomment-843144980
https://github.com/soedinglab/MMseqs2/issues/454#issuecomment-843192525:17,Usability,simpl,simplified,17,"OK, maybe I over simplified the question because I was actually counting merged hits with a minimum size of 520 nt (empirical, a bit less than RT size).; I indeed get 37061 hits with mmseqs, 34268 remain after merging overlaping hits, and 1099 merged hits pass the size filter.; With blast+, I get 8159 hits, 6262 merged, and 2947 merged hits pass the size filter.; So yes, I get more raw hits with mmseqs but they are short :(; Sorry for misleading at first !",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/454#issuecomment-843192525
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843099893:154,Availability,mask,mask,154,I've run into the same issue with our own slurm. You probably need to use `-c` (`--cpus-per-task`) instead of `--ntasks`. The later sets the CPU affinity mask so that all threads get assigned to the same core. . Try `--ntasks 1 -c 128`.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843099893
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843135326:211,Testability,test,tests,211,"Hi,. So last night I deleted the folder which contained the package and compiled; it again without using any comes environment, and I didn't have any issues,; however the issue still persists. I was doing small tests using an; interactive sessions using 4 cores, and the jobs always were killed with; signal 9. For what I found in the internet that happens when I run out of; memory, will that be the case?. Francisco. On Tue, May 18, 2021, 6:46 AM Milot Mirdita ***@***.***>; wrote:. > Do you have more details what went wrong with the MPI build? We didn't; > have any recent issues with it.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843100327>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AMXRGM7YLDLFT2TOJ5NVU73TOJHRFANCNFSM45B6ZNIQ>; > .; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843135326
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843139013:24,Testability,log,log,24,Could you post the full log of the MPI run when you get the chance? Did using `-c` work for the other issue?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843139013
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604:51,Availability,error,error,51,"When I got to run this job using mpirun I got this error: . [cpu-23-1:104192] *** Process received signal ***; [cpu-23-1:104192] Signal: Bus error (7); [cpu-23-1:104192] Signal code: Non-existant physical address (2); [cpu-23-1:104192] Failing at address: 0x148bd2954aee; [cpu-23-1:104230] *** Process received signal ***; [cpu-23-1:104230] Signal: Bus error (7); [cpu-23-1:104230] Signal code: Non-existant physical address (2); [cpu-23-1:104230] Failing at address: 0x14758c03a9e9; [cpu-23-1:104233] *** Process received signal ***; [cpu-23-1:104233] Signal: Bus error (7); [cpu-23-1:104233] Signal code: Non-existant physical address (2); [cpu-23-1:104233] Failing at address: 0x151209f6d9c4; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 89 with PID 0 on node cpu-23-1 exited on signal 7 (Bus error).; --------------------------------------------------------------------------. And this one a couple more times:. --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; slurmstepd: error: *** JOB 1369194 ON cpu-25-49 CANCELLED AT 2021-05-17T19:07:03 DUE TO NODE FAILURE, SEE SLURMCTLD LOG FOR DETAILS ***; --------------------------------------------------------------------------; mpirun noticed that process rank 65 with PID 0 on node cpu-25-49 exited on signal 9 (Killed).; --------------------------------------------------------------------------. Now I'm trying to run the job using the script you also include in your manual . ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604:141,Availability,error,error,141,"When I got to run this job using mpirun I got this error: . [cpu-23-1:104192] *** Process received signal ***; [cpu-23-1:104192] Signal: Bus error (7); [cpu-23-1:104192] Signal code: Non-existant physical address (2); [cpu-23-1:104192] Failing at address: 0x148bd2954aee; [cpu-23-1:104230] *** Process received signal ***; [cpu-23-1:104230] Signal: Bus error (7); [cpu-23-1:104230] Signal code: Non-existant physical address (2); [cpu-23-1:104230] Failing at address: 0x14758c03a9e9; [cpu-23-1:104233] *** Process received signal ***; [cpu-23-1:104233] Signal: Bus error (7); [cpu-23-1:104233] Signal code: Non-existant physical address (2); [cpu-23-1:104233] Failing at address: 0x151209f6d9c4; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 89 with PID 0 on node cpu-23-1 exited on signal 7 (Bus error).; --------------------------------------------------------------------------. And this one a couple more times:. --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; slurmstepd: error: *** JOB 1369194 ON cpu-25-49 CANCELLED AT 2021-05-17T19:07:03 DUE TO NODE FAILURE, SEE SLURMCTLD LOG FOR DETAILS ***; --------------------------------------------------------------------------; mpirun noticed that process rank 65 with PID 0 on node cpu-25-49 exited on signal 9 (Killed).; --------------------------------------------------------------------------. Now I'm trying to run the job using the script you also include in your manual . ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604:353,Availability,error,error,353,"When I got to run this job using mpirun I got this error: . [cpu-23-1:104192] *** Process received signal ***; [cpu-23-1:104192] Signal: Bus error (7); [cpu-23-1:104192] Signal code: Non-existant physical address (2); [cpu-23-1:104192] Failing at address: 0x148bd2954aee; [cpu-23-1:104230] *** Process received signal ***; [cpu-23-1:104230] Signal: Bus error (7); [cpu-23-1:104230] Signal code: Non-existant physical address (2); [cpu-23-1:104230] Failing at address: 0x14758c03a9e9; [cpu-23-1:104233] *** Process received signal ***; [cpu-23-1:104233] Signal: Bus error (7); [cpu-23-1:104233] Signal code: Non-existant physical address (2); [cpu-23-1:104233] Failing at address: 0x151209f6d9c4; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 89 with PID 0 on node cpu-23-1 exited on signal 7 (Bus error).; --------------------------------------------------------------------------. And this one a couple more times:. --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; slurmstepd: error: *** JOB 1369194 ON cpu-25-49 CANCELLED AT 2021-05-17T19:07:03 DUE TO NODE FAILURE, SEE SLURMCTLD LOG FOR DETAILS ***; --------------------------------------------------------------------------; mpirun noticed that process rank 65 with PID 0 on node cpu-25-49 exited on signal 9 (Killed).; --------------------------------------------------------------------------. Now I'm trying to run the job using the script you also include in your manual . ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604:565,Availability,error,error,565,"When I got to run this job using mpirun I got this error: . [cpu-23-1:104192] *** Process received signal ***; [cpu-23-1:104192] Signal: Bus error (7); [cpu-23-1:104192] Signal code: Non-existant physical address (2); [cpu-23-1:104192] Failing at address: 0x148bd2954aee; [cpu-23-1:104230] *** Process received signal ***; [cpu-23-1:104230] Signal: Bus error (7); [cpu-23-1:104230] Signal code: Non-existant physical address (2); [cpu-23-1:104230] Failing at address: 0x14758c03a9e9; [cpu-23-1:104233] *** Process received signal ***; [cpu-23-1:104233] Signal: Bus error (7); [cpu-23-1:104233] Signal code: Non-existant physical address (2); [cpu-23-1:104233] Failing at address: 0x151209f6d9c4; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 89 with PID 0 on node cpu-23-1 exited on signal 7 (Bus error).; --------------------------------------------------------------------------. And this one a couple more times:. --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; slurmstepd: error: *** JOB 1369194 ON cpu-25-49 CANCELLED AT 2021-05-17T19:07:03 DUE TO NODE FAILURE, SEE SLURMCTLD LOG FOR DETAILS ***; --------------------------------------------------------------------------; mpirun noticed that process rank 65 with PID 0 on node cpu-25-49 exited on signal 9 (Killed).; --------------------------------------------------------------------------. Now I'm trying to run the job using the script you also include in your manual . ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604:1138,Availability,error,error,1138,"is job using mpirun I got this error: . [cpu-23-1:104192] *** Process received signal ***; [cpu-23-1:104192] Signal: Bus error (7); [cpu-23-1:104192] Signal code: Non-existant physical address (2); [cpu-23-1:104192] Failing at address: 0x148bd2954aee; [cpu-23-1:104230] *** Process received signal ***; [cpu-23-1:104230] Signal: Bus error (7); [cpu-23-1:104230] Signal code: Non-existant physical address (2); [cpu-23-1:104230] Failing at address: 0x14758c03a9e9; [cpu-23-1:104233] *** Process received signal ***; [cpu-23-1:104233] Signal: Bus error (7); [cpu-23-1:104233] Signal code: Non-existant physical address (2); [cpu-23-1:104233] Failing at address: 0x151209f6d9c4; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 89 with PID 0 on node cpu-23-1 exited on signal 7 (Bus error).; --------------------------------------------------------------------------. And this one a couple more times:. --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; slurmstepd: error: *** JOB 1369194 ON cpu-25-49 CANCELLED AT 2021-05-17T19:07:03 DUE TO NODE FAILURE, SEE SLURMCTLD LOG FOR DETAILS ***; --------------------------------------------------------------------------; mpirun noticed that process rank 65 with PID 0 on node cpu-25-49 exited on signal 9 (Killed).; --------------------------------------------------------------------------. Now I'm trying to run the job using the script you also include in your manual . mmseqs createdb ""${Q",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604:1548,Availability,error,error,1548,"1:104233] Failing at address: 0x151209f6d9c4; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 89 with PID 0 on node cpu-23-1 exited on signal 7 (Bus error).; --------------------------------------------------------------------------. And this one a couple more times:. --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; slurmstepd: error: *** JOB 1369194 ON cpu-25-49 CANCELLED AT 2021-05-17T19:07:03 DUE TO NODE FAILURE, SEE SLURMCTLD LOG FOR DETAILS ***; --------------------------------------------------------------------------; mpirun noticed that process rank 65 with PID 0 on node cpu-25-49 exited on signal 9 (Killed).; --------------------------------------------------------------------------. Now I'm trying to run the job using the script you also include in your manual . mmseqs createdb ""${QUERYFASTA}"" ""${QUERYDB}""; mmseqs splitdb ""${QUERYDB}"" ""${QUERYDB}_split"" --split $SPLITS. for file in $(ls ""${QUERYDB}_split""_*_$SPLITS); do; mmseqs createsubdb ""${file}.index"" ""${QUERYDB}_h"" ""${file}_h""; done. split=0; for file in $(ls ""${QUERYDB}_split""_*_$SPLITS); do; RUNNER=""mpirun -np 128 -p nocona"" bsub mmseqs cluster ""${file}"" chiropteraDB aln_${split} tmp --cov-mode 1 -c 0.9 --threads 128; ((split++)); done. So far I don't have a result out of it because the job is waiting for resources, I just added the -p nocona argument because I got an error stating that the job couldn't be batched if I didn't mention the part",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604:1629,Availability,FAILURE,FAILURE,1629,"1:104233] Failing at address: 0x151209f6d9c4; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 89 with PID 0 on node cpu-23-1 exited on signal 7 (Bus error).; --------------------------------------------------------------------------. And this one a couple more times:. --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; slurmstepd: error: *** JOB 1369194 ON cpu-25-49 CANCELLED AT 2021-05-17T19:07:03 DUE TO NODE FAILURE, SEE SLURMCTLD LOG FOR DETAILS ***; --------------------------------------------------------------------------; mpirun noticed that process rank 65 with PID 0 on node cpu-25-49 exited on signal 9 (Killed).; --------------------------------------------------------------------------. Now I'm trying to run the job using the script you also include in your manual . mmseqs createdb ""${QUERYFASTA}"" ""${QUERYDB}""; mmseqs splitdb ""${QUERYDB}"" ""${QUERYDB}_split"" --split $SPLITS. for file in $(ls ""${QUERYDB}_split""_*_$SPLITS); do; mmseqs createsubdb ""${file}.index"" ""${QUERYDB}_h"" ""${file}_h""; done. split=0; for file in $(ls ""${QUERYDB}_split""_*_$SPLITS); do; RUNNER=""mpirun -np 128 -p nocona"" bsub mmseqs cluster ""${file}"" chiropteraDB aln_${split} tmp --cov-mode 1 -c 0.9 --threads 128; ((split++)); done. So far I don't have a result out of it because the job is waiting for resources, I just added the -p nocona argument because I got an error stating that the job couldn't be batched if I didn't mention the part",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604:2575,Availability,error,error,2575,"-----------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 89 with PID 0 on node cpu-23-1 exited on signal 7 (Bus error).; --------------------------------------------------------------------------. And this one a couple more times:. --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; slurmstepd: error: *** JOB 1369194 ON cpu-25-49 CANCELLED AT 2021-05-17T19:07:03 DUE TO NODE FAILURE, SEE SLURMCTLD LOG FOR DETAILS ***; --------------------------------------------------------------------------; mpirun noticed that process rank 65 with PID 0 on node cpu-25-49 exited on signal 9 (Killed).; --------------------------------------------------------------------------. Now I'm trying to run the job using the script you also include in your manual . mmseqs createdb ""${QUERYFASTA}"" ""${QUERYDB}""; mmseqs splitdb ""${QUERYDB}"" ""${QUERYDB}_split"" --split $SPLITS. for file in $(ls ""${QUERYDB}_split""_*_$SPLITS); do; mmseqs createsubdb ""${file}.index"" ""${QUERYDB}_h"" ""${file}_h""; done. split=0; for file in $(ls ""${QUERYDB}_split""_*_$SPLITS); do; RUNNER=""mpirun -np 128 -p nocona"" bsub mmseqs cluster ""${file}"" chiropteraDB aln_${split} tmp --cov-mode 1 -c 0.9 --threads 128; ((split++)); done. So far I don't have a result out of it because the job is waiting for resources, I just added the -p nocona argument because I got an error stating that the job couldn't be batched if I didn't mention the partition. . I don't understand where I should the -c argument, I'm already using -c 0.9 , is that what you mean?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604:888,Safety,abort,aborted,888,"When I got to run this job using mpirun I got this error: . [cpu-23-1:104192] *** Process received signal ***; [cpu-23-1:104192] Signal: Bus error (7); [cpu-23-1:104192] Signal code: Non-existant physical address (2); [cpu-23-1:104192] Failing at address: 0x148bd2954aee; [cpu-23-1:104230] *** Process received signal ***; [cpu-23-1:104230] Signal: Bus error (7); [cpu-23-1:104230] Signal code: Non-existant physical address (2); [cpu-23-1:104230] Failing at address: 0x14758c03a9e9; [cpu-23-1:104233] *** Process received signal ***; [cpu-23-1:104233] Signal: Bus error (7); [cpu-23-1:104233] Signal code: Non-existant physical address (2); [cpu-23-1:104233] Failing at address: 0x151209f6d9c4; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 89 with PID 0 on node cpu-23-1 exited on signal 7 (Bus error).; --------------------------------------------------------------------------. And this one a couple more times:. --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; slurmstepd: error: *** JOB 1369194 ON cpu-25-49 CANCELLED AT 2021-05-17T19:07:03 DUE TO NODE FAILURE, SEE SLURMCTLD LOG FOR DETAILS ***; --------------------------------------------------------------------------; mpirun noticed that process rank 65 with PID 0 on node cpu-25-49 exited on signal 9 (Killed).; --------------------------------------------------------------------------. Now I'm trying to run the job using the script you also include in your manual . ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604:1450,Safety,abort,aborted,1450,"23-1:104230] Failing at address: 0x14758c03a9e9; [cpu-23-1:104233] *** Process received signal ***; [cpu-23-1:104233] Signal: Bus error (7); [cpu-23-1:104233] Signal code: Non-existant physical address (2); [cpu-23-1:104233] Failing at address: 0x151209f6d9c4; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 89 with PID 0 on node cpu-23-1 exited on signal 7 (Bus error).; --------------------------------------------------------------------------. And this one a couple more times:. --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; slurmstepd: error: *** JOB 1369194 ON cpu-25-49 CANCELLED AT 2021-05-17T19:07:03 DUE TO NODE FAILURE, SEE SLURMCTLD LOG FOR DETAILS ***; --------------------------------------------------------------------------; mpirun noticed that process rank 65 with PID 0 on node cpu-25-49 exited on signal 9 (Killed).; --------------------------------------------------------------------------. Now I'm trying to run the job using the script you also include in your manual . mmseqs createdb ""${QUERYFASTA}"" ""${QUERYDB}""; mmseqs splitdb ""${QUERYDB}"" ""${QUERYDB}_split"" --split $SPLITS. for file in $(ls ""${QUERYDB}_split""_*_$SPLITS); do; mmseqs createsubdb ""${file}.index"" ""${QUERYDB}_h"" ""${file}_h""; done. split=0; for file in $(ls ""${QUERYDB}_split""_*_$SPLITS); do; RUNNER=""mpirun -np 128 -p nocona"" bsub mmseqs cluster ""${file}"" chiropteraDB aln_${split} tmp --cov-mode 1 -c 0.9 --threads 128; ((split++)); ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604:1652,Testability,LOG,LOG,1652,"1:104233] Failing at address: 0x151209f6d9c4; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 89 with PID 0 on node cpu-23-1 exited on signal 7 (Bus error).; --------------------------------------------------------------------------. And this one a couple more times:. --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; slurmstepd: error: *** JOB 1369194 ON cpu-25-49 CANCELLED AT 2021-05-17T19:07:03 DUE TO NODE FAILURE, SEE SLURMCTLD LOG FOR DETAILS ***; --------------------------------------------------------------------------; mpirun noticed that process rank 65 with PID 0 on node cpu-25-49 exited on signal 9 (Killed).; --------------------------------------------------------------------------. Now I'm trying to run the job using the script you also include in your manual . mmseqs createdb ""${QUERYFASTA}"" ""${QUERYDB}""; mmseqs splitdb ""${QUERYDB}"" ""${QUERYDB}_split"" --split $SPLITS. for file in $(ls ""${QUERYDB}_split""_*_$SPLITS); do; mmseqs createsubdb ""${file}.index"" ""${QUERYDB}_h"" ""${file}_h""; done. split=0; for file in $(ls ""${QUERYDB}_split""_*_$SPLITS); do; RUNNER=""mpirun -np 128 -p nocona"" bsub mmseqs cluster ""${file}"" chiropteraDB aln_${split} tmp --cov-mode 1 -c 0.9 --threads 128; ((split++)); done. So far I don't have a result out of it because the job is waiting for resources, I just added the -p nocona argument because I got an error stating that the job couldn't be batched if I didn't mention the part",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844021092:137,Availability,error,error,137,I meant the SLURM parameter `--cpus-per-task` that is abbreviated to `-c`. Sorry for the confusion. . That seems like an extremely weird error. Is the working directory in which the command is running shared between all nodes (e.g. NFS etc)?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844021092
https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844277969:145,Availability,error,error,145,"I'm pasting below the whole script I'm trying to run right now:. #!/bin/bash; #SBATCH --job-name=chiro_mt; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=nocona; #SBATCH --nodes=2; #SBATCH --ntasks=256; #SBATCH --reservation=benchmark. module --ignore-cache load gcc/10.2.0 openmpi/4.0.4 . INPUTDIR=~/input; MMSEQ=~/MMseqs2/bin; SPLITS=3; QUERYFASTA=all_species.fasta; QUERYDB=DB. cd $INPUTDIR. mmseqs createdb ""${QUERYFASTA}"" ""${QUERYDB}""; mmseqs splitdb ""${QUERYDB}"" ""${QUERYDB}_split"" --split $SPLITS. for file in $(ls ""$INPUTDIR/${QUERYDB}_split""_*_$SPLITS); do; mmseqs createsubdb ""${file}.index"" ""${QUERYDB}_h"" ""${file}_h""; done. split=0; for file in $(ls ""$INPUTDIR/${QUERYDB}_split""_*_$SPLITS); do; RUNNER=""mpirun -np 128"" bsub mmseqs cluster ""${file}"" DB aln_${split} tmp --cov-mode 1 -c 0.9 --threads 128; ((split++)); done. So far what I understand is that the MPI version is used to run MMseqs2 on multiple servers but to run it in multiple cores, will the ""simple"" version work? I think that for the kind of job I'm doing right now, being able to run it on 128 cores on a single node will be enough, or is the workflow the same for what I pasted above? Thanks a lot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844277969
