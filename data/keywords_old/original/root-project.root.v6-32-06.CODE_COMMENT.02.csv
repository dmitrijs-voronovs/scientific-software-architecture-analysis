id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:355,Availability,error,error,355,"////////////////////////////////////////////////////////////////////////////////; /// Returns all group info in the UserGroup_t structure. The only active; /// fields in the UserGroup_t structure for this call are:; /// - fGid and fGroup; /// If group = 0, returns current user's group. The returned structure; /// must be deleted by the user. In case of error 0 is returned.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:184,Modifiability,variab,variable,184,"//---- environment manipulation ------------------------------------------------; ////////////////////////////////////////////////////////////////////////////////; /// Set environment variable.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:104,Modifiability,variab,variable,104,"////////////////////////////////////////////////////////////////////////////////; /// Unset environment variable.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:102,Modifiability,variab,variable,102,"////////////////////////////////////////////////////////////////////////////////; /// Get environment variable.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:14,Testability,Log,Logging,14,"//---- System Logging ----------------------------------------------------------; ////////////////////////////////////////////////////////////////////////////////; /// Open connection to system log daemon. For the use of the options and; /// facility see the Unix openlog man page.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:194,Testability,log,log,194,"//---- System Logging ----------------------------------------------------------; ////////////////////////////////////////////////////////////////////////////////; /// Open connection to system log daemon. For the use of the options and; /// facility see the Unix openlog man page.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:159,Integrability,message,message,159,"////////////////////////////////////////////////////////////////////////////////; /// Send mess to syslog daemon. Level is the logging level and mess the; /// message that will be written on the log.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:127,Testability,log,logging,127,"////////////////////////////////////////////////////////////////////////////////; /// Send mess to syslog daemon. Level is the logging level and mess the; /// message that will be written on the log.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:195,Testability,log,log,195,"////////////////////////////////////////////////////////////////////////////////; /// Send mess to syslog daemon. Level is the logging level and mess the; /// message that will be written on the log.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:113,Testability,log,log,113,"////////////////////////////////////////////////////////////////////////////////; /// Close connection to system log daemon.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:888,Availability,error,error,888,"//---- Standard output redirection ---------------------------------------------; ////////////////////////////////////////////////////////////////////////////////; /// Redirect standard output (stdout, stderr) to the specified file.; /// If the file argument is 0 the output is set again to stderr, stdout.; /// The second argument specifies whether the output should be added to the; /// file (""a"", default) or the file be truncated before (""w"").; /// The implementations of this function save internally the current state into; /// a static structure.; ///; /// The call can be made reentrant by specifying the opaque structure pointed; /// by 'h', which is filled with the relevant information. The handle 'h'; /// obtained on the first call must then be used in any subsequent call,; /// included ShowOutput, to display the redirected output.; /// Returns 0 on success, -1 in case of error.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:16,Security,access,access,16,"// ... and file access",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:3,Deployability,Update,Update,3,"// Update counters",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:15,Performance,Load,Loading,15,"//---- Dynamic Loading ---------------------------------------------------------; ////////////////////////////////////////////////////////////////////////////////; /// Add a new directory to the dynamic path.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:76,Testability,test,test,76,"// Files on same inode (but this is not unique on AFS so we need the next 2 test",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:230,Availability,error,error,230,"////////////////////////////////////////////////////////////////////////////////; /// Load a shared library. Returns 0 on successful loading, 1 in; /// case lib was already loaded, -1 in case lib does not exist; /// or in case of error and -2 in case of version mismatch.; /// When entry is specified the loaded lib is; /// searched for this entry point (return -1 when entry does not exist,; /// 0 otherwise). When the system flag is kTRUE, the library is considered; /// a permanent system library that should not be unloaded during the; /// course of the session.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load a shared library. Returns 0 on successful loading, 1 in; /// case lib was already loaded, -1 in case lib does not exist; /// or in case of error and -2 in case of version mismatch.; /// When entry is specified the loaded lib is; /// searched for this entry point (return -1 when entry does not exist,; /// 0 otherwise). When the system flag is kTRUE, the library is considered; /// a permanent system library that should not be unloaded during the; /// course of the session.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:133,Performance,load,loading,133,"////////////////////////////////////////////////////////////////////////////////; /// Load a shared library. Returns 0 on successful loading, 1 in; /// case lib was already loaded, -1 in case lib does not exist; /// or in case of error and -2 in case of version mismatch.; /// When entry is specified the loaded lib is; /// searched for this entry point (return -1 when entry does not exist,; /// 0 otherwise). When the system flag is kTRUE, the library is considered; /// a permanent system library that should not be unloaded during the; /// course of the session.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:173,Performance,load,loaded,173,"////////////////////////////////////////////////////////////////////////////////; /// Load a shared library. Returns 0 on successful loading, 1 in; /// case lib was already loaded, -1 in case lib does not exist; /// or in case of error and -2 in case of version mismatch.; /// When entry is specified the loaded lib is; /// searched for this entry point (return -1 when entry does not exist,; /// 0 otherwise). When the system flag is kTRUE, the library is considered; /// a permanent system library that should not be unloaded during the; /// course of the session.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:305,Performance,load,loaded,305,"////////////////////////////////////////////////////////////////////////////////; /// Load a shared library. Returns 0 on successful loading, 1 in; /// case lib was already loaded, -1 in case lib does not exist; /// or in case of error and -2 in case of version mismatch.; /// When entry is specified the loaded lib is; /// searched for this entry point (return -1 when entry does not exist,; /// 0 otherwise). When the system flag is kTRUE, the library is considered; /// a permanent system library that should not be unloaded during the; /// course of the session.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:9,Performance,load,load,9,"// don't load libraries that have already been loaded",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:47,Performance,load,loaded,47,"// don't load libraries that have already been loaded",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:14,Testability,test,test,14,"// No need to test for len here, at worse idx==len and lib[idx]=='\0'",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:12,Integrability,depend,dependent,12,"// load any dependent libraries",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:3,Performance,load,load,3,"// load any dependent libraries",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:85,Performance,Load,Load,85,"///////////////////////////////////////////////////////////////////////////////; /// Load all libraries known to ROOT via the rootmap system.; /// Returns the number of top level libraries successfully loaded.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:202,Performance,load,loaded,202,"///////////////////////////////////////////////////////////////////////////////; /// Load all libraries known to ROOT via the rootmap system.; /// Returns the number of top level libraries successfully loaded.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:41,Performance,load,load,41,"// check that none of the libs failed to load",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:31,Integrability,depend,dependencies,31,"// don't load it or any of its dependencies",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:9,Performance,load,load,9,"// don't load it or any of its dependencies",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:33,Performance,load,loaded,33,"// ignore libCore - it's already loaded",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:8,Performance,load,load,8,"// just load the first library - TSystem will do the rest.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:152,Deployability,update,updated,152,"////////////////////////////////////////////////////////////////////////////////; /// Find a dynamic library using the system search paths. lib will be updated; /// to contain the absolute filename if found. Returns lib if found, or NULL; /// if a library called lib was not found.; /// This function does not open the library.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:95,Performance,load,loaded,95,"////////////////////////////////////////////////////////////////////////////////; /// List the loaded shared libraries.; /// `regexp` is a regular expression allowing to filter the list.; ///; /// Examples:; ///; /// The following line lists all the libraries currently loaded:; /// ~~~ {.cpp}; /// gSystem->ListLibraries(); /// ~~~; ///; /// The following line lists all the libraries currently loaded having ""RIO"" in their names:; /// ~~~ {.cpp}; /// gSystem->ListLibraries("".*RIO.*""); /// ~~~",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:270,Performance,load,loaded,270,"////////////////////////////////////////////////////////////////////////////////; /// List the loaded shared libraries.; /// `regexp` is a regular expression allowing to filter the list.; ///; /// Examples:; ///; /// The following line lists all the libraries currently loaded:; /// ~~~ {.cpp}; /// gSystem->ListLibraries(); /// ~~~; ///; /// The following line lists all the libraries currently loaded having ""RIO"" in their names:; /// ~~~ {.cpp}; /// gSystem->ListLibraries("".*RIO.*""); /// ~~~",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:396,Performance,load,loaded,396,"////////////////////////////////////////////////////////////////////////////////; /// List the loaded shared libraries.; /// `regexp` is a regular expression allowing to filter the list.; ///; /// Examples:; ///; /// The following line lists all the libraries currently loaded:; /// ~~~ {.cpp}; /// gSystem->ListLibraries(); /// ~~~; ///; /// The following line lists all the libraries currently loaded having ""RIO"" in their names:; /// ~~~ {.cpp}; /// gSystem->ListLibraries("".*RIO.*""); /// ~~~",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:138,Availability,error,error,138,"////////////////////////////////////////////////////////////////////////////////; /// Return the thread local storage for the custom last error message",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:144,Integrability,message,message,144,"////////////////////////////////////////////////////////////////////////////////; /// Return the thread local storage for the custom last error message",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:138,Availability,error,error,138,"////////////////////////////////////////////////////////////////////////////////; /// Return the thread local storage for the custom last error message",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:144,Integrability,message,message,144,"////////////////////////////////////////////////////////////////////////////////; /// Return the thread local storage for the custom last error message",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:215,Availability,error,error,215,"////////////////////////////////////////////////////////////////////////////////; /// Get list of shared libraries loaded at the start of the executable.; /// Returns 0 in case list cannot be obtained or in case of error.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:115,Performance,load,loaded,115,"////////////////////////////////////////////////////////////////////////////////; /// Get list of shared libraries loaded at the start of the executable.; /// Returns 0 in case list cannot be obtained or in case of error.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:577,Availability,avail,available,577,"////////////////////////////////////////////////////////////////////////////////; /// Return a space separated list of loaded shared libraries.; /// Regexp is a wildcard expression, see TRegexp::MakeWildcard.; /// This list is of a format suitable for a linker, i.e it may contain; /// -Lpathname and/or -lNameOfLib.; /// Option can be any of:; /// - S: shared libraries loaded at the start of the executable, because; /// they were specified on the link line.; /// - D: shared libraries dynamically loaded after the start of the program.; /// - L: this option is ignored, and available for backward compatibility.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:119,Performance,load,loaded,119,"////////////////////////////////////////////////////////////////////////////////; /// Return a space separated list of loaded shared libraries.; /// Regexp is a wildcard expression, see TRegexp::MakeWildcard.; /// This list is of a format suitable for a linker, i.e it may contain; /// -Lpathname and/or -lNameOfLib.; /// Option can be any of:; /// - S: shared libraries loaded at the start of the executable, because; /// they were specified on the link line.; /// - D: shared libraries dynamically loaded after the start of the program.; /// - L: this option is ignored, and available for backward compatibility.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:371,Performance,load,loaded,371,"////////////////////////////////////////////////////////////////////////////////; /// Return a space separated list of loaded shared libraries.; /// Regexp is a wildcard expression, see TRegexp::MakeWildcard.; /// This list is of a format suitable for a linker, i.e it may contain; /// -Lpathname and/or -lNameOfLib.; /// Option can be any of:; /// - S: shared libraries loaded at the start of the executable, because; /// they were specified on the link line.; /// - D: shared libraries dynamically loaded after the start of the program.; /// - L: this option is ignored, and available for backward compatibility.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:500,Performance,load,loaded,500,"////////////////////////////////////////////////////////////////////////////////; /// Return a space separated list of loaded shared libraries.; /// Regexp is a wildcard expression, see TRegexp::MakeWildcard.; /// This list is of a format suitable for a linker, i.e it may contain; /// -Lpathname and/or -lNameOfLib.; /// Option can be any of:; /// - S: shared libraries loaded at the start of the executable, because; /// they were specified on the link line.; /// - D: shared libraries dynamically loaded after the start of the program.; /// - L: this option is ignored, and available for backward compatibility.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:54,Performance,load,loaded,54,"// Cint currently register all libraries that; // are loaded and have a dictionary in them, this; // includes all the libraries that are included; // in the list of (hard) linked libraries.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:56,Performance,load,loaded,56,"// We need to remove the libraries that are dynamically loaded and not linked",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:181,Integrability,Protocol,Protocol,181,"//---- RPC ---------------------------------------------------------------------; ////////////////////////////////////////////////////////////////////////////////; /// Get Internet Protocol (IP) address of host.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:99,Integrability,Protocol,Protocol,99,"////////////////////////////////////////////////////////////////////////////////; /// Get Internet Protocol (IP) address of remote host and port #.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:99,Integrability,Protocol,Protocol,99,"////////////////////////////////////////////////////////////////////////////////; /// Get Internet Protocol (IP) address of host and port #.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:306,Availability,error,error,306,"//---- System, CPU and Memory info ---------------------------------------------; ////////////////////////////////////////////////////////////////////////////////; /// Returns static system info, like OS type, CPU type, number of CPUs; /// RAM size, etc into the SysInfo_t structure. Returns -1 in case of error,; /// 0 otherwise.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:182,Availability,error,error,182,"////////////////////////////////////////////////////////////////////////////////; /// Returns cpu load average and load info into the CpuInfo_t structure.; /// Returns -1 in case of error, 0 otherwise. Use sampleTime to set the; /// interval over which the CPU load will be measured, in ms (default 1000).",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:98,Performance,load,load,98,"////////////////////////////////////////////////////////////////////////////////; /// Returns cpu load average and load info into the CpuInfo_t structure.; /// Returns -1 in case of error, 0 otherwise. Use sampleTime to set the; /// interval over which the CPU load will be measured, in ms (default 1000).",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:115,Performance,load,load,115,"////////////////////////////////////////////////////////////////////////////////; /// Returns cpu load average and load info into the CpuInfo_t structure.; /// Returns -1 in case of error, 0 otherwise. Use sampleTime to set the; /// interval over which the CPU load will be measured, in ms (default 1000).",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:261,Performance,load,load,261,"////////////////////////////////////////////////////////////////////////////////; /// Returns cpu load average and load info into the CpuInfo_t structure.; /// Returns -1 in case of error, 0 otherwise. Use sampleTime to set the; /// interval over which the CPU load will be measured, in ms (default 1000).",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:182,Availability,error,error,182,"////////////////////////////////////////////////////////////////////////////////; /// Returns ram and swap memory usage info into the MemInfo_t structure.; /// Returns -1 in case of error, 0 otherwise.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:188,Availability,error,error,188,"////////////////////////////////////////////////////////////////////////////////; /// Returns cpu and memory used by this process into the ProcInfo_t structure.; /// Returns -1 in case of error, 0 otherwise.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:14,Availability,avail,availability,14,"// else check availability of cygpath...",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:16,Integrability,depend,dependency,16,"// Generate the dependency via standard output, not searching the; // standard include directories,",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:7,Integrability,depend,dependency,7,"// Add dependency on rootcling.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:273,Availability,error,error,273,"////////////////////////////////////////////////////////////////////////////////; /// This method compiles and loads a shared library containing; /// the code from the file ""filename"".; ///; /// The return value is true (1) in case of success and false (0); /// in case of error.; ///; /// The possible options are:; /// - k : keep the shared library after the session end.; /// - f : force recompilation.; /// - g : compile with debug symbol; /// - O : optimized the code; /// - c : compile only, do not attempt to load the library.; /// - s : silence all informational output; /// - v : output all information output; /// - d : debug ACLiC, keep all the output files.; /// - - : if buildir is set, use a flat structure (see buildir below); ///; /// If library_specified is specified, CompileMacro generates the file; /// ""library_specified"".soext where soext is the shared library extension for; /// the current platform.; ///; /// If build_dir is specified, it is used as an alternative 'root' for the; /// generation of the shared library. The library is stored in a sub-directories; /// of 'build_dir' including the full pathname of the script unless a flat; /// directory structure is requested ('-' option). With the '-' option the libraries; /// are created directly in the directory 'build_dir'; in particular this means that; /// 2 scripts with the same name in different source directory will over-write each; /// other's library.; /// See also TSystem::SetBuildDir.; ///; /// If dirmode is not zero and we need to create the target directory, the; /// file mode bit will be change to 'dirmode' using chmod.; ///; /// If library_specified is not specified, CompileMacro generate a default name; /// for library by taking the name of the file ""filename"" but replacing the; /// dot before the extension by an underscore and by adding the shared; /// library extension for the current platform.; /// For example on most platform, hsimple.cxx will generate hsimple_cxx.so; ///; /// It uses the ",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:3840,Availability,avail,available,3840," in order to execute a script, a user has to type at the root; /// prompt; /// ~~~ {.cpp}; /// .X myfunc.C(arg1,arg2); /// ~~~; /// We allow them to type:; /// ~~~ {.cpp}; /// .X myfunc.C++(arg1,arg2); /// ~~~; /// or; /// ~~~ {.cpp}; /// .X myfunc.C+(arg1,arg2); /// ~~~; /// In which case an external compiler will be called to create a shared; /// library. This shared library will then be loaded and the function; /// myfunc will be called with the two arguments. With '++' the shared library; /// is always recompiled. With '+' the shared library is recompiled only; /// if it does not exist yet or the macro file is newer than the shared; /// library.; ///; /// Of course the + and ++ notation is supported in similar way for .x and .L.; ///; /// Through the function TSystem::SetMakeSharedLib(), the user will be able to; /// indicate, with shell commands, how to build a shared library (a good; /// default will be provided). The most common change, namely where to find; /// header files, will be available through the function; /// TSystem::SetIncludePath().; /// A good default will be provided so that a typical user session should be at; /// most:; /// ~~~ {.cpp}; /// root[1] gSystem->SetIncludePath(""-I$ROOTSYS/include; /// -I$HOME/mypackage/include"");; /// root[2] .x myfunc.C++(10,20);; /// ~~~; /// The user may sometimes try to compile a script before it has loaded all the; /// needed shared libraries. In this case we want to be helpful and output a; /// list of the unresolved symbols. So if the loading of the created shared; /// library fails, we will try to build a executable that contains the; /// script. The linker should then output a list of missing symbols.; ///; /// To support this we provide a TSystem::SetMakeExe() function, that sets the; /// directive telling how to create an executable. The loader will need; /// to be informed of all the libraries available. The information about; /// the libraries that has been loaded by .L and TSystem::Load() is accessible",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:4723,Availability,avail,available,4723,", how to build a shared library (a good; /// default will be provided). The most common change, namely where to find; /// header files, will be available through the function; /// TSystem::SetIncludePath().; /// A good default will be provided so that a typical user session should be at; /// most:; /// ~~~ {.cpp}; /// root[1] gSystem->SetIncludePath(""-I$ROOTSYS/include; /// -I$HOME/mypackage/include"");; /// root[2] .x myfunc.C++(10,20);; /// ~~~; /// The user may sometimes try to compile a script before it has loaded all the; /// needed shared libraries. In this case we want to be helpful and output a; /// list of the unresolved symbols. So if the loading of the created shared; /// library fails, we will try to build a executable that contains the; /// script. The linker should then output a list of missing symbols.; ///; /// To support this we provide a TSystem::SetMakeExe() function, that sets the; /// directive telling how to create an executable. The loader will need; /// to be informed of all the libraries available. The information about; /// the libraries that has been loaded by .L and TSystem::Load() is accessible; /// to the script compiler. However, the information about; /// the libraries that have been selected at link time by the application; /// builder (like the root libraries for root.exe) are not available and need; /// to be explicitly listed in fLinkedLibs (either by default or by a call to; /// TSystem::SetLinkedLibs()).; ///; /// To simplify customization we could also add to the .rootrc support for the; /// variables; /// ~~~ {.cpp}; /// Unix.*.Root.IncludePath: -I$ROOTSYS/include; /// WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; ///; /// Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; /// WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; /// ~~~; /// And also support for MakeSharedLibs() and MakeExe().; ///; /// (the ... have to be replaced by the actual values and are here only to; /// shorten this comment).; ///; /// Note th",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:5031,Availability,avail,available,5031,"System->SetIncludePath(""-I$ROOTSYS/include; /// -I$HOME/mypackage/include"");; /// root[2] .x myfunc.C++(10,20);; /// ~~~; /// The user may sometimes try to compile a script before it has loaded all the; /// needed shared libraries. In this case we want to be helpful and output a; /// list of the unresolved symbols. So if the loading of the created shared; /// library fails, we will try to build a executable that contains the; /// script. The linker should then output a list of missing symbols.; ///; /// To support this we provide a TSystem::SetMakeExe() function, that sets the; /// directive telling how to create an executable. The loader will need; /// to be informed of all the libraries available. The information about; /// the libraries that has been loaded by .L and TSystem::Load() is accessible; /// to the script compiler. However, the information about; /// the libraries that have been selected at link time by the application; /// builder (like the root libraries for root.exe) are not available and need; /// to be explicitly listed in fLinkedLibs (either by default or by a call to; /// TSystem::SetLinkedLibs()).; ///; /// To simplify customization we could also add to the .rootrc support for the; /// variables; /// ~~~ {.cpp}; /// Unix.*.Root.IncludePath: -I$ROOTSYS/include; /// WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; ///; /// Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; /// WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; /// ~~~; /// And also support for MakeSharedLibs() and MakeExe().; ///; /// (the ... have to be replaced by the actual values and are here only to; /// shorten this comment).; ///; /// Note that the default behavior is to remove libraries when closing ROOT,; /// ie TSystem::CleanCompiledMacros() is called in the TROOT destructor.; /// The default behavior of .L script.C+ is the opposite one, leaving things; /// after closing, without removing. In other words, .L always passes the 'k'; /// option behind the scenes.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:2400,Modifiability,variab,variables,2400," each; /// other's library.; /// See also TSystem::SetBuildDir.; ///; /// If dirmode is not zero and we need to create the target directory, the; /// file mode bit will be change to 'dirmode' using chmod.; ///; /// If library_specified is not specified, CompileMacro generate a default name; /// for library by taking the name of the file ""filename"" but replacing the; /// dot before the extension by an underscore and by adding the shared; /// library extension for the current platform.; /// For example on most platform, hsimple.cxx will generate hsimple_cxx.so; ///; /// It uses the directive fMakeSharedLibs to create a shared library.; /// If loading the shared library fails, it tries to output a list of missing; /// symbols by creating an executable (on some platforms like OSF, this does; /// not HAVE to be an executable) containing the script. It uses the; /// directive fMakeExe to do so.; /// For both directives, before passing them to TSystem::Exec, it expands the; /// variables $SourceFiles, $SharedLib, $LibName, $IncludePath, $LinkedLibs,; /// $DepLibs, $ExeName and $ObjectFiles. See SetMakeSharedLib() for more; /// information on those variables.; ///; /// This method is used to implement the following feature:; ///; /// Synopsis:; ///; /// The purpose of this addition is to allow the user to use an external; /// compiler to create a shared library from its C++ macro (scripts).; /// Currently in order to execute a script, a user has to type at the root; /// prompt; /// ~~~ {.cpp}; /// .X myfunc.C(arg1,arg2); /// ~~~; /// We allow them to type:; /// ~~~ {.cpp}; /// .X myfunc.C++(arg1,arg2); /// ~~~; /// or; /// ~~~ {.cpp}; /// .X myfunc.C+(arg1,arg2); /// ~~~; /// In which case an external compiler will be called to create a shared; /// library. This shared library will then be loaded and the function; /// myfunc will be called with the two arguments. With '++' the shared library; /// is always recompiled. With '+' the shared library is recompiled only; /// if it",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:2573,Modifiability,variab,variables,2573,"ctory, the; /// file mode bit will be change to 'dirmode' using chmod.; ///; /// If library_specified is not specified, CompileMacro generate a default name; /// for library by taking the name of the file ""filename"" but replacing the; /// dot before the extension by an underscore and by adding the shared; /// library extension for the current platform.; /// For example on most platform, hsimple.cxx will generate hsimple_cxx.so; ///; /// It uses the directive fMakeSharedLibs to create a shared library.; /// If loading the shared library fails, it tries to output a list of missing; /// symbols by creating an executable (on some platforms like OSF, this does; /// not HAVE to be an executable) containing the script. It uses the; /// directive fMakeExe to do so.; /// For both directives, before passing them to TSystem::Exec, it expands the; /// variables $SourceFiles, $SharedLib, $LibName, $IncludePath, $LinkedLibs,; /// $DepLibs, $ExeName and $ObjectFiles. See SetMakeSharedLib() for more; /// information on those variables.; ///; /// This method is used to implement the following feature:; ///; /// Synopsis:; ///; /// The purpose of this addition is to allow the user to use an external; /// compiler to create a shared library from its C++ macro (scripts).; /// Currently in order to execute a script, a user has to type at the root; /// prompt; /// ~~~ {.cpp}; /// .X myfunc.C(arg1,arg2); /// ~~~; /// We allow them to type:; /// ~~~ {.cpp}; /// .X myfunc.C++(arg1,arg2); /// ~~~; /// or; /// ~~~ {.cpp}; /// .X myfunc.C+(arg1,arg2); /// ~~~; /// In which case an external compiler will be called to create a shared; /// library. This shared library will then be loaded and the function; /// myfunc will be called with the two arguments. With '++' the shared library; /// is always recompiled. With '+' the shared library is recompiled only; /// if it does not exist yet or the macro file is newer than the shared; /// library.; ///; /// Of course the + and ++ notation is supported in",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:5251,Modifiability,variab,variables,5251,"System->SetIncludePath(""-I$ROOTSYS/include; /// -I$HOME/mypackage/include"");; /// root[2] .x myfunc.C++(10,20);; /// ~~~; /// The user may sometimes try to compile a script before it has loaded all the; /// needed shared libraries. In this case we want to be helpful and output a; /// list of the unresolved symbols. So if the loading of the created shared; /// library fails, we will try to build a executable that contains the; /// script. The linker should then output a list of missing symbols.; ///; /// To support this we provide a TSystem::SetMakeExe() function, that sets the; /// directive telling how to create an executable. The loader will need; /// to be informed of all the libraries available. The information about; /// the libraries that has been loaded by .L and TSystem::Load() is accessible; /// to the script compiler. However, the information about; /// the libraries that have been selected at link time by the application; /// builder (like the root libraries for root.exe) are not available and need; /// to be explicitly listed in fLinkedLibs (either by default or by a call to; /// TSystem::SetLinkedLibs()).; ///; /// To simplify customization we could also add to the .rootrc support for the; /// variables; /// ~~~ {.cpp}; /// Unix.*.Root.IncludePath: -I$ROOTSYS/include; /// WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; ///; /// Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; /// WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; /// ~~~; /// And also support for MakeSharedLibs() and MakeExe().; ///; /// (the ... have to be replaced by the actual values and are here only to; /// shorten this comment).; ///; /// Note that the default behavior is to remove libraries when closing ROOT,; /// ie TSystem::CleanCompiledMacros() is called in the TROOT destructor.; /// The default behavior of .L script.C+ is the opposite one, leaving things; /// after closing, without removing. In other words, .L always passes the 'k'; /// option behind the scenes.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:111,Performance,load,loads,111,"////////////////////////////////////////////////////////////////////////////////; /// This method compiles and loads a shared library containing; /// the code from the file ""filename"".; ///; /// The return value is true (1) in case of success and false (0); /// in case of error.; ///; /// The possible options are:; /// - k : keep the shared library after the session end.; /// - f : force recompilation.; /// - g : compile with debug symbol; /// - O : optimized the code; /// - c : compile only, do not attempt to load the library.; /// - s : silence all informational output; /// - v : output all information output; /// - d : debug ACLiC, keep all the output files.; /// - - : if buildir is set, use a flat structure (see buildir below); ///; /// If library_specified is specified, CompileMacro generates the file; /// ""library_specified"".soext where soext is the shared library extension for; /// the current platform.; ///; /// If build_dir is specified, it is used as an alternative 'root' for the; /// generation of the shared library. The library is stored in a sub-directories; /// of 'build_dir' including the full pathname of the script unless a flat; /// directory structure is requested ('-' option). With the '-' option the libraries; /// are created directly in the directory 'build_dir'; in particular this means that; /// 2 scripts with the same name in different source directory will over-write each; /// other's library.; /// See also TSystem::SetBuildDir.; ///; /// If dirmode is not zero and we need to create the target directory, the; /// file mode bit will be change to 'dirmode' using chmod.; ///; /// If library_specified is not specified, CompileMacro generate a default name; /// for library by taking the name of the file ""filename"" but replacing the; /// dot before the extension by an underscore and by adding the shared; /// library extension for the current platform.; /// For example on most platform, hsimple.cxx will generate hsimple_cxx.so; ///; /// It uses the ",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:454,Performance,optimiz,optimized,454,"////////////////////////////////////////////////////////////////////////////////; /// This method compiles and loads a shared library containing; /// the code from the file ""filename"".; ///; /// The return value is true (1) in case of success and false (0); /// in case of error.; ///; /// The possible options are:; /// - k : keep the shared library after the session end.; /// - f : force recompilation.; /// - g : compile with debug symbol; /// - O : optimized the code; /// - c : compile only, do not attempt to load the library.; /// - s : silence all informational output; /// - v : output all information output; /// - d : debug ACLiC, keep all the output files.; /// - - : if buildir is set, use a flat structure (see buildir below); ///; /// If library_specified is specified, CompileMacro generates the file; /// ""library_specified"".soext where soext is the shared library extension for; /// the current platform.; ///; /// If build_dir is specified, it is used as an alternative 'root' for the; /// generation of the shared library. The library is stored in a sub-directories; /// of 'build_dir' including the full pathname of the script unless a flat; /// directory structure is requested ('-' option). With the '-' option the libraries; /// are created directly in the directory 'build_dir'; in particular this means that; /// 2 scripts with the same name in different source directory will over-write each; /// other's library.; /// See also TSystem::SetBuildDir.; ///; /// If dirmode is not zero and we need to create the target directory, the; /// file mode bit will be change to 'dirmode' using chmod.; ///; /// If library_specified is not specified, CompileMacro generate a default name; /// for library by taking the name of the file ""filename"" but replacing the; /// dot before the extension by an underscore and by adding the shared; /// library extension for the current platform.; /// For example on most platform, hsimple.cxx will generate hsimple_cxx.so; ///; /// It uses the ",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:516,Performance,load,load,516,"////////////////////////////////////////////////////////////////////////////////; /// This method compiles and loads a shared library containing; /// the code from the file ""filename"".; ///; /// The return value is true (1) in case of success and false (0); /// in case of error.; ///; /// The possible options are:; /// - k : keep the shared library after the session end.; /// - f : force recompilation.; /// - g : compile with debug symbol; /// - O : optimized the code; /// - c : compile only, do not attempt to load the library.; /// - s : silence all informational output; /// - v : output all information output; /// - d : debug ACLiC, keep all the output files.; /// - - : if buildir is set, use a flat structure (see buildir below); ///; /// If library_specified is specified, CompileMacro generates the file; /// ""library_specified"".soext where soext is the shared library extension for; /// the current platform.; ///; /// If build_dir is specified, it is used as an alternative 'root' for the; /// generation of the shared library. The library is stored in a sub-directories; /// of 'build_dir' including the full pathname of the script unless a flat; /// directory structure is requested ('-' option). With the '-' option the libraries; /// are created directly in the directory 'build_dir'; in particular this means that; /// 2 scripts with the same name in different source directory will over-write each; /// other's library.; /// See also TSystem::SetBuildDir.; ///; /// If dirmode is not zero and we need to create the target directory, the; /// file mode bit will be change to 'dirmode' using chmod.; ///; /// If library_specified is not specified, CompileMacro generate a default name; /// for library by taking the name of the file ""filename"" but replacing the; /// dot before the extension by an underscore and by adding the shared; /// library extension for the current platform.; /// For example on most platform, hsimple.cxx will generate hsimple_cxx.so; ///; /// It uses the ",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:2063,Performance,load,loading,2063,"t; /// directory structure is requested ('-' option). With the '-' option the libraries; /// are created directly in the directory 'build_dir'; in particular this means that; /// 2 scripts with the same name in different source directory will over-write each; /// other's library.; /// See also TSystem::SetBuildDir.; ///; /// If dirmode is not zero and we need to create the target directory, the; /// file mode bit will be change to 'dirmode' using chmod.; ///; /// If library_specified is not specified, CompileMacro generate a default name; /// for library by taking the name of the file ""filename"" but replacing the; /// dot before the extension by an underscore and by adding the shared; /// library extension for the current platform.; /// For example on most platform, hsimple.cxx will generate hsimple_cxx.so; ///; /// It uses the directive fMakeSharedLibs to create a shared library.; /// If loading the shared library fails, it tries to output a list of missing; /// symbols by creating an executable (on some platforms like OSF, this does; /// not HAVE to be an executable) containing the script. It uses the; /// directive fMakeExe to do so.; /// For both directives, before passing them to TSystem::Exec, it expands the; /// variables $SourceFiles, $SharedLib, $LibName, $IncludePath, $LinkedLibs,; /// $DepLibs, $ExeName and $ObjectFiles. See SetMakeSharedLib() for more; /// information on those variables.; ///; /// This method is used to implement the following feature:; ///; /// Synopsis:; ///; /// The purpose of this addition is to allow the user to use an external; /// compiler to create a shared library from its C++ macro (scripts).; /// Currently in order to execute a script, a user has to type at the root; /// prompt; /// ~~~ {.cpp}; /// .X myfunc.C(arg1,arg2); /// ~~~; /// We allow them to type:; /// ~~~ {.cpp}; /// .X myfunc.C++(arg1,arg2); /// ~~~; /// or; /// ~~~ {.cpp}; /// .X myfunc.C+(arg1,arg2); /// ~~~; /// In which case an external compiler will be called t",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:3227,Performance,load,loaded,3227,"containing the script. It uses the; /// directive fMakeExe to do so.; /// For both directives, before passing them to TSystem::Exec, it expands the; /// variables $SourceFiles, $SharedLib, $LibName, $IncludePath, $LinkedLibs,; /// $DepLibs, $ExeName and $ObjectFiles. See SetMakeSharedLib() for more; /// information on those variables.; ///; /// This method is used to implement the following feature:; ///; /// Synopsis:; ///; /// The purpose of this addition is to allow the user to use an external; /// compiler to create a shared library from its C++ macro (scripts).; /// Currently in order to execute a script, a user has to type at the root; /// prompt; /// ~~~ {.cpp}; /// .X myfunc.C(arg1,arg2); /// ~~~; /// We allow them to type:; /// ~~~ {.cpp}; /// .X myfunc.C++(arg1,arg2); /// ~~~; /// or; /// ~~~ {.cpp}; /// .X myfunc.C+(arg1,arg2); /// ~~~; /// In which case an external compiler will be called to create a shared; /// library. This shared library will then be loaded and the function; /// myfunc will be called with the two arguments. With '++' the shared library; /// is always recompiled. With '+' the shared library is recompiled only; /// if it does not exist yet or the macro file is newer than the shared; /// library.; ///; /// Of course the + and ++ notation is supported in similar way for .x and .L.; ///; /// Through the function TSystem::SetMakeSharedLib(), the user will be able to; /// indicate, with shell commands, how to build a shared library (a good; /// default will be provided). The most common change, namely where to find; /// header files, will be available through the function; /// TSystem::SetIncludePath().; /// A good default will be provided so that a typical user session should be at; /// most:; /// ~~~ {.cpp}; /// root[1] gSystem->SetIncludePath(""-I$ROOTSYS/include; /// -I$HOME/mypackage/include"");; /// root[2] .x myfunc.C++(10,20);; /// ~~~; /// The user may sometimes try to compile a script before it has loaded all the; /// needed shared l",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:4212,Performance,load,loaded,4212,"ry. This shared library will then be loaded and the function; /// myfunc will be called with the two arguments. With '++' the shared library; /// is always recompiled. With '+' the shared library is recompiled only; /// if it does not exist yet or the macro file is newer than the shared; /// library.; ///; /// Of course the + and ++ notation is supported in similar way for .x and .L.; ///; /// Through the function TSystem::SetMakeSharedLib(), the user will be able to; /// indicate, with shell commands, how to build a shared library (a good; /// default will be provided). The most common change, namely where to find; /// header files, will be available through the function; /// TSystem::SetIncludePath().; /// A good default will be provided so that a typical user session should be at; /// most:; /// ~~~ {.cpp}; /// root[1] gSystem->SetIncludePath(""-I$ROOTSYS/include; /// -I$HOME/mypackage/include"");; /// root[2] .x myfunc.C++(10,20);; /// ~~~; /// The user may sometimes try to compile a script before it has loaded all the; /// needed shared libraries. In this case we want to be helpful and output a; /// list of the unresolved symbols. So if the loading of the created shared; /// library fails, we will try to build a executable that contains the; /// script. The linker should then output a list of missing symbols.; ///; /// To support this we provide a TSystem::SetMakeExe() function, that sets the; /// directive telling how to create an executable. The loader will need; /// to be informed of all the libraries available. The information about; /// the libraries that has been loaded by .L and TSystem::Load() is accessible; /// to the script compiler. However, the information about; /// the libraries that have been selected at link time by the application; /// builder (like the root libraries for root.exe) are not available and need; /// to be explicitly listed in fLinkedLibs (either by default or by a call to; /// TSystem::SetLinkedLibs()).; ///; /// To simplify customiz",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:4352,Performance,load,loading,4352,"y; /// if it does not exist yet or the macro file is newer than the shared; /// library.; ///; /// Of course the + and ++ notation is supported in similar way for .x and .L.; ///; /// Through the function TSystem::SetMakeSharedLib(), the user will be able to; /// indicate, with shell commands, how to build a shared library (a good; /// default will be provided). The most common change, namely where to find; /// header files, will be available through the function; /// TSystem::SetIncludePath().; /// A good default will be provided so that a typical user session should be at; /// most:; /// ~~~ {.cpp}; /// root[1] gSystem->SetIncludePath(""-I$ROOTSYS/include; /// -I$HOME/mypackage/include"");; /// root[2] .x myfunc.C++(10,20);; /// ~~~; /// The user may sometimes try to compile a script before it has loaded all the; /// needed shared libraries. In this case we want to be helpful and output a; /// list of the unresolved symbols. So if the loading of the created shared; /// library fails, we will try to build a executable that contains the; /// script. The linker should then output a list of missing symbols.; ///; /// To support this we provide a TSystem::SetMakeExe() function, that sets the; /// directive telling how to create an executable. The loader will need; /// to be informed of all the libraries available. The information about; /// the libraries that has been loaded by .L and TSystem::Load() is accessible; /// to the script compiler. However, the information about; /// the libraries that have been selected at link time by the application; /// builder (like the root libraries for root.exe) are not available and need; /// to be explicitly listed in fLinkedLibs (either by default or by a call to; /// TSystem::SetLinkedLibs()).; ///; /// To simplify customization we could also add to the .rootrc support for the; /// variables; /// ~~~ {.cpp}; /// Unix.*.Root.IncludePath: -I$ROOTSYS/include; /// WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; ///; /// Unix.*.Root.Linke",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:4665,Performance,load,loader,4665,", how to build a shared library (a good; /// default will be provided). The most common change, namely where to find; /// header files, will be available through the function; /// TSystem::SetIncludePath().; /// A good default will be provided so that a typical user session should be at; /// most:; /// ~~~ {.cpp}; /// root[1] gSystem->SetIncludePath(""-I$ROOTSYS/include; /// -I$HOME/mypackage/include"");; /// root[2] .x myfunc.C++(10,20);; /// ~~~; /// The user may sometimes try to compile a script before it has loaded all the; /// needed shared libraries. In this case we want to be helpful and output a; /// list of the unresolved symbols. So if the loading of the created shared; /// library fails, we will try to build a executable that contains the; /// script. The linker should then output a list of missing symbols.; ///; /// To support this we provide a TSystem::SetMakeExe() function, that sets the; /// directive telling how to create an executable. The loader will need; /// to be informed of all the libraries available. The information about; /// the libraries that has been loaded by .L and TSystem::Load() is accessible; /// to the script compiler. However, the information about; /// the libraries that have been selected at link time by the application; /// builder (like the root libraries for root.exe) are not available and need; /// to be explicitly listed in fLinkedLibs (either by default or by a call to; /// TSystem::SetLinkedLibs()).; ///; /// To simplify customization we could also add to the .rootrc support for the; /// variables; /// ~~~ {.cpp}; /// Unix.*.Root.IncludePath: -I$ROOTSYS/include; /// WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; ///; /// Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; /// WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; /// ~~~; /// And also support for MakeSharedLibs() and MakeExe().; ///; /// (the ... have to be replaced by the actual values and are here only to; /// shorten this comment).; ///; /// Note th",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:4789,Performance,load,loaded,4789,". The most common change, namely where to find; /// header files, will be available through the function; /// TSystem::SetIncludePath().; /// A good default will be provided so that a typical user session should be at; /// most:; /// ~~~ {.cpp}; /// root[1] gSystem->SetIncludePath(""-I$ROOTSYS/include; /// -I$HOME/mypackage/include"");; /// root[2] .x myfunc.C++(10,20);; /// ~~~; /// The user may sometimes try to compile a script before it has loaded all the; /// needed shared libraries. In this case we want to be helpful and output a; /// list of the unresolved symbols. So if the loading of the created shared; /// library fails, we will try to build a executable that contains the; /// script. The linker should then output a list of missing symbols.; ///; /// To support this we provide a TSystem::SetMakeExe() function, that sets the; /// directive telling how to create an executable. The loader will need; /// to be informed of all the libraries available. The information about; /// the libraries that has been loaded by .L and TSystem::Load() is accessible; /// to the script compiler. However, the information about; /// the libraries that have been selected at link time by the application; /// builder (like the root libraries for root.exe) are not available and need; /// to be explicitly listed in fLinkedLibs (either by default or by a call to; /// TSystem::SetLinkedLibs()).; ///; /// To simplify customization we could also add to the .rootrc support for the; /// variables; /// ~~~ {.cpp}; /// Unix.*.Root.IncludePath: -I$ROOTSYS/include; /// WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; ///; /// Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; /// WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; /// ~~~; /// And also support for MakeSharedLibs() and MakeExe().; ///; /// (the ... have to be replaced by the actual values and are here only to; /// shorten this comment).; ///; /// Note that the default behavior is to remove libraries when closing ROOT,; ///",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:4815,Performance,Load,Load,4815,"will be available through the function; /// TSystem::SetIncludePath().; /// A good default will be provided so that a typical user session should be at; /// most:; /// ~~~ {.cpp}; /// root[1] gSystem->SetIncludePath(""-I$ROOTSYS/include; /// -I$HOME/mypackage/include"");; /// root[2] .x myfunc.C++(10,20);; /// ~~~; /// The user may sometimes try to compile a script before it has loaded all the; /// needed shared libraries. In this case we want to be helpful and output a; /// list of the unresolved symbols. So if the loading of the created shared; /// library fails, we will try to build a executable that contains the; /// script. The linker should then output a list of missing symbols.; ///; /// To support this we provide a TSystem::SetMakeExe() function, that sets the; /// directive telling how to create an executable. The loader will need; /// to be informed of all the libraries available. The information about; /// the libraries that has been loaded by .L and TSystem::Load() is accessible; /// to the script compiler. However, the information about; /// the libraries that have been selected at link time by the application; /// builder (like the root libraries for root.exe) are not available and need; /// to be explicitly listed in fLinkedLibs (either by default or by a call to; /// TSystem::SetLinkedLibs()).; ///; /// To simplify customization we could also add to the .rootrc support for the; /// variables; /// ~~~ {.cpp}; /// Unix.*.Root.IncludePath: -I$ROOTSYS/include; /// WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; ///; /// Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; /// WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; /// ~~~; /// And also support for MakeSharedLibs() and MakeExe().; ///; /// (the ... have to be replaced by the actual values and are here only to; /// shorten this comment).; ///; /// Note that the default behavior is to remove libraries when closing ROOT,; /// ie TSystem::CleanCompiledMacros() is called in the TROOT destruc",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:4825,Security,access,accessible,4825,"will be available through the function; /// TSystem::SetIncludePath().; /// A good default will be provided so that a typical user session should be at; /// most:; /// ~~~ {.cpp}; /// root[1] gSystem->SetIncludePath(""-I$ROOTSYS/include; /// -I$HOME/mypackage/include"");; /// root[2] .x myfunc.C++(10,20);; /// ~~~; /// The user may sometimes try to compile a script before it has loaded all the; /// needed shared libraries. In this case we want to be helpful and output a; /// list of the unresolved symbols. So if the loading of the created shared; /// library fails, we will try to build a executable that contains the; /// script. The linker should then output a list of missing symbols.; ///; /// To support this we provide a TSystem::SetMakeExe() function, that sets the; /// directive telling how to create an executable. The loader will need; /// to be informed of all the libraries available. The information about; /// the libraries that has been loaded by .L and TSystem::Load() is accessible; /// to the script compiler. However, the information about; /// the libraries that have been selected at link time by the application; /// builder (like the root libraries for root.exe) are not available and need; /// to be explicitly listed in fLinkedLibs (either by default or by a call to; /// TSystem::SetLinkedLibs()).; ///; /// To simplify customization we could also add to the .rootrc support for the; /// variables; /// ~~~ {.cpp}; /// Unix.*.Root.IncludePath: -I$ROOTSYS/include; /// WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; ///; /// Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; /// WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; /// ~~~; /// And also support for MakeSharedLibs() and MakeExe().; ///; /// (the ... have to be replaced by the actual values and are here only to; /// shorten this comment).; ///; /// Note that the default behavior is to remove libraries when closing ROOT,; /// ie TSystem::CleanCompiledMacros() is called in the TROOT destruc",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:5174,Usability,simpl,simplify,5174,"System->SetIncludePath(""-I$ROOTSYS/include; /// -I$HOME/mypackage/include"");; /// root[2] .x myfunc.C++(10,20);; /// ~~~; /// The user may sometimes try to compile a script before it has loaded all the; /// needed shared libraries. In this case we want to be helpful and output a; /// list of the unresolved symbols. So if the loading of the created shared; /// library fails, we will try to build a executable that contains the; /// script. The linker should then output a list of missing symbols.; ///; /// To support this we provide a TSystem::SetMakeExe() function, that sets the; /// directive telling how to create an executable. The loader will need; /// to be informed of all the libraries available. The information about; /// the libraries that has been loaded by .L and TSystem::Load() is accessible; /// to the script compiler. However, the information about; /// the libraries that have been selected at link time by the application; /// builder (like the root libraries for root.exe) are not available and need; /// to be explicitly listed in fLinkedLibs (either by default or by a call to; /// TSystem::SetLinkedLibs()).; ///; /// To simplify customization we could also add to the .rootrc support for the; /// variables; /// ~~~ {.cpp}; /// Unix.*.Root.IncludePath: -I$ROOTSYS/include; /// WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; ///; /// Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; /// WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; /// ~~~; /// And also support for MakeSharedLibs() and MakeExe().; ///; /// (the ... have to be replaced by the actual values and are here only to; /// shorten this comment).; ///; /// Note that the default behavior is to remove libraries when closing ROOT,; /// ie TSystem::CleanCompiledMacros() is called in the TROOT destructor.; /// The default behavior of .L script.C+ is the opposite one, leaving things; /// after closing, without removing. In other words, .L always passes the 'k'; /// option behind the scenes.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:48,Integrability,depend,dependency,48,"// NOTE: should probably just skip isysroot for dependency analysis.; // (And will, in the future - once we rely on compiler-generated .d files.)",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:182,Usability,usab,usable,182,"// For some probably good reason, DirName on Windows returns the 'name' of; // the directory, omitting the drive letter (even if there was one). In; // consequence the result is not usable as a 'root directory', we need to; // add the drive letter if there was one..",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:43,Integrability,depend,dependent,43,"// Extension of shared library is platform dependent!!",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:29,Availability,redundant,redundant,29,"// Strip potential, somewhat redundant '/.' from the pathname ...",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:29,Safety,redund,redundant,29,"// Strip potential, somewhat redundant '/.' from the pathname ...",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:92,Availability,error,error,92,"// The mkdir failed __and__ we can not write to the target directory,; // let make sure the error message will be about the target directory",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:98,Integrability,message,message,98,"// The mkdir failed __and__ we can not write to the target directory,; // let make sure the error message will be about the target directory",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:40,Performance,load,loaded,40,"// ======= Check if the library need to loaded or compiled",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:31,Performance,load,loaded,31,"// the script has already been loaded in interpreted mode; // Let's warn the user and unload it.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:26,Integrability,depend,dependency,26,"// Extract the -D for the dependency generation.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:16,Integrability,depend,dependency,16,"// Generate the dependency filename",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:24,Integrability,depend,dependencies,24,"// We need to check the dependencies",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:26,Integrability,depend,dependency,26,"// there is no accessible dependency file, let's assume the library has been; // modified",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:15,Security,access,accessible,15,"// there is no accessible dependency file, let's assume the library has been; // modified",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:42,Performance,load,loaded,42,"// The library has already been built and loaded.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:28,Modifiability,polymorphi,polymorphic,28,"// FIXME: Switch to generic polymorphic when we make c++14 default.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:117,Integrability,depend,dependencies,117,"// We have no rootmap files or modules to construct `-l` flags enabling; // explicit linking. We have to resolve the dependencies by ourselves; // taking the job of the dyld.; // FIXME: This is a rare case where we have rootcling running with; // modules disabled. Remove this code once we fully switch to modules,; // or implement a special flag in rootcling which selective enables; // modules for dependent libraries and does not produce a module for; // the ACLiC library.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:400,Integrability,depend,dependent,400,"// We have no rootmap files or modules to construct `-l` flags enabling; // explicit linking. We have to resolve the dependencies by ourselves; // taking the job of the dyld.; // FIXME: This is a rare case where we have rootcling running with; // modules disabled. Remove this code once we fully switch to modules,; // or implement a special flag in rootcling which selective enables; // modules for dependent libraries and does not produce a module for; // the ACLiC library.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:41,Performance,load,load,41,"// The library already exist, let's just load it.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:67,Modifiability,variab,variable,67,"// the file name end up in the file produced; // by rootcling as a variable name so all character need to be valid!",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:45,Integrability,depend,depend,45,"// ======= Load the library the script might depend on",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:11,Performance,Load,Load,11,"// ======= Load the library the script might depend on",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:3,Performance,Load,Load,3,"// Load the needed library except for the library we are currently building!",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:32,Integrability,depend,dependency,32,"// We failed to load one of the dependency.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:16,Performance,load,load,16,"// We failed to load one of the dependency.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:34,Integrability,rout,routine,34,"// We could append this fake main routine to the compilation line.; // But in this case compiler may output the name of the dictionary file; // and of the fakeMain file while it compiles it. (this would be useless; // confusing output).; // We could also the fake main routine to the end of the dictionary file; // however compilation would fail if a main is already there; // (like stress.cxx); // dict.Append("" "").Append(fakeMain);",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:269,Integrability,rout,routine,269,"// We could append this fake main routine to the compilation line.; // But in this case compiler may output the name of the dictionary file; // and of the fakeMain file while it compiles it. (this would be useless; // confusing output).; // We could also the fake main routine to the end of the dictionary file; // however compilation would fail if a main is already there; // (like stress.cxx); // dict.Append("" "").Append(fakeMain);",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:224,Availability,redundant,redundant,224,"// We may have unresolved symbols. Use dyld to resolve the dependent; // libraries and relink.; // FIXME: We will likely have duplicated libraries as we are appending; // FIXME: This likely makes rootcling --lib-list-prefix redundant.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:59,Integrability,depend,dependent,59,"// We may have unresolved symbols. Use dyld to resolve the dependent; // libraries and relink.; // FIXME: We will likely have duplicated libraries as we are appending; // FIXME: This likely makes rootcling --lib-list-prefix redundant.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:224,Safety,redund,redundant,224,"// We may have unresolved symbols. Use dyld to resolve the dependent; // libraries and relink.; // FIXME: We will likely have duplicated libraries as we are appending; // FIXME: This likely makes rootcling --lib-list-prefix redundant.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:3,Safety,abort,abort,3,"// abort",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:97,Performance,optimiz,optimization,97,"////////////////////////////////////////////////////////////////////////////////; /// Return the optimization flags.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:164,Performance,optimiz,optimized,164,"////////////////////////////////////////////////////////////////////////////////; /// AclicMode indicates whether the library should be built in; /// debug mode or optimized. The values are:; /// - TSystem::kDefault : compile the same as the current ROOT; /// - TSystem::kDebug : compiled in debug mode; /// - TSystem::kOpt : optimized the library",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:326,Performance,optimiz,optimized,326,"////////////////////////////////////////////////////////////////////////////////; /// AclicMode indicates whether the library should be built in; /// debug mode or optimized. The values are:; /// - TSystem::kDefault : compile the same as the current ROOT; /// - TSystem::kDebug : compiled in debug mode; /// - TSystem::kOpt : optimized the library",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:52,Availability,error,error,52,"// FIXME: This is a temporary fix for the following error with ACLiC; // (and this is apparently not needed anyway):; // 48: input_line_12:8:38: error: use of undeclared identifier 'IC'; // 48: ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",; // 48: ^; // 48: Error in <ACLiC>: Dictionary generation failed!",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:145,Availability,error,error,145,"// FIXME: This is a temporary fix for the following error with ACLiC; // (and this is apparently not needed anyway):; // 48: input_line_12:8:38: error: use of undeclared identifier 'IC'; // 48: ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",; // 48: ^; // 48: Error in <ACLiC>: Dictionary generation failed!",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:334,Availability,Error,Error,334,"// FIXME: This is a temporary fix for the following error with ACLiC; // (and this is apparently not needed anyway):; // 48: input_line_12:8:38: error: use of undeclared identifier 'IC'; // 48: ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",; // 48: ^; // 48: Error in <ACLiC>: Dictionary generation failed!",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:769,Safety,risk,risk,769,"////////////////////////////////////////////////////////////////////////////////; /// Set the location where ACLiC will create libraries and use as; /// a scratch area. If unset, libraries will be created at the same; /// location than the script.; ///; /// \param build_dir the name of the build directory; /// \param isflat If false (default), then the libraries are actually stored; /// in sub-directories of 'build_dir' including the full pathname; /// of the script. If the script is located at `/full/path/name/macro.C`; /// the library will be located at `build_dir+/full/path/name/macro_C.so`; /// If 'isflat' is true, then no subdirectory is created and the library; /// is created directly in the directory 'build_dir'. Note that in this; /// mode there is a risk than 2 script of the same in different source; /// directory will over-write each other.; /// \note This `build_dir` can also be controlled via `ACLiC.BuildDir` in; /// your `.rootrc`.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:190,Performance,optimiz,optimized,190,"////////////////////////////////////////////////////////////////////////////////; /// FlagsOpt should contain the options to pass to the C++ compiler; /// in order to compile the library in optimized mode.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:164,Performance,optimiz,optimized,164,"////////////////////////////////////////////////////////////////////////////////; /// AclicMode indicates whether the library should be built in; /// debug mode or optimized. The values are:; /// - TSystem::kDefault : compile the same as the current ROOT; /// - TSystem::kDebug : compiled in debug mode; /// - TSystem::kOpt : optimized the library",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:326,Performance,optimiz,optimized,326,"////////////////////////////////////////////////////////////////////////////////; /// AclicMode indicates whether the library should be built in; /// debug mode or optimized. The values are:; /// - TSystem::kDefault : compile the same as the current ROOT; /// - TSystem::kDebug : compiled in debug mode; /// - TSystem::kOpt : optimized the library",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:333,Modifiability,variab,variable,333,"////////////////////////////////////////////////////////////////////////////////; /// Directives has the same syntax as the argument of SetMakeSharedLib but is; /// used to create an executable. This creation is used as a means to output; /// a list of unresolved symbols, when loading a shared library has failed.; /// The required variable is $ExeName rather than $SharedLib, e.g.:; /// ~~~ {.cpp}; /// gSystem->SetMakeExe(; /// ""g++ -Wall -fPIC $IncludePath $SourceFiles; /// -o $ExeName $LinkedLibs -L/usr/X11R6/lib -lX11 -lm -ldl -rdynamic"");; /// ~~~",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:278,Performance,load,loading,278,"////////////////////////////////////////////////////////////////////////////////; /// Directives has the same syntax as the argument of SetMakeSharedLib but is; /// used to create an executable. This creation is used as a means to output; /// a list of unresolved symbols, when loading a shared library has failed.; /// The required variable is $ExeName rather than $SharedLib, e.g.:; /// ~~~ {.cpp}; /// gSystem->SetMakeExe(; /// ""g++ -Wall -fPIC $IncludePath $SourceFiles; /// -o $ExeName $LinkedLibs -L/usr/X11R6/lib -lX11 -lm -ldl -rdynamic"");; /// ~~~",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:63,Modifiability,variab,variables,63,"// NOTE: add verification that the directives has the required variables",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:1988,Deployability,RELEASE,RELEASE,1988,"/// Directives should contain the description on how to compile and link a; /// shared lib. This description can be any valid shell command, including; /// the use of ';' to separate several instructions. However, shell specific; /// construct should be avoided. In particular this description can contain; /// environment variables, like $ROOTSYS (or %ROOTSYS% on windows).; /// ~~~ {.cpp}; /// Five special variables will be expanded before execution:; /// Variable name Expands to; /// ------------- ----------; /// $SourceFiles Name of source files to be compiled; /// $SharedLib Name of the shared library being created; /// $LibName Name of shared library without extension; /// $BuildDir Directory where the files will be created; /// $IncludePath value of fIncludePath; /// $LinkedLibs value of fLinkedLibs; /// $DepLibs libraries on which this library depends on; /// $ObjectFiles Name of source files to be compiler with; /// their extension changed to .o or .obj; /// $Opt location of the optimization/debug options; /// set fFlagsDebug and fFlagsOpt; /// ~~~; /// e.g.:; /// ~~~ {.cpp}; /// gSystem->SetMakeSharedLib(; /// ""KCC -n32 --strict $IncludePath -K0 \$Opt $SourceFile; /// --no_exceptions --signed_chars --display_error_number; /// --diag_suppress 68 -o $SharedLib"");; ///; /// gSystem->setMakeSharedLib(; /// ""Cxx $IncludePath -c $SourceFile;; /// ld -L/usr/lib/cmplrs/cxx -rpath /usr/lib/cmplrs/cxx -expect_unresolved; /// \$Opt -shared /usr/lib/cmplrs/cc/crt0.o /usr/lib/cmplrs/cxx/_main.o; /// -o $SharedLib $ObjectFile -lcxxstd -lcxx -lexc -lots -lc""; ///; /// gSystem->SetMakeSharedLib(; /// ""$HOME/mygcc/bin/g++ \$Opt -Wall -fPIC $IncludePath $SourceFile; /// -shared -o $SharedLib"");; ///; /// gSystem->SetMakeSharedLib(; /// ""cl -DWIN32 -D_WIN32 -D_MT -D_DLL -MD /O2 /G5 /MD -DWIN32; /// -D_WINDOWS $IncludePath $SourceFile; /// /link -PDB:NONE /NODEFAULTLIB /INCREMENTAL:NO /RELEASE /NOLOGO; /// $LinkedLibs -entry:_DllMainCRTStartup@12 -dll /out:$SharedLib""); /// ~~~",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:943,Integrability,depend,depends,943,"////////////////////////////////////////////////////////////////////////////////; /// Directives should contain the description on how to compile and link a; /// shared lib. This description can be any valid shell command, including; /// the use of ';' to separate several instructions. However, shell specific; /// construct should be avoided. In particular this description can contain; /// environment variables, like $ROOTSYS (or %ROOTSYS% on windows).; /// ~~~ {.cpp}; /// Five special variables will be expanded before execution:; /// Variable name Expands to; /// ------------- ----------; /// $SourceFiles Name of source files to be compiled; /// $SharedLib Name of the shared library being created; /// $LibName Name of shared library without extension; /// $BuildDir Directory where the files will be created; /// $IncludePath value of fIncludePath; /// $LinkedLibs value of fLinkedLibs; /// $DepLibs libraries on which this library depends on; /// $ObjectFiles Name of source files to be compiler with; /// their extension changed to .o or .obj; /// $Opt location of the optimization/debug options; /// set fFlagsDebug and fFlagsOpt; /// ~~~; /// e.g.:; /// ~~~ {.cpp}; /// gSystem->SetMakeSharedLib(; /// ""KCC -n32 --strict $IncludePath -K0 \$Opt $SourceFile; /// --no_exceptions --signed_chars --display_error_number; /// --diag_suppress 68 -o $SharedLib"");; ///; /// gSystem->setMakeSharedLib(; /// ""Cxx $IncludePath -c $SourceFile;; /// ld -L/usr/lib/cmplrs/cxx -rpath /usr/lib/cmplrs/cxx -expect_unresolved; /// \$Opt -shared /usr/lib/cmplrs/cc/crt0.o /usr/lib/cmplrs/cxx/_main.o; /// -o $SharedLib $ObjectFile -lcxxstd -lcxx -lexc -lots -lc""; ///; /// gSystem->SetMakeSharedLib(; /// ""$HOME/mygcc/bin/g++ \$Opt -Wall -fPIC $IncludePath $SourceFile; /// -shared -o $SharedLib"");; ///; /// gSystem->SetMakeSharedLib(; /// ""cl -DWIN32 -D_WIN32 -D_MT -D_DLL -MD /O2 /G5 /MD -DWIN32; /// -D_WINDOWS $IncludePath $SourceFile; /// /link -PDB:NONE /NODEFAULTLIB /INCREMENTAL:NO /RELEASE /NOLO",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:405,Modifiability,variab,variables,405,"////////////////////////////////////////////////////////////////////////////////; /// Directives should contain the description on how to compile and link a; /// shared lib. This description can be any valid shell command, including; /// the use of ';' to separate several instructions. However, shell specific; /// construct should be avoided. In particular this description can contain; /// environment variables, like $ROOTSYS (or %ROOTSYS% on windows).; /// ~~~ {.cpp}; /// Five special variables will be expanded before execution:; /// Variable name Expands to; /// ------------- ----------; /// $SourceFiles Name of source files to be compiled; /// $SharedLib Name of the shared library being created; /// $LibName Name of shared library without extension; /// $BuildDir Directory where the files will be created; /// $IncludePath value of fIncludePath; /// $LinkedLibs value of fLinkedLibs; /// $DepLibs libraries on which this library depends on; /// $ObjectFiles Name of source files to be compiler with; /// their extension changed to .o or .obj; /// $Opt location of the optimization/debug options; /// set fFlagsDebug and fFlagsOpt; /// ~~~; /// e.g.:; /// ~~~ {.cpp}; /// gSystem->SetMakeSharedLib(; /// ""KCC -n32 --strict $IncludePath -K0 \$Opt $SourceFile; /// --no_exceptions --signed_chars --display_error_number; /// --diag_suppress 68 -o $SharedLib"");; ///; /// gSystem->setMakeSharedLib(; /// ""Cxx $IncludePath -c $SourceFile;; /// ld -L/usr/lib/cmplrs/cxx -rpath /usr/lib/cmplrs/cxx -expect_unresolved; /// \$Opt -shared /usr/lib/cmplrs/cc/crt0.o /usr/lib/cmplrs/cxx/_main.o; /// -o $SharedLib $ObjectFile -lcxxstd -lcxx -lexc -lots -lc""; ///; /// gSystem->SetMakeSharedLib(; /// ""$HOME/mygcc/bin/g++ \$Opt -Wall -fPIC $IncludePath $SourceFile; /// -shared -o $SharedLib"");; ///; /// gSystem->SetMakeSharedLib(; /// ""cl -DWIN32 -D_WIN32 -D_MT -D_DLL -MD /O2 /G5 /MD -DWIN32; /// -D_WINDOWS $IncludePath $SourceFile; /// /link -PDB:NONE /NODEFAULTLIB /INCREMENTAL:NO /RELEASE /NOLO",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:491,Modifiability,variab,variables,491,"////////////////////////////////////////////////////////////////////////////////; /// Directives should contain the description on how to compile and link a; /// shared lib. This description can be any valid shell command, including; /// the use of ';' to separate several instructions. However, shell specific; /// construct should be avoided. In particular this description can contain; /// environment variables, like $ROOTSYS (or %ROOTSYS% on windows).; /// ~~~ {.cpp}; /// Five special variables will be expanded before execution:; /// Variable name Expands to; /// ------------- ----------; /// $SourceFiles Name of source files to be compiled; /// $SharedLib Name of the shared library being created; /// $LibName Name of shared library without extension; /// $BuildDir Directory where the files will be created; /// $IncludePath value of fIncludePath; /// $LinkedLibs value of fLinkedLibs; /// $DepLibs libraries on which this library depends on; /// $ObjectFiles Name of source files to be compiler with; /// their extension changed to .o or .obj; /// $Opt location of the optimization/debug options; /// set fFlagsDebug and fFlagsOpt; /// ~~~; /// e.g.:; /// ~~~ {.cpp}; /// gSystem->SetMakeSharedLib(; /// ""KCC -n32 --strict $IncludePath -K0 \$Opt $SourceFile; /// --no_exceptions --signed_chars --display_error_number; /// --diag_suppress 68 -o $SharedLib"");; ///; /// gSystem->setMakeSharedLib(; /// ""Cxx $IncludePath -c $SourceFile;; /// ld -L/usr/lib/cmplrs/cxx -rpath /usr/lib/cmplrs/cxx -expect_unresolved; /// \$Opt -shared /usr/lib/cmplrs/cc/crt0.o /usr/lib/cmplrs/cxx/_main.o; /// -o $SharedLib $ObjectFile -lcxxstd -lcxx -lexc -lots -lc""; ///; /// gSystem->SetMakeSharedLib(; /// ""$HOME/mygcc/bin/g++ \$Opt -Wall -fPIC $IncludePath $SourceFile; /// -shared -o $SharedLib"");; ///; /// gSystem->SetMakeSharedLib(; /// ""cl -DWIN32 -D_WIN32 -D_MT -D_DLL -MD /O2 /G5 /MD -DWIN32; /// -D_WINDOWS $IncludePath $SourceFile; /// /link -PDB:NONE /NODEFAULTLIB /INCREMENTAL:NO /RELEASE /NOLO",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:541,Modifiability,Variab,Variable,541,"////////////////////////////////////////////////////////////////////////////////; /// Directives should contain the description on how to compile and link a; /// shared lib. This description can be any valid shell command, including; /// the use of ';' to separate several instructions. However, shell specific; /// construct should be avoided. In particular this description can contain; /// environment variables, like $ROOTSYS (or %ROOTSYS% on windows).; /// ~~~ {.cpp}; /// Five special variables will be expanded before execution:; /// Variable name Expands to; /// ------------- ----------; /// $SourceFiles Name of source files to be compiled; /// $SharedLib Name of the shared library being created; /// $LibName Name of shared library without extension; /// $BuildDir Directory where the files will be created; /// $IncludePath value of fIncludePath; /// $LinkedLibs value of fLinkedLibs; /// $DepLibs libraries on which this library depends on; /// $ObjectFiles Name of source files to be compiler with; /// their extension changed to .o or .obj; /// $Opt location of the optimization/debug options; /// set fFlagsDebug and fFlagsOpt; /// ~~~; /// e.g.:; /// ~~~ {.cpp}; /// gSystem->SetMakeSharedLib(; /// ""KCC -n32 --strict $IncludePath -K0 \$Opt $SourceFile; /// --no_exceptions --signed_chars --display_error_number; /// --diag_suppress 68 -o $SharedLib"");; ///; /// gSystem->setMakeSharedLib(; /// ""Cxx $IncludePath -c $SourceFile;; /// ld -L/usr/lib/cmplrs/cxx -rpath /usr/lib/cmplrs/cxx -expect_unresolved; /// \$Opt -shared /usr/lib/cmplrs/cc/crt0.o /usr/lib/cmplrs/cxx/_main.o; /// -o $SharedLib $ObjectFile -lcxxstd -lcxx -lexc -lots -lc""; ///; /// gSystem->SetMakeSharedLib(; /// ""$HOME/mygcc/bin/g++ \$Opt -Wall -fPIC $IncludePath $SourceFile; /// -shared -o $SharedLib"");; ///; /// gSystem->SetMakeSharedLib(; /// ""cl -DWIN32 -D_WIN32 -D_MT -D_DLL -MD /O2 /G5 /MD -DWIN32; /// -D_WINDOWS $IncludePath $SourceFile; /// /link -PDB:NONE /NODEFAULTLIB /INCREMENTAL:NO /RELEASE /NOLO",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:1082,Performance,optimiz,optimization,1082,"/// Directives should contain the description on how to compile and link a; /// shared lib. This description can be any valid shell command, including; /// the use of ';' to separate several instructions. However, shell specific; /// construct should be avoided. In particular this description can contain; /// environment variables, like $ROOTSYS (or %ROOTSYS% on windows).; /// ~~~ {.cpp}; /// Five special variables will be expanded before execution:; /// Variable name Expands to; /// ------------- ----------; /// $SourceFiles Name of source files to be compiled; /// $SharedLib Name of the shared library being created; /// $LibName Name of shared library without extension; /// $BuildDir Directory where the files will be created; /// $IncludePath value of fIncludePath; /// $LinkedLibs value of fLinkedLibs; /// $DepLibs libraries on which this library depends on; /// $ObjectFiles Name of source files to be compiler with; /// their extension changed to .o or .obj; /// $Opt location of the optimization/debug options; /// set fFlagsDebug and fFlagsOpt; /// ~~~; /// e.g.:; /// ~~~ {.cpp}; /// gSystem->SetMakeSharedLib(; /// ""KCC -n32 --strict $IncludePath -K0 \$Opt $SourceFile; /// --no_exceptions --signed_chars --display_error_number; /// --diag_suppress 68 -o $SharedLib"");; ///; /// gSystem->setMakeSharedLib(; /// ""Cxx $IncludePath -c $SourceFile;; /// ld -L/usr/lib/cmplrs/cxx -rpath /usr/lib/cmplrs/cxx -expect_unresolved; /// \$Opt -shared /usr/lib/cmplrs/cc/crt0.o /usr/lib/cmplrs/cxx/_main.o; /// -o $SharedLib $ObjectFile -lcxxstd -lcxx -lexc -lots -lc""; ///; /// gSystem->SetMakeSharedLib(; /// ""$HOME/mygcc/bin/g++ \$Opt -Wall -fPIC $IncludePath $SourceFile; /// -shared -o $SharedLib"");; ///; /// gSystem->SetMakeSharedLib(; /// ""cl -DWIN32 -D_WIN32 -D_MT -D_DLL -MD /O2 /G5 /MD -DWIN32; /// -D_WINDOWS $IncludePath $SourceFile; /// /link -PDB:NONE /NODEFAULTLIB /INCREMENTAL:NO /RELEASE /NOLOGO; /// $LinkedLibs -entry:_DllMainCRTStartup@12 -dll /out:$SharedLib""); /// ~~~",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:336,Safety,avoid,avoided,336,"////////////////////////////////////////////////////////////////////////////////; /// Directives should contain the description on how to compile and link a; /// shared lib. This description can be any valid shell command, including; /// the use of ';' to separate several instructions. However, shell specific; /// construct should be avoided. In particular this description can contain; /// environment variables, like $ROOTSYS (or %ROOTSYS% on windows).; /// ~~~ {.cpp}; /// Five special variables will be expanded before execution:; /// Variable name Expands to; /// ------------- ----------; /// $SourceFiles Name of source files to be compiled; /// $SharedLib Name of the shared library being created; /// $LibName Name of shared library without extension; /// $BuildDir Directory where the files will be created; /// $IncludePath value of fIncludePath; /// $LinkedLibs value of fLinkedLibs; /// $DepLibs libraries on which this library depends on; /// $ObjectFiles Name of source files to be compiler with; /// their extension changed to .o or .obj; /// $Opt location of the optimization/debug options; /// set fFlagsDebug and fFlagsOpt; /// ~~~; /// e.g.:; /// ~~~ {.cpp}; /// gSystem->SetMakeSharedLib(; /// ""KCC -n32 --strict $IncludePath -K0 \$Opt $SourceFile; /// --no_exceptions --signed_chars --display_error_number; /// --diag_suppress 68 -o $SharedLib"");; ///; /// gSystem->setMakeSharedLib(; /// ""Cxx $IncludePath -c $SourceFile;; /// ld -L/usr/lib/cmplrs/cxx -rpath /usr/lib/cmplrs/cxx -expect_unresolved; /// \$Opt -shared /usr/lib/cmplrs/cc/crt0.o /usr/lib/cmplrs/cxx/_main.o; /// -o $SharedLib $ObjectFile -lcxxstd -lcxx -lexc -lots -lc""; ///; /// gSystem->SetMakeSharedLib(; /// ""$HOME/mygcc/bin/g++ \$Opt -Wall -fPIC $IncludePath $SourceFile; /// -shared -o $SharedLib"");; ///; /// gSystem->SetMakeSharedLib(; /// ""cl -DWIN32 -D_WIN32 -D_MT -D_DLL -MD /O2 /G5 /MD -DWIN32; /// -D_WINDOWS $IncludePath $SourceFile; /// /link -PDB:NONE /NODEFAULTLIB /INCREMENTAL:NO /RELEASE /NOLO",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:63,Modifiability,variab,variables,63,"// NOTE: add verification that the directives has the required variables",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:213,Integrability,interface,interface,213,"////////////////////////////////////////////////////////////////////////////////; /// \brief Add a directory to the already set include path.; /// \param[in] includePath The path to the directory.; /// \note This interface is mostly relevant for ACLiC and it does *not* inform; /// gInterpreter for this include path. If the TInterpreter needs to know; /// about the include path please use TInterpreter::AddIncludePath() .; /// \warning The path should start with the \c -I prefix, i.e.; /// <tt>gSystem->AddIncludePath(""-I /path/to/my/includes"")</tt>.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:346,Modifiability,config,config,346,"////////////////////////////////////////////////////////////////////////////////; /// LinkedLibs should contain the library directory and list of libraries; /// needed to recreate the current executable. It is used to expand $LinkedLibs; /// in the directives given to SetMakeSharedLib() and SetMakeExe(); /// The default value on Unix is: `root-config --glibs`",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:140,Performance,load,loaded,140,"////////////////////////////////////////////////////////////////////////////////; /// The 'suffix' will be appended to the name of a script loaded by ACLiC; /// and used to locate any eventual additional linkdef information that; /// ACLiC should used to produce the dictionary.; ///; /// So by default, when doing .L MyScript.cxx, ACLiC will look; /// for a file name MyScript_linkdef and having one of the .h (.hpp,; /// etc.) extensions. If such a file exist, it will be added to; /// the end of the linkdef file used to created the ACLiC dictionary.; /// This effectively enable the full customization of the creation; /// of the dictionary. It should be noted that the file is intended; /// as a linkdef `fragment`, so usually you would not list the; /// typical:; /// ~~~ {.cpp}; /// #pragma link off ....; /// ~~~",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:106,Modifiability,plugin,plugin,106,"////////////////////////////////////////////////////////////////////////////////; /// Register version of plugin library.",MatchSource.CODE_COMMENT,core/base/src/TSystem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystemDirectory.cxx:299,Availability,error,errors,299,"////////////////////////////////////////////////////////////////////////////////; /// Returns a TList of TSystemFile objects representing the contents; /// of the directory. It's the responsibility of the user to delete; /// the list (the list owns the contained objects).; /// Returns 0 in case of errors.",MatchSource.CODE_COMMENT,core/base/src/TSystemDirectory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystemDirectory.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystemDirectory.cxx:115,Deployability,continuous,continuous,115,"// Collections to keep track of all browser objects that have been; // generated. It's main goal is to prevent the continuous; // allocations of new objects with the same names during browsing.",MatchSource.CODE_COMMENT,core/base/src/TSystemDirectory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystemDirectory.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTask.cxx:1448,Usability,resume,resumed,1448,"*****/; /** \class TTask; \ingroup Base. \legacy{TTask}. TTask is a base class that can be used to build a complex tree of Tasks.; Each TTask derived class may contain other TTasks that can be executed; recursively, such that a complex program can be dynamically built and executed; by invoking the services of the top level Task or one of its subtasks. Use the TTask::Add function to add a subtask to an existing TTask.; To execute a TTask, one calls the ExecuteTask function. ExecuteTask will; call recursively:. - the TTask::Exec function of the derived class; - TTask::ExecuteTasks to execute for each task the list of its subtasks. If the top level task (see example below) is added to the list of Root; browsable objects, the tree of tasks can be visualized by the Root browser.; The browser can be used to start a task, set break points at the beginning; of a task or when the task has completed. At a breakpoint, data structures; generated by the execution up this point may be inspected asynchronously; and then the execution can be resumed by selecting the ""Continue"" function; of a task.; //; A Task may be active or inactive (controlled by TTask::SetActive).; When a task is not active, its sub tasks are not executed.; //; A TTask tree may be made persistent, saving the status of all the tasks.; //; The Root browser's picture below has been generated by executing; the following script:; ~~~ {.cpp}; {; TTask *aliroot = new TTask(""aliroot"",""ALICE reconstruction main task"");; TTask *geominit = new TTask(""geomInit"",""Initialize ALICE geometry"");; TTask *matinit = new TTask(""matInit"",""Initialize ALICE materials"");; TTask *physinit = new TTask(""physInit"",""Initialize Physics processes"");; TTask *tracker = new TTask(""tracker"",""Track reconstruction manager"");; TTask *tpcrec = new TTask(""tpcrec"",""TPC reconstruction"");; TTask *itsrec = new TTask(""itsrec"",""ITS reconstruction"");; TTask *muonrec = new TTask(""muonRec"",""Muon Reconstruction"");; TTask *phosrec = new TTask(""phosRec"",""Phos Reco",MatchSource.CODE_COMMENT,core/base/src/TTask.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTask.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTask.cxx:86,Safety,Abort,Abort,86,"////////////////////////////////////////////////////////////////////////////////; /// Abort current tree of tasks.; /// After this call, the tree of tasks is ready to be executed again.; /// The application must take care of cleaning data structures created; /// by previous executions.",MatchSource.CODE_COMMENT,core/base/src/TTask.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTask.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTask.cxx:157,Usability,Clear,Clear,157,"////////////////////////////////////////////////////////////////////////////////; /// Reset tasks state: breakpoints and execute flags; /// also invokes the Clear function of each task to clear all data; /// structures created by a previous execution of a task.",MatchSource.CODE_COMMENT,core/base/src/TTask.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTask.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTask.cxx:188,Usability,clear,clear,188,"////////////////////////////////////////////////////////////////////////////////; /// Reset tasks state: breakpoints and execute flags; /// also invokes the Clear function of each task to clear all data; /// structures created by a previous execution of a task.",MatchSource.CODE_COMMENT,core/base/src/TTask.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTask.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTask.cxx:107,Usability,Clear,Clear,107,"////////////////////////////////////////////////////////////////////////////////; /// Recursively call the Clear function of this task and its subtasks.; /// The Clear function must be implemented for each derived class; /// to clear all data structures created by a previous execution of a task.; /// This function is automatically called by the CleanTasks function.",MatchSource.CODE_COMMENT,core/base/src/TTask.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTask.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTask.cxx:162,Usability,Clear,Clear,162,"////////////////////////////////////////////////////////////////////////////////; /// Recursively call the Clear function of this task and its subtasks.; /// The Clear function must be implemented for each derived class; /// to clear all data structures created by a previous execution of a task.; /// This function is automatically called by the CleanTasks function.",MatchSource.CODE_COMMENT,core/base/src/TTask.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTask.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTask.cxx:228,Usability,clear,clear,228,"////////////////////////////////////////////////////////////////////////////////; /// Recursively call the Clear function of this task and its subtasks.; /// The Clear function must be implemented for each derived class; /// to clear all data structures created by a previous execution of a task.; /// This function is automatically called by the CleanTasks function.",MatchSource.CODE_COMMENT,core/base/src/TTask.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTask.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTask.cxx:86,Usability,Resume,Resume,86,"////////////////////////////////////////////////////////////////////////////////; /// Resume execution at the current break point.",MatchSource.CODE_COMMENT,core/base/src/TTask.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTask.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx:1084,Safety,Timeout,Timeout,1084,"// @(#)root/base:$Id$; // Author: Fons Rademakers 28/11/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTimer; \ingroup Base. Handles synchronous and a-synchronous timer events.; 1. synchronous timer is registered into TSystem and is processed; within the standard ROOT event-loop.; 2. asynchronous timer is passed to the operating system which sends; an external signal to ROOT and thus interrupts its event-loop. You can use this class in one of the following ways:; - Sub-class TTimer and override the Notify() method.; - Re-implement the TObject::HandleTimer() method in your class; and pass a pointer to this object to timer, see the SetObject(); method.; - Pass an interpreter command to timer, see SetCommand() method.; - Create a TTimer, connect its Timeout() signal to the; appropriate methods. Then when the time is up it will emit a; Timeout() signal and call connected slots. Minimum timeout interval is defined in TSystem::ESysConstants as; `kItimerResolution` (currently 10 ms). Signal/slots example:; ~~~{.cpp}; TTimer *timer = new TTimer();; timer->Connect(""Timeout()"", ""myObjectClassName"",; myObject, ""TimerDone()"");; timer->Start(2000, kTRUE); // 2 seconds single-shot; ~~~; To emit the Timeout signal repeatedly with minimum timeout:; ~~~ {.cpp}; timer->Start(0, kFALSE);; ~~~; */",MatchSource.CODE_COMMENT,core/base/src/TTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx:1171,Safety,Timeout,Timeout,1171,"// @(#)root/base:$Id$; // Author: Fons Rademakers 28/11/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTimer; \ingroup Base. Handles synchronous and a-synchronous timer events.; 1. synchronous timer is registered into TSystem and is processed; within the standard ROOT event-loop.; 2. asynchronous timer is passed to the operating system which sends; an external signal to ROOT and thus interrupts its event-loop. You can use this class in one of the following ways:; - Sub-class TTimer and override the Notify() method.; - Re-implement the TObject::HandleTimer() method in your class; and pass a pointer to this object to timer, see the SetObject(); method.; - Pass an interpreter command to timer, see SetCommand() method.; - Create a TTimer, connect its Timeout() signal to the; appropriate methods. Then when the time is up it will emit a; Timeout() signal and call connected slots. Minimum timeout interval is defined in TSystem::ESysConstants as; `kItimerResolution` (currently 10 ms). Signal/slots example:; ~~~{.cpp}; TTimer *timer = new TTimer();; timer->Connect(""Timeout()"", ""myObjectClassName"",; myObject, ""TimerDone()"");; timer->Start(2000, kTRUE); // 2 seconds single-shot; ~~~; To emit the Timeout signal repeatedly with minimum timeout:; ~~~ {.cpp}; timer->Start(0, kFALSE);; ~~~; */",MatchSource.CODE_COMMENT,core/base/src/TTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx:1222,Safety,timeout,timeout,1222,"// @(#)root/base:$Id$; // Author: Fons Rademakers 28/11/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTimer; \ingroup Base. Handles synchronous and a-synchronous timer events.; 1. synchronous timer is registered into TSystem and is processed; within the standard ROOT event-loop.; 2. asynchronous timer is passed to the operating system which sends; an external signal to ROOT and thus interrupts its event-loop. You can use this class in one of the following ways:; - Sub-class TTimer and override the Notify() method.; - Re-implement the TObject::HandleTimer() method in your class; and pass a pointer to this object to timer, see the SetObject(); method.; - Pass an interpreter command to timer, see SetCommand() method.; - Create a TTimer, connect its Timeout() signal to the; appropriate methods. Then when the time is up it will emit a; Timeout() signal and call connected slots. Minimum timeout interval is defined in TSystem::ESysConstants as; `kItimerResolution` (currently 10 ms). Signal/slots example:; ~~~{.cpp}; TTimer *timer = new TTimer();; timer->Connect(""Timeout()"", ""myObjectClassName"",; myObject, ""TimerDone()"");; timer->Start(2000, kTRUE); // 2 seconds single-shot; ~~~; To emit the Timeout signal repeatedly with minimum timeout:; ~~~ {.cpp}; timer->Start(0, kFALSE);; ~~~; */",MatchSource.CODE_COMMENT,core/base/src/TTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx:1400,Safety,Timeout,Timeout,1400,"// @(#)root/base:$Id$; // Author: Fons Rademakers 28/11/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTimer; \ingroup Base. Handles synchronous and a-synchronous timer events.; 1. synchronous timer is registered into TSystem and is processed; within the standard ROOT event-loop.; 2. asynchronous timer is passed to the operating system which sends; an external signal to ROOT and thus interrupts its event-loop. You can use this class in one of the following ways:; - Sub-class TTimer and override the Notify() method.; - Re-implement the TObject::HandleTimer() method in your class; and pass a pointer to this object to timer, see the SetObject(); method.; - Pass an interpreter command to timer, see SetCommand() method.; - Create a TTimer, connect its Timeout() signal to the; appropriate methods. Then when the time is up it will emit a; Timeout() signal and call connected slots. Minimum timeout interval is defined in TSystem::ESysConstants as; `kItimerResolution` (currently 10 ms). Signal/slots example:; ~~~{.cpp}; TTimer *timer = new TTimer();; timer->Connect(""Timeout()"", ""myObjectClassName"",; myObject, ""TimerDone()"");; timer->Start(2000, kTRUE); // 2 seconds single-shot; ~~~; To emit the Timeout signal repeatedly with minimum timeout:; ~~~ {.cpp}; timer->Start(0, kFALSE);; ~~~; */",MatchSource.CODE_COMMENT,core/base/src/TTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx:1531,Safety,Timeout,Timeout,1531,"// @(#)root/base:$Id$; // Author: Fons Rademakers 28/11/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTimer; \ingroup Base. Handles synchronous and a-synchronous timer events.; 1. synchronous timer is registered into TSystem and is processed; within the standard ROOT event-loop.; 2. asynchronous timer is passed to the operating system which sends; an external signal to ROOT and thus interrupts its event-loop. You can use this class in one of the following ways:; - Sub-class TTimer and override the Notify() method.; - Re-implement the TObject::HandleTimer() method in your class; and pass a pointer to this object to timer, see the SetObject(); method.; - Pass an interpreter command to timer, see SetCommand() method.; - Create a TTimer, connect its Timeout() signal to the; appropriate methods. Then when the time is up it will emit a; Timeout() signal and call connected slots. Minimum timeout interval is defined in TSystem::ESysConstants as; `kItimerResolution` (currently 10 ms). Signal/slots example:; ~~~{.cpp}; TTimer *timer = new TTimer();; timer->Connect(""Timeout()"", ""myObjectClassName"",; myObject, ""TimerDone()"");; timer->Start(2000, kTRUE); // 2 seconds single-shot; ~~~; To emit the Timeout signal repeatedly with minimum timeout:; ~~~ {.cpp}; timer->Start(0, kFALSE);; ~~~; */",MatchSource.CODE_COMMENT,core/base/src/TTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx:1570,Safety,timeout,timeout,1570,"// @(#)root/base:$Id$; // Author: Fons Rademakers 28/11/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTimer; \ingroup Base. Handles synchronous and a-synchronous timer events.; 1. synchronous timer is registered into TSystem and is processed; within the standard ROOT event-loop.; 2. asynchronous timer is passed to the operating system which sends; an external signal to ROOT and thus interrupts its event-loop. You can use this class in one of the following ways:; - Sub-class TTimer and override the Notify() method.; - Re-implement the TObject::HandleTimer() method in your class; and pass a pointer to this object to timer, see the SetObject(); method.; - Pass an interpreter command to timer, see SetCommand() method.; - Create a TTimer, connect its Timeout() signal to the; appropriate methods. Then when the time is up it will emit a; Timeout() signal and call connected slots. Minimum timeout interval is defined in TSystem::ESysConstants as; `kItimerResolution` (currently 10 ms). Signal/slots example:; ~~~{.cpp}; TTimer *timer = new TTimer();; timer->Connect(""Timeout()"", ""myObjectClassName"",; myObject, ""TimerDone()"");; timer->Start(2000, kTRUE); // 2 seconds single-shot; ~~~; To emit the Timeout signal repeatedly with minimum timeout:; ~~~ {.cpp}; timer->Start(0, kFALSE);; ~~~; */",MatchSource.CODE_COMMENT,core/base/src/TTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx:165,Safety,timeout,timeout,165,"////////////////////////////////////////////////////////////////////////////////; /// Create timer that times out in ms milliseconds. If milliSec is 0; /// then the timeout will be the minimum timeout (see TSystem::ESysConstants,; /// i.e. 10 ms). If mode == kTRUE then the timer is synchronous else; /// a-synchronous. The default is synchronous. Add a timer to the system; /// eventloop by calling TurnOn(). Set command to be executed from Notify(); /// or set the object whose HandleTimer() method will be called via Notify(),; /// derive from TTimer and override Notify() or connect slots to the; /// signals Timeout(), TurnOn() and TurnOff().",MatchSource.CODE_COMMENT,core/base/src/TTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx:193,Safety,timeout,timeout,193,"////////////////////////////////////////////////////////////////////////////////; /// Create timer that times out in ms milliseconds. If milliSec is 0; /// then the timeout will be the minimum timeout (see TSystem::ESysConstants,; /// i.e. 10 ms). If mode == kTRUE then the timer is synchronous else; /// a-synchronous. The default is synchronous. Add a timer to the system; /// eventloop by calling TurnOn(). Set command to be executed from Notify(); /// or set the object whose HandleTimer() method will be called via Notify(),; /// derive from TTimer and override Notify() or connect slots to the; /// signals Timeout(), TurnOn() and TurnOff().",MatchSource.CODE_COMMENT,core/base/src/TTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx:613,Safety,Timeout,Timeout,613,"////////////////////////////////////////////////////////////////////////////////; /// Create timer that times out in ms milliseconds. If milliSec is 0; /// then the timeout will be the minimum timeout (see TSystem::ESysConstants,; /// i.e. 10 ms). If mode == kTRUE then the timer is synchronous else; /// a-synchronous. The default is synchronous. Add a timer to the system; /// eventloop by calling TurnOn(). Set command to be executed from Notify(); /// or set the object whose HandleTimer() method will be called via Notify(),; /// derive from TTimer and override Notify() or connect slots to the; /// signals Timeout(), TurnOn() and TurnOff().",MatchSource.CODE_COMMENT,core/base/src/TTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx:8,Safety,Timeout,Timeout,8,"// emit Timeout() signal",MatchSource.CODE_COMMENT,core/base/src/TTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx:299,Safety,timeout,timeout,299,"////////////////////////////////////////////////////////////////////////////////; /// When the argument is true the a-synchronous timer (SIGALRM) signal; /// handler is set so that interrupted syscalls will not be restarted; /// by the kernel. This is typically used in case one wants to put a; /// timeout on an I/O operation. By default interrupted syscalls will; /// be restarted.",MatchSource.CODE_COMMENT,core/base/src/TTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx:119,Safety,timeout,timeout,119,"////////////////////////////////////////////////////////////////////////////////; /// Starts the timer with a milliSec timeout. If milliSec is 0; /// then the timeout will be the minimum timeout (see TSystem::ESysConstants,; /// i.e. 10 ms), if milliSec is -1 then the time interval as previously; /// specified (in ctor or SetTime()) will be used.; /// If singleShot is kTRUE, the timer will be activated only once,; /// otherwise it will continue until it is stopped.; /// See also TurnOn(), Stop(), TurnOff().",MatchSource.CODE_COMMENT,core/base/src/TTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx:159,Safety,timeout,timeout,159,"////////////////////////////////////////////////////////////////////////////////; /// Starts the timer with a milliSec timeout. If milliSec is 0; /// then the timeout will be the minimum timeout (see TSystem::ESysConstants,; /// i.e. 10 ms), if milliSec is -1 then the time interval as previously; /// specified (in ctor or SetTime()) will be used.; /// If singleShot is kTRUE, the timer will be activated only once,; /// otherwise it will continue until it is stopped.; /// See also TurnOn(), Stop(), TurnOff().",MatchSource.CODE_COMMENT,core/base/src/TTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx:187,Safety,timeout,timeout,187,"////////////////////////////////////////////////////////////////////////////////; /// Starts the timer with a milliSec timeout. If milliSec is 0; /// then the timeout will be the minimum timeout (see TSystem::ESysConstants,; /// i.e. 10 ms), if milliSec is -1 then the time interval as previously; /// specified (in ctor or SetTime()) will be used.; /// If singleShot is kTRUE, the timer will be activated only once,; /// otherwise it will continue until it is stopped.; /// See also TurnOn(), Stop(), TurnOff().",MatchSource.CODE_COMMENT,core/base/src/TTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx:105,Safety,Timeout,Timeout,105,"// single shot timer cleaner; // gSingleShotCleaner will delete singleShotTimer a; // short period after Timeout() signal is emitted",MatchSource.CODE_COMMENT,core/base/src/TTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:513,Modifiability,extend,extends,513,"// @(#)root/base:$Id$; // Author: R. Hatcher 30/9/2001; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTimeStamp; \ingroup Base. The TTimeStamp encapsulates seconds and ns since EPOCH. This extends (and isolates) struct timespec; ~~~ {.cpp}; struct timespec; {; time_t tv_sec; // seconds; long tv_nsec; // nanoseconds; }; time_t seconds is relative to Jan 1, 1970 00:00:00 UTC; ~~~; No accounting of leap seconds is made. Due to ROOT/CINT limitations TTimeStamp does not explicitly; hold a timespec struct; attempting to do so means the Streamer; must be hand written. Instead we have chosen to simply contain; similar fields within the private area of this class. NOTE: the use of time_t (and its default implementation as a 32 int); implies overflow conditions occurs somewhere around; `Jan 18, 19:14:07, 2038`.; If this experiment is still going when it becomes significant; someone will have to deal with it.; */",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:918,Usability,simpl,simply,918,"// @(#)root/base:$Id$; // Author: R. Hatcher 30/9/2001; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTimeStamp; \ingroup Base. The TTimeStamp encapsulates seconds and ns since EPOCH. This extends (and isolates) struct timespec; ~~~ {.cpp}; struct timespec; {; time_t tv_sec; // seconds; long tv_nsec; // nanoseconds; }; time_t seconds is relative to Jan 1, 1970 00:00:00 UTC; ~~~; No accounting of leap seconds is made. Due to ROOT/CINT limitations TTimeStamp does not explicitly; hold a timespec struct; attempting to do so means the Streamer; must be hand written. Instead we have chosen to simply contain; similar fields within the private area of this class. NOTE: the use of time_t (and its default implementation as a 32 int); implies overflow conditions occurs somewhere around; `Jan 18, 19:14:07, 2038`.; If this experiment is still going when it becomes significant; someone will have to deal with it.; */",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:235,Usability,simpl,simply,235,"////////////////////////////////////////////////////////////////////////////////; /// Default ctor. Create a TTimeStamp and set it to the current time; /// (as best possible). The nanosecond part is faked so that subsequent; /// calls simply add 1 to ensure that sequential calls are distinct; /// (and sortable).",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:453,Availability,error,error,453,"////////////////////////////////////////////////////////////////////////////////; /// Return Greenwich mean sidereal time (GMST) in hour-angle. Return value; /// will always be between 0 and 24 (hours). Sidereal time is most accurately; /// calculated from UT1. If fSec and fNanoSec are in UTC (which they are by; /// default), the optional argument UT1Offset can be supplied (in; /// milliseconds). If UT1Offset is not supplied, conversion has maximum error; /// of 1s. If offset is supplied error can be reduced to us level. Values for; /// UT1Offset can be found in IERS Bulletin B:; /// ftp://ftp.iers.org/products/eop/bulletinb/format_2009/; /// The conversion to sidereal time used here is given by; /// Aoki et. al. Astron. Astrophys. 105, 359-362 (1982); /// http://adsabs.harvard.edu/abs/1982A%26A...105..359A",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:493,Availability,error,error,493,"////////////////////////////////////////////////////////////////////////////////; /// Return Greenwich mean sidereal time (GMST) in hour-angle. Return value; /// will always be between 0 and 24 (hours). Sidereal time is most accurately; /// calculated from UT1. If fSec and fNanoSec are in UTC (which they are by; /// default), the optional argument UT1Offset can be supplied (in; /// milliseconds). If UT1Offset is not supplied, conversion has maximum error; /// of 1s. If offset is supplied error can be reduced to us level. Values for; /// UT1Offset can be found in IERS Bulletin B:; /// ftp://ftp.iers.org/products/eop/bulletinb/format_2009/; /// The conversion to sidereal time used here is given by; /// Aoki et. al. Astron. Astrophys. 105, 359-362 (1982); /// http://adsabs.harvard.edu/abs/1982A%26A...105..359A",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:93,Energy Efficiency,Green,Greenwich,93,"////////////////////////////////////////////////////////////////////////////////; /// Return Greenwich mean sidereal time (GMST) in hour-angle. Return value; /// will always be between 0 and 24 (hours). Sidereal time is most accurately; /// calculated from UT1. If fSec and fNanoSec are in UTC (which they are by; /// default), the optional argument UT1Offset can be supplied (in; /// milliseconds). If UT1Offset is not supplied, conversion has maximum error; /// of 1s. If offset is supplied error can be reduced to us level. Values for; /// UT1Offset can be found in IERS Bulletin B:; /// ftp://ftp.iers.org/products/eop/bulletinb/format_2009/; /// The conversion to sidereal time used here is given by; /// Aoki et. al. Astron. Astrophys. 105, 359-362 (1982); /// http://adsabs.harvard.edu/abs/1982A%26A...105..359A",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:506,Energy Efficiency,reduce,reduced,506,"////////////////////////////////////////////////////////////////////////////////; /// Return Greenwich mean sidereal time (GMST) in hour-angle. Return value; /// will always be between 0 and 24 (hours). Sidereal time is most accurately; /// calculated from UT1. If fSec and fNanoSec are in UTC (which they are by; /// default), the optional argument UT1Offset can be supplied (in; /// milliseconds). If UT1Offset is not supplied, conversion has maximum error; /// of 1s. If offset is supplied error can be reduced to us level. Values for; /// UT1Offset can be found in IERS Bulletin B:; /// ftp://ftp.iers.org/products/eop/bulletinb/format_2009/; /// The conversion to sidereal time used here is given by; /// Aoki et. al. Astron. Astrophys. 105, 359-362 (1982); /// http://adsabs.harvard.edu/abs/1982A%26A...105..359A",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:457,Availability,error,error,457,"////////////////////////////////////////////////////////////////////////////////; /// Return Greenwich apparent sidereal time (GAST) in hour-angle. Return; /// value will always be between 0 and 24 (hours). Sidereal time is most; /// accurately calculated from UT1. If fSec and fNanoSec are in UTC (which; /// they are by default), the optional argument UT1Offset can be supplied (in; /// milliseconds). If UT1Offset is not supplied, conversion has maximum error; /// of 1s. If offset is supplied error can be reduced to us level. Values for; /// UT1Offset can be found in IERS Bulletin B:; /// ftp://ftp.iers.org/products/eop/bulletinb/format_2009/; /// Equation of the equinoxes is given by USNO:; /// http://aa.usno.navy.mil/faq/docs/GAST.php",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:497,Availability,error,error,497,"////////////////////////////////////////////////////////////////////////////////; /// Return Greenwich apparent sidereal time (GAST) in hour-angle. Return; /// value will always be between 0 and 24 (hours). Sidereal time is most; /// accurately calculated from UT1. If fSec and fNanoSec are in UTC (which; /// they are by default), the optional argument UT1Offset can be supplied (in; /// milliseconds). If UT1Offset is not supplied, conversion has maximum error; /// of 1s. If offset is supplied error can be reduced to us level. Values for; /// UT1Offset can be found in IERS Bulletin B:; /// ftp://ftp.iers.org/products/eop/bulletinb/format_2009/; /// Equation of the equinoxes is given by USNO:; /// http://aa.usno.navy.mil/faq/docs/GAST.php",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:93,Energy Efficiency,Green,Greenwich,93,"////////////////////////////////////////////////////////////////////////////////; /// Return Greenwich apparent sidereal time (GAST) in hour-angle. Return; /// value will always be between 0 and 24 (hours). Sidereal time is most; /// accurately calculated from UT1. If fSec and fNanoSec are in UTC (which; /// they are by default), the optional argument UT1Offset can be supplied (in; /// milliseconds). If UT1Offset is not supplied, conversion has maximum error; /// of 1s. If offset is supplied error can be reduced to us level. Values for; /// UT1Offset can be found in IERS Bulletin B:; /// ftp://ftp.iers.org/products/eop/bulletinb/format_2009/; /// Equation of the equinoxes is given by USNO:; /// http://aa.usno.navy.mil/faq/docs/GAST.php",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:510,Energy Efficiency,reduce,reduced,510,"////////////////////////////////////////////////////////////////////////////////; /// Return Greenwich apparent sidereal time (GAST) in hour-angle. Return; /// value will always be between 0 and 24 (hours). Sidereal time is most; /// accurately calculated from UT1. If fSec and fNanoSec are in UTC (which; /// they are by default), the optional argument UT1Offset can be supplied (in; /// milliseconds). If UT1Offset is not supplied, conversion has maximum error; /// of 1s. If offset is supplied error can be reduced to us level. Values for; /// UT1Offset can be found in IERS Bulletin B:; /// ftp://ftp.iers.org/products/eop/bulletinb/format_2009/; /// Equation of the equinoxes is given by USNO:; /// http://aa.usno.navy.mil/faq/docs/GAST.php",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:484,Availability,error,error,484,"////////////////////////////////////////////////////////////////////////////////; /// Return local mean sidereal time (LMST) in hour-angle, given a longitude; /// in degrees. Return value will always be between 0 and 24 (hours).; /// Sidereal time is most accurately calculated from UT1. If fSec and; /// fNanoSec are in UTC (which they are by default), the optional argument; /// UT1Offset can be supplied (in milliseconds). If UT1Offset is not; /// supplied, conversion has maximum error of 1s. If offset is supplied error; /// can be reduced to us level. Values for UT1Offset can be found in IERS; /// Bulletin B: ftp://ftp.iers.org/products/eop/bulletinb/format_2009/",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:519,Availability,error,error,519,"////////////////////////////////////////////////////////////////////////////////; /// Return local mean sidereal time (LMST) in hour-angle, given a longitude; /// in degrees. Return value will always be between 0 and 24 (hours).; /// Sidereal time is most accurately calculated from UT1. If fSec and; /// fNanoSec are in UTC (which they are by default), the optional argument; /// UT1Offset can be supplied (in milliseconds). If UT1Offset is not; /// supplied, conversion has maximum error of 1s. If offset is supplied error; /// can be reduced to us level. Values for UT1Offset can be found in IERS; /// Bulletin B: ftp://ftp.iers.org/products/eop/bulletinb/format_2009/",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:537,Energy Efficiency,reduce,reduced,537,"////////////////////////////////////////////////////////////////////////////////; /// Return local mean sidereal time (LMST) in hour-angle, given a longitude; /// in degrees. Return value will always be between 0 and 24 (hours).; /// Sidereal time is most accurately calculated from UT1. If fSec and; /// fNanoSec are in UTC (which they are by default), the optional argument; /// UT1Offset can be supplied (in milliseconds). If UT1Offset is not; /// supplied, conversion has maximum error of 1s. If offset is supplied error; /// can be reduced to us level. Values for UT1Offset can be found in IERS; /// Bulletin B: ftp://ftp.iers.org/products/eop/bulletinb/format_2009/",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:488,Availability,error,error,488,"////////////////////////////////////////////////////////////////////////////////; /// Return local apparent sidereal time (LAST) in hour-angle, given a; /// longitude in degrees. Return value will always be between 0 and 24; /// (hours). Sidereal time is most accurately calculated from UT1. If fSec; /// and fNanoSec are in UTC (which they are by default), the optional; /// argument UT1Offset can be supplied (in milliseconds). If UT1Offset is not; /// supplied, conversion has maximum error of 1s. If offset is supplied error; /// can be reduced to us level. Values for UT1Offset can be found in IERS; /// Bulletin B: ftp://ftp.iers.org/products/eop/bulletinb/format_2009/",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:523,Availability,error,error,523,"////////////////////////////////////////////////////////////////////////////////; /// Return local apparent sidereal time (LAST) in hour-angle, given a; /// longitude in degrees. Return value will always be between 0 and 24; /// (hours). Sidereal time is most accurately calculated from UT1. If fSec; /// and fNanoSec are in UTC (which they are by default), the optional; /// argument UT1Offset can be supplied (in milliseconds). If UT1Offset is not; /// supplied, conversion has maximum error of 1s. If offset is supplied error; /// can be reduced to us level. Values for UT1Offset can be found in IERS; /// Bulletin B: ftp://ftp.iers.org/products/eop/bulletinb/format_2009/",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:541,Energy Efficiency,reduce,reduced,541,"////////////////////////////////////////////////////////////////////////////////; /// Return local apparent sidereal time (LAST) in hour-angle, given a; /// longitude in degrees. Return value will always be between 0 and 24; /// (hours). Sidereal time is most accurately calculated from UT1. If fSec; /// and fNanoSec are in UTC (which they are by default), the optional; /// argument UT1Offset can be supplied (in milliseconds). If UT1Offset is not; /// supplied, conversion has maximum error of 1s. If offset is supplied error; /// can be reduced to us level. Values for UT1Offset can be found in IERS; /// Bulletin B: ftp://ftp.iers.org/products/eop/bulletinb/format_2009/",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:166,Energy Efficiency,allocate,allocated,166,"////////////////////////////////////////////////////////////////////////////////; /// Return the date & time as a string.; ///; /// Result is pointer to a statically allocated string.; /// User should copy this into their own buffer before calling; /// this method again.; ///; /// Option ""l"" returns it in local zone format; /// (can be applied to default or compact format).; ///; /// Default format is RFC822 compliant:; /// ~~~ {.cpp}; /// ""Mon, 02 Jan 2001 18:11:12 +0000 (GMT) +999999999 nsec""; /// ""Mon, 02 Jan 2001 10:11:12 -0800 (PST) +999999999 nsec""; /// ~~~; ///; /// Option ""c"" compact is (almost) ISO 8601 compliant:; /// - ""2001-01-02 18:11:12.9999999999Z""; /// - ""2001-01-02 10:11:12.9999999999-0800"" if PST; /// * uses ""-"" as date separator as specified in ISO 8601; /// * uses ""."" rather than preferred "","" for decimal separator; /// * -HHMM is the difference between local and UTC (if behind, + if ahead).; ///; /// The ""-HHMM"" is replaced with ""Z"" if given as UTC.; /// To be strictly conforming it should use ""T"" instead of the; /// blank separating the date and time.; ///; /// Option ""2"" returns as {sec,nsec} integers.; ///; /// Option ""s"" returns ""2001-01-02 18:11:12"" with an implied UTC,; /// overrides ""l"" option.; ///; /// Internally uses a circular list of buffers to avoid problems; /// using AsString multiple times in a single statement.",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:1298,Safety,avoid,avoid,1298,"////////////////////////////////////////////////////////////////////////////////; /// Return the date & time as a string.; ///; /// Result is pointer to a statically allocated string.; /// User should copy this into their own buffer before calling; /// this method again.; ///; /// Option ""l"" returns it in local zone format; /// (can be applied to default or compact format).; ///; /// Default format is RFC822 compliant:; /// ~~~ {.cpp}; /// ""Mon, 02 Jan 2001 18:11:12 +0000 (GMT) +999999999 nsec""; /// ""Mon, 02 Jan 2001 10:11:12 -0800 (PST) +999999999 nsec""; /// ~~~; ///; /// Option ""c"" compact is (almost) ISO 8601 compliant:; /// - ""2001-01-02 18:11:12.9999999999Z""; /// - ""2001-01-02 10:11:12.9999999999-0800"" if PST; /// * uses ""-"" as date separator as specified in ISO 8601; /// * uses ""."" rather than preferred "","" for decimal separator; /// * -HHMM is the difference between local and UTC (if behind, + if ahead).; ///; /// The ""-HHMM"" is replaced with ""Z"" if given as UTC.; /// To be strictly conforming it should use ""T"" instead of the; /// blank separating the date and time.; ///; /// Option ""2"" returns as {sec,nsec} integers.; ///; /// Option ""s"" returns ""2001-01-02 18:11:12"" with an implied UTC,; /// overrides ""l"" option.; ///; /// Internally uses a circular list of buffers to avoid problems; /// using AsString multiple times in a single statement.",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:247,Usability,simpl,simply,247,"////////////////////////////////////////////////////////////////////////////////; /// Set Date/Time to current time as reported by the system.; /// No accounting for nanoseconds with std ANSI functions,; /// ns part faked so that subsequent calls simply add 1 to it; /// this ensures that calls within the same second come back; /// distinct (and sortable). Time is since Jan 1, 1970.",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:80,Integrability,rout,routine,80,"// convert tm struct to time_t, if values are given in UTC then; // no standard routine exists and we'll have to use our homegrown routine,; // if values are given in local time then use ""mktime""; // which also normalizes the tm struct as a byproduct",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:131,Integrability,rout,routine,131,"// convert tm struct to time_t, if values are given in UTC then; // no standard routine exists and we'll have to use our homegrown routine,; // if values are given in local time then use ""mktime""; // which also normalizes the tm struct as a byproduct",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:80,Integrability,rout,routine,80,"// convert tm struct to time_t, if values are given in UTC then; // no standard routine exists and we'll have to use our homegrown routine,; // if values are given in local time then use ""mktime""; // which also normalizes the tm struct as a byproduct",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:131,Integrability,rout,routine,131,"// convert tm struct to time_t, if values are given in UTC then; // no standard routine exists and we'll have to use our homegrown routine,; // if values are given in local time then use ""mktime""; // which also normalizes the tm struct as a byproduct",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:109,Integrability,rout,routine,109,"////////////////////////////////////////////////////////////////////////////////; /// Equivalent of standard routine ""mktime"" but; /// using the assumption that tm struct is filled with UTC, not local, time.; ///; /// This version *ISN'T* configured to handle every possible; /// weirdness of out-of-range values in the case of normalizing; /// the tm struct.; ///; /// This version *DOESN'T* correctly handle values that can't be; /// fit into a time_t (i.e. beyond year 2038-01-18 19:14:07, or; /// before the start of Epoch).",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:239,Modifiability,config,configured,239,"////////////////////////////////////////////////////////////////////////////////; /// Equivalent of standard routine ""mktime"" but; /// using the assumption that tm struct is filled with UTC, not local, time.; ///; /// This version *ISN'T* configured to handle every possible; /// weirdness of out-of-range values in the case of normalizing; /// the tm struct.; ///; /// This version *DOESN'T* correctly handle values that can't be; /// fit into a time_t (i.e. beyond year 2038-01-18 19:14:07, or; /// before the start of Epoch).",MatchSource.CODE_COMMENT,core/base/src/TTimeStamp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx:668,Security,validat,validating,668,"// @(#)root/base:$Id$; // Author: Gerhard E. Bruckner 15/07/07; /*************************************************************************; * Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TUri; \ingroup Base. This class represents a RFC 3986 compatible URI.; \see https://doi.org/10.17487/RFC3986; It provides member functions to set and return the different; the different parts of an URI. The functionality is that of; a validating parser.; */",MatchSource.CODE_COMMENT,core/base/src/TUri.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx:138,Integrability,rout,routine,138,"////////////////////////////////////////////////////////////////////////////////; /// This functions implements the ""remove_dot_segments"" routine; /// of chapter 5.2.4 ""for interpreting and removing the; /// special '.' and '..' complete path segments from a; /// referenced path"".",MatchSource.CODE_COMMENT,core/base/src/TUri.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx:162,Usability,simpl,simply,162,"////////////////////////////////////////////////////////////////////////////////; /// Display function,; /// - option ""d"" .. debug output; /// - anything else .. simply print URI.",MatchSource.CODE_COMMENT,core/base/src/TUri.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx:115,Modifiability,variab,variables,115,"////////////////////////////////////////////////////////////////////////////////; /// Parse URI and set the member variables accordingly,; /// returns kTRUE if URI validates, and kFALSE otherwise:; /// ~~~ {.cpp}; /// URI = scheme "":"" hier-part [ ""?"" query ] [ ""#"" fragment ]; /// hier-part = ""//"" authority path-abempty; /// / path-absolute; /// / path-rootless; /// / path-empty; /// ~~~",MatchSource.CODE_COMMENT,core/base/src/TUri.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx:164,Security,validat,validates,164,"////////////////////////////////////////////////////////////////////////////////; /// Parse URI and set the member variables accordingly,; /// returns kTRUE if URI validates, and kFALSE otherwise:; /// ~~~ {.cpp}; /// URI = scheme "":"" hier-part [ ""?"" query ] [ ""#"" fragment ]; /// hier-part = ""//"" authority path-abempty; /// / path-absolute; /// / path-rootless; /// / path-empty; /// ~~~",MatchSource.CODE_COMMENT,core/base/src/TUri.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx:16,Modifiability,variab,variables,16,"// Reset member variables",MatchSource.CODE_COMMENT,core/base/src/TUri.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx:16,Modifiability,variab,variables,16,"// reset member variables once again, if one at least setter failed",MatchSource.CODE_COMMENT,core/base/src/TUri.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx:52,Safety,avoid,avoid,52,"// use functionality of SetHierPart; // in order to avoid duplicate code",MatchSource.CODE_COMMENT,core/base/src/TUri.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx:56,Safety,avoid,avoid,56,"// use functionality of SetRelativePart; // in order to avoid duplicate code",MatchSource.CODE_COMMENT,core/base/src/TUri.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx:210,Availability,error,error,210,"////////////////////////////////////////////////////////////////////////////////; /// Percent-encode and return the given string according to RFC 3986; /// in principle, this function cannot fail or produce an error.",MatchSource.CODE_COMMENT,core/base/src/TUri.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx:3,Safety,abort,abort,3,"// abort if out of bounds",MatchSource.CODE_COMMENT,core/base/src/TUri.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx:3,Safety,abort,abort,3,"// abort if out of bounds",MatchSource.CODE_COMMENT,core/base/src/TUri.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx:3,Safety,abort,abort,3,"// abort if out of bounds",MatchSource.CODE_COMMENT,core/base/src/TUri.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:312,Integrability,protocol,protocols,312,"////////////////////////////////////////////////////////////////////////////////; /// Parse url character string and split in its different subcomponents.; /// Use IsValid() to check if URL is legal.; /// ~~~ {.cpp}; /// url: [proto://][user[:passwd]@]host[:port]/file.ext[?options][#anchor]; /// ~~~; /// Known protocols: http, root, proof, ftp, news and any special protocols; /// defined in the rootrc Url.Special key.; /// The default protocol is ""http"", unless defaultIsFile is true in which; /// case the url is assumed to be of type ""file"".; /// If a passwd contains a @ it must be escaped by a \\, e.g.; /// ""pip@"" becomes ""pip\\@"".; ///; /// Default ports: http=80, root=1094, proof=1093, ftp=20, news=119.; /// Port #1093 has been assigned by IANA (www.iana.org) to proofd.; /// Port #1094 has been assigned by IANA (www.iana.org) to rootd.",MatchSource.CODE_COMMENT,core/base/src/TUrl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:368,Integrability,protocol,protocols,368,"////////////////////////////////////////////////////////////////////////////////; /// Parse url character string and split in its different subcomponents.; /// Use IsValid() to check if URL is legal.; /// ~~~ {.cpp}; /// url: [proto://][user[:passwd]@]host[:port]/file.ext[?options][#anchor]; /// ~~~; /// Known protocols: http, root, proof, ftp, news and any special protocols; /// defined in the rootrc Url.Special key.; /// The default protocol is ""http"", unless defaultIsFile is true in which; /// case the url is assumed to be of type ""file"".; /// If a passwd contains a @ it must be escaped by a \\, e.g.; /// ""pip@"" becomes ""pip\\@"".; ///; /// Default ports: http=80, root=1094, proof=1093, ftp=20, news=119.; /// Port #1093 has been assigned by IANA (www.iana.org) to proofd.; /// Port #1094 has been assigned by IANA (www.iana.org) to rootd.",MatchSource.CODE_COMMENT,core/base/src/TUrl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:439,Integrability,protocol,protocol,439,"////////////////////////////////////////////////////////////////////////////////; /// Parse url character string and split in its different subcomponents.; /// Use IsValid() to check if URL is legal.; /// ~~~ {.cpp}; /// url: [proto://][user[:passwd]@]host[:port]/file.ext[?options][#anchor]; /// ~~~; /// Known protocols: http, root, proof, ftp, news and any special protocols; /// defined in the rootrc Url.Special key.; /// The default protocol is ""http"", unless defaultIsFile is true in which; /// case the url is assumed to be of type ""file"".; /// If a passwd contains a @ it must be escaped by a \\, e.g.; /// ""pip@"" becomes ""pip\\@"".; ///; /// Default ports: http=80, root=1094, proof=1093, ftp=20, news=119.; /// Port #1093 has been assigned by IANA (www.iana.org) to proofd.; /// Port #1094 has been assigned by IANA (www.iana.org) to rootd.",MatchSource.CODE_COMMENT,core/base/src/TUrl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:310,Integrability,protocol,protocols,310,"////////////////////////////////////////////////////////////////////////////////; /// Parse url character string and split in its different subcomponents.; /// Use IsValid() to check if URL is legal.; ///~~~ {.cpp}; /// url: [proto://][user[:passwd]@]host[:port]/file.ext[?options][#anchor]; ///~~~; /// Known protocols: http, root, proof, ftp, news and any special protocols; /// defined in the rootrc Url.Special key.; /// The default protocol is ""http"", unless defaultIsFile is true in which; /// case the url is assumed to be of type ""file"".; /// If a passwd contains a @ it must be escaped by a \\, e.g.; /// ""pip@"" becomes ""pip\\@"".; ///; /// Default ports: http=80, root=1094, proof=1093, ftp=20, news=119.; /// Port #1093 has been assigned by IANA (www.iana.org) to proofd.; /// Port #1094 has been assigned by IANA (www.iana.org) to rootd.",MatchSource.CODE_COMMENT,core/base/src/TUrl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:366,Integrability,protocol,protocols,366,"////////////////////////////////////////////////////////////////////////////////; /// Parse url character string and split in its different subcomponents.; /// Use IsValid() to check if URL is legal.; ///~~~ {.cpp}; /// url: [proto://][user[:passwd]@]host[:port]/file.ext[?options][#anchor]; ///~~~; /// Known protocols: http, root, proof, ftp, news and any special protocols; /// defined in the rootrc Url.Special key.; /// The default protocol is ""http"", unless defaultIsFile is true in which; /// case the url is assumed to be of type ""file"".; /// If a passwd contains a @ it must be escaped by a \\, e.g.; /// ""pip@"" becomes ""pip\\@"".; ///; /// Default ports: http=80, root=1094, proof=1093, ftp=20, news=119.; /// Port #1093 has been assigned by IANA (www.iana.org) to proofd.; /// Port #1094 has been assigned by IANA (www.iana.org) to rootd.",MatchSource.CODE_COMMENT,core/base/src/TUrl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:437,Integrability,protocol,protocol,437,"////////////////////////////////////////////////////////////////////////////////; /// Parse url character string and split in its different subcomponents.; /// Use IsValid() to check if URL is legal.; ///~~~ {.cpp}; /// url: [proto://][user[:passwd]@]host[:port]/file.ext[?options][#anchor]; ///~~~; /// Known protocols: http, root, proof, ftp, news and any special protocols; /// defined in the rootrc Url.Special key.; /// The default protocol is ""http"", unless defaultIsFile is true in which; /// case the url is assumed to be of type ""file"".; /// If a passwd contains a @ it must be escaped by a \\, e.g.; /// ""pip@"" becomes ""pip\\@"".; ///; /// Default ports: http=80, root=1094, proof=1093, ftp=20, news=119.; /// Port #1093 has been assigned by IANA (www.iana.org) to proofd.; /// Port #1094 has been assigned by IANA (www.iana.org) to rootd.",MatchSource.CODE_COMMENT,core/base/src/TUrl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:8,Integrability,protocol,protocol,8,"// Find protocol",MatchSource.CODE_COMMENT,core/base/src/TUrl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:18,Integrability,protocol,protocol,18,"// Handle special protocol cases: ""file:"", etc.",MatchSource.CODE_COMMENT,core/base/src/TUrl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:13,Integrability,protocol,protocol,13,"// case with protocol, like: file:/data/file.root",MatchSource.CODE_COMMENT,core/base/src/TUrl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:203,Integrability,protocol,protocol,203,"////////////////////////////////////////////////////////////////////////////////; /// Return full URL. If withDflt is kTRUE, explicitly add the port even; /// if it matches the default value for the URL protocol.",MatchSource.CODE_COMMENT,core/base/src/TUrl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:18,Integrability,protocol,protocol,18,"// Handle special protocol cases: file:, etc.",MatchSource.CODE_COMMENT,core/base/src/TUrl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:225,Security,authenticat,authentication,225,"////////////////////////////////////////////////////////////////////////////////; /// Return the file and its options (the string specified behind the ?).; /// Convenience function useful when the option is used to pass; /// authentication/access information for the specified file.",MatchSource.CODE_COMMENT,core/base/src/TUrl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:240,Security,access,access,240,"////////////////////////////////////////////////////////////////////////////////; /// Return the file and its options (the string specified behind the ?).; /// Convenience function useful when the option is used to pass; /// authentication/access information for the specified file.",MatchSource.CODE_COMMENT,core/base/src/TUrl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:90,Integrability,protocol,protocol,90,"////////////////////////////////////////////////////////////////////////////////; /// Set protocol and, optionally, change the port accordingly.",MatchSource.CODE_COMMENT,core/base/src/TUrl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:11,Integrability,protocol,protocol,11,"// generic protocol (no default port)",MatchSource.CODE_COMMENT,core/base/src/TUrl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:111,Integrability,protocol,protocols,111,"////////////////////////////////////////////////////////////////////////////////; /// Read the list of special protocols from the rootrc files.; /// These protocols will be parsed in a protocol and a file part,; /// no host or other info will be determined. This is typically; /// used for legacy file descriptions like: file:/path/file.root.",MatchSource.CODE_COMMENT,core/base/src/TUrl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:155,Integrability,protocol,protocols,155,"////////////////////////////////////////////////////////////////////////////////; /// Read the list of special protocols from the rootrc files.; /// These protocols will be parsed in a protocol and a file part,; /// no host or other info will be determined. This is typically; /// used for legacy file descriptions like: file:/path/file.root.",MatchSource.CODE_COMMENT,core/base/src/TUrl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:185,Integrability,protocol,protocol,185,"////////////////////////////////////////////////////////////////////////////////; /// Read the list of special protocols from the rootrc files.; /// These protocols will be parsed in a protocol and a file part,; /// no host or other info will be determined. This is typically; /// used for legacy file descriptions like: file:/path/file.root.",MatchSource.CODE_COMMENT,core/base/src/TUrl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:1384,Integrability,Depend,Depending,1384,"s a UUID (Universally Unique IDentifier), also; known as GUIDs (Globally Unique IDentifier). A UUID is 128 bits; long, and if generated according to this algorithm, is either; guaranteed to be different from all other UUIDs/GUIDs generated; until 3400 A.D. or extremely likely to be different. UUIDs were; originally used in the Network Computing System (NCS) and; later in the Open Software Foundation's (OSF) Distributed Computing; Environment (DCE). \note In the way this UUID is constructed, when used outside of; their original concept (NCS), they are actually not Globally unique; and indeed multiple distinct concurrent processes are actually likely; to generate the same UUID. Technically this is because the UUID is; constructed only from the node information and time information.; To make a globally unique number, this needs to be combined with; TProcessUUID. Structure of universal unique IDs (UUIDs). Depending on the network data representation, the multi-; octet unsigned integer fields are subject to byte swapping; when communicated between dissimilar endian machines.; ~~~ {.cpp}; +-----------------------------------+; | low 32 bits of time | 0-3 .fTimeLow; +-------------------------------+----; | mid 16 bits of time | 4-5 .fTimeMid; +-------+-----------------------+; | vers. | hi 12 bits of time | 6-7 .fTimeHiAndVersion; +-------+-------+---------------+; |Res | clkSeqHi | 8 .fClockSeqHiAndReserved; +---------------+; | clkSeqLow | 9 .fClockSeqLow; +---------------+------------------+; | node ID | 10-15 .fNode; +----------------------------------+; ~~~. The adjusted time stamp is split into three fields, and the; clockSeq is split into two fields. The timestamp is a 60-bit value. For UUID version 1, this; is represented by Coordinated Universal Time (UTC/GMT) as; a count of 100-nanosecond intervals since 00:00:00.00,; 15 October 1582 (the date of Gregorian reform to the; Christian calendar). The version number is multiplexed in the 4 most significant; bits of the",MatchSource.CODE_COMMENT,core/base/src/TUUID.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:1085,Performance,concurren,concurrent,1085,"s Rademakers 30/9/2001; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TUUID; \ingroup Base. This class defines a UUID (Universally Unique IDentifier), also; known as GUIDs (Globally Unique IDentifier). A UUID is 128 bits; long, and if generated according to this algorithm, is either; guaranteed to be different from all other UUIDs/GUIDs generated; until 3400 A.D. or extremely likely to be different. UUIDs were; originally used in the Network Computing System (NCS) and; later in the Open Software Foundation's (OSF) Distributed Computing; Environment (DCE). \note In the way this UUID is constructed, when used outside of; their original concept (NCS), they are actually not Globally unique; and indeed multiple distinct concurrent processes are actually likely; to generate the same UUID. Technically this is because the UUID is; constructed only from the node information and time information.; To make a globally unique number, this needs to be combined with; TProcessUUID. Structure of universal unique IDs (UUIDs). Depending on the network data representation, the multi-; octet unsigned integer fields are subject to byte swapping; when communicated between dissimilar endian machines.; ~~~ {.cpp}; +-----------------------------------+; | low 32 bits of time | 0-3 .fTimeLow; +-------------------------------+----; | mid 16 bits of time | 4-5 .fTimeMid; +-------+-----------------------+; | vers. | hi 12 bits of time | 6-7 .fTimeHiAndVersion; +-------+-------+---------------+; |Res | clkSeqHi | 8 .fClockSeqHiAndReserved; +---------------+; | clkSeqLow | 9 .fClockSeqLow; +---------------+------------------+; | node ID | 10-15 .fNode; +---------------------------",MatchSource.CODE_COMMENT,core/base/src/TUUID.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:4201,Performance,perform,performance,4201,"n number is multiplexed in the 4 most significant; bits of the 'fTimeHiAndVersion' field. There are two defined; versions:; ~~~ {.cpp}; MSB <---; Version 4-Bit Code Description; ------------------------------------------------------------; | 1 0 0 0 1 DCE version, as specified herein.; | 2 0 0 1 0 DCE Security version, with; | embedded POSIX UIDs.; | 3 0 0 1 1 node id is a random value; ------------------------------------------------------------; ~~~. ## Clock Sequence. The clock sequence value must be changed whenever:. The UUID generator detects that the local value of UTC; has gone backward; this may be due to re-syncing of the system; clock. While a node is operational, the UUID service always saves; the last UTC used to create a UUID. Each time a new UUID; is created, the current UTC is compared to the saved value; and if either the current value is less or the saved value; was lost, then the clock sequence is incremented modulo; 16,384, thus avoiding production of duplicated UUIDs. The clock sequence must be initialized to a random number; to minimize the correlation across system. This provides; maximum protection against node identifiers that may move; or switch from system to system rapidly. ## Clock Adjustment. UUIDs may be created at a rate greater than the system clock; resolution. Therefore, the system must also maintain an; adjustment value to be added to the lower-order bits of the; time. Logically, each time the system clock ticks, the; adjustment value is cleared. Every time a UUID is generated,; the current adjustment value is read and incremented, and; then added to the UTC time field of the UUID. ## Clock Overrun. The 100-nanosecond granularity of time should prove sufficient; even for bursts of UUID production in the next generation of; high-performance multiprocessors. If a system overruns the; clock adjustment by requesting too many UUIDs within a single; system clock tick, the UUID generator will stall until the; system clock catches up.; */",MatchSource.CODE_COMMENT,core/base/src/TUUID.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:2954,Safety,detect,detects,2954,"-15 .fNode; +----------------------------------+; ~~~. The adjusted time stamp is split into three fields, and the; clockSeq is split into two fields. The timestamp is a 60-bit value. For UUID version 1, this; is represented by Coordinated Universal Time (UTC/GMT) as; a count of 100-nanosecond intervals since 00:00:00.00,; 15 October 1582 (the date of Gregorian reform to the; Christian calendar). The version number is multiplexed in the 4 most significant; bits of the 'fTimeHiAndVersion' field. There are two defined; versions:; ~~~ {.cpp}; MSB <---; Version 4-Bit Code Description; ------------------------------------------------------------; | 1 0 0 0 1 DCE version, as specified herein.; | 2 0 0 1 0 DCE Security version, with; | embedded POSIX UIDs.; | 3 0 0 1 1 node id is a random value; ------------------------------------------------------------; ~~~. ## Clock Sequence. The clock sequence value must be changed whenever:. The UUID generator detects that the local value of UTC; has gone backward; this may be due to re-syncing of the system; clock. While a node is operational, the UUID service always saves; the last UTC used to create a UUID. Each time a new UUID; is created, the current UTC is compared to the saved value; and if either the current value is less or the saved value; was lost, then the clock sequence is incremented modulo; 16,384, thus avoiding production of duplicated UUIDs. The clock sequence must be initialized to a random number; to minimize the correlation across system. This provides; maximum protection against node identifiers that may move; or switch from system to system rapidly. ## Clock Adjustment. UUIDs may be created at a rate greater than the system clock; resolution. Therefore, the system must also maintain an; adjustment value to be added to the lower-order bits of the; time. Logically, each time the system clock ticks, the; adjustment value is cleared. Every time a UUID is generated,; the current adjustment value is read and incremente",MatchSource.CODE_COMMENT,core/base/src/TUUID.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:3370,Safety,avoid,avoiding,3370,"nosecond intervals since 00:00:00.00,; 15 October 1582 (the date of Gregorian reform to the; Christian calendar). The version number is multiplexed in the 4 most significant; bits of the 'fTimeHiAndVersion' field. There are two defined; versions:; ~~~ {.cpp}; MSB <---; Version 4-Bit Code Description; ------------------------------------------------------------; | 1 0 0 0 1 DCE version, as specified herein.; | 2 0 0 1 0 DCE Security version, with; | embedded POSIX UIDs.; | 3 0 0 1 1 node id is a random value; ------------------------------------------------------------; ~~~. ## Clock Sequence. The clock sequence value must be changed whenever:. The UUID generator detects that the local value of UTC; has gone backward; this may be due to re-syncing of the system; clock. While a node is operational, the UUID service always saves; the last UTC used to create a UUID. Each time a new UUID; is created, the current UTC is compared to the saved value; and if either the current value is less or the saved value; was lost, then the clock sequence is incremented modulo; 16,384, thus avoiding production of duplicated UUIDs. The clock sequence must be initialized to a random number; to minimize the correlation across system. This provides; maximum protection against node identifiers that may move; or switch from system to system rapidly. ## Clock Adjustment. UUIDs may be created at a rate greater than the system clock; resolution. Therefore, the system must also maintain an; adjustment value to be added to the lower-order bits of the; time. Logically, each time the system clock ticks, the; adjustment value is cleared. Every time a UUID is generated,; the current adjustment value is read and incremented, and; then added to the UTC time field of the UUID. ## Clock Overrun. The 100-nanosecond granularity of time should prove sufficient; even for bursts of UUID production in the next generation of; high-performance multiprocessors. If a system overruns the; clock adjustment by requesti",MatchSource.CODE_COMMENT,core/base/src/TUUID.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:2710,Security,Secur,Security,2710," +-------+-----------------------+; | vers. | hi 12 bits of time | 6-7 .fTimeHiAndVersion; +-------+-------+---------------+; |Res | clkSeqHi | 8 .fClockSeqHiAndReserved; +---------------+; | clkSeqLow | 9 .fClockSeqLow; +---------------+------------------+; | node ID | 10-15 .fNode; +----------------------------------+; ~~~. The adjusted time stamp is split into three fields, and the; clockSeq is split into two fields. The timestamp is a 60-bit value. For UUID version 1, this; is represented by Coordinated Universal Time (UTC/GMT) as; a count of 100-nanosecond intervals since 00:00:00.00,; 15 October 1582 (the date of Gregorian reform to the; Christian calendar). The version number is multiplexed in the 4 most significant; bits of the 'fTimeHiAndVersion' field. There are two defined; versions:; ~~~ {.cpp}; MSB <---; Version 4-Bit Code Description; ------------------------------------------------------------; | 1 0 0 0 1 DCE version, as specified herein.; | 2 0 0 1 0 DCE Security version, with; | embedded POSIX UIDs.; | 3 0 0 1 1 node id is a random value; ------------------------------------------------------------; ~~~. ## Clock Sequence. The clock sequence value must be changed whenever:. The UUID generator detects that the local value of UTC; has gone backward; this may be due to re-syncing of the system; clock. While a node is operational, the UUID service always saves; the last UTC used to create a UUID. Each time a new UUID; is created, the current UTC is compared to the saved value; and if either the current value is less or the saved value; was lost, then the clock sequence is incremented modulo; 16,384, thus avoiding production of duplicated UUIDs. The clock sequence must be initialized to a random number; to minimize the correlation across system. This provides; maximum protection against node identifiers that may move; or switch from system to system rapidly. ## Clock Adjustment. UUIDs may be created at a rate greater than the system clock; resolution. T",MatchSource.CODE_COMMENT,core/base/src/TUUID.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:3835,Testability,Log,Logically,3835,"n number is multiplexed in the 4 most significant; bits of the 'fTimeHiAndVersion' field. There are two defined; versions:; ~~~ {.cpp}; MSB <---; Version 4-Bit Code Description; ------------------------------------------------------------; | 1 0 0 0 1 DCE version, as specified herein.; | 2 0 0 1 0 DCE Security version, with; | embedded POSIX UIDs.; | 3 0 0 1 1 node id is a random value; ------------------------------------------------------------; ~~~. ## Clock Sequence. The clock sequence value must be changed whenever:. The UUID generator detects that the local value of UTC; has gone backward; this may be due to re-syncing of the system; clock. While a node is operational, the UUID service always saves; the last UTC used to create a UUID. Each time a new UUID; is created, the current UTC is compared to the saved value; and if either the current value is less or the saved value; was lost, then the clock sequence is incremented modulo; 16,384, thus avoiding production of duplicated UUIDs. The clock sequence must be initialized to a random number; to minimize the correlation across system. This provides; maximum protection against node identifiers that may move; or switch from system to system rapidly. ## Clock Adjustment. UUIDs may be created at a rate greater than the system clock; resolution. Therefore, the system must also maintain an; adjustment value to be added to the lower-order bits of the; time. Logically, each time the system clock ticks, the; adjustment value is cleared. Every time a UUID is generated,; the current adjustment value is read and incremented, and; then added to the UTC time field of the UUID. ## Clock Overrun. The 100-nanosecond granularity of time should prove sufficient; even for bursts of UUID production in the next generation of; high-performance multiprocessors. If a system overruns the; clock adjustment by requesting too many UUIDs within a single; system clock tick, the UUID generator will stall until the; system clock catches up.; */",MatchSource.CODE_COMMENT,core/base/src/TUUID.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:526,Usability,GUID,GUIDs,526,"// @(#)root/base:$Id$; // Author: Fons Rademakers 30/9/2001; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TUUID; \ingroup Base. This class defines a UUID (Universally Unique IDentifier), also; known as GUIDs (Globally Unique IDentifier). A UUID is 128 bits; long, and if generated according to this algorithm, is either; guaranteed to be different from all other UUIDs/GUIDs generated; until 3400 A.D. or extremely likely to be different. UUIDs were; originally used in the Network Computing System (NCS) and; later in the Open Software Foundation's (OSF) Distributed Computing; Environment (DCE). \note In the way this UUID is constructed, when used outside of; their original concept (NCS), they are actually not Globally unique; and indeed multiple distinct concurrent processes are actually likely; to generate the same UUID. Technically this is because the UUID is; constructed only from the node information and time information.; To make a globally unique number, this needs to be combined with; TProcessUUID. Structure of universal unique IDs (UUIDs). Depending on the network data representation, the multi-; octet unsigned integer fields are subject to byte swapping; when communicated between dissimilar endian machines.; ~~~ {.cpp}; +-----------------------------------+; | low 32 bits of time | 0-3 .fTimeLow; +-------------------------------+----; | mid 16 bits of time | 4-5 .fTimeMid; +-------+-----------------------+; | vers. | hi 12 bits of time | 6-7 .fTimeHiAndVersion; +-------+-------+---------------+; |Res | clkSeqHi | 8 .fClockSeqHiAndReserved; +---------------+; | clkSeqLow | 9 .fClockSeqLow; +---------------+------------------+; | node ID | 10-15 ",MatchSource.CODE_COMMENT,core/base/src/TUUID.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:693,Usability,GUID,GUIDs,693,"// @(#)root/base:$Id$; // Author: Fons Rademakers 30/9/2001; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TUUID; \ingroup Base. This class defines a UUID (Universally Unique IDentifier), also; known as GUIDs (Globally Unique IDentifier). A UUID is 128 bits; long, and if generated according to this algorithm, is either; guaranteed to be different from all other UUIDs/GUIDs generated; until 3400 A.D. or extremely likely to be different. UUIDs were; originally used in the Network Computing System (NCS) and; later in the Open Software Foundation's (OSF) Distributed Computing; Environment (DCE). \note In the way this UUID is constructed, when used outside of; their original concept (NCS), they are actually not Globally unique; and indeed multiple distinct concurrent processes are actually likely; to generate the same UUID. Technically this is because the UUID is; constructed only from the node information and time information.; To make a globally unique number, this needs to be combined with; TProcessUUID. Structure of universal unique IDs (UUIDs). Depending on the network data representation, the multi-; octet unsigned integer fields are subject to byte swapping; when communicated between dissimilar endian machines.; ~~~ {.cpp}; +-----------------------------------+; | low 32 bits of time | 0-3 .fTimeLow; +-------------------------------+----; | mid 16 bits of time | 4-5 .fTimeMid; +-------+-----------------------+; | vers. | hi 12 bits of time | 6-7 .fTimeHiAndVersion; +-------+-------+---------------+; |Res | clkSeqHi | 8 .fClockSeqHiAndReserved; +---------------+; | clkSeqLow | 9 .fClockSeqLow; +---------------+------------------+; | node ID | 10-15 ",MatchSource.CODE_COMMENT,core/base/src/TUUID.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:3905,Usability,clear,cleared,3905,"n number is multiplexed in the 4 most significant; bits of the 'fTimeHiAndVersion' field. There are two defined; versions:; ~~~ {.cpp}; MSB <---; Version 4-Bit Code Description; ------------------------------------------------------------; | 1 0 0 0 1 DCE version, as specified herein.; | 2 0 0 1 0 DCE Security version, with; | embedded POSIX UIDs.; | 3 0 0 1 1 node id is a random value; ------------------------------------------------------------; ~~~. ## Clock Sequence. The clock sequence value must be changed whenever:. The UUID generator detects that the local value of UTC; has gone backward; this may be due to re-syncing of the system; clock. While a node is operational, the UUID service always saves; the last UTC used to create a UUID. Each time a new UUID; is created, the current UTC is compared to the saved value; and if either the current value is less or the saved value; was lost, then the clock sequence is incremented modulo; 16,384, thus avoiding production of duplicated UUIDs. The clock sequence must be initialized to a random number; to minimize the correlation across system. This provides; maximum protection against node identifiers that may move; or switch from system to system rapidly. ## Clock Adjustment. UUIDs may be created at a rate greater than the system clock; resolution. Therefore, the system must also maintain an; adjustment value to be added to the lower-order bits of the; time. Logically, each time the system clock ticks, the; adjustment value is cleared. Every time a UUID is generated,; the current adjustment value is read and incremented, and; then added to the UTC time field of the UUID. ## Clock Overrun. The 100-nanosecond granularity of time should prove sufficient; even for bursts of UUID production in the next generation of; high-performance multiprocessors. If a system overruns the; clock adjustment by requesting too many UUIDs within a single; system clock tick, the UUID generator will stall until the; system clock catches up.; */",MatchSource.CODE_COMMENT,core/base/src/TUUID.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:34,Safety,safe,safe,34,"// rand and random are not thread safe.",MatchSource.CODE_COMMENT,core/base/src/TUUID.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:160,Integrability,interface,interface,160,"////////////////////////////////////////////////////////////////////////////////; /// Get node identifier. Try first to get network address, if no; /// network interface try random info based on some machine parameters.",MatchSource.CODE_COMMENT,core/base/src/TUUID.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:135,Security,firewall,firewall,135,"// this way to get the machine's IP address is needed because; // GetHostByName() on Win32 contacts the DNS which we don't want; // as firewall tools like ZoneAlarm are likely to catch it and; // alarm the user",MatchSource.CODE_COMMENT,core/base/src/TUUID.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:25,Energy Efficiency,adapt,adapter,25,"// take address of first adapter",MatchSource.CODE_COMMENT,core/base/src/TUUID.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:25,Integrability,adapter,adapter,25,"// take address of first adapter",MatchSource.CODE_COMMENT,core/base/src/TUUID.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:25,Modifiability,adapt,adapter,25,"// take address of first adapter",MatchSource.CODE_COMMENT,core/base/src/TUUID.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:19,Performance,perform,performance,19,"// high resolution performance counter",MatchSource.CODE_COMMENT,core/base/src/TUUID.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:101,Security,hash,hash,101,"////////////////////////////////////////////////////////////////////////////////; /// Compute 16-bit hash value of the UUID.",MatchSource.CODE_COMMENT,core/base/src/TUUID.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:48,Security,hash,hash,48,"// Calculate the value for ""First octet"" of the hash",MatchSource.CODE_COMMENT,core/base/src/TUUID.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:49,Security,hash,hash,49,"// Calculate the value for ""second octet"" of the hash",MatchSource.CODE_COMMENT,core/base/src/TUUID.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:819,Availability,Avail,Available,819,"**********************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualFFT; \ingroup Base. TVirtualFFT is an interface class for Fast Fourier Transforms. The default FFT library is FFTW. To use it, FFTW3 library should already; be installed, and ROOT should be have fftw3 module enabled, with the directories; of fftw3 include file and library specified (see installation instructions).; Function SetDefaultFFT() allows to change the default library. ## Available transform types:; FFT:; - ""C2CFORWARD"" - a complex input/output discrete Fourier transform (DFT); in one or more dimensions, -1 in the exponent; - ""C2CBACKWARD""- a complex input/output discrete Fourier transform (DFT); in one or more dimensions, +1 in the exponent; - ""R2C"" - a real-input/complex-output discrete Fourier transform (DFT); in one or more dimensions,; - ""C2R"" - inverse transforms to ""R2C"", taking complex input; (storing the non-redundant half of a logically Hermitian array); to real output; - ""R2HC"" - a real-input DFT with output in ¡Èhalfcomplex¡É format,; i.e. real and imaginary parts for a transform of size n stored as; r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1; - ""HC2R"" - computes the reverse of FFTW_R2HC, above; - ""DHT"" - computes a discrete Hartley transform. ## Sine/cosine transforms:; Different types of transforms are specified by parameter kind of the SineCosine() static; function. 4 different kinds of sine and cosine transforms are available. - DCT-I (REDFT00 in FFTW3 notation)- kind=0; - DCT-II (REDFT01 in FFTW3 notation)- kind=1; - DCT-III(REDFT10 in FFTW3 notation)- kind=2; - DCT-IV (REDFT11 in FFTW3 notation)- kind=3; - DST-I (RODFT00 in FFTW3 notation)- kind=4; - DST-II (RODFT01 in FFTW3 notation)- kind=5; - DST-III(RODFT10 in FFT",MatchSource.CODE_COMMENT,core/base/src/TVirtualFFT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:1273,Availability,redundant,redundant,1273,"**********************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualFFT; \ingroup Base. TVirtualFFT is an interface class for Fast Fourier Transforms. The default FFT library is FFTW. To use it, FFTW3 library should already; be installed, and ROOT should be have fftw3 module enabled, with the directories; of fftw3 include file and library specified (see installation instructions).; Function SetDefaultFFT() allows to change the default library. ## Available transform types:; FFT:; - ""C2CFORWARD"" - a complex input/output discrete Fourier transform (DFT); in one or more dimensions, -1 in the exponent; - ""C2CBACKWARD""- a complex input/output discrete Fourier transform (DFT); in one or more dimensions, +1 in the exponent; - ""R2C"" - a real-input/complex-output discrete Fourier transform (DFT); in one or more dimensions,; - ""C2R"" - inverse transforms to ""R2C"", taking complex input; (storing the non-redundant half of a logically Hermitian array); to real output; - ""R2HC"" - a real-input DFT with output in ¡Èhalfcomplex¡É format,; i.e. real and imaginary parts for a transform of size n stored as; r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1; - ""HC2R"" - computes the reverse of FFTW_R2HC, above; - ""DHT"" - computes a discrete Hartley transform. ## Sine/cosine transforms:; Different types of transforms are specified by parameter kind of the SineCosine() static; function. 4 different kinds of sine and cosine transforms are available. - DCT-I (REDFT00 in FFTW3 notation)- kind=0; - DCT-II (REDFT01 in FFTW3 notation)- kind=1; - DCT-III(REDFT10 in FFTW3 notation)- kind=2; - DCT-IV (REDFT11 in FFTW3 notation)- kind=3; - DST-I (RODFT00 in FFTW3 notation)- kind=4; - DST-II (RODFT01 in FFTW3 notation)- kind=5; - DST-III(RODFT10 in FFT",MatchSource.CODE_COMMENT,core/base/src/TVirtualFFT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:1802,Availability,avail,available,1802,"lows to change the default library. ## Available transform types:; FFT:; - ""C2CFORWARD"" - a complex input/output discrete Fourier transform (DFT); in one or more dimensions, -1 in the exponent; - ""C2CBACKWARD""- a complex input/output discrete Fourier transform (DFT); in one or more dimensions, +1 in the exponent; - ""R2C"" - a real-input/complex-output discrete Fourier transform (DFT); in one or more dimensions,; - ""C2R"" - inverse transforms to ""R2C"", taking complex input; (storing the non-redundant half of a logically Hermitian array); to real output; - ""R2HC"" - a real-input DFT with output in ¡Èhalfcomplex¡É format,; i.e. real and imaginary parts for a transform of size n stored as; r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1; - ""HC2R"" - computes the reverse of FFTW_R2HC, above; - ""DHT"" - computes a discrete Hartley transform. ## Sine/cosine transforms:; Different types of transforms are specified by parameter kind of the SineCosine() static; function. 4 different kinds of sine and cosine transforms are available. - DCT-I (REDFT00 in FFTW3 notation)- kind=0; - DCT-II (REDFT01 in FFTW3 notation)- kind=1; - DCT-III(REDFT10 in FFTW3 notation)- kind=2; - DCT-IV (REDFT11 in FFTW3 notation)- kind=3; - DST-I (RODFT00 in FFTW3 notation)- kind=4; - DST-II (RODFT01 in FFTW3 notation)- kind=5; - DST-III(RODFT10 in FFTW3 notation)- kind=6; - DST-IV (RODFT11 in FFTW3 notation)- kind=7. Formulas and detailed descriptions can be found in the chapter; ""What FFTW really computes"" of the FFTW manual. NOTE: FFTW computes unnormalized transforms, so doing a transform, followed by its; inverse will give the original array, multiplied by normalization constant; (transform size(N) for FFT, 2*(N-1) for DCT-I, 2*(N+1) for DST-I, 2*N for; other sine/cosine transforms). ## How to use it:; Call to the static function FFT returns a pointer to a fast Fourier transform; with requested parameters. Call to the static function SineCosine returns a; pointer to a sine or cosine transform with reques",MatchSource.CODE_COMMENT,core/base/src/TVirtualFFT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:596,Deployability,install,installed,596,"// @(#)root/base:$Id$; // Author: Anna Kreshuk 10/04/2006; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualFFT; \ingroup Base. TVirtualFFT is an interface class for Fast Fourier Transforms. The default FFT library is FFTW. To use it, FFTW3 library should already; be installed, and ROOT should be have fftw3 module enabled, with the directories; of fftw3 include file and library specified (see installation instructions).; Function SetDefaultFFT() allows to change the default library. ## Available transform types:; FFT:; - ""C2CFORWARD"" - a complex input/output discrete Fourier transform (DFT); in one or more dimensions, -1 in the exponent; - ""C2CBACKWARD""- a complex input/output discrete Fourier transform (DFT); in one or more dimensions, +1 in the exponent; - ""R2C"" - a real-input/complex-output discrete Fourier transform (DFT); in one or more dimensions,; - ""C2R"" - inverse transforms to ""R2C"", taking complex input; (storing the non-redundant half of a logically Hermitian array); to real output; - ""R2HC"" - a real-input DFT with output in ¡Èhalfcomplex¡É format,; i.e. real and imaginary parts for a transform of size n stored as; r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1; - ""HC2R"" - computes the reverse of FFTW_R2HC, above; - ""DHT"" - computes a discrete Hartley transform. ## Sine/cosine transforms:; Different types of transforms are specified by parameter kind of the SineCosine() static; function. 4 different kinds of sine and cosine transforms are available. - DCT-I (REDFT00 in FFTW3 notation)- kind=0; - DCT-II (REDFT01 in FFTW3 notation)- kind=1; - DCT-III(REDFT10 in FFTW3 notation)- kind=2; - DCT-IV (REDFT11 in FFTW3 notation)- kind=3; - DST",MatchSource.CODE_COMMENT,core/base/src/TVirtualFFT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:724,Deployability,install,installation,724,"// @(#)root/base:$Id$; // Author: Anna Kreshuk 10/04/2006; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualFFT; \ingroup Base. TVirtualFFT is an interface class for Fast Fourier Transforms. The default FFT library is FFTW. To use it, FFTW3 library should already; be installed, and ROOT should be have fftw3 module enabled, with the directories; of fftw3 include file and library specified (see installation instructions).; Function SetDefaultFFT() allows to change the default library. ## Available transform types:; FFT:; - ""C2CFORWARD"" - a complex input/output discrete Fourier transform (DFT); in one or more dimensions, -1 in the exponent; - ""C2CBACKWARD""- a complex input/output discrete Fourier transform (DFT); in one or more dimensions, +1 in the exponent; - ""R2C"" - a real-input/complex-output discrete Fourier transform (DFT); in one or more dimensions,; - ""C2R"" - inverse transforms to ""R2C"", taking complex input; (storing the non-redundant half of a logically Hermitian array); to real output; - ""R2HC"" - a real-input DFT with output in ¡Èhalfcomplex¡É format,; i.e. real and imaginary parts for a transform of size n stored as; r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1; - ""HC2R"" - computes the reverse of FFTW_R2HC, above; - ""DHT"" - computes a discrete Hartley transform. ## Sine/cosine transforms:; Different types of transforms are specified by parameter kind of the SineCosine() static; function. 4 different kinds of sine and cosine transforms are available. - DCT-I (REDFT00 in FFTW3 notation)- kind=0; - DCT-II (REDFT01 in FFTW3 notation)- kind=1; - DCT-III(REDFT10 in FFTW3 notation)- kind=2; - DCT-IV (REDFT11 in FFTW3 notation)- kind=3; - DST",MatchSource.CODE_COMMENT,core/base/src/TVirtualFFT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:474,Integrability,interface,interface,474,"// @(#)root/base:$Id$; // Author: Anna Kreshuk 10/04/2006; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualFFT; \ingroup Base. TVirtualFFT is an interface class for Fast Fourier Transforms. The default FFT library is FFTW. To use it, FFTW3 library should already; be installed, and ROOT should be have fftw3 module enabled, with the directories; of fftw3 include file and library specified (see installation instructions).; Function SetDefaultFFT() allows to change the default library. ## Available transform types:; FFT:; - ""C2CFORWARD"" - a complex input/output discrete Fourier transform (DFT); in one or more dimensions, -1 in the exponent; - ""C2CBACKWARD""- a complex input/output discrete Fourier transform (DFT); in one or more dimensions, +1 in the exponent; - ""R2C"" - a real-input/complex-output discrete Fourier transform (DFT); in one or more dimensions,; - ""C2R"" - inverse transforms to ""R2C"", taking complex input; (storing the non-redundant half of a logically Hermitian array); to real output; - ""R2HC"" - a real-input DFT with output in ¡Èhalfcomplex¡É format,; i.e. real and imaginary parts for a transform of size n stored as; r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1; - ""HC2R"" - computes the reverse of FFTW_R2HC, above; - ""DHT"" - computes a discrete Hartley transform. ## Sine/cosine transforms:; Different types of transforms are specified by parameter kind of the SineCosine() static; function. 4 different kinds of sine and cosine transforms are available. - DCT-I (REDFT00 in FFTW3 notation)- kind=0; - DCT-II (REDFT01 in FFTW3 notation)- kind=1; - DCT-III(REDFT10 in FFTW3 notation)- kind=2; - DCT-IV (REDFT11 in FFTW3 notation)- kind=3; - DST",MatchSource.CODE_COMMENT,core/base/src/TVirtualFFT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:1273,Safety,redund,redundant,1273,"**********************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualFFT; \ingroup Base. TVirtualFFT is an interface class for Fast Fourier Transforms. The default FFT library is FFTW. To use it, FFTW3 library should already; be installed, and ROOT should be have fftw3 module enabled, with the directories; of fftw3 include file and library specified (see installation instructions).; Function SetDefaultFFT() allows to change the default library. ## Available transform types:; FFT:; - ""C2CFORWARD"" - a complex input/output discrete Fourier transform (DFT); in one or more dimensions, -1 in the exponent; - ""C2CBACKWARD""- a complex input/output discrete Fourier transform (DFT); in one or more dimensions, +1 in the exponent; - ""R2C"" - a real-input/complex-output discrete Fourier transform (DFT); in one or more dimensions,; - ""C2R"" - inverse transforms to ""R2C"", taking complex input; (storing the non-redundant half of a logically Hermitian array); to real output; - ""R2HC"" - a real-input DFT with output in ¡Èhalfcomplex¡É format,; i.e. real and imaginary parts for a transform of size n stored as; r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1; - ""HC2R"" - computes the reverse of FFTW_R2HC, above; - ""DHT"" - computes a discrete Hartley transform. ## Sine/cosine transforms:; Different types of transforms are specified by parameter kind of the SineCosine() static; function. 4 different kinds of sine and cosine transforms are available. - DCT-I (REDFT00 in FFTW3 notation)- kind=0; - DCT-II (REDFT01 in FFTW3 notation)- kind=1; - DCT-III(REDFT10 in FFTW3 notation)- kind=2; - DCT-IV (REDFT11 in FFTW3 notation)- kind=3; - DST-I (RODFT00 in FFTW3 notation)- kind=4; - DST-II (RODFT01 in FFTW3 notation)- kind=5; - DST-III(RODFT10 in FFT",MatchSource.CODE_COMMENT,core/base/src/TVirtualFFT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:1293,Testability,log,logically,1293,"**********************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualFFT; \ingroup Base. TVirtualFFT is an interface class for Fast Fourier Transforms. The default FFT library is FFTW. To use it, FFTW3 library should already; be installed, and ROOT should be have fftw3 module enabled, with the directories; of fftw3 include file and library specified (see installation instructions).; Function SetDefaultFFT() allows to change the default library. ## Available transform types:; FFT:; - ""C2CFORWARD"" - a complex input/output discrete Fourier transform (DFT); in one or more dimensions, -1 in the exponent; - ""C2CBACKWARD""- a complex input/output discrete Fourier transform (DFT); in one or more dimensions, +1 in the exponent; - ""R2C"" - a real-input/complex-output discrete Fourier transform (DFT); in one or more dimensions,; - ""C2R"" - inverse transforms to ""R2C"", taking complex input; (storing the non-redundant half of a logically Hermitian array); to real output; - ""R2HC"" - a real-input DFT with output in ¡Èhalfcomplex¡É format,; i.e. real and imaginary parts for a transform of size n stored as; r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1; - ""HC2R"" - computes the reverse of FFTW_R2HC, above; - ""DHT"" - computes a discrete Hartley transform. ## Sine/cosine transforms:; Different types of transforms are specified by parameter kind of the SineCosine() static; function. 4 different kinds of sine and cosine transforms are available. - DCT-I (REDFT00 in FFTW3 notation)- kind=0; - DCT-II (REDFT01 in FFTW3 notation)- kind=1; - DCT-III(REDFT10 in FFTW3 notation)- kind=2; - DCT-IV (REDFT11 in FFTW3 notation)- kind=3; - DST-I (RODFT00 in FFTW3 notation)- kind=4; - DST-II (RODFT01 in FFTW3 notation)- kind=5; - DST-III(RODFT10 in FFT",MatchSource.CODE_COMMENT,core/base/src/TVirtualFFT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:407,Availability,Avail,Available,407,"////////////////////////////////////////////////////////////////////////////////; ///Returns a pointer to the FFT of requested size and type.; ///; /// \param[in] ndim number of transform dimensions; /// \param[in] n sizes of each dimension (an array at least ndim long); /// \param [in] option consists of 3 parts - flag option and an option to create a new TVirtualFFT; /// 1. transform type option:; /// Available transform types are:; /// C2CForward, C2CBackward, C2R, R2C, R2HC, HC2R, DHT; /// see class description for details; /// 2. flag option: choosing how much time should be spent in planning the transform:; /// Possible options:; /// - ""ES"" (from ""estimate"") - no time in preparing the transform,; /// but probably sub-optimal performance; /// - ""M"" (from ""measure"") - some time spend in finding the optimal way; /// to do the transform; /// - ""P"" (from ""patient"") - more time spend in finding the optimal way; /// to do the transform; /// - ""EX"" (from ""exhaustive"") - the most optimal way is found; /// This option should be chosen depending on how many transforms of the; /// same size and type are going to be done.; /// Planning is only done once, for the first transform of this size and type.; /// 3. option allowing to choose between the global fgFFT and a new TVirtualFFT object; /// """" - default, changes and returns the global fgFFT variable; /// ""K"" (from ""keep"")- without touching the global fgFFT,; /// creates and returns a new TVirtualFFT*. User is then responsible for deleting it.; ///; /// Examples of valid options: ""R2C ES K"", ""C2CF M"", ""DHT P K"", etc.",MatchSource.CODE_COMMENT,core/base/src/TVirtualFFT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:1047,Integrability,depend,depending,1047,"////////////////////////////////////////////////////////////////////////////////; ///Returns a pointer to the FFT of requested size and type.; ///; /// \param[in] ndim number of transform dimensions; /// \param[in] n sizes of each dimension (an array at least ndim long); /// \param [in] option consists of 3 parts - flag option and an option to create a new TVirtualFFT; /// 1. transform type option:; /// Available transform types are:; /// C2CForward, C2CBackward, C2R, R2C, R2HC, HC2R, DHT; /// see class description for details; /// 2. flag option: choosing how much time should be spent in planning the transform:; /// Possible options:; /// - ""ES"" (from ""estimate"") - no time in preparing the transform,; /// but probably sub-optimal performance; /// - ""M"" (from ""measure"") - some time spend in finding the optimal way; /// to do the transform; /// - ""P"" (from ""patient"") - more time spend in finding the optimal way; /// to do the transform; /// - ""EX"" (from ""exhaustive"") - the most optimal way is found; /// This option should be chosen depending on how many transforms of the; /// same size and type are going to be done.; /// Planning is only done once, for the first transform of this size and type.; /// 3. option allowing to choose between the global fgFFT and a new TVirtualFFT object; /// """" - default, changes and returns the global fgFFT variable; /// ""K"" (from ""keep"")- without touching the global fgFFT,; /// creates and returns a new TVirtualFFT*. User is then responsible for deleting it.; ///; /// Examples of valid options: ""R2C ES K"", ""C2CF M"", ""DHT P K"", etc.",MatchSource.CODE_COMMENT,core/base/src/TVirtualFFT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:1357,Modifiability,variab,variable,1357,"////////////////////////////////////////////////////////////////////////////////; ///Returns a pointer to the FFT of requested size and type.; ///; /// \param[in] ndim number of transform dimensions; /// \param[in] n sizes of each dimension (an array at least ndim long); /// \param [in] option consists of 3 parts - flag option and an option to create a new TVirtualFFT; /// 1. transform type option:; /// Available transform types are:; /// C2CForward, C2CBackward, C2R, R2C, R2HC, HC2R, DHT; /// see class description for details; /// 2. flag option: choosing how much time should be spent in planning the transform:; /// Possible options:; /// - ""ES"" (from ""estimate"") - no time in preparing the transform,; /// but probably sub-optimal performance; /// - ""M"" (from ""measure"") - some time spend in finding the optimal way; /// to do the transform; /// - ""P"" (from ""patient"") - more time spend in finding the optimal way; /// to do the transform; /// - ""EX"" (from ""exhaustive"") - the most optimal way is found; /// This option should be chosen depending on how many transforms of the; /// same size and type are going to be done.; /// Planning is only done once, for the first transform of this size and type.; /// 3. option allowing to choose between the global fgFFT and a new TVirtualFFT object; /// """" - default, changes and returns the global fgFFT variable; /// ""K"" (from ""keep"")- without touching the global fgFFT,; /// creates and returns a new TVirtualFFT*. User is then responsible for deleting it.; ///; /// Examples of valid options: ""R2C ES K"", ""C2CF M"", ""DHT P K"", etc.",MatchSource.CODE_COMMENT,core/base/src/TVirtualFFT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:741,Performance,perform,performance,741,"////////////////////////////////////////////////////////////////////////////////; ///Returns a pointer to the FFT of requested size and type.; ///; /// \param[in] ndim number of transform dimensions; /// \param[in] n sizes of each dimension (an array at least ndim long); /// \param [in] option consists of 3 parts - flag option and an option to create a new TVirtualFFT; /// 1. transform type option:; /// Available transform types are:; /// C2CForward, C2CBackward, C2R, R2C, R2HC, HC2R, DHT; /// see class description for details; /// 2. flag option: choosing how much time should be spent in planning the transform:; /// Possible options:; /// - ""ES"" (from ""estimate"") - no time in preparing the transform,; /// but probably sub-optimal performance; /// - ""M"" (from ""measure"") - some time spend in finding the optimal way; /// to do the transform; /// - ""P"" (from ""patient"") - more time spend in finding the optimal way; /// to do the transform; /// - ""EX"" (from ""exhaustive"") - the most optimal way is found; /// This option should be chosen depending on how many transforms of the; /// same size and type are going to be done.; /// Planning is only done once, for the first transform of this size and type.; /// 3. option allowing to choose between the global fgFFT and a new TVirtualFFT object; /// """" - default, changes and returns the global fgFFT variable; /// ""K"" (from ""keep"")- without touching the global fgFFT,; /// creates and returns a new TVirtualFFT*. User is then responsible for deleting it.; ///; /// Examples of valid options: ""R2C ES K"", ""C2CF M"", ""DHT P K"", etc.",MatchSource.CODE_COMMENT,core/base/src/TVirtualFFT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:423,Availability,avail,available,423,"////////////////////////////////////////////////////////////////////////////////; ///Returns a pointer to a sine or cosine transform of requested size and kind; ///; ///Parameters:; /// \param [in] ndim number of transform dimensions; /// \param [in] n sizes of each dimension (an array at least ndim long); /// \param [in] r2rkind transform kind for each dimension; /// 4 different kinds of sine and cosine transforms are available; /// - DCT-I - kind=0; /// - DCT-II - kind=1; /// - DCT-III - kind=2; /// - DCT-IV - kind=3; /// - DST-I - kind=4; /// - DST-II - kind=5; /// - DST-III - kind=6; /// - DST-IV - kind=7; /// \param [in] option : consists of 2 parts; /// - flag option and an option to create a new TVirtualFFT; /// - flag option: choosing how much time should be spent in planning the transform:; /// Possible options:; /// - ""ES"" (from ""estimate"") - no time in preparing the transform,; /// but probably sub-optimal performance; /// - ""M"" (from ""measure"") - some time spend in finding the optimal way; /// to do the transform; /// - ""P"" (from ""patient"") - more time spend in finding the optimal way; /// to do the transform; /// - ""EX"" (from ""exhaustive"") - the most optimal way is found; /// This option should be chosen depending on how many transforms of the; /// same size and type are going to be done.; /// Planning is only done once, for the first transform of this size and type.; /// - option allowing to choose between the global fgFFT and a new TVirtualFFT object; /// - """" - default, changes and returns the global fgFFT variable; /// - ""K"" (from ""keep"")- without touching the global fgFFT,; /// creates and returns a new TVirtualFFT*. User is then responsible for deleting it.; /// Examples of valid options: ""ES K"", ""EX"", etc",MatchSource.CODE_COMMENT,core/base/src/TVirtualFFT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:1237,Integrability,depend,depending,1237,"////////////////////////////////////////////////////////////////////////////////; ///Returns a pointer to a sine or cosine transform of requested size and kind; ///; ///Parameters:; /// \param [in] ndim number of transform dimensions; /// \param [in] n sizes of each dimension (an array at least ndim long); /// \param [in] r2rkind transform kind for each dimension; /// 4 different kinds of sine and cosine transforms are available; /// - DCT-I - kind=0; /// - DCT-II - kind=1; /// - DCT-III - kind=2; /// - DCT-IV - kind=3; /// - DST-I - kind=4; /// - DST-II - kind=5; /// - DST-III - kind=6; /// - DST-IV - kind=7; /// \param [in] option : consists of 2 parts; /// - flag option and an option to create a new TVirtualFFT; /// - flag option: choosing how much time should be spent in planning the transform:; /// Possible options:; /// - ""ES"" (from ""estimate"") - no time in preparing the transform,; /// but probably sub-optimal performance; /// - ""M"" (from ""measure"") - some time spend in finding the optimal way; /// to do the transform; /// - ""P"" (from ""patient"") - more time spend in finding the optimal way; /// to do the transform; /// - ""EX"" (from ""exhaustive"") - the most optimal way is found; /// This option should be chosen depending on how many transforms of the; /// same size and type are going to be done.; /// Planning is only done once, for the first transform of this size and type.; /// - option allowing to choose between the global fgFFT and a new TVirtualFFT object; /// - """" - default, changes and returns the global fgFFT variable; /// - ""K"" (from ""keep"")- without touching the global fgFFT,; /// creates and returns a new TVirtualFFT*. User is then responsible for deleting it.; /// Examples of valid options: ""ES K"", ""EX"", etc",MatchSource.CODE_COMMENT,core/base/src/TVirtualFFT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:1548,Modifiability,variab,variable,1548,"////////////////////////////////////////////////////////////////////////////////; ///Returns a pointer to a sine or cosine transform of requested size and kind; ///; ///Parameters:; /// \param [in] ndim number of transform dimensions; /// \param [in] n sizes of each dimension (an array at least ndim long); /// \param [in] r2rkind transform kind for each dimension; /// 4 different kinds of sine and cosine transforms are available; /// - DCT-I - kind=0; /// - DCT-II - kind=1; /// - DCT-III - kind=2; /// - DCT-IV - kind=3; /// - DST-I - kind=4; /// - DST-II - kind=5; /// - DST-III - kind=6; /// - DST-IV - kind=7; /// \param [in] option : consists of 2 parts; /// - flag option and an option to create a new TVirtualFFT; /// - flag option: choosing how much time should be spent in planning the transform:; /// Possible options:; /// - ""ES"" (from ""estimate"") - no time in preparing the transform,; /// but probably sub-optimal performance; /// - ""M"" (from ""measure"") - some time spend in finding the optimal way; /// to do the transform; /// - ""P"" (from ""patient"") - more time spend in finding the optimal way; /// to do the transform; /// - ""EX"" (from ""exhaustive"") - the most optimal way is found; /// This option should be chosen depending on how many transforms of the; /// same size and type are going to be done.; /// Planning is only done once, for the first transform of this size and type.; /// - option allowing to choose between the global fgFFT and a new TVirtualFFT object; /// - """" - default, changes and returns the global fgFFT variable; /// - ""K"" (from ""keep"")- without touching the global fgFFT,; /// creates and returns a new TVirtualFFT*. User is then responsible for deleting it.; /// Examples of valid options: ""ES K"", ""EX"", etc",MatchSource.CODE_COMMENT,core/base/src/TVirtualFFT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:931,Performance,perform,performance,931,"////////////////////////////////////////////////////////////////////////////////; ///Returns a pointer to a sine or cosine transform of requested size and kind; ///; ///Parameters:; /// \param [in] ndim number of transform dimensions; /// \param [in] n sizes of each dimension (an array at least ndim long); /// \param [in] r2rkind transform kind for each dimension; /// 4 different kinds of sine and cosine transforms are available; /// - DCT-I - kind=0; /// - DCT-II - kind=1; /// - DCT-III - kind=2; /// - DCT-IV - kind=3; /// - DST-I - kind=4; /// - DST-II - kind=5; /// - DST-III - kind=6; /// - DST-IV - kind=7; /// \param [in] option : consists of 2 parts; /// - flag option and an option to create a new TVirtualFFT; /// - flag option: choosing how much time should be spent in planning the transform:; /// Possible options:; /// - ""ES"" (from ""estimate"") - no time in preparing the transform,; /// but probably sub-optimal performance; /// - ""M"" (from ""measure"") - some time spend in finding the optimal way; /// to do the transform; /// - ""P"" (from ""patient"") - more time spend in finding the optimal way; /// to do the transform; /// - ""EX"" (from ""exhaustive"") - the most optimal way is found; /// This option should be chosen depending on how many transforms of the; /// same size and type are going to be done.; /// Planning is only done once, for the first transform of this size and type.; /// - option allowing to choose between the global fgFFT and a new TVirtualFFT object; /// - """" - default, changes and returns the global fgFFT variable; /// - ""K"" (from ""keep"")- without touching the global fgFFT,; /// creates and returns a new TVirtualFFT*. User is then responsible for deleting it.; /// Examples of valid options: ""ES K"", ""EX"", etc",MatchSource.CODE_COMMENT,core/base/src/TVirtualFFT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualGL.cxx:273,Availability,avail,available,273,// @(#)root/base:$Id$; // Author: Valery Fine 05/03/97; /** \class TVirtualGL. The TVirtualGL class is an abstract base class defining the; OpenGL interface protocol. All interactions with OpenGL should be; done via the global pointer gVirtualGL. If the OpenGL library is; available this pointer is pointing to an instance of the TGLKernel; class which provides the actual interface to OpenGL. Using this; scheme of ABC we can use OpenGL in other parts of the framework; without having to link with the OpenGL library in case we don't; use the classes using OpenGL.; */,MatchSource.CODE_COMMENT,core/base/src/TVirtualGL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualGL.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualGL.cxx:147,Integrability,interface,interface,147,// @(#)root/base:$Id$; // Author: Valery Fine 05/03/97; /** \class TVirtualGL. The TVirtualGL class is an abstract base class defining the; OpenGL interface protocol. All interactions with OpenGL should be; done via the global pointer gVirtualGL. If the OpenGL library is; available this pointer is pointing to an instance of the TGLKernel; class which provides the actual interface to OpenGL. Using this; scheme of ABC we can use OpenGL in other parts of the framework; without having to link with the OpenGL library in case we don't; use the classes using OpenGL.; */,MatchSource.CODE_COMMENT,core/base/src/TVirtualGL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualGL.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualGL.cxx:157,Integrability,protocol,protocol,157,// @(#)root/base:$Id$; // Author: Valery Fine 05/03/97; /** \class TVirtualGL. The TVirtualGL class is an abstract base class defining the; OpenGL interface protocol. All interactions with OpenGL should be; done via the global pointer gVirtualGL. If the OpenGL library is; available this pointer is pointing to an instance of the TGLKernel; class which provides the actual interface to OpenGL. Using this; scheme of ABC we can use OpenGL in other parts of the framework; without having to link with the OpenGL library in case we don't; use the classes using OpenGL.; */,MatchSource.CODE_COMMENT,core/base/src/TVirtualGL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualGL.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualGL.cxx:373,Integrability,interface,interface,373,// @(#)root/base:$Id$; // Author: Valery Fine 05/03/97; /** \class TVirtualGL. The TVirtualGL class is an abstract base class defining the; OpenGL interface protocol. All interactions with OpenGL should be; done via the global pointer gVirtualGL. If the OpenGL library is; available this pointer is pointing to an instance of the TGLKernel; class which provides the actual interface to OpenGL. Using this; scheme of ABC we can use OpenGL in other parts of the framework; without having to link with the OpenGL library in case we don't; use the classes using OpenGL.; */,MatchSource.CODE_COMMENT,core/base/src/TVirtualGL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualGL.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualMonitoring.cxx:509,Energy Efficiency,Monitor,Monitoring,509,"// @(#)root/base:$Id$; // Author: Andreas-Joachim Peters 15/05/2006; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualMonitoring; \ingroup Base. Provides the interface for externel Monitoring; */",MatchSource.CODE_COMMENT,core/base/src/TVirtualMonitoring.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualMonitoring.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualMonitoring.cxx:486,Integrability,interface,interface,486,"// @(#)root/base:$Id$; // Author: Andreas-Joachim Peters 15/05/2006; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualMonitoring; \ingroup Base. Provides the interface for externel Monitoring; */",MatchSource.CODE_COMMENT,core/base/src/TVirtualMonitoring.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualMonitoring.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualMutex.cxx:547,Availability,avail,available,547,"// @(#)root/base:$Id$; // Author: Fons Rademakers 14/02/2002; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualMutex; \ingroup Base. This class implements a mutex interface. The actual work is done via; TMutex which is available as soon as the thread library is loaded. and. TLockGuard. This class provides mutex resource management in a guaranteed and; exception safe way. Use like this:; ~~~ {.cpp}; {; TLockGuard guard(mutex);; ... // do something; }; ~~~; when guard goes out of scope the mutex is unlocked in the TLockGuard; destructor. The exception mechanism takes care of calling the dtors; of local objects so it is exception safe.; */",MatchSource.CODE_COMMENT,core/base/src/TVirtualMutex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualMutex.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualMutex.cxx:491,Integrability,interface,interface,491,"// @(#)root/base:$Id$; // Author: Fons Rademakers 14/02/2002; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualMutex; \ingroup Base. This class implements a mutex interface. The actual work is done via; TMutex which is available as soon as the thread library is loaded. and. TLockGuard. This class provides mutex resource management in a guaranteed and; exception safe way. Use like this:; ~~~ {.cpp}; {; TLockGuard guard(mutex);; ... // do something; }; ~~~; when guard goes out of scope the mutex is unlocked in the TLockGuard; destructor. The exception mechanism takes care of calling the dtors; of local objects so it is exception safe.; */",MatchSource.CODE_COMMENT,core/base/src/TVirtualMutex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualMutex.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualMutex.cxx:590,Performance,load,loaded,590,"// @(#)root/base:$Id$; // Author: Fons Rademakers 14/02/2002; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualMutex; \ingroup Base. This class implements a mutex interface. The actual work is done via; TMutex which is available as soon as the thread library is loaded. and. TLockGuard. This class provides mutex resource management in a guaranteed and; exception safe way. Use like this:; ~~~ {.cpp}; {; TLockGuard guard(mutex);; ... // do something; }; ~~~; when guard goes out of scope the mutex is unlocked in the TLockGuard; destructor. The exception mechanism takes care of calling the dtors; of local objects so it is exception safe.; */",MatchSource.CODE_COMMENT,core/base/src/TVirtualMutex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualMutex.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualMutex.cxx:692,Safety,safe,safe,692,"// @(#)root/base:$Id$; // Author: Fons Rademakers 14/02/2002; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualMutex; \ingroup Base. This class implements a mutex interface. The actual work is done via; TMutex which is available as soon as the thread library is loaded. and. TLockGuard. This class provides mutex resource management in a guaranteed and; exception safe way. Use like this:; ~~~ {.cpp}; {; TLockGuard guard(mutex);; ... // do something; }; ~~~; when guard goes out of scope the mutex is unlocked in the TLockGuard; destructor. The exception mechanism takes care of calling the dtors; of local objects so it is exception safe.; */",MatchSource.CODE_COMMENT,core/base/src/TVirtualMutex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualMutex.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualMutex.cxx:963,Safety,safe,safe,963,"// @(#)root/base:$Id$; // Author: Fons Rademakers 14/02/2002; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualMutex; \ingroup Base. This class implements a mutex interface. The actual work is done via; TMutex which is available as soon as the thread library is loaded. and. TLockGuard. This class provides mutex resource management in a guaranteed and; exception safe way. Use like this:; ~~~ {.cpp}; {; TLockGuard guard(mutex);; ... // do something; }; ~~~; when guard goes out of scope the mutex is unlocked in the TLockGuard; destructor. The exception mechanism takes care of calling the dtors; of local objects so it is exception safe.; */",MatchSource.CODE_COMMENT,core/base/src/TVirtualMutex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualMutex.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPad.cxx:179,Usability,clear,cleared,179,"////////////////////////////////////////////////////////////////////////////////; /// Inform context that pad deleted or will be deleted soon; /// Reference on that pad should be cleared",MatchSource.CODE_COMMENT,core/base/src/TVirtualPad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPad.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPadEditor.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update fill attributes via the pad editor",MatchSource.CODE_COMMENT,core/base/src/TVirtualPadEditor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPadEditor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPadEditor.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update text attributes via the pad editor",MatchSource.CODE_COMMENT,core/base/src/TVirtualPadEditor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPadEditor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPadEditor.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update line attributes via the pad editor",MatchSource.CODE_COMMENT,core/base/src/TVirtualPadEditor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPadEditor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPadEditor.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update marker attributes via the pad editor",MatchSource.CODE_COMMENT,core/base/src/TVirtualPadEditor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPadEditor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPadPainter.cxx:130,Integrability,interface,interface,130,"/** \class TVirtualPadPainter; \ingroup Base. To make it possible to use GL for 2D graphic in a TPad/TCanvas.; TVirtualPadPainter interface must be used instead of TVirtualX.; Internally, non-GL implementation _should_ delegate all calls; to gVirtualX, GL implementation will delegate part of calls; to gVirtualX, and has to implement some of the calls from the scratch.; */; ////////////////////////////////////////////////////////////////////////////////; ///Virtual dtor.",MatchSource.CODE_COMMENT,core/base/src/TVirtualPadPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPadPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPerfStats.cxx:481,Integrability,interface,interface,481,"// @(#)root/base:$Id$; // Author: Kristjan Gulbrandsen 11/05/04; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualPerfStats; \ingroup Base. Provides the interface for the PROOF internal performance measurement; and event tracing.; */",MatchSource.CODE_COMMENT,core/base/src/TVirtualPerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPerfStats.cxx:514,Performance,perform,performance,514,"// @(#)root/base:$Id$; // Author: Kristjan Gulbrandsen 11/05/04; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualPerfStats; \ingroup Base. Provides the interface for the PROOF internal performance measurement; and event tracing.; */",MatchSource.CODE_COMMENT,core/base/src/TVirtualPerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPS.cxx:489,Integrability,interface,interface,489,"// @(#)root/base:$Id$; // Author: Rene Brun 05/09/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualPS; \ingroup Base; \ingroup PS. TVirtualPS is an abstract interface to Postscript, PDF, SVG. TeX etc... drivers; */",MatchSource.CODE_COMMENT,core/base/src/TVirtualPS.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPS.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:1249,Energy Efficiency,efficient,efficiently,1249,"demakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualViewer3D; \ingroup Base. Abstract 3D shapes viewer. The concrete implementations are:. - TViewerX3D : X3d viewer; - TGLViewer : OpenGL viewer. ## 3D Viewer Infrastructure Overview. The 3D Viewer infrastructure consists of:. - TVirtualViewer3D interface: An abstract handle to the viewer, allowing; client to test preferences, add objects, control the viewer via scripting; (to be added) etc.; -TBuffer3D class hierarchy: Used to describe 3D objects; (""shapes""); - filled /added by negotiation with viewer via TVirtualViewer3D. Together these allow clients to publish objects to any one of the 3D viewers; (currently OpenGL/x3d,TPad), free of viewer specific drawing code. They allow; our simple x3d viewer, and considerably more sophisticated OpenGL one to both; work with both geometry libraries (g3d and geom) efficiently. Publishing to a viewer consists of the following steps:. 1. Create / obtain viewer handle; 2. Begin scene on viewer; 3. Fill mandatory parts of TBuffer3D describing object; 4. Add to viewer; 5. Fill optional parts of TBuffer3D if requested by viewer, and add again; ... repeat 3/4/5 as required; 6. End scene on viewer. ## Creating / Obtaining Viewer. Create/obtain the viewer handle via local/global pad - the viewer is always; bound to a TPad object at present [This may be removed as a restriction in; the future] . You should perform the publishing to the viewer described below; in the Paint() method of the object you attach to the pad (via Draw()); ~~~ {.cpp}; TVirtualViewer3D * v = gPad->GetViewer3D(""xxxx"");; ~~~. "" xxxx"" is viewer type: OpenGL ""ogl"", X3D ""x3d"" or; Pad ""pad"" (default). The viewer is created via the plugin manager,; attached to pad, and the interface returned. ## Begin / End Scene. Objects must",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:10579,Energy Efficiency,efficient,efficient,10579," potentially; millions of objects, and only accept those that are of interest at a certain; time, caching the relatively small number of CPU/memory costly logical shapes,; and retaining/discarding the physical placements as required. The viewer may; decide to force the client to rebuild (republish) the scene (via a TPad; repaint at present), and thus collect these objects if the; internal viewer state changes. It does this presently by forcing a repaint; on the attached TPad object - hence the reason for putting all publishing to; the viewer in the attached pad objects Paint() method. We will likely remove; this requirement in the future, indicating the rebuild request via a normal; ROOT signal, which the client can detect. ## Physical IDs. TVirtualViewer3D provides for two methods of object addition:virtual Int_t AddObject(const; TBuffer3D & buffer, Bool_t * addChildren = 0). ~~~ {.cpp}; virtual Int_t AddObject(UInt_t physicalID, const TBuffer3D & buffer, Bool_t * addChildren = 0); ~~~. If you use the first (simple) case a viewer using logical/physical pairs; will generate IDs for each physical object internally. In the second you; can specify a unique identifier from the client, which allows the viewer to be more; efficient. It can now cache both logical and physical objects, and only discard; physical objects no longer of interest as part of scene rebuilds. ## Child Objects. In many geometries there is a rigid containment hierarchy, and so if the viewer; is not interested in a certain object due to limits/size then it will also; not be interest in any of the contained branch of descendents. Both AddObject(); methods have an addChildren parameter. The viewer will complete this (if passed); indicating if children (contained within the one just sent) are worth adding. ## Recycling TBuffer3D. Once add AddObject() has been called, the contents are copied to the viewer; internally. You are free to destroy this object, or recycle it for the next; object if suitable.; */",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:680,Integrability,interface,interface,680,"// @(#)root/base:$Id$; // Author: Olivier Couet 05/10/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualViewer3D; \ingroup Base. Abstract 3D shapes viewer. The concrete implementations are:. - TViewerX3D : X3d viewer; - TGLViewer : OpenGL viewer. ## 3D Viewer Infrastructure Overview. The 3D Viewer infrastructure consists of:. - TVirtualViewer3D interface: An abstract handle to the viewer, allowing; client to test preferences, add objects, control the viewer via scripting; (to be added) etc.; -TBuffer3D class hierarchy: Used to describe 3D objects; (""shapes""); - filled /added by negotiation with viewer via TVirtualViewer3D. Together these allow clients to publish objects to any one of the 3D viewers; (currently OpenGL/x3d,TPad), free of viewer specific drawing code. They allow; our simple x3d viewer, and considerably more sophisticated OpenGL one to both; work with both geometry libraries (g3d and geom) efficiently. Publishing to a viewer consists of the following steps:. 1. Create / obtain viewer handle; 2. Begin scene on viewer; 3. Fill mandatory parts of TBuffer3D describing object; 4. Add to viewer; 5. Fill optional parts of TBuffer3D if requested by viewer, and add again; ... repeat 3/4/5 as required; 6. End scene on viewer. ## Creating / Obtaining Viewer. Create/obtain the viewer handle via local/global pad - the viewer is always; bound to a TPad object at present [This may be removed as a restriction in; the future] . You should perform the publishing to the viewer described below; in the Paint() method of the object you attach to the pad (via Draw()); ~~~ {.cpp}; TVirtualViewer3D * v = gPad->GetViewer3D(""xxxx"");; ~~~. "" xxxx"" is view",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:2131,Integrability,interface,interface,2131,"ode. They allow; our simple x3d viewer, and considerably more sophisticated OpenGL one to both; work with both geometry libraries (g3d and geom) efficiently. Publishing to a viewer consists of the following steps:. 1. Create / obtain viewer handle; 2. Begin scene on viewer; 3. Fill mandatory parts of TBuffer3D describing object; 4. Add to viewer; 5. Fill optional parts of TBuffer3D if requested by viewer, and add again; ... repeat 3/4/5 as required; 6. End scene on viewer. ## Creating / Obtaining Viewer. Create/obtain the viewer handle via local/global pad - the viewer is always; bound to a TPad object at present [This may be removed as a restriction in; the future] . You should perform the publishing to the viewer described below; in the Paint() method of the object you attach to the pad (via Draw()); ~~~ {.cpp}; TVirtualViewer3D * v = gPad->GetViewer3D(""xxxx"");; ~~~. "" xxxx"" is viewer type: OpenGL ""ogl"", X3D ""x3d"" or; Pad ""pad"" (default). The viewer is created via the plugin manager,; attached to pad, and the interface returned. ## Begin / End Scene. Objects must be added to viewer between BeginScene/EndScene calls e.g.; ~~~ {.cpp}; v->BeginScene();; .....; v->AddObject(....);; v->AddObject(....);; .....; v->EndScene();; ~~~. The BeginScene call will cause the viewer to suspend redraws etc, and after; the EndScene the viewer will reset the camera to frame the new scene and redraw.; [x3d viewer does not support changing of scenes - objects added after the; first Open/CloseScene pair will be ignored.]. ## Filling TBuffer3D and Adding to Viewer. The viewers behind the TVirtualViewer3D interface differ greatly in their; capabilities e.g. - Some know how to draw certain shapes natively (e.g. spheres/tubes in; OpenGL) - others always require a raw tessellation description of points/lines/segments.; - Some need the 3D object positions in the global frame, others can cope with; local frames + a translation matrix - which can give considerable performance; benefits. To cop",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:2715,Integrability,interface,interface,2715,"esent [This may be removed as a restriction in; the future] . You should perform the publishing to the viewer described below; in the Paint() method of the object you attach to the pad (via Draw()); ~~~ {.cpp}; TVirtualViewer3D * v = gPad->GetViewer3D(""xxxx"");; ~~~. "" xxxx"" is viewer type: OpenGL ""ogl"", X3D ""x3d"" or; Pad ""pad"" (default). The viewer is created via the plugin manager,; attached to pad, and the interface returned. ## Begin / End Scene. Objects must be added to viewer between BeginScene/EndScene calls e.g.; ~~~ {.cpp}; v->BeginScene();; .....; v->AddObject(....);; v->AddObject(....);; .....; v->EndScene();; ~~~. The BeginScene call will cause the viewer to suspend redraws etc, and after; the EndScene the viewer will reset the camera to frame the new scene and redraw.; [x3d viewer does not support changing of scenes - objects added after the; first Open/CloseScene pair will be ignored.]. ## Filling TBuffer3D and Adding to Viewer. The viewers behind the TVirtualViewer3D interface differ greatly in their; capabilities e.g. - Some know how to draw certain shapes natively (e.g. spheres/tubes in; OpenGL) - others always require a raw tessellation description of points/lines/segments.; - Some need the 3D object positions in the global frame, others can cope with; local frames + a translation matrix - which can give considerable performance; benefits. To cope with these situations the object buffer is filled out in negotiation; with the viewer. TBuffer3D classes are conceptually divided into enumerated; sections Core, BoundingBox, Raw etc (see TBuffer3D.h for more details).; \image html base_tbuffer3d.png. The SectionsValid() / SetSectionsValid / ClearSectionsValid() methods of TBuffer3D; are used to test/set/clear these section valid flags. The sections found in TBuffer3D (Core/BoundingBox/Raw Sizes/Raw); are sufficient to describe any tessellated shape in a generic fashion.; An additional ShapeSpecific section; in derived shape specific classes allows a more a",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:8031,Integrability,interface,interface,8031," ### Logical & Physical Objects. There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the fID logical ID member of; TBuffer3D. If repeated addition of the same fID is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable performance gains; in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method; ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different fLocalMaster placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, with the fLocalMaster transform and the; fColor and fTransparency attributes, which can be varied for each physical; object. As a minimum requirement all clients must be capable of filling the raw tessellation; of the object buffer, in the master reference frame. Conversely viewers must; always be capable of displaying the object described by this buffer. ## Scene Rebuilds. It should be understood that AddObject is not an explicit command to the viewer; - it may for various reasons decide to ignore it:. - It already has the object internally cached .; - The object falls outside some 'interest' limits of the viewer camera.; - The object is too small to be worth drawin",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:2089,Modifiability,plugin,plugin,2089,"ode. They allow; our simple x3d viewer, and considerably more sophisticated OpenGL one to both; work with both geometry libraries (g3d and geom) efficiently. Publishing to a viewer consists of the following steps:. 1. Create / obtain viewer handle; 2. Begin scene on viewer; 3. Fill mandatory parts of TBuffer3D describing object; 4. Add to viewer; 5. Fill optional parts of TBuffer3D if requested by viewer, and add again; ... repeat 3/4/5 as required; 6. End scene on viewer. ## Creating / Obtaining Viewer. Create/obtain the viewer handle via local/global pad - the viewer is always; bound to a TPad object at present [This may be removed as a restriction in; the future] . You should perform the publishing to the viewer described below; in the Paint() method of the object you attach to the pad (via Draw()); ~~~ {.cpp}; TVirtualViewer3D * v = gPad->GetViewer3D(""xxxx"");; ~~~. "" xxxx"" is viewer type: OpenGL ""ogl"", X3D ""x3d"" or; Pad ""pad"" (default). The viewer is created via the plugin manager,; attached to pad, and the interface returned. ## Begin / End Scene. Objects must be added to viewer between BeginScene/EndScene calls e.g.; ~~~ {.cpp}; v->BeginScene();; .....; v->AddObject(....);; v->AddObject(....);; .....; v->EndScene();; ~~~. The BeginScene call will cause the viewer to suspend redraws etc, and after; the EndScene the viewer will reset the camera to frame the new scene and redraw.; [x3d viewer does not support changing of scenes - objects added after the; first Open/CloseScene pair will be ignored.]. ## Filling TBuffer3D and Adding to Viewer. The viewers behind the TVirtualViewer3D interface differ greatly in their; capabilities e.g. - Some know how to draw certain shapes natively (e.g. spheres/tubes in; OpenGL) - others always require a raw tessellation description of points/lines/segments.; - Some need the 3D object positions in the global frame, others can cope with; local frames + a translation matrix - which can give considerable performance; benefits. To cop",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:1792,Performance,perform,perform,1792,"rchy: Used to describe 3D objects; (""shapes""); - filled /added by negotiation with viewer via TVirtualViewer3D. Together these allow clients to publish objects to any one of the 3D viewers; (currently OpenGL/x3d,TPad), free of viewer specific drawing code. They allow; our simple x3d viewer, and considerably more sophisticated OpenGL one to both; work with both geometry libraries (g3d and geom) efficiently. Publishing to a viewer consists of the following steps:. 1. Create / obtain viewer handle; 2. Begin scene on viewer; 3. Fill mandatory parts of TBuffer3D describing object; 4. Add to viewer; 5. Fill optional parts of TBuffer3D if requested by viewer, and add again; ... repeat 3/4/5 as required; 6. End scene on viewer. ## Creating / Obtaining Viewer. Create/obtain the viewer handle via local/global pad - the viewer is always; bound to a TPad object at present [This may be removed as a restriction in; the future] . You should perform the publishing to the viewer described below; in the Paint() method of the object you attach to the pad (via Draw()); ~~~ {.cpp}; TVirtualViewer3D * v = gPad->GetViewer3D(""xxxx"");; ~~~. "" xxxx"" is viewer type: OpenGL ""ogl"", X3D ""x3d"" or; Pad ""pad"" (default). The viewer is created via the plugin manager,; attached to pad, and the interface returned. ## Begin / End Scene. Objects must be added to viewer between BeginScene/EndScene calls e.g.; ~~~ {.cpp}; v->BeginScene();; .....; v->AddObject(....);; v->AddObject(....);; .....; v->EndScene();; ~~~. The BeginScene call will cause the viewer to suspend redraws etc, and after; the EndScene the viewer will reset the camera to frame the new scene and redraw.; [x3d viewer does not support changing of scenes - objects added after the; first Open/CloseScene pair will be ignored.]. ## Filling TBuffer3D and Adding to Viewer. The viewers behind the TVirtualViewer3D interface differ greatly in their; capabilities e.g. - Some know how to draw certain shapes natively (e.g. spheres/tubes in; OpenGL) - ot",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:3075,Performance,perform,performance,3075,"enGL ""ogl"", X3D ""x3d"" or; Pad ""pad"" (default). The viewer is created via the plugin manager,; attached to pad, and the interface returned. ## Begin / End Scene. Objects must be added to viewer between BeginScene/EndScene calls e.g.; ~~~ {.cpp}; v->BeginScene();; .....; v->AddObject(....);; v->AddObject(....);; .....; v->EndScene();; ~~~. The BeginScene call will cause the viewer to suspend redraws etc, and after; the EndScene the viewer will reset the camera to frame the new scene and redraw.; [x3d viewer does not support changing of scenes - objects added after the; first Open/CloseScene pair will be ignored.]. ## Filling TBuffer3D and Adding to Viewer. The viewers behind the TVirtualViewer3D interface differ greatly in their; capabilities e.g. - Some know how to draw certain shapes natively (e.g. spheres/tubes in; OpenGL) - others always require a raw tessellation description of points/lines/segments.; - Some need the 3D object positions in the global frame, others can cope with; local frames + a translation matrix - which can give considerable performance; benefits. To cope with these situations the object buffer is filled out in negotiation; with the viewer. TBuffer3D classes are conceptually divided into enumerated; sections Core, BoundingBox, Raw etc (see TBuffer3D.h for more details).; \image html base_tbuffer3d.png. The SectionsValid() / SetSectionsValid / ClearSectionsValid() methods of TBuffer3D; are used to test/set/clear these section valid flags. The sections found in TBuffer3D (Core/BoundingBox/Raw Sizes/Raw); are sufficient to describe any tessellated shape in a generic fashion.; An additional ShapeSpecific section; in derived shape specific classes allows a more abstract shape description; (""a sphere of inner radius x, outer radius y""). This enables a viewer; which knows how to draw (tessellate) the shape itself to do so, which can bring; considerable performance and quality benefits, while providing a generic fallback; suitable for all viewers. The r",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:3912,Performance,perform,performance,3912,"on of points/lines/segments.; - Some need the 3D object positions in the global frame, others can cope with; local frames + a translation matrix - which can give considerable performance; benefits. To cope with these situations the object buffer is filled out in negotiation; with the viewer. TBuffer3D classes are conceptually divided into enumerated; sections Core, BoundingBox, Raw etc (see TBuffer3D.h for more details).; \image html base_tbuffer3d.png. The SectionsValid() / SetSectionsValid / ClearSectionsValid() methods of TBuffer3D; are used to test/set/clear these section valid flags. The sections found in TBuffer3D (Core/BoundingBox/Raw Sizes/Raw); are sufficient to describe any tessellated shape in a generic fashion.; An additional ShapeSpecific section; in derived shape specific classes allows a more abstract shape description; (""a sphere of inner radius x, outer radius y""). This enables a viewer; which knows how to draw (tessellate) the shape itself to do so, which can bring; considerable performance and quality benefits, while providing a generic fallback; suitable for all viewers. The rules for client negotiation with the viewer are:. - If suitable specialized TBuffer3D class exists, use it, otherwise use TBuffer3D.; - Complete the mandatory Core section.; - Complete the ShapeSpecific section if applicable.; - Complete the BoundingBox if you can.; - Pass this buffer to the viewer using one of the AddObject() methods - see below. If the viewer requires more sections to be completed (Raw/RawSizes) AddObject(); will return flags indicating which ones, otherwise it returns kNone. You must; fill the buffer and mark these sections valid, and pass the buffer again. A; typical code snippet would be:; ~~~ {.cpp}; TBuffer3DSphere sphereBuffer;; // Fill out kCore...; // Fill out kBoundingBox...; // Fill out kShapeSpecific for TBuffer3DSphere; // Try first add to viewer; Int_t reqSections = viewer->AddObject(buffer);; if (reqSections != TBuffer3D::kNone) {; if (reqSect",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:7649,Performance,cache,cached,7649,"(bounding box and tessellation vertexes) are in local or master (world frame).; fLocalMaster is a standard 4x4 translation matrix (OpenGL column major ordering); for placing the object into the 3D master frame. If fLocalFrame is kFALSE, fLocalMaster should contain an identity matrix. This; is set by default, and can be reset using SetLocalMasterIdentity() function. ### Logical & Physical Objects. There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the fID logical ID member of; TBuffer3D. If repeated addition of the same fID is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable performance gains; in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method; ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different fLocalMaster placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, with the fLocalMaster transform and the; fColor and fTransparency attributes, which can be varied for each physical; object. As a minimum requirement all clients must be capable of filling the raw tessellation; of the object buffer, in the master reference frame. Conversely viewers must; always be capable o",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:7747,Performance,perform,perform,7747,"atrix (OpenGL column major ordering); for placing the object into the 3D master frame. If fLocalFrame is kFALSE, fLocalMaster should contain an identity matrix. This; is set by default, and can be reset using SetLocalMasterIdentity() function. ### Logical & Physical Objects. There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the fID logical ID member of; TBuffer3D. If repeated addition of the same fID is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable performance gains; in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method; ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different fLocalMaster placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, with the fLocalMaster transform and the; fColor and fTransparency attributes, which can be varied for each physical; object. As a minimum requirement all clients must be capable of filling the raw tessellation; of the object buffer, in the master reference frame. Conversely viewers must; always be capable of displaying the object described by this buffer. ## Scene Rebuilds. It should be understood that AddObject is not an explici",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:7802,Performance,perform,performance,7802,"atrix (OpenGL column major ordering); for placing the object into the 3D master frame. If fLocalFrame is kFALSE, fLocalMaster should contain an identity matrix. This; is set by default, and can be reset using SetLocalMasterIdentity() function. ### Logical & Physical Objects. There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the fID logical ID member of; TBuffer3D. If repeated addition of the same fID is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable performance gains; in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method; ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different fLocalMaster placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, with the fLocalMaster transform and the; fColor and fTransparency attributes, which can be varied for each physical; object. As a minimum requirement all clients must be capable of filling the raw tessellation; of the object buffer, in the master reference frame. Conversely viewers must; always be capable of displaying the object described by this buffer. ## Scene Rebuilds. It should be understood that AddObject is not an explici",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:8896,Performance,cache,cached,8896,"ct in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method; ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different fLocalMaster placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, with the fLocalMaster transform and the; fColor and fTransparency attributes, which can be varied for each physical; object. As a minimum requirement all clients must be capable of filling the raw tessellation; of the object buffer, in the master reference frame. Conversely viewers must; always be capable of displaying the object described by this buffer. ## Scene Rebuilds. It should be understood that AddObject is not an explicit command to the viewer; - it may for various reasons decide to ignore it:. - It already has the object internally cached .; - The object falls outside some 'interest' limits of the viewer camera.; - The object is too small to be worth drawing. In all these cases AddObject() returns kNone, as it does for successful addition,; simply indicating it does not require you to provide further information about; this object. You should not try to make any assumptions about what the viewer did with it. This enables the viewer to be connected to a client which sends potentially; millions of objects, and only accept those that are of interest at a certain; time, caching the relatively small number of CPU/memory costly logical shapes,; and retaining/discarding the physical placements as required. The viewer may; decide to force the client to rebuild (republish) the scene (via a TPad; repaint at present), and thus collect these objects if the; internal viewer state changes. It does this presently by forcing a repaint; on the attached TPad object - hence the reason for putting all publishing to; ",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:10601,Performance,cache,cache,10601," potentially; millions of objects, and only accept those that are of interest at a certain; time, caching the relatively small number of CPU/memory costly logical shapes,; and retaining/discarding the physical placements as required. The viewer may; decide to force the client to rebuild (republish) the scene (via a TPad; repaint at present), and thus collect these objects if the; internal viewer state changes. It does this presently by forcing a repaint; on the attached TPad object - hence the reason for putting all publishing to; the viewer in the attached pad objects Paint() method. We will likely remove; this requirement in the future, indicating the rebuild request via a normal; ROOT signal, which the client can detect. ## Physical IDs. TVirtualViewer3D provides for two methods of object addition:virtual Int_t AddObject(const; TBuffer3D & buffer, Bool_t * addChildren = 0). ~~~ {.cpp}; virtual Int_t AddObject(UInt_t physicalID, const TBuffer3D & buffer, Bool_t * addChildren = 0); ~~~. If you use the first (simple) case a viewer using logical/physical pairs; will generate IDs for each physical object internally. In the second you; can specify a unique identifier from the client, which allows the viewer to be more; efficient. It can now cache both logical and physical objects, and only discard; physical objects no longer of interest as part of scene rebuilds. ## Child Objects. In many geometries there is a rigid containment hierarchy, and so if the viewer; is not interested in a certain object due to limits/size then it will also; not be interest in any of the contained branch of descendents. Both AddObject(); methods have an addChildren parameter. The viewer will complete this (if passed); indicating if children (contained within the one just sent) are worth adding. ## Recycling TBuffer3D. Once add AddObject() has been called, the contents are copied to the viewer; internally. You are free to destroy this object, or recycle it for the next; object if suitable.; */",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:10069,Safety,detect,detect,10069,"to be worth drawing. In all these cases AddObject() returns kNone, as it does for successful addition,; simply indicating it does not require you to provide further information about; this object. You should not try to make any assumptions about what the viewer did with it. This enables the viewer to be connected to a client which sends potentially; millions of objects, and only accept those that are of interest at a certain; time, caching the relatively small number of CPU/memory costly logical shapes,; and retaining/discarding the physical placements as required. The viewer may; decide to force the client to rebuild (republish) the scene (via a TPad; repaint at present), and thus collect these objects if the; internal viewer state changes. It does this presently by forcing a repaint; on the attached TPad object - hence the reason for putting all publishing to; the viewer in the attached pad objects Paint() method. We will likely remove; this requirement in the future, indicating the rebuild request via a normal; ROOT signal, which the client can detect. ## Physical IDs. TVirtualViewer3D provides for two methods of object addition:virtual Int_t AddObject(const; TBuffer3D & buffer, Bool_t * addChildren = 0). ~~~ {.cpp}; virtual Int_t AddObject(UInt_t physicalID, const TBuffer3D & buffer, Bool_t * addChildren = 0); ~~~. If you use the first (simple) case a viewer using logical/physical pairs; will generate IDs for each physical object internally. In the second you; can specify a unique identifier from the client, which allows the viewer to be more; efficient. It can now cache both logical and physical objects, and only discard; physical objects no longer of interest as part of scene rebuilds. ## Child Objects. In many geometries there is a rigid containment hierarchy, and so if the viewer; is not interested in a certain object due to limits/size then it will also; not be interest in any of the contained branch of descendents. Both AddObject(); methods have an addChil",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:745,Testability,test,test,745,"// @(#)root/base:$Id$; // Author: Olivier Couet 05/10/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualViewer3D; \ingroup Base. Abstract 3D shapes viewer. The concrete implementations are:. - TViewerX3D : X3d viewer; - TGLViewer : OpenGL viewer. ## 3D Viewer Infrastructure Overview. The 3D Viewer infrastructure consists of:. - TVirtualViewer3D interface: An abstract handle to the viewer, allowing; client to test preferences, add objects, control the viewer via scripting; (to be added) etc.; -TBuffer3D class hierarchy: Used to describe 3D objects; (""shapes""); - filled /added by negotiation with viewer via TVirtualViewer3D. Together these allow clients to publish objects to any one of the 3D viewers; (currently OpenGL/x3d,TPad), free of viewer specific drawing code. They allow; our simple x3d viewer, and considerably more sophisticated OpenGL one to both; work with both geometry libraries (g3d and geom) efficiently. Publishing to a viewer consists of the following steps:. 1. Create / obtain viewer handle; 2. Begin scene on viewer; 3. Fill mandatory parts of TBuffer3D describing object; 4. Add to viewer; 5. Fill optional parts of TBuffer3D if requested by viewer, and add again; ... repeat 3/4/5 as required; 6. End scene on viewer. ## Creating / Obtaining Viewer. Create/obtain the viewer handle via local/global pad - the viewer is always; bound to a TPad object at present [This may be removed as a restriction in; the future] . You should perform the publishing to the viewer described below; in the Paint() method of the object you attach to the pad (via Draw()); ~~~ {.cpp}; TVirtualViewer3D * v = gPad->GetViewer3D(""xxxx"");; ~~~. "" xxxx"" is view",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:3454,Testability,test,test,3454,"r; the EndScene the viewer will reset the camera to frame the new scene and redraw.; [x3d viewer does not support changing of scenes - objects added after the; first Open/CloseScene pair will be ignored.]. ## Filling TBuffer3D and Adding to Viewer. The viewers behind the TVirtualViewer3D interface differ greatly in their; capabilities e.g. - Some know how to draw certain shapes natively (e.g. spheres/tubes in; OpenGL) - others always require a raw tessellation description of points/lines/segments.; - Some need the 3D object positions in the global frame, others can cope with; local frames + a translation matrix - which can give considerable performance; benefits. To cope with these situations the object buffer is filled out in negotiation; with the viewer. TBuffer3D classes are conceptually divided into enumerated; sections Core, BoundingBox, Raw etc (see TBuffer3D.h for more details).; \image html base_tbuffer3d.png. The SectionsValid() / SetSectionsValid / ClearSectionsValid() methods of TBuffer3D; are used to test/set/clear these section valid flags. The sections found in TBuffer3D (Core/BoundingBox/Raw Sizes/Raw); are sufficient to describe any tessellated shape in a generic fashion.; An additional ShapeSpecific section; in derived shape specific classes allows a more abstract shape description; (""a sphere of inner radius x, outer radius y""). This enables a viewer; which knows how to draw (tessellate) the shape itself to do so, which can bring; considerable performance and quality benefits, while providing a generic fallback; suitable for all viewers. The rules for client negotiation with the viewer are:. - If suitable specialized TBuffer3D class exists, use it, otherwise use TBuffer3D.; - Complete the mandatory Core section.; - Complete the ShapeSpecific section if applicable.; - Complete the BoundingBox if you can.; - Pass this buffer to the viewer using one of the AddObject() methods - see below. If the viewer requires more sections to be completed (Raw/RawSi",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:7028,Testability,Log,Logical,7028,"ovide.; However to do this the viewer will force you to provide the raw tessellation, and the; resulting box will be axis aligned with the overall scene, which is non-ideal; for rotated shapes. As we need to support orientated (rotated) bounding boxes, TBuffer3D requires; the 6 vertices of the box. We also provide a convenience function, SetAABoundingBox(),; for simpler case of setting an axis aligned bounding box. ## Master/Local Reference Frames. The Core section of TBuffer3D contains two members relating to reference frames:; fLocalFrame & fLocalMaster. fLocalFrame indicates if any positions in the buffer; (bounding box and tessellation vertexes) are in local or master (world frame).; fLocalMaster is a standard 4x4 translation matrix (OpenGL column major ordering); for placing the object into the 3D master frame. If fLocalFrame is kFALSE, fLocalMaster should contain an identity matrix. This; is set by default, and can be reset using SetLocalMasterIdentity() function. ### Logical & Physical Objects. There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the fID logical ID member of; TBuffer3D. If repeated addition of the same fID is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable performance gains; in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interfac",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:7219,Testability,log,logical,7219,"d shapes. As we need to support orientated (rotated) bounding boxes, TBuffer3D requires; the 6 vertices of the box. We also provide a convenience function, SetAABoundingBox(),; for simpler case of setting an axis aligned bounding box. ## Master/Local Reference Frames. The Core section of TBuffer3D contains two members relating to reference frames:; fLocalFrame & fLocalMaster. fLocalFrame indicates if any positions in the buffer; (bounding box and tessellation vertexes) are in local or master (world frame).; fLocalMaster is a standard 4x4 translation matrix (OpenGL column major ordering); for placing the object into the 3D master frame. If fLocalFrame is kFALSE, fLocalMaster should contain an identity matrix. This; is set by default, and can be reset using SetLocalMasterIdentity() function. ### Logical & Physical Objects. There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the fID logical ID member of; TBuffer3D. If repeated addition of the same fID is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable performance gains; in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method; ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different fLocalMaster pla",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:7405,Testability,log,logical,7405,"vide a convenience function, SetAABoundingBox(),; for simpler case of setting an axis aligned bounding box. ## Master/Local Reference Frames. The Core section of TBuffer3D contains two members relating to reference frames:; fLocalFrame & fLocalMaster. fLocalFrame indicates if any positions in the buffer; (bounding box and tessellation vertexes) are in local or master (world frame).; fLocalMaster is a standard 4x4 translation matrix (OpenGL column major ordering); for placing the object into the 3D master frame. If fLocalFrame is kFALSE, fLocalMaster should contain an identity matrix. This; is set by default, and can be reset using SetLocalMasterIdentity() function. ### Logical & Physical Objects. There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the fID logical ID member of; TBuffer3D. If repeated addition of the same fID is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable performance gains; in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method; ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different fLocalMaster placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, wi",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:7527,Testability,log,logical,7527," of TBuffer3D contains two members relating to reference frames:; fLocalFrame & fLocalMaster. fLocalFrame indicates if any positions in the buffer; (bounding box and tessellation vertexes) are in local or master (world frame).; fLocalMaster is a standard 4x4 translation matrix (OpenGL column major ordering); for placing the object into the 3D master frame. If fLocalFrame is kFALSE, fLocalMaster should contain an identity matrix. This; is set by default, and can be reset using SetLocalMasterIdentity() function. ### Logical & Physical Objects. There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the fID logical ID member of; TBuffer3D. If repeated addition of the same fID is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable performance gains; in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method; ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different fLocalMaster placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, with the fLocalMaster transform and the; fColor and fTransparency attributes, which can be varied for each physical; object. As a minimum requirement all client",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:7555,Testability,log,logical,7555," of TBuffer3D contains two members relating to reference frames:; fLocalFrame & fLocalMaster. fLocalFrame indicates if any positions in the buffer; (bounding box and tessellation vertexes) are in local or master (world frame).; fLocalMaster is a standard 4x4 translation matrix (OpenGL column major ordering); for placing the object into the 3D master frame. If fLocalFrame is kFALSE, fLocalMaster should contain an identity matrix. This; is set by default, and can be reset using SetLocalMasterIdentity() function. ### Logical & Physical Objects. There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the fID logical ID member of; TBuffer3D. If repeated addition of the same fID is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable performance gains; in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method; ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different fLocalMaster placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, with the fLocalMaster transform and the; fColor and fTransparency attributes, which can be varied for each physical; object. As a minimum requirement all client",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:7868,Testability,log,logical,7868,"contain an identity matrix. This; is set by default, and can be reset using SetLocalMasterIdentity() function. ### Logical & Physical Objects. There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the fID logical ID member of; TBuffer3D. If repeated addition of the same fID is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable performance gains; in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method; ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different fLocalMaster placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, with the fLocalMaster transform and the; fColor and fTransparency attributes, which can be varied for each physical; object. As a minimum requirement all clients must be capable of filling the raw tessellation; of the object buffer, in the master reference frame. Conversely viewers must; always be capable of displaying the object described by this buffer. ## Scene Rebuilds. It should be understood that AddObject is not an explicit command to the viewer; - it may for various reasons decide to ignore it:. - It already has the object internally cached .; - The ob",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:8255,Testability,log,logical,8255,"ry large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the fID logical ID member of; TBuffer3D. If repeated addition of the same fID is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable performance gains; in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method; ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different fLocalMaster placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, with the fLocalMaster transform and the; fColor and fTransparency attributes, which can be varied for each physical; object. As a minimum requirement all clients must be capable of filling the raw tessellation; of the object buffer, in the master reference frame. Conversely viewers must; always be capable of displaying the object described by this buffer. ## Scene Rebuilds. It should be understood that AddObject is not an explicit command to the viewer; - it may for various reasons decide to ignore it:. - It already has the object internally cached .; - The object falls outside some 'interest' limits of the viewer camera.; - The object is too small to be worth drawing. In all these cases AddObject() returns kNone, as it does for successful addition,; simply indicating it does not require you to provide further information about; this object. You should not try to make any assumptions about what the viewer did with it. This enables the viewer to be connected to a client which sends potentia",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:8332,Testability,log,logical,8332,"ry large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the fID logical ID member of; TBuffer3D. If repeated addition of the same fID is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable performance gains; in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method; ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different fLocalMaster placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, with the fLocalMaster transform and the; fColor and fTransparency attributes, which can be varied for each physical; object. As a minimum requirement all clients must be capable of filling the raw tessellation; of the object buffer, in the master reference frame. Conversely viewers must; always be capable of displaying the object described by this buffer. ## Scene Rebuilds. It should be understood that AddObject is not an explicit command to the viewer; - it may for various reasons decide to ignore it:. - It already has the object internally cached .; - The object falls outside some 'interest' limits of the viewer camera.; - The object is too small to be worth drawing. In all these cases AddObject() returns kNone, as it does for successful addition,; simply indicating it does not require you to provide further information about; this object. You should not try to make any assumptions about what the viewer did with it. This enables the viewer to be connected to a client which sends potentia",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:9498,Testability,log,logical,9498,"hich can be varied for each physical; object. As a minimum requirement all clients must be capable of filling the raw tessellation; of the object buffer, in the master reference frame. Conversely viewers must; always be capable of displaying the object described by this buffer. ## Scene Rebuilds. It should be understood that AddObject is not an explicit command to the viewer; - it may for various reasons decide to ignore it:. - It already has the object internally cached .; - The object falls outside some 'interest' limits of the viewer camera.; - The object is too small to be worth drawing. In all these cases AddObject() returns kNone, as it does for successful addition,; simply indicating it does not require you to provide further information about; this object. You should not try to make any assumptions about what the viewer did with it. This enables the viewer to be connected to a client which sends potentially; millions of objects, and only accept those that are of interest at a certain; time, caching the relatively small number of CPU/memory costly logical shapes,; and retaining/discarding the physical placements as required. The viewer may; decide to force the client to rebuild (republish) the scene (via a TPad; repaint at present), and thus collect these objects if the; internal viewer state changes. It does this presently by forcing a repaint; on the attached TPad object - hence the reason for putting all publishing to; the viewer in the attached pad objects Paint() method. We will likely remove; this requirement in the future, indicating the rebuild request via a normal; ROOT signal, which the client can detect. ## Physical IDs. TVirtualViewer3D provides for two methods of object addition:virtual Int_t AddObject(const; TBuffer3D & buffer, Bool_t * addChildren = 0). ~~~ {.cpp}; virtual Int_t AddObject(UInt_t physicalID, const TBuffer3D & buffer, Bool_t * addChildren = 0); ~~~. If you use the first (simple) case a viewer using logical/physical pairs; will gen",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:10396,Testability,log,logical,10396," potentially; millions of objects, and only accept those that are of interest at a certain; time, caching the relatively small number of CPU/memory costly logical shapes,; and retaining/discarding the physical placements as required. The viewer may; decide to force the client to rebuild (republish) the scene (via a TPad; repaint at present), and thus collect these objects if the; internal viewer state changes. It does this presently by forcing a repaint; on the attached TPad object - hence the reason for putting all publishing to; the viewer in the attached pad objects Paint() method. We will likely remove; this requirement in the future, indicating the rebuild request via a normal; ROOT signal, which the client can detect. ## Physical IDs. TVirtualViewer3D provides for two methods of object addition:virtual Int_t AddObject(const; TBuffer3D & buffer, Bool_t * addChildren = 0). ~~~ {.cpp}; virtual Int_t AddObject(UInt_t physicalID, const TBuffer3D & buffer, Bool_t * addChildren = 0); ~~~. If you use the first (simple) case a viewer using logical/physical pairs; will generate IDs for each physical object internally. In the second you; can specify a unique identifier from the client, which allows the viewer to be more; efficient. It can now cache both logical and physical objects, and only discard; physical objects no longer of interest as part of scene rebuilds. ## Child Objects. In many geometries there is a rigid containment hierarchy, and so if the viewer; is not interested in a certain object due to limits/size then it will also; not be interest in any of the contained branch of descendents. Both AddObject(); methods have an addChildren parameter. The viewer will complete this (if passed); indicating if children (contained within the one just sent) are worth adding. ## Recycling TBuffer3D. Once add AddObject() has been called, the contents are copied to the viewer; internally. You are free to destroy this object, or recycle it for the next; object if suitable.; */",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:10612,Testability,log,logical,10612," potentially; millions of objects, and only accept those that are of interest at a certain; time, caching the relatively small number of CPU/memory costly logical shapes,; and retaining/discarding the physical placements as required. The viewer may; decide to force the client to rebuild (republish) the scene (via a TPad; repaint at present), and thus collect these objects if the; internal viewer state changes. It does this presently by forcing a repaint; on the attached TPad object - hence the reason for putting all publishing to; the viewer in the attached pad objects Paint() method. We will likely remove; this requirement in the future, indicating the rebuild request via a normal; ROOT signal, which the client can detect. ## Physical IDs. TVirtualViewer3D provides for two methods of object addition:virtual Int_t AddObject(const; TBuffer3D & buffer, Bool_t * addChildren = 0). ~~~ {.cpp}; virtual Int_t AddObject(UInt_t physicalID, const TBuffer3D & buffer, Bool_t * addChildren = 0); ~~~. If you use the first (simple) case a viewer using logical/physical pairs; will generate IDs for each physical object internally. In the second you; can specify a unique identifier from the client, which allows the viewer to be more; efficient. It can now cache both logical and physical objects, and only discard; physical objects no longer of interest as part of scene rebuilds. ## Child Objects. In many geometries there is a rigid containment hierarchy, and so if the viewer; is not interested in a certain object due to limits/size then it will also; not be interest in any of the contained branch of descendents. Both AddObject(); methods have an addChildren parameter. The viewer will complete this (if passed); indicating if children (contained within the one just sent) are worth adding. ## Recycling TBuffer3D. Once add AddObject() has been called, the contents are copied to the viewer; internally. You are free to destroy this object, or recycle it for the next; object if suitable.; */",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:1125,Usability,simpl,simple,1125,"demakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualViewer3D; \ingroup Base. Abstract 3D shapes viewer. The concrete implementations are:. - TViewerX3D : X3d viewer; - TGLViewer : OpenGL viewer. ## 3D Viewer Infrastructure Overview. The 3D Viewer infrastructure consists of:. - TVirtualViewer3D interface: An abstract handle to the viewer, allowing; client to test preferences, add objects, control the viewer via scripting; (to be added) etc.; -TBuffer3D class hierarchy: Used to describe 3D objects; (""shapes""); - filled /added by negotiation with viewer via TVirtualViewer3D. Together these allow clients to publish objects to any one of the 3D viewers; (currently OpenGL/x3d,TPad), free of viewer specific drawing code. They allow; our simple x3d viewer, and considerably more sophisticated OpenGL one to both; work with both geometry libraries (g3d and geom) efficiently. Publishing to a viewer consists of the following steps:. 1. Create / obtain viewer handle; 2. Begin scene on viewer; 3. Fill mandatory parts of TBuffer3D describing object; 4. Add to viewer; 5. Fill optional parts of TBuffer3D if requested by viewer, and add again; ... repeat 3/4/5 as required; 6. End scene on viewer. ## Creating / Obtaining Viewer. Create/obtain the viewer handle via local/global pad - the viewer is always; bound to a TPad object at present [This may be removed as a restriction in; the future] . You should perform the publishing to the viewer described below; in the Paint() method of the object you attach to the pad (via Draw()); ~~~ {.cpp}; TVirtualViewer3D * v = gPad->GetViewer3D(""xxxx"");; ~~~. "" xxxx"" is viewer type: OpenGL ""ogl"", X3D ""x3d"" or; Pad ""pad"" (default). The viewer is created via the plugin manager,; attached to pad, and the interface returned. ## Begin / End Scene. Objects must",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:3399,Usability,Clear,ClearSectionsValid,3399,"r; the EndScene the viewer will reset the camera to frame the new scene and redraw.; [x3d viewer does not support changing of scenes - objects added after the; first Open/CloseScene pair will be ignored.]. ## Filling TBuffer3D and Adding to Viewer. The viewers behind the TVirtualViewer3D interface differ greatly in their; capabilities e.g. - Some know how to draw certain shapes natively (e.g. spheres/tubes in; OpenGL) - others always require a raw tessellation description of points/lines/segments.; - Some need the 3D object positions in the global frame, others can cope with; local frames + a translation matrix - which can give considerable performance; benefits. To cope with these situations the object buffer is filled out in negotiation; with the viewer. TBuffer3D classes are conceptually divided into enumerated; sections Core, BoundingBox, Raw etc (see TBuffer3D.h for more details).; \image html base_tbuffer3d.png. The SectionsValid() / SetSectionsValid / ClearSectionsValid() methods of TBuffer3D; are used to test/set/clear these section valid flags. The sections found in TBuffer3D (Core/BoundingBox/Raw Sizes/Raw); are sufficient to describe any tessellated shape in a generic fashion.; An additional ShapeSpecific section; in derived shape specific classes allows a more abstract shape description; (""a sphere of inner radius x, outer radius y""). This enables a viewer; which knows how to draw (tessellate) the shape itself to do so, which can bring; considerable performance and quality benefits, while providing a generic fallback; suitable for all viewers. The rules for client negotiation with the viewer are:. - If suitable specialized TBuffer3D class exists, use it, otherwise use TBuffer3D.; - Complete the mandatory Core section.; - Complete the ShapeSpecific section if applicable.; - Complete the BoundingBox if you can.; - Pass this buffer to the viewer using one of the AddObject() methods - see below. If the viewer requires more sections to be completed (Raw/RawSi",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:3463,Usability,clear,clear,3463,"r; the EndScene the viewer will reset the camera to frame the new scene and redraw.; [x3d viewer does not support changing of scenes - objects added after the; first Open/CloseScene pair will be ignored.]. ## Filling TBuffer3D and Adding to Viewer. The viewers behind the TVirtualViewer3D interface differ greatly in their; capabilities e.g. - Some know how to draw certain shapes natively (e.g. spheres/tubes in; OpenGL) - others always require a raw tessellation description of points/lines/segments.; - Some need the 3D object positions in the global frame, others can cope with; local frames + a translation matrix - which can give considerable performance; benefits. To cope with these situations the object buffer is filled out in negotiation; with the viewer. TBuffer3D classes are conceptually divided into enumerated; sections Core, BoundingBox, Raw etc (see TBuffer3D.h for more details).; \image html base_tbuffer3d.png. The SectionsValid() / SetSectionsValid / ClearSectionsValid() methods of TBuffer3D; are used to test/set/clear these section valid flags. The sections found in TBuffer3D (Core/BoundingBox/Raw Sizes/Raw); are sufficient to describe any tessellated shape in a generic fashion.; An additional ShapeSpecific section; in derived shape specific classes allows a more abstract shape description; (""a sphere of inner radius x, outer radius y""). This enables a viewer; which knows how to draw (tessellate) the shape itself to do so, which can bring; considerable performance and quality benefits, while providing a generic fallback; suitable for all viewers. The rules for client negotiation with the viewer are:. - If suitable specialized TBuffer3D class exists, use it, otherwise use TBuffer3D.; - Complete the mandatory Core section.; - Complete the ShapeSpecific section if applicable.; - Complete the BoundingBox if you can.; - Pass this buffer to the viewer using one of the AddObject() methods - see below. If the viewer requires more sections to be completed (Raw/RawSi",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:5754,Usability,clear,clear,5754,"fer3DSphere; // Try first add to viewer; Int_t reqSections = viewer->AddObject(buffer);; if (reqSections != TBuffer3D::kNone) {; if (reqSections & TBuffer3D::kRawSizes) {; // Fill out kRawSizes...; }; if (reqSections & TBuffer3D::kRaw) {; // Fill out kRaw...; }; // Add second time to viewer - ignore return cannot do more; viewer->AddObject(buffer);; }; }; ~~~. ShapeSpecific: If the viewer can directly display the buffer without; filling of the kRaw/kRawSizes section it will not need to request client side; tessellation. Currently we provide the following various shape specific classes,; which the OpenGL viewer can take advantage of (see TBuffer3D.h and TBuffer3DTypes.h). - TBuffer3DSphere - solid, hollow and cut spheres*; - TBuffer3DTubeSeg - angle tube segment; - TBuffer3DCutTube - angle tube segment with plane cut ends. *OpenGL only supports solid spheres at present - cut/hollow ones will be; requested tessellated. Anyone is free to add new TBuffer3D classes, but it should be clear that the; viewers require updating to be able to take advantage of them. The number of; native shapes in OpenGL will be expanded over time. BoundingBox: You are not obliged to complete this, as any viewer; requiring one internally (OpenGL) will build one for you if you do not provide.; However to do this the viewer will force you to provide the raw tessellation, and the; resulting box will be axis aligned with the overall scene, which is non-ideal; for rotated shapes. As we need to support orientated (rotated) bounding boxes, TBuffer3D requires; the 6 vertices of the box. We also provide a convenience function, SetAABoundingBox(),; for simpler case of setting an axis aligned bounding box. ## Master/Local Reference Frames. The Core section of TBuffer3D contains two members relating to reference frames:; fLocalFrame & fLocalMaster. fLocalFrame indicates if any positions in the buffer; (bounding box and tessellation vertexes) are in local or master (world frame).; fLocalMaster is a standard",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:6404,Usability,simpl,simpler,6404," of (see TBuffer3D.h and TBuffer3DTypes.h). - TBuffer3DSphere - solid, hollow and cut spheres*; - TBuffer3DTubeSeg - angle tube segment; - TBuffer3DCutTube - angle tube segment with plane cut ends. *OpenGL only supports solid spheres at present - cut/hollow ones will be; requested tessellated. Anyone is free to add new TBuffer3D classes, but it should be clear that the; viewers require updating to be able to take advantage of them. The number of; native shapes in OpenGL will be expanded over time. BoundingBox: You are not obliged to complete this, as any viewer; requiring one internally (OpenGL) will build one for you if you do not provide.; However to do this the viewer will force you to provide the raw tessellation, and the; resulting box will be axis aligned with the overall scene, which is non-ideal; for rotated shapes. As we need to support orientated (rotated) bounding boxes, TBuffer3D requires; the 6 vertices of the box. We also provide a convenience function, SetAABoundingBox(),; for simpler case of setting an axis aligned bounding box. ## Master/Local Reference Frames. The Core section of TBuffer3D contains two members relating to reference frames:; fLocalFrame & fLocalMaster. fLocalFrame indicates if any positions in the buffer; (bounding box and tessellation vertexes) are in local or master (world frame).; fLocalMaster is a standard 4x4 translation matrix (OpenGL column major ordering); for placing the object into the 3D master frame. If fLocalFrame is kFALSE, fLocalMaster should contain an identity matrix. This; is set by default, and can be reset using SetLocalMasterIdentity() function. ### Logical & Physical Objects. There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relative",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:9109,Usability,simpl,simply,9109,"an make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different fLocalMaster placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, with the fLocalMaster transform and the; fColor and fTransparency attributes, which can be varied for each physical; object. As a minimum requirement all clients must be capable of filling the raw tessellation; of the object buffer, in the master reference frame. Conversely viewers must; always be capable of displaying the object described by this buffer. ## Scene Rebuilds. It should be understood that AddObject is not an explicit command to the viewer; - it may for various reasons decide to ignore it:. - It already has the object internally cached .; - The object falls outside some 'interest' limits of the viewer camera.; - The object is too small to be worth drawing. In all these cases AddObject() returns kNone, as it does for successful addition,; simply indicating it does not require you to provide further information about; this object. You should not try to make any assumptions about what the viewer did with it. This enables the viewer to be connected to a client which sends potentially; millions of objects, and only accept those that are of interest at a certain; time, caching the relatively small number of CPU/memory costly logical shapes,; and retaining/discarding the physical placements as required. The viewer may; decide to force the client to rebuild (republish) the scene (via a TPad; repaint at present), and thus collect these objects if the; internal viewer state changes. It does this presently by forcing a repaint; on the attached TPad object - hence the reason for putting all publishing to; the viewer in the attached pad objects Paint() method. We will likely remove; this requirement in the future, indicating the rebuild request via a normal; ROOT signal, which the client can detect. ## Physical IDs. TVirtualViewer3D pr",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:10368,Usability,simpl,simple,10368," potentially; millions of objects, and only accept those that are of interest at a certain; time, caching the relatively small number of CPU/memory costly logical shapes,; and retaining/discarding the physical placements as required. The viewer may; decide to force the client to rebuild (republish) the scene (via a TPad; repaint at present), and thus collect these objects if the; internal viewer state changes. It does this presently by forcing a repaint; on the attached TPad object - hence the reason for putting all publishing to; the viewer in the attached pad objects Paint() method. We will likely remove; this requirement in the future, indicating the rebuild request via a normal; ROOT signal, which the client can detect. ## Physical IDs. TVirtualViewer3D provides for two methods of object addition:virtual Int_t AddObject(const; TBuffer3D & buffer, Bool_t * addChildren = 0). ~~~ {.cpp}; virtual Int_t AddObject(UInt_t physicalID, const TBuffer3D & buffer, Bool_t * addChildren = 0); ~~~. If you use the first (simple) case a viewer using logical/physical pairs; will generate IDs for each physical object internally. In the second you; can specify a unique identifier from the client, which allows the viewer to be more; efficient. It can now cache both logical and physical objects, and only discard; physical objects no longer of interest as part of scene rebuilds. ## Child Objects. In many geometries there is a rigid containment hierarchy, and so if the viewer; is not interested in a certain object due to limits/size then it will also; not be interest in any of the contained branch of descendents. Both AddObject(); methods have an addChildren parameter. The viewer will complete this (if passed); indicating if children (contained within the one just sent) are worth adding. ## Recycling TBuffer3D. Once add AddObject() has been called, the contents are copied to the viewer; internally. You are free to destroy this object, or recycle it for the next; object if suitable.; */",MatchSource.CODE_COMMENT,core/base/src/TVirtualViewer3D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:507,Integrability,interface,interface,507,"// @(#)root/base:$Id$; // Author: Fons Rademakers 3/12/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \defgroup GraphicsBackends Graphics' Backends; \ingroup Graphics; Graphics' Backends interface classes.; Graphics classes interfacing ROOT graphics with the low level; native graphics backends(s) like X11, Cocoa, Win32 etc...; These classes are not meant to be used directly by ROOT users.; */; /** \class TVirtualX; \ingroup GraphicsBackends; \ingroup Base; Semi-Abstract base class defining a generic interface to the underlying, low; level, native graphics backend (X11, Win32, MacOS, OpenGL...).; An instance of TVirtualX itself defines a batch interface to the graphics system.; */",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:825,Integrability,interface,interface,825,"// @(#)root/base:$Id$; // Author: Fons Rademakers 3/12/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \defgroup GraphicsBackends Graphics' Backends; \ingroup Graphics; Graphics' Backends interface classes.; Graphics classes interfacing ROOT graphics with the low level; native graphics backends(s) like X11, Cocoa, Win32 etc...; These classes are not meant to be used directly by ROOT users.; */; /** \class TVirtualX; \ingroup GraphicsBackends; \ingroup Base; Semi-Abstract base class defining a generic interface to the underlying, low; level, native graphics backend (X11, Win32, MacOS, OpenGL...).; An instance of TVirtualX itself defines a batch interface to the graphics system.; */",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:971,Integrability,interface,interface,971,"// @(#)root/base:$Id$; // Author: Fons Rademakers 3/12/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \defgroup GraphicsBackends Graphics' Backends; \ingroup Graphics; Graphics' Backends interface classes.; Graphics classes interfacing ROOT graphics with the low level; native graphics backends(s) like X11, Cocoa, Win32 etc...; These classes are not meant to be used directly by ROOT users.; */; /** \class TVirtualX; \ingroup GraphicsBackends; \ingroup Base; Semi-Abstract base class defining a generic interface to the underlying, low; level, native graphics backend (X11, Win32, MacOS, OpenGL...).; An instance of TVirtualX itself defines a batch interface to the graphics system.; */",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:35,Integrability,interface,interface,35,"//Global pointer to batch graphics interface",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:341,Integrability,depend,dependent,341,"////////////////////////////////////////////////////////////////////////////////; /// Looks up the string name of a color ""cname"" with respect to the screen; /// associated with the specified colormap. It returns the exact color value.; /// If the color name is not in the Host Portable Character Encoding,; /// the result is implementation dependent.; ///; /// \param [in] cmap the colormap; /// \param [in] cname the color name string; use of uppercase or lowercase; /// does not matter; /// \param [in] color returns the exact color value for later use; ///; /// The ColorStruct_t structure is set to default. Let system think we; /// could parse color.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:278,Modifiability,Portab,Portable,278,"////////////////////////////////////////////////////////////////////////////////; /// Looks up the string name of a color ""cname"" with respect to the screen; /// associated with the specified colormap. It returns the exact color value.; /// If the color name is not in the Host Portable Character Encoding,; /// the result is implementation dependent.; ///; /// \param [in] cmap the colormap; /// \param [in] cname the color name string; use of uppercase or lowercase; /// does not matter; /// \param [in] color returns the exact color value for later use; ///; /// The ColorStruct_t structure is set to default. Let system think we; /// could parse color.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:86,Energy Efficiency,Allocate,Allocates,86,"////////////////////////////////////////////////////////////////////////////////; /// Allocates a read-only colormap entry corresponding to the closest RGB; /// value supported by the hardware. If no cell could be allocated it; /// returns kFALSE, otherwise kTRUE.; ///; /// The pixel value is set to default. Let system think we could allocate; /// color.; ///; /// \param [in] cmap the colormap; /// \param [in] color specifies and returns the values actually used in the cmap",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:214,Energy Efficiency,allocate,allocated,214,"////////////////////////////////////////////////////////////////////////////////; /// Allocates a read-only colormap entry corresponding to the closest RGB; /// value supported by the hardware. If no cell could be allocated it; /// returns kFALSE, otherwise kTRUE.; ///; /// The pixel value is set to default. Let system think we could allocate; /// color.; ///; /// \param [in] cmap the colormap; /// \param [in] color specifies and returns the values actually used in the cmap",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:336,Energy Efficiency,allocate,allocate,336,"////////////////////////////////////////////////////////////////////////////////; /// Allocates a read-only colormap entry corresponding to the closest RGB; /// value supported by the hardware. If no cell could be allocated it; /// returns kFALSE, otherwise kTRUE.; ///; /// The pixel value is set to default. Let system think we could allocate; /// color.; ///; /// \param [in] cmap the colormap; /// \param [in] color specifies and returns the values actually used in the cmap",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:138,Availability,failure,failure,138,"////////////////////////////////////////////////////////////////////////////////; /// Initializes the X system. Returns kFALSE in case of failure.; /// It is implementation dependent.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:173,Integrability,depend,dependent,173,"////////////////////////////////////////////////////////////////////////////////; /// Initializes the X system. Returns kFALSE in case of failure.; /// It is implementation dependent.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:86,Usability,Clear,Clears,86,"////////////////////////////////////////////////////////////////////////////////; /// Clears the entire area of the current window.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:184,Availability,down,down,184,"////////////////////////////////////////////////////////////////////////////////; /// Draws a box between [x1,y1] and [x2,y2] according to the ""mode"".; ///; /// \param [in] x1,y1 left down corner; /// \param [in] x2,y2 right up corner; /// \param [in] mode drawing mode:; /// - mode = 0 hollow (kHollow); /// - mode = 1 solid (kSolid)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:294,Availability,down,down,294,"////////////////////////////////////////////////////////////////////////////////; /// Draws a cell array. The drawing is done with the pixel precision; /// if (x2-x1)/nx (or y) is not a exact pixel number the position of; /// the top right corner may be wrong.; ///; /// \param [in] x1,y1 left down corner; /// \param [in] x2,y2 right up corner; /// \param [in] nx,ny array size; /// \param [in] ic array",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:238,Modifiability,extend,extend,238,"////////////////////////////////////////////////////////////////////////////////; /// Returns the ascent of the current font (in pixels).; /// The ascent of a font is the distance from the baseline; /// to the highest position characters extend to",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:226,Modifiability,extend,extend,226,"////////////////////////////////////////////////////////////////////////////////; /// Returns the descent of the current font (in pixels.; /// The descent is the distance from the base line; /// to the lowest point characters extend to.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:102,Performance,load,loads,102,"////////////////////////////////////////////////////////////////////////////////; /// If id is NULL - loads the specified gif file at position [x0,y0] in the; /// current window. Otherwise creates pixmap from gif file",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:635,Deployability,release,released,635,"////////////////////////////////////////////////////////////////////////////////; /// Requests Locator position.; ///; /// \param [in] x,y cursor position at moment of button press (output); /// \param [in] ctyp cursor type (input); /// - ctyp = 1 tracking cross; /// - ctyp = 2 cross-hair; /// - ctyp = 3 rubber circle; /// - ctyp = 4 rubber band; /// - ctyp = 5 rubber rectangle; ///; /// \param [in] mode input mode; /// - mode = 0 request; /// - mode = 1 sample; ///; /// \return; /// - in request mode:; /// - 1 = left is pressed; /// - 2 = middle is pressed; /// - 3 = right is pressed; /// - in sample mode:; /// - 11 = left is released; /// - 12 = middle is released; /// - 13 = right is released; /// - -1 = nothing is pressed or released; /// - -2 = leave the window; /// - else = keycode (keyboard is pressed)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:666,Deployability,release,released,666,"////////////////////////////////////////////////////////////////////////////////; /// Requests Locator position.; ///; /// \param [in] x,y cursor position at moment of button press (output); /// \param [in] ctyp cursor type (input); /// - ctyp = 1 tracking cross; /// - ctyp = 2 cross-hair; /// - ctyp = 3 rubber circle; /// - ctyp = 4 rubber band; /// - ctyp = 5 rubber rectangle; ///; /// \param [in] mode input mode; /// - mode = 0 request; /// - mode = 1 sample; ///; /// \return; /// - in request mode:; /// - 1 = left is pressed; /// - 2 = middle is pressed; /// - 3 = right is pressed; /// - in sample mode:; /// - 11 = left is released; /// - 12 = middle is released; /// - 13 = right is released; /// - -1 = nothing is pressed or released; /// - -2 = leave the window; /// - else = keycode (keyboard is pressed)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:696,Deployability,release,released,696,"////////////////////////////////////////////////////////////////////////////////; /// Requests Locator position.; ///; /// \param [in] x,y cursor position at moment of button press (output); /// \param [in] ctyp cursor type (input); /// - ctyp = 1 tracking cross; /// - ctyp = 2 cross-hair; /// - ctyp = 3 rubber circle; /// - ctyp = 4 rubber band; /// - ctyp = 5 rubber rectangle; ///; /// \param [in] mode input mode; /// - mode = 0 request; /// - mode = 1 sample; ///; /// \return; /// - in request mode:; /// - 1 = left is pressed; /// - 2 = middle is pressed; /// - 3 = right is pressed; /// - in sample mode:; /// - 11 = left is released; /// - 12 = middle is released; /// - 13 = right is released; /// - -1 = nothing is pressed or released; /// - -2 = leave the window; /// - else = keycode (keyboard is pressed)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:739,Deployability,release,released,739,"////////////////////////////////////////////////////////////////////////////////; /// Requests Locator position.; ///; /// \param [in] x,y cursor position at moment of button press (output); /// \param [in] ctyp cursor type (input); /// - ctyp = 1 tracking cross; /// - ctyp = 2 cross-hair; /// - ctyp = 3 rubber circle; /// - ctyp = 4 rubber band; /// - ctyp = 5 rubber rectangle; ///; /// \param [in] mode input mode; /// - mode = 0 request; /// - mode = 1 sample; ///; /// \return; /// - in request mode:; /// - 1 = left is pressed; /// - 2 = middle is pressed; /// - 3 = right is pressed; /// - in sample mode:; /// - 11 = left is released; /// - 12 = middle is released; /// - 13 = right is released; /// - -1 = nothing is pressed or released; /// - -2 = leave the window; /// - else = keycode (keyboard is pressed)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:263,Availability,echo,echo,263,"////////////////////////////////////////////////////////////////////////////////; /// Sets the drawing mode.; ///; /// \param [in] mode drawing mode.; /// - mode = 1 copy; /// - mode = 2 xor; /// - mode = 3 invert; /// - mode = 4 set the suitable mode for cursor echo according to the vendor",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:146,Integrability,rout,routine,146,"////////////////////////////////////////////////////////////////////////////////; /// Sets opacity of the current window. This image manipulation routine; /// works by adding to a percent amount of neutral to each pixels RGB.; /// Since it requires quite some additional color map entries is it; /// only supported on displays with more than > 8 color planes (> 256; /// colors).",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:220,Energy Efficiency,green,green,220,"////////////////////////////////////////////////////////////////////////////////; /// Sets color intensities the specified color index ""cindex"".; ///; /// \param [in] cindex color index; /// \param [in] r, g, b the red, green, blue intensities between 0.0 and 1.0",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:270,Performance,load,loading,270,"////////////////////////////////////////////////////////////////////////////////; /// Sets text font to specified name ""fontname"".This function returns 0 if; /// the specified font is found, 1 if it is not.; ///; /// \param [in] fontname font name; /// \param [in] mode loading flag; /// - mode = 0 search if the font exist (kCheck); /// - mode = 1 search the font and load it if it exists (kLoad)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:369,Performance,load,load,369,"////////////////////////////////////////////////////////////////////////////////; /// Sets text font to specified name ""fontname"".This function returns 0 if; /// the specified font is found, 1 if it is not.; ///; /// \param [in] fontname font name; /// \param [in] mode loading flag; /// - mode = 0 search if the font exist (kCheck); /// - mode = 1 search the font and load it if it exists (kLoad)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:86,Deployability,Update,Updates,86,"////////////////////////////////////////////////////////////////////////////////; /// Updates or synchronises client and server once (not permanent).; /// according to ""mode"".; ///; /// \param [in] mode update mode.; /// - mode = 1 update; /// - mode = 0 sync",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:203,Deployability,update,update,203,"////////////////////////////////////////////////////////////////////////////////; /// Updates or synchronises client and server once (not permanent).; /// according to ""mode"".; ///; /// \param [in] mode update mode.; /// - mode = 1 update; /// - mode = 0 sync",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:232,Deployability,update,update,232,"////////////////////////////////////////////////////////////////////////////////; /// Updates or synchronises client and server once (not permanent).; /// according to ""mode"".; ///; /// \param [in] mode update mode.; /// - mode = 1 update; /// - mode = 0 sync",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:153,Deployability,update,updated,153,"////////////////////////////////////////////////////////////////////////////////; /// Notify the low level GUI layer ROOT requires ""tgwindow"" to be; /// updated; ///; /// Returns kTRUE if the notification was desirable and it was sent; ///; /// At the moment only Qt4 layer needs that; ///; /// One needs explicitly cast the first parameter to TGWindow to make; /// it working in the implementation.; ///; /// One needs to process the notification to confine; /// all paint operations within ""expose"" / ""paint"" like low level event; /// or equivalent",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:493,Security,expose,expose,493,"////////////////////////////////////////////////////////////////////////////////; /// Notify the low level GUI layer ROOT requires ""tgwindow"" to be; /// updated; ///; /// Returns kTRUE if the notification was desirable and it was sent; ///; /// At the moment only Qt4 layer needs that; ///; /// One needs explicitly cast the first parameter to TGWindow to make; /// it working in the implementation.; ///; /// One needs to process the notification to confine; /// all paint operations within ""expose"" / ""paint"" like low level event; /// or equivalent",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:155,Performance,perform,performs,155,"////////////////////////////////////////////////////////////////////////////////; /// If the specified window is mapped, ReparentWindow automatically; /// performs an UnmapWindow request on it, removes it from its current; /// position in the hierarchy, and inserts it as the child of the specified; /// parent. The window is placed in the stacking order on top with respect; /// to sibling windows.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:365,Availability,failure,failure,365,"////////////////////////////////////////////////////////////////////////////////; /// Opens connection to display server (if such a thing exist on the; /// current platform). The encoding and interpretation of the display; /// name.; ///; /// On X11 this method returns on success the X display socket descriptor; /// >0, 0 in case of batch mode, and <0 in case of failure (cannot connect; /// to display dpyName).",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:223,Integrability,interface,interface,223,"////////////////////////////////////////////////////////////////////////////////; /// Returns handle to display (might be useful in some cases where; /// direct X11 manipulation outside of TVirtualX is needed, e.g. GL; /// interface).",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:227,Integrability,interface,interface,227,"////////////////////////////////////////////////////////////////////////////////; /// Returns handle to visual.; ///; /// Might be useful in some cases where direct X11 manipulation outside; /// of TVirtualX is needed, e.g. GL interface.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:224,Integrability,interface,interface,224,"////////////////////////////////////////////////////////////////////////////////; /// Returns screen number.; ///; /// Might be useful in some cases where direct X11 manipulation outside; /// of TVirtualX is needed, e.g. GL interface.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:229,Integrability,interface,interface,229,"////////////////////////////////////////////////////////////////////////////////; /// Returns handle to colormap.; ///; /// Might be useful in some cases where direct X11 manipulation outside; /// of TVirtualX is needed, e.g. GL interface.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:345,Integrability,depend,dependent,345,"////////////////////////////////////////////////////////////////////////////////; /// Returns the atom identifier associated with the specified ""atom_name""; /// string. If ""only_if_exists"" is False, the atom is created if it does; /// not exist. If the atom name is not in the Host Portable Character; /// Encoding, the result is implementation dependent. Uppercase and; /// lowercase matter; the strings ""thing"", ""Thing"", and ""thinG"" all; /// designate different atoms.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:282,Modifiability,Portab,Portable,282,"////////////////////////////////////////////////////////////////////////////////; /// Returns the atom identifier associated with the specified ""atom_name""; /// string. If ""only_if_exists"" is False, the atom is created if it does; /// not exist. If the atom name is not in the Host Portable Character; /// Encoding, the result is implementation dependent. Uppercase and; /// lowercase matter; the strings ""thing"", ""Thing"", and ""thinG"" all; /// designate different atoms.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:144,Performance,load,loads,144,"////////////////////////////////////////////////////////////////////////////////; /// Provides the most common way for accessing a font: opens (loads) the; /// specified font and returns a pointer to the appropriate FontStruct_t; /// structure. If the font does not exist, it returns NULL.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:119,Security,access,accessing,119,"////////////////////////////////////////////////////////////////////////////////; /// Provides the most common way for accessing a font: opens (loads) the; /// specified font and returns a pointer to the appropriate FontStruct_t; /// structure. If the font does not exist, it returns NULL.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:142,Performance,Load,LoadQueryFont,142,"////////////////////////////////////////////////////////////////////////////////; /// Explicitly deletes the font structure ""fs"" obtained via LoadQueryFont().",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:169,Availability,mask,mask,169,"////////////////////////////////////////////////////////////////////////////////; /// Creates a graphics context using the provided GCValues_t *gval structure.; /// The mask data member of gval specifies which components in the GC are; /// to be set using the information in the specified values structure.; /// It returns a graphics context handle GContext_t that can be used with any; /// destination drawable or O if the creation falls.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:126,Availability,mask,mask,126,"////////////////////////////////////////////////////////////////////////////////; /// Changes the components specified by the mask in gval for the specified GC.; ///; /// \param [in] gc specifies the GC to be changed; /// \param [in] gval specifies the mask and the values to be set; ///; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:253,Availability,mask,mask,253,"////////////////////////////////////////////////////////////////////////////////; /// Changes the components specified by the mask in gval for the specified GC.; ///; /// \param [in] gc specifies the GC to be changed; /// \param [in] gval specifies the mask and the values to be set; ///; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:183,Availability,mask,mask,183,"////////////////////////////////////////////////////////////////////////////////; /// Copies the specified components from the source GC ""org"" to the; /// destination GC ""dest"". The ""mask"" defines which component to copy; /// and it is a data member of GCValues_t.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:2,Availability,mask,mask,2,/*mask*/,MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:269,Availability,mask,mask,269,"////////////////////////////////////////////////////////////////////////////////; /// Creates a picture pict from data in file ""filename"". The picture; /// attributes ""attr"" are used for input and output. Returns kTRUE in; /// case of success, kFALSE otherwise. If the mask ""pict_mask"" does not; /// exist it is set to kNone.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:267,Availability,mask,mask,267,"////////////////////////////////////////////////////////////////////////////////; /// Creates a picture pict from data in bitmap format. The picture; /// attributes ""attr"" are used for input and output. Returns kTRUE in; /// case of success, kFALSE otherwise. If the mask ""pict_mask"" does not; /// exist it is set to kNone.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:203,Performance,queue,queue,203,"////////////////////////////////////////////////////////////////////////////////; /// Returns the number of events that have been received from the X server; /// but have not been removed from the event queue.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:753,Availability,mask,mask,753,"////////////////////////////////////////////////////////////////////////////////; /// Combines the specified rectangle of ""src"" with the specified rectangle; /// of ""dest"" according to the ""gc"".; ///; /// \param [in] src source rectangle; /// \param [in] dest destination rectangle; /// \param [in] gc graphics context; /// \param [in] src_x, src_y specify the x and y coordinates, which are relative; /// to the origin of the source rectangle and specify; /// upper-left corner.; /// \param [in] width, height the width and height, which are the dimensions of both; /// the source and destination rectangles; /// \param [in] dest_x, dest_y specify the upper-left corner of the destination; /// rectangle; ///; /// GC components in use: function, plane-mask, subwindow-mode,; /// graphics-exposure, clip-x-origin, clip-y-origin, and clip-mask.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:838,Availability,mask,mask,838,"////////////////////////////////////////////////////////////////////////////////; /// Combines the specified rectangle of ""src"" with the specified rectangle; /// of ""dest"" according to the ""gc"".; ///; /// \param [in] src source rectangle; /// \param [in] dest destination rectangle; /// \param [in] gc graphics context; /// \param [in] src_x, src_y specify the x and y coordinates, which are relative; /// to the origin of the source rectangle and specify; /// upper-left corner.; /// \param [in] width, height the width and height, which are the dimensions of both; /// the source and destination rectangles; /// \param [in] dest_x, dest_y specify the upper-left corner of the destination; /// rectangle; ///; /// GC components in use: function, plane-mask, subwindow-mode,; /// graphics-exposure, clip-x-origin, clip-y-origin, and clip-mask.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:188,Availability,mask,mask,188,"////////////////////////////////////////////////////////////////////////////////; /// Changes the attributes of the specified window ""id"" according the; /// values provided in ""attr"". The mask data member of ""attr"" specifies; /// which window attributes are defined in the attributes argument.; /// This mask is the bitwise inclusive OR of the valid attribute mask; /// bits; if it is zero, the attributes are ignored.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:304,Availability,mask,mask,304,"////////////////////////////////////////////////////////////////////////////////; /// Changes the attributes of the specified window ""id"" according the; /// values provided in ""attr"". The mask data member of ""attr"" specifies; /// which window attributes are defined in the attributes argument.; /// This mask is the bitwise inclusive OR of the valid attribute mask; /// bits; if it is zero, the attributes are ignored.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:360,Availability,mask,mask,360,"////////////////////////////////////////////////////////////////////////////////; /// Changes the attributes of the specified window ""id"" according the; /// values provided in ""attr"". The mask data member of ""attr"" specifies; /// which window attributes are defined in the attributes argument.; /// This mask is the bitwise inclusive OR of the valid attribute mask; /// bits; if it is zero, the attributes are ignored.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:433,Usability,simpl,simply,433,"////////////////////////////////////////////////////////////////////////////////; /// Alters the property for the specified window and causes the X server; /// to generate a PropertyNotify event on that window.; ///; /// \param [in] id the window whose property you want to change; /// \param [in] property specifies the property name; /// \param [in] type the type of the property; the X server does not; /// interpret the type but simply passes it back to; /// an application that might ask about the window; /// properties; /// \param [in] data the property data; /// \param [in] len the length of the specified data format",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:253,Availability,mask,mask,253,"////////////////////////////////////////////////////////////////////////////////; /// Uses the components of the specified GC to draw a line between the; /// specified set of points (x1, y1) and (x2, y2).; ///; /// GC components in use: function, plane-mask, line-width, line-style,; /// cap-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin,; /// and clip-mask.; ///; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:371,Availability,mask,mask,371,"////////////////////////////////////////////////////////////////////////////////; /// Uses the components of the specified GC to draw a line between the; /// specified set of points (x1, y1) and (x2, y2).; ///; /// GC components in use: function, plane-mask, line-width, line-style,; /// cap-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin,; /// and clip-mask.; ///; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:395,Integrability,depend,dependent,395,"////////////////////////////////////////////////////////////////////////////////; /// Uses the components of the specified GC to draw a line between the; /// specified set of points (x1, y1) and (x2, y2).; ///; /// GC components in use: function, plane-mask, line-width, line-style,; /// cap-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin,; /// and clip-mask.; ///; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:194,Availability,mask,mask,194,"////////////////////////////////////////////////////////////////////////////////; /// Specifies the event ""ev"" is to be sent to the window ""id"".; /// This function requires you to pass an event mask.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:2,Integrability,message,messageID,2,/*messageID*/,MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:103,Integrability,message,message,103,"////////////////////////////////////////////////////////////////////////////////; /// Tells WM to send message when window is closed via WM.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:572,Availability,down,down,572,"////////////////////////////////////////////////////////////////////////////////; /// Establishes a passive grab on the keyboard. In the future, the; /// keyboard is actively grabbed, the last-keyboard-grab time is set; /// to the time at which the key was pressed (as transmitted in the; /// KeyPress event), and the KeyPress event is reported if all of the; /// following conditions are true:; ///; /// - the keyboard is not grabbed and the specified key (which can; /// itself be a modifier key) is logically pressed when the; /// specified modifier keys are logically down, and no other; /// modifier keys are logically down;; /// - either the grab window ""id"" is an ancestor of (or is) the focus; /// window, or ""id"" is a descendant of the focus window and contains; /// the pointer;; /// - a passive grab on the same key combination does not exist on any; /// ancestor of grab_window; ///; /// \param [in] id window id; /// \param [in] keycode specifies the KeyCode or AnyKey; /// \param [in] modifier specifies the set of keymasks or AnyModifier; the mask is; /// the bitwise inclusive OR of the valid keymask bits; /// \param [in] grab a switch between grab/ungrab key; /// grab = kTRUE grab the key and modifier; /// grab = kFALSE ungrab the key and modifier",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:624,Availability,down,down,624,"////////////////////////////////////////////////////////////////////////////////; /// Establishes a passive grab on the keyboard. In the future, the; /// keyboard is actively grabbed, the last-keyboard-grab time is set; /// to the time at which the key was pressed (as transmitted in the; /// KeyPress event), and the KeyPress event is reported if all of the; /// following conditions are true:; ///; /// - the keyboard is not grabbed and the specified key (which can; /// itself be a modifier key) is logically pressed when the; /// specified modifier keys are logically down, and no other; /// modifier keys are logically down;; /// - either the grab window ""id"" is an ancestor of (or is) the focus; /// window, or ""id"" is a descendant of the focus window and contains; /// the pointer;; /// - a passive grab on the same key combination does not exist on any; /// ancestor of grab_window; ///; /// \param [in] id window id; /// \param [in] keycode specifies the KeyCode or AnyKey; /// \param [in] modifier specifies the set of keymasks or AnyModifier; the mask is; /// the bitwise inclusive OR of the valid keymask bits; /// \param [in] grab a switch between grab/ungrab key; /// grab = kTRUE grab the key and modifier; /// grab = kFALSE ungrab the key and modifier",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:1058,Availability,mask,mask,1058,"////////////////////////////////////////////////////////////////////////////////; /// Establishes a passive grab on the keyboard. In the future, the; /// keyboard is actively grabbed, the last-keyboard-grab time is set; /// to the time at which the key was pressed (as transmitted in the; /// KeyPress event), and the KeyPress event is reported if all of the; /// following conditions are true:; ///; /// - the keyboard is not grabbed and the specified key (which can; /// itself be a modifier key) is logically pressed when the; /// specified modifier keys are logically down, and no other; /// modifier keys are logically down;; /// - either the grab window ""id"" is an ancestor of (or is) the focus; /// window, or ""id"" is a descendant of the focus window and contains; /// the pointer;; /// - a passive grab on the same key combination does not exist on any; /// ancestor of grab_window; ///; /// \param [in] id window id; /// \param [in] keycode specifies the KeyCode or AnyKey; /// \param [in] modifier specifies the set of keymasks or AnyModifier; the mask is; /// the bitwise inclusive OR of the valid keymask bits; /// \param [in] grab a switch between grab/ungrab key; /// grab = kTRUE grab the key and modifier; /// grab = kFALSE ungrab the key and modifier",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:502,Testability,log,logically,502,"////////////////////////////////////////////////////////////////////////////////; /// Establishes a passive grab on the keyboard. In the future, the; /// keyboard is actively grabbed, the last-keyboard-grab time is set; /// to the time at which the key was pressed (as transmitted in the; /// KeyPress event), and the KeyPress event is reported if all of the; /// following conditions are true:; ///; /// - the keyboard is not grabbed and the specified key (which can; /// itself be a modifier key) is logically pressed when the; /// specified modifier keys are logically down, and no other; /// modifier keys are logically down;; /// - either the grab window ""id"" is an ancestor of (or is) the focus; /// window, or ""id"" is a descendant of the focus window and contains; /// the pointer;; /// - a passive grab on the same key combination does not exist on any; /// ancestor of grab_window; ///; /// \param [in] id window id; /// \param [in] keycode specifies the KeyCode or AnyKey; /// \param [in] modifier specifies the set of keymasks or AnyModifier; the mask is; /// the bitwise inclusive OR of the valid keymask bits; /// \param [in] grab a switch between grab/ungrab key; /// grab = kTRUE grab the key and modifier; /// grab = kFALSE ungrab the key and modifier",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:562,Testability,log,logically,562,"////////////////////////////////////////////////////////////////////////////////; /// Establishes a passive grab on the keyboard. In the future, the; /// keyboard is actively grabbed, the last-keyboard-grab time is set; /// to the time at which the key was pressed (as transmitted in the; /// KeyPress event), and the KeyPress event is reported if all of the; /// following conditions are true:; ///; /// - the keyboard is not grabbed and the specified key (which can; /// itself be a modifier key) is logically pressed when the; /// specified modifier keys are logically down, and no other; /// modifier keys are logically down;; /// - either the grab window ""id"" is an ancestor of (or is) the focus; /// window, or ""id"" is a descendant of the focus window and contains; /// the pointer;; /// - a passive grab on the same key combination does not exist on any; /// ancestor of grab_window; ///; /// \param [in] id window id; /// \param [in] keycode specifies the KeyCode or AnyKey; /// \param [in] modifier specifies the set of keymasks or AnyModifier; the mask is; /// the bitwise inclusive OR of the valid keymask bits; /// \param [in] grab a switch between grab/ungrab key; /// grab = kTRUE grab the key and modifier; /// grab = kFALSE ungrab the key and modifier",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:614,Testability,log,logically,614,"////////////////////////////////////////////////////////////////////////////////; /// Establishes a passive grab on the keyboard. In the future, the; /// keyboard is actively grabbed, the last-keyboard-grab time is set; /// to the time at which the key was pressed (as transmitted in the; /// KeyPress event), and the KeyPress event is reported if all of the; /// following conditions are true:; ///; /// - the keyboard is not grabbed and the specified key (which can; /// itself be a modifier key) is logically pressed when the; /// specified modifier keys are logically down, and no other; /// modifier keys are logically down;; /// - either the grab window ""id"" is an ancestor of (or is) the focus; /// window, or ""id"" is a descendant of the focus window and contains; /// the pointer;; /// - a passive grab on the same key combination does not exist on any; /// ancestor of grab_window; ///; /// \param [in] id window id; /// \param [in] keycode specifies the KeyCode or AnyKey; /// \param [in] modifier specifies the set of keymasks or AnyModifier; the mask is; /// the bitwise inclusive OR of the valid keymask bits; /// \param [in] grab a switch between grab/ungrab key; /// grab = kTRUE grab the key and modifier; /// grab = kFALSE ungrab the key and modifier",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:175,Availability,mask,mask,175,"////////////////////////////////////////////////////////////////////////////////; /// Each character image, as defined by the font in the GC, is treated as an; /// additional mask for a fill operation on the drawable.; ///; /// \param [in] id the drawable; /// \param [in] gc the GC; /// \param [in] x, y coordinates, which are relative to the origin of the specified; /// drawable and define the origin of the first character; /// \param [in] s the character string; /// \param [in] len the number of characters in the string argument; ///; /// GC components in use: function, plane-mask, fill-style, font,; /// subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, and tile-stipple-y-origin.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:584,Availability,mask,mask,584,"////////////////////////////////////////////////////////////////////////////////; /// Each character image, as defined by the font in the GC, is treated as an; /// additional mask for a fill operation on the drawable.; ///; /// \param [in] id the drawable; /// \param [in] gc the GC; /// \param [in] x, y coordinates, which are relative to the origin of the specified; /// drawable and define the origin of the first character; /// \param [in] s the character string; /// \param [in] len the number of characters in the string argument; ///; /// GC components in use: function, plane-mask, fill-style, font,; /// subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, and tile-stipple-y-origin.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:668,Availability,mask,mask,668,"////////////////////////////////////////////////////////////////////////////////; /// Each character image, as defined by the font in the GC, is treated as an; /// additional mask for a fill operation on the drawable.; ///; /// \param [in] id the drawable; /// \param [in] gc the GC; /// \param [in] x, y coordinates, which are relative to the origin of the specified; /// drawable and define the origin of the first character; /// \param [in] s the character string; /// \param [in] len the number of characters in the string argument; ///; /// GC components in use: function, plane-mask, fill-style, font,; /// subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, and tile-stipple-y-origin.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:687,Integrability,depend,dependent,687,"////////////////////////////////////////////////////////////////////////////////; /// Each character image, as defined by the font in the GC, is treated as an; /// additional mask for a fill operation on the drawable.; ///; /// \param [in] id the drawable; /// \param [in] gc the GC; /// \param [in] x, y coordinates, which are relative to the origin of the specified; /// drawable and define the origin of the first character; /// \param [in] s the character string; /// \param [in] len the number of characters in the string argument; ///; /// GC components in use: function, plane-mask, fill-style, font,; /// subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, and tile-stipple-y-origin.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:134,Integrability,depend,depends,134,"////////////////////////////////////////////////////////////////////////////////; /// Return length of the string ""s"" in pixels. Size depends on font.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:126,Availability,mask,mask,126,"////////////////////////////////////////////////////////////////////////////////; /// Returns the components specified by the mask in ""gval"" for the; /// specified GC ""gc"" (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:86,Usability,Clear,Clears,86,"////////////////////////////////////////////////////////////////////////////////; /// Clears the entire area in the specified window and it is equivalent to; /// ClearArea(id, 0, 0, 0, 0)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:162,Usability,Clear,ClearArea,162,"////////////////////////////////////////////////////////////////////////////////; /// Clears the entire area in the specified window and it is equivalent to; /// ClearArea(id, 0, 0, 0, 0)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:229,Integrability,depend,dependent,229,"////////////////////////////////////////////////////////////////////////////////; /// Converts the ""keysym"" to the appropriate keycode. For example,; /// keysym is a letter and keycode is the matching keyboard key (which; /// is dependent on the current keyboard mapping). If the specified; /// ""keysym"" is not defined for any keycode, returns zero.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:243,Availability,mask,mask,243,"////////////////////////////////////////////////////////////////////////////////; /// Fills the specified rectangle defined by [x,y] [x+w,y] [x+w,y+h] [x,y+h].; /// using the GC you specify.; ///; /// GC components in use are: function, plane-mask, fill-style,; /// subwindow-mode, clip-x-origin, clip-y-origin, clip-mask.; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, and tile-stipple-y-origin.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:317,Availability,mask,mask,317,"////////////////////////////////////////////////////////////////////////////////; /// Fills the specified rectangle defined by [x,y] [x+w,y] [x+w,y+h] [x,y+h].; /// using the GC you specify.; ///; /// GC components in use are: function, plane-mask, fill-style,; /// subwindow-mode, clip-x-origin, clip-y-origin, clip-mask.; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, and tile-stipple-y-origin.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:336,Integrability,depend,dependent,336,"////////////////////////////////////////////////////////////////////////////////; /// Fills the specified rectangle defined by [x,y] [x+w,y] [x+w,y+h] [x,y+h].; /// using the GC you specify.; ///; /// GC components in use are: function, plane-mask, fill-style,; /// subwindow-mode, clip-x-origin, clip-y-origin, clip-mask.; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, and tile-stipple-y-origin.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:194,Availability,mask,mask,194,"////////////////////////////////////////////////////////////////////////////////; /// Draws rectangle outlines of [x,y] [x+w,y] [x+w,y+h] [x,y+h]; ///; /// GC components in use: function, plane-mask, line-width, line-style,; /// cap-style, join-style, fill-style, subwindow-mode, clip-x-origin,; /// clip-y-origin, clip-mask.; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:320,Availability,mask,mask,320,"////////////////////////////////////////////////////////////////////////////////; /// Draws rectangle outlines of [x,y] [x+w,y] [x+w,y+h] [x,y+h]; ///; /// GC components in use: function, plane-mask, line-width, line-style,; /// cap-style, join-style, fill-style, subwindow-mode, clip-x-origin,; /// clip-y-origin, clip-mask.; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:339,Integrability,depend,dependent,339,"////////////////////////////////////////////////////////////////////////////////; /// Draws rectangle outlines of [x,y] [x+w,y] [x+w,y+h] [x,y+h]; ///; /// GC components in use: function, plane-mask, line-width, line-style,; /// cap-style, join-style, fill-style, subwindow-mode, clip-x-origin,; /// clip-y-origin, clip-mask.; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:411,Availability,mask,mask,411,"////////////////////////////////////////////////////////////////////////////////; /// Draws multiple line segments. Each line is specified by a pair of points.; ///; /// \param [in] id Drawable identifier; /// \param [in] gc graphics context; /// \param [in] *seg specifies an array of segments; /// \param [in] nseg specifies the number of segments in the array; ///; /// GC components in use: function, plane-mask, line-width, line-style,; /// cap-style, join-style, fill-style, subwindow-mode, clip-x-origin,; /// clip-y-origin, clip-mask.; ///; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, and dash-list.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:537,Availability,mask,mask,537,"////////////////////////////////////////////////////////////////////////////////; /// Draws multiple line segments. Each line is specified by a pair of points.; ///; /// \param [in] id Drawable identifier; /// \param [in] gc graphics context; /// \param [in] *seg specifies an array of segments; /// \param [in] nseg specifies the number of segments in the array; ///; /// GC components in use: function, plane-mask, line-width, line-style,; /// cap-style, join-style, fill-style, subwindow-mode, clip-x-origin,; /// clip-y-origin, clip-mask.; ///; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, and dash-list.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:561,Integrability,depend,dependent,561,"////////////////////////////////////////////////////////////////////////////////; /// Draws multiple line segments. Each line is specified by a pair of points.; ///; /// \param [in] id Drawable identifier; /// \param [in] gc graphics context; /// \param [in] *seg specifies an array of segments; /// \param [in] nseg specifies the number of segments in the array; ///; /// GC components in use: function, plane-mask, line-width, line-style,; /// cap-style, join-style, fill-style, subwindow-mode, clip-x-origin,; /// clip-y-origin, clip-mask.; ///; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, and dash-list.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:206,Availability,mask,mask,206,"////////////////////////////////////////////////////////////////////////////////; /// Defines which input events the window is interested in. By default; /// events are propagated up the window stack. This mask can also be; /// set at window creation time via the SetWindowAttributes_t::fEventMask; /// attribute.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:494,Availability,mask,mask,494,"////////////////////////////////////////////////////////////////////////////////; /// Fills the region closed by the specified path. The path is closed; /// automatically if the last point in the list does not coincide with the; /// first point.; ///; /// \param [in] id window identifier; /// \param [in] gc graphics context; /// \param [in] *points specifies an array of points; /// \param [in] npnt specifies the number of points in the array; ///; /// GC components in use: function, plane-mask, fill-style, fill-rule,; /// subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. GC; /// mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, and tile-stipple-y-origin.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:583,Availability,mask,mask,583,"////////////////////////////////////////////////////////////////////////////////; /// Fills the region closed by the specified path. The path is closed; /// automatically if the last point in the list does not coincide with the; /// first point.; ///; /// \param [in] id window identifier; /// \param [in] gc graphics context; /// \param [in] *points specifies an array of points; /// \param [in] npnt specifies the number of points in the array; ///; /// GC components in use: function, plane-mask, fill-style, fill-rule,; /// subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. GC; /// mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, and tile-stipple-y-origin.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:602,Integrability,depend,dependent,602,"////////////////////////////////////////////////////////////////////////////////; /// Fills the region closed by the specified path. The path is closed; /// automatically if the last point in the list does not coincide with the; /// first point.; ///; /// \param [in] id window identifier; /// \param [in] gc graphics context; /// \param [in] *points specifies an array of points; /// \param [in] npnt specifies the number of points in the array; ///; /// GC components in use: function, plane-mask, fill-style, fill-rule,; /// subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. GC; /// mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, and tile-stipple-y-origin.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:609,Availability,mask,mask,609,"////////////////////////////////////////////////////////////////////////////////; /// Returns the root window the pointer is logically on and the pointer; /// coordinates relative to the root window's origin.; ///; /// \param [in] id specifies the window; /// \param [in] rootw the root window that the pointer is in; /// \param [in] childw the child window that the pointer is located in, if any; /// \param [in] root_x, root_y the pointer coordinates relative to the root window's; /// origin; /// \param [in] win_x, win_y the pointer coordinates relative to the specified; /// window ""id""; /// \param [in] mask the current state of the modifier keys and pointer; /// buttons",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:125,Testability,log,logically,125,"////////////////////////////////////////////////////////////////////////////////; /// Returns the root window the pointer is logically on and the pointer; /// coordinates relative to the root window's origin.; ///; /// \param [in] id specifies the window; /// \param [in] rootw the root window that the pointer is in; /// \param [in] childw the child window that the pointer is located in, if any; /// \param [in] root_x, root_y the pointer coordinates relative to the root window's; /// origin; /// \param [in] win_x, win_y the pointer coordinates relative to the specified; /// window ""id""; /// \param [in] mask the current state of the modifier keys and pointer; /// buttons",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:182,Availability,mask,mask,182,"////////////////////////////////////////////////////////////////////////////////; /// Sets the foreground color for the specified GC (shortcut for ChangeGC; /// with only foreground mask set).; ///; /// \param [in] gc specifies the GC; /// \param [in] foreground the foreground you want to set; ///; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:251,Availability,mask,mask,251,"////////////////////////////////////////////////////////////////////////////////; /// Sets clipping rectangles in graphics context. [x,y] specify the origin; /// of the rectangles. ""recs"" specifies an array of rectangles that define; /// the clipping mask and ""n"" is the number of rectangles.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:117,Integrability,synchroniz,synchronizes,117,"////////////////////////////////////////////////////////////////////////////////; /// Flushes (mode = 0, default) or synchronizes (mode = 1) X output buffer.; /// Flush flushes output buffer. Sync flushes buffer and waits till all; /// requests have been processed by X server.",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:86,Deployability,Update,Updates,86,"////////////////////////////////////////////////////////////////////////////////; /// Updates the destination region from a union of the specified rectangle; /// and the specified source region.; ///; /// \param [in] rect specifies the rectangle; /// \param [in] src specifies the source region to be used; /// \param [in] dest returns the destination region",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:201,Performance,perform,perform,201,"////////////////////////////////////////////////////////////////////////////////; /// Computes the union of two regions.; ///; /// \param [in] rega, regb specify the two regions with which you want to perform; /// the computation; /// \param [in] result returns the result of the computation",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:208,Performance,perform,perform,208,"////////////////////////////////////////////////////////////////////////////////; /// Computes the intersection of two regions.; ///; /// \param [in] rega, regb specify the two regions with which you want to perform; /// the computation; /// \param [in] result returns the result of the computation",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:248,Performance,perform,perform,248,"////////////////////////////////////////////////////////////////////////////////; /// Calculates the difference between the union and intersection of; /// two regions.; ///; /// \param [in] rega, regb specify the two regions with which you want to perform; /// the computation; /// \param [in] result returns the result of the computation",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:460,Integrability,depend,dependent,460,"////////////////////////////////////////////////////////////////////////////////; /// Returns list of font names matching fontname regexp, like ""-*-times-*"".; /// The pattern string can contain any characters, but each asterisk (*); /// is a wildcard for any number of characters, and each question mark (?); /// is a wildcard for a single character. If the pattern string is not in; /// the Host Portable Character Encoding, the result is implementation; /// dependent. Use of uppercase or lowercase does not matter. Each returned; /// string is null-terminated.; ///; /// \param [in] fontname specifies the null-terminated pattern string that can; /// contain wildcard characters; /// \param [in] max specifies the maximum number of names to be returned; /// \param [in] count returns the actual number of font names",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:397,Modifiability,Portab,Portable,397,"////////////////////////////////////////////////////////////////////////////////; /// Returns list of font names matching fontname regexp, like ""-*-times-*"".; /// The pattern string can contain any characters, but each asterisk (*); /// is a wildcard for any number of characters, and each question mark (?); /// is a wildcard for a single character. If the pattern string is not in; /// the Host Portable Character Encoding, the result is implementation; /// dependent. Use of uppercase or lowercase does not matter. Each returned; /// string is null-terminated.; ///; /// \param [in] fontname specifies the null-terminated pattern string that can; /// contain wildcard characters; /// \param [in] max specifies the maximum number of names to be returned; /// \param [in] count returns the actual number of font names",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:86,Energy Efficiency,Allocate,Allocates,86,"////////////////////////////////////////////////////////////////////////////////; /// Allocates the memory needed for an drawable.; ///; /// \param [in] width the width of the image, in pixels; /// \param [in] height the height of the image, in pixels",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:828,Availability,mask,mask,828,"////////////////////////////////////////////////////////////////////////////////; /// Combines an image with a rectangle of the specified drawable. The; /// section of the image defined by the x, y, width, and height arguments; /// is drawn on the specified part of the drawable.; ///; /// \param [in] id the drawable; /// \param [in] gc the GC; /// \param [in] img the image you want combined with the rectangle; /// \param [in] dx the offset in X from the left edge of the image; /// \param [in] dy the offset in Y from the top edge of the image; /// \param [in] x, y coordinates, which are relative to the origin of the; /// drawable and are the coordinates of the subimage; /// \param [in] w, h the width and height of the subimage, which define the; /// rectangle dimensions; ///; /// GC components in use: function, plane-mask, subwindow-mode,; /// clip-x-origin, clip-y-origin, and clip-mask.; /// GC mode-dependent components: foreground and background.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:894,Availability,mask,mask,894,"////////////////////////////////////////////////////////////////////////////////; /// Combines an image with a rectangle of the specified drawable. The; /// section of the image defined by the x, y, width, and height arguments; /// is drawn on the specified part of the drawable.; ///; /// \param [in] id the drawable; /// \param [in] gc the GC; /// \param [in] img the image you want combined with the rectangle; /// \param [in] dx the offset in X from the left edge of the image; /// \param [in] dy the offset in Y from the top edge of the image; /// \param [in] x, y coordinates, which are relative to the origin of the; /// drawable and are the coordinates of the subimage; /// \param [in] w, h the width and height of the subimage, which define the; /// rectangle dimensions; ///; /// GC components in use: function, plane-mask, subwindow-mode,; /// clip-x-origin, clip-y-origin, and clip-mask.; /// GC mode-dependent components: foreground and background.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:913,Integrability,depend,dependent,913,"////////////////////////////////////////////////////////////////////////////////; /// Combines an image with a rectangle of the specified drawable. The; /// section of the image defined by the x, y, width, and height arguments; /// is drawn on the specified part of the drawable.; ///; /// \param [in] id the drawable; /// \param [in] gc the GC; /// \param [in] img the image you want combined with the rectangle; /// \param [in] dx the offset in X from the left edge of the image; /// \param [in] dy the offset in Y from the top edge of the image; /// \param [in] x, y coordinates, which are relative to the origin of the; /// drawable and are the coordinates of the subimage; /// \param [in] w, h the width and height of the subimage, which define the; /// rectangle dimensions; ///; /// GC components in use: function, plane-mask, subwindow-mode,; /// clip-x-origin, clip-y-origin, and clip-mask.; /// GC mode-dependent components: foreground and background.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:243,Availability,error,error,243,"////////////////////////////////////////////////////////////////////////////////; /// Returns 1 if window system server supports extension given by the; /// argument, returns 0 in case extension is not supported and returns -1; /// in case of error (like server not initialized).",MatchSource.CODE_COMMENT,core/base/src/TVirtualX.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/test/TErrorTests.cxx:49,Availability,error,error,49,"// The TROOT destructor re-installed the minimal error handler",MatchSource.CODE_COMMENT,core/base/test/TErrorTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/test/TErrorTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/test/TErrorTests.cxx:27,Deployability,install,installed,27,"// The TROOT destructor re-installed the minimal error handler",MatchSource.CODE_COMMENT,core/base/test/TErrorTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/test/TErrorTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/test/TErrorTests.cxx:59,Energy Efficiency,allocate,allocated,59,"// Again, should reuse the now enlarged, thread-local heap-allocated buffer",MatchSource.CODE_COMMENT,core/base/test/TErrorTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/test/TErrorTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/test/TQObjectTests.cxx:76,Safety,avoid,avoids,76,"// The interpreter needs to know about RQ_OBJECTTester and using this trick avoids moving this non-reusable class into; // its own header file.",MatchSource.CODE_COMMENT,core/base/test/TQObjectTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/test/TQObjectTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/test/TSystemTests.cxx:3,Testability,test,test,3,"// test with 512 bits, longer keys may not work",MatchSource.CODE_COMMENT,core/base/test/TSystemTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/test/TSystemTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RDirectory.hxx:231,Usability,Feedback,Feedback,231,"/// \file ROOT/RDirectory.hxx; /// \ingroup Base ROOT7; /// \author Axel Naumann <axel@cern.ch>; /// \date 2015-07-31; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/base/v7/inc/ROOT/RDirectory.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RDirectory.hxx
https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RDirectory.hxx:4,Testability,Log,Logging,4,"/// Logging for generic IO functionality.",MatchSource.CODE_COMMENT,core/base/v7/inc/ROOT/RDirectory.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RDirectory.hxx
https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RDirectory.hxx:133,Security,hash,hashed,133,"// TODO: ContentMap_t should allow lookup by string_view while still providing; // storage of names.; /// The directory content is a hashed map of name => `Internal::RDirectoryEntry`.",MatchSource.CODE_COMMENT,core/base/v7/inc/ROOT/RDirectory.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RDirectory.hxx
https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RDirectory.hxx:185,Performance,multi-thread,multi-threaded,185,"/// Dedicated, process-wide RDirectory.; ///; /// \note This is *not* thread-safe. You will need to syncronize yourself. In; /// general it's a bad idea to use a global collection in a multi-threaded; /// environment; ROOT itself does not make use of it. It is merely offered for; /// historical, process-wide object registration by name. Instead, pass a; /// pointer to the object where you need to access it - this is also much; /// faster than a lookup by name.",MatchSource.CODE_COMMENT,core/base/v7/inc/ROOT/RDirectory.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RDirectory.hxx
https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RDirectory.hxx:77,Safety,safe,safe,77,"/// Dedicated, process-wide RDirectory.; ///; /// \note This is *not* thread-safe. You will need to syncronize yourself. In; /// general it's a bad idea to use a global collection in a multi-threaded; /// environment; ROOT itself does not make use of it. It is merely offered for; /// historical, process-wide object registration by name. Instead, pass a; /// pointer to the object where you need to access it - this is also much; /// faster than a lookup by name.",MatchSource.CODE_COMMENT,core/base/v7/inc/ROOT/RDirectory.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RDirectory.hxx
https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RDirectory.hxx:400,Security,access,access,400,"/// Dedicated, process-wide RDirectory.; ///; /// \note This is *not* thread-safe. You will need to syncronize yourself. In; /// general it's a bad idea to use a global collection in a multi-threaded; /// environment; ROOT itself does not make use of it. It is merely offered for; /// historical, process-wide object registration by name. Instead, pass a; /// pointer to the object where you need to access it - this is also much; /// faster than a lookup by name.",MatchSource.CODE_COMMENT,core/base/v7/inc/ROOT/RDirectory.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RDirectory.hxx
https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RDirectoryEntry.hxx:236,Usability,Feedback,Feedback,236,"/// \file ROOT/RDirectoryEntry.hxx; /// \ingroup Base ROOT7; /// \author Axel Naumann <axel@cern.ch>; /// \date 2015-07-31; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/base/v7/inc/ROOT/RDirectoryEntry.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RDirectoryEntry.hxx
https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RDirectoryEntry.hxx:61,Deployability,update,update,61,"/// Inform the entry that it has been modified, and needs to update its; /// last-changed time stamp.",MatchSource.CODE_COMMENT,core/base/v7/inc/ROOT/RDirectoryEntry.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RDirectoryEntry.hxx
https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RFloat16.hxx:366,Energy Efficiency,charge,charge,366,"/**; * Conversion functions between full- and half-precision floats. The code used here is taken (with some modifications); * from the `half` C++ library (https://half.sourceforge.net/index.html), distributed under the MIT license.; *; * Original license:; *; * The MIT License; *; * Copyright (c) 2012-2021 Christian Rau; *; * Permission is hereby granted, free of charge, to any person obtaining a copy; * of this software and associated documentation files (the ""Software""), to deal; * in the Software without restriction, including without limitation the rights; * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; * copies of the Software, and to permit persons to whom the Software is; * furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included in; * all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN; * THE SOFTWARE.; */",MatchSource.CODE_COMMENT,core/base/v7/inc/ROOT/RFloat16.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RFloat16.hxx
https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RFloat16.hxx:1260,Integrability,CONTRACT,CONTRACT,1260,"/**; * Conversion functions between full- and half-precision floats. The code used here is taken (with some modifications); * from the `half` C++ library (https://half.sourceforge.net/index.html), distributed under the MIT license.; *; * Original license:; *; * The MIT License; *; * Copyright (c) 2012-2021 Christian Rau; *; * Permission is hereby granted, free of charge, to any person obtaining a copy; * of this software and associated documentation files (the ""Software""), to deal; * in the Software without restriction, including without limitation the rights; * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; * copies of the Software, and to permit persons to whom the Software is; * furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included in; * all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN; * THE SOFTWARE.; */",MatchSource.CODE_COMMENT,core/base/v7/inc/ROOT/RFloat16.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RFloat16.hxx
https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RFloat16.hxx:249,Performance,perform,performance,249,"/// Enable F16C intruction set intrinsics.; /// Defining this to 1 enables the use of [F16C compiler intrinsics](https://en.wikipedia.org/wiki/F16C) for converting; /// between half-precision and single-precision values which may result in improved performance. This will not perform; /// additional checks for support of the F16C instruction set, so an appropriate target platform is required when; /// enabling this feature.; ///; /// Unless predefined it will be enabled automatically when the `__F16C__` symbol is defined, which some compilers do on; /// supporting platforms.",MatchSource.CODE_COMMENT,core/base/v7/inc/ROOT/RFloat16.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RFloat16.hxx
https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RFloat16.hxx:276,Performance,perform,perform,276,"/// Enable F16C intruction set intrinsics.; /// Defining this to 1 enables the use of [F16C compiler intrinsics](https://en.wikipedia.org/wiki/F16C) for converting; /// between half-precision and single-precision values which may result in improved performance. This will not perform; /// additional checks for support of the F16C instruction set, so an appropriate target platform is required when; /// enabling this feature.; ///; /// Unless predefined it will be enabled automatically when the `__F16C__` symbol is defined, which some compilers do on; /// supporting platforms.",MatchSource.CODE_COMMENT,core/base/v7/inc/ROOT/RFloat16.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RFloat16.hxx
https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RFloat16.hxx:322,Testability,Log,Logical,322,"////////////////////////////////////////////////////////////////////////////////; /// \brief Round the given half-precision number to the nearest representable value.; ///; /// \param[in] value The finite half-precision number to round; /// \param[in] guardBit The most significant discarded bit; /// \param[in] stickyBit Logical OR of all but the most significant discarded bits; ///; /// \return The nearest-rounded half-precision value",MatchSource.CODE_COMMENT,core/base/v7/inc/ROOT/RFloat16.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RFloat16.hxx
https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RIndexIter.hxx:231,Usability,Feedback,Feedback,231,"/// \file ROOT/RIndexIter.hxx; /// \ingroup Base ROOT7; /// \author Axel Naumann <axel@cern.ch>; /// \date 2016-01-19; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2016, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/base/v7/inc/ROOT/RIndexIter.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RIndexIter.hxx
https://github.com/root-project/root/tree/v6-32-06/core/base/v7/src/RDirectory.cxx:226,Usability,Feedback,Feedback,226,"/// \file RDirectory.cxx; /// \ingroup Base ROOT7; /// \author Axel Naumann <axel@cern.ch>; /// \date 2020-12-04; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/base/v7/src/RDirectory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/v7/src/RDirectory.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmalloc.h:3,Energy Efficiency,Allocate,Allocate,3,/* Allocate SIZE bytes of memory. */,MatchSource.CODE_COMMENT,core/clib/res/mmalloc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmalloc.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmalloc.h:6,Energy Efficiency,allocate,allocate,6,"/* Re-allocate the previously allocated block in PTR, making the new block; SIZE bytes long. */",MatchSource.CODE_COMMENT,core/clib/res/mmalloc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmalloc.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmalloc.h:30,Energy Efficiency,allocate,allocated,30,"/* Re-allocate the previously allocated block in PTR, making the new block; SIZE bytes long. */",MatchSource.CODE_COMMENT,core/clib/res/mmalloc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmalloc.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmalloc.h:3,Energy Efficiency,Allocate,Allocate,3,"/* Allocate NMEMB elements of SIZE bytes each, all initialized to 0. */",MatchSource.CODE_COMMENT,core/clib/res/mmalloc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmalloc.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmalloc.h:16,Energy Efficiency,allocate,allocated,16,"/* Free a block allocated by `mmalloc', `mrealloc' or `mcalloc'. */",MatchSource.CODE_COMMENT,core/clib/res/mmalloc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmalloc.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmalloc.h:3,Energy Efficiency,Allocate,Allocate,3,/* Allocate SIZE bytes allocated to ALIGNMENT bytes. */,MatchSource.CODE_COMMENT,core/clib/res/mmalloc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmalloc.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmalloc.h:23,Energy Efficiency,allocate,allocated,23,/* Allocate SIZE bytes allocated to ALIGNMENT bytes. */,MatchSource.CODE_COMMENT,core/clib/res/mmalloc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmalloc.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmalloc.h:3,Energy Efficiency,Allocate,Allocate,3,/* Allocate SIZE bytes on a page boundary. */,MatchSource.CODE_COMMENT,core/clib/res/mmalloc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmalloc.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h:181,Energy Efficiency,power,powers,181,"/* The allocator divides the heap into blocks of fixed size; large; requests receive one or more whole blocks, and small requests; receive a fragment of a block. Fragment sizes are powers of two,; and all fragments of a block are the same size. When all the; fragments in a block have been freed, the block itself is freed. */",MatchSource.CODE_COMMENT,core/clib/res/mmprivate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h:141,Energy Efficiency,reduce,reduce,141,"/* Where to start searching the free list when looking for new memory.; The two possible values are 0 and heapindex. Starting at 0 seems; to reduce total memory usage, while starting at heapindex seems to; run faster. */",MatchSource.CODE_COMMENT,core/clib/res/mmprivate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h:51,Testability,log,logarithm,51,"/* Zero for a large block, or positive giving the; logarithm to the base two of the fragment size. */",MatchSource.CODE_COMMENT,core/clib/res/mmprivate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h:18,Energy Efficiency,allocate,allocated,18,/* List of blocks allocated with `mmemalign' (or `mvalloc'). */,MatchSource.CODE_COMMENT,core/clib/res/mmprivate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h:14,Availability,avail,available,14,"/* Statistics available to the user.; FIXME: By design, the internals of the malloc package are no longer; exported to the user via an include file, so access to this data needs; to be via some other mechanism, such as mmstat_<something> where the; return value is the <something> the user is interested in. */",MatchSource.CODE_COMMENT,core/clib/res/mmprivate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h:152,Security,access,access,152,"/* Statistics available to the user.; FIXME: By design, the internals of the malloc package are no longer; exported to the user via an include file, so access to this data needs; to be via some other mechanism, such as mmstat_<something> where the; return value is the <something> the user is interested in. */",MatchSource.CODE_COMMENT,core/clib/res/mmprivate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h:10,Energy Efficiency,allocate,allocated,10,/* Chunks allocated by the user. */,MatchSource.CODE_COMMENT,core/clib/res/mmprivate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h:22,Energy Efficiency,allocate,allocated,22,/* Byte total of user-allocated chunks. */,MatchSource.CODE_COMMENT,core/clib/res/mmprivate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h:50,Safety,sanity check,sanity check,50,"/* The size in bytes of this structure, used as a sanity check when reusing; a previously created mapped file. */",MatchSource.CODE_COMMENT,core/clib/res/mmprivate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h:185,Integrability,rout,routine,185,"/* Pointer to the function that is used to get more core, or return core; to the system, for requests using this malloc descriptor. For memory; mapped regions, this is the mmap() based routine. There may also be; a single malloc descriptor that points to an sbrk() based routine; for systems without mmap() or for applications that call the mmalloc(); package with a NULL malloc descriptor. FIXME: For mapped regions shared by more than one process, this; needs to be maintained on a per-process basis. */",MatchSource.CODE_COMMENT,core/clib/res/mmprivate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h:271,Integrability,rout,routine,271,"/* Pointer to the function that is used to get more core, or return core; to the system, for requests using this malloc descriptor. For memory; mapped regions, this is the mmap() based routine. There may also be; a single malloc descriptor that points to an sbrk() based routine; for systems without mmap() or for applications that call the mmalloc(); package with a NULL malloc descriptor. FIXME: For mapped regions shared by more than one process, this; needs to be maintained on a per-process basis. */",MatchSource.CODE_COMMENT,core/clib/res/mmprivate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h:42,Safety,abort,abort,42,"/* Pointer to the function that causes an abort when the memory checking; features are activated. By default this is set to abort(), but can; be set to another function by the application using mmalloc(). FIXME: For mapped regions shared by more than one process, this; needs to be maintained on a per-process basis. */",MatchSource.CODE_COMMENT,core/clib/res/mmprivate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h:124,Safety,abort,abort,124,"/* Pointer to the function that causes an abort when the memory checking; features are activated. By default this is set to abort(), but can; be set to another function by the application using mmalloc(). FIXME: For mapped regions shared by more than one process, this; needs to be maintained on a per-process basis. */",MatchSource.CODE_COMMENT,core/clib/res/mmprivate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h:29,Energy Efficiency,Allocate,Allocated,29,/* Block information table.; Allocated with malign/__mmalloc_free (not mmalloc/mfree). */; /* Table indexed by block number giving per-block information. */,MatchSource.CODE_COMMENT,core/clib/res/mmprivate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h:18,Energy Efficiency,allocate,allocated,18,/* List of blocks allocated by memalign. */,MatchSource.CODE_COMMENT,core/clib/res/mmprivate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c:63,Security,access,access,63,"/* @(#)root/clib:$Id$ */; /* Author: */; /* Initialization for access to a mmap'd malloc managed region.; Copyright 1992 Free Software Foundation, Inc. Contributed by Fred Fish at Cygnus Support. fnf@cygnus.com. This file is part of the GNU C Library. The GNU C Library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public License as; published by the Free Software Foundation; either version 2 of the; License, or (at your option) any later version. The GNU C Library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with the GNU C Library; see the file COPYING.LIB. If; not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,; Boston, MA 02111-1307, USA. */",MatchSource.CODE_COMMENT,core/clib/src/attach.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c:56,Energy Efficiency,allocate,allocated,56,"/* WIN32 */; /* We start off with the malloc descriptor allocated on the stack, until; we build it up enough to call _mmalloc_mmap_morecore() to allocate the; first page of the region and copy it there. Ensure that it is zero'd and; then initialize the fields that we know values for. */",MatchSource.CODE_COMMENT,core/clib/src/attach.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c:145,Energy Efficiency,allocate,allocate,145,"/* WIN32 */; /* We start off with the malloc descriptor allocated on the stack, until; we build it up enough to call _mmalloc_mmap_morecore() to allocate the; first page of the region and copy it there. Ensure that it is zero'd and; then initialize the fields that we know values for. */",MatchSource.CODE_COMMENT,core/clib/src/attach.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c:20,Testability,test,test,20,/* We should really test for _POSIX_SYNCRONIZED_IO here */,MatchSource.CODE_COMMENT,core/clib/src/attach.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c:244,Deployability,update,update,244,"/* Given an valid file descriptor on an open file, test to see if that file; is a valid mmalloc produced file, and if so, attempt to remap it into the; current process at the same address to which it was previously mapped. Note that we have to update the file descriptor number in the malloc-; descriptor read from the file to match the current valid one, before; trying to map the file in, and again after a successful mapping and; after we've switched over to using the mapped in malloc descriptor; rather than the temporary one on the stack. Once we've switched over to using the mapped in malloc descriptor, we; have to update the pointer to the morecore function, since it almost; certainly will be at a different address if the process reusing the; mapped region is from a different executable. Also note that if the heap being remapped previously used the mmcheck(); routines, we need to update the hooks since their target functions; will have certainly moved if the executable has changed in any way.; We do this by calling mmcheck() internally. Returns a pointer to the malloc descriptor if successful, or NULL if; unsuccessful for some reason. */",MatchSource.CODE_COMMENT,core/clib/src/attach.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c:624,Deployability,update,update,624,"/* Given an valid file descriptor on an open file, test to see if that file; is a valid mmalloc produced file, and if so, attempt to remap it into the; current process at the same address to which it was previously mapped. Note that we have to update the file descriptor number in the malloc-; descriptor read from the file to match the current valid one, before; trying to map the file in, and again after a successful mapping and; after we've switched over to using the mapped in malloc descriptor; rather than the temporary one on the stack. Once we've switched over to using the mapped in malloc descriptor, we; have to update the pointer to the morecore function, since it almost; certainly will be at a different address if the process reusing the; mapped region is from a different executable. Also note that if the heap being remapped previously used the mmcheck(); routines, we need to update the hooks since their target functions; will have certainly moved if the executable has changed in any way.; We do this by calling mmcheck() internally. Returns a pointer to the malloc descriptor if successful, or NULL if; unsuccessful for some reason. */",MatchSource.CODE_COMMENT,core/clib/src/attach.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c:895,Deployability,update,update,895,"/* Given an valid file descriptor on an open file, test to see if that file; is a valid mmalloc produced file, and if so, attempt to remap it into the; current process at the same address to which it was previously mapped. Note that we have to update the file descriptor number in the malloc-; descriptor read from the file to match the current valid one, before; trying to map the file in, and again after a successful mapping and; after we've switched over to using the mapped in malloc descriptor; rather than the temporary one on the stack. Once we've switched over to using the mapped in malloc descriptor, we; have to update the pointer to the morecore function, since it almost; certainly will be at a different address if the process reusing the; mapped region is from a different executable. Also note that if the heap being remapped previously used the mmcheck(); routines, we need to update the hooks since their target functions; will have certainly moved if the executable has changed in any way.; We do this by calling mmcheck() internally. Returns a pointer to the malloc descriptor if successful, or NULL if; unsuccessful for some reason. */",MatchSource.CODE_COMMENT,core/clib/src/attach.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c:874,Integrability,rout,routines,874,"/* Given an valid file descriptor on an open file, test to see if that file; is a valid mmalloc produced file, and if so, attempt to remap it into the; current process at the same address to which it was previously mapped. Note that we have to update the file descriptor number in the malloc-; descriptor read from the file to match the current valid one, before; trying to map the file in, and again after a successful mapping and; after we've switched over to using the mapped in malloc descriptor; rather than the temporary one on the stack. Once we've switched over to using the mapped in malloc descriptor, we; have to update the pointer to the morecore function, since it almost; certainly will be at a different address if the process reusing the; mapped region is from a different executable. Also note that if the heap being remapped previously used the mmcheck(); routines, we need to update the hooks since their target functions; will have certainly moved if the executable has changed in any way.; We do this by calling mmcheck() internally. Returns a pointer to the malloc descriptor if successful, or NULL if; unsuccessful for some reason. */",MatchSource.CODE_COMMENT,core/clib/src/attach.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c:51,Testability,test,test,51,"/* Given an valid file descriptor on an open file, test to see if that file; is a valid mmalloc produced file, and if so, attempt to remap it into the; current process at the same address to which it was previously mapped. Note that we have to update the file descriptor number in the malloc-; descriptor read from the file to match the current valid one, before; trying to map the file in, and again after a successful mapping and; after we've switched over to using the mapped in malloc descriptor; rather than the temporary one on the stack. Once we've switched over to using the mapped in malloc descriptor, we; have to update the pointer to the morecore function, since it almost; certainly will be at a different address if the process reusing the; mapped region is from a different executable. Also note that if the heap being remapped previously used the mmcheck(); routines, we need to update the hooks since their target functions; will have certainly moved if the executable has changed in any way.; We do this by calling mmcheck() internally. Returns a pointer to the malloc descriptor if successful, or NULL if; unsuccessful for some reason. */",MatchSource.CODE_COMMENT,core/clib/src/attach.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c:20,Testability,test,test,20,/* We should really test for _POSIX_SYNCRONIZED_IO here */,MatchSource.CODE_COMMENT,core/clib/src/attach.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c:109,Security,access,access,109,"/* For systems without mmap, the library still supplies an entry point; to link to, but trying to initialize access to an mmap'd managed region; always fails. */; /* ARGSUSED */",MatchSource.CODE_COMMENT,core/clib/src/attach.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/detach.c:51,Security,access,access,51,"/* @(#)root/clib:$Id$ */; /* Author: */; /* Finish access to a mmap'd malloc managed region.; Copyright 1992 Free Software Foundation, Inc. Contributed by Fred Fish at Cygnus Support. fnf@cygnus.com. This file is part of the GNU C Library. The GNU C Library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public License as; published by the Free Software Foundation; either version 2 of the; License, or (at your option) any later version. The GNU C Library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with the GNU C Library; see the file COPYING.LIB. If; not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,; Boston, MA 02111-1307, USA. */",MatchSource.CODE_COMMENT,core/clib/src/detach.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/detach.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/detach.c:227,Availability,failure,failure,227,"/* Terminate access to a mmalloc managed region by unmapping all memory pages; associated with the region, and closing the file descriptor if it is one; that we opened. Returns NULL on success. Returns the malloc descriptor on failure, which can subsequently be used; for further action, such as obtaining more information about the nature of; the failure by examining the preserved errno value. Note that the malloc descriptor that we are using is currently located in; region we are about to unmap, so we first make a local copy of it on the; stack and use the copy. */",MatchSource.CODE_COMMENT,core/clib/src/detach.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/detach.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/detach.c:348,Availability,failure,failure,348,"/* Terminate access to a mmalloc managed region by unmapping all memory pages; associated with the region, and closing the file descriptor if it is one; that we opened. Returns NULL on success. Returns the malloc descriptor on failure, which can subsequently be used; for further action, such as obtaining more information about the nature of; the failure by examining the preserved errno value. Note that the malloc descriptor that we are using is currently located in; region we are about to unmap, so we first make a local copy of it on the; stack and use the copy. */",MatchSource.CODE_COMMENT,core/clib/src/detach.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/detach.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/detach.c:13,Security,access,access,13,"/* Terminate access to a mmalloc managed region by unmapping all memory pages; associated with the region, and closing the file descriptor if it is one; that we opened. Returns NULL on success. Returns the malloc descriptor on failure, which can subsequently be used; for further action, such as obtaining more information about the nature of; the failure by examining the preserved errno value. Note that the malloc descriptor that we are using is currently located in; region we are about to unmap, so we first make a local copy of it on the; stack and use the copy. */",MatchSource.CODE_COMMENT,core/clib/src/detach.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/detach.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/detach.c:3,Deployability,Update,Update,3,"/* Update the original malloc descriptor with any changes */; /* *(struct mdesc *) md = mtemp; don't update, just unmapped (rdm) */",MatchSource.CODE_COMMENT,core/clib/src/detach.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/detach.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/detach.c:101,Deployability,update,update,101,"/* Update the original malloc descriptor with any changes */; /* *(struct mdesc *) md = mtemp; don't update, just unmapped (rdm) */",MatchSource.CODE_COMMENT,core/clib/src/detach.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/detach.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/keys.c:1236,Modifiability,variab,variables,1236,"/* @(#)root/clib:$Id$ */; /* Author: */; /* Access for application keys in mmap'd malloc managed region.; Copyright 1992 Free Software Foundation, Inc. Contributed by Fred Fish at Cygnus Support. fnf@cygnus.com. This file is part of the GNU C Library. The GNU C Library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public License as; published by the Free Software Foundation; either version 2 of the; License, or (at your option) any later version. The GNU C Library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with the GNU C Library; see the file COPYING.LIB. If; not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,; Boston, MA 02111-1307, USA. */; /* This module provides access to some keys that the application can use to; provide persistent access to locations in the mapped memory section.; The intent is that these keys are to be used sparingly as sort of; persistent global variables which the application can use to reinitialize; access to data in the mapped region. For the moment, these keys are simply stored in the malloc descriptor; itself, in an array of fixed length. This should be fixed so that there; can be an unlimited number of keys, possibly using a multilevel access; scheme of some sort. */",MatchSource.CODE_COMMENT,core/clib/src/keys.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/keys.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/keys.c:44,Security,Access,Access,44,"/* @(#)root/clib:$Id$ */; /* Author: */; /* Access for application keys in mmap'd malloc managed region.; Copyright 1992 Free Software Foundation, Inc. Contributed by Fred Fish at Cygnus Support. fnf@cygnus.com. This file is part of the GNU C Library. The GNU C Library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public License as; published by the Free Software Foundation; either version 2 of the; License, or (at your option) any later version. The GNU C Library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with the GNU C Library; see the file COPYING.LIB. If; not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,; Boston, MA 02111-1307, USA. */; /* This module provides access to some keys that the application can use to; provide persistent access to locations in the mapped memory section.; The intent is that these keys are to be used sparingly as sort of; persistent global variables which the application can use to reinitialize; access to data in the mapped region. For the moment, these keys are simply stored in the malloc descriptor; itself, in an array of fixed length. This should be fixed so that there; can be an unlimited number of keys, possibly using a multilevel access; scheme of some sort. */",MatchSource.CODE_COMMENT,core/clib/src/keys.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/keys.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/keys.c:1028,Security,access,access,1028,"/* @(#)root/clib:$Id$ */; /* Author: */; /* Access for application keys in mmap'd malloc managed region.; Copyright 1992 Free Software Foundation, Inc. Contributed by Fred Fish at Cygnus Support. fnf@cygnus.com. This file is part of the GNU C Library. The GNU C Library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public License as; published by the Free Software Foundation; either version 2 of the; License, or (at your option) any later version. The GNU C Library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with the GNU C Library; see the file COPYING.LIB. If; not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,; Boston, MA 02111-1307, USA. */; /* This module provides access to some keys that the application can use to; provide persistent access to locations in the mapped memory section.; The intent is that these keys are to be used sparingly as sort of; persistent global variables which the application can use to reinitialize; access to data in the mapped region. For the moment, these keys are simply stored in the malloc descriptor; itself, in an array of fixed length. This should be fixed so that there; can be an unlimited number of keys, possibly using a multilevel access; scheme of some sort. */",MatchSource.CODE_COMMENT,core/clib/src/keys.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/keys.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/keys.c:1100,Security,access,access,1100,"/* @(#)root/clib:$Id$ */; /* Author: */; /* Access for application keys in mmap'd malloc managed region.; Copyright 1992 Free Software Foundation, Inc. Contributed by Fred Fish at Cygnus Support. fnf@cygnus.com. This file is part of the GNU C Library. The GNU C Library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public License as; published by the Free Software Foundation; either version 2 of the; License, or (at your option) any later version. The GNU C Library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with the GNU C Library; see the file COPYING.LIB. If; not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,; Boston, MA 02111-1307, USA. */; /* This module provides access to some keys that the application can use to; provide persistent access to locations in the mapped memory section.; The intent is that these keys are to be used sparingly as sort of; persistent global variables which the application can use to reinitialize; access to data in the mapped region. For the moment, these keys are simply stored in the malloc descriptor; itself, in an array of fixed length. This should be fixed so that there; can be an unlimited number of keys, possibly using a multilevel access; scheme of some sort. */",MatchSource.CODE_COMMENT,core/clib/src/keys.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/keys.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/keys.c:1293,Security,access,access,1293,"/* @(#)root/clib:$Id$ */; /* Author: */; /* Access for application keys in mmap'd malloc managed region.; Copyright 1992 Free Software Foundation, Inc. Contributed by Fred Fish at Cygnus Support. fnf@cygnus.com. This file is part of the GNU C Library. The GNU C Library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public License as; published by the Free Software Foundation; either version 2 of the; License, or (at your option) any later version. The GNU C Library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with the GNU C Library; see the file COPYING.LIB. If; not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,; Boston, MA 02111-1307, USA. */; /* This module provides access to some keys that the application can use to; provide persistent access to locations in the mapped memory section.; The intent is that these keys are to be used sparingly as sort of; persistent global variables which the application can use to reinitialize; access to data in the mapped region. For the moment, these keys are simply stored in the malloc descriptor; itself, in an array of fixed length. This should be fixed so that there; can be an unlimited number of keys, possibly using a multilevel access; scheme of some sort. */",MatchSource.CODE_COMMENT,core/clib/src/keys.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/keys.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/keys.c:1538,Security,access,access,1538,"/* @(#)root/clib:$Id$ */; /* Author: */; /* Access for application keys in mmap'd malloc managed region.; Copyright 1992 Free Software Foundation, Inc. Contributed by Fred Fish at Cygnus Support. fnf@cygnus.com. This file is part of the GNU C Library. The GNU C Library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public License as; published by the Free Software Foundation; either version 2 of the; License, or (at your option) any later version. The GNU C Library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with the GNU C Library; see the file COPYING.LIB. If; not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,; Boston, MA 02111-1307, USA. */; /* This module provides access to some keys that the application can use to; provide persistent access to locations in the mapped memory section.; The intent is that these keys are to be used sparingly as sort of; persistent global variables which the application can use to reinitialize; access to data in the mapped region. For the moment, these keys are simply stored in the malloc descriptor; itself, in an array of fixed length. This should be fixed so that there; can be an unlimited number of keys, possibly using a multilevel access; scheme of some sort. */",MatchSource.CODE_COMMENT,core/clib/src/keys.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/keys.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/keys.c:1361,Usability,simpl,simply,1361,"/* @(#)root/clib:$Id$ */; /* Author: */; /* Access for application keys in mmap'd malloc managed region.; Copyright 1992 Free Software Foundation, Inc. Contributed by Fred Fish at Cygnus Support. fnf@cygnus.com. This file is part of the GNU C Library. The GNU C Library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public License as; published by the Free Software Foundation; either version 2 of the; License, or (at your option) any later version. The GNU C Library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with the GNU C Library; see the file COPYING.LIB. If; not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,; Boston, MA 02111-1307, USA. */; /* This module provides access to some keys that the application can use to; provide persistent access to locations in the mapped memory section.; The intent is that these keys are to be used sparingly as sort of; persistent global variables which the application can use to reinitialize; access to data in the mapped region. For the moment, these keys are simply stored in the malloc descriptor; itself, in an array of fixed length. This should be fixed so that there; can be an unlimited number of keys, possibly using a multilevel access; scheme of some sort. */",MatchSource.CODE_COMMENT,core/clib/src/keys.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/keys.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/keys.c:20,Testability,test,test,20,/* We should really test for _POSIX_SYNCRONIZED_IO here */,MatchSource.CODE_COMMENT,core/clib/src/keys.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/keys.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mcalloc.c:3,Energy Efficiency,Allocate,Allocate,3,/* Allocate an array of NMEMB elements each SIZE bytes long.; The entire array is initialized to zeros. */,MatchSource.CODE_COMMENT,core/clib/src/mcalloc.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mcalloc.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mfree.c:67,Energy Efficiency,allocate,allocated,67,"/* @(#)root/clib:$Id$ */; /* Author: */; /* Free a block of memory allocated by `mmalloc'.; Copyright 1990, 1991, 1992 Free Software Foundation. Written May 1989 by Mike Haertel.; Heavily modified Mar 1992 by Fred Fish. (fnf@cygnus.com). The GNU C Library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public License as; published by the Free Software Foundation; either version 2 of the; License, or (at your option) any later version. The GNU C Library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with the GNU C Library; see the file COPYING.LIB. If; not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,; Boston, MA 02111-1307, USA. The author may be reached (Email) at the address mike@ai.mit.edu,; or (US mail) as Mike Haertel c/o Free Software Foundation. */",MatchSource.CODE_COMMENT,core/clib/src/mfree.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mfree.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmalloc.c:3,Energy Efficiency,Allocate,Allocate,3,/* Allocate memory from the heap. */,MatchSource.CODE_COMMENT,core/clib/src/mmalloc.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmalloc.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmalloc.c:69,Testability,log,logarithm,69,/* Small allocation to receive a fragment of a block.; Determine the logarithm to base two of the fragment size. */,MatchSource.CODE_COMMENT,core/clib/src/mmalloc.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmalloc.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmalloc.c:99,Deployability,Update,Update,99,/* There are free fragments of this size.; Pop a fragment out of the fragment list and return it.; Update the block's nfree and first counters. */,MatchSource.CODE_COMMENT,core/clib/src/mmalloc.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmalloc.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmalloc.c:3,Deployability,Update,Update,3,/* Update the statistics. */,MatchSource.CODE_COMMENT,core/clib/src/mmalloc.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmalloc.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmalloc.c:22,Modifiability,extend,extending,22,"/* Which block we are extending (the `final free; block' referred to above) might have changed, if; it got combined with a freed info table. */",MatchSource.CODE_COMMENT,core/clib/src/mmalloc.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmalloc.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmapsup.c:344,Energy Efficiency,reduce,reduced,344,"/* We are deallocating memory. If the amount requested would cause; us to try to deallocate back past the base of the mmap'd region; then do nothing, and return NULL. Otherwise, deallocate the; memory and return the old break value. */; /* only munmap whole mapping, called via mmalloc_detach, smaller size; reductions cause the breakval to be reduced but not the mapping; to be undone (rdm). */",MatchSource.CODE_COMMENT,core/clib/src/mmapsup.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmapsup.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmapsup.c:379,Usability,undo,undone,379,"/* We are deallocating memory. If the amount requested would cause; us to try to deallocate back past the base of the mmap'd region; then do nothing, and return NULL. Otherwise, deallocate the; memory and return the old break value. */; /* only munmap whole mapping, called via mmalloc_detach, smaller size; reductions cause the breakval to be reduced but not the mapping; to be undone (rdm). */",MatchSource.CODE_COMMENT,core/clib/src/mmapsup.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmapsup.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmapsup.c:237,Modifiability,extend,extend,237,"/* The request would move us past the end of the currently; mapped memory, so map in enough more memory to satisfy; the request. This means we also have to grow the mapped-to; file by an appropriate amount, since mmap cannot be used; to extend a file. */",MatchSource.CODE_COMMENT,core/clib/src/mmapsup.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmapsup.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmapsup.c:41,Modifiability,extend,extend,41,"/*fprintf(stderr, ""mmap_morecore: try to extend mapping by %d bytes, use bigger TMapFile\n"", mapbytes);*/",MatchSource.CODE_COMMENT,core/clib/src/mmapsup.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmapsup.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmapsup.c:59,Integrability,rout,routine,59,"/*; * In case of a read-only mapping, we need to call this routine to; * keep the mapping in sync with the mapping of the writer.; */",MatchSource.CODE_COMMENT,core/clib/src/mmapsup.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmapsup.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:256,Safety,detect,detect,256,/* Each memory allocation is bounded by a header structure and a trailer; byte. I.E. <size><magicword><user's allocation><magicbyte>. The pointer returned to the user points to the first byte in the; user's allocation area. The magic word can be tested to detect; buffer underruns and the magic byte can be tested to detect overruns. */,MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:317,Safety,detect,detect,317,/* Each memory allocation is bounded by a header structure and a trailer; byte. I.E. <size><magicword><user's allocation><magicbyte>. The pointer returned to the user points to the first byte in the; user's allocation area. The magic word can be tested to detect; buffer underruns and the magic byte can be tested to detect overruns. */,MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:246,Testability,test,tested,246,/* Each memory allocation is bounded by a header structure and a trailer; byte. I.E. <size><magicword><user's allocation><magicbyte>. The pointer returned to the user points to the first byte in the; user's allocation area. The magic word can be tested to detect; buffer underruns and the magic byte can be tested to detect overruns. */,MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:307,Testability,test,tested,307,/* Each memory allocation is bounded by a header structure and a trailer; byte. I.E. <size><magicword><user's allocation><magicbyte>. The pointer returned to the user points to the first byte in the; user's allocation area. The magic word can be tested to detect; buffer underruns and the magic byte can be tested to detect overruns. */,MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:32,Security,integrity,integrity,32,/* Magic number to check header integrity. */,MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:90,Safety,abort,abort,90,"/* Check the magicword and magicbyte, and if either is corrupted then; call the emergency abort function specified for the heap in use. */",MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:579,Availability,error,error,579,"/* Turn on default checking for mmalloc/mrealloc/mfree, for the heap specified; by MD. If FUNC is non-NULL, it is a pointer to the function to call; to abort whenever memory corruption is detected. By default, this is the; standard library function abort(). Note that we disallow installation of initial checking hooks if mmalloc; has been called at any time for this particular heap, since if any region; that is allocated prior to installation of the hooks is subsequently; reallocated or freed after installation of the hooks, it is guaranteed; to trigger a memory corruption error. We do this by checking the state; of the MMALLOC_INITIALIZED flag. However, we can call this function at any time after the initial call,; to update the function pointers to the checking routines and to the; user defined corruption handler routine, as long as these function pointers; have been previously extablished by the initial call. Note that we; do this automatically when remapping an previously used heap, to ensure; that the hooks get updated to the correct values, although the corruption; handler pointer gets set back to the default. The application can then; call mmcheck to use a different corruption handler if desired. Returns non-zero if checking is successfully enabled, zero otherwise. */",MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:280,Deployability,install,installation,280,"/* Turn on default checking for mmalloc/mrealloc/mfree, for the heap specified; by MD. If FUNC is non-NULL, it is a pointer to the function to call; to abort whenever memory corruption is detected. By default, this is the; standard library function abort(). Note that we disallow installation of initial checking hooks if mmalloc; has been called at any time for this particular heap, since if any region; that is allocated prior to installation of the hooks is subsequently; reallocated or freed after installation of the hooks, it is guaranteed; to trigger a memory corruption error. We do this by checking the state; of the MMALLOC_INITIALIZED flag. However, we can call this function at any time after the initial call,; to update the function pointers to the checking routines and to the; user defined corruption handler routine, as long as these function pointers; have been previously extablished by the initial call. Note that we; do this automatically when remapping an previously used heap, to ensure; that the hooks get updated to the correct values, although the corruption; handler pointer gets set back to the default. The application can then; call mmcheck to use a different corruption handler if desired. Returns non-zero if checking is successfully enabled, zero otherwise. */",MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:433,Deployability,install,installation,433,"/* Turn on default checking for mmalloc/mrealloc/mfree, for the heap specified; by MD. If FUNC is non-NULL, it is a pointer to the function to call; to abort whenever memory corruption is detected. By default, this is the; standard library function abort(). Note that we disallow installation of initial checking hooks if mmalloc; has been called at any time for this particular heap, since if any region; that is allocated prior to installation of the hooks is subsequently; reallocated or freed after installation of the hooks, it is guaranteed; to trigger a memory corruption error. We do this by checking the state; of the MMALLOC_INITIALIZED flag. However, we can call this function at any time after the initial call,; to update the function pointers to the checking routines and to the; user defined corruption handler routine, as long as these function pointers; have been previously extablished by the initial call. Note that we; do this automatically when remapping an previously used heap, to ensure; that the hooks get updated to the correct values, although the corruption; handler pointer gets set back to the default. The application can then; call mmcheck to use a different corruption handler if desired. Returns non-zero if checking is successfully enabled, zero otherwise. */",MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:503,Deployability,install,installation,503,"/* Turn on default checking for mmalloc/mrealloc/mfree, for the heap specified; by MD. If FUNC is non-NULL, it is a pointer to the function to call; to abort whenever memory corruption is detected. By default, this is the; standard library function abort(). Note that we disallow installation of initial checking hooks if mmalloc; has been called at any time for this particular heap, since if any region; that is allocated prior to installation of the hooks is subsequently; reallocated or freed after installation of the hooks, it is guaranteed; to trigger a memory corruption error. We do this by checking the state; of the MMALLOC_INITIALIZED flag. However, we can call this function at any time after the initial call,; to update the function pointers to the checking routines and to the; user defined corruption handler routine, as long as these function pointers; have been previously extablished by the initial call. Note that we; do this automatically when remapping an previously used heap, to ensure; that the hooks get updated to the correct values, although the corruption; handler pointer gets set back to the default. The application can then; call mmcheck to use a different corruption handler if desired. Returns non-zero if checking is successfully enabled, zero otherwise. */",MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:728,Deployability,update,update,728,"/* Turn on default checking for mmalloc/mrealloc/mfree, for the heap specified; by MD. If FUNC is non-NULL, it is a pointer to the function to call; to abort whenever memory corruption is detected. By default, this is the; standard library function abort(). Note that we disallow installation of initial checking hooks if mmalloc; has been called at any time for this particular heap, since if any region; that is allocated prior to installation of the hooks is subsequently; reallocated or freed after installation of the hooks, it is guaranteed; to trigger a memory corruption error. We do this by checking the state; of the MMALLOC_INITIALIZED flag. However, we can call this function at any time after the initial call,; to update the function pointers to the checking routines and to the; user defined corruption handler routine, as long as these function pointers; have been previously extablished by the initial call. Note that we; do this automatically when remapping an previously used heap, to ensure; that the hooks get updated to the correct values, although the corruption; handler pointer gets set back to the default. The application can then; call mmcheck to use a different corruption handler if desired. Returns non-zero if checking is successfully enabled, zero otherwise. */",MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:1031,Deployability,update,updated,1031,"/* Turn on default checking for mmalloc/mrealloc/mfree, for the heap specified; by MD. If FUNC is non-NULL, it is a pointer to the function to call; to abort whenever memory corruption is detected. By default, this is the; standard library function abort(). Note that we disallow installation of initial checking hooks if mmalloc; has been called at any time for this particular heap, since if any region; that is allocated prior to installation of the hooks is subsequently; reallocated or freed after installation of the hooks, it is guaranteed; to trigger a memory corruption error. We do this by checking the state; of the MMALLOC_INITIALIZED flag. However, we can call this function at any time after the initial call,; to update the function pointers to the checking routines and to the; user defined corruption handler routine, as long as these function pointers; have been previously extablished by the initial call. Note that we; do this automatically when remapping an previously used heap, to ensure; that the hooks get updated to the correct values, although the corruption; handler pointer gets set back to the default. The application can then; call mmcheck to use a different corruption handler if desired. Returns non-zero if checking is successfully enabled, zero otherwise. */",MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:414,Energy Efficiency,allocate,allocated,414,"/* Turn on default checking for mmalloc/mrealloc/mfree, for the heap specified; by MD. If FUNC is non-NULL, it is a pointer to the function to call; to abort whenever memory corruption is detected. By default, this is the; standard library function abort(). Note that we disallow installation of initial checking hooks if mmalloc; has been called at any time for this particular heap, since if any region; that is allocated prior to installation of the hooks is subsequently; reallocated or freed after installation of the hooks, it is guaranteed; to trigger a memory corruption error. We do this by checking the state; of the MMALLOC_INITIALIZED flag. However, we can call this function at any time after the initial call,; to update the function pointers to the checking routines and to the; user defined corruption handler routine, as long as these function pointers; have been previously extablished by the initial call. Note that we; do this automatically when remapping an previously used heap, to ensure; that the hooks get updated to the correct values, although the corruption; handler pointer gets set back to the default. The application can then; call mmcheck to use a different corruption handler if desired. Returns non-zero if checking is successfully enabled, zero otherwise. */",MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:773,Integrability,rout,routines,773,"/* Turn on default checking for mmalloc/mrealloc/mfree, for the heap specified; by MD. If FUNC is non-NULL, it is a pointer to the function to call; to abort whenever memory corruption is detected. By default, this is the; standard library function abort(). Note that we disallow installation of initial checking hooks if mmalloc; has been called at any time for this particular heap, since if any region; that is allocated prior to installation of the hooks is subsequently; reallocated or freed after installation of the hooks, it is guaranteed; to trigger a memory corruption error. We do this by checking the state; of the MMALLOC_INITIALIZED flag. However, we can call this function at any time after the initial call,; to update the function pointers to the checking routines and to the; user defined corruption handler routine, as long as these function pointers; have been previously extablished by the initial call. Note that we; do this automatically when remapping an previously used heap, to ensure; that the hooks get updated to the correct values, although the corruption; handler pointer gets set back to the default. The application can then; call mmcheck to use a different corruption handler if desired. Returns non-zero if checking is successfully enabled, zero otherwise. */",MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:826,Integrability,rout,routine,826,"/* Turn on default checking for mmalloc/mrealloc/mfree, for the heap specified; by MD. If FUNC is non-NULL, it is a pointer to the function to call; to abort whenever memory corruption is detected. By default, this is the; standard library function abort(). Note that we disallow installation of initial checking hooks if mmalloc; has been called at any time for this particular heap, since if any region; that is allocated prior to installation of the hooks is subsequently; reallocated or freed after installation of the hooks, it is guaranteed; to trigger a memory corruption error. We do this by checking the state; of the MMALLOC_INITIALIZED flag. However, we can call this function at any time after the initial call,; to update the function pointers to the checking routines and to the; user defined corruption handler routine, as long as these function pointers; have been previously extablished by the initial call. Note that we; do this automatically when remapping an previously used heap, to ensure; that the hooks get updated to the correct values, although the corruption; handler pointer gets set back to the default. The application can then; call mmcheck to use a different corruption handler if desired. Returns non-zero if checking is successfully enabled, zero otherwise. */",MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:152,Safety,abort,abort,152,"/* Turn on default checking for mmalloc/mrealloc/mfree, for the heap specified; by MD. If FUNC is non-NULL, it is a pointer to the function to call; to abort whenever memory corruption is detected. By default, this is the; standard library function abort(). Note that we disallow installation of initial checking hooks if mmalloc; has been called at any time for this particular heap, since if any region; that is allocated prior to installation of the hooks is subsequently; reallocated or freed after installation of the hooks, it is guaranteed; to trigger a memory corruption error. We do this by checking the state; of the MMALLOC_INITIALIZED flag. However, we can call this function at any time after the initial call,; to update the function pointers to the checking routines and to the; user defined corruption handler routine, as long as these function pointers; have been previously extablished by the initial call. Note that we; do this automatically when remapping an previously used heap, to ensure; that the hooks get updated to the correct values, although the corruption; handler pointer gets set back to the default. The application can then; call mmcheck to use a different corruption handler if desired. Returns non-zero if checking is successfully enabled, zero otherwise. */",MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:188,Safety,detect,detected,188,"/* Turn on default checking for mmalloc/mrealloc/mfree, for the heap specified; by MD. If FUNC is non-NULL, it is a pointer to the function to call; to abort whenever memory corruption is detected. By default, this is the; standard library function abort(). Note that we disallow installation of initial checking hooks if mmalloc; has been called at any time for this particular heap, since if any region; that is allocated prior to installation of the hooks is subsequently; reallocated or freed after installation of the hooks, it is guaranteed; to trigger a memory corruption error. We do this by checking the state; of the MMALLOC_INITIALIZED flag. However, we can call this function at any time after the initial call,; to update the function pointers to the checking routines and to the; user defined corruption handler routine, as long as these function pointers; have been previously extablished by the initial call. Note that we; do this automatically when remapping an previously used heap, to ensure; that the hooks get updated to the correct values, although the corruption; handler pointer gets set back to the default. The application can then; call mmcheck to use a different corruption handler if desired. Returns non-zero if checking is successfully enabled, zero otherwise. */",MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:249,Safety,abort,abort,249,"/* Turn on default checking for mmalloc/mrealloc/mfree, for the heap specified; by MD. If FUNC is non-NULL, it is a pointer to the function to call; to abort whenever memory corruption is detected. By default, this is the; standard library function abort(). Note that we disallow installation of initial checking hooks if mmalloc; has been called at any time for this particular heap, since if any region; that is allocated prior to installation of the hooks is subsequently; reallocated or freed after installation of the hooks, it is guaranteed; to trigger a memory corruption error. We do this by checking the state; of the MMALLOC_INITIALIZED flag. However, we can call this function at any time after the initial call,; to update the function pointers to the checking routines and to the; user defined corruption handler routine, as long as these function pointers; have been previously extablished by the initial call. Note that we; do this automatically when remapping an previously used heap, to ensure; that the hooks get updated to the correct values, although the corruption; handler pointer gets set back to the default. The application can then; call mmcheck to use a different corruption handler if desired. Returns non-zero if checking is successfully enabled, zero otherwise. */",MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:24,Deployability,update,update,24,"/* We can safely set or update the abort function at any time, regardless; of whether or not we successfully do anything else. */",MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:10,Safety,safe,safely,10,"/* We can safely set or update the abort function at any time, regardless; of whether or not we successfully do anything else. */",MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:35,Safety,abort,abort,35,"/* We can safely set or update the abort function at any time, regardless; of whether or not we successfully do anything else. */",MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:108,Deployability,install,installed,108,"/* If we haven't yet called mmalloc the first time for this heap, or if we; have hooks that were previously installed, then allow the hooks to be; initialized or updated. */",MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:162,Deployability,update,updated,162,"/* If we haven't yet called mmalloc the first time for this heap, or if we; have hooks that were previously installed, then allow the hooks to be; initialized or updated. */",MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:23,Deployability,install,installation,23,/* FIXME: Always allow installation for now. */,MatchSource.CODE_COMMENT,core/clib/src/mmcheck.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mrealloc.c:71,Energy Efficiency,allocate,allocated,71,"/* @(#)root/clib:$Id$ */; /* Author: */; /* Change the size of a block allocated by `mmalloc'.; Copyright 1990, 1991 Free Software Foundation; Written May 1989 by Mike Haertel. The GNU C Library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public License as; published by the Free Software Foundation; either version 2 of the; License, or (at your option) any later version. The GNU C Library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with the GNU C Library; see the file COPYING.LIB. If; not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,; Boston, MA 02111-1307, USA. The author may be reached (Email) at the address mike@ai.mit.edu,; or (US mail) as Mike Haertel c/o Free Software Foundation. */",MatchSource.CODE_COMMENT,core/clib/src/mrealloc.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mrealloc.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mrealloc.c:105,Performance,optimiz,optimized,105,"/* Resize the given region to the new size, returning a pointer; to the (possibly moved) region. This is optimized for speed;; some benchmarks seem to indicate that greater compactness is; achieved by unconditionally allocating and copying to a; new region. This module has incestuous knowledge of the; internals of both mfree and mmalloc. */",MatchSource.CODE_COMMENT,core/clib/src/mrealloc.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mrealloc.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mrealloc.c:132,Testability,benchmark,benchmarks,132,"/* Resize the given region to the new size, returning a pointer; to the (possibly moved) region. This is optimized for speed;; some benchmarks seem to indicate that greater compactness is; achieved by unconditionally allocating and copying to a; new region. This module has incestuous knowledge of the; internals of both mfree and mmalloc. */",MatchSource.CODE_COMMENT,core/clib/src/mrealloc.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mrealloc.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mrealloc.c:17,Energy Efficiency,allocate,allocate,17,"/* Won't fit, so allocate a new region that will.; Free the old region first in case there is sufficient; adjacent free space to grow without moving. */",MatchSource.CODE_COMMENT,core/clib/src/mrealloc.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mrealloc.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mrealloc.c:35,Testability,log,logarithm,35,/* Old size is a fragment; type is logarithm; to base two of the fragment size. */,MatchSource.CODE_COMMENT,core/clib/src/mrealloc.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mrealloc.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mrealloc.c:30,Energy Efficiency,allocate,allocate,30,"/* The new size is different; allocate a new space,; and copy the lesser of the new size and the old. */",MatchSource.CODE_COMMENT,core/clib/src/mrealloc.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mrealloc.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/sbrksup.c:722,Energy Efficiency,power,power,722,"/* Initialize the default malloc descriptor if this is the first time; a request has been made to use the default sbrk'd region. Since no alignment guarantees are made about the initial value returned; by sbrk, test the initial value and (if necessary) sbrk enough additional; memory to start off with alignment to BLOCKSIZE. We actually only need; it aligned to an alignment suitable for any object, so this is overkill.; But at most it wastes just part of one BLOCKSIZE chunk of memory and; minimizes portability problems by avoiding us having to figure out; what the actual minimal alignment is. The rest of the malloc code; avoids this as well, by always aligning to the minimum of the requested; size rounded up to a power of two, or to BLOCKSIZE. Note that we are going to use some memory starting at this initial sbrk; address for the sbrk region malloc descriptor, which is a struct, so the; base address must be suitably aligned. */",MatchSource.CODE_COMMENT,core/clib/src/sbrksup.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/sbrksup.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/sbrksup.c:503,Modifiability,portab,portability,503,"/* Initialize the default malloc descriptor if this is the first time; a request has been made to use the default sbrk'd region. Since no alignment guarantees are made about the initial value returned; by sbrk, test the initial value and (if necessary) sbrk enough additional; memory to start off with alignment to BLOCKSIZE. We actually only need; it aligned to an alignment suitable for any object, so this is overkill.; But at most it wastes just part of one BLOCKSIZE chunk of memory and; minimizes portability problems by avoiding us having to figure out; what the actual minimal alignment is. The rest of the malloc code; avoids this as well, by always aligning to the minimum of the requested; size rounded up to a power of two, or to BLOCKSIZE. Note that we are going to use some memory starting at this initial sbrk; address for the sbrk region malloc descriptor, which is a struct, so the; base address must be suitably aligned. */",MatchSource.CODE_COMMENT,core/clib/src/sbrksup.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/sbrksup.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/sbrksup.c:527,Safety,avoid,avoiding,527,"/* Initialize the default malloc descriptor if this is the first time; a request has been made to use the default sbrk'd region. Since no alignment guarantees are made about the initial value returned; by sbrk, test the initial value and (if necessary) sbrk enough additional; memory to start off with alignment to BLOCKSIZE. We actually only need; it aligned to an alignment suitable for any object, so this is overkill.; But at most it wastes just part of one BLOCKSIZE chunk of memory and; minimizes portability problems by avoiding us having to figure out; what the actual minimal alignment is. The rest of the malloc code; avoids this as well, by always aligning to the minimum of the requested; size rounded up to a power of two, or to BLOCKSIZE. Note that we are going to use some memory starting at this initial sbrk; address for the sbrk region malloc descriptor, which is a struct, so the; base address must be suitably aligned. */",MatchSource.CODE_COMMENT,core/clib/src/sbrksup.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/sbrksup.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/sbrksup.c:628,Safety,avoid,avoids,628,"/* Initialize the default malloc descriptor if this is the first time; a request has been made to use the default sbrk'd region. Since no alignment guarantees are made about the initial value returned; by sbrk, test the initial value and (if necessary) sbrk enough additional; memory to start off with alignment to BLOCKSIZE. We actually only need; it aligned to an alignment suitable for any object, so this is overkill.; But at most it wastes just part of one BLOCKSIZE chunk of memory and; minimizes portability problems by avoiding us having to figure out; what the actual minimal alignment is. The rest of the malloc code; avoids this as well, by always aligning to the minimum of the requested; size rounded up to a power of two, or to BLOCKSIZE. Note that we are going to use some memory starting at this initial sbrk; address for the sbrk region malloc descriptor, which is a struct, so the; base address must be suitably aligned. */",MatchSource.CODE_COMMENT,core/clib/src/sbrksup.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/sbrksup.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/sbrksup.c:211,Testability,test,test,211,"/* Initialize the default malloc descriptor if this is the first time; a request has been made to use the default sbrk'd region. Since no alignment guarantees are made about the initial value returned; by sbrk, test the initial value and (if necessary) sbrk enough additional; memory to start off with alignment to BLOCKSIZE. We actually only need; it aligned to an alignment suitable for any object, so this is overkill.; But at most it wastes just part of one BLOCKSIZE chunk of memory and; minimizes portability problems by avoiding us having to figure out; what the actual minimal alignment is. The rest of the malloc code; avoids this as well, by always aligning to the minimum of the requested; size rounded up to a power of two, or to BLOCKSIZE. Note that we are going to use some memory starting at this initial sbrk; address for the sbrk region malloc descriptor, which is a struct, so the; base address must be suitably aligned. */",MatchSource.CODE_COMMENT,core/clib/src/sbrksup.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/sbrksup.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c:310,Availability,error,error,310,"/* @(#)root/clib:$Id$ */; /* Author: Tomi Salo & Fons Rademakers */; /*; Portable snprintf and vsnprintf implementation. Format:; snprintf(holder, sizeof_holder, format, ...); vsnprintf(holder, sizeof_holder, format, args). Return values:; number of characters written or -1 if truncated or -2 if there is an; error in format specification. Author:; Tomi Salo; Original code. Modified:; Fons Rademakers; Return -1 in case of truncation; Added test program.; M.Asokan; Return -2 in case of error in format specification; Distinguish between missing precision and a specified precision of 0. To test snprintf and vsnprintf compile this file with:; cc -g -DSNTEST `root-config --cflags` snprintf.c -o snprintf; */",MatchSource.CODE_COMMENT,core/clib/src/snprintf.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c:489,Availability,error,error,489,"/* @(#)root/clib:$Id$ */; /* Author: Tomi Salo & Fons Rademakers */; /*; Portable snprintf and vsnprintf implementation. Format:; snprintf(holder, sizeof_holder, format, ...); vsnprintf(holder, sizeof_holder, format, args). Return values:; number of characters written or -1 if truncated or -2 if there is an; error in format specification. Author:; Tomi Salo; Original code. Modified:; Fons Rademakers; Return -1 in case of truncation; Added test program.; M.Asokan; Return -2 in case of error in format specification; Distinguish between missing precision and a specified precision of 0. To test snprintf and vsnprintf compile this file with:; cc -g -DSNTEST `root-config --cflags` snprintf.c -o snprintf; */",MatchSource.CODE_COMMENT,core/clib/src/snprintf.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c:73,Modifiability,Portab,Portable,73,"/* @(#)root/clib:$Id$ */; /* Author: Tomi Salo & Fons Rademakers */; /*; Portable snprintf and vsnprintf implementation. Format:; snprintf(holder, sizeof_holder, format, ...); vsnprintf(holder, sizeof_holder, format, args). Return values:; number of characters written or -1 if truncated or -2 if there is an; error in format specification. Author:; Tomi Salo; Original code. Modified:; Fons Rademakers; Return -1 in case of truncation; Added test program.; M.Asokan; Return -2 in case of error in format specification; Distinguish between missing precision and a specified precision of 0. To test snprintf and vsnprintf compile this file with:; cc -g -DSNTEST `root-config --cflags` snprintf.c -o snprintf; */",MatchSource.CODE_COMMENT,core/clib/src/snprintf.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c:667,Modifiability,config,config,667,"/* @(#)root/clib:$Id$ */; /* Author: Tomi Salo & Fons Rademakers */; /*; Portable snprintf and vsnprintf implementation. Format:; snprintf(holder, sizeof_holder, format, ...); vsnprintf(holder, sizeof_holder, format, args). Return values:; number of characters written or -1 if truncated or -2 if there is an; error in format specification. Author:; Tomi Salo; Original code. Modified:; Fons Rademakers; Return -1 in case of truncation; Added test program.; M.Asokan; Return -2 in case of error in format specification; Distinguish between missing precision and a specified precision of 0. To test snprintf and vsnprintf compile this file with:; cc -g -DSNTEST `root-config --cflags` snprintf.c -o snprintf; */",MatchSource.CODE_COMMENT,core/clib/src/snprintf.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c:443,Testability,test,test,443,"/* @(#)root/clib:$Id$ */; /* Author: Tomi Salo & Fons Rademakers */; /*; Portable snprintf and vsnprintf implementation. Format:; snprintf(holder, sizeof_holder, format, ...); vsnprintf(holder, sizeof_holder, format, args). Return values:; number of characters written or -1 if truncated or -2 if there is an; error in format specification. Author:; Tomi Salo; Original code. Modified:; Fons Rademakers; Return -1 in case of truncation; Added test program.; M.Asokan; Return -2 in case of error in format specification; Distinguish between missing precision and a specified precision of 0. To test snprintf and vsnprintf compile this file with:; cc -g -DSNTEST `root-config --cflags` snprintf.c -o snprintf; */",MatchSource.CODE_COMMENT,core/clib/src/snprintf.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c:593,Testability,test,test,593,"/* @(#)root/clib:$Id$ */; /* Author: Tomi Salo & Fons Rademakers */; /*; Portable snprintf and vsnprintf implementation. Format:; snprintf(holder, sizeof_holder, format, ...); vsnprintf(holder, sizeof_holder, format, args). Return values:; number of characters written or -1 if truncated or -2 if there is an; error in format specification. Author:; Tomi Salo; Original code. Modified:; Fons Rademakers; Return -1 in case of truncation; Added test program.; M.Asokan; Return -2 in case of error in format specification; Distinguish between missing precision and a specified precision of 0. To test snprintf and vsnprintf compile this file with:; cc -g -DSNTEST `root-config --cflags` snprintf.c -o snprintf; */",MatchSource.CODE_COMMENT,core/clib/src/snprintf.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c:17,Testability,test,test,17,/* to be able to test this code on machines that have snprintf */,MatchSource.CODE_COMMENT,core/clib/src/snprintf.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c:3,Modifiability,Portab,Portable,3,/* Portable signed long integer 8 bytes */,MatchSource.CODE_COMMENT,core/clib/src/snprintf.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c:3,Modifiability,Portab,Portable,3,/* Portable unsigned long integer 8 bytes */,MatchSource.CODE_COMMENT,core/clib/src/snprintf.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c:3,Modifiability,Portab,Portable,3,/* Portable signed long integer 8 bytes */,MatchSource.CODE_COMMENT,core/clib/src/snprintf.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c:3,Modifiability,Portab,Portable,3,/* Portable unsigned long integer 8 bytes */,MatchSource.CODE_COMMENT,core/clib/src/snprintf.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c:16,Testability,test,tests,16,/* set of small tests for snprintf() */,MatchSource.CODE_COMMENT,core/clib/src/snprintf.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c:21,Testability,test,test,21,"/*; printf(""Suite of test for snprintf:\n"");; printf(""a_format\n"");; printf(""printf() format\n"");; printf(""snprintf() format\n\n"");; */; /* Checking the field widths */",MatchSource.CODE_COMMENT,core/clib/src/snprintf.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/strlcat.c:737,Integrability,CONTRACT,CONTRACT,737,"/* $OpenBSD: strlcat.c,v 1.11 2003/06/17 21:56:24 millert Exp $ */; /*; * Copyright (c) 1998 Todd C. Miller <Todd.Miller@courtesan.com>; *; * Permission to use, copy, modify, and distribute this software for any; * purpose with or without fee is hereby granted, provided that the above; * copyright notice and this permission notice appear in all copies.; *; * THE SOFTWARE IS PROVIDED ""AS IS"" AND THE AUTHOR DISCLAIMS ALL WARRANTIES; * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF; * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR; * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES; * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN; * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF; * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.; */",MatchSource.CODE_COMMENT,core/clib/src/strlcat.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/strlcat.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/strlcat.c:835,Performance,PERFORM,PERFORMANCE,835,"/* $OpenBSD: strlcat.c,v 1.11 2003/06/17 21:56:24 millert Exp $ */; /*; * Copyright (c) 1998 Todd C. Miller <Todd.Miller@courtesan.com>; *; * Permission to use, copy, modify, and distribute this software for any; * purpose with or without fee is hereby granted, provided that the above; * copyright notice and this permission notice appear in all copies.; *; * THE SOFTWARE IS PROVIDED ""AS IS"" AND THE AUTHOR DISCLAIMS ALL WARRANTIES; * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF; * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR; * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES; * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN; * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF; * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.; */",MatchSource.CODE_COMMENT,core/clib/src/strlcat.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/strlcat.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/strlcpy.c:736,Integrability,CONTRACT,CONTRACT,736,"/* $OpenBSD: strlcpy.c,v 1.8 2003/06/17 21:56:24 millert Exp $ */; /*; * Copyright (c) 1998 Todd C. Miller <Todd.Miller@courtesan.com>; *; * Permission to use, copy, modify, and distribute this software for any; * purpose with or without fee is hereby granted, provided that the above; * copyright notice and this permission notice appear in all copies.; *; * THE SOFTWARE IS PROVIDED ""AS IS"" AND THE AUTHOR DISCLAIMS ALL WARRANTIES; * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF; * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR; * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES; * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN; * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF; * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.; */",MatchSource.CODE_COMMENT,core/clib/src/strlcpy.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/strlcpy.c
https://github.com/root-project/root/tree/v6-32-06/core/clib/src/strlcpy.c:834,Performance,PERFORM,PERFORMANCE,834,"/* $OpenBSD: strlcpy.c,v 1.8 2003/06/17 21:56:24 millert Exp $ */; /*; * Copyright (c) 1998 Todd C. Miller <Todd.Miller@courtesan.com>; *; * Permission to use, copy, modify, and distribute this software for any; * purpose with or without fee is hereby granted, provided that the above; * copyright notice and this permission notice appear in all copies.; *; * THE SOFTWARE IS PROVIDED ""AS IS"" AND THE AUTHOR DISCLAIMS ALL WARRANTIES; * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF; * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR; * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES; * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN; * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF; * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.; */",MatchSource.CODE_COMMENT,core/clib/src/strlcpy.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/strlcpy.c
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/inc/root_std_complex.h:3,Testability,Assert,Asserts,3,"// Asserts about the size of the complex",MatchSource.CODE_COMMENT,core/clingutils/inc/root_std_complex.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/inc/root_std_complex.h
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h:211,Modifiability,variab,variable,211,"//______________________________________________________________________________; // Return (in the argument 'output') a mangled version of the C++ symbol/type (pass as 'input'); // that can be used in C++ as a variable name.",MatchSource.CODE_COMMENT,core/clingutils/res/TClingUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h:368,Integrability,rout,routine,368,"//______________________________________________________________________________; // Return the type normalized for ROOT,; // keeping only the ROOT opaque typedef (Double32_t, etc.) and; // adding default template argument for all types except those explicitly; // requested to be drop by the user.; // Default template for STL collections are not yet removed by this routine.",MatchSource.CODE_COMMENT,core/clingutils/res/TClingUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h:204,Safety,avoid,avoid,204,"//______________________________________________________________________________; // Overload the template for typedefs, because they don't contain; // isThisDeclarationADefinition method. (Use inline to avoid violating ODR)",MatchSource.CODE_COMMENT,core/clingutils/res/TClingUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h:103,Availability,error,error,103,"//______________________________________________________________________________; // Inclusive minimum error level a message needs to get handled",MatchSource.CODE_COMMENT,core/clingutils/res/TClingUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h:117,Integrability,message,message,117,"//______________________________________________________________________________; // Inclusive minimum error level a message needs to get handled",MatchSource.CODE_COMMENT,core/clingutils/res/TClingUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h:30,Availability,error,errors,30,"// Keep track of the warnings/errors we printed.",MatchSource.CODE_COMMENT,core/clingutils/res/TClingUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h:114,Availability,error,error,114,"//______________________________________________________________________________; // Use this function in case an error occured.",MatchSource.CODE_COMMENT,core/clingutils/res/TClingUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h:140,Availability,error,error,140,"//______________________________________________________________________________; // Use this function in case a system (OS or GUI) related error occured.",MatchSource.CODE_COMMENT,core/clingutils/res/TClingUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h:121,Integrability,message,messages,121,"//______________________________________________________________________________; // Use this function for informational messages.",MatchSource.CODE_COMMENT,core/clingutils/res/TClingUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h:122,Availability,error,error,122,"//______________________________________________________________________________; // Use this function in case of a fatal error. It will abort the program.",MatchSource.CODE_COMMENT,core/clingutils/res/TClingUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h:137,Safety,abort,abort,137,"//______________________________________________________________________________; // Use this function in case of a fatal error. It will abort the program.",MatchSource.CODE_COMMENT,core/clingutils/res/TClingUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/complexLinkdef.h:173,Security,checksum,checksum,173,"// IO Rules; // From OSx to ROOT; // There the datamembers are called __re_ and __im_; // #pragma read sourceClass=""complex<float>"" \; // targetClass=""complex<float>"" \; // checksum=[3671150135] \; // source=""float __re_;"" \; // target="""" \; // code=""{ newObj->real(onfile.__re_);}""; //; // #pragma read sourceClass=""complex<float>"" \; // targetClass=""complex<float>"" \; // checksum=[3671150135] \; // source=""float __im_;"" \; // target="""" \; // code=""{ newObj->imag(onfile.__im_);}""",MatchSource.CODE_COMMENT,core/clingutils/src/complexLinkdef.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/complexLinkdef.h
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/complexLinkdef.h:374,Security,checksum,checksum,374,"// IO Rules; // From OSx to ROOT; // There the datamembers are called __re_ and __im_; // #pragma read sourceClass=""complex<float>"" \; // targetClass=""complex<float>"" \; // checksum=[3671150135] \; // source=""float __re_;"" \; // target="""" \; // code=""{ newObj->real(onfile.__re_);}""; //; // #pragma read sourceClass=""complex<float>"" \; // targetClass=""complex<float>"" \; // checksum=[3671150135] \; // source=""float __im_;"" \; // target="""" \; // code=""{ newObj->imag(onfile.__im_);}""",MatchSource.CODE_COMMENT,core/clingutils/src/complexLinkdef.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/complexLinkdef.h
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/RStl.cxx:108,Integrability,wrap,wrappers,108,"// This function writes the TGeneraticClassInfo initialiser; // and the auxiliary functions (new and delete wrappers) for; // each of the STL containers that have been registered",MatchSource.CODE_COMMENT,core/clingutils/src/RStl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/RStl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:547,Integrability,wrap,wrappers,547,"// @(#)root/metautils:$Id$; // Author: Paul Russo, 2009-10-06; /*************************************************************************; * Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //______________________________________________________________________________; // //; // ROOT::TMetaUtils provides utility wrappers around //; // cling, the LLVM-based interpreter. It's an internal set of tools //; // used by TCling and rootcling. //; // //; //______________________________________________________________________________",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:93,Integrability,rout,routine,93,"////////////////////////////////////////////////////////////////////////////////; /// Helper routine to ry hard to avoid looking up in the Cling database as; /// this could enduce an unwanted autoparsing.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:115,Safety,avoid,avoid,115,"////////////////////////////////////////////////////////////////////////////////; /// Helper routine to ry hard to avoid looking up in the Cling database as; /// this could enduce an unwanted autoparsing.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:111,Usability,simpl,simple,111,"////////////////////////////////////////////////////////////////////////////////; /// We assume that we have a simple type:; /// [const] typename[*&][const]",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:161,Availability,redundant,redundant,161,"// Try hard to avoid looking up in the Cling database as this could enduce; // an unwanted autoparsing.; // Note: this is always done by the callers and thus is redundant.; // Maybe replace with",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:15,Safety,avoid,avoid,15,"// Try hard to avoid looking up in the Cling database as this could enduce; // an unwanted autoparsing.; // Note: this is always done by the callers and thus is redundant.; // Maybe replace with",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:161,Safety,redund,redundant,161,"// Try hard to avoid looking up in the Cling database as this could enduce; // an unwanted autoparsing.; // Note: this is always done by the callers and thus is redundant.; // Maybe replace with",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:95,Performance,load,loading,95,"// Since we already check via other means (TClassTable which is populated by; // the dictonary loading, and the gROOT list of classes and enums, which are; // populated via TProtoClass/Enum), we should be able to disable the autoloading; // ... which requires access to libCore or libCling ...",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:260,Security,access,access,260,"// Since we already check via other means (TClassTable which is populated by; // the dictonary loading, and the gROOT list of classes and enums, which are; // populated via TProtoClass/Enum), we should be able to disable the autoloading; // ... which requires access to libCore or libCling ...",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:111,Integrability,rout,routine,111,"////////////////////////////////////////////////////////////////////////////////; // TClassEdit will call this routine as soon as any of its static variable (used; // for caching) is destroyed.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:148,Modifiability,variab,variable,148,"////////////////////////////////////////////////////////////////////////////////; // TClassEdit will call this routine as soon as any of its static variable (used; // for caching) is destroyed.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:3,Safety,Detect,Detect,3,"// Detect if the class has a DirectoryAutoAdd; // Detect if the class or one of its parent has a DirectoryAutoAdd",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:50,Safety,Detect,Detect,50,"// Detect if the class has a DirectoryAutoAdd; // Detect if the class or one of its parent has a DirectoryAutoAdd",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:3,Safety,Detect,Detect,3,"// Detect if the class has a 'new' Merge function.; // Detect if the class or one of its parent has a DirectoryAutoAdd",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:55,Safety,Detect,Detect,55,"// Detect if the class has a 'new' Merge function.; // Detect if the class or one of its parent has a DirectoryAutoAdd",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:3,Safety,Detect,Detect,3,"// Detect if the class has an old fashion Merge function.; // Detect if the class or one of its parent has a DirectoryAutoAdd",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:62,Safety,Detect,Detect,62,"// Detect if the class has an old fashion Merge function.; // Detect if the class or one of its parent has a DirectoryAutoAdd",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:3,Safety,Detect,Detect,3,"// Detect if the class has a 'new' Merge function.; // bool hasMethod = cl.HasMethod(""DirectoryAutoAdd"");; // Detect if the class or one of its parent has a DirectoryAutoAdd",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:110,Safety,Detect,Detect,110,"// Detect if the class has a 'new' Merge function.; // bool hasMethod = cl.HasMethod(""DirectoryAutoAdd"");; // Detect if the class or one of its parent has a DirectoryAutoAdd",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:49,Modifiability,variab,variables,49,"// The CINT based code was filtering away static variables (they are not part of; // the list starting with field_begin in clang), and const enums (which should; // also not be part of this list).; // It was also filtering out the 'G__virtualinfo' artificial member.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:103,Availability,ERROR,ERROR,103,"// std::string type_name;; // type_name = GetQualifiedName( instanceType, *clxx );; // fprintf(stderr,""ERROR: Could not findS TST for %s\n"",type_name.c_str());",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:2,Availability,Error,Error,2,"//Error(0,""Could not find the clang::Type for %s\n"",cl.GetNormalizedName());",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:14,Availability,Error,Error,14,"//TMetaUtils::Error(0,""Could not cast Attribute to AnnotatedAttribute\n"");",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:14,Availability,Error,Error,14,"//TMetaUtils::Error(0,""Could not find property name-value separator (%s)\n"",ROOT::TMetaUtils::PropertyNameValSeparator.c_str());",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:80,Security,access,accessible,80,"// The GenerateInitInstance for STL are not unique and should not be externally accessible",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:13,Security,attack,attack,13,"// Let's now attack regular properties",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:25,Integrability,wrap,wrapper,25,"// write the constructor wrapper only for concrete classes",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:57,Integrability,depend,depend,57,"// This is a non-ClassDef(), complex function - it might depend on state; // and thus we'll need the runtime and cannot determine the result; // statically.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:247,Modifiability,variab,variable,247,"// ClassDef controls the content of Class_Version() but not the return; // expression which is CPP expanded from what the user provided as second; // ClassDef argument. It's usually just be an integer literal but it could; // also be an enum or a variable template for all we know.; // Go through ICE to be more general.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:3,Security,Integrity,Integrity,3,"// Integrity check in case this array changes its size at some point.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:22,Safety,detect,detect,22,"// In particular this detect if the class has a version number.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:480,Testability,test,test,480,"// Don't add the default paramater onto std classes.; // We really need this for __shared_ptr which add a enum constant value which; // is spelled in its 'numeral' form and thus the resulting type name is; // incorrect. We also can used this for any of the STL collections where we; // know we don't want the default argument. For the other members of the; // std namespace this is dubious (because TMetaUtils::GetNormalizedName would; // not drop those defaults). [I.e. the real test ought to be is std and; // name is __shared_ptr or vector or list or set or etc.]",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:80,Availability,error,error,80,"// The substition can fail, in which case there would have been compilation; // error printed on the screen.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:34,Energy Efficiency,allocate,allocate,34,"// If we added default parameter, allocate new type in the AST.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:3,Availability,Error,Error,3,"// Error we only access integer.; //NOTE: *** Need to print an error;; //fprintf(stderr,""*** Datamember %s::%s: size of array (%s) is not an interger\n"",; // member.MemberOf()->Name(), member.Name(), current);",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:63,Availability,error,error,63,"// Error we only access integer.; //NOTE: *** Need to print an error;; //fprintf(stderr,""*** Datamember %s::%s: size of array (%s) is not an interger\n"",; // member.MemberOf()->Name(), member.Name(), current);",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:17,Security,access,access,17,"// Error we only access integer.; //NOTE: *** Need to print an error;; //fprintf(stderr,""*** Datamember %s::%s: size of array (%s) is not an interger\n"",; // member.MemberOf()->Name(), member.Name(), current);",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:44,Availability,down,down,44,"// Let's see if it has already been written down in the; // Streamer.; // Let's see if we already wrote it down in the; // streamer.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:107,Availability,down,down,107,"// Let's see if it has already been written down in the; // Streamer.; // Let's see if we already wrote it down in the; // streamer.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:129,Availability,error,error,129,"// we reached the current data member before; // reaching the index so we have not written it yet!; //NOTE: *** Need to print an error;; //fprintf(stderr,""*** Datamember %s::%s: size of array (%s) has not been defined before the array \n"",; // member.MemberOf()->Name(), member.Name(), current);",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:29,Availability,error,error,29,"//NOTE: *** Need to print an error;; //fprintf(stderr,""*** Datamember %s::%s: size of array (%s) is not int \n"",; // member.MemberOf()->Name(), member.Name(), current);",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:15,Modifiability,variab,variable,15,"// There is no variable by this name in this class, let see; // the base classes!:",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:81,Availability,error,error,81,"// We found a data member but it is the wrong type; //NOTE: *** Need to print an error;; //fprintf(stderr,""*** Datamember %s::%s: size of array (%s) is not int \n"",; // member.MemberOf()->Name(), member.Name(), current);",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:29,Availability,error,error,29,"//NOTE: *** Need to print an error;; //fprintf(stderr,""*** Datamember %s::%s: size of array (%s) is not int \n"",; // member.MemberOf()->Name(), member.Name(), current);",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:29,Availability,error,error,29,"//NOTE: *** Need to print an error;; //fprintf(stderr,""*** Datamember %s::%s: size of array (%s) is a private member of %s \n"",",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:29,Availability,error,error,29,"//NOTE: *** Need to print an error;; //fprintf(stderr,""*** Datamember %s::%s: size of array (%s) is not known \n"",; // member.MemberOf()->Name(), member.Name(), indexvar);",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:2,Performance,Cache,CacheFailures,2,/*CacheFailures*/,MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:189,Deployability,A/B,A/B,189,"// Now headerFID references the last valid system header or the original; // user file.; // Find out how to include it by matching file name to include paths.; // We assume that the file ""/A/B/C/D.h"" can at some level be included as; // ""C/D.h"". Be we cannot know whether that happens to be a different file; // with the same name. Thus we first find the longest stem that can be; // reached, say B/C/D.h. Then we find the shortest one, say C/D.h, that; // points to the same file as the long version. If such a short version; // exists it will be returned. If it doesn't the long version is returned.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:20,Availability,avail,available,20,"// Find the longest available match.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:31,Security,secur,security,31,"// Check if this is a type for security",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:20,Testability,test,tests,20,"// Now the equality tests for non template specialisations.; // The easy cases:; // template <class T=double> class A; or; // template <class T=A<float>> class B;",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:80,Availability,error,error,80,"// The substition can fail, in which case there would have been compilation; // error printed on the screen.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:74,Availability,down,down,74,"// Loop over the template parameters and arguments recursively.; // We go down the two lanes: the one of template parameters (decls) and the; // one of template arguments (QualTypes) in parallel. The former are a; // property of the template, independent of its instantiations.; // The latter are a property of the instance itself.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:157,Integrability,rout,routine,157,"// Stop if the normalized TemplateSpecializationType has less arguments than; // the one index is pointing at.; // We piggy back on the AddDefaultParameters routine basically.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:178,Safety,avoid,avoid,178,"// This is the last template parameter in the template declaration; // but it is signaling that there can be an arbitrary number of arguments; // in the template instance. So to avoid inadvertenly dropping those; // arguments we just process all remaining argument and exit the main loop.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:22,Integrability,rout,routine,22,"// The result of this routine is by definition a fully qualified name. There is an implicit starting '::' at the beginning of the name.; // Depending on how the user typed their code, in particular typedef declarations, we may end up with an explicit '::' being; // part of the result string. For consistency, we must remove it.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:140,Integrability,Depend,Depending,140,"// The result of this routine is by definition a fully qualified name. There is an implicit starting '::' at the beginning of the name.; // Depending on how the user typed their code, in particular typedef declarations, we may end up with an explicit '::' being; // part of the result string. For consistency, we must remove it.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:34,Integrability,rout,routine,34,"// FIXME: We should optimize this routine instead making it do the wrong thing; // returning an empty comment if the decl came from the AST.; // In order to do that we need to: check if the decl has an attribute and; // return the attribute content (including walking the redecl chain) and if; // this is not the case we should try finding it in the header file.; // This will allow us to move the implementation of TCling*Info::Title() in; // TClingDeclInfo.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:20,Performance,optimiz,optimize,20,"// FIXME: We should optimize this routine instead making it do the wrong thing; // returning an empty comment if the decl came from the AST.; // In order to do that we need to: check if the decl has an attribute and; // return the attribute content (including walking the redecl chain) and if; // this is not the case we should try finding it in the header file.; // This will allow us to move the implementation of TCling*Info::Title() in; // TClingDeclInfo.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:17,Energy Efficiency,reduce,reduce,17,"// Might need to reduce it to shared_ptr and STL collection.s",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:52,Security,hash,hashtable,52,"// Return true if the decl is of type.; // A proper hashtable for caching results would be the ideal solution; // 1) Only one lookup per type; // 2) No string comparison; // We may use a map which becomes an unordered map if c++11 is enabled?",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:29,Testability,assert,assert,29,"// this would be probably an assert given that this state is not reachable unless a mistake is somewhere",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:8,Integrability,rout,routine,8,"// This routine could be enhanced to also support:; //; // testAlloc: if true, we test allocator, if it is not default result is negative; // result: 0 : not stl container; // abs(result): code of container 1=vector,2=list,3=deque,4=map; // 5=multimap,6=set,7=multiset; // positive val: we have a vector or list with default allocator to any depth; // like vector<list<vector<int>>>; // negative val: STL container other than vector or list, or non default allocator; // For example: vector<deque<int>> has answer -1",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:25,Modifiability,enhance,enhanced,25,"// This routine could be enhanced to also support:; //; // testAlloc: if true, we test allocator, if it is not default result is negative; // result: 0 : not stl container; // abs(result): code of container 1=vector,2=list,3=deque,4=map; // 5=multimap,6=set,7=multiset; // positive val: we have a vector or list with default allocator to any depth; // like vector<list<vector<int>>>; // negative val: STL container other than vector or list, or non default allocator; // For example: vector<deque<int>> has answer -1",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:59,Testability,test,testAlloc,59,"// This routine could be enhanced to also support:; //; // testAlloc: if true, we test allocator, if it is not default result is negative; // result: 0 : not stl container; // abs(result): code of container 1=vector,2=list,3=deque,4=map; // 5=multimap,6=set,7=multiset; // positive val: we have a vector or list with default allocator to any depth; // like vector<list<vector<int>>>; // negative val: STL container other than vector or list, or non default allocator; // For example: vector<deque<int>> has answer -1",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:82,Testability,test,test,82,"// This routine could be enhanced to also support:; //; // testAlloc: if true, we test allocator, if it is not default result is negative; // result: 0 : not stl container; // abs(result): code of container 1=vector,2=list,3=deque,4=map; // 5=multimap,6=set,7=multiset; // positive val: we have a vector or list with default allocator to any depth; // like vector<list<vector<int>>>; // negative val: STL container other than vector or list, or non default allocator; // For example: vector<deque<int>> has answer -1",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:60,Usability,guid,guiding,60,"// if there is no typedef in instance then there is nothing guiding any; // template parameter typedef replacement.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:32,Availability,redundant,redundant,32,/* the following is likely just redundant */,MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:32,Safety,redund,redundant,32,/* the following is likely just redundant */,MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:26,Energy Efficiency,allocate,allocate,26,"// If desugaring happened allocate new type in the AST.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:13,Usability,simpl,simple,13,"// inline or simple namespace",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:42,Integrability,inject,inject,42,"// If this is an explicit specialization, inject it into cling, too, such that it can have; // externalLexicalStorage, see TCling.cxx's ExtVisibleStorageAdder::VisitClassTemplateSpecializationDecl.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:42,Security,inject,inject,42,"// If this is an explicit specialization, inject it into cling, too, such that it can have; // externalLexicalStorage, see TCling.cxx's ExtVisibleStorageAdder::VisitClassTemplateSpecializationDecl.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:20,Safety,avoid,avoid,20,"// Add a \n here to avoid long lines which contain duplications, for example (from MathCore):; // namespace ROOT { namespace Math { class IBaseFunctionMultiDim; } }namespace ROOT { namespace Fit { template <typename FunType> class Chi2FCN; } }; // namespace ROOT { namespace Math { class IGradientFunctionMultiDim; } }namespace ROOT { namespace Fit { template <typename FunType> class Chi2FCN; } }",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:14,Safety,avoid,avoid,14,"// Heuristic: avoid entities like myclass<myType1, myType2::xyz>",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:77,Usability,simpl,simple,77,"// Start Recursion if the underlying type is a TypedefNameDecl; // Note: the simple cast w/o the getSingleStepDesugaredType call; // does not work in case the typedef is in a namespace.",MatchSource.CODE_COMMENT,core/clingutils/src/TClingUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/test/TClingUtilsTests.cxx:70,Testability,test,tests,70,"/// \file TClingUtilsTests.cxx; ///; /// \brief The file contain unit tests which test the TClingUtils.h; ///; /// \author Vassil Vassilev <vvasilev@cern.ch>; ///; /// \date Aug, 2019; ///; /*************************************************************************; * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/clingutils/test/TClingUtilsTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/test/TClingUtilsTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/test/TClingUtilsTests.cxx:82,Testability,test,test,82,"/// \file TClingUtilsTests.cxx; ///; /// \brief The file contain unit tests which test the TClingUtils.h; ///; /// \author Vassil Vassilev <vvasilev@cern.ch>; ///; /// \date Aug, 2019; ///; /*************************************************************************; * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/clingutils/test/TClingUtilsTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/test/TClingUtilsTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/test/TClingUtilsTests.cxx:49,Modifiability,variab,variable,49,"// Test for converting a string to a valid C/C++ variable name",MatchSource.CODE_COMMENT,core/clingutils/test/TClingUtilsTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/test/TClingUtilsTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/clingutils/test/TClingUtilsTests.cxx:3,Testability,Test,Test,3,"// Test for converting a string to a valid C/C++ variable name",MatchSource.CODE_COMMENT,core/clingutils/test/TClingUtilsTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/test/TClingUtilsTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TBits.h:3,Deployability,Update,Update,3,"// Update the allocated size.",MatchSource.CODE_COMMENT,core/cont/inc/TBits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TBits.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TBits.h:14,Energy Efficiency,allocate,allocated,14,"// Update the allocated size.",MatchSource.CODE_COMMENT,core/cont/inc/TBits.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TBits.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TBtree.h:127,Modifiability,inherit,inherits,127,"//////////////////////////////////////////////////////////////////////////; // //; // TBtree //; // //; // Btree class. TBtree inherits from the TSeqCollection ABC. //; // //; // For a more extensive algorithmic description see the TBtree source. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/TBtree.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TBtree.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TBtree.h:30,Security,access,access,30,"//order*2+1 (assumes a memory access is; //cheaper than a multiply and increment by one",MatchSource.CODE_COMMENT,core/cont/inc/TBtree.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TBtree.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TBtree.h:152,Deployability,update,updated,152,"// for inner node 1 <= fLast <= fInnerMaxIndex; // for leaf node 1 <= fLast <= fLeafMaxIndex; // (fLast==0 only temporarily while the tree is being; // updated)",MatchSource.CODE_COMMENT,core/cont/inc/TBtree.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TBtree.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:155,Modifiability,inherit,inherits,155,"//////////////////////////////////////////////////////////////////////////; // //; // TCollection //; // //; // Collection abstract base class. This class inherits from TObject //; // because we want to be able to have collections of collections. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/TCollection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:268,Performance,concurren,concurrent,268,"// #define R__CHECK_COLLECTION_MULTI_ACCESS; // When R__CHECK_COLLECTION_MULTI_ACCESS is turned on (defined),; // the normal (not locked) ROOT TCollections are instrumented with a; // pseudo read-write lock which does not halt the execution but detects; // and report concurrent access to the same collections.; // Multiple readers are allowed.; // Multiple concurrent writer is reported as a Conflict; // Readers access while a write is running is reported as Conflict; // Re-entrant writing call by the same Writer thread are allowed.; // Entering a writing section by a single Reader thread is allowed.",MatchSource.CODE_COMMENT,core/cont/inc/TCollection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:358,Performance,concurren,concurrent,358,"// #define R__CHECK_COLLECTION_MULTI_ACCESS; // When R__CHECK_COLLECTION_MULTI_ACCESS is turned on (defined),; // the normal (not locked) ROOT TCollections are instrumented with a; // pseudo read-write lock which does not halt the execution but detects; // and report concurrent access to the same collections.; // Multiple readers are allowed.; // Multiple concurrent writer is reported as a Conflict; // Readers access while a write is running is reported as Conflict; // Re-entrant writing call by the same Writer thread are allowed.; // Entering a writing section by a single Reader thread is allowed.",MatchSource.CODE_COMMENT,core/cont/inc/TCollection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:245,Safety,detect,detects,245,"// #define R__CHECK_COLLECTION_MULTI_ACCESS; // When R__CHECK_COLLECTION_MULTI_ACCESS is turned on (defined),; // the normal (not locked) ROOT TCollections are instrumented with a; // pseudo read-write lock which does not halt the execution but detects; // and report concurrent access to the same collections.; // Multiple readers are allowed.; // Multiple concurrent writer is reported as a Conflict; // Readers access while a write is running is reported as Conflict; // Re-entrant writing call by the same Writer thread are allowed.; // Entering a writing section by a single Reader thread is allowed.",MatchSource.CODE_COMMENT,core/cont/inc/TCollection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:279,Security,access,access,279,"// #define R__CHECK_COLLECTION_MULTI_ACCESS; // When R__CHECK_COLLECTION_MULTI_ACCESS is turned on (defined),; // the normal (not locked) ROOT TCollections are instrumented with a; // pseudo read-write lock which does not halt the execution but detects; // and report concurrent access to the same collections.; // Multiple readers are allowed.; // Multiple concurrent writer is reported as a Conflict; // Readers access while a write is running is reported as Conflict; // Re-entrant writing call by the same Writer thread are allowed.; // Entering a writing section by a single Reader thread is allowed.",MatchSource.CODE_COMMENT,core/cont/inc/TCollection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:414,Security,access,access,414,"// #define R__CHECK_COLLECTION_MULTI_ACCESS; // When R__CHECK_COLLECTION_MULTI_ACCESS is turned on (defined),; // the normal (not locked) ROOT TCollections are instrumented with a; // pseudo read-write lock which does not halt the execution but detects; // and report concurrent access to the same collections.; // Multiple readers are allowed.; // Multiple concurrent writer is reported as a Conflict; // Readers access while a write is running is reported as Conflict; // Re-entrant writing call by the same Writer thread are allowed.; // Entering a writing section by a single Reader thread is allowed.",MatchSource.CODE_COMMENT,core/cont/inc/TCollection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:22,Safety,detect,detect,22,"//! Special 'lock' to detect multiple access to a collection.",MatchSource.CODE_COMMENT,core/cont/inc/TCollection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:38,Security,access,access,38,"//! Special 'lock' to detect multiple access to a collection.",MatchSource.CODE_COMMENT,core/cont/inc/TCollection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:98,Energy Efficiency,allocate,allocated,98,"/// Return the *capacity* of the collection, i.e. the current total amount of space that has been allocated so far.; /// Same as `Capacity`. Use `GetEntries` to get the number of elements currently in the collection.",MatchSource.CODE_COMMENT,core/cont/inc/TCollection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:115,Integrability,wrap,wrapper,115,"//////////////////////////////////////////////////////////////////////////; // //; // TIter //; // //; // Iterator wrapper. Type of iterator used depends on type of //; // collection. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/TCollection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:146,Integrability,depend,depends,146,"//////////////////////////////////////////////////////////////////////////; // //; // TIter //; // //; // Iterator wrapper. Type of iterator used depends on type of //; // collection. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/TCollection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:11,Integrability,wrap,wrapper,11,"//Iterator wrapper",MatchSource.CODE_COMMENT,core/cont/inc/TCollection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:136,Modifiability,inherit,inherits,136,"// namespace Internal; /// Special implementation of ROOT::RRangeCast for TCollection, including a; /// check that the cast target type inherits from TObject and a new constructor; /// that takes the TCollection by pointer.; /// \tparam T The new type to convert to.; /// \tparam isDynamic If `true`, `dynamic_cast` is used, otherwise `static_cast` is used.",MatchSource.CODE_COMMENT,core/cont/inc/TCollection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:34,Energy Efficiency,adapt,adapter,34,"/// @brief TRangeStaticCast is an adapter class that allows the typed iteration; /// through a TCollection. This requires the collection to contain elements; /// of the type requested (or a derived class). Any deviation from this expectation; /// will only be caught/reported by an assert in debug builds.; ///; /// This is best used with a TClonesArray, for other cases prefered TRangeDynCast.; ///; /// The typical use is:; /// ```{.cpp}; /// for(auto bcl : TRangeStaticCast<TBaseClass>( *tbaseClassClonesArrayPtr )) {; /// ... use bcl as a TBaseClass*; /// }; /// for(auto bcl : TRangeStaticCast<TBaseClass>( tbaseClassClonesArrayPtr )) {; /// ... use bcl as a TBaseClass*; /// }; /// ```; /// \tparam T The new type to convert to.",MatchSource.CODE_COMMENT,core/cont/inc/TCollection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:34,Integrability,adapter,adapter,34,"/// @brief TRangeStaticCast is an adapter class that allows the typed iteration; /// through a TCollection. This requires the collection to contain elements; /// of the type requested (or a derived class). Any deviation from this expectation; /// will only be caught/reported by an assert in debug builds.; ///; /// This is best used with a TClonesArray, for other cases prefered TRangeDynCast.; ///; /// The typical use is:; /// ```{.cpp}; /// for(auto bcl : TRangeStaticCast<TBaseClass>( *tbaseClassClonesArrayPtr )) {; /// ... use bcl as a TBaseClass*; /// }; /// for(auto bcl : TRangeStaticCast<TBaseClass>( tbaseClassClonesArrayPtr )) {; /// ... use bcl as a TBaseClass*; /// }; /// ```; /// \tparam T The new type to convert to.",MatchSource.CODE_COMMENT,core/cont/inc/TCollection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:34,Modifiability,adapt,adapter,34,"/// @brief TRangeStaticCast is an adapter class that allows the typed iteration; /// through a TCollection. This requires the collection to contain elements; /// of the type requested (or a derived class). Any deviation from this expectation; /// will only be caught/reported by an assert in debug builds.; ///; /// This is best used with a TClonesArray, for other cases prefered TRangeDynCast.; ///; /// The typical use is:; /// ```{.cpp}; /// for(auto bcl : TRangeStaticCast<TBaseClass>( *tbaseClassClonesArrayPtr )) {; /// ... use bcl as a TBaseClass*; /// }; /// for(auto bcl : TRangeStaticCast<TBaseClass>( tbaseClassClonesArrayPtr )) {; /// ... use bcl as a TBaseClass*; /// }; /// ```; /// \tparam T The new type to convert to.",MatchSource.CODE_COMMENT,core/cont/inc/TCollection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:282,Testability,assert,assert,282,"/// @brief TRangeStaticCast is an adapter class that allows the typed iteration; /// through a TCollection. This requires the collection to contain elements; /// of the type requested (or a derived class). Any deviation from this expectation; /// will only be caught/reported by an assert in debug builds.; ///; /// This is best used with a TClonesArray, for other cases prefered TRangeDynCast.; ///; /// The typical use is:; /// ```{.cpp}; /// for(auto bcl : TRangeStaticCast<TBaseClass>( *tbaseClassClonesArrayPtr )) {; /// ... use bcl as a TBaseClass*; /// }; /// for(auto bcl : TRangeStaticCast<TBaseClass>( tbaseClassClonesArrayPtr )) {; /// ... use bcl as a TBaseClass*; /// }; /// ```; /// \tparam T The new type to convert to.",MatchSource.CODE_COMMENT,core/cont/inc/TCollection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:50,Energy Efficiency,adapt,adapter,50,"// namespace ROOT; /// @brief TRangeDynCast is an adapter class that allows the typed iteration; /// through a TCollection.; ///; /// The typical use is:; /// ```{.cpp}; /// for(auto bcl : TRangeDynCast<TBaseClass>( *cl->GetListOfBases() )) {; /// if (!bcl) continue;; /// ... use bcl as a TBaseClass*; /// }; /// for(auto bcl : TRangeDynCast<TBaseClass>( cl->GetListOfBases() )) {; /// if (!bcl) continue;; /// ... use bcl as a TBaseClass*; /// }; /// ```; /// \tparam T The new type to convert to.",MatchSource.CODE_COMMENT,core/cont/inc/TCollection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:50,Integrability,adapter,adapter,50,"// namespace ROOT; /// @brief TRangeDynCast is an adapter class that allows the typed iteration; /// through a TCollection.; ///; /// The typical use is:; /// ```{.cpp}; /// for(auto bcl : TRangeDynCast<TBaseClass>( *cl->GetListOfBases() )) {; /// if (!bcl) continue;; /// ... use bcl as a TBaseClass*; /// }; /// for(auto bcl : TRangeDynCast<TBaseClass>( cl->GetListOfBases() )) {; /// if (!bcl) continue;; /// ... use bcl as a TBaseClass*; /// }; /// ```; /// \tparam T The new type to convert to.",MatchSource.CODE_COMMENT,core/cont/inc/TCollection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:50,Modifiability,adapt,adapter,50,"// namespace ROOT; /// @brief TRangeDynCast is an adapter class that allows the typed iteration; /// through a TCollection.; ///; /// The typical use is:; /// ```{.cpp}; /// for(auto bcl : TRangeDynCast<TBaseClass>( *cl->GetListOfBases() )) {; /// if (!bcl) continue;; /// ... use bcl as a TBaseClass*; /// }; /// for(auto bcl : TRangeDynCast<TBaseClass>( cl->GetListOfBases() )) {; /// if (!bcl) continue;; /// ... use bcl as a TBaseClass*; /// }; /// ```; /// \tparam T The new type to convert to.",MatchSource.CODE_COMMENT,core/cont/inc/TCollection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h:112,Security,access,access,112,"/** @class ROOT::Detail::TCollectionProxyInfo::Iterators; *; * Small helper to implement the function to create,access and destroy; * iterators.; *; **/",MatchSource.CODE_COMMENT,core/cont/inc/TCollectionProxyInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h:44,Safety,avoid,avoid,44,"// For Vector we take an extra short cut to avoid derefencing; // the iterator all the time and redefine the 'address' of the; // iterator as the iterator itself. This requires special handling; // in the looper (see TStreamerInfoAction) but is much faster.",MatchSource.CODE_COMMENT,core/cont/inc/TCollectionProxyInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h:26,Safety,Safe,Safe,26,"// coverity[past_the_end] Safe on other platforms",MatchSource.CODE_COMMENT,core/cont/inc/TCollectionProxyInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h:338,Deployability,update,update,338,"// Should not be used.; // In the case of vector, so that the I/O can perform better,; // the begin_arena and the end_arena are *not* set to the; // address of any iterator rather they are set to the value of; // the beginning (and end) address of the vector's data.; // Hence this routine (which takes the value of fBegin) can; // *not* update where its points to (which in the case of vector; // would require update the value of fBegin).",MatchSource.CODE_COMMENT,core/cont/inc/TCollectionProxyInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h:412,Deployability,update,update,412,"// Should not be used.; // In the case of vector, so that the I/O can perform better,; // the begin_arena and the end_arena are *not* set to the; // address of any iterator rather they are set to the value of; // the beginning (and end) address of the vector's data.; // Hence this routine (which takes the value of fBegin) can; // *not* update where its points to (which in the case of vector; // would require update the value of fBegin).",MatchSource.CODE_COMMENT,core/cont/inc/TCollectionProxyInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h:282,Integrability,rout,routine,282,"// Should not be used.; // In the case of vector, so that the I/O can perform better,; // the begin_arena and the end_arena are *not* set to the; // address of any iterator rather they are set to the value of; // the beginning (and end) address of the vector's data.; // Hence this routine (which takes the value of fBegin) can; // *not* update where its points to (which in the case of vector; // would require update the value of fBegin).",MatchSource.CODE_COMMENT,core/cont/inc/TCollectionProxyInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h:70,Performance,perform,perform,70,"// Should not be used.; // In the case of vector, so that the I/O can perform better,; // the begin_arena and the end_arena are *not* set to the; // address of any iterator rather they are set to the value of; // the beginning (and end) address of the vector's data.; // Hence this routine (which takes the value of fBegin) can; // *not* update where its points to (which in the case of vector; // would require update the value of fBegin).",MatchSource.CODE_COMMENT,core/cont/inc/TCollectionProxyInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h:97,Security,access,accesses,97,/** @class ROOT::Detail::TCollectionProxyInfo::Type; *; * Small helper to encapsulate basic data accesses for; * all STL continers.; *; * @author M.Frank; * @version 1.0; * @date 10/10/2004; */,MatchSource.CODE_COMMENT,core/cont/inc/TCollectionProxyInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h:109,Security,access,accesses,109,"/** @class ROOT::Detail::TCollectionProxyInfo::Pushback; *; * Small helper to encapsulate all necessary data accesses for; * containers like vector, list, deque; *; * @author M.Frank; * @version 1.0; * @date 10/10/2004; */",MatchSource.CODE_COMMENT,core/cont/inc/TCollectionProxyInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h:110,Security,access,accesses,110,/** @class ROOT::Detail::TCollectionProxyInfo::Pushfront; *; * Small helper to encapsulate all necessary data accesses for; * containers like forward_list; *; * @author D.Piparo; * @version 1.0; * @date 26/02/2015; */,MatchSource.CODE_COMMENT,core/cont/inc/TCollectionProxyInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h:107,Security,access,accesses,107,"/** @class ROOT::Detail::TCollectionProxyInfo::Insert; *; * Small helper to encapsulate all necessary data accesses for; * containers like set, multiset etc.; *; * @author M.Frank; * @version 1.0; * @date 10/10/2004; */",MatchSource.CODE_COMMENT,core/cont/inc/TCollectionProxyInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h:110,Security,access,accesses,110,"/** @class ROOT::Detail::TCollectionProxyInfo::MapInsert; *; * Small helper to encapsulate all necessary data accesses for; * containers like set, multiset etc.; *; * @author M.Frank; * @version 1.0; * @date 10/10/2004; */",MatchSource.CODE_COMMENT,core/cont/inc/TCollectionProxyInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h:272,Energy Efficiency,allocate,allocated,272,"// begin_arena and end_arena should contain the location of memory arena of size fgIteratorSize.; // If the collection iterator are of that size or less, the iterators will be constructed in place in those location (new with placement); // Otherwise the iterators will be allocated via a regular new and their address returned by modifying the value of begin_arena and end_arena.",MatchSource.CODE_COMMENT,core/cont/inc/TCollectionProxyInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h:300,Energy Efficiency,allocate,allocated,300,"// Copy the iterator source, into dest. dest should contain should contain the location of memory arena of size fgIteratorSize.; // If the collection iterator are of that size or less, the iterator will be constructed in place in this location (new with placement); // Otherwise the iterator will be allocated via a regular new and its address returned by modifying the value of dest.",MatchSource.CODE_COMMENT,core/cont/inc/TCollectionProxyInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollectionProxyInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashList.h:453,Modifiability,inherit,inheriting,453,"//////////////////////////////////////////////////////////////////////////; // //; // THashList //; // //; // THashList implements a hybrid collection class consisting of a //; // hash table and a list to store TObject's. The hash table is used for //; // quick access and lookup of objects while the list allows the objects //; // to be ordered. The hash value is calculated using the value returned //; // by the TObject's Hash() function. Each class inheriting from TObject //; // can override Hash() as it sees fit. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/THashList.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashList.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashList.h:180,Security,hash,hash,180,"//////////////////////////////////////////////////////////////////////////; // //; // THashList //; // //; // THashList implements a hybrid collection class consisting of a //; // hash table and a list to store TObject's. The hash table is used for //; // quick access and lookup of objects while the list allows the objects //; // to be ordered. The hash value is calculated using the value returned //; // by the TObject's Hash() function. Each class inheriting from TObject //; // can override Hash() as it sees fit. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/THashList.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashList.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashList.h:226,Security,hash,hash,226,"//////////////////////////////////////////////////////////////////////////; // //; // THashList //; // //; // THashList implements a hybrid collection class consisting of a //; // hash table and a list to store TObject's. The hash table is used for //; // quick access and lookup of objects while the list allows the objects //; // to be ordered. The hash value is calculated using the value returned //; // by the TObject's Hash() function. Each class inheriting from TObject //; // can override Hash() as it sees fit. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/THashList.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashList.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashList.h:262,Security,access,access,262,"//////////////////////////////////////////////////////////////////////////; // //; // THashList //; // //; // THashList implements a hybrid collection class consisting of a //; // hash table and a list to store TObject's. The hash table is used for //; // quick access and lookup of objects while the list allows the objects //; // to be ordered. The hash value is calculated using the value returned //; // by the TObject's Hash() function. Each class inheriting from TObject //; // can override Hash() as it sees fit. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/THashList.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashList.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashList.h:351,Security,hash,hash,351,"//////////////////////////////////////////////////////////////////////////; // //; // THashList //; // //; // THashList implements a hybrid collection class consisting of a //; // hash table and a list to store TObject's. The hash table is used for //; // quick access and lookup of objects while the list allows the objects //; // to be ordered. The hash value is calculated using the value returned //; // by the TObject's Hash() function. Each class inheriting from TObject //; // can override Hash() as it sees fit. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/THashList.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashList.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashList.h:425,Security,Hash,Hash,425,"//////////////////////////////////////////////////////////////////////////; // //; // THashList //; // //; // THashList implements a hybrid collection class consisting of a //; // hash table and a list to store TObject's. The hash table is used for //; // quick access and lookup of objects while the list allows the objects //; // to be ordered. The hash value is calculated using the value returned //; // by the TObject's Hash() function. Each class inheriting from TObject //; // can override Hash() as it sees fit. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/THashList.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashList.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashList.h:497,Security,Hash,Hash,497,"//////////////////////////////////////////////////////////////////////////; // //; // THashList //; // //; // THashList implements a hybrid collection class consisting of a //; // hash table and a list to store TObject's. The hash table is used for //; // quick access and lookup of objects while the list allows the objects //; // to be ordered. The hash value is calculated using the value returned //; // by the TObject's Hash() function. Each class inheriting from TObject //; // can override Hash() as it sees fit. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/THashList.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashList.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashList.h:2,Security,Hash,Hashtable,2,"//Hashtable used for quick lookup of objects",MatchSource.CODE_COMMENT,core/cont/inc/THashList.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashList.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashList.h:26,Security,hash,hashtable,26,"//Doubly linked list with hashtable for lookup",MatchSource.CODE_COMMENT,core/cont/inc/THashList.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashList.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h:279,Modifiability,inherit,inheriting,279,"//////////////////////////////////////////////////////////////////////////; // //; // THashTable //; // //; // THashTable implements a hash table to store TObject's. The hash //; // value is calculated using the value returned by the TObject's //; // Hash() function. Each class inheriting from TObject can override //; // Hash() as it sees fit. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/THashTable.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h:135,Security,hash,hash,135,"//////////////////////////////////////////////////////////////////////////; // //; // THashTable //; // //; // THashTable implements a hash table to store TObject's. The hash //; // value is calculated using the value returned by the TObject's //; // Hash() function. Each class inheriting from TObject can override //; // Hash() as it sees fit. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/THashTable.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h:170,Security,hash,hash,170,"//////////////////////////////////////////////////////////////////////////; // //; // THashTable //; // //; // THashTable implements a hash table to store TObject's. The hash //; // value is calculated using the value returned by the TObject's //; // Hash() function. Each class inheriting from TObject can override //; // Hash() as it sees fit. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/THashTable.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h:251,Security,Hash,Hash,251,"//////////////////////////////////////////////////////////////////////////; // //; // THashTable //; // //; // THashTable implements a hash table to store TObject's. The hash //; // value is calculated using the value returned by the TObject's //; // Hash() function. Each class inheriting from TObject can override //; // Hash() as it sees fit. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/THashTable.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h:323,Security,Hash,Hash,323,"//////////////////////////////////////////////////////////////////////////; // //; // THashTable //; // //; // THashTable implements a hash table to store TObject's. The hash //; // value is calculated using the value returned by the TObject's //; // Hash() function. Each class inheriting from TObject can override //; // Hash() as it sees fit. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/THashTable.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h:2,Security,Hash,Hash,2,"//Hash table (table of lists)",MatchSource.CODE_COMMENT,core/cont/inc/THashTable.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h:4,Security,hash,hash,4,"//A hash table",MatchSource.CODE_COMMENT,core/cont/inc/THashTable.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h:127,Security,hash,hash,127,"//////////////////////////////////////////////////////////////////////////; // //; // THashTableIter //; // //; // Iterator of hash table. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/THashTable.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h:2,Security,hash,hash,2,"//hash table being iterated",MatchSource.CODE_COMMENT,core/cont/inc/THashTable.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h:2,Security,Hash,Hash,2,"//Hash table iterator",MatchSource.CODE_COMMENT,core/cont/inc/THashTable.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TIterator.h:169,Integrability,interface,interface,169,"//////////////////////////////////////////////////////////////////////////; // //; // TIterator //; // //; // Iterator abstract base class. This base class provides the interface //; // for collection iterators. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/TIterator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TIterator.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TMap.h:193,Energy Efficiency,efficient,efficient,193,"//////////////////////////////////////////////////////////////////////////; // //; // TMap //; // //; // TMap implements an associative array of (key,value) pairs using a //; // hash table for efficient retrieval (therefore TMap does not conserve //; // the order of the entries). The hash value is calculated //; // using the value returned by the keys Hash() function. Both key and //; // value need to inherit from TObject. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/TMap.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TMap.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TMap.h:405,Modifiability,inherit,inherit,405,"//////////////////////////////////////////////////////////////////////////; // //; // TMap //; // //; // TMap implements an associative array of (key,value) pairs using a //; // hash table for efficient retrieval (therefore TMap does not conserve //; // the order of the entries). The hash value is calculated //; // using the value returned by the keys Hash() function. Both key and //; // value need to inherit from TObject. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/TMap.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TMap.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TMap.h:178,Security,hash,hash,178,"//////////////////////////////////////////////////////////////////////////; // //; // TMap //; // //; // TMap implements an associative array of (key,value) pairs using a //; // hash table for efficient retrieval (therefore TMap does not conserve //; // the order of the entries). The hash value is calculated //; // using the value returned by the keys Hash() function. Both key and //; // value need to inherit from TObject. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/TMap.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TMap.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TMap.h:285,Security,hash,hash,285,"//////////////////////////////////////////////////////////////////////////; // //; // TMap //; // //; // TMap implements an associative array of (key,value) pairs using a //; // hash table for efficient retrieval (therefore TMap does not conserve //; // the order of the entries). The hash value is calculated //; // using the value returned by the keys Hash() function. Both key and //; // value need to inherit from TObject. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/TMap.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TMap.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TMap.h:354,Security,Hash,Hash,354,"//////////////////////////////////////////////////////////////////////////; // //; // TMap //; // //; // TMap implements an associative array of (key,value) pairs using a //; // hash table for efficient retrieval (therefore TMap does not conserve //; // the order of the entries). The hash value is calculated //; // using the value returned by the keys Hash() function. Both key and //; // value need to inherit from TObject. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/TMap.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TMap.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TMap.h:2,Security,Hash,Hash,2,"//Hash table used to store TPair's",MatchSource.CODE_COMMENT,core/cont/inc/TMap.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TMap.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TObjectTable.h:444,Deployability,toggle,toggle,444,"//////////////////////////////////////////////////////////////////////////; // //; // TObjectTable //; // //; // This class registers all instances of TObject and its derived //; // classes in a hash table. The Add() and Remove() members are called //; // from the TObject ctor and dtor, repectively. Using the Print() //; // member one can see all currently active objects in the system. //; // Using the runtime flag: Root.ObjectStat one can toggle this feature //; // on or off. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/TObjectTable.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TObjectTable.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TObjectTable.h:195,Security,hash,hash,195,"//////////////////////////////////////////////////////////////////////////; // //; // TObjectTable //; // //; // This class registers all instances of TObject and its derived //; // classes in a hash table. The Add() and Remove() members are called //; // from the TObject ctor and dtor, repectively. Using the Print() //; // member one can see all currently active objects in the system. //; // Using the runtime flag: Root.ObjectStat one can toggle this feature //; // on or off. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/TObjectTable.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TObjectTable.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TRefTable.h:14,Energy Efficiency,allocate,allocated,14,"//![fNumPIDs] allocated size of array fParentIDs for each ProcessID",MatchSource.CODE_COMMENT,core/cont/inc/TRefTable.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TRefTable.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TRefTable.h:4,Performance,cache,cache,4,"//! cache of pid to index in fProcessGUIDs",MatchSource.CODE_COMMENT,core/cont/inc/TRefTable.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TRefTable.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TSortedList.h:162,Modifiability,inherit,inheriting,162,"//////////////////////////////////////////////////////////////////////////; // //; // TSortedList //; // //; // A sorted doubly linked list. All sortable classes inheriting from //; // TObject can be inserted in a TSortedList. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/TSortedList.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TSortedList.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h:132,Integrability,interface,interface,132,"//////////////////////////////////////////////////////////////////////////; // //; // TVirtualCollectionProxy //; // //; // Virtual interface of a proxy object for a collection class //; // In particular this is used to implement splitting, emulation, //; // and TTreeFormula access to STL containers. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/TVirtualCollectionProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h:276,Security,access,access,276,"//////////////////////////////////////////////////////////////////////////; // //; // TVirtualCollectionProxy //; // //; // Virtual interface of a proxy object for a collection class //; // In particular this is used to implement splitting, emulation, //; // and TTreeFormula access to STL containers. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/cont/inc/TVirtualCollectionProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h:56,Integrability,interface,interface,56,"// Macro indicating the version of the Collection Proxy interface followed; // by this ROOT build (See also Reflex/Builder/CollectionProxy.h).",MatchSource.CODE_COMMENT,core/cont/inc/TVirtualCollectionProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h:82,Integrability,interface,interface,82,"// clang-format off; /**; \class TVirtualCollectionProxy; \brief Defines a common interface to inspect/change the contents of an object that represents a collection. Specifically, an object of a class that derives from TVirtualCollectionProxy relays accesses to any object that; matches the proxied collection type.; The interface provides two families of functions: (i) for direct manipulation, e.g. `Insert()` or `At()`; and; (ii) iterator-based, e.g. `GetFunctionCreateIterators()` or `GetFunctionNext()`.; TVirtualCollectionProxy objects are stateful; in particular, many functions require to set the object to operate; on via `PushProxy()` / `PopProxy()`. The `TPushPop` RAII class is provided for convenience.; A collection proxy for a given class can be permanently set using `TClass::CopyCollectionProxy()`.; The `Generate()` function should be overridden in derived classes to return a clean object of the most-derived class.; */; // clang-format on",MatchSource.CODE_COMMENT,core/cont/inc/TVirtualCollectionProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h:321,Integrability,interface,interface,321,"// clang-format off; /**; \class TVirtualCollectionProxy; \brief Defines a common interface to inspect/change the contents of an object that represents a collection. Specifically, an object of a class that derives from TVirtualCollectionProxy relays accesses to any object that; matches the proxied collection type.; The interface provides two families of functions: (i) for direct manipulation, e.g. `Insert()` or `At()`; and; (ii) iterator-based, e.g. `GetFunctionCreateIterators()` or `GetFunctionNext()`.; TVirtualCollectionProxy objects are stateful; in particular, many functions require to set the object to operate; on via `PushProxy()` / `PopProxy()`. The `TPushPop` RAII class is provided for convenience.; A collection proxy for a given class can be permanently set using `TClass::CopyCollectionProxy()`.; The `Generate()` function should be overridden in derived classes to return a clean object of the most-derived class.; */; // clang-format on",MatchSource.CODE_COMMENT,core/cont/inc/TVirtualCollectionProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h:250,Security,access,accesses,250,"// clang-format off; /**; \class TVirtualCollectionProxy; \brief Defines a common interface to inspect/change the contents of an object that represents a collection. Specifically, an object of a class that derives from TVirtualCollectionProxy relays accesses to any object that; matches the proxied collection type.; The interface provides two families of functions: (i) for direct manipulation, e.g. `Insert()` or `At()`; and; (ii) iterator-based, e.g. `GetFunctionCreateIterators()` or `GetFunctionNext()`.; TVirtualCollectionProxy objects are stateful; in particular, many functions require to set the object to operate; on via `PushProxy()` / `PopProxy()`. The `TPushPop` RAII class is provided for convenience.; A collection proxy for a given class can be permanently set using `TClass::CopyCollectionProxy()`.; The `Generate()` function should be overridden in derived classes to return a clean object of the most-derived class.; */; // clang-format on",MatchSource.CODE_COMMENT,core/cont/inc/TVirtualCollectionProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h:70,Integrability,depend,depends,70,"/// Return the offset between two consecutive in-memory values (which depends on the `sizeof()` and alignment of the; /// value type).",MatchSource.CODE_COMMENT,core/cont/inc/TVirtualCollectionProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h:4,Usability,Clear,Clear,4,"/// Clear the container",MatchSource.CODE_COMMENT,core/cont/inc/TVirtualCollectionProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h:4,Energy Efficiency,Allocate,Allocates,4,"/// Allocates space for storing at least `n` elements. This function returns a pointer to the actual object on; /// which insertions should take place. For associative collections, this function returns a pointer to a temporary; /// buffer known as the staging area. If the insertion happened in a staging area (i.e. the returned pointer !=; /// proxied object), `Commit()` should be called on the value returned by this function.",MatchSource.CODE_COMMENT,core/cont/inc/TVirtualCollectionProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h:52,Energy Efficiency,Allocate,Allocate,52,"/// Commits pending elements in a staging area (see Allocate() for more information).",MatchSource.CODE_COMMENT,core/cont/inc/TVirtualCollectionProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h:43,Energy Efficiency,allocate,allocated,43,"/// The size of a small buffer that can be allocated on the stack to store iterator-specific information",MatchSource.CODE_COMMENT,core/cont/inc/TVirtualCollectionProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h:325,Energy Efficiency,allocate,allocated,325,"// greater than sizeof(void*) + sizeof(UInt_t); /// `*begin_arena` and `*end_arena` should contain the location of a memory arena of size `fgIteratorArenaSize`.; /// If iterator-specific information is of that size or less, the iterators will be constructed in place in the given; /// locations. Otherwise, iterators will be allocated via `new` and their address returned by modifying the value; /// of `*begin_arena` and `*end_arena`.; /// As a special case, given that iterators for array-backed containers are just pointers, the required information; /// will be directly stored in `*(begin|end)_arena`.",MatchSource.CODE_COMMENT,core/cont/inc/TVirtualCollectionProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h:297,Energy Efficiency,allocate,allocated,297,"/// Copy the iterator `source` into `dest`. `dest` should contain the location of a memory arena of size; /// `fgIteratorArenaSize`.; /// If iterator-specific information is of that size or less, the iterators will be constructed in place in the given; /// locations. Otherwise, iterators will be allocated via `new` and their address returned by modifying the value; /// of `*begin_arena` and `*end_arena`. The actual address of the iterator is returned in any case.",MatchSource.CODE_COMMENT,core/cont/inc/TVirtualCollectionProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/ROOT/TSeq.hxx:837,Security,access,access,837,"/**; \class ROOT::TSeq; \brief A pseudo container class which is a generator of indices. \tparam T Type of the numerical sequence.; \ingroup Containers; A pseudo container class which is a generator of indices. The model is the `xrange`; built-in function of Python.; Possible usages:; Loop on a sequence of integers; ~~~{.cpp}; for (auto i : TSeqI(10)) {; cout << ""Element "" << i << endl;; }; ~~~; Loop on a sequence of integers in steps; ~~~{.cpp}; for (auto i : TSeqI(-5, 29, 6)) {; cout << ""Element "" << i << endl;; }; ~~~; Loop backwards on a sequence of integers; ~~~{.cpp}; for (auto i : TSeqI(50, 30, -3)) {; cout << ""Element "" << i << endl;; }; ~~~; Use an stl algorithm, for_each; ~~~{.cpp}; TSeqUL ulSeq(2,30,3);; std::for_each(std::begin(ulSeq),std::end(ulSeq),[](ULong_t i){cout << ""For each: "" << i <<endl;});; ~~~; Random access:; ~~~{.cpp}; cout << ""Random access: 3rd element is "" << ulSeq[2] << endl;; ~~~; A function to create sequences inferring the type:; ~~~{.cpp}; for (auto i : MakeSeq(1000000000000UL, 1000000000003UL)) {; cout << ""Element "" << i << endl;; }; ~~~. **/",MatchSource.CODE_COMMENT,core/cont/inc/ROOT/TSeq.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/ROOT/TSeq.hxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/ROOT/TSeq.hxx:873,Security,access,access,873,"/**; \class ROOT::TSeq; \brief A pseudo container class which is a generator of indices. \tparam T Type of the numerical sequence.; \ingroup Containers; A pseudo container class which is a generator of indices. The model is the `xrange`; built-in function of Python.; Possible usages:; Loop on a sequence of integers; ~~~{.cpp}; for (auto i : TSeqI(10)) {; cout << ""Element "" << i << endl;; }; ~~~; Loop on a sequence of integers in steps; ~~~{.cpp}; for (auto i : TSeqI(-5, 29, 6)) {; cout << ""Element "" << i << endl;; }; ~~~; Loop backwards on a sequence of integers; ~~~{.cpp}; for (auto i : TSeqI(50, 30, -3)) {; cout << ""Element "" << i << endl;; }; ~~~; Use an stl algorithm, for_each; ~~~{.cpp}; TSeqUL ulSeq(2,30,3);; std::for_each(std::begin(ulSeq),std::end(ulSeq),[](ULong_t i){cout << ""For each: "" << i <<endl;});; ~~~; Random access:; ~~~{.cpp}; cout << ""Random access: 3rd element is "" << ulSeq[2] << endl;; ~~~; A function to create sequences inferring the type:; ~~~{.cpp}; for (auto i : MakeSeq(1000000000000UL, 1000000000003UL)) {; cout << ""Element "" << i << endl;; }; ~~~. **/",MatchSource.CODE_COMMENT,core/cont/inc/ROOT/TSeq.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/ROOT/TSeq.hxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TArray.cxx:112,Availability,error,error,112,"////////////////////////////////////////////////////////////////////////////////; /// Generate an out-of-bounds error. Always returns false.",MatchSource.CODE_COMMENT,core/cont/src/TArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TArray.cxx:118,Usability,Simpl,Simplified,118,"////////////////////////////////////////////////////////////////////////////////; /// Read TArray object from buffer. Simplified version of; /// TBuffer::ReadObject (does not keep track of multiple; /// references to same array).",MatchSource.CODE_COMMENT,core/cont/src/TArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TArray.cxx:117,Usability,Simpl,Simplified,117,"////////////////////////////////////////////////////////////////////////////////; /// Write TArray object to buffer. Simplified version of; /// TBuffer::WriteObject (does not keep track of multiple; /// references to the same array).",MatchSource.CODE_COMMENT,core/cont/src/TArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx:465,Energy Efficiency,reduce,reduce,465,"// @(#)root/cont:$Id$; // Author: Philippe Canal 05/02/2001; // Feb 5 2001: Creation; // Feb 6 2001: Changed all int to unsigned int.; /** \class TBits; \ingroup Containers; Container of bits. This class provides a simple container of bits.; Each bit can be set and tested via the functions SetBitNumber and; TestBitNumber. The default value of all bits is kFALSE.; The size of the container is automatically extended when a bit; number is either set or tested. To reduce the memory size of the; container use the Compact function, this will discard the memory; occupied by the upper bits that are 0.; */",MatchSource.CODE_COMMENT,core/cont/src/TBits.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx:409,Modifiability,extend,extended,409,"// @(#)root/cont:$Id$; // Author: Philippe Canal 05/02/2001; // Feb 5 2001: Creation; // Feb 6 2001: Changed all int to unsigned int.; /** \class TBits; \ingroup Containers; Container of bits. This class provides a simple container of bits.; Each bit can be set and tested via the functions SetBitNumber and; TestBitNumber. The default value of all bits is kFALSE.; The size of the container is automatically extended when a bit; number is either set or tested. To reduce the memory size of the; container use the Compact function, this will discard the memory; occupied by the upper bits that are 0.; */",MatchSource.CODE_COMMENT,core/cont/src/TBits.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx:266,Testability,test,tested,266,"// @(#)root/cont:$Id$; // Author: Philippe Canal 05/02/2001; // Feb 5 2001: Creation; // Feb 6 2001: Changed all int to unsigned int.; /** \class TBits; \ingroup Containers; Container of bits. This class provides a simple container of bits.; Each bit can be set and tested via the functions SetBitNumber and; TestBitNumber. The default value of all bits is kFALSE.; The size of the container is automatically extended when a bit; number is either set or tested. To reduce the memory size of the; container use the Compact function, this will discard the memory; occupied by the upper bits that are 0.; */",MatchSource.CODE_COMMENT,core/cont/src/TBits.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx:309,Testability,Test,TestBitNumber,309,"// @(#)root/cont:$Id$; // Author: Philippe Canal 05/02/2001; // Feb 5 2001: Creation; // Feb 6 2001: Changed all int to unsigned int.; /** \class TBits; \ingroup Containers; Container of bits. This class provides a simple container of bits.; Each bit can be set and tested via the functions SetBitNumber and; TestBitNumber. The default value of all bits is kFALSE.; The size of the container is automatically extended when a bit; number is either set or tested. To reduce the memory size of the; container use the Compact function, this will discard the memory; occupied by the upper bits that are 0.; */",MatchSource.CODE_COMMENT,core/cont/src/TBits.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx:454,Testability,test,tested,454,"// @(#)root/cont:$Id$; // Author: Philippe Canal 05/02/2001; // Feb 5 2001: Creation; // Feb 6 2001: Changed all int to unsigned int.; /** \class TBits; \ingroup Containers; Container of bits. This class provides a simple container of bits.; Each bit can be set and tested via the functions SetBitNumber and; TestBitNumber. The default value of all bits is kFALSE.; The size of the container is automatically extended when a bit; number is either set or tested. To reduce the memory size of the; container use the Compact function, this will discard the memory; occupied by the upper bits that are 0.; */",MatchSource.CODE_COMMENT,core/cont/src/TBits.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx:215,Usability,simpl,simple,215,"// @(#)root/cont:$Id$; // Author: Philippe Canal 05/02/2001; // Feb 5 2001: Creation; // Feb 6 2001: Changed all int to unsigned int.; /** \class TBits; \ingroup Containers; Container of bits. This class provides a simple container of bits.; Each bit can be set and tested via the functions SetBitNumber and; TestBitNumber. The default value of all bits is kFALSE.; The size of the container is automatically extended when a bit; number is either set or tested. To reduce the memory size of the; container use the Compact function, this will discard the memory; occupied by the upper bits that are 0.; */",MatchSource.CODE_COMMENT,core/cont/src/TBits.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx:11,Availability,redundant,redundant,11,"// this is redundant only with libNew",MatchSource.CODE_COMMENT,core/cont/src/TBits.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx:11,Safety,redund,redundant,11,"// this is redundant only with libNew",MatchSource.CODE_COMMENT,core/cont/src/TBits.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear the value.",MatchSource.CODE_COMMENT,core/cont/src/TBits.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx:86,Energy Efficiency,Reduce,Reduce,86,"////////////////////////////////////////////////////////////////////////////////; /// Reduce the storage used by the object to a minimun",MatchSource.CODE_COMMENT,core/cont/src/TBits.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx:43,Safety,safe,safe,43,"// do it in this order to remain exception-safe.",MatchSource.CODE_COMMENT,core/cont/src/TBits.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:669,Energy Efficiency,adapt,adapt,669,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 10/10/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TBtree; \ingroup Containers; B-tree class. TBtree inherits from the TSeqCollection ABC. ## B-tree Implementation notes. This implements B-trees with several refinements. Most of them can be found; in Knuth Vol 3, but some were developed to adapt to restrictions imposed; by C++. First, a restatement of Knuth's properties that a B-tree must; satisfy, assuming we make the enhancement he suggests in the paragraph; at the bottom of page 476. Instead of storing null pointers to non-existent; nodes (which Knuth calls the leaves) we utilize the space to store keys.; Therefore, what Knuth calls level (l-1) is the bottom of our tree, and; we call the nodes at this level LeafNodes. Other nodes are called InnerNodes.; The other enhancement we have adopted is in the paragraph at the bottom of; page 477: overflow control. The following are modifications of Knuth's properties on page 478:. 1. Every InnerNode has at most Order keys, and at most Order+1 sub-trees.; 2. Every LeafNode has at most 2*(Order+1) keys.; 3. An InnerNode with k keys has k+1 sub-trees.; 4. Every InnerNode that is not the root has at least InnerLowWaterMark keys.; 5. Every LeafNode that is not the root has at least LeafLowWaterMark keys.; 6. If the root is a LeafNode, it has at least one key.; 7. If the root is an InnerNode, it has at least one key and two sub-trees.; 8. All LeafNodes are the same distance from the root as all the other; LeafNodes.; 9. For InnerNode n with key n[i].key, then sub-tree n[i-1].tree contains; all keys < n[i].key, and sub-tree n[i].tree contains all keys; >= n[i",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:4026,Energy Efficiency,allocate,allocated,4026,"d here. However,; if the order is kept small (< 6?) any inefficiency is negligible for; in-memory sorting. Knuth points out that balanced trees are actually; preferable for memory sorting. I'm not sure that I believe this, but; it's interesting. Also, deleting elements from balanced binary trees, being; beyond the scope of Knuth's book (p. 465), is beyond my scope. B-trees; are good enough. A B-tree is declared to be of a certain ORDER (3 by default). This number; determines the number of keys contained in any interior node of the tree.; Each interior node will contain ORDER keys, and therefore ORDER+1 pointers; to sub-trees. The keys are numbered and indexed 1 to ORDER while the; pointers are numbered and indexed 0 to ORDER. The 0th ptr points to the; sub-tree of all elements that are less than key[1]. Ptr[1] points to the; sub-tree that contains all the elements greater than key[1] and less than; key[2]. etc. The array of pointers and keys is allocated as ORDER+1; pairs of keys and nodes, meaning that one key field (key[0]) is not used; and therefore wasted. Given that the number of interior nodes is; small, that this waste allows fewer cases of special code, and that it; is useful in certain of the methods, it was felt to be a worthwhile waste. The size of the exterior nodes (leaf nodes) does not need to be related to; the size of the interior nodes at all. Since leaf nodes contain only; keys, they may be as large or small as we like independent of the size; of the interior nodes. For no particular reason other than it seems like; a good idea, we will allocate 2*(ORDER+1) keys in each leaf node, and they; will be numbered and indexed from 0 to 2*ORDER+1. It does have the advantage; of keeping the size of the leaf and interior arrays the same, so that if we; find allocation and de-allocation of these arrays expensive, we can modify; their allocation to use a garbage ring, or something. Both of these numbers will be run-time constants associated with each tree; (ea",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:4648,Energy Efficiency,allocate,allocate,4648,"efore ORDER+1 pointers; to sub-trees. The keys are numbered and indexed 1 to ORDER while the; pointers are numbered and indexed 0 to ORDER. The 0th ptr points to the; sub-tree of all elements that are less than key[1]. Ptr[1] points to the; sub-tree that contains all the elements greater than key[1] and less than; key[2]. etc. The array of pointers and keys is allocated as ORDER+1; pairs of keys and nodes, meaning that one key field (key[0]) is not used; and therefore wasted. Given that the number of interior nodes is; small, that this waste allows fewer cases of special code, and that it; is useful in certain of the methods, it was felt to be a worthwhile waste. The size of the exterior nodes (leaf nodes) does not need to be related to; the size of the interior nodes at all. Since leaf nodes contain only; keys, they may be as large or small as we like independent of the size; of the interior nodes. For no particular reason other than it seems like; a good idea, we will allocate 2*(ORDER+1) keys in each leaf node, and they; will be numbered and indexed from 0 to 2*ORDER+1. It does have the advantage; of keeping the size of the leaf and interior arrays the same, so that if we; find allocation and de-allocation of these arrays expensive, we can modify; their allocation to use a garbage ring, or something. Both of these numbers will be run-time constants associated with each tree; (each tree at run-time can be of a different order). The variable ""order""; is the order of the tree, and the inclusive upper limit on the indices of; the keys in the interior nodes. The variable ""order2"" is the inclusive; upper limit on the indices of the leaf nodes, and is designed; ~~~ {.cpp}; (1) to keep the sizes of the two kinds of nodes the same;; (2) to keep the expressions involving the arrays of keys looking; somewhat the same: lower limit upper limit; for inner nodes: 1 order; for leaf nodes: 0 order2; Remember that index 0 of the inner nodes is special.; ~~~; Currently, order2 = 2*(",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:479,Modifiability,inherit,inherits,479,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 10/10/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TBtree; \ingroup Containers; B-tree class. TBtree inherits from the TSeqCollection ABC. ## B-tree Implementation notes. This implements B-trees with several refinements. Most of them can be found; in Knuth Vol 3, but some were developed to adapt to restrictions imposed; by C++. First, a restatement of Knuth's properties that a B-tree must; satisfy, assuming we make the enhancement he suggests in the paragraph; at the bottom of page 476. Instead of storing null pointers to non-existent; nodes (which Knuth calls the leaves) we utilize the space to store keys.; Therefore, what Knuth calls level (l-1) is the bottom of our tree, and; we call the nodes at this level LeafNodes. Other nodes are called InnerNodes.; The other enhancement we have adopted is in the paragraph at the bottom of; page 477: overflow control. The following are modifications of Knuth's properties on page 478:. 1. Every InnerNode has at most Order keys, and at most Order+1 sub-trees.; 2. Every LeafNode has at most 2*(Order+1) keys.; 3. An InnerNode with k keys has k+1 sub-trees.; 4. Every InnerNode that is not the root has at least InnerLowWaterMark keys.; 5. Every LeafNode that is not the root has at least LeafLowWaterMark keys.; 6. If the root is a LeafNode, it has at least one key.; 7. If the root is an InnerNode, it has at least one key and two sub-trees.; 8. All LeafNodes are the same distance from the root as all the other; LeafNodes.; 9. For InnerNode n with key n[i].key, then sub-tree n[i-1].tree contains; all keys < n[i].key, and sub-tree n[i].tree contains all keys; >= n[i",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:669,Modifiability,adapt,adapt,669,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 10/10/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TBtree; \ingroup Containers; B-tree class. TBtree inherits from the TSeqCollection ABC. ## B-tree Implementation notes. This implements B-trees with several refinements. Most of them can be found; in Knuth Vol 3, but some were developed to adapt to restrictions imposed; by C++. First, a restatement of Knuth's properties that a B-tree must; satisfy, assuming we make the enhancement he suggests in the paragraph; at the bottom of page 476. Instead of storing null pointers to non-existent; nodes (which Knuth calls the leaves) we utilize the space to store keys.; Therefore, what Knuth calls level (l-1) is the bottom of our tree, and; we call the nodes at this level LeafNodes. Other nodes are called InnerNodes.; The other enhancement we have adopted is in the paragraph at the bottom of; page 477: overflow control. The following are modifications of Knuth's properties on page 478:. 1. Every InnerNode has at most Order keys, and at most Order+1 sub-trees.; 2. Every LeafNode has at most 2*(Order+1) keys.; 3. An InnerNode with k keys has k+1 sub-trees.; 4. Every InnerNode that is not the root has at least InnerLowWaterMark keys.; 5. Every LeafNode that is not the root has at least LeafLowWaterMark keys.; 6. If the root is a LeafNode, it has at least one key.; 7. If the root is an InnerNode, it has at least one key and two sub-trees.; 8. All LeafNodes are the same distance from the root as all the other; LeafNodes.; 9. For InnerNode n with key n[i].key, then sub-tree n[i-1].tree contains; all keys < n[i].key, and sub-tree n[i].tree contains all keys; >= n[i",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:801,Modifiability,enhance,enhancement,801,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 10/10/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TBtree; \ingroup Containers; B-tree class. TBtree inherits from the TSeqCollection ABC. ## B-tree Implementation notes. This implements B-trees with several refinements. Most of them can be found; in Knuth Vol 3, but some were developed to adapt to restrictions imposed; by C++. First, a restatement of Knuth's properties that a B-tree must; satisfy, assuming we make the enhancement he suggests in the paragraph; at the bottom of page 476. Instead of storing null pointers to non-existent; nodes (which Knuth calls the leaves) we utilize the space to store keys.; Therefore, what Knuth calls level (l-1) is the bottom of our tree, and; we call the nodes at this level LeafNodes. Other nodes are called InnerNodes.; The other enhancement we have adopted is in the paragraph at the bottom of; page 477: overflow control. The following are modifications of Knuth's properties on page 478:. 1. Every InnerNode has at most Order keys, and at most Order+1 sub-trees.; 2. Every LeafNode has at most 2*(Order+1) keys.; 3. An InnerNode with k keys has k+1 sub-trees.; 4. Every InnerNode that is not the root has at least InnerLowWaterMark keys.; 5. Every LeafNode that is not the root has at least LeafLowWaterMark keys.; 6. If the root is a LeafNode, it has at least one key.; 7. If the root is an InnerNode, it has at least one key and two sub-trees.; 8. All LeafNodes are the same distance from the root as all the other; LeafNodes.; 9. For InnerNode n with key n[i].key, then sub-tree n[i-1].tree contains; all keys < n[i].key, and sub-tree n[i].tree contains all keys; >= n[i",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:1155,Modifiability,enhance,enhancement,1155,"; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TBtree; \ingroup Containers; B-tree class. TBtree inherits from the TSeqCollection ABC. ## B-tree Implementation notes. This implements B-trees with several refinements. Most of them can be found; in Knuth Vol 3, but some were developed to adapt to restrictions imposed; by C++. First, a restatement of Knuth's properties that a B-tree must; satisfy, assuming we make the enhancement he suggests in the paragraph; at the bottom of page 476. Instead of storing null pointers to non-existent; nodes (which Knuth calls the leaves) we utilize the space to store keys.; Therefore, what Knuth calls level (l-1) is the bottom of our tree, and; we call the nodes at this level LeafNodes. Other nodes are called InnerNodes.; The other enhancement we have adopted is in the paragraph at the bottom of; page 477: overflow control. The following are modifications of Knuth's properties on page 478:. 1. Every InnerNode has at most Order keys, and at most Order+1 sub-trees.; 2. Every LeafNode has at most 2*(Order+1) keys.; 3. An InnerNode with k keys has k+1 sub-trees.; 4. Every InnerNode that is not the root has at least InnerLowWaterMark keys.; 5. Every LeafNode that is not the root has at least LeafLowWaterMark keys.; 6. If the root is a LeafNode, it has at least one key.; 7. If the root is an InnerNode, it has at least one key and two sub-trees.; 8. All LeafNodes are the same distance from the root as all the other; LeafNodes.; 9. For InnerNode n with key n[i].key, then sub-tree n[i-1].tree contains; all keys < n[i].key, and sub-tree n[i].tree contains all keys; >= n[i].key.; 10. Order is at least 3. The values of InnerLowWaterMark and LeafLowWaterMark may actually be set; by the user when the tree is initialized, but currently they are set; automatically to:;",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:5121,Modifiability,variab,variable,5121,"des is; small, that this waste allows fewer cases of special code, and that it; is useful in certain of the methods, it was felt to be a worthwhile waste. The size of the exterior nodes (leaf nodes) does not need to be related to; the size of the interior nodes at all. Since leaf nodes contain only; keys, they may be as large or small as we like independent of the size; of the interior nodes. For no particular reason other than it seems like; a good idea, we will allocate 2*(ORDER+1) keys in each leaf node, and they; will be numbered and indexed from 0 to 2*ORDER+1. It does have the advantage; of keeping the size of the leaf and interior arrays the same, so that if we; find allocation and de-allocation of these arrays expensive, we can modify; their allocation to use a garbage ring, or something. Both of these numbers will be run-time constants associated with each tree; (each tree at run-time can be of a different order). The variable ""order""; is the order of the tree, and the inclusive upper limit on the indices of; the keys in the interior nodes. The variable ""order2"" is the inclusive; upper limit on the indices of the leaf nodes, and is designed; ~~~ {.cpp}; (1) to keep the sizes of the two kinds of nodes the same;; (2) to keep the expressions involving the arrays of keys looking; somewhat the same: lower limit upper limit; for inner nodes: 1 order; for leaf nodes: 0 order2; Remember that index 0 of the inner nodes is special.; ~~~; Currently, order2 = 2*(order+1).; ~~~ {.cpp}; Picture: (also see Knuth Vol 3 pg 478). +--+--+--+--+--+--...; | | | | | |; parent--->| | | |; | | | |; +*-+*-+*-+--+--+--...; | | |; +----+ | +-----+; | +-----+ |; V | V; +----------+ | +----------+; | | | | |; this->| | | | |<--sib; +----------+ | +----------+; V; data; ~~~; It is conceptually VERY convenient to think of the data as being the; very first element of the sib node. Any primitive that tells sib to; perform some action on n nodes should include this 'hidden' element.; For Inn",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:5250,Modifiability,variab,variable,5250,"was felt to be a worthwhile waste. The size of the exterior nodes (leaf nodes) does not need to be related to; the size of the interior nodes at all. Since leaf nodes contain only; keys, they may be as large or small as we like independent of the size; of the interior nodes. For no particular reason other than it seems like; a good idea, we will allocate 2*(ORDER+1) keys in each leaf node, and they; will be numbered and indexed from 0 to 2*ORDER+1. It does have the advantage; of keeping the size of the leaf and interior arrays the same, so that if we; find allocation and de-allocation of these arrays expensive, we can modify; their allocation to use a garbage ring, or something. Both of these numbers will be run-time constants associated with each tree; (each tree at run-time can be of a different order). The variable ""order""; is the order of the tree, and the inclusive upper limit on the indices of; the keys in the interior nodes. The variable ""order2"" is the inclusive; upper limit on the indices of the leaf nodes, and is designed; ~~~ {.cpp}; (1) to keep the sizes of the two kinds of nodes the same;; (2) to keep the expressions involving the arrays of keys looking; somewhat the same: lower limit upper limit; for inner nodes: 1 order; for leaf nodes: 0 order2; Remember that index 0 of the inner nodes is special.; ~~~; Currently, order2 = 2*(order+1).; ~~~ {.cpp}; Picture: (also see Knuth Vol 3 pg 478). +--+--+--+--+--+--...; | | | | | |; parent--->| | | |; | | | |; +*-+*-+*-+--+--+--...; | | |; +----+ | +-----+; | +-----+ |; V | V; +----------+ | +----------+; | | | | |; this->| | | | |<--sib; +----------+ | +----------+; V; data; ~~~; It is conceptually VERY convenient to think of the data as being the; very first element of the sib node. Any primitive that tells sib to; perform some action on n nodes should include this 'hidden' element.; For InnerNodes, the hidden element has (physical) index 0 in the array,; and in LeafNodes, the hidden element has (virtual) in",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:6104,Performance,perform,perform,6104,"variable ""order""; is the order of the tree, and the inclusive upper limit on the indices of; the keys in the interior nodes. The variable ""order2"" is the inclusive; upper limit on the indices of the leaf nodes, and is designed; ~~~ {.cpp}; (1) to keep the sizes of the two kinds of nodes the same;; (2) to keep the expressions involving the arrays of keys looking; somewhat the same: lower limit upper limit; for inner nodes: 1 order; for leaf nodes: 0 order2; Remember that index 0 of the inner nodes is special.; ~~~; Currently, order2 = 2*(order+1).; ~~~ {.cpp}; Picture: (also see Knuth Vol 3 pg 478). +--+--+--+--+--+--...; | | | | | |; parent--->| | | |; | | | |; +*-+*-+*-+--+--+--...; | | |; +----+ | +-----+; | +-----+ |; V | V; +----------+ | +----------+; | | | | |; this->| | | | |<--sib; +----------+ | +----------+; V; data; ~~~; It is conceptually VERY convenient to think of the data as being the; very first element of the sib node. Any primitive that tells sib to; perform some action on n nodes should include this 'hidden' element.; For InnerNodes, the hidden element has (physical) index 0 in the array,; and in LeafNodes, the hidden element has (virtual) index -1 in the array.; Therefore, there are two 'size' primitives for nodes:; ~~~ {.cpp}; Psize - the physical size: how many elements are contained in the; array in the node.; Vsize - the 'virtual' size; if the node is pointed to by; element 0 of the parent node, then Vsize == Psize;; otherwise the element in the parent item that points to this; node 'belongs' to this node, and Vsize == Psize+1;; ~~~; Parent nodes are always InnerNodes. These are the primitive operations on Nodes:; ~~~ {.cpp}; Append(elt) - adds an element to the end of the array of elements in a; node. It must never be called where appending the element; would fill the node.; Split() - divide a node in two, and create two new nodes.; SplitWith(sib) - create a third node between this node and the sib node,; divvying up the elements of their ar",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:2987,Security,access,access,2987,"].key.; 10. Order is at least 3. The values of InnerLowWaterMark and LeafLowWaterMark may actually be set; by the user when the tree is initialized, but currently they are set; automatically to:; ~~~ {.cpp}; InnerLowWaterMark = ceiling(Order/2); LeafLowWaterMark = Order - 1; ~~~; If the tree is only filled, then all the nodes will be at least 2/3 full.; They will almost all be exactly 2/3 full if the elements are added to the; tree in order (either increasing or decreasing). [Knuth says McCreight's; experiments showed almost 100% memory utilization. I don't see how that; can be given the algorithms that Knuth gives. McCreight must have used; a different scheme for balancing. [No, he used a different scheme for; splitting: he did a two-way split instead of the three way split as we do; here. Which means that McCreight does better on insertion of ordered data,; but we should do better on insertion of random data.]]. It must also be noted that B-trees were designed for DISK access algorithms,; not necessarily in-memory sorting, as we intend it to be used here. However,; if the order is kept small (< 6?) any inefficiency is negligible for; in-memory sorting. Knuth points out that balanced trees are actually; preferable for memory sorting. I'm not sure that I believe this, but; it's interesting. Also, deleting elements from balanced binary trees, being; beyond the scope of Knuth's book (p. 465), is beyond my scope. B-trees; are good enough. A B-tree is declared to be of a certain ORDER (3 by default). This number; determines the number of keys contained in any interior node of the tree.; Each interior node will contain ORDER keys, and therefore ORDER+1 pointers; to sub-trees. The keys are numbered and indexed 1 to ORDER while the; pointers are numbered and indexed 0 to ORDER. The 0th ptr points to the; sub-tree of all elements that are less than key[1]. Ptr[1] points to the; sub-tree that contains all the elements greater than key[1] and less than; key[2]. etc. The array",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:7475,Security,access,access,7475,"--------+ | +----------+; | | | | |; this->| | | | |<--sib; +----------+ | +----------+; V; data; ~~~; It is conceptually VERY convenient to think of the data as being the; very first element of the sib node. Any primitive that tells sib to; perform some action on n nodes should include this 'hidden' element.; For InnerNodes, the hidden element has (physical) index 0 in the array,; and in LeafNodes, the hidden element has (virtual) index -1 in the array.; Therefore, there are two 'size' primitives for nodes:; ~~~ {.cpp}; Psize - the physical size: how many elements are contained in the; array in the node.; Vsize - the 'virtual' size; if the node is pointed to by; element 0 of the parent node, then Vsize == Psize;; otherwise the element in the parent item that points to this; node 'belongs' to this node, and Vsize == Psize+1;; ~~~; Parent nodes are always InnerNodes. These are the primitive operations on Nodes:; ~~~ {.cpp}; Append(elt) - adds an element to the end of the array of elements in a; node. It must never be called where appending the element; would fill the node.; Split() - divide a node in two, and create two new nodes.; SplitWith(sib) - create a third node between this node and the sib node,; divvying up the elements of their arrays.; PushLeft(n) - move n elements into the left sibling; PushRight(n) - move n elements into the right sibling; BalanceWithRight() - even up the number of elements in the two nodes.; BalanceWithLeft() - ditto; ~~~; To allow this implementation of btrees to also be an implementation of; sorted arrays/lists, the overhead is included to allow O(log n) access; of elements by their rank (`give me the 5th largest element').; Therefore, each Item keeps track of the number of keys in and below it; in the tree (remember, each item's tree is all keys to the RIGHT of the; item's own key).; ~~~ {.cpp}; [ [ < 0 1 2 3 > 4 < 5 6 7 > 8 < 9 10 11 12 > ] 13 [ < 14 15 16 > 17 < 18 19 20 > ] ]; 4 1 1 1 1 4 1 1 1 5 1 1 1 1 7 3 1 1 1 4 1 1 1; ~~~; */",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:7468,Testability,log,log,7468,"--------+ | +----------+; | | | | |; this->| | | | |<--sib; +----------+ | +----------+; V; data; ~~~; It is conceptually VERY convenient to think of the data as being the; very first element of the sib node. Any primitive that tells sib to; perform some action on n nodes should include this 'hidden' element.; For InnerNodes, the hidden element has (physical) index 0 in the array,; and in LeafNodes, the hidden element has (virtual) index -1 in the array.; Therefore, there are two 'size' primitives for nodes:; ~~~ {.cpp}; Psize - the physical size: how many elements are contained in the; array in the node.; Vsize - the 'virtual' size; if the node is pointed to by; element 0 of the parent node, then Vsize == Psize;; otherwise the element in the parent item that points to this; node 'belongs' to this node, and Vsize == Psize+1;; ~~~; Parent nodes are always InnerNodes. These are the primitive operations on Nodes:; ~~~ {.cpp}; Append(elt) - adds an element to the end of the array of elements in a; node. It must never be called where appending the element; would fill the node.; Split() - divide a node in two, and create two new nodes.; SplitWith(sib) - create a third node between this node and the sib node,; divvying up the elements of their arrays.; PushLeft(n) - move n elements into the left sibling; PushRight(n) - move n elements into the right sibling; BalanceWithRight() - even up the number of elements in the two nodes.; BalanceWithLeft() - ditto; ~~~; To allow this implementation of btrees to also be an implementation of; sorted arrays/lists, the overhead is included to allow O(log n) access; of elements by their rank (`give me the 5th largest element').; Therefore, each Item keeps track of the number of keys in and below it; in the tree (remember, each item's tree is all keys to the RIGHT of the; item's own key).; ~~~ {.cpp}; [ [ < 0 1 2 3 > 4 < 5 6 7 > 8 < 9 10 11 12 > ] 13 [ < 14 15 16 > 17 < 18 19 20 > ] ]; 4 1 1 1 1 4 1 1 1 5 1 1 1 1 7 3 1 1 1 4 1 1 1; ~~~; */",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:57,Security,access,access,57,"// BUG in the cxx compiler. cxx complains that it cannot access fTree; // from TBtInnerNode. To reproduce the cxx bug uncomment the following line; // and delete the line after.; // fTree = p->fTree;",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:219,Availability,DOWN,DOWN,219,"////////////////////////////////////////////////////////////////////////////////; /// FindRankUp is FindRank in reverse.; /// Whereas FindRank looks for the object and computes the rank; /// along the way while walking DOWN the tree, FindRankUp already; /// knows where the object is and has to walk UP the tree from the; /// object to compute the rank.",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:249,Deployability,Update,Update,249,"////////////////////////////////////////////////////////////////////////////////; /// The operation is three steps:; /// - Step I. Make room for the incoming keys in RIGHTSIB.; /// - Step II. Move the items from THIS into RIGHTSIB.; /// - Step III. Update the length of THIS.",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:188,Deployability,update,updated,188,"// do this kind of assignment on TBtInnerNode items only when; // the parent fields of the moved items do not change, as they; // don't here.; // Otherwise, use SetItem so the parents are updated appropriately.",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:12,Deployability,update,update,12,"// Step VI. update NofKeys",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:163,Usability,simpl,simply,163,"////////////////////////////////////////////////////////////////////////////////; /// A convenience function, does not worry about the element in; /// the parent, simply moves elements from SRC[start] to SRC[stop]; /// into the current array.; /// This should never create a full node.; /// That is, it is not used anywhere where THIS could possibly be; /// near full.; /// Does NOT handle nofKeys.",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:264,Deployability,Update,Update,264,"// The operation is five steps:; // Step I. Make room for the incoming keys in RIGHTSIB.; // Step II. Move the key in the parent into RIGHTSIB.; // Step III. Move the items from THIS into RIGHTSIB.; // Step IV. Move the item from THIS into the parent.; // Step V. Update the length of THIS.; //; // Step I.: make space for noFromThis items; //",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:12,Deployability,update,update,12,"// Step VI. update nofKeys",MatchSource.CODE_COMMENT,core/cont/src/TBtree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:765,Safety,safe,safe,765,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 11/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClassTable; \ingroup Containers; This class registers for all classes their name, id and dictionary; function in a hash table. Classes are automatically added by the; ctor of a special init class when a global of this init class is; initialized when the program starts (see the ClassImp macro). All functions in TClassTable are thread-safe.; */",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:545,Security,hash,hash,545,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 11/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClassTable; \ingroup Containers; This class registers for all classes their name, id and dictionary; function in a hash table. Classes are automatically added by the; ctor of a special init class when a global of this init class is; initialized when the program starts (see the ClassImp macro). All functions in TClassTable are thread-safe.; */",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:8,Integrability,wrap,wrapper,8,"// This wrapper class allow to avoid putting #include <map> in the; // TROOT.h header file.",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:31,Safety,avoid,avoid,31,"// This wrapper class allow to avoid putting #include <map> in the; // TROOT.h header file.",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:10,Safety,avoid,avoid,10,"// Try to avoid spurious warning from memory leak checkers.",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:65,Performance,load,load,65,"// This is the very rare case (i.e. called before any dictionary load); // so we don't need to execute this outside of the critical section.",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:251,Deployability,update,update,251,"// && oldcl->GetClassInfo()) {; // As a work-around to ROOT-6012, we need to register the class even if; // it is not a template instance, because a forward declaration in the header; // files loaded by the current dictionary wil also de-activate the update; // class info mechanism!; // The TClass exist and already has a class info, so it must; // correspond to a class template instantiation which the interpreter; // was able to make with the library containing the TClass Init.; // Because it is already known to the interpreter, the update class info; // will not be triggered, we need to force it.",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:539,Deployability,update,update,539,"// && oldcl->GetClassInfo()) {; // As a work-around to ROOT-6012, we need to register the class even if; // it is not a template instance, because a forward declaration in the header; // files loaded by the current dictionary wil also de-activate the update; // class info mechanism!; // The TClass exist and already has a class info, so it must; // correspond to a class template instantiation which the interpreter; // was able to make with the library containing the TClass Init.; // Because it is already known to the interpreter, the update class info; // will not be triggered, we need to force it.",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:193,Performance,load,loaded,193,"// && oldcl->GetClassInfo()) {; // As a work-around to ROOT-6012, we need to register the class even if; // it is not a template instance, because a forward declaration in the header; // files loaded by the current dictionary wil also de-activate the update; // class info mechanism!; // The TClass exist and already has a class info, so it must; // correspond to a class template instantiation which the interpreter; // was able to make with the library containing the TClass Init.; // Because it is already known to the interpreter, the update class info; // will not be triggered, we need to force it.",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:251,Deployability,update,update,251,"// && oldcl->GetClassInfo()) {; // As a work-around to ROOT-6012, we need to register the class even if; // it is not a template instance, because a forward declaration in the header; // files loaded by the current dictionary wil also de-activate the update; // class info mechanism!",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:193,Performance,load,loaded,193,"// && oldcl->GetClassInfo()) {; // As a work-around to ROOT-6012, we need to register the class even if; // it is not a template instance, because a forward declaration in the header; // files loaded by the current dictionary wil also de-activate the update; // class info mechanism!",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:133,Security,hash,hash,133,"////////////////////////////////////////////////////////////////////////////////; /// Find a class by name in the class table (using hash of name). Returns; /// 0 if the class is not in the table. Unless arguments insert is true in; /// which case a new entry is created and returned.; /// `cname` must be the normalized name of the class.",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:12,Integrability,rout,routine,12,"// Internal routine, no explicit lock needed here.",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:163,Security,hash,hash,163,"////////////////////////////////////////////////////////////////////////////////; /// Given the class name returns the Dictionary() function of a class; /// (uses hash of name).",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:167,Security,hash,hash,167,"////////////////////////////////////////////////////////////////////////////////; /// Given the std::type_info returns the Dictionary() function of a class; /// (uses hash of std::type_info::name()).",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:174,Security,hash,hash,174,"////////////////////////////////////////////////////////////////////////////////; /// Given the normalized class name returns the Dictionary() function of a class; /// (uses hash of name).",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:164,Security,hash,hash,164,"////////////////////////////////////////////////////////////////////////////////; /// Given the class name returns the TClassProto object for the class.; /// (uses hash of name).",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:175,Security,hash,hash,175,"////////////////////////////////////////////////////////////////////////////////; /// Given the class normalized name returns the TClassProto object for the class.; /// (uses hash of name).",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:34,Safety,avoid,avoid,34,"// Do not use TClass::GetClass to avoid any risk of autoloading.",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:44,Safety,risk,risk,44,"// Do not use TClass::GetClass to avoid any risk of autoloading.",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:12,Integrability,rout,routine,12,"// Internal routine.",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:19,Performance,load,loaded,19,"// If a library is loaded before gROOT is initialized we can assume; // it is hard linked along side libCore (or is libCore) thus can't; // really be unloaded.",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:8,Integrability,rout,routine,8,"// This routine is meant to be called (indirectly) by dlclose so we; // we are guaranteed that the library initialization has completed.",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:105,Deployability,update,update,105,"////////////////////////////////////////////////////////////////////////////////; /// Global function to update the version number.; /// This is called via the RootClassVersion macro.; ///; /// if cl!=0 and cname==-1, set the new class version if and only is; /// greater than the existing one and greater or equal to 2;; /// and also ignore the request if fVersionUsed is true.; ///; /// Note on class version number:; /// - If no class has been specified, TClass::GetVersion will return -1; /// - The Class Version 0 request the whole object to be transient; /// - The Class Version 1, unless specify via ClassDef indicates that the; /// I/O should use the TClass checksum to distinguish the layout of the class",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:666,Security,checksum,checksum,666,"////////////////////////////////////////////////////////////////////////////////; /// Global function to update the version number.; /// This is called via the RootClassVersion macro.; ///; /// if cl!=0 and cname==-1, set the new class version if and only is; /// greater than the existing one and greater or equal to 2;; /// and also ignore the request if fVersionUsed is true.; ///; /// Note on class version number:; /// - If no class has been specified, TClass::GetVersion will return -1; /// - The Class Version 0 request the whole object to be transient; /// - The Class Version 1, unless specify via ClassDef indicates that the; /// I/O should use the TClass checksum to distinguish the layout of the class",MatchSource.CODE_COMMENT,core/cont/src/TClassTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:2402,Availability,error,error,2402," or a.Clear(""C""); }; ~~~; To reduce the number of call to the constructor (especially useful; if the user class requires memory allocation), the object can be; added (and constructed when needed) using ConstructedAt which only; calls the constructor once per slot.; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClones",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:2564,Availability,recover,recovered,2564,"d constructed when needed) using ConstructedAt which only; calls the constructor once per slot.; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; wh",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:2775,Availability,error,errors,2775,"structedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more me",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:544,Energy Efficiency,allocate,allocated,544,"// @(#)root/cont:$Id$; // Author: Rene Brun 11/02/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClonesArray; \ingroup Containers; An array of clone (identical) objects. Memory for the objects; stored in the array is allocated only once in the lifetime of the; clones array. All objects must be of the same class. For the rest; this class has the same properties as TObjArray. To reduce the very large number of new and delete calls in large; loops like this (O(100000) x O(10000) times new/delete):; ~~~ {.cpp}; TObjArray a(10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; a[i] = new TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete();; }; ~~~; One better uses a TClonesArray which reduces the number of; new/delete calls to only O(10000):; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear() or a.Clear(""C""); }; ~~~; To reduce the number of call to the constructor (especially useful; if the user class requires memory allocation), the object can be; added (and constructed when needed) using ConstructedAt which only; calls the constructor once per slot.; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a ",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:707,Energy Efficiency,reduce,reduce,707,"// @(#)root/cont:$Id$; // Author: Rene Brun 11/02/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClonesArray; \ingroup Containers; An array of clone (identical) objects. Memory for the objects; stored in the array is allocated only once in the lifetime of the; clones array. All objects must be of the same class. For the rest; this class has the same properties as TObjArray. To reduce the very large number of new and delete calls in large; loops like this (O(100000) x O(10000) times new/delete):; ~~~ {.cpp}; TObjArray a(10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; a[i] = new TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete();; }; ~~~; One better uses a TClonesArray which reduces the number of; new/delete calls to only O(10000):; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear() or a.Clear(""C""); }; ~~~; To reduce the number of call to the constructor (especially useful; if the user class requires memory allocation), the object can be; added (and constructed when needed) using ConstructedAt which only; calls the constructor once per slot.; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a ",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:1089,Energy Efficiency,reduce,reduces,1089,"***********************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClonesArray; \ingroup Containers; An array of clone (identical) objects. Memory for the objects; stored in the array is allocated only once in the lifetime of the; clones array. All objects must be of the same class. For the rest; this class has the same properties as TObjArray. To reduce the very large number of new and delete calls in large; loops like this (O(100000) x O(10000) times new/delete):; ~~~ {.cpp}; TObjArray a(10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; a[i] = new TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete();; }; ~~~; One better uses a TClonesArray which reduces the number of; new/delete calls to only O(10000):; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear() or a.Clear(""C""); }; ~~~; To reduce the number of call to the constructor (especially useful; if the user class requires memory allocation), the object can be; added (and constructed when needed) using ConstructedAt which only; calls the constructor once per slot.; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Ad",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:1419,Energy Efficiency,reduce,reduce,1419,"ed in the array is allocated only once in the lifetime of the; clones array. All objects must be of the same class. For the rest; this class has the same properties as TObjArray. To reduce the very large number of new and delete calls in large; loops like this (O(100000) x O(10000) times new/delete):; ~~~ {.cpp}; TObjArray a(10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; a[i] = new TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete();; }; ~~~; One better uses a TClonesArray which reduces the number of; new/delete calls to only O(10000):; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear() or a.Clear(""C""); }; ~~~; To reduce the number of call to the constructor (especially useful; if the user class requires memory allocation), the object can be; added (and constructed when needed) using ConstructedAt which only; calls the constructor once per slot.; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *alw",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:2368,Energy Efficiency,allocate,allocated,2368," or a.Clear(""C""); }; ~~~; To reduce the number of call to the constructor (especially useful; if the user class requires memory allocation), the object can be; added (and constructed when needed) using ConstructedAt which only; calls the constructor once per slot.; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClones",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:2541,Energy Efficiency,allocate,allocated,2541,"d constructed when needed) using ConstructedAt which only; calls the constructor once per slot.; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; wh",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:2591,Energy Efficiency,efficient,efficiently,2591,"d constructed when needed) using ConstructedAt which only; calls the constructor once per slot.; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; wh",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:2684,Energy Efficiency,allocate,allocate,2684,"sArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do n",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:2890,Energy Efficiency,reduce,reduce,2890,"structedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more me",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:3404,Energy Efficiency,allocate,allocated,3404,"mory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. ### NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. - Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; - TClonesArray object classes containing pointers allocate memory.; To avoid causing memory leaks, special Clear(""C"") must be used; for clearing TClonesArray. When option ""C"" is specified, ROOT; automatically executes the Clear() method (by default it is; empty contained in TObject). This method must be overridden in; the relevant TClonesArray ob",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:4124,Energy Efficiency,allocate,allocate,4124," new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. ### NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. - Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; - TClonesArray object classes containing pointers allocate memory.; To avoid causing memory leaks, special Clear(""C"") must be used; for clearing TClonesArray. When option ""C"" is specified, ROOT; automatically executes the Clear() method (by default it is; empty contained in TObject). This method must be overridden in; the relevant TClonesArray object class, implementing the reset; procedure for pointer objects.; - If the objects are added using the placement new then the Clear must; deallocate the memory.; - If the objects are added using TClonesArray::ConstructedAt then the; heap-based memory can stay allocated and reused as the constructor is; not called for already constructed/added object.; - To reduce memory fragmentation, please make sure that the; TClonesArrays are not destroyed and created on every event. They; must only be constructed/destructed at the beginning/end of the; run.; */",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:4684,Energy Efficiency,allocate,allocated,4684," new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. ### NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. - Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; - TClonesArray object classes containing pointers allocate memory.; To avoid causing memory leaks, special Clear(""C"") must be used; for clearing TClonesArray. When option ""C"" is specified, ROOT; automatically executes the Clear() method (by default it is; empty contained in TObject). This method must be overridden in; the relevant TClonesArray object class, implementing the reset; procedure for pointer objects.; - If the objects are added using the placement new then the Clear must; deallocate the memory.; - If the objects are added using TClonesArray::ConstructedAt then the; heap-based memory can stay allocated and reused as the constructor is; not called for already constructed/added object.; - To reduce memory fragmentation, please make sure that the; TClonesArrays are not destroyed and created on every event. They; must only be constructed/destructed at the beginning/end of the; run.; */",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:4783,Energy Efficiency,reduce,reduce,4783," new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. ### NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. - Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; - TClonesArray object classes containing pointers allocate memory.; To avoid causing memory leaks, special Clear(""C"") must be used; for clearing TClonesArray. When option ""C"" is specified, ROOT; automatically executes the Clear() method (by default it is; empty contained in TObject). This method must be overridden in; the relevant TClonesArray object class, implementing the reset; procedure for pointer objects.; - If the objects are added using the placement new then the Clear must; deallocate the memory.; - If the objects are added using TClonesArray::ConstructedAt then the; heap-based memory can stay allocated and reused as the constructor is; not called for already constructed/added object.; - To reduce memory fragmentation, please make sure that the; TClonesArrays are not destroyed and created on every event. They; must only be constructed/destructed at the beginning/end of the; run.; */",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:3226,Performance,perform,performance,3226,"lowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. ### NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. - Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; - TClonesArray object classes containing pointers allocate memory.; To avoid ",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:2564,Safety,recover,recovered,2564,"d constructed when needed) using ConstructedAt which only; calls the constructor once per slot.; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; wh",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:3159,Safety,avoid,avoiding,3159,"lowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. ### NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. - Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; - TClonesArray object classes containing pointers allocate memory.; To avoid ",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:3677,Safety,avoid,avoid,3677,"ic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. ### NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. - Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; - TClonesArray object classes containing pointers allocate memory.; To avoid causing memory leaks, special Clear(""C"") must be used; for clearing TClonesArray. When option ""C"" is specified, ROOT; automatically executes the Clear() method (by default it is; empty contained in TObject). This method must be overridden in; the relevant TClonesArray object class, implementing the reset; procedure for pointer objects.; - If the objects are added using the placement new then the Clear must; deallocate the memory.; - If the objects are added using TClonesArray::ConstructedAt then the; heap-based memory can stay allocated and reused as the constructor is; not called for already constructed/added obje",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:4145,Safety,avoid,avoid,4145," new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. ### NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. - Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; - TClonesArray object classes containing pointers allocate memory.; To avoid causing memory leaks, special Clear(""C"") must be used; for clearing TClonesArray. When option ""C"" is specified, ROOT; automatically executes the Clear() method (by default it is; empty contained in TObject). This method must be overridden in; the relevant TClonesArray object class, implementing the reset; procedure for pointer objects.; - If the objects are added using the placement new then the Clear must; deallocate the memory.; - If the objects are added using TClonesArray::ConstructedAt then the; heap-based memory can stay allocated and reused as the constructor is; not called for already constructed/added object.; - To reduce memory fragmentation, please make sure that the; TClonesArrays are not destroyed and created on every event. They; must only be constructed/destructed at the beginning/end of the; run.; */",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:2922,Security,access,access,2922,"structedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more me",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:1383,Usability,Clear,Clear,1383,"********************/; /** \class TClonesArray; \ingroup Containers; An array of clone (identical) objects. Memory for the objects; stored in the array is allocated only once in the lifetime of the; clones array. All objects must be of the same class. For the rest; this class has the same properties as TObjArray. To reduce the very large number of new and delete calls in large; loops like this (O(100000) x O(10000) times new/delete):; ~~~ {.cpp}; TObjArray a(10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; a[i] = new TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete();; }; ~~~; One better uses a TClonesArray which reduces the number of; new/delete calls to only O(10000):; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear() or a.Clear(""C""); }; ~~~; To reduce the number of call to the constructor (especially useful; if the user class requires memory allocation), the object can be; added (and constructed when needed) using ConstructedAt which only; calls the constructor once per slot.; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a ",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:1396,Usability,Clear,Clear,1396,"ed in the array is allocated only once in the lifetime of the; clones array. All objects must be of the same class. For the rest; this class has the same properties as TObjArray. To reduce the very large number of new and delete calls in large; loops like this (O(100000) x O(10000) times new/delete):; ~~~ {.cpp}; TObjArray a(10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; a[i] = new TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete();; }; ~~~; One better uses a TClonesArray which reduces the number of; new/delete calls to only O(10000):; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear() or a.Clear(""C""); }; ~~~; To reduce the number of call to the constructor (especially useful; if the user class requires memory allocation), the object can be; added (and constructed when needed) using ConstructedAt which only; calls the constructor once per slot.; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *alw",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:1914,Usability,Clear,Clear,1914,"for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; a[i] = new TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete();; }; ~~~; One better uses a TClonesArray which reduces the number of; new/delete calls to only O(10000):; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear() or a.Clear(""C""); }; ~~~; To reduce the number of call to the constructor (especially useful; if the user class requires memory allocation), the object can be; added (and constructed when needed) using ConstructedAt which only; calls the constructor once per slot.; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory a",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:1931,Usability,Clear,Clear,1931,",...);; ...; ...; }; ...; a.Delete();; }; ~~~; One better uses a TClonesArray which reduces the number of; new/delete calls to only O(10000):; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear() or a.Clear(""C""); }; ~~~; To reduce the number of call to the constructor (especially useful; if the user class requires memory allocation), the object can be; added (and constructed when needed) using ConstructedAt which only; calls the constructor once per slot.; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive ",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:3328,Usability,Clear,Clear,3328,"lity of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. ### NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. - Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; - TClonesArray object classes containing pointers allocate memory.; To avoid causing memory leaks, special Clear(""C"") must be used; for clearing TClonesArray. When option ""C"" is specified, ROOT; automatically executes the Clear() met",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:3573,Usability,Clear,Clear,3573,"memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. ### NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. - Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; - TClonesArray object classes containing pointers allocate memory.; To avoid causing memory leaks, special Clear(""C"") must be used; for clearing TClonesArray. When option ""C"" is specified, ROOT; automatically executes the Clear() method (by default it is; empty contained in TObject). This method must be overridden in; the relevant TClonesArray object class, implementing the reset; procedure for pointer objects.; - If the objects are added using the placement new then the Cl",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:3987,Usability,Clear,Clear,3987," new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. ### NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. - Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; - TClonesArray object classes containing pointers allocate memory.; To avoid causing memory leaks, special Clear(""C"") must be used; for clearing TClonesArray. When option ""C"" is specified, ROOT; automatically executes the Clear() method (by default it is; empty contained in TObject). This method must be overridden in; the relevant TClonesArray object class, implementing the reset; procedure for pointer objects.; - If the objects are added using the placement new then the Clear must; deallocate the memory.; - If the objects are added using TClonesArray::ConstructedAt then the; heap-based memory can stay allocated and reused as the constructor is; not called for already constructed/added object.; - To reduce memory fragmentation, please make sure that the; TClonesArrays are not destroyed and created on every event. They; must only be constructed/destructed at the beginning/end of the; run.; */",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:3998,Usability,Clear,Clear,3998," new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. ### NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. - Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; - TClonesArray object classes containing pointers allocate memory.; To avoid causing memory leaks, special Clear(""C"") must be used; for clearing TClonesArray. When option ""C"" is specified, ROOT; automatically executes the Clear() method (by default it is; empty contained in TObject). This method must be overridden in; the relevant TClonesArray object class, implementing the reset; procedure for pointer objects.; - If the objects are added using the placement new then the Clear must; deallocate the memory.; - If the objects are added using TClonesArray::ConstructedAt then the; heap-based memory can stay allocated and reused as the constructor is; not called for already constructed/added object.; - To reduce memory fragmentation, please make sure that the; TClonesArrays are not destroyed and created on every event. They; must only be constructed/destructed at the beginning/end of the; run.; */",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:4181,Usability,Clear,Clear,4181," new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. ### NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. - Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; - TClonesArray object classes containing pointers allocate memory.; To avoid causing memory leaks, special Clear(""C"") must be used; for clearing TClonesArray. When option ""C"" is specified, ROOT; automatically executes the Clear() method (by default it is; empty contained in TObject). This method must be overridden in; the relevant TClonesArray object class, implementing the reset; procedure for pointer objects.; - If the objects are added using the placement new then the Clear must; deallocate the memory.; - If the objects are added using TClonesArray::ConstructedAt then the; heap-based memory can stay allocated and reused as the constructor is; not called for already constructed/added object.; - To reduce memory fragmentation, please make sure that the; TClonesArrays are not destroyed and created on every event. They; must only be constructed/destructed at the beginning/end of the; run.; */",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:4210,Usability,clear,clearing,4210," new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. ### NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. - Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; - TClonesArray object classes containing pointers allocate memory.; To avoid causing memory leaks, special Clear(""C"") must be used; for clearing TClonesArray. When option ""C"" is specified, ROOT; automatically executes the Clear() method (by default it is; empty contained in TObject). This method must be overridden in; the relevant TClonesArray object class, implementing the reset; procedure for pointer objects.; - If the objects are added using the placement new then the Clear must; deallocate the memory.; - If the objects are added using TClonesArray::ConstructedAt then the; heap-based memory can stay allocated and reused as the constructor is; not called for already constructed/added object.; - To reduce memory fragmentation, please make sure that the; TClonesArrays are not destroyed and created on every event. They; must only be constructed/destructed at the beginning/end of the; run.; */",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:4296,Usability,Clear,Clear,4296," new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. ### NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. - Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; - TClonesArray object classes containing pointers allocate memory.; To avoid causing memory leaks, special Clear(""C"") must be used; for clearing TClonesArray. When option ""C"" is specified, ROOT; automatically executes the Clear() method (by default it is; empty contained in TObject). This method must be overridden in; the relevant TClonesArray object class, implementing the reset; procedure for pointer objects.; - If the objects are added using the placement new then the Clear must; deallocate the memory.; - If the objects are added using TClonesArray::ConstructedAt then the; heap-based memory can stay allocated and reused as the constructor is; not called for already constructed/added object.; - To reduce memory fragmentation, please make sure that the; TClonesArrays are not destroyed and created on every event. They; must only be constructed/destructed at the beginning/end of the; run.; */",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:4550,Usability,Clear,Clear,4550," new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. ### NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. - Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; - TClonesArray object classes containing pointers allocate memory.; To avoid causing memory leaks, special Clear(""C"") must be used; for clearing TClonesArray. When option ""C"" is specified, ROOT; automatically executes the Clear() method (by default it is; empty contained in TObject). This method must be overridden in; the relevant TClonesArray object class, implementing the reset; procedure for pointer objects.; - If the objects are added using the placement new then the Clear must; deallocate the memory.; - If the objects are added using TClonesArray::ConstructedAt then the; heap-based memory can stay allocated and reused as the constructor is; not called for already constructed/added object.; - To reduce memory fragmentation, please make sure that the; TClonesArrays are not destroyed and created on every event. They; must only be constructed/destructed at the beginning/end of the; run.; */",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:42,Deployability,release,release,42,"/// Internal Utility routine to correctly release the memory for an object",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:21,Integrability,rout,routine,21,"/// Internal Utility routine to correctly release the memory for an object",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:148,Modifiability,inherit,inherit,148,"////////////////////////////////////////////////////////////////////////////////; /// Create an array of clone objects of classname. The class must inherit from; /// TObject.; /// The second argument s indicates an approximate number of objects; /// that will be entered in the array. If more than s objects are entered,; /// the array will be automatically expanded.; ///; /// The third argument is not used anymore and only there for backward; /// compatibility reasons.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:147,Modifiability,inherit,inherit,147,"////////////////////////////////////////////////////////////////////////////////; /// Create an array of clone objects of class cl. The class must inherit from; /// TObject.; /// The second argument, s, indicates an approximate number of objects; /// that will be entered in the array. If more than s objects are entered,; /// the array will be automatically expanded.; ///; /// The third argument is not used anymore and only there for backward; /// compatibility reasons.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:245,Performance,perform,performance,245,"////////////////////////////////////////////////////////////////////////////////; /// When the kBypassStreamer bit is set, the automatically; /// generated Streamer can call directly TClass::WriteBuffer.; /// Bypassing the Streamer improves the performance when writing/reading; /// the objects in the TClonesArray. However there is a drawback:; /// When a TClonesArray is written with split=0 bypassing the Streamer,; /// the StreamerInfo of the class in the array being optimized,; /// one cannot use later the TClonesArray with split>0. For example,; /// there is a problem with the following scenario:; /// 1. A class Foo has a TClonesArray of Bar objects; /// 2. The Foo object is written with split=0 to Tree T1.; /// In this case the StreamerInfo for the class Bar is created; /// in optimized mode in such a way that data members of the same type; /// are written as an array improving the I/O performance.; /// 3. In a new program, T1 is read and a new Tree T2 is created; /// with the object Foo in split>1; /// 4. When the T2 branch is created, the StreamerInfo for the class Bar; /// is created with no optimization (mandatory for the split mode).; /// The optimized Bar StreamerInfo is going to be used to read; /// the TClonesArray in T1. The result will be Bar objects with; /// data member values not in the right sequence.; /// The solution to this problem is to call BypassStreamer(kFALSE); /// for the TClonesArray. In this case, the normal Bar::Streamer function; /// will be called. The Bar::Streamer function works OK independently; /// if the Bar StreamerInfo had been generated in optimized mode or not.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:472,Performance,optimiz,optimized,472,"////////////////////////////////////////////////////////////////////////////////; /// When the kBypassStreamer bit is set, the automatically; /// generated Streamer can call directly TClass::WriteBuffer.; /// Bypassing the Streamer improves the performance when writing/reading; /// the objects in the TClonesArray. However there is a drawback:; /// When a TClonesArray is written with split=0 bypassing the Streamer,; /// the StreamerInfo of the class in the array being optimized,; /// one cannot use later the TClonesArray with split>0. For example,; /// there is a problem with the following scenario:; /// 1. A class Foo has a TClonesArray of Bar objects; /// 2. The Foo object is written with split=0 to Tree T1.; /// In this case the StreamerInfo for the class Bar is created; /// in optimized mode in such a way that data members of the same type; /// are written as an array improving the I/O performance.; /// 3. In a new program, T1 is read and a new Tree T2 is created; /// with the object Foo in split>1; /// 4. When the T2 branch is created, the StreamerInfo for the class Bar; /// is created with no optimization (mandatory for the split mode).; /// The optimized Bar StreamerInfo is going to be used to read; /// the TClonesArray in T1. The result will be Bar objects with; /// data member values not in the right sequence.; /// The solution to this problem is to call BypassStreamer(kFALSE); /// for the TClonesArray. In this case, the normal Bar::Streamer function; /// will be called. The Bar::Streamer function works OK independently; /// if the Bar StreamerInfo had been generated in optimized mode or not.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:791,Performance,optimiz,optimized,791,"////////////////////////////////////////////////////////////////////////////////; /// When the kBypassStreamer bit is set, the automatically; /// generated Streamer can call directly TClass::WriteBuffer.; /// Bypassing the Streamer improves the performance when writing/reading; /// the objects in the TClonesArray. However there is a drawback:; /// When a TClonesArray is written with split=0 bypassing the Streamer,; /// the StreamerInfo of the class in the array being optimized,; /// one cannot use later the TClonesArray with split>0. For example,; /// there is a problem with the following scenario:; /// 1. A class Foo has a TClonesArray of Bar objects; /// 2. The Foo object is written with split=0 to Tree T1.; /// In this case the StreamerInfo for the class Bar is created; /// in optimized mode in such a way that data members of the same type; /// are written as an array improving the I/O performance.; /// 3. In a new program, T1 is read and a new Tree T2 is created; /// with the object Foo in split>1; /// 4. When the T2 branch is created, the StreamerInfo for the class Bar; /// is created with no optimization (mandatory for the split mode).; /// The optimized Bar StreamerInfo is going to be used to read; /// the TClonesArray in T1. The result will be Bar objects with; /// data member values not in the right sequence.; /// The solution to this problem is to call BypassStreamer(kFALSE); /// for the TClonesArray. In this case, the normal Bar::Streamer function; /// will be called. The Bar::Streamer function works OK independently; /// if the Bar StreamerInfo had been generated in optimized mode or not.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:902,Performance,perform,performance,902,"////////////////////////////////////////////////////////////////////////////////; /// When the kBypassStreamer bit is set, the automatically; /// generated Streamer can call directly TClass::WriteBuffer.; /// Bypassing the Streamer improves the performance when writing/reading; /// the objects in the TClonesArray. However there is a drawback:; /// When a TClonesArray is written with split=0 bypassing the Streamer,; /// the StreamerInfo of the class in the array being optimized,; /// one cannot use later the TClonesArray with split>0. For example,; /// there is a problem with the following scenario:; /// 1. A class Foo has a TClonesArray of Bar objects; /// 2. The Foo object is written with split=0 to Tree T1.; /// In this case the StreamerInfo for the class Bar is created; /// in optimized mode in such a way that data members of the same type; /// are written as an array improving the I/O performance.; /// 3. In a new program, T1 is read and a new Tree T2 is created; /// with the object Foo in split>1; /// 4. When the T2 branch is created, the StreamerInfo for the class Bar; /// is created with no optimization (mandatory for the split mode).; /// The optimized Bar StreamerInfo is going to be used to read; /// the TClonesArray in T1. The result will be Bar objects with; /// data member values not in the right sequence.; /// The solution to this problem is to call BypassStreamer(kFALSE); /// for the TClonesArray. In this case, the normal Bar::Streamer function; /// will be called. The Bar::Streamer function works OK independently; /// if the Bar StreamerInfo had been generated in optimized mode or not.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:1115,Performance,optimiz,optimization,1115,"////////////////////////////////////////////////////////////////////////////////; /// When the kBypassStreamer bit is set, the automatically; /// generated Streamer can call directly TClass::WriteBuffer.; /// Bypassing the Streamer improves the performance when writing/reading; /// the objects in the TClonesArray. However there is a drawback:; /// When a TClonesArray is written with split=0 bypassing the Streamer,; /// the StreamerInfo of the class in the array being optimized,; /// one cannot use later the TClonesArray with split>0. For example,; /// there is a problem with the following scenario:; /// 1. A class Foo has a TClonesArray of Bar objects; /// 2. The Foo object is written with split=0 to Tree T1.; /// In this case the StreamerInfo for the class Bar is created; /// in optimized mode in such a way that data members of the same type; /// are written as an array improving the I/O performance.; /// 3. In a new program, T1 is read and a new Tree T2 is created; /// with the object Foo in split>1; /// 4. When the T2 branch is created, the StreamerInfo for the class Bar; /// is created with no optimization (mandatory for the split mode).; /// The optimized Bar StreamerInfo is going to be used to read; /// the TClonesArray in T1. The result will be Bar objects with; /// data member values not in the right sequence.; /// The solution to this problem is to call BypassStreamer(kFALSE); /// for the TClonesArray. In this case, the normal Bar::Streamer function; /// will be called. The Bar::Streamer function works OK independently; /// if the Bar StreamerInfo had been generated in optimized mode or not.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:1169,Performance,optimiz,optimized,1169,"////////////////////////////////////////////////////////////////////////////////; /// When the kBypassStreamer bit is set, the automatically; /// generated Streamer can call directly TClass::WriteBuffer.; /// Bypassing the Streamer improves the performance when writing/reading; /// the objects in the TClonesArray. However there is a drawback:; /// When a TClonesArray is written with split=0 bypassing the Streamer,; /// the StreamerInfo of the class in the array being optimized,; /// one cannot use later the TClonesArray with split>0. For example,; /// there is a problem with the following scenario:; /// 1. A class Foo has a TClonesArray of Bar objects; /// 2. The Foo object is written with split=0 to Tree T1.; /// In this case the StreamerInfo for the class Bar is created; /// in optimized mode in such a way that data members of the same type; /// are written as an array improving the I/O performance.; /// 3. In a new program, T1 is read and a new Tree T2 is created; /// with the object Foo in split>1; /// 4. When the T2 branch is created, the StreamerInfo for the class Bar; /// is created with no optimization (mandatory for the split mode).; /// The optimized Bar StreamerInfo is going to be used to read; /// the TClonesArray in T1. The result will be Bar objects with; /// data member values not in the right sequence.; /// The solution to this problem is to call BypassStreamer(kFALSE); /// for the TClonesArray. In this case, the normal Bar::Streamer function; /// will be called. The Bar::Streamer function works OK independently; /// if the Bar StreamerInfo had been generated in optimized mode or not.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:1605,Performance,optimiz,optimized,1605,"////////////////////////////////////////////////////////////////////////////////; /// When the kBypassStreamer bit is set, the automatically; /// generated Streamer can call directly TClass::WriteBuffer.; /// Bypassing the Streamer improves the performance when writing/reading; /// the objects in the TClonesArray. However there is a drawback:; /// When a TClonesArray is written with split=0 bypassing the Streamer,; /// the StreamerInfo of the class in the array being optimized,; /// one cannot use later the TClonesArray with split>0. For example,; /// there is a problem with the following scenario:; /// 1. A class Foo has a TClonesArray of Bar objects; /// 2. The Foo object is written with split=0 to Tree T1.; /// In this case the StreamerInfo for the class Bar is created; /// in optimized mode in such a way that data members of the same type; /// are written as an array improving the I/O performance.; /// 3. In a new program, T1 is read and a new Tree T2 is created; /// with the object Foo in split>1; /// 4. When the T2 branch is created, the StreamerInfo for the class Bar; /// is created with no optimization (mandatory for the split mode).; /// The optimized Bar StreamerInfo is going to be used to read; /// the TClonesArray in T1. The result will be Bar objects with; /// data member values not in the right sequence.; /// The solution to this problem is to call BypassStreamer(kFALSE); /// for the TClonesArray. In this case, the normal Bar::Streamer function; /// will be called. The Bar::Streamer function works OK independently; /// if the Bar StreamerInfo had been generated in optimized mode or not.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:194,Energy Efficiency,allocate,allocated,194,"////////////////////////////////////////////////////////////////////////////////; /// Get an object at index 'idx' that is guaranteed to have been constructed.; /// It might be either a freshly allocated object or one that had already been; /// allocated (and assumingly used). In the later case, it is the callers; /// responsibility to insure that the object is returned to a known state,; /// usually by calling the Clear method on the TClonesArray.; ///; /// Tests to see if the destructor has been called on the object.; /// If so, or if the object has never been constructed the class constructor is called using; /// New(). If not, return a pointer to the correct memory location.; /// This explicitly to deal with TObject classes that allocate memory; /// which will be reset (but not deallocated) in their Clear(); /// functions.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:245,Energy Efficiency,allocate,allocated,245,"////////////////////////////////////////////////////////////////////////////////; /// Get an object at index 'idx' that is guaranteed to have been constructed.; /// It might be either a freshly allocated object or one that had already been; /// allocated (and assumingly used). In the later case, it is the callers; /// responsibility to insure that the object is returned to a known state,; /// usually by calling the Clear method on the TClonesArray.; ///; /// Tests to see if the destructor has been called on the object.; /// If so, or if the object has never been constructed the class constructor is called using; /// New(). If not, return a pointer to the correct memory location.; /// This explicitly to deal with TObject classes that allocate memory; /// which will be reset (but not deallocated) in their Clear(); /// functions.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:743,Energy Efficiency,allocate,allocate,743,"////////////////////////////////////////////////////////////////////////////////; /// Get an object at index 'idx' that is guaranteed to have been constructed.; /// It might be either a freshly allocated object or one that had already been; /// allocated (and assumingly used). In the later case, it is the callers; /// responsibility to insure that the object is returned to a known state,; /// usually by calling the Clear method on the TClonesArray.; ///; /// Tests to see if the destructor has been called on the object.; /// If so, or if the object has never been constructed the class constructor is called using; /// New(). If not, return a pointer to the correct memory location.; /// This explicitly to deal with TObject classes that allocate memory; /// which will be reset (but not deallocated) in their Clear(); /// functions.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:463,Testability,Test,Tests,463,"////////////////////////////////////////////////////////////////////////////////; /// Get an object at index 'idx' that is guaranteed to have been constructed.; /// It might be either a freshly allocated object or one that had already been; /// allocated (and assumingly used). In the later case, it is the callers; /// responsibility to insure that the object is returned to a known state,; /// usually by calling the Clear method on the TClonesArray.; ///; /// Tests to see if the destructor has been called on the object.; /// If so, or if the object has never been constructed the class constructor is called using; /// New(). If not, return a pointer to the correct memory location.; /// This explicitly to deal with TObject classes that allocate memory; /// which will be reset (but not deallocated) in their Clear(); /// functions.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:419,Usability,Clear,Clear,419,"////////////////////////////////////////////////////////////////////////////////; /// Get an object at index 'idx' that is guaranteed to have been constructed.; /// It might be either a freshly allocated object or one that had already been; /// allocated (and assumingly used). In the later case, it is the callers; /// responsibility to insure that the object is returned to a known state,; /// usually by calling the Clear method on the TClonesArray.; ///; /// Tests to see if the destructor has been called on the object.; /// If so, or if the object has never been constructed the class constructor is called using; /// New(). If not, return a pointer to the correct memory location.; /// This explicitly to deal with TObject classes that allocate memory; /// which will be reset (but not deallocated) in their Clear(); /// functions.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:815,Usability,Clear,Clear,815,"////////////////////////////////////////////////////////////////////////////////; /// Get an object at index 'idx' that is guaranteed to have been constructed.; /// It might be either a freshly allocated object or one that had already been; /// allocated (and assumingly used). In the later case, it is the callers; /// responsibility to insure that the object is returned to a known state,; /// usually by calling the Clear method on the TClonesArray.; ///; /// Tests to see if the destructor has been called on the object.; /// If so, or if the object has never been constructed the class constructor is called using; /// New(). If not, return a pointer to the correct memory location.; /// This explicitly to deal with TObject classes that allocate memory; /// which will be reset (but not deallocated) in their Clear(); /// functions.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:194,Energy Efficiency,allocate,allocated,194,"////////////////////////////////////////////////////////////////////////////////; /// Get an object at index 'idx' that is guaranteed to have been constructed.; /// It might be either a freshly allocated object or one that had already been; /// allocated (and assumingly used). In the later case, the function Clear; /// will be called and passed the value of 'clear_options'; ///; /// Tests to see if the destructor has been called on the object.; /// If so, or if the object has never been constructed the class constructor is called using; /// New(). If not, return a pointer to the correct memory location.; /// This explicitly to deal with TObject classes that allocate memory; /// which will be reset (but not deallocated) in their Clear(); /// functions.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:245,Energy Efficiency,allocate,allocated,245,"////////////////////////////////////////////////////////////////////////////////; /// Get an object at index 'idx' that is guaranteed to have been constructed.; /// It might be either a freshly allocated object or one that had already been; /// allocated (and assumingly used). In the later case, the function Clear; /// will be called and passed the value of 'clear_options'; ///; /// Tests to see if the destructor has been called on the object.; /// If so, or if the object has never been constructed the class constructor is called using; /// New(). If not, return a pointer to the correct memory location.; /// This explicitly to deal with TObject classes that allocate memory; /// which will be reset (but not deallocated) in their Clear(); /// functions.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:666,Energy Efficiency,allocate,allocate,666,"////////////////////////////////////////////////////////////////////////////////; /// Get an object at index 'idx' that is guaranteed to have been constructed.; /// It might be either a freshly allocated object or one that had already been; /// allocated (and assumingly used). In the later case, the function Clear; /// will be called and passed the value of 'clear_options'; ///; /// Tests to see if the destructor has been called on the object.; /// If so, or if the object has never been constructed the class constructor is called using; /// New(). If not, return a pointer to the correct memory location.; /// This explicitly to deal with TObject classes that allocate memory; /// which will be reset (but not deallocated) in their Clear(); /// functions.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:386,Testability,Test,Tests,386,"////////////////////////////////////////////////////////////////////////////////; /// Get an object at index 'idx' that is guaranteed to have been constructed.; /// It might be either a freshly allocated object or one that had already been; /// allocated (and assumingly used). In the later case, the function Clear; /// will be called and passed the value of 'clear_options'; ///; /// Tests to see if the destructor has been called on the object.; /// If so, or if the object has never been constructed the class constructor is called using; /// New(). If not, return a pointer to the correct memory location.; /// This explicitly to deal with TObject classes that allocate memory; /// which will be reset (but not deallocated) in their Clear(); /// functions.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:310,Usability,Clear,Clear,310,"////////////////////////////////////////////////////////////////////////////////; /// Get an object at index 'idx' that is guaranteed to have been constructed.; /// It might be either a freshly allocated object or one that had already been; /// allocated (and assumingly used). In the later case, the function Clear; /// will be called and passed the value of 'clear_options'; ///; /// Tests to see if the destructor has been called on the object.; /// If so, or if the object has never been constructed the class constructor is called using; /// New(). If not, return a pointer to the correct memory location.; /// This explicitly to deal with TObject classes that allocate memory; /// which will be reset (but not deallocated) in their Clear(); /// functions.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:738,Usability,Clear,Clear,738,"////////////////////////////////////////////////////////////////////////////////; /// Get an object at index 'idx' that is guaranteed to have been constructed.; /// It might be either a freshly allocated object or one that had already been; /// allocated (and assumingly used). In the later case, the function Clear; /// will be called and passed the value of 'clear_options'; ///; /// Tests to see if the destructor has been called on the object.; /// If so, or if the object has never been constructed the class constructor is called using; /// New(). If not, return a pointer to the correct memory location.; /// This explicitly to deal with TObject classes that allocate memory; /// which will be reset (but not deallocated) in their Clear(); /// functions.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:161,Energy Efficiency,allocate,allocate,161,"////////////////////////////////////////////////////////////////////////////////; /// Clear the clones array. Only use this routine when your objects don't; /// allocate memory since it will not call the object dtors.; /// However, if the class in the TClonesArray implements the function; /// Clear(Option_t *option) and if option = ""C"" the function Clear(); /// is called for all objects in the array. In the function Clear(), one; /// can delete objects or dynamic arrays allocated in the class.; /// This procedure is much faster than calling TClonesArray::Delete().; /// When the option starts with ""C+"", eg ""C+xyz"" the objects in the array; /// are in turn cleared with the option ""xyz""",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:475,Energy Efficiency,allocate,allocated,475,"////////////////////////////////////////////////////////////////////////////////; /// Clear the clones array. Only use this routine when your objects don't; /// allocate memory since it will not call the object dtors.; /// However, if the class in the TClonesArray implements the function; /// Clear(Option_t *option) and if option = ""C"" the function Clear(); /// is called for all objects in the array. In the function Clear(), one; /// can delete objects or dynamic arrays allocated in the class.; /// This procedure is much faster than calling TClonesArray::Delete().; /// When the option starts with ""C+"", eg ""C+xyz"" the objects in the array; /// are in turn cleared with the option ""xyz""",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:124,Integrability,rout,routine,124,"////////////////////////////////////////////////////////////////////////////////; /// Clear the clones array. Only use this routine when your objects don't; /// allocate memory since it will not call the object dtors.; /// However, if the class in the TClonesArray implements the function; /// Clear(Option_t *option) and if option = ""C"" the function Clear(); /// is called for all objects in the array. In the function Clear(), one; /// can delete objects or dynamic arrays allocated in the class.; /// This procedure is much faster than calling TClonesArray::Delete().; /// When the option starts with ""C+"", eg ""C+xyz"" the objects in the array; /// are in turn cleared with the option ""xyz""",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear the clones array. Only use this routine when your objects don't; /// allocate memory since it will not call the object dtors.; /// However, if the class in the TClonesArray implements the function; /// Clear(Option_t *option) and if option = ""C"" the function Clear(); /// is called for all objects in the array. In the function Clear(), one; /// can delete objects or dynamic arrays allocated in the class.; /// This procedure is much faster than calling TClonesArray::Delete().; /// When the option starts with ""C+"", eg ""C+xyz"" the objects in the array; /// are in turn cleared with the option ""xyz""",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:294,Usability,Clear,Clear,294,"////////////////////////////////////////////////////////////////////////////////; /// Clear the clones array. Only use this routine when your objects don't; /// allocate memory since it will not call the object dtors.; /// However, if the class in the TClonesArray implements the function; /// Clear(Option_t *option) and if option = ""C"" the function Clear(); /// is called for all objects in the array. In the function Clear(), one; /// can delete objects or dynamic arrays allocated in the class.; /// This procedure is much faster than calling TClonesArray::Delete().; /// When the option starts with ""C+"", eg ""C+xyz"" the objects in the array; /// are in turn cleared with the option ""xyz""",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:351,Usability,Clear,Clear,351,"////////////////////////////////////////////////////////////////////////////////; /// Clear the clones array. Only use this routine when your objects don't; /// allocate memory since it will not call the object dtors.; /// However, if the class in the TClonesArray implements the function; /// Clear(Option_t *option) and if option = ""C"" the function Clear(); /// is called for all objects in the array. In the function Clear(), one; /// can delete objects or dynamic arrays allocated in the class.; /// This procedure is much faster than calling TClonesArray::Delete().; /// When the option starts with ""C+"", eg ""C+xyz"" the objects in the array; /// are in turn cleared with the option ""xyz""",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:420,Usability,Clear,Clear,420,"////////////////////////////////////////////////////////////////////////////////; /// Clear the clones array. Only use this routine when your objects don't; /// allocate memory since it will not call the object dtors.; /// However, if the class in the TClonesArray implements the function; /// Clear(Option_t *option) and if option = ""C"" the function Clear(); /// is called for all objects in the array. In the function Clear(), one; /// can delete objects or dynamic arrays allocated in the class.; /// This procedure is much faster than calling TClonesArray::Delete().; /// When the option starts with ""C+"", eg ""C+xyz"" the objects in the array; /// are in turn cleared with the option ""xyz""",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:663,Usability,clear,cleared,663,"////////////////////////////////////////////////////////////////////////////////; /// Clear the clones array. Only use this routine when your objects don't; /// allocate memory since it will not call the object dtors.; /// However, if the class in the TClonesArray implements the function; /// Clear(Option_t *option) and if option = ""C"" the function Clear(); /// is called for all objects in the array. In the function Clear(), one; /// can delete objects or dynamic arrays allocated in the class.; /// This procedure is much faster than calling TClonesArray::Delete().; /// When the option starts with ""C+"", eg ""C+xyz"" the objects in the array; /// are in turn cleared with the option ""xyz""",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:145,Energy Efficiency,allocate,allocate,145,"////////////////////////////////////////////////////////////////////////////////; /// Clear the clones array. Use this routine when your objects allocate; /// memory (e.g. objects inheriting from TNamed or containing TStrings; /// allocate memory). If not you better use Clear() since if is faster.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:231,Energy Efficiency,allocate,allocate,231,"////////////////////////////////////////////////////////////////////////////////; /// Clear the clones array. Use this routine when your objects allocate; /// memory (e.g. objects inheriting from TNamed or containing TStrings; /// allocate memory). If not you better use Clear() since if is faster.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:119,Integrability,rout,routine,119,"////////////////////////////////////////////////////////////////////////////////; /// Clear the clones array. Use this routine when your objects allocate; /// memory (e.g. objects inheriting from TNamed or containing TStrings; /// allocate memory). If not you better use Clear() since if is faster.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:180,Modifiability,inherit,inheriting,180,"////////////////////////////////////////////////////////////////////////////////; /// Clear the clones array. Use this routine when your objects allocate; /// memory (e.g. objects inheriting from TNamed or containing TStrings; /// allocate memory). If not you better use Clear() since if is faster.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear the clones array. Use this routine when your objects allocate; /// memory (e.g. objects inheriting from TNamed or containing TStrings; /// allocate memory). If not you better use Clear() since if is faster.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:271,Usability,Clear,Clear,271,"////////////////////////////////////////////////////////////////////////////////; /// Clear the clones array. Use this routine when your objects allocate; /// memory (e.g. objects inheriting from TNamed or containing TStrings; /// allocate memory). If not you better use Clear() since if is faster.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:3,Deployability,release,release,3,"// release allocated space in fKeep and set to 0 so; // Expand() will shrink correctly",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:11,Energy Efficiency,allocate,allocated,11,"// release allocated space in fKeep and set to 0 so; // Expand() will shrink correctly",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:260,Energy Efficiency,allocate,allocated,260,"////////////////////////////////////////////////////////////////////////////////; /// Expand or shrink the array to n elements and create the clone; /// objects by calling their default ctor. If n is less than the current size; /// the array is shrunk and the allocated space is freed.; /// This routine is typically used to create a clonesarray into which; /// one can directly copy object data without going via the; /// ""new (arr[i]) MyObj()"" (i.e. the vtbl is already set correctly).",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:296,Integrability,rout,routine,296,"////////////////////////////////////////////////////////////////////////////////; /// Expand or shrink the array to n elements and create the clone; /// objects by calling their default ctor. If n is less than the current size; /// the array is shrunk and the allocated space is freed.; /// This routine is typically used to create a clonesarray into which; /// one can directly copy object data without going via the; /// ""new (arr[i]) MyObj()"" (i.e. the vtbl is already set correctly).",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:260,Energy Efficiency,allocate,allocated,260,"////////////////////////////////////////////////////////////////////////////////; /// Expand or shrink the array to n elements and create the clone; /// objects by calling their default ctor. If n is less than the current size; /// the array is shrunk but the allocated space is _not_ freed.; /// This routine is typically used to create a clonesarray into which; /// one can directly copy object data without going via the; /// ""new (arr[i]) MyObj()"" (i.e. the vtbl is already set correctly).; /// This is a simplified version of ExpandCreate used in the TTree mechanism.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:302,Integrability,rout,routine,302,"////////////////////////////////////////////////////////////////////////////////; /// Expand or shrink the array to n elements and create the clone; /// objects by calling their default ctor. If n is less than the current size; /// the array is shrunk but the allocated space is _not_ freed.; /// This routine is typically used to create a clonesarray into which; /// one can directly copy object data without going via the; /// ""new (arr[i]) MyObj()"" (i.e. the vtbl is already set correctly).; /// This is a simplified version of ExpandCreate used in the TTree mechanism.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:509,Usability,simpl,simplified,509,"////////////////////////////////////////////////////////////////////////////////; /// Expand or shrink the array to n elements and create the clone; /// objects by calling their default ctor. If n is less than the current size; /// the array is shrunk but the allocated space is _not_ freed.; /// This routine is typically used to create a clonesarray into which; /// one can directly copy object data without going via the; /// ""new (arr[i]) MyObj()"" (i.e. the vtbl is already set correctly).; /// This is a simplified version of ExpandCreate used in the TTree mechanism.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:147,Modifiability,inherit,inherit,147,"////////////////////////////////////////////////////////////////////////////////; /// Create an array of clone objects of class cl. The class must inherit from; /// TObject.; /// The second argument s indicates an approximate number of objects; /// that will be entered in the array. If more than s objects are entered,; /// the array will be automatically expanded.; ///; /// NB: This function should not be called in the TClonesArray is already; /// initialized with a class.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:180,Modifiability,inherit,inherits,180,"////////////////////////////////////////////////////////////////////////////////; /// A TClonesArray is always the owner of the object it contains.; /// However the collection its inherits from (TObjArray) does not.; /// Hence this member function needs to be a nop for TClonesArray.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:96,Availability,error,error,96,"//this case may happen when switching from an emulated class to the real class; //may not be an error. fClass may point to a deleted object; //Error(""Streamer"", ""expecting objects of type %s, finding objects""; // "" of type %s"", fClass->GetName(), cl->GetName());; //return;",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:143,Availability,Error,Error,143,"//this case may happen when switching from an emulated class to the real class; //may not be an error. fClass may point to a deleted object; //Error(""Streamer"", ""expecting objects of type %s, finding objects""; // "" of type %s"", fClass->GetName(), cl->GetName());; //return;",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:33,Performance,optimiz,optimized,33,"//Make sure TStreamerInfo is not optimized, otherwise it will not be; //possible to support schema evolution in read mode.; //In case the StreamerInfo has already been computed and optimized,; //one must disable the option BypassStreamer",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:181,Performance,optimiz,optimized,181,"//Make sure TStreamerInfo is not optimized, otherwise it will not be; //possible to support schema evolution in read mode.; //In case the StreamerInfo has already been computed and optimized,; //one must disable the option BypassStreamer",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:197,Integrability,interface,interface,197,"// Reset the bit so that:; // obj = myClonesArray[i];; // ! obj->IsDestructed(); // will behave correctly.; // TObject::kNotDeleted is one of the higher bit that is not settable via the public; // interface. But luckily we are its friend.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:190,Availability,error,error,190,"////////////////////////////////////////////////////////////////////////////////; /// Create an object of type fClass with the default ctor at the specified; /// index. Returns 0 in case of error.",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:3,Testability,test,tests,3,"// tests",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:3,Testability,test,tests,3,"// tests",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:3,Performance,cache,cache,3,"// cache the sorted status",MatchSource.CODE_COMMENT,core/cont/src/TClonesArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:1324,Deployability,release,release,1324,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 13/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TCollection; \ingroup Containers; Collection abstract base class. This class describes the base; protocol all collection classes have to implement. The ROOT; collection classes always store pointers to objects that inherit; from TObject. They never adopt the objects. Therefore, it is the; user's responsibility to take care of deleting the actual objects; once they are not needed anymore. In exceptional cases, when the; user is 100% sure nothing else is referencing the objects in the; collection, one can delete all objects and the collection at the; same time using the Delete() function. Collections can be iterated using an iterator object (see; TIterator). Depending on the concrete collection class there may be; some additional methods of iterating. See the respective classes. TCollection inherits from TObject since we want to be able to have; collections of collections. In a later release the collections may become templatized.; */",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:526,Integrability,protocol,protocol,526,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 13/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TCollection; \ingroup Containers; Collection abstract base class. This class describes the base; protocol all collection classes have to implement. The ROOT; collection classes always store pointers to objects that inherit; from TObject. They never adopt the objects. Therefore, it is the; user's responsibility to take care of deleting the actual objects; once they are not needed anymore. In exceptional cases, when the; user is 100% sure nothing else is referencing the objects in the; collection, one can delete all objects and the collection at the; same time using the Delete() function. Collections can be iterated using an iterator object (see; TIterator). Depending on the concrete collection class there may be; some additional methods of iterating. See the respective classes. TCollection inherits from TObject since we want to be able to have; collections of collections. In a later release the collections may become templatized.; */",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:1094,Integrability,Depend,Depending,1094,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 13/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TCollection; \ingroup Containers; Collection abstract base class. This class describes the base; protocol all collection classes have to implement. The ROOT; collection classes always store pointers to objects that inherit; from TObject. They never adopt the objects. Therefore, it is the; user's responsibility to take care of deleting the actual objects; once they are not needed anymore. In exceptional cases, when the; user is 100% sure nothing else is referencing the objects in the; collection, one can delete all objects and the collection at the; same time using the Delete() function. Collections can be iterated using an iterator object (see; TIterator). Depending on the concrete collection class there may be; some additional methods of iterating. See the respective classes. TCollection inherits from TObject since we want to be able to have; collections of collections. In a later release the collections may become templatized.; */",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:644,Modifiability,inherit,inherit,644,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 13/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TCollection; \ingroup Containers; Collection abstract base class. This class describes the base; protocol all collection classes have to implement. The ROOT; collection classes always store pointers to objects that inherit; from TObject. They never adopt the objects. Therefore, it is the; user's responsibility to take care of deleting the actual objects; once they are not needed anymore. In exceptional cases, when the; user is 100% sure nothing else is referencing the objects in the; collection, one can delete all objects and the collection at the; same time using the Delete() function. Collections can be iterated using an iterator object (see; TIterator). Depending on the concrete collection class there may be; some additional methods of iterating. See the respective classes. TCollection inherits from TObject since we want to be able to have; collections of collections. In a later release the collections may become templatized.; */",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:1229,Modifiability,inherit,inherits,1229,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 13/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TCollection; \ingroup Containers; Collection abstract base class. This class describes the base; protocol all collection classes have to implement. The ROOT; collection classes always store pointers to objects that inherit; from TObject. They never adopt the objects. Therefore, it is the; user's responsibility to take care of deleting the actual objects; once they are not needed anymore. In exceptional cases, when the; user is 100% sure nothing else is referencing the objects in the; collection, one can delete all objects and the collection at the; same time using the Delete() function. Collections can be iterated using an iterator object (see; TIterator). Depending on the concrete collection class there may be; some additional methods of iterating. See the respective classes. TCollection inherits from TObject since we want to be able to have; collections of collections. In a later release the collections may become templatized.; */",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:17,Availability,Error,Error,17,"// std::cerr << ""Error in "" << function << "": Access ("" << accesstype << "") to a collection ("" <<; // collection->IsA()->GetName() << "":"" << collection <<; // "") from multiple threads at a time. holder="" << ""0x"" << std::hex << holder << "" readers="" << fReadSet.size() <<; // ""0x"" << std::hex << local << std::endl;",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:46,Security,Access,Access,46,"// std::cerr << ""Error in "" << function << "": Access ("" << accesstype << "") to a collection ("" <<; // collection->IsA()->GetName() << "":"" << collection <<; // "") from multiple threads at a time. holder="" << ""0x"" << std::hex << holder << "" readers="" << fReadSet.size() <<; // ""0x"" << std::hex << local << std::endl;",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:59,Security,access,accesstype,59,"// std::cerr << ""Error in "" << function << "": Access ("" << accesstype << "") to a collection ("" <<; // collection->IsA()->GetName() << "":"" << collection <<; // "") from multiple threads at a time. holder="" << ""0x"" << std::hex << holder << "" readers="" << fReadSet.size() <<; // ""0x"" << std::hex << local << std::endl;",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:114,Modifiability,variab,variable,114,"// fWriteCurrent was not the default id and is still the 'holder' thread id; // this id is now also in the holder variable",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:198,Performance,load,load,198,"// fWriteCurrent was local and is now none.; // std::cerr << ""#"" << ""0x"" << std::hex << local << "" zero and cleaned : "" << std::dec << fWriteCurrentRecurse; // << "" 0x"" << std::hex << fWriteCurrent.load() << "" lock:"" << this << std::endl;",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:175,Performance,load,load,175,"// fWriteCurrent was not local, just live it as is.; // std::cerr << ""#"" << ""0x"" << std::hex << local << "" zero but somebody else : "" << ""0x"" << std::hex <<; // fWriteCurrent.load() << "" lock:"" << this << std::endl;",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:147,Performance,load,load,147,"// std::cerr << ""#"" << ""0x"" << std::hex << local << "" ended with : "" << std::dec << fWriteCurrentRecurse << "" 0x"" <<; // std::hex << fWriteCurrent.load() << "" lock:"" << this << std::endl;",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:22,Safety,safe,safe,22,"// this is not thread safe ...",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:22,Safety,safe,safe,22,"// this is not thread safe ...",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:39,Security,Hash,Hash,39,"// Required since we overload TObject::Hash.",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:127,Modifiability,inherit,inherit,127,"////////////////////////////////////////////////////////////////////////////////; /// Make sure all objects in this collection inherit from class cl.",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:322,Energy Efficiency,efficient,efficient,322,"////////////////////////////////////////////////////////////////////////////////; /// Find an object in this collection using the object's IsEqual(); /// member function. Requires a sequential scan till the object has; /// been found. Returns 0 if object is not found.; /// Typically this function is overridden by a more efficient version; /// in concrete collection classes (e.g. THashTable).",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:190,Performance,perform,perform,190,"////////////////////////////////////////////////////////////////////////////////; /// For given collection entry return the string that is used to; /// identify the object and, potentially, perform wildcard/regexp; /// filtering on.",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:106,Security,access,accessible,106,"////////////////////////////////////////////////////////////////////////////////; /// Return the globally accessible collection.",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:125,Security,access,accessible,125,"////////////////////////////////////////////////////////////////////////////////; /// Set this collection to be the globally accessible collection.",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:357,Integrability,depend,depending,357,"////////////////////////////////////////////////////////////////////////////////; /// Set whether this collection is the owner (enable==true); /// of its content. If it is the owner of its contents,; /// these objects will be deleted whenever the collection itself; /// is deleted. The objects might also be deleted or destructed when Clear; /// is called (depending on the collection).",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:335,Usability,Clear,Clear,335,"////////////////////////////////////////////////////////////////////////////////; /// Set whether this collection is the owner (enable==true); /// of its content. If it is the owner of its contents,; /// these objects will be deleted whenever the collection itself; /// is deleted. The objects might also be deleted or destructed when Clear; /// is called (depending on the collection).",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:153,Safety,safe,safe,153,"////////////////////////////////////////////////////////////////////////////////; /// Set this collection to use a RW lock upon access, making it thread safe.; /// Return the previous state.; ///; /// Note: To test whether the usage is enabled do:; /// collection->TestBit(TCollection::kUseRWLock);",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:128,Security,access,access,128,"////////////////////////////////////////////////////////////////////////////////; /// Set this collection to use a RW lock upon access, making it thread safe.; /// Return the previous state.; ///; /// Note: To test whether the usage is enabled do:; /// collection->TestBit(TCollection::kUseRWLock);",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:210,Testability,test,test,210,"////////////////////////////////////////////////////////////////////////////////; /// Set this collection to use a RW lock upon access, making it thread safe.; /// Return the previous state.; ///; /// Note: To test whether the usage is enabled do:; /// collection->TestBit(TCollection::kUseRWLock);",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:265,Testability,Test,TestBit,265,"////////////////////////////////////////////////////////////////////////////////; /// Set this collection to use a RW lock upon access, making it thread safe.; /// Return the previous state.; ///; /// Note: To test whether the usage is enabled do:; /// collection->TestBit(TCollection::kUseRWLock);",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:106,Modifiability,inherit,inherits,106,"////////////////////////////////////////////////////////////////////////////////; /// Return true if 'cl' inherits from 'base'.",MatchSource.CODE_COMMENT,core/cont/src/TCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TExMap.cxx:492,Security,hash,hash,492,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 26/05/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TExMap. This class stores a (key,value) pair using an external hash.; The (key,value) are Long64_t's and therefore can contain object; pointers or any longs. The map uses an open addressing hashing; method (linear probing).; */",MatchSource.CODE_COMMENT,core/cont/src/TExMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TExMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TExMap.cxx:619,Security,hash,hashing,619,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 26/05/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TExMap. This class stores a (key,value) pair using an external hash.; The (key,value) are Long64_t's and therefore can contain object; pointers or any longs. The map uses an open addressing hashing; method (linear probing).; */",MatchSource.CODE_COMMENT,core/cont/src/TExMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TExMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TExMap.cxx:3,Safety,Avoid,Avoid,3,"// Avoid calling NextPrime for the common case:",MatchSource.CODE_COMMENT,core/cont/src/TExMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TExMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TExMap.cxx:234,Security,hash,hash,234,"////////////////////////////////////////////////////////////////////////////////; /// Add an (key,value) pair to the table. The key should be unique.; /// If the 'slot' is open, use it to store the value,; /// otherwise revert to Add(hash,key,value); /// This is usually used in conjunction with GetValue with 3 parameters:; /// ~~~ {.cpp}; /// if ((idx = (ULong64_t)fMap->GetValue(hash, key, slot)) != 0) {; /// ...; /// } else {; /// fMap->AddAt(slot,hash,key,value);; /// }; /// ~~~",MatchSource.CODE_COMMENT,core/cont/src/TExMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TExMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TExMap.cxx:382,Security,hash,hash,382,"////////////////////////////////////////////////////////////////////////////////; /// Add an (key,value) pair to the table. The key should be unique.; /// If the 'slot' is open, use it to store the value,; /// otherwise revert to Add(hash,key,value); /// This is usually used in conjunction with GetValue with 3 parameters:; /// ~~~ {.cpp}; /// if ((idx = (ULong64_t)fMap->GetValue(hash, key, slot)) != 0) {; /// ...; /// } else {; /// fMap->AddAt(slot,hash,key,value);; /// }; /// ~~~",MatchSource.CODE_COMMENT,core/cont/src/TExMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TExMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TExMap.cxx:453,Security,hash,hash,453,"////////////////////////////////////////////////////////////////////////////////; /// Add an (key,value) pair to the table. The key should be unique.; /// If the 'slot' is open, use it to store the value,; /// otherwise revert to Add(hash,key,value); /// This is usually used in conjunction with GetValue with 3 parameters:; /// ~~~ {.cpp}; /// if ((idx = (ULong64_t)fMap->GetValue(hash, key, slot)) != 0) {; /// ...; /// } else {; /// fMap->AddAt(slot,hash,key,value);; /// }; /// ~~~",MatchSource.CODE_COMMENT,core/cont/src/TExMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TExMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TExMap.cxx:163,Security,hash,hash,163,"////////////////////////////////////////////////////////////////////////////////; /// Return a reference to the value belonging to the key with the; /// specified hash value. If the key does not exist it will be added.; /// NOTE: the reference will be invalidated an Expand() triggered by; /// an Add() or another operator() call.",MatchSource.CODE_COMMENT,core/cont/src/TExMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TExMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TExMap.cxx:134,Security,hash,hash,134,"////////////////////////////////////////////////////////////////////////////////; /// Return the value belonging to specified key and hash value. If key not; /// found return 0.",MatchSource.CODE_COMMENT,core/cont/src/TExMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TExMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TExMap.cxx:134,Security,hash,hash,134,"////////////////////////////////////////////////////////////////////////////////; /// Return the value belonging to specified key and hash value. If key not; /// found return 0.; /// In 'slot', return the index of the slot used or the first empty slot.; /// (to be used with AddAt).",MatchSource.CODE_COMMENT,core/cont/src/TExMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TExMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TExMap.cxx:115,Security,hash,hash,115,"////////////////////////////////////////////////////////////////////////////////; /// Find an entry with specified hash and key in the TExMap.; /// Returns the slot of the key or the next empty slot.",MatchSource.CODE_COMMENT,core/cont/src/TExMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TExMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:780,Modifiability,inherit,inheriting,780,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 10/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class THashList; \ingroup Containers; THashList implements a hybrid collection class consisting of a; hash table and a list to store TObject's. The hash table is used for; quick access and lookup of objects while the list allows the objects; to be ordered. The hash value is calculated using the value returned; by the TObject's Hash() function. Each class inheriting from TObject; can override Hash() as it sees fit.; */",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:525,Security,hash,hash,525,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 10/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class THashList; \ingroup Containers; THashList implements a hybrid collection class consisting of a; hash table and a list to store TObject's. The hash table is used for; quick access and lookup of objects while the list allows the objects; to be ordered. The hash value is calculated using the value returned; by the TObject's Hash() function. Each class inheriting from TObject; can override Hash() as it sees fit.; */",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:571,Security,hash,hash,571,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 10/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class THashList; \ingroup Containers; THashList implements a hybrid collection class consisting of a; hash table and a list to store TObject's. The hash table is used for; quick access and lookup of objects while the list allows the objects; to be ordered. The hash value is calculated using the value returned; by the TObject's Hash() function. Each class inheriting from TObject; can override Hash() as it sees fit.; */",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:601,Security,access,access,601,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 10/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class THashList; \ingroup Containers; THashList implements a hybrid collection class consisting of a; hash table and a list to store TObject's. The hash table is used for; quick access and lookup of objects while the list allows the objects; to be ordered. The hash value is calculated using the value returned; by the TObject's Hash() function. Each class inheriting from TObject; can override Hash() as it sees fit.; */",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:684,Security,hash,hash,684,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 10/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class THashList; \ingroup Containers; THashList implements a hybrid collection class consisting of a; hash table and a list to store TObject's. The hash table is used for; quick access and lookup of objects while the list allows the objects; to be ordered. The hash value is calculated using the value returned; by the TObject's Hash() function. Each class inheriting from TObject; can override Hash() as it sees fit.; */",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:752,Security,Hash,Hash,752,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 10/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class THashList; \ingroup Containers; THashList implements a hybrid collection class consisting of a; hash table and a list to store TObject's. The hash table is used for; quick access and lookup of objects while the list allows the objects; to be ordered. The hash value is calculated using the value returned; by the TObject's Hash() function. Each class inheriting from TObject; can override Hash() as it sees fit.; */",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:818,Security,Hash,Hash,818,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 10/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class THashList; \ingroup Containers; THashList implements a hybrid collection class consisting of a; hash table and a list to store TObject's. The hash table is used for; quick access and lookup of objects while the list allows the objects; to be ordered. The hash value is calculated using the value returned; by the TObject's Hash() function. Each class inheriting from TObject; can override Hash() as it sees fit.; */",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:436,Energy Efficiency,reduce,reduce,436,"////////////////////////////////////////////////////////////////////////////////; /// Create a THashList object. Capacity is the initial hashtable capacity; /// (i.e. number of slots), by default kInitHashTableCapacity = 17, and; /// rehash is the value at which a rehash will be triggered. I.e. when the; /// average size of the linked lists at a slot becomes longer than rehash; /// then the hashtable will be resized and refilled to reduce the collision; /// rate to about 1. The higher the collision rate, i.e. the longer the; /// linked lists, the longer lookup will take. If rehash=0 the table will; /// NOT automatically be rehashed. Use Rehash() for manual rehashing.; ///; /// WARNING !!!; /// If the name of an object in the HashList is modified, The hashlist; /// must be Rehashed",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:137,Security,hash,hashtable,137,"////////////////////////////////////////////////////////////////////////////////; /// Create a THashList object. Capacity is the initial hashtable capacity; /// (i.e. number of slots), by default kInitHashTableCapacity = 17, and; /// rehash is the value at which a rehash will be triggered. I.e. when the; /// average size of the linked lists at a slot becomes longer than rehash; /// then the hashtable will be resized and refilled to reduce the collision; /// rate to about 1. The higher the collision rate, i.e. the longer the; /// linked lists, the longer lookup will take. If rehash=0 the table will; /// NOT automatically be rehashed. Use Rehash() for manual rehashing.; ///; /// WARNING !!!; /// If the name of an object in the HashList is modified, The hashlist; /// must be Rehashed",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:394,Security,hash,hashtable,394,"////////////////////////////////////////////////////////////////////////////////; /// Create a THashList object. Capacity is the initial hashtable capacity; /// (i.e. number of slots), by default kInitHashTableCapacity = 17, and; /// rehash is the value at which a rehash will be triggered. I.e. when the; /// average size of the linked lists at a slot becomes longer than rehash; /// then the hashtable will be resized and refilled to reduce the collision; /// rate to about 1. The higher the collision rate, i.e. the longer the; /// linked lists, the longer lookup will take. If rehash=0 the table will; /// NOT automatically be rehashed. Use Rehash() for manual rehashing.; ///; /// WARNING !!!; /// If the name of an object in the HashList is modified, The hashlist; /// must be Rehashed",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:735,Security,Hash,HashList,735,"////////////////////////////////////////////////////////////////////////////////; /// Create a THashList object. Capacity is the initial hashtable capacity; /// (i.e. number of slots), by default kInitHashTableCapacity = 17, and; /// rehash is the value at which a rehash will be triggered. I.e. when the; /// average size of the linked lists at a slot becomes longer than rehash; /// then the hashtable will be resized and refilled to reduce the collision; /// rate to about 1. The higher the collision rate, i.e. the longer the; /// linked lists, the longer lookup will take. If rehash=0 the table will; /// NOT automatically be rehashed. Use Rehash() for manual rehashing.; ///; /// WARNING !!!; /// If the name of an object in the HashList is modified, The hashlist; /// must be Rehashed",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:761,Security,hash,hashlist,761,"////////////////////////////////////////////////////////////////////////////////; /// Create a THashList object. Capacity is the initial hashtable capacity; /// (i.e. number of slots), by default kInitHashTableCapacity = 17, and; /// rehash is the value at which a rehash will be triggered. I.e. when the; /// average size of the linked lists at a slot becomes longer than rehash; /// then the hashtable will be resized and refilled to reduce the collision; /// rate to about 1. The higher the collision rate, i.e. the longer the; /// linked lists, the longer lookup will take. If rehash=0 the table will; /// NOT automatically be rehashed. Use Rehash() for manual rehashing.; ///; /// WARNING !!!; /// If the name of an object in the HashList is modified, The hashlist; /// must be Rehashed",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:95,Security,hash,hashlist,95,"////////////////////////////////////////////////////////////////////////////////; /// Delete a hashlist. Objects are not deleted unless the THashList is the; /// owner (set via SetOwner()).",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:276,Performance,perform,perform,276,"////////////////////////////////////////////////////////////////////////////////; /// Return the average collision rate. The higher the number the longer; /// the linked lists in the hashtable, the slower the lookup. If the number; /// is high, or lookup noticeably too slow, perform a Rehash().",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:183,Security,hash,hashtable,183,"////////////////////////////////////////////////////////////////////////////////; /// Return the average collision rate. The higher the number the longer; /// the linked lists in the hashtable, the slower the lookup. If the number; /// is high, or lookup noticeably too slow, perform a Rehash().",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:3,Usability,clear,clear,3,"// clear table so not more lookups",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:345,Security,access,access,345,"////////////////////////////////////////////////////////////////////////////////; /// Remove all objects from the list AND delete all heap based objects.; /// If option=""slow"" then keep list consistent during delete. This allows; /// recursive list operations during the delete (e.g. during the dtor; /// of an object in this list one can still access the list to search for; /// other not yet deleted objects).",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:3,Usability,clear,clear,3,"// clear table so no more lookups",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:25,Security,access,access,25,"// In case somebody else access it.",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:28,Availability,down,down,28,"// tlk reference count goes down 1.",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:123,Security,hash,hash,123,"////////////////////////////////////////////////////////////////////////////////; /// Find object using its name. Uses the hash value returned by the; /// TString::Hash() after converting name to a TString.",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:164,Security,Hash,Hash,164,"////////////////////////////////////////////////////////////////////////////////; /// Find object using its name. Uses the hash value returned by the; /// TString::Hash() after converting name to a TString.",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:108,Security,hash,hash,108,"////////////////////////////////////////////////////////////////////////////////; /// Find object using its hash value (returned by its Hash() member).",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:136,Security,Hash,Hash,136,"////////////////////////////////////////////////////////////////////////////////; /// Find object using its hash value (returned by its Hash() member).",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:168,Security,hash,hash,168,"////////////////////////////////////////////////////////////////////////////////; /// Return the THashTable's list (bucket) in which obj can be found based on; /// its hash; see THashTable::GetListForObject().",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:168,Security,hash,hash,168,"////////////////////////////////////////////////////////////////////////////////; /// Return the THashTable's list (bucket) in which obj can be found based on; /// its hash; see THashTable::GetListForObject().",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:415,Availability,avail,available,415,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:357,Security,hash,hash,357,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:375,Security,hash,hash,375,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:392,Security,hash,hash,392,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:212,Performance,bottleneck,bottleneck,212,"// It might not be safe to rely on TROOT::RecursiveRemove to take the readlock in case user code; // is calling directly gROOT->GetListOfCleanups()->RecursiveRemove(...); // However this can become a significant bottleneck if there are a very large number of; // TDirectory object.; // If we need to enabling this read lock, we need to move the fSize check afterwards.; // TList::RecursiveRemove has the same pattern.; // R__COLLECTION_READ_LOCKGUARD(ROOT::gCoreMutex);",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:19,Safety,safe,safe,19,"// It might not be safe to rely on TROOT::RecursiveRemove to take the readlock in case user code; // is calling directly gROOT->GetListOfCleanups()->RecursiveRemove(...); // However this can become a significant bottleneck if there are a very large number of; // TDirectory object.; // If we need to enabling this read lock, we need to move the fSize check afterwards.; // TList::RecursiveRemove has the same pattern.; // R__COLLECTION_READ_LOCKGUARD(ROOT::gCoreMutex);",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:325,Performance,perform,performance,325,"////////////////////////////////////////////////////////////////////////////////; /// Rehash the hashlist. If the collision rate becomes too high (i.e.; /// the average size of the linked lists become too long) then lookup; /// efficiency decreases since relatively long lists have to be searched; /// every time. To improve performance rehash the hashtable. This resizes; /// the table to newCapacity slots and refills the table. Use; /// AverageCollisions() to check if you need to rehash.",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:97,Security,hash,hashlist,97,"////////////////////////////////////////////////////////////////////////////////; /// Rehash the hashlist. If the collision rate becomes too high (i.e.; /// the average size of the linked lists become too long) then lookup; /// efficiency decreases since relatively long lists have to be searched; /// every time. To improve performance rehash the hashtable. This resizes; /// the table to newCapacity slots and refills the table. Use; /// AverageCollisions() to check if you need to rehash.",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:348,Security,hash,hashtable,348,"////////////////////////////////////////////////////////////////////////////////; /// Rehash the hashlist. If the collision rate becomes too high (i.e.; /// the average size of the linked lists become too long) then lookup; /// efficiency decreases since relatively long lists have to be searched; /// every time. To improve performance rehash the hashtable. This resizes; /// the table to newCapacity slots and refills the table. Use; /// AverageCollisions() to check if you need to rehash.",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:153,Safety,safe,safe,153,"////////////////////////////////////////////////////////////////////////////////; /// Set this collection to use a RW lock upon access, making it thread safe.; /// Return the previous state.; ///; /// Note: To test whether the usage is enabled do:; /// collection->TestBit(TCollection::kUseRWLock);",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:128,Security,access,access,128,"////////////////////////////////////////////////////////////////////////////////; /// Set this collection to use a RW lock upon access, making it thread safe.; /// Return the previous state.; ///; /// Note: To test whether the usage is enabled do:; /// collection->TestBit(TCollection::kUseRWLock);",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:210,Testability,test,test,210,"////////////////////////////////////////////////////////////////////////////////; /// Set this collection to use a RW lock upon access, making it thread safe.; /// Return the previous state.; ///; /// Note: To test whether the usage is enabled do:; /// collection->TestBit(TCollection::kUseRWLock);",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:265,Testability,Test,TestBit,265,"////////////////////////////////////////////////////////////////////////////////; /// Set this collection to use a RW lock upon access, making it thread safe.; /// Return the previous state.; ///; /// Note: To test whether the usage is enabled do:; /// collection->TestBit(TCollection::kUseRWLock);",MatchSource.CODE_COMMENT,core/cont/src/THashList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:618,Modifiability,inherit,inheriting,618,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 27/09/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class THashTable; \ingroup Containers; THashTable implements a hash table to store TObject's. The hash; value is calculated using the value returned by the TObject's; Hash() function. Each class inheriting from TObject can override; Hash() as it sees fit. THashTable does not preserve the insertion order of the objects.; If the insertion order is important AND fast retrieval is needed; use THashList instead.; */",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:486,Security,hash,hash,486,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 27/09/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class THashTable; \ingroup Containers; THashTable implements a hash table to store TObject's. The hash; value is calculated using the value returned by the TObject's; Hash() function. Each class inheriting from TObject can override; Hash() as it sees fit. THashTable does not preserve the insertion order of the objects.; If the insertion order is important AND fast retrieval is needed; use THashList instead.; */",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:521,Security,hash,hash,521,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 27/09/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class THashTable; \ingroup Containers; THashTable implements a hash table to store TObject's. The hash; value is calculated using the value returned by the TObject's; Hash() function. Each class inheriting from TObject can override; Hash() as it sees fit. THashTable does not preserve the insertion order of the objects.; If the insertion order is important AND fast retrieval is needed; use THashList instead.; */",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:590,Security,Hash,Hash,590,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 27/09/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class THashTable; \ingroup Containers; THashTable implements a hash table to store TObject's. The hash; value is calculated using the value returned by the TObject's; Hash() function. Each class inheriting from TObject can override; Hash() as it sees fit. THashTable does not preserve the insertion order of the objects.; If the insertion order is important AND fast retrieval is needed; use THashList instead.; */",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:656,Security,Hash,Hash,656,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 27/09/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class THashTable; \ingroup Containers; THashTable implements a hash table to store TObject's. The hash; value is calculated using the value returned by the TObject's; Hash() function. Each class inheriting from TObject can override; Hash() as it sees fit. THashTable does not preserve the insertion order of the objects.; If the insertion order is important AND fast retrieval is needed; use THashList instead.; */",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:447,Energy Efficiency,reduce,reduce,447,"////////////////////////////////////////////////////////////////////////////////; /// Create a THashTable object. Capacity is the initial hashtable capacity; /// (i.e. number of slots), by default kInitHashTableCapacity = 17, and; /// rehashlevel is the value at which a rehash will be triggered. I.e. when; /// the average size of the linked lists at a slot becomes longer than; /// rehashlevel then the hashtable will be resized and refilled to reduce; /// the collision rate to about 1. The higher the collision rate, i.e. the; /// longer the linked lists, the longer lookup will take. If rehashlevel=0; /// the table will NOT automatically be rehashed. Use Rehash() for manual; /// rehashing.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:138,Security,hash,hashtable,138,"////////////////////////////////////////////////////////////////////////////////; /// Create a THashTable object. Capacity is the initial hashtable capacity; /// (i.e. number of slots), by default kInitHashTableCapacity = 17, and; /// rehashlevel is the value at which a rehash will be triggered. I.e. when; /// the average size of the linked lists at a slot becomes longer than; /// rehashlevel then the hashtable will be resized and refilled to reduce; /// the collision rate to about 1. The higher the collision rate, i.e. the; /// longer the linked lists, the longer lookup will take. If rehashlevel=0; /// the table will NOT automatically be rehashed. Use Rehash() for manual; /// rehashing.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:405,Security,hash,hashtable,405,"////////////////////////////////////////////////////////////////////////////////; /// Create a THashTable object. Capacity is the initial hashtable capacity; /// (i.e. number of slots), by default kInitHashTableCapacity = 17, and; /// rehashlevel is the value at which a rehash will be triggered. I.e. when; /// the average size of the linked lists at a slot becomes longer than; /// rehashlevel then the hashtable will be resized and refilled to reduce; /// the collision rate to about 1. The higher the collision rate, i.e. the; /// longer the linked lists, the longer lookup will take. If rehashlevel=0; /// the table will NOT automatically be rehashed. Use Rehash() for manual; /// rehashing.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:95,Security,hash,hashtable,95,"////////////////////////////////////////////////////////////////////////////////; /// Delete a hashtable. Objects are not deleted unless the THashTable is the; /// owner (set via SetOwner()).",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:104,Security,hash,hash,104,"////////////////////////////////////////////////////////////////////////////////; /// Add object to the hash table. Its position in the table will be; /// determined by the value returned by its Hash() function.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:195,Security,Hash,Hash,195,"////////////////////////////////////////////////////////////////////////////////; /// Add object to the hash table. Its position in the table will be; /// determined by the value returned by its Hash() function.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:104,Security,hash,hash,104,"////////////////////////////////////////////////////////////////////////////////; /// Add object to the hash table. Its position in the table will be; /// determined by the value returned by its Hash() function.; /// If and only if 'before' is in the same bucket as obj, obj is added; /// in front of 'before' within the bucket's list.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:195,Security,Hash,Hash,195,"////////////////////////////////////////////////////////////////////////////////; /// Add object to the hash table. Its position in the table will be; /// determined by the value returned by its Hash() function.; /// If and only if 'before' is in the same bucket as obj, obj is added; /// in front of 'before' within the bucket's list.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:168,Energy Efficiency,efficient,efficient,168,"////////////////////////////////////////////////////////////////////////////////; /// Add all objects from collection col to this collection.; /// Implemented for more efficient rehashing.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:3,Security,Hash,Hashing,3,"// Hashing after AddAll can be much more expensive than; // hashing before, as we need to add more elements.; // We assume an ideal hash, i.e. fUsedSlots==fSize.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:60,Security,hash,hashing,60,"// Hashing after AddAll can be much more expensive than; // hashing before, as we need to add more elements.; // We assume an ideal hash, i.e. fUsedSlots==fSize.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:132,Security,hash,hash,132,"// Hashing after AddAll can be much more expensive than; // hashing before, as we need to add more elements.; // We assume an ideal hash, i.e. fUsedSlots==fSize.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:84,Security,hash,hash,84,"// If we didn't Rehash before, we might have to do it; // now, due to a non-perfect hash function.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:36,Usability,Clear,Clear,36,"// option ""nodelete"" is passed when Clear is called from; // THashList::Clear() or THashList::Delete() or Rehash().",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:72,Usability,Clear,Clear,72,"// option ""nodelete"" is passed when Clear is called from; // THashList::Clear() or THashList::Delete() or Rehash().",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:202,Security,hash,hash,202,"////////////////////////////////////////////////////////////////////////////////; /// Returns the number of collisions for an object with a certain name; /// (i.e. number of objects in same slot in the hash table, i.e. length; /// of linked list).",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:182,Security,hash,hash,182,"////////////////////////////////////////////////////////////////////////////////; /// Returns the number of collisions for an object (i.e. number of objects; /// in same slot in the hash table, i.e. length of linked list).",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:123,Security,hash,hash,123,"////////////////////////////////////////////////////////////////////////////////; /// Find object using its name. Uses the hash value returned by the; /// TString::Hash() after converting name to a TString.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:164,Security,Hash,Hash,164,"////////////////////////////////////////////////////////////////////////////////; /// Find object using its name. Uses the hash value returned by the; /// TString::Hash() after converting name to a TString.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:108,Security,hash,hash,108,"////////////////////////////////////////////////////////////////////////////////; /// Find object using its hash value (returned by its Hash() member).",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:136,Security,Hash,Hash,136,"////////////////////////////////////////////////////////////////////////////////; /// Find object using its hash value (returned by its Hash() member).",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:140,Security,hash,hash,140,"////////////////////////////////////////////////////////////////////////////////; /// Return the TList corresponding to object's name based hash value.; /// One can iterate this list ""manually"" to find, e.g. objects with; /// the same name.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:129,Security,hash,hash,129,"////////////////////////////////////////////////////////////////////////////////; /// Return the TList corresponding to object's hash value.; /// One can iterate this list ""manually"" to find, e.g. identical; /// objects.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:96,Security,hash,hash,96,"////////////////////////////////////////////////////////////////////////////////; /// Returns a hash table iterator.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:385,Security,hash,hash-slots,385,"////////////////////////////////////////////////////////////////////////////; /// Print the collection header and its elements.; ///; /// If recurse is non-zero, descend into printing of; /// collection-entries with recurse - 1.; /// This means, if recurse is negative, the recursion is infinite.; ///; /// If option contains ""details"", Print will show the content of; /// each of the hash-slots.; ///; /// Option is passed recursively.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:326,Performance,perform,performance,326,"////////////////////////////////////////////////////////////////////////////////; /// Rehash the hashtable. If the collision rate becomes too high (i.e.; /// the average size of the linked lists become too long) then lookup; /// efficiency decreases since relatively long lists have to be searched; /// every time. To improve performance rehash the hashtable. This resizes; /// the table to newCapacity slots and refills the table. Use; /// AverageCollisions() to check if you need to rehash. Set checkObjValidity; /// to kFALSE if you know that all objects in the table are still valid; /// (i.e. have not been deleted from the system in the meanwhile).",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:97,Security,hash,hashtable,97,"////////////////////////////////////////////////////////////////////////////////; /// Rehash the hashtable. If the collision rate becomes too high (i.e.; /// the average size of the linked lists become too long) then lookup; /// efficiency decreases since relatively long lists have to be searched; /// every time. To improve performance rehash the hashtable. This resizes; /// the table to newCapacity slots and refills the table. Use; /// AverageCollisions() to check if you need to rehash. Set checkObjValidity; /// to kFALSE if you know that all objects in the table are still valid; /// (i.e. have not been deleted from the system in the meanwhile).",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:349,Security,hash,hashtable,349,"////////////////////////////////////////////////////////////////////////////////; /// Rehash the hashtable. If the collision rate becomes too high (i.e.; /// the average size of the linked lists become too long) then lookup; /// efficiency decreases since relatively long lists have to be searched; /// every time. To improve performance rehash the hashtable. This resizes; /// the table to newCapacity slots and refills the table. Use; /// AverageCollisions() to check if you need to rehash. Set checkObjValidity; /// to kFALSE if you know that all objects in the table are still valid; /// (i.e. have not been deleted from the system in the meanwhile).",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:55,Security,hash,hash,55,"// Somehow in the process of copy the pointer from one hash to; // other we ended up inducing the addition of more element to; // the table. Most likely those elements have not been copied ....; // i.e. Adding *during* the Rehashing is illegal and fatal.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:89,Security,hash,hash,89,"// this should not happen, but it will prevent an endless loop; // in case of a very bad hash function",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:109,Security,hash,hashtable,109,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from the hashtable.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:109,Security,hash,hashtable,109,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from the hashtable without using the hash value.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:137,Security,hash,hash,137,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from the hashtable without using the hash value.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:39,Security,hash,hash,39,/** \class THashTableIter; Iterator of hash table.; */,MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:95,Security,hash,hashtable,95,"////////////////////////////////////////////////////////////////////////////////; /// Create a hashtable iterator. By default the iteration direction; /// is kIterForward. To go backward use kIterBackward.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:93,Security,hash,hashtable,93,"////////////////////////////////////////////////////////////////////////////////; /// Delete hashtable iterator.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:108,Security,hash,hashtable,108,"////////////////////////////////////////////////////////////////////////////////; /// Return next object in hashtable. Returns 0 when no more objects in table.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:144,Integrability,depend,depending,144,"////////////////////////////////////////////////////////////////////////////////; /// Reset the hashtable iterator. Either to beginning or end, depending on; /// the initial iteration direction.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:96,Security,hash,hashtable,96,"////////////////////////////////////////////////////////////////////////////////; /// Reset the hashtable iterator. Either to beginning or end, depending on; /// the initial iteration direction.",MatchSource.CODE_COMMENT,core/cont/src/THashTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TIterator.cxx:520,Integrability,interface,interface,520,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 13/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TIterator; \ingroup Containers; Iterator abstract base class. This base class provides the interface; for collection iterators.; */",MatchSource.CODE_COMMENT,core/cont/src/TIterator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TIterator.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:603,Integrability,wrap,wrapped,603,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 10/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TList; \ingroup Containers; A doubly linked list. All classes inheriting from TObject can be; inserted in a TList. Before being inserted into the list the object; pointer is wrapped in a TObjLink object which contains, besides; the object pointer also a previous and next pointer. There are several ways to iterate over a TList; in order of preference, if; not forced by other constraints:. 1. (Preferred way) Using the C++ range-based `for` or `begin()` / `end()`:; ~~~ {.cpp}; for(TObject *obj: *GetListOfPrimitives()); obj->Write();; ~~~; 2. Using the R__FOR_EACH macro:; ~~~ {.cpp}; GetListOfPrimitives()->R__FOR_EACH(TObject,Paint)(option);; ~~~; 3. Using the TList iterator TListIter (via the wrapper class TIter):; ~~~ {.cpp}; TIter next(GetListOfPrimitives());; while (TObject *obj = next()); obj->Draw(next.GetOption());; ~~~; 4. Using the TList iterator TListIter and std::for_each algorithm:; ~~~ {.cpp}; // A function object, which will be applied to each element; // of the given range.; struct STestFunctor {; bool operator()(TObject *aObj) {; ...; return true;; }; }; ...; ...; TIter iter(mylist);; for_each( iter.Begin(), TIter::End(), STestFunctor() );; ~~~; 5. Using the TObjLink list entries (that wrap the TObject*):; ~~~ {.cpp}; TObjLink *lnk = GetListOfPrimitives()->FirstLink();; while (lnk) {; lnk->GetObject()->Draw(lnk->GetOption());; lnk = lnk->Next();; }; ~~~; 6. Using the TList's After() and Before() member functions:; ~~~ {.cpp}; TFree *idcur = this;; while (idcur) {; ...; ...; idcur = (TFree*)GetListOfFree()->After(idcur);; }; ~~~; Metho",MatchSource.CODE_COMMENT,core/cont/src/TList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:1128,Integrability,wrap,wrapper,1128,"**************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TList; \ingroup Containers; A doubly linked list. All classes inheriting from TObject can be; inserted in a TList. Before being inserted into the list the object; pointer is wrapped in a TObjLink object which contains, besides; the object pointer also a previous and next pointer. There are several ways to iterate over a TList; in order of preference, if; not forced by other constraints:. 1. (Preferred way) Using the C++ range-based `for` or `begin()` / `end()`:; ~~~ {.cpp}; for(TObject *obj: *GetListOfPrimitives()); obj->Write();; ~~~; 2. Using the R__FOR_EACH macro:; ~~~ {.cpp}; GetListOfPrimitives()->R__FOR_EACH(TObject,Paint)(option);; ~~~; 3. Using the TList iterator TListIter (via the wrapper class TIter):; ~~~ {.cpp}; TIter next(GetListOfPrimitives());; while (TObject *obj = next()); obj->Draw(next.GetOption());; ~~~; 4. Using the TList iterator TListIter and std::for_each algorithm:; ~~~ {.cpp}; // A function object, which will be applied to each element; // of the given range.; struct STestFunctor {; bool operator()(TObject *aObj) {; ...; return true;; }; }; ...; ...; TIter iter(mylist);; for_each( iter.Begin(), TIter::End(), STestFunctor() );; ~~~; 5. Using the TObjLink list entries (that wrap the TObject*):; ~~~ {.cpp}; TObjLink *lnk = GetListOfPrimitives()->FirstLink();; while (lnk) {; lnk->GetObject()->Draw(lnk->GetOption());; lnk = lnk->Next();; }; ~~~; 6. Using the TList's After() and Before() member functions:; ~~~ {.cpp}; TFree *idcur = this;; while (idcur) {; ...; ...; idcur = (TFree*)GetListOfFree()->After(idcur);; }; ~~~; Methods 3, 4 and 5 can also easily iterate backwards using either; a backward TIter (using argument kIterBackward) or by usi",MatchSource.CODE_COMMENT,core/cont/src/TList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:1646,Integrability,wrap,wrap,1646,"akers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TList; \ingroup Containers; A doubly linked list. All classes inheriting from TObject can be; inserted in a TList. Before being inserted into the list the object; pointer is wrapped in a TObjLink object which contains, besides; the object pointer also a previous and next pointer. There are several ways to iterate over a TList; in order of preference, if; not forced by other constraints:. 1. (Preferred way) Using the C++ range-based `for` or `begin()` / `end()`:; ~~~ {.cpp}; for(TObject *obj: *GetListOfPrimitives()); obj->Write();; ~~~; 2. Using the R__FOR_EACH macro:; ~~~ {.cpp}; GetListOfPrimitives()->R__FOR_EACH(TObject,Paint)(option);; ~~~; 3. Using the TList iterator TListIter (via the wrapper class TIter):; ~~~ {.cpp}; TIter next(GetListOfPrimitives());; while (TObject *obj = next()); obj->Draw(next.GetOption());; ~~~; 4. Using the TList iterator TListIter and std::for_each algorithm:; ~~~ {.cpp}; // A function object, which will be applied to each element; // of the given range.; struct STestFunctor {; bool operator()(TObject *aObj) {; ...; return true;; }; }; ...; ...; TIter iter(mylist);; for_each( iter.Begin(), TIter::End(), STestFunctor() );; ~~~; 5. Using the TObjLink list entries (that wrap the TObject*):; ~~~ {.cpp}; TObjLink *lnk = GetListOfPrimitives()->FirstLink();; while (lnk) {; lnk->GetObject()->Draw(lnk->GetOption());; lnk = lnk->Next();; }; ~~~; 6. Using the TList's After() and Before() member functions:; ~~~ {.cpp}; TFree *idcur = this;; while (idcur) {; ...; ...; idcur = (TFree*)GetListOfFree()->After(idcur);; }; ~~~; Methods 3, 4 and 5 can also easily iterate backwards using either; a backward TIter (using argument kIterBackward) or by using; LastLink() and lnk->Prev() or by using the Before() member.; */",MatchSource.CODE_COMMENT,core/cont/src/TList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:491,Modifiability,inherit,inheriting,491,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 10/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TList; \ingroup Containers; A doubly linked list. All classes inheriting from TObject can be; inserted in a TList. Before being inserted into the list the object; pointer is wrapped in a TObjLink object which contains, besides; the object pointer also a previous and next pointer. There are several ways to iterate over a TList; in order of preference, if; not forced by other constraints:. 1. (Preferred way) Using the C++ range-based `for` or `begin()` / `end()`:; ~~~ {.cpp}; for(TObject *obj: *GetListOfPrimitives()); obj->Write();; ~~~; 2. Using the R__FOR_EACH macro:; ~~~ {.cpp}; GetListOfPrimitives()->R__FOR_EACH(TObject,Paint)(option);; ~~~; 3. Using the TList iterator TListIter (via the wrapper class TIter):; ~~~ {.cpp}; TIter next(GetListOfPrimitives());; while (TObject *obj = next()); obj->Draw(next.GetOption());; ~~~; 4. Using the TList iterator TListIter and std::for_each algorithm:; ~~~ {.cpp}; // A function object, which will be applied to each element; // of the given range.; struct STestFunctor {; bool operator()(TObject *aObj) {; ...; return true;; }; }; ...; ...; TIter iter(mylist);; for_each( iter.Begin(), TIter::End(), STestFunctor() );; ~~~; 5. Using the TObjLink list entries (that wrap the TObject*):; ~~~ {.cpp}; TObjLink *lnk = GetListOfPrimitives()->FirstLink();; while (lnk) {; lnk->GetObject()->Draw(lnk->GetOption());; lnk = lnk->Next();; }; ~~~; 6. Using the TList's After() and Before() member functions:; ~~~ {.cpp}; TFree *idcur = this;; while (idcur) {; ...; ...; idcur = (TFree*)GetListOfFree()->After(idcur);; }; ~~~; Metho",MatchSource.CODE_COMMENT,core/cont/src/TList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:432,Usability,Clear,Clear,432,"////////////////////////////////////////////////////////////////////////////////; /// Remove all objects from the list. Does not delete the objects; /// unless the TList is the owner (set via SetOwner()) and option; /// ""nodelete"" is not set.; /// If option=""nodelete"" then don't delete any heap objects that were; /// marked with the kCanDelete bit, otherwise these objects will be; /// deleted (this option is used by THashTable::Clear()).",MatchSource.CODE_COMMENT,core/cont/src/TList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:177,Usability,Clear,Clear,177,"// In some case, for example TParallelCoord, a list (the pad's list of; // primitives) will contain both the container and the containees; // (the TParallelCoordVar) but if the Clear is being called from; // the destructor of the container of this list, one of the first; // thing done will be the remove the container (the pad) for the; // list (of Primitives of the canvas) that was connecting it; // (indirectly) to the list of cleanups.; // Note: The Code in TParallelCoordVar was changed (circa June 2017),; // to no longer have this behavior and thus rely on this code (by moving; // from using Draw to Paint) but the structure might still exist elsewhere; // so we keep this comment here.; // To preserve this connection (without introducing one when there was none),; // we re-use fCache to inform RecursiveRemove of the node currently; // being cleared/deleted.",MatchSource.CODE_COMMENT,core/cont/src/TList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:854,Usability,clear,cleared,854,"// In some case, for example TParallelCoord, a list (the pad's list of; // primitives) will contain both the container and the containees; // (the TParallelCoordVar) but if the Clear is being called from; // the destructor of the container of this list, one of the first; // thing done will be the remove the container (the pad) for the; // list (of Primitives of the canvas) that was connecting it; // (indirectly) to the list of cleanups.; // Note: The Code in TParallelCoordVar was changed (circa June 2017),; // to no longer have this behavior and thus rely on this code (by moving; // from using Draw to Paint) but the structure might still exist elsewhere; // so we keep this comment here.; // To preserve this connection (without introducing one when there was none),; // we re-use fCache to inform RecursiveRemove of the node currently; // being cleared/deleted.",MatchSource.CODE_COMMENT,core/cont/src/TList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:13,Availability,avail,available,13,"// Make node available to RecursiveRemove",MatchSource.CODE_COMMENT,core/cont/src/TList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:41,Usability,clear,clear,41,"// delete only heap objects marked OK to clear",MatchSource.CODE_COMMENT,core/cont/src/TList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:345,Security,access,access,345,"////////////////////////////////////////////////////////////////////////////////; /// Remove all objects from the list AND delete all heap based objects.; /// If option=""slow"" then keep list consistent during delete. This allows; /// recursive list operations during the delete (e.g. during the dtor; /// of an object in this list one can still access the list to search for; /// other not yet deleted objects).",MatchSource.CODE_COMMENT,core/cont/src/TList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:176,Usability,Clear,Clear,176,"// In some case, for example TParallelCoord, a list (the pad's list of; // primitives) will contain both the container and the containees; // (the TParallelCoorVar) but if the Clear is being called from; // the destructor of the container of this list, one of the first; // thing done will be the remove the container (the pad) for the; // list (of Primitives of the canvas) that was connecting it; // (indirectly) to the list of cleanups.; // To preserve this connection (without introducing one when there was none),; // we re-use fCache to inform RecursiveRemove of the node currently; // being cleared/deleted.",MatchSource.CODE_COMMENT,core/cont/src/TList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:598,Usability,clear,cleared,598,"// In some case, for example TParallelCoord, a list (the pad's list of; // primitives) will contain both the container and the containees; // (the TParallelCoorVar) but if the Clear is being called from; // the destructor of the container of this list, one of the first; // thing done will be the remove the container (the pad) for the; // list (of Primitives of the canvas) that was connecting it; // (indirectly) to the list of cleanups.; // To preserve this connection (without introducing one when there was none),; // we re-use fCache to inform RecursiveRemove of the node currently; // being cleared/deleted.",MatchSource.CODE_COMMENT,core/cont/src/TList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:13,Availability,avail,available,13,"// Make node available to RecursiveRemove",MatchSource.CODE_COMMENT,core/cont/src/TList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:90,Usability,clear,cleared,90,"// When fCache is set and has no previous and next node, it represents; // the node being cleared and/or deleted.",MatchSource.CODE_COMMENT,core/cont/src/TList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:89,Integrability,depend,depending,89,"// return object found, which may be (pointer wise) different than the; // input object (depending on what IsEqual() is doing)",MatchSource.CODE_COMMENT,core/cont/src/TList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:16,Availability,alive,alive,16,"// lnk is still alive as we have either fLast; // or the 'new' fFirst->fPrev pointing to it.",MatchSource.CODE_COMMENT,core/cont/src/TList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:16,Availability,alive,alive,16,"// lnk is still alive as we have either fLast; // or the 'new' fFirst->fPrev pointing to it.",MatchSource.CODE_COMMENT,core/cont/src/TList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:144,Integrability,Depend,Depending,144,"////////////////////////////////////////////////////////////////////////////////; /// Compares the objects stored in the TObjLink objects.; /// Depending on the flag IsAscending() the function returns; /// true if the object in l1 <= l2 (ascending) or l2 <= l1 (descending).",MatchSource.CODE_COMMENT,core/cont/src/TList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:21,Integrability,Wrap,Wrapper,21,"/** \class TObjLink; Wrapper around a TObject so it can be stored in a TList.; */; ////////////////////////////////////////////////////////////////////////////////; /// Insert a new link in the chain.",MatchSource.CODE_COMMENT,core/cont/src/TList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:162,Modifiability,inherit,inheriting,162,"// We compared equal only two iterator of the same type.; // Since this is a function of TListIter, we consequently know that; // both this and aIter are of type inheriting from TListIter.",MatchSource.CODE_COMMENT,core/cont/src/TList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:538,Energy Efficiency,efficient,efficient,538,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 12/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMap; \ingroup Containers; TMap implements an associative array of (key,value) pairs using a; THashTable for efficient retrieval (therefore TMap does not conserve; the order of the entries). The hash value is calculated; using the value returned by the keys Hash() function and the; key comparison is done via the IsEqual() function.; Both key and value must inherit from TObject.; */",MatchSource.CODE_COMMENT,core/cont/src/TMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:788,Modifiability,inherit,inherit,788,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 12/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMap; \ingroup Containers; TMap implements an associative array of (key,value) pairs using a; THashTable for efficient retrieval (therefore TMap does not conserve; the order of the entries). The hash value is calculated; using the value returned by the keys Hash() function and the; key comparison is done via the IsEqual() function.; Both key and value must inherit from TObject.; */",MatchSource.CODE_COMMENT,core/cont/src/TMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:624,Security,hash,hash,624,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 12/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMap; \ingroup Containers; TMap implements an associative array of (key,value) pairs using a; THashTable for efficient retrieval (therefore TMap does not conserve; the order of the entries). The hash value is calculated; using the value returned by the keys Hash() function and the; key comparison is done via the IsEqual() function.; Both key and value must inherit from TObject.; */",MatchSource.CODE_COMMENT,core/cont/src/TMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:687,Security,Hash,Hash,687,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 12/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMap; \ingroup Containers; TMap implements an associative array of (key,value) pairs using a; THashTable for efficient retrieval (therefore TMap does not conserve; the order of the entries). The hash value is calculated; using the value returned by the keys Hash() function and the; key comparison is done via the IsEqual() function.; Both key and value must inherit from TObject.; */",MatchSource.CODE_COMMENT,core/cont/src/TMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:116,Security,hash,hashtable,116,"////////////////////////////////////////////////////////////////////////////////; /// Return number of slots in the hashtable. Use GetSize() to get the; /// number of objects stored in the TMap.",MatchSource.CODE_COMMENT,core/cont/src/TMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:162,Integrability,depend,depending,162,"////////////////////////////////////////////////////////////////////////////////; /// Remove all (key,value) pairs from the map. The keys/values are; /// deleted depending on the state of key-ownership (SetOwner()) and; /// value-ownership (SetOwnerValue()).; ///; /// To delete these objects regardless of the ownership state use:; /// - Delete() to delete only keys;; /// - DeleteValues() to delete only values;; /// - DeleteAll() to delete both keys and values.",MatchSource.CODE_COMMENT,core/cont/src/TMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:198,Security,hash,hash,198,"////////////////////////////////////////////////////////////////////////////////; /// Returns the number of collisions for a key with a certain name; /// (i.e. number of objects in same slot in the hash table, i.e. length; /// of linked list).",MatchSource.CODE_COMMENT,core/cont/src/TMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:178,Security,hash,hash,178,"////////////////////////////////////////////////////////////////////////////////; /// Returns the number of collisions for a key (i.e. number of objects; /// in same slot in the hash table, i.e. length of linked list).",MatchSource.CODE_COMMENT,core/cont/src/TMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:167,Energy Efficiency,allocate,allocated,167,"////////////////////////////////////////////////////////////////////////////////; /// Remove all (key,value) pairs from the map AND delete the keys; /// when they are allocated on the heap.",MatchSource.CODE_COMMENT,core/cont/src/TMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:169,Energy Efficiency,allocate,allocated,169,"////////////////////////////////////////////////////////////////////////////////; /// Remove all (key,value) pairs from the map AND delete the values; /// when they are allocated on the heap.",MatchSource.CODE_COMMENT,core/cont/src/TMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:178,Energy Efficiency,allocate,allocated,178,"////////////////////////////////////////////////////////////////////////////////; /// Remove all (key,value) pairs from the map AND delete the keys AND; /// values when they are allocated on the heap.",MatchSource.CODE_COMMENT,core/cont/src/TMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:185,Availability,down,downcast,185,"////////////////////////////////////////////////////////////////////////////////; /// Check if a (key,value) pair exists with keyname as name of the key.; /// Returns a TPair* (need to downcast from TObject). Use Key() and; /// Value() to get the pointers to the key and value, respectively.; /// Returns 0 if not found.",MatchSource.CODE_COMMENT,core/cont/src/TMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:169,Availability,down,downcast,169,"////////////////////////////////////////////////////////////////////////////////; /// Check if a (key,value) pair exists with key as key.; /// Returns a TPair* (need to downcast from TObject). Use Key() and; /// Value() to get the pointers to the key and value, respectively.; /// Returns 0 if not found.",MatchSource.CODE_COMMENT,core/cont/src/TMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:349,Integrability,depend,depending,349,"////////////////////////////////////////////////////////////////////////////////; /// Set whether this map is the owner (enable==true); /// of its values. If it is the owner of its contents,; /// these objects will be deleted whenever the collection itself; /// is deleted. The objects might also be deleted or destructed when Clear; /// is called (depending on the collection).",MatchSource.CODE_COMMENT,core/cont/src/TMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:327,Usability,Clear,Clear,327,"////////////////////////////////////////////////////////////////////////////////; /// Set whether this map is the owner (enable==true); /// of its values. If it is the owner of its contents,; /// these objects will be deleted whenever the collection itself; /// is deleted. The objects might also be deleted or destructed when Clear; /// is called (depending on the collection).",MatchSource.CODE_COMMENT,core/cont/src/TMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:39,Security,Hash,Hash,39,"// Required since we overload TObject::Hash.",MatchSource.CODE_COMMENT,core/cont/src/TMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjArray.cxx:1003,Usability,Clear,Clear,1003,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 11/09/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TObjArray; \ingroup Containers; An array of TObjects. The array expands automatically when; objects are added (shrinking can be done by hand using Expand(),; how nice to have meaningful names -:)).; Use operator[] to have ""real"" array behaviour. Note on ownership and copy:; By default the TObjArray does not own the objects it points to and; will not delete them unless explicitly asked (via a call to the; Delete member function). To assign ownership of the content to; the array, call:; ~~~ {.cpp}; myarr->SetOwner(kTRUE);; ~~~; When the array owns its content a call to Clear or the deletion of; the array itself will lead to the deletion of its contents. You can either make a shallow copy of the array:; ~~~ {.cpp}; otherarr = new TObjArray(*myarr);; *otherarr = *myarr;; ~~~; in which case ownership (if any) is not transfered but the other; array points to the same object as the original array. Note that; if the content of either array is deleted the other array is not; notified in any way (i.e. still points to the now deleted objects). You can also make a deep copy of the array:; ~~~ {.cpp}; otherarr = (TObjArray*)myarr->Clone();; ~~~; in which case the array and the content are both duplicated (i.e.; otherarr and myarr do not point to the same objects). If myarr; is set to the be the owner of its content, otherarr will also be; set to the owner of its own content.; */",MatchSource.CODE_COMMENT,core/cont/src/TObjArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjArray.cxx:122,Availability,error,error,122,"////////////////////////////////////////////////////////////////////////////////; /// Add object at position ids. Give an error when idx is out of bounds; /// (i.e. the array is not expanded).",MatchSource.CODE_COMMENT,core/cont/src/TObjArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjArray.cxx:177,Usability,Clear,Clear,177,"// In some case, for example TParallelCoord, a list (the pad's list of; // primitives) will contain both the container and the containees; // (the TParallelCoordVar) but if the Clear is being called from; // the destructor of the container of this list, one of the first; // thing done will be the remove the container (the pad) from the; // list (of Primitives of the canvas) that was connecting it; // (indirectly) to the list of cleanups.; // Note: The Code in TParallelCoordVar was changed (circa June 2017),; // to no longer have this behavior and thus rely on this code (by moving; // from using Draw to Paint) but the structure might still exist elsewhere; // so we keep this comment here.",MatchSource.CODE_COMMENT,core/cont/src/TObjArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjArray.cxx:322,Energy Efficiency,efficient,efficient,322,"////////////////////////////////////////////////////////////////////////////////; /// Find an object in this collection using the object's IsEqual(); /// member function. Requires a sequential scan till the object has; /// been found. Returns 0 if object is not found.; /// Typically this function is overridden by a more efficient version; /// in concrete collection classes (e.g. THashTable).",MatchSource.CODE_COMMENT,core/cont/src/TObjArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjArray.cxx:39,Deployability,update,update,39,"// For efficiency we need sometimes to update fLast so we have; // to cast const away. Ugly, but making GetAbsLast() not const breaks; // many other const functions.",MatchSource.CODE_COMMENT,core/cont/src/TObjArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjArray.cxx:262,Performance,concurren,concurrently,262,"////////////////////////////////////////////////////////////////////////////////; /// Return the number of objects in array (i.e. number of non-empty slots).; /// This is a thread-unsafe version of GetEntriesFast. Use it only if sure; /// it will not be invoked concurrently.",MatchSource.CODE_COMMENT,core/cont/src/TObjArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjArray.cxx:180,Safety,unsafe,unsafe,180,"////////////////////////////////////////////////////////////////////////////////; /// Return the number of objects in array (i.e. number of non-empty slots).; /// This is a thread-unsafe version of GetEntriesFast. Use it only if sure; /// it will not be invoked concurrently.",MatchSource.CODE_COMMENT,core/cont/src/TObjArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjArray.cxx:112,Availability,error,error,112,"////////////////////////////////////////////////////////////////////////////////; /// Generate an out-of-bounds error. Always returns false.",MatchSource.CODE_COMMENT,core/cont/src/TObjArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjectTable.cxx:781,Deployability,toggle,toggle,781,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 11/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TObjectTable; \ingroup Containers; This class registers all instances of TObject and its derived; classes in a hash table. The Add() and Remove() members are called; from the TObject ctor and dtor, respectively. Using the Print(); member one can see all currently active objects in the system.; Using the resource (in .rootrc): Root.ObjectStat one can toggle this; feature on or off. Using the compile option R__NOSTATS one can de-active this feature; for the entire system (for maximum performance in highly time; critical applications). The following output has been produced in a ROOT interactive session; via the command gObjectTable->Print(); ~~~ {.cpp}; class cnt on heap size total size heap size; ============================================================================; TKey 4 4 72 288 288; TClass 84 84 80 6720 6720; TDataMember 276 276 24 6624 6624; TObject 11 11 12 132 132; TMethod 1974 1974 64 126336 126336; TDataType 34 34 56 1904 1904; TList 2328 2328 36 83808 83808; TH1F 1 1 448 448 448; TText 2688 2688 56 150528 150528; TGaxis 1 0 120 120 0; TAxis 6 3 88 528 264; TBox 57 57 52 2964 2964; TLine 118 118 40 4720 4720; TWbox 1 1 56 56 56; TArrow 1 1 64 64 64; TPaveText 59 59 124 7316 7316; TPave 1 1 92 92 92; TFile 1 1 136 136 136; TCanvas 3 3 444 1332 1332; TPad 1 1 312 312 312; TContextMenu 3 3 48 144 144; TMethodArg 2166 2166 44 95304 95304; TPaveLabel 1 1 120 120 120; THtml 1 1 32 32 32; TROOT 1 0 208 208 0; TApplication 1 1 28 28 28; TFileHandler 1 1 20 20 20; TColor 163 163 40 6520 6520; TStyle 1 1 364 364 364; TRealData 117 117 28 327",MatchSource.CODE_COMMENT,core/cont/src/TObjectTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjectTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjectTable.cxx:916,Performance,perform,performance,916,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 11/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TObjectTable; \ingroup Containers; This class registers all instances of TObject and its derived; classes in a hash table. The Add() and Remove() members are called; from the TObject ctor and dtor, respectively. Using the Print(); member one can see all currently active objects in the system.; Using the resource (in .rootrc): Root.ObjectStat one can toggle this; feature on or off. Using the compile option R__NOSTATS one can de-active this feature; for the entire system (for maximum performance in highly time; critical applications). The following output has been produced in a ROOT interactive session; via the command gObjectTable->Print(); ~~~ {.cpp}; class cnt on heap size total size heap size; ============================================================================; TKey 4 4 72 288 288; TClass 84 84 80 6720 6720; TDataMember 276 276 24 6624 6624; TObject 11 11 12 132 132; TMethod 1974 1974 64 126336 126336; TDataType 34 34 56 1904 1904; TList 2328 2328 36 83808 83808; TH1F 1 1 448 448 448; TText 2688 2688 56 150528 150528; TGaxis 1 0 120 120 0; TAxis 6 3 88 528 264; TBox 57 57 52 2964 2964; TLine 118 118 40 4720 4720; TWbox 1 1 56 56 56; TArrow 1 1 64 64 64; TPaveText 59 59 124 7316 7316; TPave 1 1 92 92 92; TFile 1 1 136 136 136; TCanvas 3 3 444 1332 1332; TPad 1 1 312 312 312; TContextMenu 3 3 48 144 144; TMethodArg 2166 2166 44 95304 95304; TPaveLabel 1 1 120 120 120; THtml 1 1 32 32 32; TROOT 1 0 208 208 0; TApplication 1 1 28 28 28; TFileHandler 1 1 20 20 20; TColor 163 163 40 6520 6520; TStyle 1 1 364 364 364; TRealData 117 117 28 327",MatchSource.CODE_COMMENT,core/cont/src/TObjectTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjectTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjectTable.cxx:540,Security,hash,hash,540,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 11/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TObjectTable; \ingroup Containers; This class registers all instances of TObject and its derived; classes in a hash table. The Add() and Remove() members are called; from the TObject ctor and dtor, respectively. Using the Print(); member one can see all currently active objects in the system.; Using the resource (in .rootrc): Root.ObjectStat one can toggle this; feature on or off. Using the compile option R__NOSTATS one can de-active this feature; for the entire system (for maximum performance in highly time; critical applications). The following output has been produced in a ROOT interactive session; via the command gObjectTable->Print(); ~~~ {.cpp}; class cnt on heap size total size heap size; ============================================================================; TKey 4 4 72 288 288; TClass 84 84 80 6720 6720; TDataMember 276 276 24 6624 6624; TObject 11 11 12 132 132; TMethod 1974 1974 64 126336 126336; TDataType 34 34 56 1904 1904; TList 2328 2328 36 83808 83808; TH1F 1 1 448 448 448; TText 2688 2688 56 150528 150528; TGaxis 1 0 120 120 0; TAxis 6 3 88 528 264; TBox 57 57 52 2964 2964; TLine 118 118 40 4720 4720; TWbox 1 1 56 56 56; TArrow 1 1 64 64 64; TPaveText 59 59 124 7316 7316; TPave 1 1 92 92 92; TFile 1 1 136 136 136; TCanvas 3 3 444 1332 1332; TPad 1 1 312 312 312; TContextMenu 3 3 48 144 144; TMethodArg 2166 2166 44 95304 95304; TPaveLabel 1 1 120 120 120; THtml 1 1 32 32 32; TROOT 1 0 208 208 0; TApplication 1 1 28 28 28; TFileHandler 1 1 20 20 20; TColor 163 163 40 6520 6520; TStyle 1 1 364 364 364; TRealData 117 117 28 327",MatchSource.CODE_COMMENT,core/cont/src/TObjectTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjectTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjectTable.cxx:341,Performance,perform,performed,341,"////////////////////////////////////////////////////////////////////////////////; /// Remove an object from the object table. If op is 0 or not in the table; /// don't complain. Currently only used by the TClonesArray dtor. Should not; /// be used anywhere else, except in places where ""special"" allocation and; /// de-allocation tricks are performed.",MatchSource.CODE_COMMENT,core/cont/src/TObjectTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjectTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjectTable.cxx:172,Testability,test,test,172,"////////////////////////////////////////////////////////////////////////////////; /// Find an object in the object table. Returns the slot where to put; /// the object. To test if the object is actually already in the table; /// use PtrIsValid().",MatchSource.CODE_COMMENT,core/cont/src/TObjectTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjectTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TOrdCollection.cxx:133,Availability,error,error,133,"////////////////////////////////////////////////////////////////////////////////; /// Return true when index out of bounds and print error.",MatchSource.CODE_COMMENT,core/cont/src/TOrdCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TOrdCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx:1499,Availability,error,error,1499," array expands automatically; when objects are added (shrinking can be done by hand using Expand() ). The TRefArray can be filled with:; ~~~ {.cpp}; array.Add(obj); array.AddAt(obj,i); but not array[i] = obj !!!; ~~~; The array elements can be retrieved with:; ~~~ {.cpp}; TObject *obj = array.At(i);; ~~~; By default the TRefArray 'points' to the current process and can only; receive object that have been created in this process.; To point the TRefArray to a different process do:; ~~~ {.cpp}; TRefArray array( processId );; ~~~; For example, if 'obj' is an instance that was created in the different; process and you do:; ~~~ {.cpp}; TRefArray array( TProcessID::GetProcessWithUID( obj ) );; ~~~; Then; ~~~ {.cpp}; array.Add(obj);; ~~~; is correct (obj comes from the process the array is pointed to; while; ~~~ {.cpp}; TObject *nobj = new TObject;; array.Add(nobj);; ~~~; is incorrect since 'nobj' was created in a different process than the; one the array is pointed to. In this case you will see error message:; ~~~ {.cpp}; Error in <TRefArray::AddAtAndExpand>: The object at 0x... is not; registered in the process the TRefArray point to; (pid = ProcessID../....); ~~~; When a TRefArray is Streamed, only the pointer unique id is written,; not the referenced object. TRefArray may be assigned to different; branches of one Tree or several Trees.; The branch containing the TRefArray can be read before or after the; array (eg TClonesArray, STL vector,..) of the referenced objects. See an example in $ROOTSYS/test/Event.h. ### RESTRICTIONS when using TRefArray. - Elements in a TRefArray cannot point to a TFile or TDirectory.; - All elements of a TRefArray must be set in the same process,; In particular, one cannot modify some elements of the array in; a different process. Use an array of TRef when one of the above restrictions is met. The number of TRef handled by a single process id is limited to; 16777215 (see TRef for more detail). When the TProcessID is full; (has seen 16777215 ob",MatchSource.CODE_COMMENT,core/cont/src/TRefArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx:1527,Availability,Error,Error,1527,"hrinking can be done by hand using Expand() ). The TRefArray can be filled with:; ~~~ {.cpp}; array.Add(obj); array.AddAt(obj,i); but not array[i] = obj !!!; ~~~; The array elements can be retrieved with:; ~~~ {.cpp}; TObject *obj = array.At(i);; ~~~; By default the TRefArray 'points' to the current process and can only; receive object that have been created in this process.; To point the TRefArray to a different process do:; ~~~ {.cpp}; TRefArray array( processId );; ~~~; For example, if 'obj' is an instance that was created in the different; process and you do:; ~~~ {.cpp}; TRefArray array( TProcessID::GetProcessWithUID( obj ) );; ~~~; Then; ~~~ {.cpp}; array.Add(obj);; ~~~; is correct (obj comes from the process the array is pointed to; while; ~~~ {.cpp}; TObject *nobj = new TObject;; array.Add(nobj);; ~~~; is incorrect since 'nobj' was created in a different process than the; one the array is pointed to. In this case you will see error message:; ~~~ {.cpp}; Error in <TRefArray::AddAtAndExpand>: The object at 0x... is not; registered in the process the TRefArray point to; (pid = ProcessID../....); ~~~; When a TRefArray is Streamed, only the pointer unique id is written,; not the referenced object. TRefArray may be assigned to different; branches of one Tree or several Trees.; The branch containing the TRefArray can be read before or after the; array (eg TClonesArray, STL vector,..) of the referenced objects. See an example in $ROOTSYS/test/Event.h. ### RESTRICTIONS when using TRefArray. - Elements in a TRefArray cannot point to a TFile or TDirectory.; - All elements of a TRefArray must be set in the same process,; In particular, one cannot modify some elements of the array in; a different process. Use an array of TRef when one of the above restrictions is met. The number of TRef handled by a single process id is limited to; 16777215 (see TRef for more detail). When the TProcessID is full; (has seen 16777215 objects), we switch to new one TProcessID; maximum 65535 ",MatchSource.CODE_COMMENT,core/cont/src/TRefArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx:3033,Availability,Error,Error,3033,"....); ~~~; When a TRefArray is Streamed, only the pointer unique id is written,; not the referenced object. TRefArray may be assigned to different; branches of one Tree or several Trees.; The branch containing the TRefArray can be read before or after the; array (eg TClonesArray, STL vector,..) of the referenced objects. See an example in $ROOTSYS/test/Event.h. ### RESTRICTIONS when using TRefArray. - Elements in a TRefArray cannot point to a TFile or TDirectory.; - All elements of a TRefArray must be set in the same process,; In particular, one cannot modify some elements of the array in; a different process. Use an array of TRef when one of the above restrictions is met. The number of TRef handled by a single process id is limited to; 16777215 (see TRef for more detail). When the TProcessID is full; (has seen 16777215 objects), we switch to new one TProcessID; maximum 65535 including the TProcessIDs read from file).; However TRefArray can not switch to new TProcessID if they already; contain objects. When the TProcessID has been switched due to overflow and an new; object is added to an existing, empty TRefArray, you will see:. ~~~ {.cpp}; Warning in <TRefArray::AddAtAndExpand>: The ProcessID for the 0x5f83819e8 has been switched to ProcessID4/6c89f37e-8259-11e2-9717-166ee183beef:4; ~~~; If the TRefArray was not empty, you will see:. ~~~ {.cpp}; Error in <TRefArray::AddAtAndExpand>: The object at %p can not be registered in the process the TRefArray points to (pid = ProcessID4/6c89f37e-8259-11e2-9717-166ee183beef) because the ProcessID has too many objects and the TRefArray already contains other objects.; ~~~; When running out of TProcessIds, you will see:. ~~~ {.cpp}; Warning in <TProcessID::AddProcessID>: Maximum number of TProcessID (65535) is almost reached (one left). TRef will stop being functional when the limit is reached.; Fatal in <TProcessID::AddProcessID>: Maximum number of TProcessID (65535) has been reached. TRef are not longer functional.; ~~~; */",MatchSource.CODE_COMMENT,core/cont/src/TRefArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx:1505,Integrability,message,message,1505," array expands automatically; when objects are added (shrinking can be done by hand using Expand() ). The TRefArray can be filled with:; ~~~ {.cpp}; array.Add(obj); array.AddAt(obj,i); but not array[i] = obj !!!; ~~~; The array elements can be retrieved with:; ~~~ {.cpp}; TObject *obj = array.At(i);; ~~~; By default the TRefArray 'points' to the current process and can only; receive object that have been created in this process.; To point the TRefArray to a different process do:; ~~~ {.cpp}; TRefArray array( processId );; ~~~; For example, if 'obj' is an instance that was created in the different; process and you do:; ~~~ {.cpp}; TRefArray array( TProcessID::GetProcessWithUID( obj ) );; ~~~; Then; ~~~ {.cpp}; array.Add(obj);; ~~~; is correct (obj comes from the process the array is pointed to; while; ~~~ {.cpp}; TObject *nobj = new TObject;; array.Add(nobj);; ~~~; is incorrect since 'nobj' was created in a different process than the; one the array is pointed to. In this case you will see error message:; ~~~ {.cpp}; Error in <TRefArray::AddAtAndExpand>: The object at 0x... is not; registered in the process the TRefArray point to; (pid = ProcessID../....); ~~~; When a TRefArray is Streamed, only the pointer unique id is written,; not the referenced object. TRefArray may be assigned to different; branches of one Tree or several Trees.; The branch containing the TRefArray can be read before or after the; array (eg TClonesArray, STL vector,..) of the referenced objects. See an example in $ROOTSYS/test/Event.h. ### RESTRICTIONS when using TRefArray. - Elements in a TRefArray cannot point to a TFile or TDirectory.; - All elements of a TRefArray must be set in the same process,; In particular, one cannot modify some elements of the array in; a different process. Use an array of TRef when one of the above restrictions is met. The number of TRef handled by a single process id is limited to; 16777215 (see TRef for more detail). When the TProcessID is full; (has seen 16777215 ob",MatchSource.CODE_COMMENT,core/cont/src/TRefArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx:2013,Testability,test,test,2013,"rray( processId );; ~~~; For example, if 'obj' is an instance that was created in the different; process and you do:; ~~~ {.cpp}; TRefArray array( TProcessID::GetProcessWithUID( obj ) );; ~~~; Then; ~~~ {.cpp}; array.Add(obj);; ~~~; is correct (obj comes from the process the array is pointed to; while; ~~~ {.cpp}; TObject *nobj = new TObject;; array.Add(nobj);; ~~~; is incorrect since 'nobj' was created in a different process than the; one the array is pointed to. In this case you will see error message:; ~~~ {.cpp}; Error in <TRefArray::AddAtAndExpand>: The object at 0x... is not; registered in the process the TRefArray point to; (pid = ProcessID../....); ~~~; When a TRefArray is Streamed, only the pointer unique id is written,; not the referenced object. TRefArray may be assigned to different; branches of one Tree or several Trees.; The branch containing the TRefArray can be read before or after the; array (eg TClonesArray, STL vector,..) of the referenced objects. See an example in $ROOTSYS/test/Event.h. ### RESTRICTIONS when using TRefArray. - Elements in a TRefArray cannot point to a TFile or TDirectory.; - All elements of a TRefArray must be set in the same process,; In particular, one cannot modify some elements of the array in; a different process. Use an array of TRef when one of the above restrictions is met. The number of TRef handled by a single process id is limited to; 16777215 (see TRef for more detail). When the TProcessID is full; (has seen 16777215 objects), we switch to new one TProcessID; maximum 65535 including the TProcessIDs read from file).; However TRefArray can not switch to new TProcessID if they already; contain objects. When the TProcessID has been switched due to overflow and an new; object is added to an existing, empty TRefArray, you will see:. ~~~ {.cpp}; Warning in <TRefArray::AddAtAndExpand>: The ProcessID for the 0x5f83819e8 has been switched to ProcessID4/6c89f37e-8259-11e2-9717-166ee183beef:4; ~~~; If the TRefArray was not empty,",MatchSource.CODE_COMMENT,core/cont/src/TRefArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx:122,Availability,error,error,122,"////////////////////////////////////////////////////////////////////////////////; /// Add object at position ids. Give an error when idx is out of bounds; /// (i.e. the array is not expanded).",MatchSource.CODE_COMMENT,core/cont/src/TRefArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx:39,Deployability,update,update,39,"// For efficiency we need sometimes to update fLast so we have; // to cast const away. Ugly, but making GetAbsLast() not const breaks; // many other const functions.",MatchSource.CODE_COMMENT,core/cont/src/TRefArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx:112,Availability,error,error,112,"////////////////////////////////////////////////////////////////////////////////; /// Generate an out-of-bounds error. Always returns false.",MatchSource.CODE_COMMENT,core/cont/src/TRefArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx:132,Availability,Error,Error,132,"/*; if (GetAbsLast() == -1 || fSorted) return;; for (Int_t i = 0; i < fSize; i++); if (fUIDs[i]) {; if (!fUIDs[i]->IsSortable()) {; Error(""Sort"", ""objects in array are not sortable"");; return;; }; }. QSort(fUIDs, 0, TMath::Min(fSize, upto-fLowerBound));. fLast = -2;; fSorted = kTRUE;; */",MatchSource.CODE_COMMENT,core/cont/src/TRefArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx:98,Availability,Error,Error,98,"/*; Int_t base, position, last, result = 0;; TObject *op2;. if (!op) return -1;. if (!fSorted) {; Error(""BinarySearch"", ""array must first be sorted"");; return -1;; }. base = 0;; last = TMath::Min(fSize, upto-fLowerBound) - 1;. while (last >= base) {; //position = (base+last) / 2;; //op2 = fCont[position];; //if (op2 && (result = op->Compare(op2)) == 0); // return position + fLowerBound;; //if (!op2 || result < 0); // last = position-1;; //else; // base = position+1;; }; */",MatchSource.CODE_COMMENT,core/cont/src/TRefArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx:792,Performance,load,loaded,792,"// @(#)root/cont:$Id$; // Author: Rene Brun 28/09/2001; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TRefTable; \ingroup Containers; A TRefTable maintains the association between a referenced object; and the parent object supporting this referenced object. The parent object is typically a branch of a TTree. For each object; referenced in a TTree entry, the corresponding entry in the TTree's; TBranchRef::fRefTable contains the index of the branch that; needs to be loaded to bring the object into memory. Persistency of a TRefTable is split into two parts:; - entry specific information is stored (read) by FillBuffer; (ReadBuffer). For each referenced object the object's fUniqueID; and the referencing TRef::fPID is stored (to allow the TRefTable; to autoload references created by different processes).; - non-entry specific, i.e. global information is stored (read) by; the Streamer function. This comprises all members marked as; persistent. As TObject::fUniqueID is only unique for a given TProcessID, a table; of unique IDs is kept for each used TProcessID. There is no natural; order of TProcessIDs, so TRefTable stores a vector of the TGUID of; all known TProcessIDs in fProcessGUIDs; the index of a TProcessID in; this vector defines the index of the auto-loading info in fParentIDs; for that TProcessID. The mapping of TProcessID* to index is cached; for quick non-persistent lookup.; */",MatchSource.CODE_COMMENT,core/cont/src/TRefTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx:1593,Performance,load,loading,1593,"// @(#)root/cont:$Id$; // Author: Rene Brun 28/09/2001; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TRefTable; \ingroup Containers; A TRefTable maintains the association between a referenced object; and the parent object supporting this referenced object. The parent object is typically a branch of a TTree. For each object; referenced in a TTree entry, the corresponding entry in the TTree's; TBranchRef::fRefTable contains the index of the branch that; needs to be loaded to bring the object into memory. Persistency of a TRefTable is split into two parts:; - entry specific information is stored (read) by FillBuffer; (ReadBuffer). For each referenced object the object's fUniqueID; and the referencing TRef::fPID is stored (to allow the TRefTable; to autoload references created by different processes).; - non-entry specific, i.e. global information is stored (read) by; the Streamer function. This comprises all members marked as; persistent. As TObject::fUniqueID is only unique for a given TProcessID, a table; of unique IDs is kept for each used TProcessID. There is no natural; order of TProcessIDs, so TRefTable stores a vector of the TGUID of; all known TProcessIDs in fProcessGUIDs; the index of a TProcessID in; this vector defines the index of the auto-loading info in fParentIDs; for that TProcessID. The mapping of TProcessID* to index is cached; for quick non-persistent lookup.; */",MatchSource.CODE_COMMENT,core/cont/src/TRefTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx:1681,Performance,cache,cached,1681,"// @(#)root/cont:$Id$; // Author: Rene Brun 28/09/2001; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TRefTable; \ingroup Containers; A TRefTable maintains the association between a referenced object; and the parent object supporting this referenced object. The parent object is typically a branch of a TTree. For each object; referenced in a TTree entry, the corresponding entry in the TTree's; TBranchRef::fRefTable contains the index of the branch that; needs to be loaded to bring the object into memory. Persistency of a TRefTable is split into two parts:; - entry specific information is stored (read) by FillBuffer; (ReadBuffer). For each referenced object the object's fUniqueID; and the referencing TRef::fPID is stored (to allow the TRefTable; to autoload references created by different processes).; - non-entry specific, i.e. global information is stored (read) by; the Streamer function. This comprises all members marked as; persistent. As TObject::fUniqueID is only unique for a given TProcessID, a table; of unique IDs is kept for each used TProcessID. There is no natural; order of TProcessIDs, so TRefTable stores a vector of the TGUID of; all known TProcessIDs in fProcessGUIDs; the index of a TProcessID in; this vector defines the index of the auto-loading info in fParentIDs; for that TProcessID. The mapping of TProcessID* to index is cached; for quick non-persistent lookup.; */",MatchSource.CODE_COMMENT,core/cont/src/TRefTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx:11,Deployability,update,update,11,"// need to update",MatchSource.CODE_COMMENT,core/cont/src/TRefTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear all entries in the table.",MatchSource.CODE_COMMENT,core/cont/src/TRefTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx:134,Usability,GUID,GUID,134,"////////////////////////////////////////////////////////////////////////////////; /// Get fProcessGUIDs' index of the TProcessID with GUID guid",MatchSource.CODE_COMMENT,core/cont/src/TRefTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx:139,Usability,guid,guid,139,"////////////////////////////////////////////////////////////////////////////////; /// Get fProcessGUIDs' index of the TProcessID with GUID guid",MatchSource.CODE_COMMENT,core/cont/src/TRefTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx:188,Usability,GUID,GUID,188,"////////////////////////////////////////////////////////////////////////////////; /// Get the index for fProcessIDs, fAllocSize, etc given a PID.; /// Uses fMapPIDtoInternal and the pid's GUID / fProcessGUID",MatchSource.CODE_COMMENT,core/cont/src/TRefTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx:188,Usability,GUID,GUID,188,"////////////////////////////////////////////////////////////////////////////////; /// Get the index for fProcessIDs, fAllocSize, etc given a PID.; /// Uses fMapPIDtoInternal and the pid's GUID / fProcessGUID",MatchSource.CODE_COMMENT,core/cont/src/TRefTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear all entries in the table.",MatchSource.CODE_COMMENT,core/cont/src/TRefTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx:35,Performance,cache,cached,35,"// -- The branch already has an id cached, just use it.",MatchSource.CODE_COMMENT,core/cont/src/TRefTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx:39,Performance,cache,cached,39,"// -- The branch does *not* have an id cached, find it or generate one.; // Lookup the branch.",MatchSource.CODE_COMMENT,core/cont/src/TRefTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefTable.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TSortedList.cxx:513,Modifiability,inherit,inheriting,513,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 14/09/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TSortedList; \ingroup Containers; A sorted doubly linked list. All sortable classes inheriting from; TObject can be inserted in a TSortedList.; */",MatchSource.CODE_COMMENT,core/cont/src/TSortedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TSortedList.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/test/testTypedIteration.cxx:21,Availability,failure,failure,21,"/// Test compilation failure",MatchSource.CODE_COMMENT,core/cont/test/testTypedIteration.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/test/testTypedIteration.cxx
https://github.com/root-project/root/tree/v6-32-06/core/cont/test/testTypedIteration.cxx:4,Testability,Test,Test,4,"/// Test compilation failure",MatchSource.CODE_COMMENT,core/cont/test/testTypedIteration.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/test/testTypedIteration.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/BaseSelectionRule.h:3,Performance,Cache,Cached,3,"// Cached for performance",MatchSource.CODE_COMMENT,core/dictgen/res/BaseSelectionRule.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/BaseSelectionRule.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/BaseSelectionRule.h:14,Performance,perform,performance,14,"// Cached for performance",MatchSource.CODE_COMMENT,core/dictgen/res/BaseSelectionRule.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/BaseSelectionRule.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/BaseSelectionRule.h:12,Performance,cache,cache,12,"// Fill the cache for performant attribute retrival",MatchSource.CODE_COMMENT,core/dictgen/res/BaseSelectionRule.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/BaseSelectionRule.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/BaseSelectionRule.h:22,Performance,perform,performant,22,"// Fill the cache for performant attribute retrival",MatchSource.CODE_COMMENT,core/dictgen/res/BaseSelectionRule.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/BaseSelectionRule.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/BaseSelectionRule.h:17,Testability,test,test,17,"// Checks if the test string matches against the pattern (which has produced the list of sub-patterns patterns_list). There is; // difference if we are processing linkdef.h or selection.xmlpatterns",MatchSource.CODE_COMMENT,core/dictgen/res/BaseSelectionRule.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/BaseSelectionRule.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/ClassSelectionRule.h:34,Security,access,access,34,"// Explicit request to be able to access protected member from the interpreter.",MatchSource.CODE_COMMENT,core/dictgen/res/ClassSelectionRule.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/ClassSelectionRule.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/ClassSelectionRule.h:34,Security,access,access,34,"// Explicit request to be able to access private member from the interpreter.",MatchSource.CODE_COMMENT,core/dictgen/res/ClassSelectionRule.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/ClassSelectionRule.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/ClassSelectionRule.h:18,Modifiability,Variab,VariableSelectionRule,18,"//const std::list<VariableSelectionRule>& getFieldSelectionRules(); //gets the field selections list",MatchSource.CODE_COMMENT,core/dictgen/res/ClassSelectionRule.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/ClassSelectionRule.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/ClassSelectionRule.h:40,Modifiability,inherit,inheritable,40,"//checks if the class selection rule is inheritable",MatchSource.CODE_COMMENT,core/dictgen/res/ClassSelectionRule.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/ClassSelectionRule.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/ClassSelectionRule.h:11,Modifiability,inherit,inheritance,11,"//sets the inheritance rule for the class",MatchSource.CODE_COMMENT,core/dictgen/res/ClassSelectionRule.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/ClassSelectionRule.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/cygpath.h:11,Deployability,install,install,11,"// Get the install location of cygwin.",MatchSource.CODE_COMMENT,core/dictgen/res/cygpath.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/cygpath.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/cygpath.h:42,Modifiability,variab,variable,42,"// Search for cygpath in PATH environment variable",MatchSource.CODE_COMMENT,core/dictgen/res/cygpath.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/cygpath.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/DictSelectionReader.h:6544,Modifiability,inherit,inherits,6544,"ments<2>):; * - @c A<char> &rarr; @c A<char,float>; * - @c A<char,float> &rarr; @c A<char,int>; * - @c myVector<float> &rarr; @c myVector<A<char,int>,myAllocator<A<char,int>>>; * - @c myVector<A<char>> &rarr; @c myVector<float,myAllocator<float>>; *; * A brief description of the properties that can be assigned to data members; * with the @c ROOT::Meta::Selection MemberAttributes class:; * 1. @c kTransient : the data member is transient, not persistified by the; * ROOT I/O.; * 2. @c kAutoSelected : the type of the data member is selected without the; * need of specifying its class explicitely.; *; * For example:; * @code; * [...]; * class classTransientMember {; * private:; * int transientMember;; * };; * class classAutoselected {};; * class classTestAutoselect {; * private:; * classAutoselected autoselected;; * };; *; * namespace ROOT {; * namespace Meta {; * namespace Selection {; * class classTestAutoselect {; * MemberAttributes<kAutoSelected> autoselected;; * };; * class classTransientMember {; * MemberAttributes<kTransient> transientMember;; * };; * }; * }; * }; * @endcode; * would lead to the creation of selection rules for @c classTransientMember; * specifying that @c transientMember is transient, @c classTestAutoselect and; * @c classAutoselected.; *; * Another trait class present in the @c ROOT::Meta::Selection is; * @c SelectNoInstance. If a template in the selection namespace inherits from; * this class, none of its instantiations will be automatically selected but; * all of the properties specified otherwise, like transient members or; * number of template arguments to keep, will be transmitted to all of the; * instantiations selected by other means.; * For example; * @code; * [...]; * template< class T, class BASE >; * class MyDataVector : KeepFirstTemplateArguments< 1 >, SelectNoInstance {; * MemberAttributes< kTransient + kAutoSelected > m_isMostDerived;; * MemberAttributes< kNonSplittable + kAutoSelected > m_isNonSplit;; * };; * [...]; * @endcode; **/",MatchSource.CODE_COMMENT,core/dictgen/res/DictSelectionReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/DictSelectionReader.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/DictSelectionReader.h:810,Usability,simpl,simplest,810,"/**; * @file DictSelectionReader.h; * @author Danilo Piparo; * @date January 2014; * @brief Select classes and assign properties using C++ syntax.; *; * @details When generating dictionary information for a class,; * one sometimes wants to specify additional information; * beyond the class definition itself, for example, to specify; * that certain members are to be treated as transient by the persistency; * system. This can be done by associating a dictionary selection class; * with the class for which dictionary information is being generated.; * The contents of this selection class encode the additional information.; * Below, we first discuss how to associate a selection class; * with your class; then we list the current Set of information; * which may appear inside the selection class.; *; * The simplest case is for the case of a non-template class @c C.; * By default, the Name of the selection class is then; * @c ROOT::Meta::Selection::C. If you have such a class, it will be found; * automatically. If @c C is in a namespace, @c NS::C, then; * the selection class should be in the same namespace:; * @c ROOT::Meta::Selection::NS::C.; *; * Examples:; *; * The DictSelectionReader is used to create selection rules starting from; * C++ the constructs of the @c ROOT::Meta::Selection namespace. All rules; * are matching by name.; * A brief description of the operations that lead to class selection:; * 1. If a class declaration is present in the selection namespace, a class; * with the same name is selected outside the selection namespace.; * 2. If a template class declaration and a template instantiation is present; * in the selection namespace, all the instances of the template are; * selected outside the namespace.; *; * For example:; * @code; * [...]; * class classVanilla{};; * template <class A> class classTemplateVanilla {};; * classTemplateVanilla<char> t0;; * namespace ROOT {; * namespace Meta {; * namespace Selection {; * class classVanilla {};; * template <typena",MatchSource.CODE_COMMENT,core/dictgen/res/DictSelectionReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/DictSelectionReader.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/DictSelectionReader.h:3631,Usability,clear,clear,3631,"ttable> {};; * }; * }; * }; * @endcode; * would create a selection rule which selects class @c classWithAttributes and; * assignes to it the property described by @c kNonSplittable. Multiple; * properties can be assigned to a single class with this syntax:; * @code; * [...]; * namespace ROOT {; * namespace Meta {; * namespace Selection {; * class classWithAttributes :; * ClassAttributes <kProperty1 + kProperty2 + ... + kPropertyN> {};; * }; * }; * }; * @endcode; *; * The @c ROOT::Meta::Selection syntax allows to alter the number of template; * parameters of a certain template class within the ROOT type system, TClass.; * Technically it allows to alter the way in which the ""normalized name"" (in; * other words, the ""ROOT name"") of the class is created. The key is the usage; * of the @c KeepFirstTemplateArguments traits class.; * It is possible to select the maximum number of template arguments considered; * if not different from the default. A concrete example can be more clear than; * a long explaination in this case:; * @code; * [...]; * template <class T, class U = int, int V = 3> class A {...};; * template <class T, class Alloc = myAllocator<T> > class myVector {...};; * A<char> a1;; * A<char, float> a2;; * myVector<float> v1;; * myVector<A<char>> v2;; *; * namespace ROOT {; * namespace Meta {; * namespace Selection {; * template <class T, class U = int, int V = 3> class A; * : KeepFirstTemplateArguments<1> {};; * A<double> a;; * template <class T, class Alloc = myAllocator<T> > class myVector; * : KeepFirstTemplateArguments<1> {};; * myVector<double> vd;; * }; * }; * }; * @endcode; *; * Consistently with what described above, all the instances of @c A and; * @c myvector will be selected. In addition, only the first template parameter; * will be kept.; * In absence of any @c KeepFirstTemplateArguments trait, the normalization; * would be:; * - @c A<char> &rarr; @c A<char,float,3>; * - @c A<char,float> &rarr; @c A<char,int,3>; * - @c myVector<float> &rarr; @c myVec",MatchSource.CODE_COMMENT,core/dictgen/res/DictSelectionReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/DictSelectionReader.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/DictSelectionReader.h:78,Integrability,interface,interfaces,78,"/// Take the selection rules as input (for consistency w/ other selector; /// interfaces)",MatchSource.CODE_COMMENT,core/dictgen/res/DictSelectionReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/DictSelectionReader.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/LinkdefReader.h:21,Availability,error,error,21,"// lines count - for error messages",MatchSource.CODE_COMMENT,core/dictgen/res/LinkdefReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/LinkdefReader.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/LinkdefReader.h:27,Integrability,message,messages,27,"// lines count - for error messages",MatchSource.CODE_COMMENT,core/dictgen/res/LinkdefReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/LinkdefReader.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:1622,Deployability,install,install,1622,"he code to The Lean Mean C++ Option Parser.; * The ""Software"" does NOT refer to any other files which you; * may have received alongside this file (e.g. as part of a larger project that; * incorporates The Lean Mean C++ Option Parser).; *; * Permission is hereby granted, free of charge, to any person obtaining a copy; * of this software, to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to permit; * persons to whom the Software is furnished to do so, subject to the following; * conditions:; * The above copyright notice and this permission notice shall be included in; * all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE; * SOFTWARE.; */; /*; * NOTE: It is recommended that you read the processed HTML doxygen documentation; * rather than this source. If you don't know doxygen, it's like javadoc for C++.; * If you don't want to install doxygen you can find a copy of the processed; * documentation at; *; * http://optionparser.sourceforge.net/; *; */; /*; Danio Piparo - Since we import this parser from tan external source, we keep; track of the changes:. New Features 6-7-12:; o Added FullArg class from the examples in the header. Bugs Fixed 8-7-12:; o Cov: Add initialisation of screenlen variable in LinePartIterator; o Cov: LineWrapper databuf, lenbuf and wrote_something are now initialised; o Cov: Option::operator= now returns Option& (return *this;) and not void; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:450,Energy Efficiency,charge,charge,450,"/*; * The Lean Mean C++ Option Parser; *; * Copyright (C) 2012 Matthias S. Benkmann; *; * The ""Software"" in the following 2 paragraphs refers to this file containing; * the code to The Lean Mean C++ Option Parser.; * The ""Software"" does NOT refer to any other files which you; * may have received alongside this file (e.g. as part of a larger project that; * incorporates The Lean Mean C++ Option Parser).; *; * Permission is hereby granted, free of charge, to any person obtaining a copy; * of this software, to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to permit; * persons to whom the Software is furnished to do so, subject to the following; * conditions:; * The above copyright notice and this permission notice shall be included in; * all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE; * SOFTWARE.; */; /*; * NOTE: It is recommended that you read the processed HTML doxygen documentation; * rather than this source. If you don't know doxygen, it's like javadoc for C++.; * If you don't want to install doxygen you can find a copy of the processed; * documentation at; *; * http://optionparser.sourceforge.net/; *; */; /*; Danio Piparo - Since we import this parser from tan external source, we keep; track of the changes:. New Features 6-7-12:; o Added FullArg class from the examples in the header. Bugs Fixed 8-7-12:; o Cov: Add initialisation of screenlen variable in Li",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:1289,Integrability,CONTRACT,CONTRACT,1289,"he code to The Lean Mean C++ Option Parser.; * The ""Software"" does NOT refer to any other files which you; * may have received alongside this file (e.g. as part of a larger project that; * incorporates The Lean Mean C++ Option Parser).; *; * Permission is hereby granted, free of charge, to any person obtaining a copy; * of this software, to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to permit; * persons to whom the Software is furnished to do so, subject to the following; * conditions:; * The above copyright notice and this permission notice shall be included in; * all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE; * SOFTWARE.; */; /*; * NOTE: It is recommended that you read the processed HTML doxygen documentation; * rather than this source. If you don't know doxygen, it's like javadoc for C++.; * If you don't want to install doxygen you can find a copy of the processed; * documentation at; *; * http://optionparser.sourceforge.net/; *; */; /*; Danio Piparo - Since we import this parser from tan external source, we keep; track of the changes:. New Features 6-7-12:; o Added FullArg class from the examples in the header. Bugs Fixed 8-7-12:; o Cov: Add initialisation of screenlen variable in LinePartIterator; o Cov: LineWrapper databuf, lenbuf and wrote_something are now initialised; o Cov: Option::operator= now returns Option& (return *this;) and not void; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:1987,Modifiability,variab,variable,1987,"he code to The Lean Mean C++ Option Parser.; * The ""Software"" does NOT refer to any other files which you; * may have received alongside this file (e.g. as part of a larger project that; * incorporates The Lean Mean C++ Option Parser).; *; * Permission is hereby granted, free of charge, to any person obtaining a copy; * of this software, to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to permit; * persons to whom the Software is furnished to do so, subject to the following; * conditions:; * The above copyright notice and this permission notice shall be included in; * all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE; * SOFTWARE.; */; /*; * NOTE: It is recommended that you read the processed HTML doxygen documentation; * rather than this source. If you don't know doxygen, it's like javadoc for C++.; * If you don't want to install doxygen you can find a copy of the processed; * documentation at; *; * http://optionparser.sourceforge.net/; *; */; /*; Danio Piparo - Since we import this parser from tan external source, we keep; track of the changes:. New Features 6-7-12:; o Added FullArg class from the examples in the header. Bugs Fixed 8-7-12:; o Cov: Add initialisation of screenlen variable in LinePartIterator; o Cov: LineWrapper databuf, lenbuf and wrote_something are now initialised; o Cov: Option::operator= now returns Option& (return *this;) and not void; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:2305,Availability,Down,Download,2305,") == DISABLE ) ... @endcode; * <li> Cumulative option (-v verbose, -vv more verbose, -vvv even more verbose):; * @code int verbosity = options[VERBOSE].count(); @endcode; * <li> Iterate over all --file=&lt;fname> arguments:; * @code for (Option* opt = options[FILE]; opt; opt = opt->next()); * fname = opt->arg; ... @endcode; * <li> If you really want to, you can still process all arguments in order:; * @code; * for (int i = 0; i < p.optionsCount(); ++i) {; * Option& opt = buffer[i];; * switch(opt.index()) {; * case HELP: ...; * case VERBOSE: ...; * case FILE: fname = opt.arg; ...; * case UNKNOWN: ...; * @endcode; * </ul>; * </ul> @n; * Despite these features the code size remains tiny.; * It is smaller than <a href=""http://uclibc.org"">uClibc</a>'s GNU getopt() and just a; * couple 100 bytes larger than uClibc's SUSv3 getopt(). @n; * (This does not include the usage formatter, of course. But you don't have to use that.); *; * @par Download:; * Tarball with examples and test programs:; * <a style=""font-size:larger;font-weight:bold"" href=""http://sourceforge.net/projects/optionparser/files/optionparser-1.3.tar.gz/download"">optionparser-1.3.tar.gz</a> @n; * Just the header (this is all you really need):; * <a style=""font-size:larger;font-weight:bold"" href=""http://optionparser.sourceforge.net/optionparser.h"">optionparser.h</a>; *; * @par Changelog:; * <b>Version 1.3:</b> Compatible with Microsoft Visual C++. @n; * <b>Version 1.2:</b> Added @ref ROOT::option::Option::namelen ""Option::namelen"" and removed the extraction; * of short option characters into a special buffer. @n; * Changed @ref ROOT::option::Arg::Optional ""Arg::Optional"" to accept arguments if they are attached; * rather than separate. This is what GNU getopt() does and how POSIX recommends; * utilities should interpret their arguments.@n; * <b>Version 1.1:</b> Optional mode with argument reordering as done by GNU getopt(), so that; * options and non-options can be mixed. See; * @ref ROOT::option::Parser::parse(",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:2488,Availability,down,download,2488,"tions[VERBOSE].count(); @endcode; * <li> Iterate over all --file=&lt;fname> arguments:; * @code for (Option* opt = options[FILE]; opt; opt = opt->next()); * fname = opt->arg; ... @endcode; * <li> If you really want to, you can still process all arguments in order:; * @code; * for (int i = 0; i < p.optionsCount(); ++i) {; * Option& opt = buffer[i];; * switch(opt.index()) {; * case HELP: ...; * case VERBOSE: ...; * case FILE: fname = opt.arg; ...; * case UNKNOWN: ...; * @endcode; * </ul>; * </ul> @n; * Despite these features the code size remains tiny.; * It is smaller than <a href=""http://uclibc.org"">uClibc</a>'s GNU getopt() and just a; * couple 100 bytes larger than uClibc's SUSv3 getopt(). @n; * (This does not include the usage formatter, of course. But you don't have to use that.); *; * @par Download:; * Tarball with examples and test programs:; * <a style=""font-size:larger;font-weight:bold"" href=""http://sourceforge.net/projects/optionparser/files/optionparser-1.3.tar.gz/download"">optionparser-1.3.tar.gz</a> @n; * Just the header (this is all you really need):; * <a style=""font-size:larger;font-weight:bold"" href=""http://optionparser.sourceforge.net/optionparser.h"">optionparser.h</a>; *; * @par Changelog:; * <b>Version 1.3:</b> Compatible with Microsoft Visual C++. @n; * <b>Version 1.2:</b> Added @ref ROOT::option::Option::namelen ""Option::namelen"" and removed the extraction; * of short option characters into a special buffer. @n; * Changed @ref ROOT::option::Arg::Optional ""Arg::Optional"" to accept arguments if they are attached; * rather than separate. This is what GNU getopt() does and how POSIX recommends; * utilities should interpret their arguments.@n; * <b>Version 1.1:</b> Optional mode with argument reordering as done by GNU getopt(), so that; * options and non-options can be mixed. See; * @ref ROOT::option::Parser::parse() ""Parser::parse()"".; *; * @par Feedback:; * Send questions, bug reports, feature requests etc. to: <tt><b>optionparser-feedback<span id=",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:4686,Availability,error,error,4686,"eir documentation.); * @code; * #include <iostream>; * #include ""optionparser.h""; *; * enum optionIndex { UNKNOWN, HELP, PLUS };; * const option::Descriptor usage[] =; * {; * {UNKNOWN, 0,"""" , """" ,option::Arg::None, ""USAGE: example [options]\n\n""; * ""Options:"" },; * {HELP, 0,"""" , ""help"",option::Arg::None, "" --help \tPrint usage and exit."" },; * {PLUS, 0,""p"", ""plus"",option::Arg::None, "" --plus, -p \tIncrement count."" },; * {UNKNOWN, 0,"""" , """" ,option::Arg::None, ""\nExamples:\n""; * "" example --unknown -- --this_is_no_option\n""; * "" example -unk --plus -ppp file1 file2\n"" },; * {0,0,0,0,0,0}; * };; *; * int main(int argc, char* argv[]); * {; * argc-=(argc>0); argv+=(argc>0); // skip program name argv[0] if present; * option::Stats stats(usage, argc, argv);; * option::Option options[stats.options_max], buffer[stats.buffer_max];; * option::Parser parse(usage, argc, argv, options, buffer);; *; * if (parse.error()); * return 1;; *; * if (options[HELP] || argc == 0) {; * option::printUsage(std::cout, usage);; * return 0;; * }; *; * std::cout << ""--plus count: "" <<; * options[PLUS].count() << ""\n"";; *; * for (option::Option* opt = options[UNKNOWN]; opt; opt = opt->next()); * std::cout << ""Unknown option: "" << opt->name << ""\n"";; *; * for (int i = 0; i < parse.nonOptionsCount(); ++i); * std::cout << ""Non-option #"" << i << "": "" << parse.nonOption(i) << ""\n"";; * }; * @endcode; *; * @par Option syntax:; * @li The Lean Mean C++ Option Parser follows POSIX <code>getopt()</code> conventions and supports; * GNU-style <code>getopt_long()</code> long options as well as Perl-style single-minus; * long options (<code>getopt_long_only()</code>).; * @li short options have the format @c -X where @c X is any character that fits in a char.; * @li short options can be grouped, i.e. <code>-X -Y</code> is equivalent to @c -XY.; * @li a short option may take an argument either separate (<code>-X foo</code>) or; * attached (@c -Xfoo). You can make the parser accept the additional format @c -X=foo b",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:8591,Availability,error,error,8591,"is permitted as separate argument to both long and short options.; * @li Arguments to both short and long options may start with a @c '-' character. E.g.; * <code> -X-X </code>, <code>-X -X</code> or <code> --long-X=-X </code>. If @c -X; * and @c --long-X take an argument, that argument will be @c ""-X"" in all 3 cases.; * @li If using the built-in @ref ROOT::option::Arg::Optional ""Arg::Optional"", optional arguments must; * be attached.; * @li the special option @c -- (i.e. without a name) terminates the list of; * options. Everything that follows is a non-option argument, even if it starts with; * a @c '-' character. The @c -- itself will not appear in the parse results.; * @li the first argument that doesn't start with @c '-' or @c '--' and does not belong to; * a preceding argument-taking option, will terminate the option list and is the; * first non-option argument. All following command line arguments are treated as; * non-option arguments, even if they start with @c '-' . @n; * NOTE: This behaviour is mandated by POSIX, but GNU getopt() only honours this if it is; * explicitly requested (e.g. by setting POSIXLY_CORRECT). @n; * You can enable the GNU behaviour by passing @c true as first argument to; * e.g. @ref ROOT::option::Parser::parse() ""Parser::parse()"".; * @li Arguments that look like options (i.e. @c '-' followed by at least 1 character) but; * aren't, are NOT treated as non-option arguments. They are treated as unknown options and; * are collected into a list of unknown options for error reporting. @n; * This means that in order to pass a first non-option; * argument beginning with the minus character it is required to use the; * @c -- special option, e.g.; * @code; * program -x -- --strange-filename; * @endcode; * In this example, @c --strange-filename is a non-option argument. If the @c --; * were omitted, it would be treated as an unknown option. @n; * See @ref ROOT::option::Descriptor::longopt for information on how to collect unknown options.; *; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:844,Energy Efficiency,adapt,adapts,844,"/**; * @file; *; * @brief This is the only file required to use The Lean Mean C++ Option Parser.; * Just \#include it and you're set.; *; * The Lean Mean C++ Option Parser handles the program's command line arguments; * (argc, argv).; * It supports the short and long option formats of getopt(), getopt_long(); * and getopt_long_only() but has a more convenient interface.; * The following features set it apart from other option parsers:; *; * @par Highlights:; * <ul style=""padding-left:1em;margin-left:0"">; * <li> It is a header-only library. Just <code>\#include ""optionparser.h""</code> and you're set.; * <li> It is freestanding. There are no dependencies whatsoever, not even the; * C or C++ standard library.; * <li> It has a usage message formatter that supports column alignment and; * line wrapping. This aids localization because it adapts to; * translated strings that are shorter or longer (even if they contain; * Asian wide characters).; * <li> Unlike getopt() and derivatives it doesn't force you to loop through; * options sequentially. Instead you can access options directly like this:; * <ul style=""margin-top:.5em"">; * <li> Test for presence of a switch in the argument vector:; * @code if ( options[QUIET] ) ... @endcode; * <li> Evaluate --enable-foo/--disable-foo pair where the last one used wins:; * @code if ( options[FOO].last()->type() == DISABLE ) ... @endcode; * <li> Cumulative option (-v verbose, -vv more verbose, -vvv even more verbose):; * @code int verbosity = options[VERBOSE].count(); @endcode; * <li> Iterate over all --file=&lt;fname> arguments:; * @code for (Option* opt = options[FILE]; opt; opt = opt->next()); * fname = opt->arg; ... @endcode; * <li> If you really want to, you can still process all arguments in order:; * @code; * for (int i = 0; i < p.optionsCount(); ++i) {; * Option& opt = buffer[i];; * switch(opt.index()) {; * case HELP: ...; * case VERBOSE: ...; * case FILE: fname = opt.arg; ...; * case UNKNOWN: ...; * @endcode; * </ul>; * </ul> @n",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:362,Integrability,interface,interface,362,"/**; * @file; *; * @brief This is the only file required to use The Lean Mean C++ Option Parser.; * Just \#include it and you're set.; *; * The Lean Mean C++ Option Parser handles the program's command line arguments; * (argc, argv).; * It supports the short and long option formats of getopt(), getopt_long(); * and getopt_long_only() but has a more convenient interface.; * The following features set it apart from other option parsers:; *; * @par Highlights:; * <ul style=""padding-left:1em;margin-left:0"">; * <li> It is a header-only library. Just <code>\#include ""optionparser.h""</code> and you're set.; * <li> It is freestanding. There are no dependencies whatsoever, not even the; * C or C++ standard library.; * <li> It has a usage message formatter that supports column alignment and; * line wrapping. This aids localization because it adapts to; * translated strings that are shorter or longer (even if they contain; * Asian wide characters).; * <li> Unlike getopt() and derivatives it doesn't force you to loop through; * options sequentially. Instead you can access options directly like this:; * <ul style=""margin-top:.5em"">; * <li> Test for presence of a switch in the argument vector:; * @code if ( options[QUIET] ) ... @endcode; * <li> Evaluate --enable-foo/--disable-foo pair where the last one used wins:; * @code if ( options[FOO].last()->type() == DISABLE ) ... @endcode; * <li> Cumulative option (-v verbose, -vv more verbose, -vvv even more verbose):; * @code int verbosity = options[VERBOSE].count(); @endcode; * <li> Iterate over all --file=&lt;fname> arguments:; * @code for (Option* opt = options[FILE]; opt; opt = opt->next()); * fname = opt->arg; ... @endcode; * <li> If you really want to, you can still process all arguments in order:; * @code; * for (int i = 0; i < p.optionsCount(); ++i) {; * Option& opt = buffer[i];; * switch(opt.index()) {; * case HELP: ...; * case VERBOSE: ...; * case FILE: fname = opt.arg; ...; * case UNKNOWN: ...; * @endcode; * </ul>; * </ul> @n",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:648,Integrability,depend,dependencies,648,"/**; * @file; *; * @brief This is the only file required to use The Lean Mean C++ Option Parser.; * Just \#include it and you're set.; *; * The Lean Mean C++ Option Parser handles the program's command line arguments; * (argc, argv).; * It supports the short and long option formats of getopt(), getopt_long(); * and getopt_long_only() but has a more convenient interface.; * The following features set it apart from other option parsers:; *; * @par Highlights:; * <ul style=""padding-left:1em;margin-left:0"">; * <li> It is a header-only library. Just <code>\#include ""optionparser.h""</code> and you're set.; * <li> It is freestanding. There are no dependencies whatsoever, not even the; * C or C++ standard library.; * <li> It has a usage message formatter that supports column alignment and; * line wrapping. This aids localization because it adapts to; * translated strings that are shorter or longer (even if they contain; * Asian wide characters).; * <li> Unlike getopt() and derivatives it doesn't force you to loop through; * options sequentially. Instead you can access options directly like this:; * <ul style=""margin-top:.5em"">; * <li> Test for presence of a switch in the argument vector:; * @code if ( options[QUIET] ) ... @endcode; * <li> Evaluate --enable-foo/--disable-foo pair where the last one used wins:; * @code if ( options[FOO].last()->type() == DISABLE ) ... @endcode; * <li> Cumulative option (-v verbose, -vv more verbose, -vvv even more verbose):; * @code int verbosity = options[VERBOSE].count(); @endcode; * <li> Iterate over all --file=&lt;fname> arguments:; * @code for (Option* opt = options[FILE]; opt; opt = opt->next()); * fname = opt->arg; ... @endcode; * <li> If you really want to, you can still process all arguments in order:; * @code; * for (int i = 0; i < p.optionsCount(); ++i) {; * Option& opt = buffer[i];; * switch(opt.index()) {; * case HELP: ...; * case VERBOSE: ...; * case FILE: fname = opt.arg; ...; * case UNKNOWN: ...; * @endcode; * </ul>; * </ul> @n",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:739,Integrability,message,message,739,"/**; * @file; *; * @brief This is the only file required to use The Lean Mean C++ Option Parser.; * Just \#include it and you're set.; *; * The Lean Mean C++ Option Parser handles the program's command line arguments; * (argc, argv).; * It supports the short and long option formats of getopt(), getopt_long(); * and getopt_long_only() but has a more convenient interface.; * The following features set it apart from other option parsers:; *; * @par Highlights:; * <ul style=""padding-left:1em;margin-left:0"">; * <li> It is a header-only library. Just <code>\#include ""optionparser.h""</code> and you're set.; * <li> It is freestanding. There are no dependencies whatsoever, not even the; * C or C++ standard library.; * <li> It has a usage message formatter that supports column alignment and; * line wrapping. This aids localization because it adapts to; * translated strings that are shorter or longer (even if they contain; * Asian wide characters).; * <li> Unlike getopt() and derivatives it doesn't force you to loop through; * options sequentially. Instead you can access options directly like this:; * <ul style=""margin-top:.5em"">; * <li> Test for presence of a switch in the argument vector:; * @code if ( options[QUIET] ) ... @endcode; * <li> Evaluate --enable-foo/--disable-foo pair where the last one used wins:; * @code if ( options[FOO].last()->type() == DISABLE ) ... @endcode; * <li> Cumulative option (-v verbose, -vv more verbose, -vvv even more verbose):; * @code int verbosity = options[VERBOSE].count(); @endcode; * <li> Iterate over all --file=&lt;fname> arguments:; * @code for (Option* opt = options[FILE]; opt; opt = opt->next()); * fname = opt->arg; ... @endcode; * <li> If you really want to, you can still process all arguments in order:; * @code; * for (int i = 0; i < p.optionsCount(); ++i) {; * Option& opt = buffer[i];; * switch(opt.index()) {; * case HELP: ...; * case VERBOSE: ...; * case FILE: fname = opt.arg; ...; * case UNKNOWN: ...; * @endcode; * </ul>; * </ul> @n",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:800,Integrability,wrap,wrapping,800,"/**; * @file; *; * @brief This is the only file required to use The Lean Mean C++ Option Parser.; * Just \#include it and you're set.; *; * The Lean Mean C++ Option Parser handles the program's command line arguments; * (argc, argv).; * It supports the short and long option formats of getopt(), getopt_long(); * and getopt_long_only() but has a more convenient interface.; * The following features set it apart from other option parsers:; *; * @par Highlights:; * <ul style=""padding-left:1em;margin-left:0"">; * <li> It is a header-only library. Just <code>\#include ""optionparser.h""</code> and you're set.; * <li> It is freestanding. There are no dependencies whatsoever, not even the; * C or C++ standard library.; * <li> It has a usage message formatter that supports column alignment and; * line wrapping. This aids localization because it adapts to; * translated strings that are shorter or longer (even if they contain; * Asian wide characters).; * <li> Unlike getopt() and derivatives it doesn't force you to loop through; * options sequentially. Instead you can access options directly like this:; * <ul style=""margin-top:.5em"">; * <li> Test for presence of a switch in the argument vector:; * @code if ( options[QUIET] ) ... @endcode; * <li> Evaluate --enable-foo/--disable-foo pair where the last one used wins:; * @code if ( options[FOO].last()->type() == DISABLE ) ... @endcode; * <li> Cumulative option (-v verbose, -vv more verbose, -vvv even more verbose):; * @code int verbosity = options[VERBOSE].count(); @endcode; * <li> Iterate over all --file=&lt;fname> arguments:; * @code for (Option* opt = options[FILE]; opt; opt = opt->next()); * fname = opt->arg; ... @endcode; * <li> If you really want to, you can still process all arguments in order:; * @code; * for (int i = 0; i < p.optionsCount(); ++i) {; * Option& opt = buffer[i];; * switch(opt.index()) {; * case HELP: ...; * case VERBOSE: ...; * case FILE: fname = opt.arg; ...; * case UNKNOWN: ...; * @endcode; * </ul>; * </ul> @n",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:844,Modifiability,adapt,adapts,844,"/**; * @file; *; * @brief This is the only file required to use The Lean Mean C++ Option Parser.; * Just \#include it and you're set.; *; * The Lean Mean C++ Option Parser handles the program's command line arguments; * (argc, argv).; * It supports the short and long option formats of getopt(), getopt_long(); * and getopt_long_only() but has a more convenient interface.; * The following features set it apart from other option parsers:; *; * @par Highlights:; * <ul style=""padding-left:1em;margin-left:0"">; * <li> It is a header-only library. Just <code>\#include ""optionparser.h""</code> and you're set.; * <li> It is freestanding. There are no dependencies whatsoever, not even the; * C or C++ standard library.; * <li> It has a usage message formatter that supports column alignment and; * line wrapping. This aids localization because it adapts to; * translated strings that are shorter or longer (even if they contain; * Asian wide characters).; * <li> Unlike getopt() and derivatives it doesn't force you to loop through; * options sequentially. Instead you can access options directly like this:; * <ul style=""margin-top:.5em"">; * <li> Test for presence of a switch in the argument vector:; * @code if ( options[QUIET] ) ... @endcode; * <li> Evaluate --enable-foo/--disable-foo pair where the last one used wins:; * @code if ( options[FOO].last()->type() == DISABLE ) ... @endcode; * <li> Cumulative option (-v verbose, -vv more verbose, -vvv even more verbose):; * @code int verbosity = options[VERBOSE].count(); @endcode; * <li> Iterate over all --file=&lt;fname> arguments:; * @code for (Option* opt = options[FILE]; opt; opt = opt->next()); * fname = opt->arg; ... @endcode; * <li> If you really want to, you can still process all arguments in order:; * @code; * for (int i = 0; i < p.optionsCount(); ++i) {; * Option& opt = buffer[i];; * switch(opt.index()) {; * case HELP: ...; * case VERBOSE: ...; * case FILE: fname = opt.arg; ...; * case UNKNOWN: ...; * @endcode; * </ul>; * </ul> @n",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:1070,Security,access,access,1070,"ser.; * Just \#include it and you're set.; *; * The Lean Mean C++ Option Parser handles the program's command line arguments; * (argc, argv).; * It supports the short and long option formats of getopt(), getopt_long(); * and getopt_long_only() but has a more convenient interface.; * The following features set it apart from other option parsers:; *; * @par Highlights:; * <ul style=""padding-left:1em;margin-left:0"">; * <li> It is a header-only library. Just <code>\#include ""optionparser.h""</code> and you're set.; * <li> It is freestanding. There are no dependencies whatsoever, not even the; * C or C++ standard library.; * <li> It has a usage message formatter that supports column alignment and; * line wrapping. This aids localization because it adapts to; * translated strings that are shorter or longer (even if they contain; * Asian wide characters).; * <li> Unlike getopt() and derivatives it doesn't force you to loop through; * options sequentially. Instead you can access options directly like this:; * <ul style=""margin-top:.5em"">; * <li> Test for presence of a switch in the argument vector:; * @code if ( options[QUIET] ) ... @endcode; * <li> Evaluate --enable-foo/--disable-foo pair where the last one used wins:; * @code if ( options[FOO].last()->type() == DISABLE ) ... @endcode; * <li> Cumulative option (-v verbose, -vv more verbose, -vvv even more verbose):; * @code int verbosity = options[VERBOSE].count(); @endcode; * <li> Iterate over all --file=&lt;fname> arguments:; * @code for (Option* opt = options[FILE]; opt; opt = opt->next()); * fname = opt->arg; ... @endcode; * <li> If you really want to, you can still process all arguments in order:; * @code; * for (int i = 0; i < p.optionsCount(); ++i) {; * Option& opt = buffer[i];; * switch(opt.index()) {; * case HELP: ...; * case VERBOSE: ...; * case FILE: fname = opt.arg; ...; * case UNKNOWN: ...; * @endcode; * </ul>; * </ul> @n; * Despite these features the code size remains tiny.; * It is smaller than <a href=""http:",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:1145,Testability,Test,Test,1145,"he program's command line arguments; * (argc, argv).; * It supports the short and long option formats of getopt(), getopt_long(); * and getopt_long_only() but has a more convenient interface.; * The following features set it apart from other option parsers:; *; * @par Highlights:; * <ul style=""padding-left:1em;margin-left:0"">; * <li> It is a header-only library. Just <code>\#include ""optionparser.h""</code> and you're set.; * <li> It is freestanding. There are no dependencies whatsoever, not even the; * C or C++ standard library.; * <li> It has a usage message formatter that supports column alignment and; * line wrapping. This aids localization because it adapts to; * translated strings that are shorter or longer (even if they contain; * Asian wide characters).; * <li> Unlike getopt() and derivatives it doesn't force you to loop through; * options sequentially. Instead you can access options directly like this:; * <ul style=""margin-top:.5em"">; * <li> Test for presence of a switch in the argument vector:; * @code if ( options[QUIET] ) ... @endcode; * <li> Evaluate --enable-foo/--disable-foo pair where the last one used wins:; * @code if ( options[FOO].last()->type() == DISABLE ) ... @endcode; * <li> Cumulative option (-v verbose, -vv more verbose, -vvv even more verbose):; * @code int verbosity = options[VERBOSE].count(); @endcode; * <li> Iterate over all --file=&lt;fname> arguments:; * @code for (Option* opt = options[FILE]; opt; opt = opt->next()); * fname = opt->arg; ... @endcode; * <li> If you really want to, you can still process all arguments in order:; * @code; * for (int i = 0; i < p.optionsCount(); ++i) {; * Option& opt = buffer[i];; * switch(opt.index()) {; * case HELP: ...; * case VERBOSE: ...; * case FILE: fname = opt.arg; ...; * case UNKNOWN: ...; * @endcode; * </ul>; * </ul> @n; * Despite these features the code size remains tiny.; * It is smaller than <a href=""http://uclibc.org"">uClibc</a>'s GNU getopt() and just a; * couple 100 bytes larger than uClibc",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:2344,Testability,test,test,2344,") == DISABLE ) ... @endcode; * <li> Cumulative option (-v verbose, -vv more verbose, -vvv even more verbose):; * @code int verbosity = options[VERBOSE].count(); @endcode; * <li> Iterate over all --file=&lt;fname> arguments:; * @code for (Option* opt = options[FILE]; opt; opt = opt->next()); * fname = opt->arg; ... @endcode; * <li> If you really want to, you can still process all arguments in order:; * @code; * for (int i = 0; i < p.optionsCount(); ++i) {; * Option& opt = buffer[i];; * switch(opt.index()) {; * case HELP: ...; * case VERBOSE: ...; * case FILE: fname = opt.arg; ...; * case UNKNOWN: ...; * @endcode; * </ul>; * </ul> @n; * Despite these features the code size remains tiny.; * It is smaller than <a href=""http://uclibc.org"">uClibc</a>'s GNU getopt() and just a; * couple 100 bytes larger than uClibc's SUSv3 getopt(). @n; * (This does not include the usage formatter, of course. But you don't have to use that.); *; * @par Download:; * Tarball with examples and test programs:; * <a style=""font-size:larger;font-weight:bold"" href=""http://sourceforge.net/projects/optionparser/files/optionparser-1.3.tar.gz/download"">optionparser-1.3.tar.gz</a> @n; * Just the header (this is all you really need):; * <a style=""font-size:larger;font-weight:bold"" href=""http://optionparser.sourceforge.net/optionparser.h"">optionparser.h</a>; *; * @par Changelog:; * <b>Version 1.3:</b> Compatible with Microsoft Visual C++. @n; * <b>Version 1.2:</b> Added @ref ROOT::option::Option::namelen ""Option::namelen"" and removed the extraction; * of short option characters into a special buffer. @n; * Changed @ref ROOT::option::Arg::Optional ""Arg::Optional"" to accept arguments if they are attached; * rather than separate. This is what GNU getopt() does and how POSIX recommends; * utilities should interpret their arguments.@n; * <b>Version 1.1:</b> Optional mode with argument reordering as done by GNU getopt(), so that; * options and non-options can be mixed. See; * @ref ROOT::option::Parser::parse(",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:3394,Usability,Feedback,Feedback,3394,"/sourceforge.net/projects/optionparser/files/optionparser-1.3.tar.gz/download"">optionparser-1.3.tar.gz</a> @n; * Just the header (this is all you really need):; * <a style=""font-size:larger;font-weight:bold"" href=""http://optionparser.sourceforge.net/optionparser.h"">optionparser.h</a>; *; * @par Changelog:; * <b>Version 1.3:</b> Compatible with Microsoft Visual C++. @n; * <b>Version 1.2:</b> Added @ref ROOT::option::Option::namelen ""Option::namelen"" and removed the extraction; * of short option characters into a special buffer. @n; * Changed @ref ROOT::option::Arg::Optional ""Arg::Optional"" to accept arguments if they are attached; * rather than separate. This is what GNU getopt() does and how POSIX recommends; * utilities should interpret their arguments.@n; * <b>Version 1.1:</b> Optional mode with argument reordering as done by GNU getopt(), so that; * options and non-options can be mixed. See; * @ref ROOT::option::Parser::parse() ""Parser::parse()"".; *; * @par Feedback:; * Send questions, bug reports, feature requests etc. to: <tt><b>optionparser-feedback<span id=""antispam"">&nbsp;(a)&nbsp;</span>lists.sourceforge.net</b></tt>; * @htmlonly <script type=""text/javascript"">document.getElementById(""antispam"").innerHTML=""@""</script> @endhtmlonly; *; *; * @par Example program:; * (Note: @c option::* identifiers are links that take you to their documentation.); * @code; * #include <iostream>; * #include ""optionparser.h""; *; * enum optionIndex { UNKNOWN, HELP, PLUS };; * const option::Descriptor usage[] =; * {; * {UNKNOWN, 0,"""" , """" ,option::Arg::None, ""USAGE: example [options]\n\n""; * ""Options:"" },; * {HELP, 0,"""" , ""help"",option::Arg::None, "" --help \tPrint usage and exit."" },; * {PLUS, 0,""p"", ""plus"",option::Arg::None, "" --plus, -p \tIncrement count."" },; * {UNKNOWN, 0,"""" , """" ,option::Arg::None, ""\nExamples:\n""; * "" example --unknown -- --this_is_no_option\n""; * "" example -unk --plus -ppp file1 file2\n"" },; * {0,0,0,0,0,0}; * };; *; * int main(int argc, char* argv[]); * {; ",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:3482,Usability,feedback,feedback,3482,">optionparser-1.3.tar.gz</a> @n; * Just the header (this is all you really need):; * <a style=""font-size:larger;font-weight:bold"" href=""http://optionparser.sourceforge.net/optionparser.h"">optionparser.h</a>; *; * @par Changelog:; * <b>Version 1.3:</b> Compatible with Microsoft Visual C++. @n; * <b>Version 1.2:</b> Added @ref ROOT::option::Option::namelen ""Option::namelen"" and removed the extraction; * of short option characters into a special buffer. @n; * Changed @ref ROOT::option::Arg::Optional ""Arg::Optional"" to accept arguments if they are attached; * rather than separate. This is what GNU getopt() does and how POSIX recommends; * utilities should interpret their arguments.@n; * <b>Version 1.1:</b> Optional mode with argument reordering as done by GNU getopt(), so that; * options and non-options can be mixed. See; * @ref ROOT::option::Parser::parse() ""Parser::parse()"".; *; * @par Feedback:; * Send questions, bug reports, feature requests etc. to: <tt><b>optionparser-feedback<span id=""antispam"">&nbsp;(a)&nbsp;</span>lists.sourceforge.net</b></tt>; * @htmlonly <script type=""text/javascript"">document.getElementById(""antispam"").innerHTML=""@""</script> @endhtmlonly; *; *; * @par Example program:; * (Note: @c option::* identifiers are links that take you to their documentation.); * @code; * #include <iostream>; * #include ""optionparser.h""; *; * enum optionIndex { UNKNOWN, HELP, PLUS };; * const option::Descriptor usage[] =; * {; * {UNKNOWN, 0,"""" , """" ,option::Arg::None, ""USAGE: example [options]\n\n""; * ""Options:"" },; * {HELP, 0,"""" , ""help"",option::Arg::None, "" --help \tPrint usage and exit."" },; * {PLUS, 0,""p"", ""plus"",option::Arg::None, "" --plus, -p \tIncrement count."" },; * {UNKNOWN, 0,"""" , """" ,option::Arg::None, ""\nExamples:\n""; * "" example --unknown -- --this_is_no_option\n""; * "" example -unk --plus -ppp file1 file2\n"" },; * {0,0,0,0,0,0}; * };; *; * int main(int argc, char* argv[]); * {; * argc-=(argc>0); argv+=(argc>0); // skip program name argv[0] if present; * o",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:684,Availability,error,error,684,"/**; * @brief Signature of functions that check if an argument is valid for a certain type of option.; *; * Every Option has such a function assigned in its Descriptor.; * @code; * Descriptor usage[] = { {UNKNOWN, 0, """", """", Arg::None, """"}, ... };; * @endcode; *; * A CheckArg function has the following signature:; * @code ArgStatus CheckArg(const Option& option, bool msg); @endcode; *; * It is used to check if a potential argument would be acceptable for the option.; * It will even be called if there is no argument. In that case @c option.arg will be @c NULL.; *; * If @c msg is @c true and the function determines that an argument is not acceptable and; * that this is a fatal error, it should output a message to the user before; * returning @ref ARG_ILLEGAL. If @c msg is @c false the function should remain silent (or you; * will get duplicate messages).; *; * See @ref ArgStatus for the meaning of the return values.; *; * While you can provide your own functions,; * often the following pre-defined checks (which never return @ref ARG_ILLEGAL) will suffice:; *; * @li @c Arg::None @copybrief Arg::None; * @li @c Arg::Optional @copybrief Arg::Optional; *; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:710,Integrability,message,message,710,"/**; * @brief Signature of functions that check if an argument is valid for a certain type of option.; *; * Every Option has such a function assigned in its Descriptor.; * @code; * Descriptor usage[] = { {UNKNOWN, 0, """", """", Arg::None, """"}, ... };; * @endcode; *; * A CheckArg function has the following signature:; * @code ArgStatus CheckArg(const Option& option, bool msg); @endcode; *; * It is used to check if a potential argument would be acceptable for the option.; * It will even be called if there is no argument. In that case @c option.arg will be @c NULL.; *; * If @c msg is @c true and the function determines that an argument is not acceptable and; * that this is a fatal error, it should output a message to the user before; * returning @ref ARG_ILLEGAL. If @c msg is @c false the function should remain silent (or you; * will get duplicate messages).; *; * See @ref ArgStatus for the meaning of the return values.; *; * While you can provide your own functions,; * often the following pre-defined checks (which never return @ref ARG_ILLEGAL) will suffice:; *; * @li @c Arg::None @copybrief Arg::None; * @li @c Arg::Optional @copybrief Arg::Optional; *; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:854,Integrability,message,messages,854,"/**; * @brief Signature of functions that check if an argument is valid for a certain type of option.; *; * Every Option has such a function assigned in its Descriptor.; * @code; * Descriptor usage[] = { {UNKNOWN, 0, """", """", Arg::None, """"}, ... };; * @endcode; *; * A CheckArg function has the following signature:; * @code ArgStatus CheckArg(const Option& option, bool msg); @endcode; *; * It is used to check if a potential argument would be acceptable for the option.; * It will even be called if there is no argument. In that case @c option.arg will be @c NULL.; *; * If @c msg is @c true and the function determines that an argument is not acceptable and; * that this is a fatal error, it should output a message to the user before; * returning @ref ARG_ILLEGAL. If @c msg is @c false the function should remain silent (or you; * will get duplicate messages).; *; * See @ref ArgStatus for the meaning of the return values.; *; * While you can provide your own functions,; * often the following pre-defined checks (which never return @ref ARG_ILLEGAL) will suffice:; *; * @li @c Arg::None @copybrief Arg::None; * @li @c Arg::Optional @copybrief Arg::Optional; *; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:1464,Availability,error,error,1464,"/**; * @brief The long option name (without the leading @c -- ).; *; * If this Descriptor should not have a long option name, use the empty; * string """". NULL is not permitted here!; *; * While @ref shortopt allows multiple short option characters, each; * Descriptor can have only a single long option name. If you have multiple; * long option names referring to the same option use separate Descriptors; * that have the same @ref index and @ref type. You may repeat; * short option characters in such an alias Descriptor but there's no need to.; *; * @par Dummy Descriptors:; * You can use dummy Descriptors with an; * empty string for both @ref shortopt and @ref longopt to add text to; * the usage that is not related to a specific option. See @ref help.; * The first dummy Descriptor will be used for unknown options (see below).; *; * @par Unknown Option Descriptor:; * The first dummy Descriptor in the list of Descriptors,; * whose @ref shortopt and @ref longopt are both the empty string, will be used; * as the Descriptor for unknown options. An unknown option is a string in; * the argument vector that is not a lone minus @c '-' but starts with a minus; * character and does not match any Descriptor's @ref shortopt or @ref longopt. @n; * Note that the dummy descriptor's @ref check_arg function @e will be called and; * its return value will be evaluated as usual. I.e. if it returns @ref ARG_ILLEGAL; * the parsing will be aborted with <code>Parser::error()==true</code>. @n; * if @c check_arg does not return @ref ARG_ILLEGAL the descriptor's; * @ref index @e will be used to pick the linked list into which; * to put the unknown option. @n; * If there is no dummy descriptor, unknown options will be dropped silently.; *; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:1437,Safety,abort,aborted,1437,"/**; * @brief The long option name (without the leading @c -- ).; *; * If this Descriptor should not have a long option name, use the empty; * string """". NULL is not permitted here!; *; * While @ref shortopt allows multiple short option characters, each; * Descriptor can have only a single long option name. If you have multiple; * long option names referring to the same option use separate Descriptors; * that have the same @ref index and @ref type. You may repeat; * short option characters in such an alias Descriptor but there's no need to.; *; * @par Dummy Descriptors:; * You can use dummy Descriptors with an; * empty string for both @ref shortopt and @ref longopt to add text to; * the usage that is not related to a specific option. See @ref help.; * The first dummy Descriptor will be used for unknown options (see below).; *; * @par Unknown Option Descriptor:; * The first dummy Descriptor in the list of Descriptors,; * whose @ref shortopt and @ref longopt are both the empty string, will be used; * as the Descriptor for unknown options. An unknown option is a string in; * the argument vector that is not a lone minus @c '-' but starts with a minus; * character and does not match any Descriptor's @ref shortopt or @ref longopt. @n; * Note that the dummy descriptor's @ref check_arg function @e will be called and; * its return value will be evaluated as usual. I.e. if it returns @ref ARG_ILLEGAL; * the parsing will be aborted with <code>Parser::error()==true</code>. @n; * if @c check_arg does not return @ref ARG_ILLEGAL the descriptor's; * @ref index @e will be used to pick the linked list into which; * to put the unknown option. @n; * If there is no dummy descriptor, unknown options will be dropped silently.; *; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:137,Integrability,message,message,137,"/**; * @brief The usage text associated with the options in this Descriptor.; *; * You can use option::printUsage() to format your usage message based on; * the @c help texts. You can use dummy Descriptors where; * @ref shortopt and @ref longopt are both the empty string to add text to; * the usage that is not related to a specific option.; *; * See option::printUsage() for special formatting characters you can use in; * @c help to get a column layout.; *; * @attention; * Must be UTF-8-encoded. If your compiler supports C++11 you can use the ""u8""; * prefix to make sure string literals are properly encoded.; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:331,Testability,Test,Test,331,"/**; * @brief A parsed option from the command line together with its argument if it has one.; *; * The Parser chains all parsed options with the same Descriptor::index together; * to form a linked list. This allows you to easily implement all of the common ways; * of handling repeated options and enable/disable pairs.; *; * @li Test for presence of a switch in the argument vector:; * @code if ( options[QUIET] ) ... @endcode; * @li Evaluate --enable-foo/--disable-foo pair where the last one used wins:; * @code if ( options[FOO].last()->type() == DISABLE ) ... @endcode; * @li Cumulative option (-v verbose, -vv more verbose, -vvv even more verbose):; * @code int verbosity = options[VERBOSE].count(); @endcode; * @li Iterate over all --file=&lt;fname> arguments:; * @code for (Option* opt = options[FILE]; opt; opt = opt->next()); * fname = opt->arg; ... @endcode; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:311,Testability,test,test,311,/**; * @brief Pointer to this Option's Descriptor.; *; * Remember that the first dummy descriptor (see @ref Descriptor::longopt) is used; * for unknown options.; *; * @attention; * @c desc==NULL signals that this Option is unused. This is the default state of; * elements in the result array. You don't need to test @c desc explicitly. You; * can simply write something like this:; * @code; * if (options[CREATE]); * {; * ...; * }; * @endcode; * This works because of <code> operator const Option*() </code>.; */,MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:347,Usability,simpl,simply,347,/**; * @brief Pointer to this Option's Descriptor.; *; * Remember that the first dummy descriptor (see @ref Descriptor::longopt) is used; * for unknown options.; *; * @attention; * @c desc==NULL signals that this Option is unused. This is the default state of; * elements in the result array. You don't need to test @c desc explicitly. You; * can simply write something like this:; * @code; * if (options[CREATE]); * {; * ...; * }; * @endcode; * This works because of <code> operator const Option*() </code>.; */,MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:138,Integrability,message,messages,138,"/**; * @brief The name of the option as used on the command line.; *; * The main purpose of this string is to be presented to the user in messages.; *; * In the case of a long option, this is the actual @c argv pointer, i.e. the first; * character is a '-'. In the case of a short option this points to the option; * character within the @c argv string.; *; * Note that in the case of a short option group or an attached option argument, this; * string will contain additional characters following the actual name. Use @ref namelen; * to filter out the actual option name only.; *; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:714,Modifiability,extend,extend,714,"/**; * @brief The length of the option @ref name.; *; * Because @ref name points into the actual @c argv string, the option name may be; * followed by more characters (e.g. other short options in the same short option group).; * This value is the number of bytes (not characters!) that are part of the actual name.; *; * For a short option, this length is always 1. For a long option this length is always; * at least 2 if single minus long options are permitted and at least 3 if they are disabled.; *; * @note; * In the pathological case of a minus within a short option group (e.g. @c -xf-z), this; * length is incorrect, because this case will be misinterpreted as a long option and the; * name will therefore extend to the string's 0-terminator or a following '="" character; * if there is one. This is irrelevant for most uses of @ref name and @c namelen. If you; * really need to distinguish the case of a long and a short option, compare @ref name to; * the @c argv pointers. A long option's @c name is always identical to one of them,; * whereas a short option's is never.; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:284,Testability,test,testing,284,"/**; * @brief Returns Descriptor::type of this Option's Descriptor, or 0 if this Option; * is invalid (unused).; *; * Because this method (and last(), too) can be used even on unused Options with desc==0, you can (provided; * you arrange your types properly) switch on type() without testing validity first.; * @code; * enum OptionType { UNUSED=0, DISABLED=0, ENABLED=1 };; * enum OptionIndex { FOO };; * const Descriptor usage[] = {; * { FOO, ENABLED, """", ""enable-foo"", Arg::None, 0 },; * { FOO, DISABLED, """", ""disable-foo"", Arg::None, 0 },; * { 0, 0, 0, 0, 0, 0 } };; * ...; * switch(options[FOO].last()->type()) // no validity check required!; * {; * case ENABLED: ...; * case DISABLED: ... // UNUSED==DISABLED !; * }; * @endcode; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:80,Integrability,wrap,wrap-around,80,/**; * @brief Returns a pointer to the previous element of the linked list with wrap-around from; * first() to last().; *; * If called on first() this method returns last(). Otherwise it will return the; * option with the same Descriptor::index that precedes this option on the command; * line.; */,MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:76,Integrability,wrap,wrap-around,76,/**; * @brief Returns a pointer to the next element of the linked list with wrap-around from; * last() to first().; *; * If called on last() this method returns first(). Otherwise it will return the; * option with the same Descriptor::index that follows this option on the command; * line.; */,MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:188,Testability,test,testing,188,"/**; * @brief Casts from Option to const Option* but only if this Option is valid.; *; * If this Option is valid (i.e. @c desc!=NULL), returns this.; * Otherwise returns NULL. This allows testing an Option directly; * in an if-clause to see if it is used:; * @code; * if (options[CREATE]); * {; * ...; * }; * @endcode; * It also allows you to write loops like this:; * @code for (Option* opt = options[FILE]; opt; opt = opt->next()); * fname = opt->arg; ... @endcode; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:182,Testability,test,testing,182,"/**; * @brief Casts from Option to Option* but only if this Option is valid.; *; * If this Option is valid (i.e. @c desc!=NULL), returns this.; * Otherwise returns NULL. This allows testing an Option directly; * in an if-clause to see if it is used:; * @code; * if (options[CREATE]); * {; * ...; * }; * @endcode; * It also allows you to write loops like this:; * @code for (Option* opt = options[FILE]; opt; opt = opt->next()); * fname = opt->arg; ... @endcode; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:301,Modifiability,extend,extend,301,"/**; * @brief Creates a new Option that is a one-element linked list and has the given; * values for @ref desc, @ref name and @ref arg.; *; * If @c name_ points at a character other than '-' it will be assumed to refer to a; * short option and @ref namelen will be set to 1. Otherwise the length will extend to; * the first '=' character or the string's 0-terminator.; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:278,Modifiability,extend,extend,278,/**; * @internal; * @brief Sets the fields of this Option to the given values (extracting @c name if necessary).; *; * If @c name_ points at a character other than '-' it will be assumed to refer to a; * short option and @ref namelen will be set to 1. Otherwise the length will extend to; * the first '=' character or the string's 0-terminator.; */,MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:379,Availability,ERROR,ERROR,379,"/**; * @brief Functions for checking the validity of option arguments.; *; * @copydetails CheckArg; *; * The following example code; * can serve as starting place for writing your own more complex CheckArg functions:; * @code; * struct Arg: public option::Arg; * {; * static void printError(const char* msg1, const option::Option& opt, const char* msg2); * {; * fprintf(stderr, ""ERROR: %s"", msg1);; * fwrite(opt.name, opt.namelen, 1, stderr);; * fprintf(stderr, ""%s"", msg2);; * }; *; * static option::ArgStatus Unknown(const option::Option& option, bool msg); * {; * if (msg) printError(""Unknown option '"", option, ""'\n"");; * return option::ARG_ILLEGAL;; * }; *; * static option::ArgStatus Required(const option::Option& option, bool msg); * {; * if (option.arg != 0); * return option::ARG_OK;; *; * if (msg) printError(""Option '"", option, ""' requires an argument\n"");; * return option::ARG_ILLEGAL;; * }; *; * static option::ArgStatus NonEmpty(const option::Option& option, bool msg); * {; * if (option.arg != 0 && option.arg[0] != 0); * return option::ARG_OK;; *; * if (msg) printError(""Option '"", option, ""' requires a non-empty argument\n"");; * return option::ARG_ILLEGAL;; * }; *; * static option::ArgStatus Numeric(const option::Option& option, bool msg); * {; * char* endptr = 0;; * if (option.arg != 0 && strtol(option.arg, &endptr, 10)){};; * if (endptr != option.arg && *endptr == 0); * return option::ARG_OK;; *; * if (msg) printError(""Option '"", option, ""' requires a numeric argument\n"");; * return option::ARG_ILLEGAL;; * }; * };; * @endcode; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:176,Energy Efficiency,allocate,allocated,176,"/**; * @brief Determines the minimum lengths of the buffer and options arrays used for Parser.; *; * Because Parser doesn't use dynamic memory its output arrays have to be pre-allocated.; * If you don't want to use fixed size arrays (which may turn out too small, causing; * command line arguments to be dropped), you can use Stats to determine the correct sizes.; * Stats work cumulative. You can first pass in your default options and then the real; * options and afterwards the counts will reflect the union.; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:318,Integrability,depend,depends,318,"/**; * @brief Number of elements needed for an @c options[] array to be used for; * @ref Parser::parse() ""parsing"" the same argument vectors that were fed; * into this Stats object.; *; * @note; * @li This number is always 1 greater than the actual number needed, to give; * you a sentinel element.; * @li This number depends only on the @c usage, not the argument vectors, because; * the @c options array needs exactly one slot for each possible Descriptor::index.; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:57,Deployability,update,updates,57,"/**; * @brief Creates a new Stats object and immediately updates it for the; * given @c usage and argument vector. You may pass 0 for @c argc and/or @c argv,; * if you just want to update @ref options_max.; *; * @note; * The calls to Stats methods must match the later calls to Parser methods.; * See Parser::parse() for the meaning of the arguments.; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:181,Deployability,update,update,181,"/**; * @brief Creates a new Stats object and immediately updates it for the; * given @c usage and argument vector. You may pass 0 for @c argc and/or @c argv,; * if you just want to update @ref options_max.; *; * @note; * The calls to Stats methods must match the later calls to Parser methods.; * See Parser::parse() for the meaning of the arguments.; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:14,Deployability,Update,Updates,14,"/**; * @brief Updates this Stats object for the; * given @c usage and argument vector. You may pass 0 for @c argc and/or @c argv,; * if you just want to update @ref options_max.; *; * @note; * The calls to Stats methods must match the later calls to Parser methods.; * See Parser::parse() for the meaning of the arguments.; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:153,Deployability,update,update,153,"/**; * @brief Updates this Stats object for the; * given @c usage and argument vector. You may pass 0 for @c argc and/or @c argv,; * if you just want to update @ref options_max.; *; * @note; * The calls to Stats methods must match the later calls to Parser methods.; * See Parser::parse() for the meaning of the arguments.; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:458,Availability,error,error,458,"/**; * @brief Checks argument vectors for validity and parses them into data; * structures that are easier to work with.; *; * @par Example:; * @code; * int main(int argc, char* argv[]); * {; * argc-=(argc>0); argv+=(argc>0); // skip program name argv[0] if present; * option::Stats stats(usage, argc, argv);; * option::Option options[stats.options_max], buffer[stats.buffer_max];; * option::Parser parse(usage, argc, argv, options, buffer);; *; * if (parse.error()); * return 1;; *; * if (options[HELP]); * ...; * @endcode; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:26,Availability,error,error,26,"//!< @internal @brief see error()",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:3649,Security,access,access,3649,"if it was; * the full long option (e.g. @c --foob=10 will be interpreted as if it was; * @c --foobar=10 ), as long as the prefix has at least @c min_abbr_len characters; * (not counting the @c -- ) and is unambiguous.; * @n Be careful if combining @c min_abbr_len=1 with @c single_minus_longopt=true; * because the ambiguity check does not consider short options and abbreviated; * single minus long options will take precedence over short options.; * @param single_minus_longopt Passing @c true for this option allows long options to begin with; * a single minus. The double minus form will still be recognized. Note that; * single minus long options take precedence over short options and short option; * groups. E.g. @c -file would be interpreted as @c --file and not as; * <code> -f -i -l -e </code> (assuming a long option named @c ""file"" exists).; * @param bufmax The greatest index in the @c buffer[] array that parse() will write to is; * @c bufmax-1. If there are more options, they will be processed (in particular; * their CheckArg will be called) but not stored. @n; * If you used Stats::buffer_max to dimension this array, you can pass; * -1 (or not pass @c bufmax at all) which tells parse() that the buffer is; * ""large enough"".; * @attention; * Remember that @c options and @c buffer store Option @e objects, not pointers. Therefore it; * is not possible for the same object to be in both arrays. For those options that are found in; * both @c buffer[] and @c options[] the respective objects are independent copies. And only the; * objects in @c options[] are properly linked via Option::next() and Option::prev().; * You can iterate over @c buffer[] to; * process all options in the order they appear in the argument vector, but if you want access to; * the other Options with the same Descriptor::index, then you @e must access the linked list via; * @c options[]. You can get the linked list in options from a buffer object via something like; * @c options[buffer[i].index()].; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:3730,Security,access,access,3730,"if it was; * the full long option (e.g. @c --foob=10 will be interpreted as if it was; * @c --foobar=10 ), as long as the prefix has at least @c min_abbr_len characters; * (not counting the @c -- ) and is unambiguous.; * @n Be careful if combining @c min_abbr_len=1 with @c single_minus_longopt=true; * because the ambiguity check does not consider short options and abbreviated; * single minus long options will take precedence over short options.; * @param single_minus_longopt Passing @c true for this option allows long options to begin with; * a single minus. The double minus form will still be recognized. Note that; * single minus long options take precedence over short options and short option; * groups. E.g. @c -file would be interpreted as @c --file and not as; * <code> -f -i -l -e </code> (assuming a long option named @c ""file"" exists).; * @param bufmax The greatest index in the @c buffer[] array that parse() will write to is; * @c bufmax-1. If there are more options, they will be processed (in particular; * their CheckArg will be called) but not stored. @n; * If you used Stats::buffer_max to dimension this array, you can pass; * -1 (or not pass @c bufmax at all) which tells parse() that the buffer is; * ""large enough"".; * @attention; * Remember that @c options and @c buffer store Option @e objects, not pointers. Therefore it; * is not possible for the same object to be in both arrays. For those options that are found in; * both @c buffer[] and @c options[] the respective objects are independent copies. And only the; * objects in @c options[] are properly linked via Option::next() and Option::prev().; * You can iterate over @c buffer[] to; * process all options in the order they appear in the argument vector, but if you want access to; * the other Options with the same Descriptor::index, then you @e must access the linked list via; * @c options[]. You can get the linked list in options from a buffer object via something like; * @c options[buffer[i].index()].; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:50,Availability,error,error,50,"/**; * @brief Returns @c true if an unrecoverable error occurred while parsing options.; *; * An illegal argument to an option (i.e. CheckArg returns @ref ARG_ILLEGAL) is an; * unrecoverable error that aborts the parse. Unknown options are only an error if; * their CheckArg function returns @ref ARG_ILLEGAL. Otherwise they are collected.; * In that case if you want to exit the program if either an illegal argument; * or an unknown option has been passed, use code like this; *; * @code; * if (parser.error() || options[UNKNOWN]); * exit(1);; * @endcode; *; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:191,Availability,error,error,191,"/**; * @brief Returns @c true if an unrecoverable error occurred while parsing options.; *; * An illegal argument to an option (i.e. CheckArg returns @ref ARG_ILLEGAL) is an; * unrecoverable error that aborts the parse. Unknown options are only an error if; * their CheckArg function returns @ref ARG_ILLEGAL. Otherwise they are collected.; * In that case if you want to exit the program if either an illegal argument; * or an unknown option has been passed, use code like this; *; * @code; * if (parser.error() || options[UNKNOWN]); * exit(1);; * @endcode; *; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:248,Availability,error,error,248,"/**; * @brief Returns @c true if an unrecoverable error occurred while parsing options.; *; * An illegal argument to an option (i.e. CheckArg returns @ref ARG_ILLEGAL) is an; * unrecoverable error that aborts the parse. Unknown options are only an error if; * their CheckArg function returns @ref ARG_ILLEGAL. Otherwise they are collected.; * In that case if you want to exit the program if either an illegal argument; * or an unknown option has been passed, use code like this; *; * @code; * if (parser.error() || options[UNKNOWN]); * exit(1);; * @endcode; *; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:504,Availability,error,error,504,"/**; * @brief Returns @c true if an unrecoverable error occurred while parsing options.; *; * An illegal argument to an option (i.e. CheckArg returns @ref ARG_ILLEGAL) is an; * unrecoverable error that aborts the parse. Unknown options are only an error if; * their CheckArg function returns @ref ARG_ILLEGAL. Otherwise they are collected.; * In that case if you want to exit the program if either an illegal argument; * or an unknown option has been passed, use code like this; *; * @code; * if (parser.error() || options[UNKNOWN]); * exit(1);; * @endcode; *; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:202,Safety,abort,aborts,202,"/**; * @brief Returns @c true if an unrecoverable error occurred while parsing options.; *; * An illegal argument to an option (i.e. CheckArg returns @ref ARG_ILLEGAL) is an; * unrecoverable error that aborts the parse. Unknown options are only an error if; * their CheckArg function returns @ref ARG_ILLEGAL. Otherwise they are collected.; * In that case if you want to exit the program if either an illegal argument; * or an unknown option has been passed, use code like this; *; * @code; * if (parser.error() || options[UNKNOWN]); * exit(1);; * @endcode; *; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:118,Availability,error,error,118,/**; * @internal; * @brief This is the core function that does all the parsing.; * @retval false iff an unrecoverable error occurred.; */,MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:27,Integrability,Interface,Interface,27,/**; * @internal; * @brief Interface for actions Parser::workhorse() should perform for each Option it; * parses.; */,MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:76,Performance,perform,perform,76,/**; * @internal; * @brief Interface for actions Parser::workhorse() should perform for each Option it; * parses.; */,MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:253,Availability,error,error,253,/**; * @brief Called by Parser::workhorse() for each Option that has been successfully; * parsed (including unknown; * options if they have a Descriptor whose Descriptor::check_arg does not return; * @ref ARG_ILLEGAL.; *; * Returns @c false iff a fatal error has occured and the parse should be aborted.; */,MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:295,Safety,abort,aborted,295,/**; * @brief Called by Parser::workhorse() for each Option that has been successfully; * parsed (including unknown; * options if they have a Descriptor whose Descriptor::check_arg does not return; * @ref ARG_ILLEGAL.; *; * Returns @c false iff a fatal error has occured and the parse should be aborted.; */,MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:256,Availability,error,error,256,/**; * @brief Called by Parser::workhorse() after finishing the parse.; * @param numargs the number of non-option arguments remaining; * @param args pointer to the first remaining non-option argument (if numargs > 0).; *; * @return; * @c false iff a fatal error has occurred.; */,MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:102,Deployability,update,updated,102,"/**; * @brief Creates a new StoreOption action.; * @param parser_ the parser whose op_count should be updated.; * @param options_ each Option @c o is chained into the linked list @c options_[o.desc->index]; * @param buffer_ each Option is appended to this array as long as there's a free slot.; * @param bufmax_ number of slots in @c buffer_. @c -1 means ""large enough"".; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:6,Testability,test,testing,6,"//for testing a potential -long-option",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:7,Testability,test,test,7,"// now test if the match is unambiguous by checking for another match",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:27,Integrability,Interface,Interface,27,/**; * @internal; * @brief Interface for Functors that write (part of) a string somewhere.; */,MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:345,Integrability,wrap,wrapping,345,"/**; * @internal; * @brief Splits a @c Descriptor[] array into tables, rows, lines and columns and; * iterates over these components.; *; * The top-level organizational unit is the @e table.; * A table begins at a Descriptor with @c help!=NULL and extends up to; * a Descriptor with @c help==NULL.; *; * A table consists of @e rows. Due to line-wrapping and explicit breaks; * a row may take multiple lines on screen. Rows within the table are separated; * by \\n. They never cross Descriptor boundaries. This means a row ends either; * at \\n or the 0 at the end of the help string.; *; * A row consists of columns/cells. Columns/cells within a row are separated by \\t.; * Line breaks within a cell are marked by \\v.; *; * Rows in the same table need not have the same number of columns/cells. The; * extreme case are interjections, which are rows that contain neither \\t nor \\v.; * These are NOT treated specially by LinePartIterator, but they are treated; * specially by printUsage().; *; * LinePartIterator iterates through the usage at 3 levels: table, row and part.; * Tables and rows are as described above. A @e part is a line within a cell.; * LinePartIterator iterates through 1st parts of all cells, then through the 2nd; * parts of all cells (if any),... @n; * Example: The row <code> ""1 \v 3 \t 2 \v 4"" </code> has 2 cells/columns and 4 parts.; * The parts will be returned in the order 1, 2, 3, 4.; *; * It is possible that some cells have fewer parts than others. In this case; * LinePartIterator will ""fill up"" these cells with 0-length parts. IOW, LinePartIterator; * always returns the same number of parts for each column. Note that this is different; * from the way rows and columns are handled. LinePartIterator does @e not guarantee that; * the same number of columns will be returned for each row.; *; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:248,Modifiability,extend,extends,248,"/**; * @internal; * @brief Splits a @c Descriptor[] array into tables, rows, lines and columns and; * iterates over these components.; *; * The top-level organizational unit is the @e table.; * A table begins at a Descriptor with @c help!=NULL and extends up to; * a Descriptor with @c help==NULL.; *; * A table consists of @e rows. Due to line-wrapping and explicit breaks; * a row may take multiple lines on screen. Rows within the table are separated; * by \\n. They never cross Descriptor boundaries. This means a row ends either; * at \\n or the 0 at the end of the help string.; *; * A row consists of columns/cells. Columns/cells within a row are separated by \\t.; * Line breaks within a cell are marked by \\v.; *; * Rows in the same table need not have the same number of columns/cells. The; * extreme case are interjections, which are rows that contain neither \\t nor \\v.; * These are NOT treated specially by LinePartIterator, but they are treated; * specially by printUsage().; *; * LinePartIterator iterates through the usage at 3 levels: table, row and part.; * Tables and rows are as described above. A @e part is a line within a cell.; * LinePartIterator iterates through 1st parts of all cells, then through the 2nd; * parts of all cells (if any),... @n; * Example: The row <code> ""1 \v 3 \t 2 \v 4"" </code> has 2 cells/columns and 4 parts.; * The parts will be returned in the order 1, 2, 3, 4.; *; * It is possible that some cells have fewer parts than others. In this case; * LinePartIterator will ""fill up"" these cells with 0-length parts. IOW, LinePartIterator; * always returns the same number of parts for each column. Note that this is different; * from the way rows and columns are handled. LinePartIterator does @e not guarantee that; * the same number of columns will be returned for each row.; *; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:3,Availability,mask,mask,3,"// mask out length bits, we don't verify their correctness",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:34,Safety,avoid,avoid,34,"// the test for 0x1100 is here to avoid the function call in the Latin case",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:7,Testability,test,test,7,"// the test for 0x1100 is here to avoid the function call in the Latin case",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:48,Integrability,wrap,wraps,48,"/**; * @internal; * @brief Takes input and line wraps it, writing out one line at a time so that; * it can be interleaved with output from other columns.; *; * The LineWrapper is used to handle the last column of each table as well as interjections.; * The LineWrapper is called once for each line of output. If the data given to it fits; * into the designated width of the last column it is simply written out. If there; * is too much data, an appropriate split point is located and only the data up to this; * split point is written out. The rest of the data is queued for the next line.; * That way the last column can be line wrapped and interleaved with data from; * other columns. The following example makes this clearer:; * @code; * Column 1,1 Column 2,1 This is a long text; * Column 1,2 Column 2,2 that does not fit into; * a single line.; * @endcode; *; * The difficulty in producing this output is that the whole string; * ""This is a long text that does not fit into a single line"" is the; * 1st and only part of column 3. In order to produce the above; * output the string must be output piecemeal, interleaved with; * the data from the other columns.; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:630,Integrability,wrap,wrapped,630,"/**; * @internal; * @brief Takes input and line wraps it, writing out one line at a time so that; * it can be interleaved with output from other columns.; *; * The LineWrapper is used to handle the last column of each table as well as interjections.; * The LineWrapper is called once for each line of output. If the data given to it fits; * into the designated width of the last column it is simply written out. If there; * is too much data, an appropriate split point is located and only the data up to this; * split point is written out. The rest of the data is queued for the next line.; * That way the last column can be line wrapped and interleaved with data from; * other columns. The following example makes this clearer:; * @code; * Column 1,1 Column 2,1 This is a long text; * Column 1,2 Column 2,2 that does not fit into; * a single line.; * @endcode; *; * The difficulty in producing this output is that the whole string; * ""This is a long text that does not fit into a single line"" is the; * 1st and only part of column 3. In order to produce the above; * output the string must be output piecemeal, interleaved with; * the data from the other columns.; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:564,Performance,queue,queued,564,"/**; * @internal; * @brief Takes input and line wraps it, writing out one line at a time so that; * it can be interleaved with output from other columns.; *; * The LineWrapper is used to handle the last column of each table as well as interjections.; * The LineWrapper is called once for each line of output. If the data given to it fits; * into the designated width of the last column it is simply written out. If there; * is too much data, an appropriate split point is located and only the data up to this; * split point is written out. The rest of the data is queued for the next line.; * That way the last column can be line wrapped and interleaved with data from; * other columns. The following example makes this clearer:; * @code; * Column 1,1 Column 2,1 This is a long text; * Column 1,2 Column 2,2 that does not fit into; * a single line.; * @endcode; *; * The difficulty in producing this output is that the whole string; * ""This is a long text that does not fit into a single line"" is the; * 1st and only part of column 3. In order to produce the above; * output the string must be output piecemeal, interleaved with; * the data from the other columns.; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:392,Usability,simpl,simply,392,"/**; * @internal; * @brief Takes input and line wraps it, writing out one line at a time so that; * it can be interleaved with output from other columns.; *; * The LineWrapper is used to handle the last column of each table as well as interjections.; * The LineWrapper is called once for each line of output. If the data given to it fits; * into the designated width of the last column it is simply written out. If there; * is too much data, an appropriate split point is located and only the data up to this; * split point is written out. The rest of the data is queued for the next line.; * That way the last column can be line wrapped and interleaved with data from; * other columns. The following example makes this clearer:; * @code; * Column 1,1 Column 2,1 This is a long text; * Column 1,2 Column 2,2 that does not fit into; * a single line.; * @endcode; *; * The difficulty in producing this output is that the whole string; * ""This is a long text that does not fit into a single line"" is the; * 1st and only part of column 3. In order to produce the above; * output the string must be output piecemeal, interleaved with; * the data from the other columns.; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:720,Usability,clear,clearer,720,"/**; * @internal; * @brief Takes input and line wraps it, writing out one line at a time so that; * it can be interleaved with output from other columns.; *; * The LineWrapper is used to handle the last column of each table as well as interjections.; * The LineWrapper is called once for each line of output. If the data given to it fits; * into the designated width of the last column it is simply written out. If there; * is too much data, an appropriate split point is located and only the data up to this; * split point is written out. The rest of the data is queued for the next line.; * That way the last column can be line wrapped and interleaved with data from; * other columns. The following example makes this clearer:; * @code; * Column 1,1 Column 2,1 This is a long text; * Column 1,2 Column 2,2 that does not fit into; * a single line.; * @endcode; *; * The difficulty in producing this output is that the whole string; * ""This is a long text that does not fit into a single line"" is the; * 1st and only part of column 3. In order to produce the above; * output the string must be output piecemeal, interleaved with; * the data from the other columns.; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:15,Energy Efficiency,power,power,15,"//!< Must be a power of 2 minus 1.; /**; * @brief Ring buffer for length component of pair (data, length).; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:46,Integrability,wrap,wrap,46,/**; * @brief The width of the column to line wrap.; */,MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:181,Integrability,contract,contract,181,//!< @brief index for next read - 1 (i.e. increment tail BEFORE read); /**; * @brief Multiple methods of LineWrapper may decide to flush part of the buffer to; * free up space. The contract of process() says that only 1 line is output. So; * this variable is used to track whether something has output a line. It is; * reset at the beginning of process() and checked at the end to decide if; * output has already occurred or is still needed.; */,MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:247,Modifiability,variab,variable,247,//!< @brief index for next read - 1 (i.e. increment tail BEFORE read); /**; * @brief Multiple methods of LineWrapper may decide to flush part of the buffer to; * free up space. The contract of process() says that only 1 line is output. So; * this variable is used to track whether something has output a line. It is; * reset at the beginning of process() and checked at the end to decide if; * output has already occurred or is still needed.; */,MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:23,Integrability,wrap,wrap,23,"/**; * @brief Process, wrap and output the next piece of data.; *; * process() will output at least one line of output. This is not necessarily; * the @c data passed in. It may be data queued from a prior call to process().; * If the internal buffer is full, more than 1 line will be output.; *; * process() assumes that the a proper amount of indentation has already been; * output. It won't write any further indentation before the 1st line. If; * more than 1 line is written due to buffer constraints, the lines following; * the first will be indented by this method, though.; *; * No \\n is written by this method after the last line that is written.; *; * @param write where to write the data.; * @param data the new chunk of data to write.; * @param len the length of the chunk of data to write.; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:185,Performance,queue,queued,185,"/**; * @brief Process, wrap and output the next piece of data.; *; * process() will output at least one line of output. This is not necessarily; * the @c data passed in. It may be data queued from a prior call to process().; * If the internal buffer is full, more than 1 line will be output.; *; * process() assumes that the a proper amount of indentation has already been; * output. It won't write any further indentation before the 1st line. If; * more than 1 line is written due to buffer constraints, the lines following; * the first will be indented by this method, though.; *; * No \\n is written by this method after the last line that is written.; *; * @param write where to write the data.; * @param data the new chunk of data to write.; * @param len the length of the chunk of data to write.; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:9,Testability,test,test,9,"// quick test that works because utf8width <= len (all wide chars have at least 2 bytes)",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:3,Availability,mask,mask,3,"// mask out length bits, we don't verify their correctness",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:34,Safety,avoid,avoid,34,"// the test for 0x1100 is here to avoid the function call in the Latin case",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:7,Testability,test,test,7,"// the test for 0x1100 is here to avoid the function call in the Latin case",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:44,Integrability,wrap,wraps,44,/**; * @brief Constructs a LineWrapper that wraps its output to fit into; * screen columns @c x1 (incl.) to @c x2 (excl.).; *; * @c x1 gives the indentation LineWrapper uses if it needs to indent.; */,MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:6281,Availability,avail,available,6281,"age() always interprets Descriptor::help as UTF-8 and always produces UTF-8-encoded; * output. If your system uses a different charset, you must do your own conversion. You; * may also need to change the font of the console to see non-ASCII characters properly.; * This is particularly true for Windows.; * @li @b Security @b warning: Do not insert untrusted strings (such as user-supplied arguments); * into the usage. printUsage() has no protection against malicious UTF-8 sequences.; *; * @param prn The output method to use. See the examples above.; * @param usage the Descriptor[] array whose @c help texts will be formatted.; * @param width the maximum number of characters per output line. Note that this number is; * in actual characters, not bytes. printUsage() supports UTF-8 in @c help and will; * count multi-byte UTF-8 sequences properly. Asian wide characters are counted; * as 2 characters.; * @param last_column_min_percent (0-100) The minimum percentage of @c width that should be available; * for the last column (which typically contains the textual explanation of an option).; * If less space is available, the last column will be printed on its own line, indented; * according to @c last_column_own_line_max_percent.; * @param last_column_own_line_max_percent (0-100) If the last column is printed on its own line due to; * less than @c last_column_min_percent of the width being available, then only; * @c last_column_own_line_max_percent of the extra line(s) will be used for the; * last column's text. This ensures an indentation. See example below.; *; * @code; * // width=20, last_column_min_percent=50 (i.e. last col. min. width=10); * --3456789 1234567890; * 1234567890; *; * // width=20, last_column_min_percent=75 (i.e. last col. min. width=15); * // last_column_own_line_max_percent=75; * --3456789; * 123456789012345; * 67890; *; * // width=20, last_column_min_percent=75 (i.e. last col. min. width=15); * // last_column_own_line_max_percent=33 (i.e. max. 5); * --3456",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:6399,Availability,avail,available,6399,"lways produces UTF-8-encoded; * output. If your system uses a different charset, you must do your own conversion. You; * may also need to change the font of the console to see non-ASCII characters properly.; * This is particularly true for Windows.; * @li @b Security @b warning: Do not insert untrusted strings (such as user-supplied arguments); * into the usage. printUsage() has no protection against malicious UTF-8 sequences.; *; * @param prn The output method to use. See the examples above.; * @param usage the Descriptor[] array whose @c help texts will be formatted.; * @param width the maximum number of characters per output line. Note that this number is; * in actual characters, not bytes. printUsage() supports UTF-8 in @c help and will; * count multi-byte UTF-8 sequences properly. Asian wide characters are counted; * as 2 characters.; * @param last_column_min_percent (0-100) The minimum percentage of @c width that should be available; * for the last column (which typically contains the textual explanation of an option).; * If less space is available, the last column will be printed on its own line, indented; * according to @c last_column_own_line_max_percent.; * @param last_column_own_line_max_percent (0-100) If the last column is printed on its own line due to; * less than @c last_column_min_percent of the width being available, then only; * @c last_column_own_line_max_percent of the extra line(s) will be used for the; * last column's text. This ensures an indentation. See example below.; *; * @code; * // width=20, last_column_min_percent=50 (i.e. last col. min. width=10); * --3456789 1234567890; * 1234567890; *; * // width=20, last_column_min_percent=75 (i.e. last col. min. width=15); * // last_column_own_line_max_percent=75; * --3456789; * 123456789012345; * 67890; *; * // width=20, last_column_min_percent=75 (i.e. last col. min. width=15); * // last_column_own_line_max_percent=33 (i.e. max. 5); * --3456789; * 12345; * 67890; * 12345; * 67890; * @endcode; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:6684,Availability,avail,available,6684,"lways produces UTF-8-encoded; * output. If your system uses a different charset, you must do your own conversion. You; * may also need to change the font of the console to see non-ASCII characters properly.; * This is particularly true for Windows.; * @li @b Security @b warning: Do not insert untrusted strings (such as user-supplied arguments); * into the usage. printUsage() has no protection against malicious UTF-8 sequences.; *; * @param prn The output method to use. See the examples above.; * @param usage the Descriptor[] array whose @c help texts will be formatted.; * @param width the maximum number of characters per output line. Note that this number is; * in actual characters, not bytes. printUsage() supports UTF-8 in @c help and will; * count multi-byte UTF-8 sequences properly. Asian wide characters are counted; * as 2 characters.; * @param last_column_min_percent (0-100) The minimum percentage of @c width that should be available; * for the last column (which typically contains the textual explanation of an option).; * If less space is available, the last column will be printed on its own line, indented; * according to @c last_column_own_line_max_percent.; * @param last_column_own_line_max_percent (0-100) If the last column is printed on its own line due to; * less than @c last_column_min_percent of the width being available, then only; * @c last_column_own_line_max_percent of the extra line(s) will be used for the; * last column's text. This ensures an indentation. See example below.; *; * @code; * // width=20, last_column_min_percent=50 (i.e. last col. min. width=10); * --3456789 1234567890; * 1234567890; *; * // width=20, last_column_min_percent=75 (i.e. last col. min. width=15); * // last_column_own_line_max_percent=75; * --3456789; * 123456789012345; * 67890; *; * // width=20, last_column_min_percent=75 (i.e. last col. min. width=15); * // last_column_own_line_max_percent=33 (i.e. max. 5); * --3456789; * 12345; * 67890; * 12345; * 67890; * @endcode; */",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:107,Integrability,wrap,wrapping,107,"/**; * @brief Outputs a nicely formatted usage string with support for multi-column formatting; * and line-wrapping.; *; * printUsage() takes the @c help texts of a Descriptor[] array and formats them into; * a usage message, wrapping lines to achieve the desired output width.; *; * <b>Table formatting:</b>; *; * Aside from plain strings which are simply line-wrapped, the usage may contain tables. Tables; * are used to align elements in the output.; *; * @code; * // Without a table. The explanatory texts are not aligned.; * -c, --create |Creates something.; * -k, --kill |Destroys something.; *; * // With table formatting. The explanatory texts are aligned.; * -c, --create |Creates something.; * -k, --kill |Destroys something.; * @endcode; *; * Table formatting removes the need to pad help texts manually with spaces to achieve; * alignment. To create a table, simply insert \\t (tab) characters to separate the cells; * within a row.; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c, --create \tCreates something."" },; * {..., ""-k, --kill \tDestroys something."" }, ...; * @endcode; *; * Note that you must include the minimum amount of space desired between cells yourself.; * Table formatting will insert further spaces as needed to achieve alignment.; *; * You can insert line breaks within cells by using \\v (vertical tab).; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c,\v--create \tCreates\vsomething."" },; * {..., ""-k,\v--kill \tDestroys\vsomething."" }, ...; *; * // results in; *; * -c, Creates; * --create something.; * -k, Destroys; * --kill something.; * @endcode; *; * You can mix lines that do not use \\t or \\v with those that do. The plain; * lines will not mess up the table layout. Alignment of the table columns will; * be maintained even across these interjections.; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c, --create \tCreates something."" },; * {..., ""----------------------------------"" },; * {..., ""-k, --kill ",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:217,Integrability,message,message,217,"/**; * @brief Outputs a nicely formatted usage string with support for multi-column formatting; * and line-wrapping.; *; * printUsage() takes the @c help texts of a Descriptor[] array and formats them into; * a usage message, wrapping lines to achieve the desired output width.; *; * <b>Table formatting:</b>; *; * Aside from plain strings which are simply line-wrapped, the usage may contain tables. Tables; * are used to align elements in the output.; *; * @code; * // Without a table. The explanatory texts are not aligned.; * -c, --create |Creates something.; * -k, --kill |Destroys something.; *; * // With table formatting. The explanatory texts are aligned.; * -c, --create |Creates something.; * -k, --kill |Destroys something.; * @endcode; *; * Table formatting removes the need to pad help texts manually with spaces to achieve; * alignment. To create a table, simply insert \\t (tab) characters to separate the cells; * within a row.; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c, --create \tCreates something."" },; * {..., ""-k, --kill \tDestroys something."" }, ...; * @endcode; *; * Note that you must include the minimum amount of space desired between cells yourself.; * Table formatting will insert further spaces as needed to achieve alignment.; *; * You can insert line breaks within cells by using \\v (vertical tab).; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c,\v--create \tCreates\vsomething."" },; * {..., ""-k,\v--kill \tDestroys\vsomething."" }, ...; *; * // results in; *; * -c, Creates; * --create something.; * -k, Destroys; * --kill something.; * @endcode; *; * You can mix lines that do not use \\t or \\v with those that do. The plain; * lines will not mess up the table layout. Alignment of the table columns will; * be maintained even across these interjections.; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c, --create \tCreates something."" },; * {..., ""----------------------------------"" },; * {..., ""-k, --kill ",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:226,Integrability,wrap,wrapping,226,"/**; * @brief Outputs a nicely formatted usage string with support for multi-column formatting; * and line-wrapping.; *; * printUsage() takes the @c help texts of a Descriptor[] array and formats them into; * a usage message, wrapping lines to achieve the desired output width.; *; * <b>Table formatting:</b>; *; * Aside from plain strings which are simply line-wrapped, the usage may contain tables. Tables; * are used to align elements in the output.; *; * @code; * // Without a table. The explanatory texts are not aligned.; * -c, --create |Creates something.; * -k, --kill |Destroys something.; *; * // With table formatting. The explanatory texts are aligned.; * -c, --create |Creates something.; * -k, --kill |Destroys something.; * @endcode; *; * Table formatting removes the need to pad help texts manually with spaces to achieve; * alignment. To create a table, simply insert \\t (tab) characters to separate the cells; * within a row.; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c, --create \tCreates something."" },; * {..., ""-k, --kill \tDestroys something."" }, ...; * @endcode; *; * Note that you must include the minimum amount of space desired between cells yourself.; * Table formatting will insert further spaces as needed to achieve alignment.; *; * You can insert line breaks within cells by using \\v (vertical tab).; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c,\v--create \tCreates\vsomething."" },; * {..., ""-k,\v--kill \tDestroys\vsomething."" }, ...; *; * // results in; *; * -c, Creates; * --create something.; * -k, Destroys; * --kill something.; * @endcode; *; * You can mix lines that do not use \\t or \\v with those that do. The plain; * lines will not mess up the table layout. Alignment of the table columns will; * be maintained even across these interjections.; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c, --create \tCreates something."" },; * {..., ""----------------------------------"" },; * {..., ""-k, --kill ",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:362,Integrability,wrap,wrapped,362,"/**; * @brief Outputs a nicely formatted usage string with support for multi-column formatting; * and line-wrapping.; *; * printUsage() takes the @c help texts of a Descriptor[] array and formats them into; * a usage message, wrapping lines to achieve the desired output width.; *; * <b>Table formatting:</b>; *; * Aside from plain strings which are simply line-wrapped, the usage may contain tables. Tables; * are used to align elements in the output.; *; * @code; * // Without a table. The explanatory texts are not aligned.; * -c, --create |Creates something.; * -k, --kill |Destroys something.; *; * // With table formatting. The explanatory texts are aligned.; * -c, --create |Creates something.; * -k, --kill |Destroys something.; * @endcode; *; * Table formatting removes the need to pad help texts manually with spaces to achieve; * alignment. To create a table, simply insert \\t (tab) characters to separate the cells; * within a row.; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c, --create \tCreates something."" },; * {..., ""-k, --kill \tDestroys something."" }, ...; * @endcode; *; * Note that you must include the minimum amount of space desired between cells yourself.; * Table formatting will insert further spaces as needed to achieve alignment.; *; * You can insert line breaks within cells by using \\v (vertical tab).; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c,\v--create \tCreates\vsomething."" },; * {..., ""-k,\v--kill \tDestroys\vsomething."" }, ...; *; * // results in; *; * -c, Creates; * --create something.; * -k, Destroys; * --kill something.; * @endcode; *; * You can mix lines that do not use \\t or \\v with those that do. The plain; * lines will not mess up the table layout. Alignment of the table columns will; * be maintained even across these interjections.; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c, --create \tCreates something."" },; * {..., ""----------------------------------"" },; * {..., ""-k, --kill ",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:5140,Integrability,wrap,wrappers,5140,"rintUsage(writer, usage); // custom class object; * MyWriteFunctor wfunctor;; * printUsage(&wfunctor, usage); // custom functor; * printUsage(write, 1, usage); // write() to file descriptor 1; * printUsage(cout, usage); // an ostream&; * printUsage(fwrite, stdout, usage); // fwrite() to stdout; * ostringstream sstr;; * printUsage(sstr, usage); // an ostringstream&; *; * @endcode; *; * @par Notes:; * @li the @c write() method of a class that is to be passed as a temporary; * as @c MyWriter() is in the example, must be a @c const method, because; * temporary objects are passed as const reference. This only applies to; * temporary objects that are created and destroyed in the same statement.; * If you create an object like @c writer in the example, this restriction; * does not apply.; * @li a functor like @c MyWriteFunctor in the example must be passed as a pointer.; * This differs from the way functors are passed to e.g. the STL algorithms.; * @li All printUsage() templates are tiny wrappers around a shared non-template implementation.; * So there's no penalty for using different versions in the same program.; * @li printUsage() always interprets Descriptor::help as UTF-8 and always produces UTF-8-encoded; * output. If your system uses a different charset, you must do your own conversion. You; * may also need to change the font of the console to see non-ASCII characters properly.; * This is particularly true for Windows.; * @li @b Security @b warning: Do not insert untrusted strings (such as user-supplied arguments); * into the usage. printUsage() has no protection against malicious UTF-8 sequences.; *; * @param prn The output method to use. See the examples above.; * @param usage the Descriptor[] array whose @c help texts will be formatted.; * @param width the maximum number of characters per output line. Note that this number is; * in actual characters, not bytes. printUsage() supports UTF-8 in @c help and will; * count multi-byte UTF-8 sequences properly. Asian wide",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:5597,Security,Secur,Security,5597,"n the example, must be a @c const method, because; * temporary objects are passed as const reference. This only applies to; * temporary objects that are created and destroyed in the same statement.; * If you create an object like @c writer in the example, this restriction; * does not apply.; * @li a functor like @c MyWriteFunctor in the example must be passed as a pointer.; * This differs from the way functors are passed to e.g. the STL algorithms.; * @li All printUsage() templates are tiny wrappers around a shared non-template implementation.; * So there's no penalty for using different versions in the same program.; * @li printUsage() always interprets Descriptor::help as UTF-8 and always produces UTF-8-encoded; * output. If your system uses a different charset, you must do your own conversion. You; * may also need to change the font of the console to see non-ASCII characters properly.; * This is particularly true for Windows.; * @li @b Security @b warning: Do not insert untrusted strings (such as user-supplied arguments); * into the usage. printUsage() has no protection against malicious UTF-8 sequences.; *; * @param prn The output method to use. See the examples above.; * @param usage the Descriptor[] array whose @c help texts will be formatted.; * @param width the maximum number of characters per output line. Note that this number is; * in actual characters, not bytes. printUsage() supports UTF-8 in @c help and will; * count multi-byte UTF-8 sequences properly. Asian wide characters are counted; * as 2 characters.; * @param last_column_min_percent (0-100) The minimum percentage of @c width that should be available; * for the last column (which typically contains the textual explanation of an option).; * If less space is available, the last column will be printed on its own line, indented; * according to @c last_column_own_line_max_percent.; * @param last_column_own_line_max_percent (0-100) If the last column is printed on its own line due to; * less than @c las",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:350,Usability,simpl,simply,350,"/**; * @brief Outputs a nicely formatted usage string with support for multi-column formatting; * and line-wrapping.; *; * printUsage() takes the @c help texts of a Descriptor[] array and formats them into; * a usage message, wrapping lines to achieve the desired output width.; *; * <b>Table formatting:</b>; *; * Aside from plain strings which are simply line-wrapped, the usage may contain tables. Tables; * are used to align elements in the output.; *; * @code; * // Without a table. The explanatory texts are not aligned.; * -c, --create |Creates something.; * -k, --kill |Destroys something.; *; * // With table formatting. The explanatory texts are aligned.; * -c, --create |Creates something.; * -k, --kill |Destroys something.; * @endcode; *; * Table formatting removes the need to pad help texts manually with spaces to achieve; * alignment. To create a table, simply insert \\t (tab) characters to separate the cells; * within a row.; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c, --create \tCreates something."" },; * {..., ""-k, --kill \tDestroys something."" }, ...; * @endcode; *; * Note that you must include the minimum amount of space desired between cells yourself.; * Table formatting will insert further spaces as needed to achieve alignment.; *; * You can insert line breaks within cells by using \\v (vertical tab).; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c,\v--create \tCreates\vsomething."" },; * {..., ""-k,\v--kill \tDestroys\vsomething."" }, ...; *; * // results in; *; * -c, Creates; * --create something.; * -k, Destroys; * --kill something.; * @endcode; *; * You can mix lines that do not use \\t or \\v with those that do. The plain; * lines will not mess up the table layout. Alignment of the table columns will; * be maintained even across these interjections.; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c, --create \tCreates something."" },; * {..., ""----------------------------------"" },; * {..., ""-k, --kill ",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:871,Usability,simpl,simply,871,"/**; * @brief Outputs a nicely formatted usage string with support for multi-column formatting; * and line-wrapping.; *; * printUsage() takes the @c help texts of a Descriptor[] array and formats them into; * a usage message, wrapping lines to achieve the desired output width.; *; * <b>Table formatting:</b>; *; * Aside from plain strings which are simply line-wrapped, the usage may contain tables. Tables; * are used to align elements in the output.; *; * @code; * // Without a table. The explanatory texts are not aligned.; * -c, --create |Creates something.; * -k, --kill |Destroys something.; *; * // With table formatting. The explanatory texts are aligned.; * -c, --create |Creates something.; * -k, --kill |Destroys something.; * @endcode; *; * Table formatting removes the need to pad help texts manually with spaces to achieve; * alignment. To create a table, simply insert \\t (tab) characters to separate the cells; * within a row.; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c, --create \tCreates something."" },; * {..., ""-k, --kill \tDestroys something."" }, ...; * @endcode; *; * Note that you must include the minimum amount of space desired between cells yourself.; * Table formatting will insert further spaces as needed to achieve alignment.; *; * You can insert line breaks within cells by using \\v (vertical tab).; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c,\v--create \tCreates\vsomething."" },; * {..., ""-k,\v--kill \tDestroys\vsomething."" }, ...; *; * // results in; *; * -c, Creates; * --create something.; * -k, Destroys; * --kill something.; * @endcode; *; * You can mix lines that do not use \\t or \\v with those that do. The plain; * lines will not mess up the table layout. Alignment of the table columns will; * be maintained even across these interjections.; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c, --create \tCreates something."" },; * {..., ""----------------------------------"" },; * {..., ""-k, --kill ",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:2274,Usability,Simpl,Simply,2274,"rt line breaks within cells by using \\v (vertical tab).; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c,\v--create \tCreates\vsomething."" },; * {..., ""-k,\v--kill \tDestroys\vsomething."" }, ...; *; * // results in; *; * -c, Creates; * --create something.; * -k, Destroys; * --kill something.; * @endcode; *; * You can mix lines that do not use \\t or \\v with those that do. The plain; * lines will not mess up the table layout. Alignment of the table columns will; * be maintained even across these interjections.; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c, --create \tCreates something."" },; * {..., ""----------------------------------"" },; * {..., ""-k, --kill \tDestroys something."" }, ...; *; * // results in; *; * -c, --create Creates something.; * ----------------------------------; * -k, --kill Destroys something.; * @endcode; *; * You can have multiple tables within the same usage whose columns are; * aligned independently. Simply insert a dummy Descriptor with @c help==0.; *; * @code; * const option::Descriptor usage[] = {; * {..., ""Long options:"" },; * {..., ""--very-long-option \tDoes something long."" },; * {..., ""--ultra-super-mega-long-option \tTakes forever to complete."" },; * {..., 0 }, // ---------- table break -----------; * {..., ""Short options:"" },; * {..., ""-s \tShort."" },; * {..., ""-q \tQuick."" }, ...; *; * // results in; *; * Long options:; * --very-long-option Does something long.; * --ultra-super-mega-long-option Takes forever to complete.; * Short options:; * -s Short.; * -q Quick.; *; * // Without the table break it would be; *; * Long options:; * --very-long-option Does something long.; * --ultra-super-mega-long-option Takes forever to complete.; * Short options:; * -s Short.; * -q Quick.; * @endcode; *; * <b>Output methods:</b>; *; * Because TheLeanMeanC++Option parser is freestanding, you have to provide the means for; * output in the first argument(s) to printUsage(). Because printUsage() is implemented as; ",MatchSource.CODE_COMMENT,core/dictgen/res/OptionParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/Scanner.h:3,Modifiability,Config,Configure,3,"// Configure the vistitor to also visit template instantiation.",MatchSource.CODE_COMMENT,core/dictgen/res/Scanner.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/Scanner.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/Scanner.h:33,Modifiability,variab,variable,33,"//Visitor for every VarDecl i.e. variable node in the AST",MatchSource.CODE_COMMENT,core/dictgen/res/Scanner.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/Scanner.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/Scanner.h:8,Integrability,interface,interface,8,"// Main interface of this class.",MatchSource.CODE_COMMENT,core/dictgen/res/Scanner.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/Scanner.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/Scanner.h:11,Integrability,rout,routines,11,"// Utility routines. Most belongs in TMetaUtils and should be shared with rootcling.cxx",MatchSource.CODE_COMMENT,core/dictgen/res/Scanner.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/Scanner.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/Scanner.h:13,Testability,log,logN,13,"// Set for O(logN)",MatchSource.CODE_COMMENT,core/dictgen/res/Scanner.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/Scanner.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/SelectionRules.h:3,Usability,clear,clear,3,"// clear all selection rules",MatchSource.CODE_COMMENT,core/dictgen/res/SelectionRules.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/SelectionRules.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/SelectionRules.h:53,Modifiability,variab,variable,53,"// is the class selected; // is the global function, variable, enum selected - the behavior is different for linkdef.h and selection.xml - that's why; // we have two functions",MatchSource.CODE_COMMENT,core/dictgen/res/SelectionRules.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/SelectionRules.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/SelectionRules.h:44,Performance,perform,performed,44,"// gets the qualname of the decl, no checks performed",MatchSource.CODE_COMMENT,core/dictgen/res/SelectionRules.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/SelectionRules.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/SelectionRules.h:12,Performance,cache,cache,12,"// Fill the cache of all selection rules",MatchSource.CODE_COMMENT,core/dictgen/res/SelectionRules.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/SelectionRules.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/SelectionRules.h:24,Modifiability,variab,variables,24,"///< List of the global variables selection rules",MatchSource.CODE_COMMENT,core/dictgen/res/SelectionRules.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/SelectionRules.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/VariableSelectionRule.h:28,Modifiability,Variab,VariableSelectionRule,28,"// @(#)root/core/utils:$Id: VariableSelectionRule.h 28529 2009-05-11 16:43:35Z pcanal $; // Author: Velislava Spasova September 2010; /*************************************************************************; * Copyright (C) 1995-2011, Rene Brun, Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/dictgen/res/VariableSelectionRule.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/VariableSelectionRule.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/VariableSelectionRule.h:86,Modifiability,Variab,VariableSelectionRule,86,"//////////////////////////////////////////////////////////////////////////; // //; // VariableSelectionRule //; // //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/dictgen/res/VariableSelectionRule.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/VariableSelectionRule.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/VariableSelectionRule.h:44,Modifiability,Variab,Variable,44,"// Function selection rules are the same as Variable selection rules",MatchSource.CODE_COMMENT,core/dictgen/res/VariableSelectionRule.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/VariableSelectionRule.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/VariableSelectionRule.h:40,Modifiability,Variab,Variable,40,"// Enum selection rules are the same as Variable selection rules",MatchSource.CODE_COMMENT,core/dictgen/res/VariableSelectionRule.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/VariableSelectionRule.h
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx:76,Testability,test,test,76,"// Files on same inode (but this is not unique on AFS so we need the next 2 test",MatchSource.CODE_COMMENT,core/dictgen/src/BaseSelectionRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx:35,Performance,cache,cache,35,"//FIXME It would be much better to cache the rule stat result and compare to the clang::FileEntry",MatchSource.CODE_COMMENT,core/dictgen/src/BaseSelectionRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx:429,Performance,perform,performance,429,"// For ROOT-6704: use normalised name for matching if the class is in stl; // The reason for this check is that we have rules like std::map<*, int>; // We do not know how the internal representation of the innocuous ""map""; // is. We therefore have to act on a nicer name, obtained with TClassEdit; // The check ROOT::TMetaUtils::IsStdDropDefaultClass is there to call; // TClassEdit only when necessary as it can be expensive, a performance; // optimisation.",MatchSource.CODE_COMMENT,core/dictgen/src/BaseSelectionRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx:446,Security,Hash,Hash,446,"// do we have matching against the proto_name (or proto_pattern) attribute and if yes - select or veto; // The following selects functions on whether the requested prototype exactly matches the; // prototype issued by SelectionRules::GetFunctionPrototype which relies on; // ParmVarDecl::getType()->getAsString(); // to get the type names. Currently, this does not print the prototype in the usual; // human (written) forms. For example:; // For Hash have prototype: '(const class TString &)'; // For Hash have prototype: '(const class TString*)'; // For Hash have prototype: '(const char*)'; // In addition, the const can legally be in various place in the type name and thus; // a string based match will be hard to work out (it would need to normalize both; // the user input string and the clang provided string).; // Using lookup form cling would be probably be a better choice.",MatchSource.CODE_COMMENT,core/dictgen/src/BaseSelectionRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx:501,Security,Hash,Hash,501,"// do we have matching against the proto_name (or proto_pattern) attribute and if yes - select or veto; // The following selects functions on whether the requested prototype exactly matches the; // prototype issued by SelectionRules::GetFunctionPrototype which relies on; // ParmVarDecl::getType()->getAsString(); // to get the type names. Currently, this does not print the prototype in the usual; // human (written) forms. For example:; // For Hash have prototype: '(const class TString &)'; // For Hash have prototype: '(const class TString*)'; // For Hash have prototype: '(const char*)'; // In addition, the const can legally be in various place in the type name and thus; // a string based match will be hard to work out (it would need to normalize both; // the user input string and the clang provided string).; // Using lookup form cling would be probably be a better choice.",MatchSource.CODE_COMMENT,core/dictgen/src/BaseSelectionRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx:555,Security,Hash,Hash,555,"// do we have matching against the proto_name (or proto_pattern) attribute and if yes - select or veto; // The following selects functions on whether the requested prototype exactly matches the; // prototype issued by SelectionRules::GetFunctionPrototype which relies on; // ParmVarDecl::getType()->getAsString(); // to get the type names. Currently, this does not print the prototype in the usual; // human (written) forms. For example:; // For Hash have prototype: '(const class TString &)'; // For Hash have prototype: '(const class TString*)'; // For Hash have prototype: '(const char*)'; // In addition, the const can legally be in various place in the type name and thus; // a string based match will be hard to work out (it would need to normalize both; // the user input string and the clang provided string).; // Using lookup form cling would be probably be a better choice.",MatchSource.CODE_COMMENT,core/dictgen/src/BaseSelectionRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx:38,Testability,test,test,38,/*; * This method checks if the given test string is matched against the pattern; */,MatchSource.CODE_COMMENT,core/dictgen/src/BaseSelectionRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx:15,Usability,simpl,simple,15,"// We have the simple pattern '*', it matches everything by definition!",MatchSource.CODE_COMMENT,core/dictgen/src/BaseSelectionRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx:62,Testability,test,test,62,"// we first check if the last sub-pattern is contained in the test string",MatchSource.CODE_COMMENT,core/dictgen/src/BaseSelectionRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx:48,Testability,test,test,48,"// the last sub-pattern isn't conatained in the test string",MatchSource.CODE_COMMENT,core/dictgen/src/BaseSelectionRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx:115,Testability,test,test,115,"// if the pattern doesn't end with '*', the match has to be complete; // i.e. if the last sub-pattern is ""sub"" the test string should end in ""sub"" (""1111sub"" is OK, ""1111sub1"" is not OK)",MatchSource.CODE_COMMENT,core/dictgen/src/BaseSelectionRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx:43,Testability,test,test,43,"// if the first sub-pattern isn't found in test or if it is found but the; // pattern doesn't start with '*' and the sub-pattern is not at the first position; //std::cout<<""\tNo match!""<<std::endl;",MatchSource.CODE_COMMENT,core/dictgen/src/BaseSelectionRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx:32,Testability,test,test,32,"// end is contained in begin -> test = ""A::B"" sub-patterns = ""A::"", ""::"" will return false",MatchSource.CODE_COMMENT,core/dictgen/src/BaseSelectionRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/BaseSelectionRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/ClassSelectionRule.cxx:18,Modifiability,Variab,VariableSelectionRule,18,"//const std::list<VariableSelectionRule>& ClassSelectionRule::GetFieldSelectionRules()",MatchSource.CODE_COMMENT,core/dictgen/src/ClassSelectionRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/ClassSelectionRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/DictSelectionReader.cxx:339,Performance,perform,performance,339,"////////////////////////////////////////////////////////////////////////////////; /// If it's not contained by 2 namespaces, drop it.; /**; * Check that the recordDecl is enclosed in the ROOT::Meta::Selection namespace,; * excluding the portion dedicated the definition of the syntax, which is part; * of ROOT, not of the user code.; * If performance is needed, an alternative approach to string comparisons; * could be adopted. One could use for example hashes of strings in first; * approximation.; **/",MatchSource.CODE_COMMENT,core/dictgen/src/DictSelectionReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/DictSelectionReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/DictSelectionReader.cxx:455,Security,hash,hashes,455,"////////////////////////////////////////////////////////////////////////////////; /// If it's not contained by 2 namespaces, drop it.; /**; * Check that the recordDecl is enclosed in the ROOT::Meta::Selection namespace,; * excluding the portion dedicated the definition of the syntax, which is part; * of ROOT, not of the user code.; * If performance is needed, an alternative approach to string comparisons; * could be adopted. One could use for example hashes of strings in first; * approximation.; **/",MatchSource.CODE_COMMENT,core/dictgen/src/DictSelectionReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/DictSelectionReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/DictSelectionReader.cxx:156,Availability,avail,available,156,////////////////////////////////////////////////////////////////////////////////; /**; * Get the pointer to the template arguments list. Return zero if not available.; **/,MatchSource.CODE_COMMENT,core/dictgen/src/DictSelectionReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/DictSelectionReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/DictSelectionReader.cxx:820,Availability,down,down,820,"////////////////////////////////////////////////////////////////////////////////; /**; * Second pass through the AST. Two operations are performed:; * 1. Selection rules for classes to be autoselected are created. The; * algorithm works as follows: the members of the classes matching the name of; * the classes which contained autoselected members in the selection namespace; * are inspected. If a field with the same name of the one which was; * autoselected a selection rule based on its typename is built.; * 2. If a class is found which is a @c TemplateSpecialisationDecl its; * name is checked to match one of the patterns identified during the first; * pass. If a match is found, a property is added to the selection rule with; * the number of template arguments to keep in order to percolate this; * information down to the @c AnnotatedRecordDecl creation which happens in the; * @c RScanner .; **/",MatchSource.CODE_COMMENT,core/dictgen/src/DictSelectionReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/DictSelectionReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/DictSelectionReader.cxx:137,Performance,perform,performed,137,"////////////////////////////////////////////////////////////////////////////////; /**; * Second pass through the AST. Two operations are performed:; * 1. Selection rules for classes to be autoselected are created. The; * algorithm works as follows: the members of the classes matching the name of; * the classes which contained autoselected members in the selection namespace; * are inspected. If a field with the same name of the one which was; * autoselected a selection rule based on its typename is built.; * 2. If a class is found which is a @c TemplateSpecialisationDecl its; * name is checked to match one of the patterns identified during the first; * pass. If a match is found, a property is added to the selection rule with; * the number of template arguments to keep in order to percolate this; * information down to the @c AnnotatedRecordDecl creation which happens in the; * @c RScanner .; **/",MatchSource.CODE_COMMENT,core/dictgen/src/DictSelectionReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/DictSelectionReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx:21,Availability,error,error,21,"//rootcint generates error here but I decided to implement that pattern",MatchSource.CODE_COMMENT,core/dictgen/src/LinkdefReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx:49,Safety,safe,safe,49,"// Types: We do not do IO of functions, so it is safe to; // put in some heuristics",MatchSource.CODE_COMMENT,core/dictgen/src/LinkdefReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx:22,Availability,error,error,22,"// rootcint generates error here, but I decided to implement it",MatchSource.CODE_COMMENT,core/dictgen/src/LinkdefReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx:22,Availability,error,error,22,"// rootcint generates error here, but I decided to implement it",MatchSource.CODE_COMMENT,core/dictgen/src/LinkdefReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx:256,Testability,stub,stub,256,"// Constructor parsing:; /* options=...; * possible options:; * nostreamer: set G__NOSTREAMER flag; * noinputoper: set G__NOINPUTOPERATOR flag; * evolution: set G__USEBYTECOUNT flag; * nomap: (ignored by roocling; prevents entry in ROOT's rootmap file); * stub: (ignored by rootcling was a directly for CINT code generation); * version(x): sets the version number of the class to x; * rntuple[un]split: enforce split/unsplit encoding in RNTuple; */; // We assume that the first toke in option or options; // assert( tok.getIdentifierInfo()->getName() != ""option"" or ""options"")",MatchSource.CODE_COMMENT,core/dictgen/src/LinkdefReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx:508,Testability,assert,assert,508,"// Constructor parsing:; /* options=...; * possible options:; * nostreamer: set G__NOSTREAMER flag; * noinputoper: set G__NOINPUTOPERATOR flag; * evolution: set G__USEBYTECOUNT flag; * nomap: (ignored by roocling; prevents entry in ROOT's rootmap file); * stub: (ignored by rootcling was a directly for CINT code generation); * version(x): sets the version number of the class to x; * rntuple[un]split: enforce split/unsplit encoding in RNTuple; */; // We assume that the first toke in option or options; // assert( tok.getIdentifierInfo()->getName() != ""option"" or ""options"")",MatchSource.CODE_COMMENT,core/dictgen/src/LinkdefReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx:168,Testability,assert,assert,168,"// Handle a #pragma found by the Preprocessor.; // check whether we care about the pragma - we are a named handler,; // thus this could actually be transformed into an assert:",MatchSource.CODE_COMMENT,core/dictgen/src/LinkdefReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx:168,Testability,assert,assert,168,"// Handle a #pragma found by the Preprocessor.; // check whether we care about the pragma - we are a named handler,; // thus this could actually be transformed into an assert:",MatchSource.CODE_COMMENT,core/dictgen/src/LinkdefReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx:98,Availability,Error,Error,98,"// Pragma read rule do not need to end in a semi colon; // if (tok.isNot(clang::tok::semi)) {; // Error(""Error: missing ; at end of rule"",tok, PP);; // return;; // }",MatchSource.CODE_COMMENT,core/dictgen/src/LinkdefReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx:105,Availability,Error,Error,105,"// Pragma read rule do not need to end in a semi colon; // if (tok.isNot(clang::tok::semi)) {; // Error(""Error: missing ; at end of rule"",tok, PP);; // return;; // }",MatchSource.CODE_COMMENT,core/dictgen/src/LinkdefReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx:130,Availability,Error,Error,130,"//std::cerr << ""Warning: #pragma read not yet handled: "" << include.str() << ""\n"";; // if (!fOwner.AddInclude(include)); // {; // Error("""",tok);; // }",MatchSource.CODE_COMMENT,core/dictgen/src/LinkdefReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx:168,Testability,assert,assert,168,"// Handle a #pragma found by the Preprocessor.; // check whether we care about the pragma - we are a named handler,; // thus this could actually be transformed into an assert:",MatchSource.CODE_COMMENT,core/dictgen/src/LinkdefReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx:168,Testability,assert,assert,168,"// Handle a #pragma found by the Preprocessor.; // check whether we care about the pragma - we are a named handler,; // thus this could actually be transformed into an assert:",MatchSource.CODE_COMMENT,core/dictgen/src/LinkdefReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx:10,Energy Efficiency,Reduce,Reduce,10,"// FIXME: Reduce the code duplication across these collector classes.",MatchSource.CODE_COMMENT,core/dictgen/src/LinkdefReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling-argparse.py:1559,Modifiability,inherit,inheriting,1559,"e names. The (optional) file LinkDef.h looks like:. #ifdef __CLING__. #pragma link off all globals;; #pragma link off all classes;; #pragma link off all functions;. #pragma link C++ class TAxis;; #pragma link C++ class TAttAxis-;; #pragma link C++ class TArrayC-!;; #pragma link C++ class AliEvent+;. #pragma link C++ function StrDup;; #pragma link C++ function operator+(const TString&,const TString&);. #pragma link C++ global gROOT;; #pragma link C++ global gEnv;. #pragma link C++ enum EMessageTypes;. #endif. This file tells rootcling which classes will be persisted on disk and what; entities will trigger automatic load of the shared library which contains; it. A trailing - in the class name tells rootcling to not generate the; Streamer() method. This is necessary for those classes that need a; customized Streamer() method. A trailing ! in the class name tells rootcling; to not generate the operator>>(TBuffer &b, MyClass *&obj) function. This is; necessary to be able to write pointers to objects of classes not inheriting; from TObject. See for an example the source of the TArrayF class.; If the class contains a ClassDef macro, a trailing + in the class; name tells rootcling to generate an automatic Streamer(), i.e. a; streamer that let ROOT do automatic schema evolution. Otherwise, a; trailing + in the class name tells rootcling to generate a ShowMember; function and a Shadow Class. The + option is mutually exclusive with; the - option. For legacy reasons it is not yet the default.; When the linkdef file is not specified a default version exporting; the classes with the names equal to the include files minus the .h; is generated. The default constructor used by the ROOT I/O can be customized by; using the rootcling pragma:; #pragma link C++ ioctortype UserClass;; For example, with this pragma and a class named MyClass,; this method will called the first of the following 3; constructors which exists and is public:; MyClass(UserClass*);; MyClass(TRootIOCtor*);; MyClass",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling-argparse.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling-argparse.py
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling-argparse.py:1156,Performance,load,load,1156,"st argument on the rootcling command line.; 2) Note that the LinkDef file name must contain the string:; LinkDef.h, Linkdef.h or linkdef.h, i.e. NA49_LinkDef.h. Before specifying the first header file one can also add include; file directories to be searched and preprocessor defines, like:; -I$MYPROJECT/include -DDebug=1. NOTA BENE: the dictionaries that will be used within the same project must; have unique names. The (optional) file LinkDef.h looks like:. #ifdef __CLING__. #pragma link off all globals;; #pragma link off all classes;; #pragma link off all functions;. #pragma link C++ class TAxis;; #pragma link C++ class TAttAxis-;; #pragma link C++ class TArrayC-!;; #pragma link C++ class AliEvent+;. #pragma link C++ function StrDup;; #pragma link C++ function operator+(const TString&,const TString&);. #pragma link C++ global gROOT;; #pragma link C++ global gEnv;. #pragma link C++ enum EMessageTypes;. #endif. This file tells rootcling which classes will be persisted on disk and what; entities will trigger automatic load of the shared library which contains; it. A trailing - in the class name tells rootcling to not generate the; Streamer() method. This is necessary for those classes that need a; customized Streamer() method. A trailing ! in the class name tells rootcling; to not generate the operator>>(TBuffer &b, MyClass *&obj) function. This is; necessary to be able to write pointers to objects of classes not inheriting; from TObject. See for an example the source of the TArrayF class.; If the class contains a ClassDef macro, a trailing + in the class; name tells rootcling to generate an automatic Streamer(), i.e. a; streamer that let ROOT do automatic schema evolution. Otherwise, a; trailing + in the class name tells rootcling to generate a ShowMember; function and a Shadow Class. The + option is mutually exclusive with; the - option. For legacy reasons it is not yet the default.; When the linkdef file is not specified a default version exporting; the classes with",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling-argparse.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling-argparse.py
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling-argparse.py:58,Performance,load,loaded,58,"""""""Specify absolute or relative path Clang pcm file to be loaded; The pcm file (module) produced by this invocation of rootcling; will not include any of the declarations already included in the; pcm files loaded via -m. There can be more than one -m; """"""",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling-argparse.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling-argparse.py
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling-argparse.py:206,Performance,load,loaded,206,"""""""Specify absolute or relative path Clang pcm file to be loaded; The pcm file (module) produced by this invocation of rootcling; will not include any of the declarations already included in the; pcm files loaded via -m. There can be more than one -m; """"""",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling-argparse.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling-argparse.py
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling-argparse.py:93,Modifiability,variab,variable,93,"""""""Do not store the headers' directories in the dictionary; Instead, rely on the environment variable $ROOT_INCLUDE_PATH at runtime; """"""",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling-argparse.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling-argparse.py
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling-argparse.py:321,Performance,load,load,321,"""""""Specify libraries needed by the header files parsed; This feature is used by ACliC (the automatic library generator).; Rootcling will read the content of xxx.in for a list of rootmap files (see; rlibmap). Rootcling will read these files and use them to deduce a list of; libraries that are needed to properly link and load this dictionary. This; list of libraries is saved in the first line of the file xxx.out; the; remaining lines contains the list of classes for which this run of; rootcling produced a dictionary; """"""",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling-argparse.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling-argparse.py
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:11,Availability,error,error,11,"// prevent error coming from clang/AST/Attrs.inc",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:36,Performance,perform,performs,36,"// Maybe too ugly? let's see how it performs.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:17,Modifiability,Variab,VariableSelectionRules,17,"// See if in the VariableSelectionRules there are attributes and names with; // which we can annotate.; // We may look for a smarter algorithm.; // Nothing to do then ...",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:8,Testability,test,test,8,"/* This test is here since in ROOT5, when using genreflex,; * for pods, iotype is ignored */",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:140,Performance,load,load,140,"// END ROOT PCMS; // The rest of the lines are not changed to leave in place the system which; // works with bulk header parsing on library load.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:39,Modifiability,inherit,inherit,39,"// CXXMethodDecl,FieldDecl and VarDecl inherit from NamedDecl; // See: http://clang.llvm.org/doxygen/classclang_1_1DeclaratorDecl.html",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:66,Modifiability,variab,variable,66,"// This check is here to avoid asserts in debug mode (LLVMDEV env variable set)",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:25,Safety,avoid,avoid,25,"// This check is here to avoid asserts in debug mode (LLVMDEV env variable set)",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:31,Testability,assert,asserts,31,"// This check is here to avoid asserts in debug mode (LLVMDEV env variable set)",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:102,Deployability,Update,Update,102,"// After the putenv below, gRootDir might point to the old ROOTSYS; // entry, i.e. to deleted memory. Update it.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:12,Performance,load,load,12,"// We never load namespaces on their own.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:118,Performance,load,loaded,118,"////////////////////////////////////////////////////////////////////////////////; /// Fill the map of libraries to be loaded in presence of a class; /// Transparently support the old and new rootmap file format",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:40,Availability,error,error,40,"// We don't want to generate duplicated error messages in several dictionaries (when generating temporaries)",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:46,Integrability,message,messages,46,"// We don't want to generate duplicated error messages in several dictionaries (when generating temporaries)",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:3,Safety,Detect,Detect,3,"// Detect if the class has a ClassDef",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:279,Availability,error,error,279,"////////////////////////////////////////////////////////////////////////////////; /// GrabIndex returns a static string (so use it or copy it immediately, do not; /// call GrabIndex twice in the same expression) containing the size of the; /// array data member.; /// In case of error, or if the size is not specified, GrabIndex returns 0.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:137,Availability,error,error,137,"// In case of VersionID<=0 write dummy streamer only calling; // its base class Streamer(s). If no base class(es) let Streamer; // print error message, i.e. this Streamer should never have been called.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:143,Integrability,message,message,143,"// In case of VersionID<=0 write dummy streamer only calling; // its base class Streamer(s). If no base class(es) let Streamer; // print error message, i.e. this Streamer should never have been called.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:14,Testability,test,test,14,"// No need to test for static, there are not in this list.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:186,Performance,Optimiz,Optimize,186,"// This is always good. However, in case of a pointer; // to an object that is guaranteed to be there and not; // being referenced by other objects we could use; // xx->Streamer(b);; // Optimize this with control statement in title.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:52,Availability,Error,Error,52,"//R__t.Streamer(R__b);\n"");; //VP if (i == 0); //VP Error(0, ""*** Datamember %s::%s: object has no Streamer() method (need manual intervention)\n"",; //VP fullname, field_iter->getName().str());; //VP fprintf(fp, "" //%s.Streamer(R__b);\n"", m.Name());",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:109,Integrability,inject,injected,109,"////////////////////////////////////////////////////////////////////////////////; /// Write the extra header injected into the module:; /// umbrella header if (umbrella) else content header.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:109,Security,inject,injected,109,"////////////////////////////////////////////////////////////////////////////////; /// Write the extra header injected into the module:; /// umbrella header if (umbrella) else content header.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:211,Availability,error,error,211,"////////////////////////////////////////////////////////////////////////////////; /// Includes all given headers in the interpreter. Returns true when we could; /// include the headers and otherwise false on an error when including.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:184,Deployability,update,updates,184,"////////////////////////////////////////////////////////////////////////////////; /// Extract the proper autoload key for nested classes; /// The routine does not erase the name, just updates it",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:146,Integrability,rout,routine,146,"////////////////////////////////////////////////////////////////////////////////; /// Extract the proper autoload key for nested classes; /// The routine does not erase the name, just updates it",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:33,Deployability,update,update,33,"// If the context is a class, we update the name",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:54,Safety,avoid,avoid,54,"// Keep track of the classes keys; // This is done to avoid duplications of keys with typedefs",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:7,Modifiability,variab,variables,7,"// And variables.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:86,Performance,Perform,Performance,86,"////////////////////////////////////////////////////////////////////////////////; /// Performance is not critical here.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:275,Safety,avoid,avoid,275,"// Loop on selected classes. If they don't have the attribute ""rootmap""; // set to ""false"", store them in the list of classes for the rootmap; // Returns 0 in case of success and 1 in case of issues.; // An unordered_set to keep track of the existing classes.; // We want to avoid duplicates there as they may hint to a serious corruption",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:253,Performance,perform,performed,253,"// The ""isGenreflex"" parameter allows the distinction between; // genreflex and rootcling only for the treatment of collections which; // are data members. To preserve the behaviour of the original; // genreflex and rootcling tools, if the selection is performed with; // genreflex, data members with collection type do not trigger the; // selection of the collection type",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:20,Deployability,update,update,20,"// This is to allow update of existing files",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:70,Security,access,accessing,70,"// Make sure the file is closed, mostly for Windows FS, also when; // accessing it from a Linux VM via a shared folder",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:70,Security,access,accessing,70,"// Make sure the file is closed, mostly for Windows FS, also when; // accessing it from a Linux VM via a shared folder",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:76,Deployability,release,released,76,"// Sometimes files cannot be renamed on Windows if they don't have; // been released by the system. So just copy them and try to delete; // the old one afterwards.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:3,Safety,Avoid,Avoid,3,"// Avoid infinite recursion",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:123,Safety,avoid,avoid,123,"// Propagate to the classes map only if this is not a template.; // The header is then used as autoload key and we want to avoid duplicates.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:20,Modifiability,variab,variables,20,"// The same for the variables:",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:222,Availability,Error,Error,222,"// Classes; /*; for (auto const & annRcd : scan.fSelectedClasses) {; const auto rcdDeclPtr = annRcd.GetRecordDecl();. int retCode = FwdDeclFromRcdDecl(*rcdDeclPtr, interp, buffer);; if (-1 == retCode) {; ROOT::TMetaUtils::Error(""GenerateFwdDeclString"",; ""Error generating fwd decl for class %s\n"",; annRcd.GetNormalizedName());; return emptyString;; }; if (retCode == 0 && fwdDecls.insert(buffer).second); fwdDeclString += ""\"""" + buffer + ""\""\n"";; }; */; // Build the input for a transaction containing all of the selected declarations; // Cling will produce the fwd declaration payload.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:255,Availability,Error,Error,255,"// Classes; /*; for (auto const & annRcd : scan.fSelectedClasses) {; const auto rcdDeclPtr = annRcd.GetRecordDecl();. int retCode = FwdDeclFromRcdDecl(*rcdDeclPtr, interp, buffer);; if (-1 == retCode) {; ROOT::TMetaUtils::Error(""GenerateFwdDeclString"",; ""Error generating fwd decl for class %s\n"",; annRcd.GetNormalizedName());; return emptyString;; }; if (retCode == 0 && fwdDecls.insert(buffer).second); fwdDeclString += ""\"""" + buffer + ""\""\n"";; }; */; // Build the input for a transaction containing all of the selected declarations; // Cling will produce the fwd declaration payload.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:244,Availability,Error,Error,244,"// Functions; // for (auto const& fcnDeclPtr : scan.fSelectedFunctions){; // int retCode = FwdDeclFromFcnDecl(*fcnDeclPtr, interp, buffer);; // newFwdDeclString += Decl2FwdDecl(*fcnDeclPtr,interp);; // if (-1 == retCode){; // ROOT::TMetaUtils::Error(""GenerateFwdDeclString"",; // ""Error generating fwd decl for function %s\n"",; // fcnDeclPtr->getNameAsString().c_str());; // return emptyString;; // }; // if (retCode == 0 && fwdDecls.insert(buffer).second); // fwdDeclString+=""\""""+buffer+""\""\n"";; // }",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:280,Availability,Error,Error,280,"// Functions; // for (auto const& fcnDeclPtr : scan.fSelectedFunctions){; // int retCode = FwdDeclFromFcnDecl(*fcnDeclPtr, interp, buffer);; // newFwdDeclString += Decl2FwdDecl(*fcnDeclPtr,interp);; // if (-1 == retCode){; // ROOT::TMetaUtils::Error(""GenerateFwdDeclString"",; // ""Error generating fwd decl for function %s\n"",; // fcnDeclPtr->getNameAsString().c_str());; // return emptyString;; // }; // if (retCode == 0 && fwdDecls.insert(buffer).second); // fwdDeclString+=""\""""+buffer+""\""\n"";; // }",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:134,Performance,Perform,Performing,134,"////////////////////////////////////////////////////////////////////////////////; /// Check if the argument is a sane cling argument. Performing the following checks:; /// 1) It does not start with ""--"" and is not the --param option.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:2,Security,Hash,HashLoc,2,/*HashLoc*/,MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:282,Availability,resilien,resilient,282,"// rootcling pre-includes things such as Rtypes.h. This means that ACLiC can; // call rootcling asking it to create a module for a file with no #includes; // but relying on things from Rtypes.h such as the ClassDef macro.; //; // When rootcling starts building a module, it becomes resilient to the; // outside environment and pre-included files have no effect. This hook; // informs rootcling when a new submodule is being built so that it can; // make Core.Rtypes.h visible.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:10,Energy Efficiency,Reduce,Reduce,10,"// FIXME: Reduce to Core.Rtypes.h.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:259,Availability,error,error,259,"////////////////////////////////////////////////////////////////////////////////; /// Custom diag client for clang that verifies that each implicitly build module; /// is a system module. If not, it will let the current rootcling invocation; /// fail with an error. All other diags beside module build remarks will be; /// forwarded to the passed child diag client.; ///; /// The reason why we need this is that if we built implicitly a C++ module; /// that belongs to a ROOT dictionary, then we will miss information generated; /// by rootcling in this file (e.g. the source code comments to annotation; /// attributes transformation will be missing in the module file).",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:335,Availability,error,error,335,"// A dictionary module could build implicitly a set of implicit modules.; // For example, the Core module builds libc.pcm and std.pcm implicitly.; // Those modules do not require I/O information and it is okay to build; // them as part of another module.; // However, we can build a module which requires I/O implictly which is; // an error because rootcling is not able to generate the corresponding; // dictionary.; // If we build a I/O requiring module implicitly we should display; // an error unless -mSystemByproducts or -mByproduct were specified.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:492,Availability,error,error,492,"// A dictionary module could build implicitly a set of implicit modules.; // For example, the Core module builds libc.pcm and std.pcm implicitly.; // Those modules do not require I/O information and it is okay to build; // them as part of another module.; // However, we can build a module which requires I/O implictly which is; // an error because rootcling is not able to generate the corresponding; // dictionary.; // If we build a I/O requiring module implicitly we should display; // an error unless -mSystemByproducts or -mByproduct were specified.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:12,Availability,error,error,12,"// Suppress error dialogs to avoid hangs on build nodes.; // One can use an environment variable (Cling_GuiOnAssert) to enable; // the error dialogs.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:135,Availability,error,error,135,"// Suppress error dialogs to avoid hangs on build nodes.; // One can use an environment variable (Cling_GuiOnAssert) to enable; // the error dialogs.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:88,Modifiability,variab,variable,88,"// Suppress error dialogs to avoid hangs on build nodes.; // One can use an environment variable (Cling_GuiOnAssert) to enable; // the error dialogs.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:29,Safety,avoid,avoid,29,"// Suppress error dialogs to avoid hangs on build nodes.; // One can use an environment variable (Cling_GuiOnAssert) to enable; // the error dialogs.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:69,Integrability,interface,interface,69,"// FIXME: This is totally the wrong concept. We should not expose an interface; // to be able to tell which component is in the pch and which needs extra; // scaffolding for interactive use. Moreover, some of the ROOT components are; // partially in the pch and this option makes it impossible to express that.; // We should be able to get the list of headers in the pch early and scan; // through them.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:59,Security,expose,expose,59,"// FIXME: This is totally the wrong concept. We should not expose an interface; // to be able to tell which component is in the pch and which needs extra; // scaffolding for interactive use. Moreover, some of the ROOT components are; // partially in the pch and this option makes it impossible to express that.; // We should be able to get the list of headers in the pch early and scan; // through them.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:353,Modifiability,variab,variable,353,"////////////////////////////////////////////////////////////////////////////////; /// Returns true iff a given module (and its submodules) contains all headers; /// needed by the given ModuleGenerator.; /// The names of all header files that are needed by the ModuleGenerator but are; /// not in the given module will be inserted into the MissingHeader variable.; /// Returns true iff the PCH was successfully generated.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:138,Performance,load,loaded,138,"// Go through the list of headers that are required by the ModuleGenerator; // and check for each header if it's in one of the modules we loaded.; // If not, make sure we fail at the end and mark the header as missing.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:2,Performance,Cache,CacheFail,2,/*CacheFail*/,MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:23,Safety,abort,abort,23,"// Inform the user and abort if we can't find a module with a given name.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:16,Performance,load,loaded,16,"// Check if the loaded module covers all headers that were specified; // by the user on the command line. This is an integrity check to; // ensure that our used module map is not containing extraneous headers.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:117,Security,integrity,integrity,117,"// Check if the loaded module covers all headers that were specified; // by the user on the command line. This is an integrity check to; // ensure that our used module map is not containing extraneous headers.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:29,Availability,error,error,29,"// FIXME: Upgrade this to an error once modules are stable.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:10,Deployability,Upgrade,Upgrade,10,"// FIXME: Upgrade this to an error once modules are stable.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:55,Availability,Down,Downgrade,55,"// We may have an umbrella and forgot to add the flag. Downgrade the; // warning into an information message.; // FIXME: We should open the umbrella, extract the set of header files; // and check if they exist in the modulemap.; // FIXME: We should also check if the header files are specified in the; // modulemap file as they appeared in the rootcling invocation, i.e.; // if we passed rootcling ... -I/some/path somedir/some/header, the; // modulemap should contain module M { header ""somedir/some/header"" }; // This way we will make sure the module is properly activated.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:101,Integrability,message,message,101,"// We may have an umbrella and forgot to add the flag. Downgrade the; // warning into an information message.; // FIXME: We should open the umbrella, extract the set of header files; // and check if they exist in the modulemap.; // FIXME: We should also check if the header files are specified in the; // modulemap file as they appeared in the rootcling invocation, i.e.; // if we passed rootcling ... -I/some/path somedir/some/header, the; // modulemap should contain module M { header ""somedir/some/header"" }; // This way we will make sure the module is properly activated.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:128,Availability,failure,failure,128,"// If warnings are disabled with the current verbosity settings, lower; // it so that the user sees the warning that caused the failure.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:26,Availability,error,error,26,"// Prevent the following #error: The C++ Standard Library forbids macroizing keywords.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:129,Modifiability,variab,variable,129,"// Adding -fmodules to the args will break lexing with __CINT__ defined,; // and we actually do lex with __CINT__ and reuse this variable later,; // we have to copy it now.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:62,Modifiability,config,configure,62,"// We just pass -fmodules, the CIFactory will do the rest and configure; // clang correctly once it sees this flag.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:241,Integrability,depend,dependencies,241,"// FIXME: This is a horrible workaround to fix the incremental builds.; // The enumerated modules are built by clang impicitly based on #include of; // a header which is contained within that module. The build system has; // no way to track dependencies on them and trigger a rebuild.; // A possible solution can be to disable completely the implicit build of; // modules and each module to be built by rootcling. We need to teach; // rootcling how to build modules with no IO support.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:16,Availability,error,error,16,"// There was an error.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:31,Performance,load,loaded,31,"// We are now ready (enough is loaded) to init the list of opaque typedefs.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:41,Availability,error,error,41,"// if the linkdef was not last, issue an error.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:83,Safety,safe,safe,83,"// coverity[tainted_data] The OS should already limit the argument size, so we are safe here",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:167,Availability,down,down,167,"// In order to not have to add the equivalent to -I${PWD} to the; // command line, include the complete file name, even if it is a; // full pathname, when we write it down in the dictionary.; // Note: have -I${PWD} means in that (at least in the case of; // ACLiC) we inadvertently pick local file that have the same; // name as system header (e.g. new or list) and -iquote has not; // equivalent on some platforms.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:32,Availability,failure,failure,32,"// Return here to propagate the failure up to the build system",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:17,Security,validat,validate,17,"// If we want to validate the selection only, we just quit.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:32,Availability,error,error,32,"// SELECTION LOOP; // Check for error in the class layout before doing anything else.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:74,Availability,error,error,74,"// Be a little bit makefile friendly and remove the dictionary in case of error.; // We could add an option -k to keep the file even in case of error.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:144,Availability,error,error,144,"// Be a little bit makefile friendly and remove the dictionary in case of error.; // We could add an option -k to keep the file even in case of error.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:24,Integrability,depend,depending,24,"// Write the module/PCH depending on what mode we are on",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:13,Availability,error,errors,13,"// Check for errors in module generation",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:44,Availability,error,errors,44,"// Before returning, rename the files if no errors occurred; // otherwise clean them to avoid remnants (see ROOT-10015)",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:88,Safety,avoid,avoid,88,"// Before returning, rename the files if no errors occurred; // otherwise clean them to avoid remnants (see ROOT-10015)",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:8,Testability,test,test,8,"// Just test the syntax of the selection file",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:721,Integrability,Wrap,Wrap,721,"////////////////////////////////////////////////////////////////////////////////; /// Translate the arguments of genreflex into rootcling ones and forward them; /// to the RootCling function.; /// These are two typical genreflex and rootcling commandlines; /// 1) genreflex header1.h [header2.h ...] [options] [preprocessor options]; /// 2) rootcling [-v] [-v0-4] [-f] [out.cxx] [-s sharedlib.so] [-m pcmfilename]; /// header1.h[{+,-}][!] ..headerN.h[{+,-}][!] [{LinkDef.h,selectionRules.xml}]; /// The rules with which the arguments are translated are (1st column genreflex):; /// --debug -v4; /// --quiet -v0; /// -o ofile positional arg after -f; /// -s selection file Last argument of the call; /// --fail_on_warning Wrap ROOT::TMetaUtils::Warning and throw if selected; ///; /// New arguments:; /// -l --library targetLib name (new) -s targetLib name; /// -m pcmname (can be many -m) (new) -m pcmname (can be many -m); /// --rootmap -rmf (new); /// --rootmap-lib -rml (new); ///; /// genreflex options which rise warnings (feedback is desirable); /// --no_membertypedefs (it should be irrelevant); /// --no_templatetypedefs (it should be irrelevant); ///; /// genreflex options which are ignored (know for sure they are not needed); /// --pool, --dataonly; /// --interpreteronly; /// --gccxml{path,opt,post}; ///; ///; /// Exceptions; /// The --deep option of genreflex is passed as function parameter to rootcling; /// since it's not needed at the moment there.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:1028,Usability,feedback,feedback,1028,"////////////////////////////////////////////////////////////////////////////////; /// Translate the arguments of genreflex into rootcling ones and forward them; /// to the RootCling function.; /// These are two typical genreflex and rootcling commandlines; /// 1) genreflex header1.h [header2.h ...] [options] [preprocessor options]; /// 2) rootcling [-v] [-v0-4] [-f] [out.cxx] [-s sharedlib.so] [-m pcmfilename]; /// header1.h[{+,-}][!] ..headerN.h[{+,-}][!] [{LinkDef.h,selectionRules.xml}]; /// The rules with which the arguments are translated are (1st column genreflex):; /// --debug -v4; /// --quiet -v0; /// -o ofile positional arg after -f; /// -s selection file Last argument of the call; /// --fail_on_warning Wrap ROOT::TMetaUtils::Warning and throw if selected; ///; /// New arguments:; /// -l --library targetLib name (new) -s targetLib name; /// -m pcmname (can be many -m) (new) -m pcmname (can be many -m); /// --rootmap -rmf (new); /// --rootmap-lib -rml (new); ///; /// genreflex options which rise warnings (feedback is desirable); /// --no_membertypedefs (it should be irrelevant); /// --no_templatetypedefs (it should be irrelevant); ///; /// genreflex options which are ignored (know for sure they are not needed); /// --pool, --dataonly; /// --interpreteronly; /// --gccxml{path,opt,post}; ///; ///; /// Exceptions; /// The --deep option of genreflex is passed as function parameter to rootcling; /// since it's not needed at the moment there.",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:108,Testability,test,testing,108,"// The verbosity: debug wins over quiet; //std::string verbosityOption(""-v4""); // To be uncommented for the testing phase. It should be -v",MatchSource.CODE_COMMENT,core/dictgen/src/rootcling_impl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/Scanner.cxx:13,Performance,cache,cache,13,"// Build the cache for all selection rules",MatchSource.CODE_COMMENT,core/dictgen/src/Scanner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/Scanner.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/Scanner.cxx:113,Testability,test,test,113,"// in case it is implicit we don't create a builder; // [Note: Can N be nullptr?, is so 'ShouldVisitDecl' should test or we should test sooner]",MatchSource.CODE_COMMENT,core/dictgen/src/Scanner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/Scanner.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/Scanner.cxx:131,Testability,test,test,131,"// in case it is implicit we don't create a builder; // [Note: Can N be nullptr?, is so 'ShouldVisitDecl' should test or we should test sooner]",MatchSource.CODE_COMMENT,core/dictgen/src/Scanner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/Scanner.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/Scanner.cxx:17,Integrability,depend,dependent,17,"// Do not select dependent types.",MatchSource.CODE_COMMENT,core/dictgen/src/Scanner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/Scanner.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/Scanner.cxx:59,Integrability,depend,dependency,59,"// Pass on any declaration. This is usually used to record dependency.; // Since rootcint see C++ compliant header files, we can assume that; // if a forward declaration or declaration has been inserted, the; // classes for which we are creating a dictionary will be using; // them either directly or indirectly. Any false positive can be; // resolved by removing the spurrious dependency in the (user) header; // files.",MatchSource.CODE_COMMENT,core/dictgen/src/Scanner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/Scanner.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/Scanner.cxx:378,Integrability,depend,dependency,378,"// Pass on any declaration. This is usually used to record dependency.; // Since rootcint see C++ compliant header files, we can assume that; // if a forward declaration or declaration has been inserted, the; // classes for which we are creating a dictionary will be using; // them either directly or indirectly. Any false positive can be; // resolved by removing the spurrious dependency in the (user) header; // files.",MatchSource.CODE_COMMENT,core/dictgen/src/Scanner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/Scanner.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/Scanner.cxx:58,Security,access,access,58,"// Before adding the decl to the selected ones, check its access.; // We do not yet support I/O of private or protected classes.; // See ROOT-7450.; // Additionally, private declarations lead to uncompilable code, so just ignore (ROOT-9112).",MatchSource.CODE_COMMENT,core/dictgen/src/Scanner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/Scanner.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx:199,Availability,avail,available,199,"// Currently rootcling does not need any information on enums, except; // for the PCM / proto classes that register them to build TEnums without; // parsing. This can be removed once (real) PCMs are available.; // Note that the code below was *not* properly matching the case; // typedef enum { ... } abc;; // as the typedef is stored as an anonymous EnumDecl in clang.; // It is likely that using a direct lookup on the name would; // return the appropriate typedef (and then we would need to; // select 'both' the typedef and the anonymous enums.",MatchSource.CODE_COMMENT,core/dictgen/src/SelectionRules.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx:15,Usability,simpl,simple,15,"// Implement a simple matching for functions",MatchSource.CODE_COMMENT,core/dictgen/src/SelectionRules.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx:147,Availability,Error,Error,147,"// std::string proto;; // if (GetFunctionPrototype(D,proto)); // std::cout<<""\n\tFunction prototype: ""<<str_name + proto;; // else; // std::cout<<""Error in prototype formation"";",MatchSource.CODE_COMMENT,core/dictgen/src/SelectionRules.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx:75,Modifiability,variab,variables,75,"// iterate through all the rules; // we call this method only for genrefex variables, functions and enums - it is simpler than the class case:; // if we have No - it is veto even if we have explicit yes as well",MatchSource.CODE_COMMENT,core/dictgen/src/SelectionRules.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx:114,Usability,simpl,simpler,114,"// iterate through all the rules; // we call this method only for genrefex variables, functions and enums - it is simpler than the class case:; // if we have No - it is veto even if we have explicit yes as well",MatchSource.CODE_COMMENT,core/dictgen/src/SelectionRules.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx:75,Modifiability,variab,variables,75,"// iterate through all the rules; // we call this method only for genrefex variables, functions and enums - it is simpler than the class case:; // if we have No - it is veto even if we have explicit yes as well",MatchSource.CODE_COMMENT,core/dictgen/src/SelectionRules.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx:114,Usability,simpl,simpler,114,"// iterate through all the rules; // we call this method only for genrefex variables, functions and enums - it is simpler than the class case:; // if we have No - it is veto even if we have explicit yes as well",MatchSource.CODE_COMMENT,core/dictgen/src/SelectionRules.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx:75,Modifiability,variab,variables,75,"// iterate through all the rules; // we call this method only for genrefex variables, functions and enums - it is simpler than the class case:; // if we have No - it is veto even if we have explicit yes as well",MatchSource.CODE_COMMENT,core/dictgen/src/SelectionRules.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx:114,Usability,simpl,simpler,114,"// iterate through all the rules; // we call this method only for genrefex variables, functions and enums - it is simpler than the class case:; // if we have No - it is veto even if we have explicit yes as well",MatchSource.CODE_COMMENT,core/dictgen/src/SelectionRules.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx:544,Availability,error,error,544,"// for(const auto& selRule: fFunctionSelectionRules) {; // if (!selRule.GetMatchFound() && !GetHasFileNameRule()) {; // // Here the slow methods can be used; // std::string name;; // if (selRule.GetAttributeValue(""proto_pattern"", name)) {; // // keep it; // } else if (selRule.GetAttributeValue(""proto_name"", name)) {; // // keep it; // } else if (selRule.GetAttributeValue(""pattern"", name)) {; // // keep it; // } else if (selRule.GetAttributeValue(""name"", name)) {; // // keept it; // } else {; // name.clear();; // }; // // Make it soft, no error - just warnings; // std::cout<<""Warning - unused function rule: ""<<name<<std::endl;; // // if (IsSelectionXMLFile()){; // // std::cout<<""Warning - unused function rule: ""<<name<<std::endl;; // // }; // // else {; // // std::cout<<""Error - unused function rule: ""<<name<<std::endl;; // // }; // if (name.length() == 0) {; // selRule.PrintAttributes(std::cout,3);; // }; // }; //; // }",MatchSource.CODE_COMMENT,core/dictgen/src/SelectionRules.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx:781,Availability,Error,Error,781,"// for(const auto& selRule: fFunctionSelectionRules) {; // if (!selRule.GetMatchFound() && !GetHasFileNameRule()) {; // // Here the slow methods can be used; // std::string name;; // if (selRule.GetAttributeValue(""proto_pattern"", name)) {; // // keep it; // } else if (selRule.GetAttributeValue(""proto_name"", name)) {; // // keep it; // } else if (selRule.GetAttributeValue(""pattern"", name)) {; // // keep it; // } else if (selRule.GetAttributeValue(""name"", name)) {; // // keept it; // } else {; // name.clear();; // }; // // Make it soft, no error - just warnings; // std::cout<<""Warning - unused function rule: ""<<name<<std::endl;; // // if (IsSelectionXMLFile()){; // // std::cout<<""Warning - unused function rule: ""<<name<<std::endl;; // // }; // // else {; // // std::cout<<""Error - unused function rule: ""<<name<<std::endl;; // // }; // if (name.length() == 0) {; // selRule.PrintAttributes(std::cout,3);; // }; // }; //; // }",MatchSource.CODE_COMMENT,core/dictgen/src/SelectionRules.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx:505,Usability,clear,clear,505,"// for(const auto& selRule: fFunctionSelectionRules) {; // if (!selRule.GetMatchFound() && !GetHasFileNameRule()) {; // // Here the slow methods can be used; // std::string name;; // if (selRule.GetAttributeValue(""proto_pattern"", name)) {; // // keep it; // } else if (selRule.GetAttributeValue(""proto_name"", name)) {; // // keep it; // } else if (selRule.GetAttributeValue(""pattern"", name)) {; // // keep it; // } else if (selRule.GetAttributeValue(""name"", name)) {; // // keept it; // } else {; // name.clear();; // }; // // Make it soft, no error - just warnings; // std::cout<<""Warning - unused function rule: ""<<name<<std::endl;; // // if (IsSelectionXMLFile()){; // // std::cout<<""Warning - unused function rule: ""<<name<<std::endl;; // // }; // // else {; // // std::cout<<""Error - unused function rule: ""<<name<<std::endl;; // // }; // if (name.length() == 0) {; // selRule.PrintAttributes(std::cout,3);; // }; // }; //; // }",MatchSource.CODE_COMMENT,core/dictgen/src/SelectionRules.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx:12,Performance,cache,cache,12,"// Fill the cache of every selection rule",MatchSource.CODE_COMMENT,core/dictgen/src/SelectionRules.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/SelectionRules.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx:42,Safety,avoid,avoid,42,"// Add a random string to the filename to avoid races.",MatchSource.CODE_COMMENT,core/dictgen/src/TModuleGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx:38,Performance,load,loading,38,"// Dictionary initialization code for loading the module",MatchSource.CODE_COMMENT,core/dictgen/src/TModuleGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx:115,Availability,error,errors,115,"// Increase the value of the diagnostics pointing out from which; // dictionary this payload comes from in case of errors",MatchSource.CODE_COMMENT,core/dictgen/src/TModuleGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx:490,Security,hash,hash,490,"// Anticipate the undefines.; // Suppose to have a namespace called ""declarations"" used in R5 for template; // instantiations in the header given to genreflex.; // Now, in this namespace, objects with some names, typically dummy, will be; // present.; // If you give such headers to cling to parse, problems will occour, as the; // names appear multiple times. One possible solution is to get out of this; // with preprocessor defines given to genreflex, redefining ""declarations""; // to a hash or <project>_<package> via the build system.",MatchSource.CODE_COMMENT,core/dictgen/src/TModuleGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx:3,Availability,Recover,Recover,3,"// Recover old genreflex behaviour, i.e. do not print warnings due to glitches; // in the headers at runtime. This is not synonym of ignoring warnings as they; // will be printed at dictionary generation time.; // In order to do this we leverage the diagnostic pragmas and, since there is no; // way to express as a pragma the option ""-Wno-deprecated"" the; // _BACKWARD_BACKWARD_WARNING_H macro, used to avoid to go through; // backward/backward_warning.h.",MatchSource.CODE_COMMENT,core/dictgen/src/TModuleGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx:3,Safety,Recover,Recover,3,"// Recover old genreflex behaviour, i.e. do not print warnings due to glitches; // in the headers at runtime. This is not synonym of ignoring warnings as they; // will be printed at dictionary generation time.; // In order to do this we leverage the diagnostic pragmas and, since there is no; // way to express as a pragma the option ""-Wno-deprecated"" the; // _BACKWARD_BACKWARD_WARNING_H macro, used to avoid to go through; // backward/backward_warning.h.",MatchSource.CODE_COMMENT,core/dictgen/src/TModuleGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx:404,Safety,avoid,avoid,404,"// Recover old genreflex behaviour, i.e. do not print warnings due to glitches; // in the headers at runtime. This is not synonym of ignoring warnings as they; // will be printed at dictionary generation time.; // In order to do this we leverage the diagnostic pragmas and, since there is no; // way to express as a pragma the option ""-Wno-deprecated"" the; // _BACKWARD_BACKWARD_WARNING_H macro, used to avoid to go through; // backward/backward_warning.h.",MatchSource.CODE_COMMENT,core/dictgen/src/TModuleGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx:169,Modifiability,variab,variables,169,"////////////////////////////////////////////////////////////////////////////////; /// Write a header file describing the content of this module; /// through a series of variables inside the namespace; /// ROOT::Dict::[DictionaryName]. Each variable is an array of string; /// literals, with a const char* of 0 being the last element, e.g.; /// ROOT::Dict::_DictName::arrIncludes[] = { ""A.h"", ""B.h"", 0 };",MatchSource.CODE_COMMENT,core/dictgen/src/TModuleGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx:240,Modifiability,variab,variable,240,"////////////////////////////////////////////////////////////////////////////////; /// Write a header file describing the content of this module; /// through a series of variables inside the namespace; /// ROOT::Dict::[DictionaryName]. Each variable is an array of string; /// literals, with a const char* of 0 being the last element, e.g.; /// ROOT::Dict::_DictName::arrIncludes[] = { ""A.h"", ""B.h"", 0 };",MatchSource.CODE_COMMENT,core/dictgen/src/TModuleGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx:184,Modifiability,variab,variable,184,"////////////////////////////////////////////////////////////////////////////////; /// Return true if the header is found in the include paths; /// in this case also fill the full path variable with the full path.",MatchSource.CODE_COMMENT,core/dictgen/src/TModuleGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/VariableSelectionRule.cxx:28,Modifiability,Variab,VariableSelectionRule,28,"// @(#)root/core/utils:$Id: VariableSelectionRule.cxx 41697 2011-11-01 21:03:41Z pcanal $; // Author: Velislava Spasova September 2010; /*************************************************************************; * Copyright (C) 1995-2011, Rene Brun, Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // VariableSelectionRule //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/dictgen/src/VariableSelectionRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/VariableSelectionRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/VariableSelectionRule.cxx:584,Modifiability,Variab,VariableSelectionRule,584,"// @(#)root/core/utils:$Id: VariableSelectionRule.cxx 41697 2011-11-01 21:03:41Z pcanal $; // Author: Velislava Spasova September 2010; /*************************************************************************; * Copyright (C) 1995-2011, Rene Brun, Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // VariableSelectionRule //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/dictgen/src/VariableSelectionRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/VariableSelectionRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:210,Availability,error,error,210,/*; This function Gets the next tag from teh input file stream; file - the open input stream; out - we return the tag through that parameter; lineCount - we are counting the line numbers here in order to print error messages in case of an error; */,MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:239,Availability,error,error,239,/*; This function Gets the next tag from teh input file stream; file - the open input stream; out - we return the tag through that parameter; lineCount - we are counting the line numbers here in order to print error messages in case of an error; */,MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:216,Integrability,message,messages,216,/*; This function Gets the next tag from teh input file stream; file - the open input stream; out - we return the tag through that parameter; lineCount - we are counting the line numbers here in order to print error messages in case of an error; */,MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:65,Availability,error,error,65,"// if angleBraceLevel = true, we have < outside quotes - this is error",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:308,Availability,error,error,308,"/////////////////////////////////////////////////////////////////////////////////////////; /*; We Get the attributes (if any) of the tag as {attribute_name, attribute_value} couples; If there are no attributes, I don't fill the out vector and after that in the Parse(); method check if out is empty. All the error handling conserning attributes is done here; and this is the reason why the logic is somtimes a bit obscure.; */",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:390,Testability,log,logic,390,"/////////////////////////////////////////////////////////////////////////////////////////; /*; We Get the attributes (if any) of the tag as {attribute_name, attribute_value} couples; If there are no attributes, I don't fill the out vector and after that in the Parse(); method check if out is empty. All the error handling conserning attributes is done here; and this is the reason why the logic is somtimes a bit obscure.; */",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:7,Availability,ERROR,ERROR,7,"//ELSE ERROR HANDLING; - no need for it - I check in Parse(); //cut off any last spaces, tabs or end of lines",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:343,Safety,detect,detect,343,"/*; The logic here is the following - we have bool name - it shows if we have read (or are reading) an attribute name; bool equalfound - shows if we have found the = symbol after the name; bool value - shows if we have found or are reading the attribute value; bool newattr - do we have other attributes to read; char lastsymbol - I use it to detect a situation like name = xx""value""; */",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:8,Testability,log,logic,8,"/*; The logic here is the following - we have bool name - it shows if we have read (or are reading) an attribute name; bool equalfound - shows if we have found the = symbol after the name; bool value - shows if we have found or are reading the attribute value; bool newattr - do we have other attributes to read; char lastsymbol - I use it to detect a situation like name = xx""value""; */",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:31,Availability,error,error,31,"// if no name was read, report error (i.e. <class =""x"">)",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:151,Availability,Error,Error,151,"// Lift this: one may had an empty attribute value; // if (attr_value.length() == 0) { // checks if the attribute value is empty; // ROOT::TMetaUtils::Error(0,""Attribute - missing attibute value!\n"");; // return false;; // }; // creates new Attributes object and pushes it back in the vector; // then Sets the variables in the initial state - if there are other attributes to be read; // For the moment the proto pattern is not implemented. The current ROOT6 architecture; // relies on ABI compatibility for calling functions, no stub functions are present.; // The concept of selecting/excluding functions is not defined.; // if (attr_name == ""proto_pattern"") {; // printf(""XMLReader::GetAttributes(): proto_pattern selection not implemented yet!\n"");; // }",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:310,Modifiability,variab,variables,310,"// Lift this: one may had an empty attribute value; // if (attr_value.length() == 0) { // checks if the attribute value is empty; // ROOT::TMetaUtils::Error(0,""Attribute - missing attibute value!\n"");; // return false;; // }; // creates new Attributes object and pushes it back in the vector; // then Sets the variables in the initial state - if there are other attributes to be read; // For the moment the proto pattern is not implemented. The current ROOT6 architecture; // relies on ABI compatibility for calling functions, no stub functions are present.; // The concept of selecting/excluding functions is not defined.; // if (attr_name == ""proto_pattern"") {; // printf(""XMLReader::GetAttributes(): proto_pattern selection not implemented yet!\n"");; // }",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:530,Testability,stub,stub,530,"// Lift this: one may had an empty attribute value; // if (attr_value.length() == 0) { // checks if the attribute value is empty; // ROOT::TMetaUtils::Error(0,""Attribute - missing attibute value!\n"");; // return false;; // }; // creates new Attributes object and pushes it back in the vector; // then Sets the variables in the initial state - if there are other attributes to be read; // For the moment the proto pattern is not implemented. The current ROOT6 architecture; // relies on ABI compatibility for calling functions, no stub functions are present.; // The concept of selecting/excluding functions is not defined.; // if (attr_name == ""proto_pattern"") {; // printf(""XMLReader::GetAttributes(): proto_pattern selection not implemented yet!\n"");; // }",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:213,Availability,error,error,213,"// this is the case in which the symbol is not "", space or = and the last symbol read; // (diferent than space) is =. This is a situation which is represented by for example <class name = x""value"">; // this is an error",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:70,Modifiability,variab,variable,70,"// else - if name or newattr is Set, we should write in the attr_name variable",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:45,Modifiability,variab,variable,45,"// if not, we should write in the attr_value variable",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:241,Availability,error,error,241,"//////////////////////////////////////////////////////////////////////////////////////////; /*; This is where the actual work is done - this method parses the XML file tag by tag; and for every tag extracts the atrributes. Here is done some error checking as well -; mostly conserning missing or excessive closing tags, nesting problems, etc.; */",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:2,Usability,Clear,Clear,2,"//Clear the selection rules up to now",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:13,Availability,error,error,13,"//this is an error",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:12,Security,access,access,12,"// we could access it through the base class pointer",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:46,Usability,clear,clear,46,"// if this is closing a parent class element, clear the parent information",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:13,Availability,error,error,13,"//this is an error",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:13,Availability,error,error,13,"//this is an error",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:13,Availability,error,error,13,"//this is an error",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:13,Availability,error,error,13,"//this is an error",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:98,Availability,error,error,98,"// if we have a <field>, <method> or <properties> tag outside a parent <clas>s tag,; //this is an error",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:16,Modifiability,variab,variable,16,"// the field is variable selection rule object",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:98,Availability,error,error,98,"// if we have a <field>, <method> or <properties> tag outside a parent <clas>s tag,; //this is an error",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:98,Availability,error,error,98,"// if we have a <field>, <method> or <properties> tag outside a parent <clas>s tag,; //this is an error",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:13,Availability,error,error,13,"//this is an error",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:13,Availability,error,error,13,"//this is an error",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:13,Availability,error,error,13,"//this is an error",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:13,Availability,error,error,13,"//this is an error",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:13,Availability,error,error,13,"//this is an error",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:11,Safety,sanity check,sanity check,11,"// A first sanity check",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:76,Performance,Cache,Cache,76,"// Loop over the attrs to get the info to build the linkdef-like string; // Cache the name and the value",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:350,Integrability,rout,routine,350,"// save attributes in a map to then format the new line which is of the form; // #pragma read sourceClass=""class1"" targetClass=""class2"" version=""[1-]"" source="""" target=""transient_"" code=""{ newObj->initializeTransientss(); }"";; // where ""#pragma read"" should not appear; // The check for the sanity of the pragma is delegated to the ProcessReadPragma routine",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:623,Availability,Error,Error,623,"// // DEBUG std::cout<<""Is child: "";; // if (inClass){; // if (((tagKind == kClass)) || tagKind == kEndClass) // if this is the same tag as the parent; // // or it is a closing tag, the tag is not a child; // ;// DEBUG std::cout<<""No""<<std::endl;; // // else if tagKind is one of the following, it means that we have a missing </class> tag; // // because these tag kinds cannot be children for a parent <class> tag; // else if (tagKind == kClass || tagKind == kEnum || tagKind == kVariable || tagKind == kFunction ||; // tagKind == kEndSelection || tagKind == kExclusion || tagKind == kEndExclusion){; // ROOT::TMetaUtils::Error(0,""XML at line %s. Missing </class> tag\n"",lineNumCharp);; // out.ClearSelectionRules();; // return false;; // }; // // DEBUG else std::cout<<""Yes""<<std::endl;; // }; // // DEBUG else std::cout<<""No""<<std::endl;",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:695,Usability,Clear,ClearSelectionRules,695,"// // DEBUG std::cout<<""Is child: "";; // if (inClass){; // if (((tagKind == kClass)) || tagKind == kEndClass) // if this is the same tag as the parent; // // or it is a closing tag, the tag is not a child; // ;// DEBUG std::cout<<""No""<<std::endl;; // // else if tagKind is one of the following, it means that we have a missing </class> tag; // // because these tag kinds cannot be children for a parent <class> tag; // else if (tagKind == kClass || tagKind == kEnum || tagKind == kVariable || tagKind == kFunction ||; // tagKind == kEndSelection || tagKind == kExclusion || tagKind == kEndExclusion){; // ROOT::TMetaUtils::Error(0,""XML at line %s. Missing </class> tag\n"",lineNumCharp);; // out.ClearSelectionRules();; // return false;; // }; // // DEBUG else std::cout<<""Yes""<<std::endl;; // }; // // DEBUG else std::cout<<""No""<<std::endl;",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:3,Performance,Cache,Cache,3,"// Cache the name and the value",MatchSource.CODE_COMMENT,core/dictgen/src/XMLReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx
https://github.com/root-project/root/tree/v6-32-06/core/dictgen/test/dictgen_base.cxx:11,Performance,perform,perform,11,"// Here we perform these steps:; // Compile macro which has a linkdef section with extra includes; // The extra includes get parsed. They contain a function, f; // The value returned by f is checked to be correct ",MatchSource.CODE_COMMENT,core/dictgen/test/dictgen_base.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/test/dictgen_base.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ESTLType.h:32,Integrability,interface,interface,32,/* ROOT type with STL container interface */,MatchSource.CODE_COMMENT,core/foundation/inc/ESTLType.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ESTLType.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/RtypesCore.h:46,Modifiability,portab,portable,46,"// Note: Long_t and ULong_t are currently not portable types",MatchSource.CODE_COMMENT,core/foundation/inc/RtypesCore.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/RtypesCore.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/RtypesCore.h:2,Modifiability,Portab,Portable,2,"//Portable signed long integer 8 bytes",MatchSource.CODE_COMMENT,core/foundation/inc/RtypesCore.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/RtypesCore.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/RtypesCore.h:2,Modifiability,Portab,Portable,2,"//Portable unsigned long integer 8 bytes",MatchSource.CODE_COMMENT,core/foundation/inc/RtypesCore.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/RtypesCore.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/RVersion.h:7,Deployability,update,updated,7,/* not updated anymore */,MatchSource.CODE_COMMENT,core/foundation/inc/RVersion.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/RVersion.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TClassEdit.h:86,Integrability,depend,dependent,86,"// TClassEdit is used to manipulate class and type names.; //; // This class does not dependent on any other ROOT facility; // so that it can be used by rootcint.",MatchSource.CODE_COMMENT,core/foundation/inc/TClassEdit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TClassEdit.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TClassEdit.h:12,Security,hash,hash,12,/* Drop the hash if applies to the collection */,MatchSource.CODE_COMMENT,core/foundation/inc/TClassEdit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TClassEdit.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TClassEdit.h:17,Modifiability,portab,portable,17,"// Demangle in a portable way the name.; // IMPORTANT: The caller is responsible for freeing the returned const char*",MatchSource.CODE_COMMENT,core/foundation/inc/TClassEdit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TClassEdit.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:86,Availability,Error,Error,86,"//////////////////////////////////////////////////////////////////////////; // //; // Error handling routines. //; // //; // This file defines a number of global error handling routines: //; // Warning(), Error(), SysError() and Fatal(). They all take a //; // location string (where the error happened) and a printf style format //; // string plus vararg's. In the end these functions call an //; // errorhanlder function. Initially, a minimal, non thread-safe handler //; // is installed that is supposed to be replaced by the //; // DefaultErrorHandler(), which needs to be implemented and installed //; // by the user of TError. Normally, the default error handler is set //; // during gROOT initialization. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:162,Availability,error,error,162,"//////////////////////////////////////////////////////////////////////////; // //; // Error handling routines. //; // //; // This file defines a number of global error handling routines: //; // Warning(), Error(), SysError() and Fatal(). They all take a //; // location string (where the error happened) and a printf style format //; // string plus vararg's. In the end these functions call an //; // errorhanlder function. Initially, a minimal, non thread-safe handler //; // is installed that is supposed to be replaced by the //; // DefaultErrorHandler(), which needs to be implemented and installed //; // by the user of TError. Normally, the default error handler is set //; // during gROOT initialization. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:205,Availability,Error,Error,205,"//////////////////////////////////////////////////////////////////////////; // //; // Error handling routines. //; // //; // This file defines a number of global error handling routines: //; // Warning(), Error(), SysError() and Fatal(). They all take a //; // location string (where the error happened) and a printf style format //; // string plus vararg's. In the end these functions call an //; // errorhanlder function. Initially, a minimal, non thread-safe handler //; // is installed that is supposed to be replaced by the //; // DefaultErrorHandler(), which needs to be implemented and installed //; // by the user of TError. Normally, the default error handler is set //; // during gROOT initialization. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:288,Availability,error,error,288,"//////////////////////////////////////////////////////////////////////////; // //; // Error handling routines. //; // //; // This file defines a number of global error handling routines: //; // Warning(), Error(), SysError() and Fatal(). They all take a //; // location string (where the error happened) and a printf style format //; // string plus vararg's. In the end these functions call an //; // errorhanlder function. Initially, a minimal, non thread-safe handler //; // is installed that is supposed to be replaced by the //; // DefaultErrorHandler(), which needs to be implemented and installed //; // by the user of TError. Normally, the default error handler is set //; // during gROOT initialization. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:401,Availability,error,errorhanlder,401,"//////////////////////////////////////////////////////////////////////////; // //; // Error handling routines. //; // //; // This file defines a number of global error handling routines: //; // Warning(), Error(), SysError() and Fatal(). They all take a //; // location string (where the error happened) and a printf style format //; // string plus vararg's. In the end these functions call an //; // errorhanlder function. Initially, a minimal, non thread-safe handler //; // is installed that is supposed to be replaced by the //; // DefaultErrorHandler(), which needs to be implemented and installed //; // by the user of TError. Normally, the default error handler is set //; // during gROOT initialization. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:655,Availability,error,error,655,"//////////////////////////////////////////////////////////////////////////; // //; // Error handling routines. //; // //; // This file defines a number of global error handling routines: //; // Warning(), Error(), SysError() and Fatal(). They all take a //; // location string (where the error happened) and a printf style format //; // string plus vararg's. In the end these functions call an //; // errorhanlder function. Initially, a minimal, non thread-safe handler //; // is installed that is supposed to be replaced by the //; // DefaultErrorHandler(), which needs to be implemented and installed //; // by the user of TError. Normally, the default error handler is set //; // during gROOT initialization. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:480,Deployability,install,installed,480,"//////////////////////////////////////////////////////////////////////////; // //; // Error handling routines. //; // //; // This file defines a number of global error handling routines: //; // Warning(), Error(), SysError() and Fatal(). They all take a //; // location string (where the error happened) and a printf style format //; // string plus vararg's. In the end these functions call an //; // errorhanlder function. Initially, a minimal, non thread-safe handler //; // is installed that is supposed to be replaced by the //; // DefaultErrorHandler(), which needs to be implemented and installed //; // by the user of TError. Normally, the default error handler is set //; // during gROOT initialization. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:593,Deployability,install,installed,593,"//////////////////////////////////////////////////////////////////////////; // //; // Error handling routines. //; // //; // This file defines a number of global error handling routines: //; // Warning(), Error(), SysError() and Fatal(). They all take a //; // location string (where the error happened) and a printf style format //; // string plus vararg's. In the end these functions call an //; // errorhanlder function. Initially, a minimal, non thread-safe handler //; // is installed that is supposed to be replaced by the //; // DefaultErrorHandler(), which needs to be implemented and installed //; // by the user of TError. Normally, the default error handler is set //; // during gROOT initialization. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:101,Integrability,rout,routines,101,"//////////////////////////////////////////////////////////////////////////; // //; // Error handling routines. //; // //; // This file defines a number of global error handling routines: //; // Warning(), Error(), SysError() and Fatal(). They all take a //; // location string (where the error happened) and a printf style format //; // string plus vararg's. In the end these functions call an //; // errorhanlder function. Initially, a minimal, non thread-safe handler //; // is installed that is supposed to be replaced by the //; // DefaultErrorHandler(), which needs to be implemented and installed //; // by the user of TError. Normally, the default error handler is set //; // during gROOT initialization. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:177,Integrability,rout,routines,177,"//////////////////////////////////////////////////////////////////////////; // //; // Error handling routines. //; // //; // This file defines a number of global error handling routines: //; // Warning(), Error(), SysError() and Fatal(). They all take a //; // location string (where the error happened) and a printf style format //; // string plus vararg's. In the end these functions call an //; // errorhanlder function. Initially, a minimal, non thread-safe handler //; // is installed that is supposed to be replaced by the //; // DefaultErrorHandler(), which needs to be implemented and installed //; // by the user of TError. Normally, the default error handler is set //; // during gROOT initialization. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:457,Safety,safe,safe,457,"//////////////////////////////////////////////////////////////////////////; // //; // Error handling routines. //; // //; // This file defines a number of global error handling routines: //; // Warning(), Error(), SysError() and Fatal(). They all take a //; // location string (where the error happened) and a printf style format //; // string plus vararg's. In the end these functions call an //; // errorhanlder function. Initially, a minimal, non thread-safe handler //; // is installed that is supposed to be replaced by the //; // DefaultErrorHandler(), which needs to be implemented and installed //; // by the user of TError. Normally, the default error handler is set //; // during gROOT initialization. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:18,Availability,error,error,18,"// TROOT sets the error ignore level handler, the system error message handler, and the error abort handler on; // construction such that the ""Root.ErrorIgnoreLevel"" environment variable is used for the ignore level; // and gSystem is used to generate a stack trace on abort.",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:57,Availability,error,error,57,"// TROOT sets the error ignore level handler, the system error message handler, and the error abort handler on; // construction such that the ""Root.ErrorIgnoreLevel"" environment variable is used for the ignore level; // and gSystem is used to generate a stack trace on abort.",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:88,Availability,error,error,88,"// TROOT sets the error ignore level handler, the system error message handler, and the error abort handler on; // construction such that the ""Root.ErrorIgnoreLevel"" environment variable is used for the ignore level; // and gSystem is used to generate a stack trace on abort.",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:148,Availability,Error,ErrorIgnoreLevel,148,"// TROOT sets the error ignore level handler, the system error message handler, and the error abort handler on; // construction such that the ""Root.ErrorIgnoreLevel"" environment variable is used for the ignore level; // and gSystem is used to generate a stack trace on abort.",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:63,Integrability,message,message,63,"// TROOT sets the error ignore level handler, the system error message handler, and the error abort handler on; // construction such that the ""Root.ErrorIgnoreLevel"" environment variable is used for the ignore level; // and gSystem is used to generate a stack trace on abort.",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:178,Modifiability,variab,variable,178,"// TROOT sets the error ignore level handler, the system error message handler, and the error abort handler on; // construction such that the ""Root.ErrorIgnoreLevel"" environment variable is used for the ignore level; // and gSystem is used to generate a stack trace on abort.",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:94,Safety,abort,abort,94,"// TROOT sets the error ignore level handler, the system error message handler, and the error abort handler on; // construction such that the ""Root.ErrorIgnoreLevel"" environment variable is used for the ignore level; // and gSystem is used to generate a stack trace on abort.",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:269,Safety,abort,abort,269,"// TROOT sets the error ignore level handler, the system error message handler, and the error abort handler on; // construction such that the ""Root.ErrorIgnoreLevel"" environment variable is used for the ignore level; // and gSystem is used to generate a stack trace on abort.",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:18,Availability,error,error,18,"/// Retrieves the error string associated with the last system error.",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:63,Availability,error,error,63,"/// Retrieves the error string associated with the last system error.",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:32,Availability,error,error,32,"/// Returns the previous system error message handler",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:38,Integrability,message,message,38,"/// Returns the previous system error message handler",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:45,Availability,error,error,45,"/*! Checks condition `e` and reports a fatal error if it's false.; * \warning; * - this check is NOT stripped in release mode, so it should not be used for hot paths.; * For those cases, prefer a regular `assert()`;; * - depending on `gErrorIgnoreLevel`, this might not terminate the program, \see ::Fatal.; */",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:113,Deployability,release,release,113,"/*! Checks condition `e` and reports a fatal error if it's false.; * \warning; * - this check is NOT stripped in release mode, so it should not be used for hot paths.; * For those cases, prefer a regular `assert()`;; * - depending on `gErrorIgnoreLevel`, this might not terminate the program, \see ::Fatal.; */",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:221,Integrability,depend,depending,221,"/*! Checks condition `e` and reports a fatal error if it's false.; * \warning; * - this check is NOT stripped in release mode, so it should not be used for hot paths.; * For those cases, prefer a regular `assert()`;; * - depending on `gErrorIgnoreLevel`, this might not terminate the program, \see ::Fatal.; */",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:205,Testability,assert,assert,205,"/*! Checks condition `e` and reports a fatal error if it's false.; * \warning; * - this check is NOT stripped in release mode, so it should not be used for hot paths.; * For those cases, prefer a regular `assert()`;; * - depending on `gErrorIgnoreLevel`, this might not terminate the program, \see ::Fatal.; */",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:112,Deployability,release,release,112,"/*! Checks condition `e` and reports a warning message if it's false.; * \warning this check is NOT stripped in release mode, so it should not be used for hot paths.; */",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:47,Integrability,message,message,47,"/*! Checks condition `e` and reports a warning message if it's false.; * \warning this check is NOT stripped in release mode, so it should not be used for hot paths.; */",MatchSource.CODE_COMMENT,core/foundation/inc/TError.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h:472,Integrability,depend,depending,472,"// @(#)root/thread:$Id$; /*; * Copyright (c) 2006-2011 High Performance Computing Center Stuttgart,; * University of Stuttgart. All rights reserved.; * Author: Rainer Keller, HLRS; * Modified: Fons Rademakers, CERN; * Modified: Philippe Canal, FNAL; *; * Thread-local storage (TLS) is not supported on all environments.; * This header file and test-program shows how to abstract away, using either; * __thread,; * __declspec(thread),; * thread_local or; * Pthread-Keys; * depending on the (configure-set) CPP-variables R__HAS___THREAD,; * R__HAS_DECLSPEC_THREAD or R__HAS_PTHREAD.; *; * Use the macros TTHREAD_TLS_DECLARE, TTHREAD_TLS_INIT, and the; * getters and setters TTHREAD_TLS_GET and TTHREAD_TLS_GET; * to work on the declared variables.; *; * In case of PThread keys, we need to resolve to using keys!; * In order to do so, we need to declare and access; * TLS variables through three macros:; * - TTHREAD_TLS_DECLARE; * - TTHREAD_TLS_INIT; * - TTHREAD_TLS_SET and; * - TTHREAD_TLS_GET; * We do depend on the following (GCC-)extension:; * - In case of function-local static functions,; * we declare a sub-function to create a specific key.; * Unfortunately, we do NOT use the following extensions:; * - Using typeof, we could get rid of the type-declaration; * which is used for casting, however typeof is not ANSI C.; * - We do NOT allow something like; * func (a, TTHREAD_TLS_SET(int, my_var, 5));; * as we do not use the gcc-extension of returning macro-values.; *; * C++11 requires the implementation of the thread_local storage.; *; * For simple type use:; * TTHREAD_TLS(int) varname;; *; * For array of simple type use:; * TTHREAD_TLS_ARRAY(int, arraysize, varname);; *; * For object use:; * TTHREAD_TLS_DECL(classname, varname);; * TTHREAD_TLS_DECL_ARG(classname, varname, arg);; * TTHREAD_TLS_DECL_ARG2(classname, varname, arg1, arg2);; *; */",MatchSource.CODE_COMMENT,core/foundation/inc/ThreadLocalStorage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h:1004,Integrability,depend,depend,1004,"// @(#)root/thread:$Id$; /*; * Copyright (c) 2006-2011 High Performance Computing Center Stuttgart,; * University of Stuttgart. All rights reserved.; * Author: Rainer Keller, HLRS; * Modified: Fons Rademakers, CERN; * Modified: Philippe Canal, FNAL; *; * Thread-local storage (TLS) is not supported on all environments.; * This header file and test-program shows how to abstract away, using either; * __thread,; * __declspec(thread),; * thread_local or; * Pthread-Keys; * depending on the (configure-set) CPP-variables R__HAS___THREAD,; * R__HAS_DECLSPEC_THREAD or R__HAS_PTHREAD.; *; * Use the macros TTHREAD_TLS_DECLARE, TTHREAD_TLS_INIT, and the; * getters and setters TTHREAD_TLS_GET and TTHREAD_TLS_GET; * to work on the declared variables.; *; * In case of PThread keys, we need to resolve to using keys!; * In order to do so, we need to declare and access; * TLS variables through three macros:; * - TTHREAD_TLS_DECLARE; * - TTHREAD_TLS_INIT; * - TTHREAD_TLS_SET and; * - TTHREAD_TLS_GET; * We do depend on the following (GCC-)extension:; * - In case of function-local static functions,; * we declare a sub-function to create a specific key.; * Unfortunately, we do NOT use the following extensions:; * - Using typeof, we could get rid of the type-declaration; * which is used for casting, however typeof is not ANSI C.; * - We do NOT allow something like; * func (a, TTHREAD_TLS_SET(int, my_var, 5));; * as we do not use the gcc-extension of returning macro-values.; *; * C++11 requires the implementation of the thread_local storage.; *; * For simple type use:; * TTHREAD_TLS(int) varname;; *; * For array of simple type use:; * TTHREAD_TLS_ARRAY(int, arraysize, varname);; *; * For object use:; * TTHREAD_TLS_DECL(classname, varname);; * TTHREAD_TLS_DECL_ARG(classname, varname, arg);; * TTHREAD_TLS_DECL_ARG2(classname, varname, arg1, arg2);; *; */",MatchSource.CODE_COMMENT,core/foundation/inc/ThreadLocalStorage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h:490,Modifiability,config,configure-set,490,"// @(#)root/thread:$Id$; /*; * Copyright (c) 2006-2011 High Performance Computing Center Stuttgart,; * University of Stuttgart. All rights reserved.; * Author: Rainer Keller, HLRS; * Modified: Fons Rademakers, CERN; * Modified: Philippe Canal, FNAL; *; * Thread-local storage (TLS) is not supported on all environments.; * This header file and test-program shows how to abstract away, using either; * __thread,; * __declspec(thread),; * thread_local or; * Pthread-Keys; * depending on the (configure-set) CPP-variables R__HAS___THREAD,; * R__HAS_DECLSPEC_THREAD or R__HAS_PTHREAD.; *; * Use the macros TTHREAD_TLS_DECLARE, TTHREAD_TLS_INIT, and the; * getters and setters TTHREAD_TLS_GET and TTHREAD_TLS_GET; * to work on the declared variables.; *; * In case of PThread keys, we need to resolve to using keys!; * In order to do so, we need to declare and access; * TLS variables through three macros:; * - TTHREAD_TLS_DECLARE; * - TTHREAD_TLS_INIT; * - TTHREAD_TLS_SET and; * - TTHREAD_TLS_GET; * We do depend on the following (GCC-)extension:; * - In case of function-local static functions,; * we declare a sub-function to create a specific key.; * Unfortunately, we do NOT use the following extensions:; * - Using typeof, we could get rid of the type-declaration; * which is used for casting, however typeof is not ANSI C.; * - We do NOT allow something like; * func (a, TTHREAD_TLS_SET(int, my_var, 5));; * as we do not use the gcc-extension of returning macro-values.; *; * C++11 requires the implementation of the thread_local storage.; *; * For simple type use:; * TTHREAD_TLS(int) varname;; *; * For array of simple type use:; * TTHREAD_TLS_ARRAY(int, arraysize, varname);; *; * For object use:; * TTHREAD_TLS_DECL(classname, varname);; * TTHREAD_TLS_DECL_ARG(classname, varname, arg);; * TTHREAD_TLS_DECL_ARG2(classname, varname, arg1, arg2);; *; */",MatchSource.CODE_COMMENT,core/foundation/inc/ThreadLocalStorage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h:509,Modifiability,variab,variables,509,"// @(#)root/thread:$Id$; /*; * Copyright (c) 2006-2011 High Performance Computing Center Stuttgart,; * University of Stuttgart. All rights reserved.; * Author: Rainer Keller, HLRS; * Modified: Fons Rademakers, CERN; * Modified: Philippe Canal, FNAL; *; * Thread-local storage (TLS) is not supported on all environments.; * This header file and test-program shows how to abstract away, using either; * __thread,; * __declspec(thread),; * thread_local or; * Pthread-Keys; * depending on the (configure-set) CPP-variables R__HAS___THREAD,; * R__HAS_DECLSPEC_THREAD or R__HAS_PTHREAD.; *; * Use the macros TTHREAD_TLS_DECLARE, TTHREAD_TLS_INIT, and the; * getters and setters TTHREAD_TLS_GET and TTHREAD_TLS_GET; * to work on the declared variables.; *; * In case of PThread keys, we need to resolve to using keys!; * In order to do so, we need to declare and access; * TLS variables through three macros:; * - TTHREAD_TLS_DECLARE; * - TTHREAD_TLS_INIT; * - TTHREAD_TLS_SET and; * - TTHREAD_TLS_GET; * We do depend on the following (GCC-)extension:; * - In case of function-local static functions,; * we declare a sub-function to create a specific key.; * Unfortunately, we do NOT use the following extensions:; * - Using typeof, we could get rid of the type-declaration; * which is used for casting, however typeof is not ANSI C.; * - We do NOT allow something like; * func (a, TTHREAD_TLS_SET(int, my_var, 5));; * as we do not use the gcc-extension of returning macro-values.; *; * C++11 requires the implementation of the thread_local storage.; *; * For simple type use:; * TTHREAD_TLS(int) varname;; *; * For array of simple type use:; * TTHREAD_TLS_ARRAY(int, arraysize, varname);; *; * For object use:; * TTHREAD_TLS_DECL(classname, varname);; * TTHREAD_TLS_DECL_ARG(classname, varname, arg);; * TTHREAD_TLS_DECL_ARG2(classname, varname, arg1, arg2);; *; */",MatchSource.CODE_COMMENT,core/foundation/inc/ThreadLocalStorage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h:735,Modifiability,variab,variables,735,"// @(#)root/thread:$Id$; /*; * Copyright (c) 2006-2011 High Performance Computing Center Stuttgart,; * University of Stuttgart. All rights reserved.; * Author: Rainer Keller, HLRS; * Modified: Fons Rademakers, CERN; * Modified: Philippe Canal, FNAL; *; * Thread-local storage (TLS) is not supported on all environments.; * This header file and test-program shows how to abstract away, using either; * __thread,; * __declspec(thread),; * thread_local or; * Pthread-Keys; * depending on the (configure-set) CPP-variables R__HAS___THREAD,; * R__HAS_DECLSPEC_THREAD or R__HAS_PTHREAD.; *; * Use the macros TTHREAD_TLS_DECLARE, TTHREAD_TLS_INIT, and the; * getters and setters TTHREAD_TLS_GET and TTHREAD_TLS_GET; * to work on the declared variables.; *; * In case of PThread keys, we need to resolve to using keys!; * In order to do so, we need to declare and access; * TLS variables through three macros:; * - TTHREAD_TLS_DECLARE; * - TTHREAD_TLS_INIT; * - TTHREAD_TLS_SET and; * - TTHREAD_TLS_GET; * We do depend on the following (GCC-)extension:; * - In case of function-local static functions,; * we declare a sub-function to create a specific key.; * Unfortunately, we do NOT use the following extensions:; * - Using typeof, we could get rid of the type-declaration; * which is used for casting, however typeof is not ANSI C.; * - We do NOT allow something like; * func (a, TTHREAD_TLS_SET(int, my_var, 5));; * as we do not use the gcc-extension of returning macro-values.; *; * C++11 requires the implementation of the thread_local storage.; *; * For simple type use:; * TTHREAD_TLS(int) varname;; *; * For array of simple type use:; * TTHREAD_TLS_ARRAY(int, arraysize, varname);; *; * For object use:; * TTHREAD_TLS_DECL(classname, varname);; * TTHREAD_TLS_DECL_ARG(classname, varname, arg);; * TTHREAD_TLS_DECL_ARG2(classname, varname, arg1, arg2);; *; */",MatchSource.CODE_COMMENT,core/foundation/inc/ThreadLocalStorage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h:870,Modifiability,variab,variables,870,"// @(#)root/thread:$Id$; /*; * Copyright (c) 2006-2011 High Performance Computing Center Stuttgart,; * University of Stuttgart. All rights reserved.; * Author: Rainer Keller, HLRS; * Modified: Fons Rademakers, CERN; * Modified: Philippe Canal, FNAL; *; * Thread-local storage (TLS) is not supported on all environments.; * This header file and test-program shows how to abstract away, using either; * __thread,; * __declspec(thread),; * thread_local or; * Pthread-Keys; * depending on the (configure-set) CPP-variables R__HAS___THREAD,; * R__HAS_DECLSPEC_THREAD or R__HAS_PTHREAD.; *; * Use the macros TTHREAD_TLS_DECLARE, TTHREAD_TLS_INIT, and the; * getters and setters TTHREAD_TLS_GET and TTHREAD_TLS_GET; * to work on the declared variables.; *; * In case of PThread keys, we need to resolve to using keys!; * In order to do so, we need to declare and access; * TLS variables through three macros:; * - TTHREAD_TLS_DECLARE; * - TTHREAD_TLS_INIT; * - TTHREAD_TLS_SET and; * - TTHREAD_TLS_GET; * We do depend on the following (GCC-)extension:; * - In case of function-local static functions,; * we declare a sub-function to create a specific key.; * Unfortunately, we do NOT use the following extensions:; * - Using typeof, we could get rid of the type-declaration; * which is used for casting, however typeof is not ANSI C.; * - We do NOT allow something like; * func (a, TTHREAD_TLS_SET(int, my_var, 5));; * as we do not use the gcc-extension of returning macro-values.; *; * C++11 requires the implementation of the thread_local storage.; *; * For simple type use:; * TTHREAD_TLS(int) varname;; *; * For array of simple type use:; * TTHREAD_TLS_ARRAY(int, arraysize, varname);; *; * For object use:; * TTHREAD_TLS_DECL(classname, varname);; * TTHREAD_TLS_DECL_ARG(classname, varname, arg);; * TTHREAD_TLS_DECL_ARG2(classname, varname, arg1, arg2);; *; */",MatchSource.CODE_COMMENT,core/foundation/inc/ThreadLocalStorage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h:60,Performance,Perform,Performance,60,"// @(#)root/thread:$Id$; /*; * Copyright (c) 2006-2011 High Performance Computing Center Stuttgart,; * University of Stuttgart. All rights reserved.; * Author: Rainer Keller, HLRS; * Modified: Fons Rademakers, CERN; * Modified: Philippe Canal, FNAL; *; * Thread-local storage (TLS) is not supported on all environments.; * This header file and test-program shows how to abstract away, using either; * __thread,; * __declspec(thread),; * thread_local or; * Pthread-Keys; * depending on the (configure-set) CPP-variables R__HAS___THREAD,; * R__HAS_DECLSPEC_THREAD or R__HAS_PTHREAD.; *; * Use the macros TTHREAD_TLS_DECLARE, TTHREAD_TLS_INIT, and the; * getters and setters TTHREAD_TLS_GET and TTHREAD_TLS_GET; * to work on the declared variables.; *; * In case of PThread keys, we need to resolve to using keys!; * In order to do so, we need to declare and access; * TLS variables through three macros:; * - TTHREAD_TLS_DECLARE; * - TTHREAD_TLS_INIT; * - TTHREAD_TLS_SET and; * - TTHREAD_TLS_GET; * We do depend on the following (GCC-)extension:; * - In case of function-local static functions,; * we declare a sub-function to create a specific key.; * Unfortunately, we do NOT use the following extensions:; * - Using typeof, we could get rid of the type-declaration; * which is used for casting, however typeof is not ANSI C.; * - We do NOT allow something like; * func (a, TTHREAD_TLS_SET(int, my_var, 5));; * as we do not use the gcc-extension of returning macro-values.; *; * C++11 requires the implementation of the thread_local storage.; *; * For simple type use:; * TTHREAD_TLS(int) varname;; *; * For array of simple type use:; * TTHREAD_TLS_ARRAY(int, arraysize, varname);; *; * For object use:; * TTHREAD_TLS_DECL(classname, varname);; * TTHREAD_TLS_DECL_ARG(classname, varname, arg);; * TTHREAD_TLS_DECL_ARG2(classname, varname, arg1, arg2);; *; */",MatchSource.CODE_COMMENT,core/foundation/inc/ThreadLocalStorage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h:856,Security,access,access,856,"// @(#)root/thread:$Id$; /*; * Copyright (c) 2006-2011 High Performance Computing Center Stuttgart,; * University of Stuttgart. All rights reserved.; * Author: Rainer Keller, HLRS; * Modified: Fons Rademakers, CERN; * Modified: Philippe Canal, FNAL; *; * Thread-local storage (TLS) is not supported on all environments.; * This header file and test-program shows how to abstract away, using either; * __thread,; * __declspec(thread),; * thread_local or; * Pthread-Keys; * depending on the (configure-set) CPP-variables R__HAS___THREAD,; * R__HAS_DECLSPEC_THREAD or R__HAS_PTHREAD.; *; * Use the macros TTHREAD_TLS_DECLARE, TTHREAD_TLS_INIT, and the; * getters and setters TTHREAD_TLS_GET and TTHREAD_TLS_GET; * to work on the declared variables.; *; * In case of PThread keys, we need to resolve to using keys!; * In order to do so, we need to declare and access; * TLS variables through three macros:; * - TTHREAD_TLS_DECLARE; * - TTHREAD_TLS_INIT; * - TTHREAD_TLS_SET and; * - TTHREAD_TLS_GET; * We do depend on the following (GCC-)extension:; * - In case of function-local static functions,; * we declare a sub-function to create a specific key.; * Unfortunately, we do NOT use the following extensions:; * - Using typeof, we could get rid of the type-declaration; * which is used for casting, however typeof is not ANSI C.; * - We do NOT allow something like; * func (a, TTHREAD_TLS_SET(int, my_var, 5));; * as we do not use the gcc-extension of returning macro-values.; *; * C++11 requires the implementation of the thread_local storage.; *; * For simple type use:; * TTHREAD_TLS(int) varname;; *; * For array of simple type use:; * TTHREAD_TLS_ARRAY(int, arraysize, varname);; *; * For object use:; * TTHREAD_TLS_DECL(classname, varname);; * TTHREAD_TLS_DECL_ARG(classname, varname, arg);; * TTHREAD_TLS_DECL_ARG2(classname, varname, arg1, arg2);; *; */",MatchSource.CODE_COMMENT,core/foundation/inc/ThreadLocalStorage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h:344,Testability,test,test-program,344,"// @(#)root/thread:$Id$; /*; * Copyright (c) 2006-2011 High Performance Computing Center Stuttgart,; * University of Stuttgart. All rights reserved.; * Author: Rainer Keller, HLRS; * Modified: Fons Rademakers, CERN; * Modified: Philippe Canal, FNAL; *; * Thread-local storage (TLS) is not supported on all environments.; * This header file and test-program shows how to abstract away, using either; * __thread,; * __declspec(thread),; * thread_local or; * Pthread-Keys; * depending on the (configure-set) CPP-variables R__HAS___THREAD,; * R__HAS_DECLSPEC_THREAD or R__HAS_PTHREAD.; *; * Use the macros TTHREAD_TLS_DECLARE, TTHREAD_TLS_INIT, and the; * getters and setters TTHREAD_TLS_GET and TTHREAD_TLS_GET; * to work on the declared variables.; *; * In case of PThread keys, we need to resolve to using keys!; * In order to do so, we need to declare and access; * TLS variables through three macros:; * - TTHREAD_TLS_DECLARE; * - TTHREAD_TLS_INIT; * - TTHREAD_TLS_SET and; * - TTHREAD_TLS_GET; * We do depend on the following (GCC-)extension:; * - In case of function-local static functions,; * we declare a sub-function to create a specific key.; * Unfortunately, we do NOT use the following extensions:; * - Using typeof, we could get rid of the type-declaration; * which is used for casting, however typeof is not ANSI C.; * - We do NOT allow something like; * func (a, TTHREAD_TLS_SET(int, my_var, 5));; * as we do not use the gcc-extension of returning macro-values.; *; * C++11 requires the implementation of the thread_local storage.; *; * For simple type use:; * TTHREAD_TLS(int) varname;; *; * For array of simple type use:; * TTHREAD_TLS_ARRAY(int, arraysize, varname);; *; * For object use:; * TTHREAD_TLS_DECL(classname, varname);; * TTHREAD_TLS_DECL_ARG(classname, varname, arg);; * TTHREAD_TLS_DECL_ARG2(classname, varname, arg1, arg2);; *; */",MatchSource.CODE_COMMENT,core/foundation/inc/ThreadLocalStorage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h:1553,Usability,simpl,simple,1553,"// @(#)root/thread:$Id$; /*; * Copyright (c) 2006-2011 High Performance Computing Center Stuttgart,; * University of Stuttgart. All rights reserved.; * Author: Rainer Keller, HLRS; * Modified: Fons Rademakers, CERN; * Modified: Philippe Canal, FNAL; *; * Thread-local storage (TLS) is not supported on all environments.; * This header file and test-program shows how to abstract away, using either; * __thread,; * __declspec(thread),; * thread_local or; * Pthread-Keys; * depending on the (configure-set) CPP-variables R__HAS___THREAD,; * R__HAS_DECLSPEC_THREAD or R__HAS_PTHREAD.; *; * Use the macros TTHREAD_TLS_DECLARE, TTHREAD_TLS_INIT, and the; * getters and setters TTHREAD_TLS_GET and TTHREAD_TLS_GET; * to work on the declared variables.; *; * In case of PThread keys, we need to resolve to using keys!; * In order to do so, we need to declare and access; * TLS variables through three macros:; * - TTHREAD_TLS_DECLARE; * - TTHREAD_TLS_INIT; * - TTHREAD_TLS_SET and; * - TTHREAD_TLS_GET; * We do depend on the following (GCC-)extension:; * - In case of function-local static functions,; * we declare a sub-function to create a specific key.; * Unfortunately, we do NOT use the following extensions:; * - Using typeof, we could get rid of the type-declaration; * which is used for casting, however typeof is not ANSI C.; * - We do NOT allow something like; * func (a, TTHREAD_TLS_SET(int, my_var, 5));; * as we do not use the gcc-extension of returning macro-values.; *; * C++11 requires the implementation of the thread_local storage.; *; * For simple type use:; * TTHREAD_TLS(int) varname;; *; * For array of simple type use:; * TTHREAD_TLS_ARRAY(int, arraysize, varname);; *; * For object use:; * TTHREAD_TLS_DECL(classname, varname);; * TTHREAD_TLS_DECL_ARG(classname, varname, arg);; * TTHREAD_TLS_DECL_ARG2(classname, varname, arg1, arg2);; *; */",MatchSource.CODE_COMMENT,core/foundation/inc/ThreadLocalStorage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h:1618,Usability,simpl,simple,1618,"// @(#)root/thread:$Id$; /*; * Copyright (c) 2006-2011 High Performance Computing Center Stuttgart,; * University of Stuttgart. All rights reserved.; * Author: Rainer Keller, HLRS; * Modified: Fons Rademakers, CERN; * Modified: Philippe Canal, FNAL; *; * Thread-local storage (TLS) is not supported on all environments.; * This header file and test-program shows how to abstract away, using either; * __thread,; * __declspec(thread),; * thread_local or; * Pthread-Keys; * depending on the (configure-set) CPP-variables R__HAS___THREAD,; * R__HAS_DECLSPEC_THREAD or R__HAS_PTHREAD.; *; * Use the macros TTHREAD_TLS_DECLARE, TTHREAD_TLS_INIT, and the; * getters and setters TTHREAD_TLS_GET and TTHREAD_TLS_GET; * to work on the declared variables.; *; * In case of PThread keys, we need to resolve to using keys!; * In order to do so, we need to declare and access; * TLS variables through three macros:; * - TTHREAD_TLS_DECLARE; * - TTHREAD_TLS_INIT; * - TTHREAD_TLS_SET and; * - TTHREAD_TLS_GET; * We do depend on the following (GCC-)extension:; * - In case of function-local static functions,; * we declare a sub-function to create a specific key.; * Unfortunately, we do NOT use the following extensions:; * - Using typeof, we could get rid of the type-declaration; * which is used for casting, however typeof is not ANSI C.; * - We do NOT allow something like; * func (a, TTHREAD_TLS_SET(int, my_var, 5));; * as we do not use the gcc-extension of returning macro-values.; *; * C++11 requires the implementation of the thread_local storage.; *; * For simple type use:; * TTHREAD_TLS(int) varname;; *; * For array of simple type use:; * TTHREAD_TLS_ARRAY(int, arraysize, varname);; *; * For object use:; * TTHREAD_TLS_DECL(classname, varname);; * TTHREAD_TLS_DECL_ARG(classname, varname, arg);; * TTHREAD_TLS_DECL_ARG2(classname, varname, arg1, arg2);; *; */",MatchSource.CODE_COMMENT,core/foundation/inc/ThreadLocalStorage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h:128,Availability,avail,available,128,"// Note that the order is relevant, more than one of the flag might be; // on at the same time and we want to use 'best' option available.",MatchSource.CODE_COMMENT,core/foundation/inc/ThreadLocalStorage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h:3,Availability,Avail,Available,3,"// Available on all platforms; // Neither TTHREAD_TLS_DECL_IMPL and TTHREAD_TLS_INIT; // do not delete the object at the end of the process.",MatchSource.CODE_COMMENT,core/foundation/inc/ThreadLocalStorage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RConfig.hxx:33,Safety,avoid,avoid,33,/* Mechanisms to advise users to avoid legacy functions and classes that will not be removed */,MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RConfig.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RConfig.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RConfig.hxx:453,Availability,error,error,453,"/*---- unlikely / likely expressions -----------------------------------------*/; // These are meant to use in cases like:; // if (R__unlikely(expression)) { ... }; // in performance-critical sections. R__unlikely / R__likely provide hints to; // the compiler code generation to heavily optimize one side of a conditional,; // causing the other branch to have a heavy performance cost.; //; // It is best to use this for conditionals that test for rare error cases or; // backward compatibility code.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RConfig.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RConfig.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RConfig.hxx:171,Performance,perform,performance-critical,171,"/*---- unlikely / likely expressions -----------------------------------------*/; // These are meant to use in cases like:; // if (R__unlikely(expression)) { ... }; // in performance-critical sections. R__unlikely / R__likely provide hints to; // the compiler code generation to heavily optimize one side of a conditional,; // causing the other branch to have a heavy performance cost.; //; // It is best to use this for conditionals that test for rare error cases or; // backward compatibility code.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RConfig.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RConfig.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RConfig.hxx:287,Performance,optimiz,optimize,287,"/*---- unlikely / likely expressions -----------------------------------------*/; // These are meant to use in cases like:; // if (R__unlikely(expression)) { ... }; // in performance-critical sections. R__unlikely / R__likely provide hints to; // the compiler code generation to heavily optimize one side of a conditional,; // causing the other branch to have a heavy performance cost.; //; // It is best to use this for conditionals that test for rare error cases or; // backward compatibility code.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RConfig.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RConfig.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RConfig.hxx:368,Performance,perform,performance,368,"/*---- unlikely / likely expressions -----------------------------------------*/; // These are meant to use in cases like:; // if (R__unlikely(expression)) { ... }; // in performance-critical sections. R__unlikely / R__likely provide hints to; // the compiler code generation to heavily optimize one side of a conditional,; // causing the other branch to have a heavy performance cost.; //; // It is best to use this for conditionals that test for rare error cases or; // backward compatibility code.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RConfig.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RConfig.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RConfig.hxx:439,Testability,test,test,439,"/*---- unlikely / likely expressions -----------------------------------------*/; // These are meant to use in cases like:; // if (R__unlikely(expression)) { ... }; // in performance-critical sections. R__unlikely / R__likely provide hints to; // the compiler code generation to heavily optimize one side of a conditional,; // causing the other branch to have a heavy performance cost.; //; // It is best to use this for conditionals that test for rare error cases or; // backward compatibility code.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RConfig.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RConfig.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:228,Usability,Feedback,Feedback,228,"/// \file ROOT/RLogger.hxx; /// \ingroup Base ROOT7; /// \author Axel Naumann <axel@cern.ch>; /// \date 2015-03-29; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:8,Availability,error,error,8,"///< An error which causes further processing to be unreliable",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:8,Availability,error,error,8,"///< An error",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:19,Integrability,message,messages,19,"///< Informational messages; used for instance for tracing",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:27,Availability,error,errors,27,/**; Keep track of emitted errors and warnings.; */,MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:14,Availability,error,errors,14,"/// Number of errors.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:20,Availability,error,errors,20,"/// Number of fatal errors.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:34,Availability,error,errors,34,"/// Returns the current number of errors.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:40,Availability,error,errors,40,"/// Returns the current number of fatal errors.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:24,Availability,error,error,24,"/// Increase warning or error count.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:72,Availability,error,error,72,/**; Abstract RLogHandler base class. ROOT logs everything from info to error; to entities of this class.; */,MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:43,Testability,log,logs,43,/**; Abstract RLogHandler base class. ROOT logs everything from info to error; to entities of this class.; */,MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:185,Performance,concurren,concurrently,185,"/// Emit a log entry.; /// \param entry - the RLogEntry to be emitted.; /// \returns false if further emission of this Log should be suppressed.; ///; /// \note This function is called concurrently; log emission must be locked; /// if needed. (The default log handler using ROOT's DefaultErrorHandler is locked.)",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:11,Testability,log,log,11,"/// Emit a log entry.; /// \param entry - the RLogEntry to be emitted.; /// \returns false if further emission of this Log should be suppressed.; ///; /// \note This function is called concurrently; log emission must be locked; /// if needed. (The default log handler using ROOT's DefaultErrorHandler is locked.)",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:119,Testability,Log,Log,119,"/// Emit a log entry.; /// \param entry - the RLogEntry to be emitted.; /// \returns false if further emission of this Log should be suppressed.; ///; /// \note This function is called concurrently; log emission must be locked; /// if needed. (The default log handler using ROOT's DefaultErrorHandler is locked.)",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:199,Testability,log,log,199,"/// Emit a log entry.; /// \param entry - the RLogEntry to be emitted.; /// \returns false if further emission of this Log should be suppressed.; ///; /// \note This function is called concurrently; log emission must be locked; /// if needed. (The default log handler using ROOT's DefaultErrorHandler is locked.)",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:256,Testability,log,log,256,"/// Emit a log entry.; /// \param entry - the RLogEntry to be emitted.; /// \returns false if further emission of this Log should be suppressed.; ///; /// \note This function is called concurrently; log emission must be locked; /// if needed. (The default log handler using ROOT's DefaultErrorHandler is locked.)",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:11,Deployability,configurat,configuration,11,"/**; A log configuration for a channel, e.g. ""RHist"".; Each ROOT module has its own log, with potentially distinct verbosity.; */",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:11,Modifiability,config,configuration,11,"/**; A log configuration for a channel, e.g. ""RHist"".; Each ROOT module has its own log, with potentially distinct verbosity.; */",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:7,Testability,log,log,7,"/**; A log configuration for a channel, e.g. ""RHist"".; Each ROOT module has its own log, with potentially distinct verbosity.; */",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:84,Testability,log,log,84,"/**; A log configuration for a channel, e.g. ""RHist"".; Each ROOT module has its own log, with potentially distinct verbosity.; */",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:16,Testability,log,log,16,"/// Construct a log channel given its name, which is part of the diagnostics.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:201,Testability,log,log,201,/**; A RLogHandler that multiplexes diagnostics to different client `RLogHandler`s; and keeps track of the sum of `RLogDiagCount`s for all channels. `RLogHandler::Get()` returns the process's (static) log manager.; */,MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:32,Testability,log,log,32,"/// Remove and return the given log handler. Returns `nullptr` if not found.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:89,Testability,Log,Log,89,"// Emit a `RLogEntry` to the RLogHandlers.; // Returns false if further emission of this Log should be suppressed.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:151,Integrability,message,message,151,"/**; A diagnostic that can be emitted by the RLogManager.; One can construct a RLogEntry through RLogBuilder, including streaming into; the diagnostic message and automatic emission.; */",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:8,Testability,log,log,8,"/// The log entry to be built.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:13,Testability,log,log,13,"/// Emit the log entry through the static log manager.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:42,Testability,log,log,42,"/// Emit the log entry through the static log manager.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:48,Availability,error,errors,48,"/**; Object to count the number of warnings and errors emitted by a section of code,; after construction of this type.; */",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:46,Availability,error,errors,46,"/// The number of the RLogDiagCount's emitted errors at construction time.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:52,Availability,error,errors,52,"/// The number of the RLogDiagCount's emitted fatal errors at construction time.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:22,Availability,error,errors,22,"/// Get the number of errors that the RLogDiagCount has emitted since construction of *this.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:22,Availability,error,errors,22,"/// Get the number of errors that the RLogDiagCount has emitted since construction of *this.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:45,Availability,error,error,45,"/// Whether the RLogDiagCount has emitted an error (fatal or not) since construction time of *this.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:45,Availability,error,error,45,"/// Whether the RLogDiagCount has emitted an error or a warning since construction time of *this.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:278,Availability,error,errors,278,"/*; Some implementation details:. - The conditional `RLogBuilder` use prevents stream operators from being called if; verbosity is too low, i.e.:; ~~~; RLogScopedVerbosity silence(RLogLevel::kFatal);; R__LOG_DEBUG(7) << WillNotBeCalled();; ~~~; - To update counts of warnings / errors / fatal errors, those RLogEntries must; always be created, even if in the end their emission will be silenced. This; should be fine, performance-wise, as they should not happen frequently.; - Use `(condition) && RLogBuilder(...)` instead of `if (condition) RLogBuilder(...)`; to prevent ""ambiguous else"" in invocations such as `if (something) R__LOG_DEBUG()...`.; */",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:293,Availability,error,errors,293,"/*; Some implementation details:. - The conditional `RLogBuilder` use prevents stream operators from being called if; verbosity is too low, i.e.:; ~~~; RLogScopedVerbosity silence(RLogLevel::kFatal);; R__LOG_DEBUG(7) << WillNotBeCalled();; ~~~; - To update counts of warnings / errors / fatal errors, those RLogEntries must; always be created, even if in the end their emission will be silenced. This; should be fine, performance-wise, as they should not happen frequently.; - Use `(condition) && RLogBuilder(...)` instead of `if (condition) RLogBuilder(...)`; to prevent ""ambiguous else"" in invocations such as `if (something) R__LOG_DEBUG()...`.; */",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:250,Deployability,update,update,250,"/*; Some implementation details:. - The conditional `RLogBuilder` use prevents stream operators from being called if; verbosity is too low, i.e.:; ~~~; RLogScopedVerbosity silence(RLogLevel::kFatal);; R__LOG_DEBUG(7) << WillNotBeCalled();; ~~~; - To update counts of warnings / errors / fatal errors, those RLogEntries must; always be created, even if in the end their emission will be silenced. This; should be fine, performance-wise, as they should not happen frequently.; - Use `(condition) && RLogBuilder(...)` instead of `if (condition) RLogBuilder(...)`; to prevent ""ambiguous else"" in invocations such as `if (something) R__LOG_DEBUG()...`.; */",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:418,Performance,perform,performance-wise,418,"/*; Some implementation details:. - The conditional `RLogBuilder` use prevents stream operators from being called if; verbosity is too low, i.e.:; ~~~; RLogScopedVerbosity silence(RLogLevel::kFatal);; R__LOG_DEBUG(7) << WillNotBeCalled();; ~~~; - To update counts of warnings / errors / fatal errors, those RLogEntries must; always be created, even if in the end their emission will be silenced. This; should be fine, performance-wise, as they should not happen frequently.; - Use `(condition) && RLogBuilder(...)` instead of `if (condition) RLogBuilder(...)`; to prevent ""ambiguous else"" in invocations such as `if (something) R__LOG_DEBUG()...`.; */",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:10,Testability,Log,LogMacros,10,"/// \name LogMacros; /// Macros to log diagnostics.; /// ~~~ {.cpp}; /// R__LOG_INFO(ROOT::Experimental::HistLog()) << ""all we know is "" << 42;; ///; /// RLogScopedVerbosity verbose(kDebug + 5);; /// const int decreasedInfoLevel = 5;; /// R__LOG_DEBUG(ROOT::WebGUILog(), decreasedInfoLevel) << ""nitty-gritty details"";; /// ~~~; ///\{",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:35,Testability,log,log,35,"/// \name LogMacros; /// Macros to log diagnostics.; /// ~~~ {.cpp}; /// R__LOG_INFO(ROOT::Experimental::HistLog()) << ""all we know is "" << 42;; ///; /// RLogScopedVerbosity verbose(kDebug + 5);; /// const int decreasedInfoLevel = 5;; /// R__LOG_DEBUG(ROOT::WebGUILog(), decreasedInfoLevel) << ""nitty-gritty details"";; /// ~~~; ///\{",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RLogger.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RNotFn.hxx:29,Availability,avail,available,29,"// Backport if not_fn is not available.; // libc++ does not define __cpp_lib_not_fn.; // Assume we have not_fn if libc++ is compiled with C++14 and up.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RNotFn.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RNotFn.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx:149,Availability,error,error,149,"// We want to know at compile time whether dynamic_cast or static_cast is; // used. First of all to avoid overhead, but also to avoid a compiler; // error when using dynamic_cast on a non-polymorphic class. In C++17,; // this can be done easily with `if constexpr`, but for the older; // standards we have to use a more verbose alternative. Both ways are; // explicitely implemented for different standards, so that when the; // minimum C++ standard for ROOT is raised to C++17 it's easy to remember; // that we can avoid much boilerplate code in this file.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RRangeCast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx:188,Modifiability,polymorphi,polymorphic,188,"// We want to know at compile time whether dynamic_cast or static_cast is; // used. First of all to avoid overhead, but also to avoid a compiler; // error when using dynamic_cast on a non-polymorphic class. In C++17,; // this can be done easily with `if constexpr`, but for the older; // standards we have to use a more verbose alternative. Both ways are; // explicitely implemented for different standards, so that when the; // minimum C++ standard for ROOT is raised to C++17 it's easy to remember; // that we can avoid much boilerplate code in this file.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RRangeCast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx:100,Safety,avoid,avoid,100,"// We want to know at compile time whether dynamic_cast or static_cast is; // used. First of all to avoid overhead, but also to avoid a compiler; // error when using dynamic_cast on a non-polymorphic class. In C++17,; // this can be done easily with `if constexpr`, but for the older; // standards we have to use a more verbose alternative. Both ways are; // explicitely implemented for different standards, so that when the; // minimum C++ standard for ROOT is raised to C++17 it's easy to remember; // that we can avoid much boilerplate code in this file.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RRangeCast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx:128,Safety,avoid,avoid,128,"// We want to know at compile time whether dynamic_cast or static_cast is; // used. First of all to avoid overhead, but also to avoid a compiler; // error when using dynamic_cast on a non-polymorphic class. In C++17,; // this can be done easily with `if constexpr`, but for the older; // standards we have to use a more verbose alternative. Both ways are; // explicitely implemented for different standards, so that when the; // minimum C++ standard for ROOT is raised to C++17 it's easy to remember; // that we can avoid much boilerplate code in this file.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RRangeCast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx:516,Safety,avoid,avoid,516,"// We want to know at compile time whether dynamic_cast or static_cast is; // used. First of all to avoid overhead, but also to avoid a compiler; // error when using dynamic_cast on a non-polymorphic class. In C++17,; // this can be done easily with `if constexpr`, but for the older; // standards we have to use a more verbose alternative. Both ways are; // explicitely implemented for different standards, so that when the; // minimum C++ standard for ROOT is raised to C++17 it's easy to remember; // that we can avoid much boilerplate code in this file.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RRangeCast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx:27,Integrability,Wrap,Wraps,27,"// namespace Internal; /// Wraps any collection that can be used in range-based loops and applies; /// `static_cast<T>` or `dynamic_cast<T>` to each element.; /// \tparam T The new type to convert to.; /// \tparam isDynamic If `true`, `dynamic_cast` is used, otherwise `static_cast` is used.; /// \tparam Range_t The type of the input range, which should be usually a reference type to avoid copying.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RRangeCast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx:386,Safety,avoid,avoid,386,"// namespace Internal; /// Wraps any collection that can be used in range-based loops and applies; /// `static_cast<T>` or `dynamic_cast<T>` to each element.; /// \tparam T The new type to convert to.; /// \tparam isDynamic If `true`, `dynamic_cast` is used, otherwise `static_cast` is used.; /// \tparam Range_t The type of the input range, which should be usually a reference type to avoid copying.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RRangeCast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx:175,Integrability,depend,depending,175,"// Overload for C-style arrays. It's not possible to make an overload of the; // RRangeCast constructor itself, because when the C-style array is forwarded; // it might decay depending on the compiler version.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RRangeCast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx:175,Integrability,depend,depending,175,"// Overload for C-style arrays. It's not possible to make an overload of the; // RRangeCast constructor itself, because when the C-style array is forwarded; // it might decay depending on the compiler version.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RRangeCast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RRangeCast.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RVersion.hxx:3,Deployability,Update,Update,3,/* Update on release: */,MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RVersion.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RVersion.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RVersion.hxx:13,Deployability,release,release,13,/* Update on release: */,MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/RVersion.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RVersion.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/span.hxx:15,Integrability,interface,interfaces,15,/*; * iterator interfaces; */,MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/span.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/span.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/span.hxx:6,Security,access,access,6,/*; * access; */,MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/span.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/span.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/span.hxx:37,Usability,simpl,simple,37,"// This stuff is too complex for our simple use case!",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/span.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/span.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/span.hxx:4,Testability,Mock,Mock-up,4,"/// Mock-up of future atd::(experimental::)span.; /// Supports only what we need for THist, e.g. Rank := 1.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/span.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/span.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/TypeTraits.hxx:132,Performance,perform,performed,132,"/// Lightweight storage for a collection of types.; /// Differently from std::tuple, no instantiation of objects of stored types is performed",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/TypeTraits.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/TypeTraits.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/TypeTraits.hxx:93,Availability,avail,available,93,"/// An adapter for std::invoke_result that falls back to std::result_of if the former is not available.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/TypeTraits.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/TypeTraits.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/TypeTraits.hxx:7,Energy Efficiency,adapt,adapter,7,"/// An adapter for std::invoke_result that falls back to std::result_of if the former is not available.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/TypeTraits.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/TypeTraits.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/TypeTraits.hxx:7,Integrability,adapter,adapter,7,"/// An adapter for std::invoke_result that falls back to std::result_of if the former is not available.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/TypeTraits.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/TypeTraits.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/TypeTraits.hxx:7,Modifiability,adapt,adapter,7,"/// An adapter for std::invoke_result that falls back to std::result_of if the former is not available.",MatchSource.CODE_COMMENT,core/foundation/inc/ROOT/TypeTraits.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/TypeTraits.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/RConversionRuleParser.h:89,Modifiability,variab,variables,89,"//---------------------------------------------------------------------------; // Global variables; //---------------------------------------------------------------------------",MatchSource.CODE_COMMENT,core/foundation/res/RConversionRuleParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/RConversionRuleParser.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/TSpinLockGuard.h:195,Modifiability,variab,variable,195,/**; * \class ROOT::Internal::TSpinLockGuard; * \brief A spin mutex-as-code-guard class.; * \ingroup Parallelism; * This class allows to acquire spin locks in combination with a std::atomic_flag variable.; * For example:; * ~~~{.cpp}; * mutable std::atomic_flag fSpinLock;; * [...]; * ROOT::Internal::TSpinLockGuard slg(fSpinLock);; * // do something important; * [...]; * ~~~{.cpp}; */,MatchSource.CODE_COMMENT,core/foundation/res/TSpinLockGuard.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/TSpinLockGuard.h
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:102,Deployability,a/b,a/b,102,"///\returns the relative path of \c path with respect to \c base.; /// For instance, for path being ""/a/b/c/d"" and base ""/a/b"", returns ""c/d"".; ///; ///\param path - the input path; ///; ///\param base - the base path to be removed from \c path.; ///; ///\param isBuildingROOT - if true, it converts module directories such as; /// core/base/inc/ to include/",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/FoundationUtils.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:122,Deployability,a/b,a/b,122,"///\returns the relative path of \c path with respect to \c base.; /// For instance, for path being ""/a/b/c/d"" and base ""/a/b"", returns ""c/d"".; ///; ///\param path - the input path; ///; ///\param base - the base path to be removed from \c path.; ///; ///\param isBuildingROOT - if true, it converts module directories such as; /// core/base/inc/ to include/",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/FoundationUtils.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:50,Integrability,depend,depending,50,"///\returns the path separator slash or backslash depending on the platform.",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/FoundationUtils.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:56,Modifiability,variab,variable,56,"///\returns the path separator for the PATH environment variable on the; /// platform.",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/FoundationUtils.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:42,Deployability,install,installation,42,"///\returns the fallback directory in the installation (eg. /usr/local/root/).",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/FoundationUtils.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:41,Deployability,install,installation,41,"///\returns the rootsys directory in the installation.; ///",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/FoundationUtils.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:42,Deployability,install,installation,42,"///\ returns the include directory in the installation.; ///",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/FoundationUtils.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:43,Deployability,install,installation,43,"///\returns the sysconfig directory in the installation.",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/FoundationUtils.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/RSha256.hxx:3,Testability,test,tests,3,"// tests fail if we don't have this cast...",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/RSha256.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/RSha256.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/RSha256.hxx:23,Performance,optimiz,optimization,23,/* define it for speed optimization */,MatchSource.CODE_COMMENT,core/foundation/res/ROOT/RSha256.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/RSha256.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/RSha256.hxx:8,Modifiability,variab,variables,8,"/* Wipe variables */; /* memset(W, 0, sizeof(W)); */; /* memset(T, 0, sizeof(T)); */",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/RSha256.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/RSha256.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/RSha256.hxx:39,Integrability,interface,interface,39,"// Here the final cast is to match the interface of the C code and; // the data member. The length is the same!",MatchSource.CODE_COMMENT,core/foundation/res/ROOT/RSha256.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/RSha256.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/FoundationUtils.cxx:48,Integrability,interface,interface,48,"// FIXME: This is not a generic approach for an interface. We should rework; // this part.",MatchSource.CODE_COMMENT,core/foundation/src/FoundationUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/FoundationUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/FoundationUtils.cxx:166,Integrability,depend,depend,166,"// FIXME: We should not hardcode this path. We can use a similar to the; // windows technique to get the path to the executable. The easiest way; // to do this is to depend on LLVMSupport and use getMainExecutable.",MatchSource.CODE_COMMENT,core/foundation/src/FoundationUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/FoundationUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/FoundationUtils.cxx:22,Integrability,wrap,wrapper,22,"// FIXME: Implement a wrapper around __builtin_unreachable() and use it here",MatchSource.CODE_COMMENT,core/foundation/src/FoundationUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/FoundationUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:81,Energy Efficiency,Allocate,Allocate,81,"//--------------------------------------------------------------------------; // Allocate global variables; /////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:97,Modifiability,variab,variables,97,"//--------------------------------------------------------------------------; // Allocate global variables; /////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:83,Security,Validat,Validate,83,"/////////////////////////////////////////////////////////////////////////////; /// Validate if the user specified rules are correct",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:113,Security,checksum,checksum,113,"//-----------------------------------------------------------------------; // Check if we have either version or checksum specified; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:91,Security,checksum,checksum,91,"//-----------------------------------------------------------------------; // Check if the checksum has been set to right value; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:181,Security,checksum,checksum,181,"//-----------------------------------------------------------------------; // Check if we're dealing with renameing declaration - sourceClass,; // targetClass and either version or checksum required; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:89,Availability,down,down,89,"/////////////////////////////////////////////////////////////////////////////; /// Write down the sources",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:84,Availability,down,down,84,"//-----------------------------------------------------------------------; // Write down the targets; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:112,Modifiability,variab,variables,112,"//-----------------------------------------------------------------------; // Write the automatically generated variables; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:112,Modifiability,variab,variables,112,"//-----------------------------------------------------------------------; // Write the automatically generated variables; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:81,Availability,down,down,81,"//--------------------------------------------------------------------; // Write down the mandatory fields; ///////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/RConversionRuleParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RLogger.cxx:223,Usability,Feedback,Feedback,223,"/// \file RLogger.cxx; /// \ingroup Base ROOT7; /// \author Axel Naumann <axel@cern.ch>; /// \date 2015-07-07; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/foundation/src/RLogger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RLogger.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RLogger.cxx:45,Testability,log,log,45,"// Returns false if further emission of this log entry should be suppressed.",MatchSource.CODE_COMMENT,core/foundation/src/RLogger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RLogger.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:66,Energy Efficiency,reduce,reduced,66,"// TODO: This is likely to induce unwanted autoparsing, those are reduced; // by the caching of the result.",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:85,Performance,cache,cache,85,"// We assume that we are called in already serialized code.; // Note: should we also cache the negative answers?",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:150,Testability,test,testAlloc,150,"////////////////////////////////////////////////////////////////////////////////; /// type : type name: vector<list<classA,allocator>,allocator>; /// testAlloc: if true, we test allocator, if it is not default result is negative; /// result: 0 : not stl container; /// abs(result): code of container 1=vector,2=list,3=deque,4=map; /// 5=multimap,6=set,7=multiset; /// positive val: we have a vector or list with default allocator to any depth; /// like vector<list<vector<int>>>; /// negative val: STL container other than vector or list, or non default allocator; /// For example: vector<deque<int>> has answer -1",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:173,Testability,test,test,173,"////////////////////////////////////////////////////////////////////////////////; /// type : type name: vector<list<classA,allocator>,allocator>; /// testAlloc: if true, we test allocator, if it is not default result is negative; /// result: 0 : not stl container; /// abs(result): code of container 1=vector,2=list,3=deque,4=map; /// 5=multimap,6=set,7=multiset; /// positive val: we have a vector or list with default allocator to any depth; /// like vector<list<vector<int>>>; /// negative val: STL container other than vector or list, or non default allocator; /// For example: vector<deque<int>> has answer -1",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:22,Security,Hash,Hash,22,"// Treat now Pred and Hash for unordered set/map containers. Signature is:; // template < class Key,; // class Hash = hash<Key>,; // class Pred = equal_to<Key>,; // class Alloc = allocator<Key>; // > class unordered_{set,multiset}; // template < class Key,; // class Val,; // class Hash = hash<Key>,; // class Pred = equal_to<Key>,; // class Alloc = allocator<Key>; // > class unordered_{map,multimap}",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:111,Security,Hash,Hash,111,"// Treat now Pred and Hash for unordered set/map containers. Signature is:; // template < class Key,; // class Hash = hash<Key>,; // class Pred = equal_to<Key>,; // class Alloc = allocator<Key>; // > class unordered_{set,multiset}; // template < class Key,; // class Val,; // class Hash = hash<Key>,; // class Pred = equal_to<Key>,; // class Alloc = allocator<Key>; // > class unordered_{map,multimap}",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:118,Security,hash,hash,118,"// Treat now Pred and Hash for unordered set/map containers. Signature is:; // template < class Key,; // class Hash = hash<Key>,; // class Pred = equal_to<Key>,; // class Alloc = allocator<Key>; // > class unordered_{set,multiset}; // template < class Key,; // class Val,; // class Hash = hash<Key>,; // class Pred = equal_to<Key>,; // class Alloc = allocator<Key>; // > class unordered_{map,multimap}",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:282,Security,Hash,Hash,282,"// Treat now Pred and Hash for unordered set/map containers. Signature is:; // template < class Key,; // class Hash = hash<Key>,; // class Pred = equal_to<Key>,; // class Alloc = allocator<Key>; // > class unordered_{set,multiset}; // template < class Key,; // class Val,; // class Hash = hash<Key>,; // class Pred = equal_to<Key>,; // class Alloc = allocator<Key>; // > class unordered_{map,multimap}",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:289,Security,hash,hash,289,"// Treat now Pred and Hash for unordered set/map containers. Signature is:; // template < class Key,; // class Hash = hash<Key>,; // class Pred = equal_to<Key>,; // class Alloc = allocator<Key>; // > class unordered_{set,multiset}; // template < class Key,; // class Val,; // class Hash = hash<Key>,; // class Pred = equal_to<Key>,; // class Alloc = allocator<Key>; // > class unordered_{map,multimap}",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:18,Security,hash,hash,18,"// remove default hash",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:109,Security,hash,hashname,109,"////////////////////////////////////////////////////////////////////////////////; /// return whether or not 'hashname' is the STL default hash for type; /// 'classname'",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:138,Security,hash,hash,138,"////////////////////////////////////////////////////////////////////////////////; /// return whether or not 'hashname' is the STL default hash for type; /// 'classname'",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:383,Integrability,rout,routines,383,"////////////////////////////////////////////////////////////////////////////////; /// Return the normalized name. See TMetaUtils::GetNormalizedName.; ///; /// Return the type name normalized for ROOT,; /// keeping only the ROOT opaque typedef (Double32_t, etc.) and; /// removing the STL collections default parameter if any.; ///; /// Compare to TMetaUtils::GetNormalizedName, this routines does not; /// and can not add default template parameters.",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:3,Integrability,Depend,Depending,3,"// Depending on how the user typed their code, in particular typedef; // declarations, we may end up with an explicit '::' being; // part of the result string. For consistency, we must remove it.",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:190,Availability,redundant,redundant,190,"////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////; /// Cleanup type description, redundant blanks removed; /// and redundant tail ignored; /// return *tail = pointer to last used character; /// if (mode==0) keep keywords; /// if (mode==1) remove keywords outside the template params; /// if (mode>=2) remove the keywords everywhere.; /// if (tail!=0) cut before the trailing *; ///; /// The keywords currently are: ""const"" , ""volatile"" removed; ///; ///; /// CleanType("" A<B, C< D, E> > *,F,G>"") returns ""A<B,C<D,E> >*""; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:224,Availability,redundant,redundant,224,"////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////; /// Cleanup type description, redundant blanks removed; /// and redundant tail ignored; /// return *tail = pointer to last used character; /// if (mode==0) keep keywords; /// if (mode==1) remove keywords outside the template params; /// if (mode>=2) remove the keywords everywhere.; /// if (tail!=0) cut before the trailing *; ///; /// The keywords currently are: ""const"" , ""volatile"" removed; ///; ///; /// CleanType("" A<B, C< D, E> > *,F,G>"") returns ""A<B,C<D,E> >*""; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:190,Safety,redund,redundant,190,"////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////; /// Cleanup type description, redundant blanks removed; /// and redundant tail ignored; /// return *tail = pointer to last used character; /// if (mode==0) keep keywords; /// if (mode==1) remove keywords outside the template params; /// if (mode>=2) remove the keywords everywhere.; /// if (tail!=0) cut before the trailing *; ///; /// The keywords currently are: ""const"" , ""volatile"" removed; ///; ///; /// CleanType("" A<B, C< D, E> > *,F,G>"") returns ""A<B,C<D,E> >*""; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:224,Safety,redund,redundant,224,"////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////; /// Cleanup type description, redundant blanks removed; /// and redundant tail ignored; /// return *tail = pointer to last used character; /// if (mode==0) keep keywords; /// if (mode==1) remove keywords outside the template params; /// if (mode>=2) remove the keywords everywhere.; /// if (tail!=0) cut before the trailing *; ///; /// The keywords currently are: ""const"" , ""volatile"" removed; ///; ///; /// CleanType("" A<B, C< D, E> > *,F,G>"") returns ""A<B,C<D,E> >*""; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:150,Testability,test,testAlloc,150,"////////////////////////////////////////////////////////////////////////////////; /// type : type name: vector<list<classA,allocator>,allocator>; /// testAlloc: if true, we test allocator, if it is not default result is negative; /// result: 0 : not stl container; /// abs(result): code of container 1=vector,2=list,3=deque,4=map; /// 5=multimap,6=set,7=multiset; /// positive val: we have a vector or list with default allocator to any depth; /// like vector<list<vector<int>>>; /// negative val: STL container other than vector or list, or non default allocator; /// For example: vector<deque<int>> has answer -1",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:173,Testability,test,test,173,"////////////////////////////////////////////////////////////////////////////////; /// type : type name: vector<list<classA,allocator>,allocator>; /// testAlloc: if true, we test allocator, if it is not default result is negative; /// result: 0 : not stl container; /// abs(result): code of container 1=vector,2=list,3=deque,4=map; /// 5=multimap,6=set,7=multiset; /// positive val: we have a vector or list with default allocator to any depth; /// like vector<list<vector<int>>>; /// negative val: STL container other than vector or list, or non default allocator; /// For example: vector<deque<int>> has answer -1",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:21,Safety,avoid,avoid,21,"// we need to try to avoid this copy",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:21,Safety,avoid,avoid,21,"// we need to try to avoid this copy",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:100,Modifiability,portab,portable,100,"////////////////////////////////////////////////////////////////////////////////; /// Demangle in a portable way the type id name.; /// IMPORTANT: The caller is responsible for freeing the returned const char*",MatchSource.CODE_COMMENT,core/foundation/src/TClassEdit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:423,Availability,Error,Error,423,"// @(#)root/base:$Id$; // Author: Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; Error handling routines. This file defines a number of global error handling routines:; Warning(), Error(), SysError() and Fatal(). They all take a; location string (where the error happened) and a printf style format; string plus vararg's. In the end these functions call an; errorhandler function. Initially the MinimalErrorHandler, which is supposed; to be replaced by the proper DefaultErrorHandler(); */",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:485,Availability,error,error,485,"// @(#)root/base:$Id$; // Author: Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; Error handling routines. This file defines a number of global error handling routines:; Warning(), Error(), SysError() and Fatal(). They all take a; location string (where the error happened) and a printf style format; string plus vararg's. In the end these functions call an; errorhandler function. Initially the MinimalErrorHandler, which is supposed; to be replaced by the proper DefaultErrorHandler(); */",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:522,Availability,Error,Error,522,"// @(#)root/base:$Id$; // Author: Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; Error handling routines. This file defines a number of global error handling routines:; Warning(), Error(), SysError() and Fatal(). They all take a; location string (where the error happened) and a printf style format; string plus vararg's. In the end these functions call an; errorhandler function. Initially the MinimalErrorHandler, which is supposed; to be replaced by the proper DefaultErrorHandler(); */",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:599,Availability,error,error,599,"// @(#)root/base:$Id$; // Author: Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; Error handling routines. This file defines a number of global error handling routines:; Warning(), Error(), SysError() and Fatal(). They all take a; location string (where the error happened) and a printf style format; string plus vararg's. In the end these functions call an; errorhandler function. Initially the MinimalErrorHandler, which is supposed; to be replaced by the proper DefaultErrorHandler(); */",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:700,Availability,error,errorhandler,700,"// @(#)root/base:$Id$; // Author: Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; Error handling routines. This file defines a number of global error handling routines:; Warning(), Error(), SysError() and Fatal(). They all take a; location string (where the error happened) and a printf style format; string plus vararg's. In the end these functions call an; errorhandler function. Initially the MinimalErrorHandler, which is supposed; to be replaced by the proper DefaultErrorHandler(); */",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:438,Integrability,rout,routines,438,"// @(#)root/base:$Id$; // Author: Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; Error handling routines. This file defines a number of global error handling routines:; Warning(), Error(), SysError() and Fatal(). They all take a; location string (where the error happened) and a printf style format; string plus vararg's. In the end these functions call an; errorhandler function. Initially the MinimalErrorHandler, which is supposed; to be replaced by the proper DefaultErrorHandler(); */",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:500,Integrability,rout,routines,500,"// @(#)root/base:$Id$; // Author: Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; Error handling routines. This file defines a number of global error handling routines:; Warning(), Error(), SysError() and Fatal(). They all take a; location string (where the error happened) and a printf style format; string plus vararg's. In the end these functions call an; errorhandler function. Initially the MinimalErrorHandler, which is supposed; to be replaced by the proper DefaultErrorHandler(); */",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:18,Availability,error,error,18,"/// A very simple error handler that is usually replaced by the TROOT default error handler.; /// The minimal error handler is not serialized across threads, so that output of multi-threaded programs; /// can get scrambled; /// @note `abort()` is only called if `abort_bool` is `true` and `level >= gErrorIgnoreLevel`",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:78,Availability,error,error,78,"/// A very simple error handler that is usually replaced by the TROOT default error handler.; /// The minimal error handler is not serialized across threads, so that output of multi-threaded programs; /// can get scrambled; /// @note `abort()` is only called if `abort_bool` is `true` and `level >= gErrorIgnoreLevel`",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:110,Availability,error,error,110,"/// A very simple error handler that is usually replaced by the TROOT default error handler.; /// The minimal error handler is not serialized across threads, so that output of multi-threaded programs; /// can get scrambled; /// @note `abort()` is only called if `abort_bool` is `true` and `level >= gErrorIgnoreLevel`",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:176,Performance,multi-thread,multi-threaded,176,"/// A very simple error handler that is usually replaced by the TROOT default error handler.; /// The minimal error handler is not serialized across threads, so that output of multi-threaded programs; /// can get scrambled; /// @note `abort()` is only called if `abort_bool` is `true` and `level >= gErrorIgnoreLevel`",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:235,Safety,abort,abort,235,"/// A very simple error handler that is usually replaced by the TROOT default error handler.; /// The minimal error handler is not serialized across threads, so that output of multi-threaded programs; /// can get scrambled; /// @note `abort()` is only called if `abort_bool` is `true` and `level >= gErrorIgnoreLevel`",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:11,Usability,simpl,simple,11,"/// A very simple error handler that is usually replaced by the TROOT default error handler.; /// The minimal error handler is not serialized across threads, so that output of multi-threaded programs; /// can get scrambled; /// @note `abort()` is only called if `abort_bool` is `true` and `level >= gErrorIgnoreLevel`",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:112,Availability,error,errorhandler,112,"// namespace ROOT; ////////////////////////////////////////////////////////////////////////////////; /// Set an errorhandler function. Returns the old handler.",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:106,Availability,error,error,106,"////////////////////////////////////////////////////////////////////////////////; /// Returns the current error handler function.",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:94,Availability,error,error,94,"////////////////////////////////////////////////////////////////////////////////; /// General error handler function. It calls the user set error handler.",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:140,Availability,error,error,140,"////////////////////////////////////////////////////////////////////////////////; /// General error handler function. It calls the user set error handler.",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:180,Modifiability,inherit,inherited,180,"////////////////////////////////////////////////////////////////////////////////; /// This function can be used in classes that should override a certain; /// function, but in the inherited class the function makes no sense.",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:115,Availability,error,error,115,"////////////////////////////////////////////////////////////////////////////////; /// Use this function in case an error occurred.",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:141,Availability,error,error,141,"////////////////////////////////////////////////////////////////////////////////; /// Use this function in case a system (OS or GUI) related error occurred.",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:115,Availability,error,error,115,"////////////////////////////////////////////////////////////////////////////////; /// Use this function in case an error occurred.",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:122,Integrability,message,messages,122,"////////////////////////////////////////////////////////////////////////////////; /// Use this function for informational messages.",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:123,Availability,error,error,123,"////////////////////////////////////////////////////////////////////////////////; /// Use this function in case of a fatal error. It will abort the program.; /// @warning Fatal() *will* not abort the program if `gErrorIgnoreLevel > kFatal`; /// - but for all reasonable settings it *will* abort.; // So let's be reasonable wrt Coverity:; // coverity[+kill]",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:138,Safety,abort,abort,138,"////////////////////////////////////////////////////////////////////////////////; /// Use this function in case of a fatal error. It will abort the program.; /// @warning Fatal() *will* not abort the program if `gErrorIgnoreLevel > kFatal`; /// - but for all reasonable settings it *will* abort.; // So let's be reasonable wrt Coverity:; // coverity[+kill]",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:190,Safety,abort,abort,190,"////////////////////////////////////////////////////////////////////////////////; /// Use this function in case of a fatal error. It will abort the program.; /// @warning Fatal() *will* not abort the program if `gErrorIgnoreLevel > kFatal`; /// - but for all reasonable settings it *will* abort.; // So let's be reasonable wrt Coverity:; // coverity[+kill]",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:289,Safety,abort,abort,289,"////////////////////////////////////////////////////////////////////////////////; /// Use this function in case of a fatal error. It will abort the program.; /// @warning Fatal() *will* not abort the program if `gErrorIgnoreLevel > kFatal`; /// - but for all reasonable settings it *will* abort.; // So let's be reasonable wrt Coverity:; // coverity[+kill]",MatchSource.CODE_COMMENT,core/foundation/src/TError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/FoundationUtilsTests.cxx:49,Testability,test,tests,49,"/// \file; ///; /// \brief The file contain unit tests which test the ROOT::FoundationUtils; ///; /// \author Vassil Vassilev <vvasilev@cern.ch>; ///; /// \date Jun, 2020; ///; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/foundation/test/FoundationUtilsTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/FoundationUtilsTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/FoundationUtilsTests.cxx:61,Testability,test,test,61,"/// \file; ///; /// \brief The file contain unit tests which test the ROOT::FoundationUtils; ///; /// \author Vassil Vassilev <vvasilev@cern.ch>; ///; /// \date Jun, 2020; ///; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/foundation/test/FoundationUtilsTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/FoundationUtilsTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx:3,Testability,Test,Test,3,"// Test simple suppression.",MatchSource.CODE_COMMENT,core/foundation/test/testLogger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx:8,Usability,simpl,simple,8,"// Test simple suppression.",MatchSource.CODE_COMMENT,core/foundation/test/testLogger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx:3,Testability,Test,Test,3,"// Test channel specific suppression given global higher verbosity.",MatchSource.CODE_COMMENT,core/foundation/test/testLogger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx:3,Testability,Test,Test,3,"// Test same diag level as verbosity, in channel and global, before and after RAII.",MatchSource.CODE_COMMENT,core/foundation/test/testLogger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx:3,Testability,Test,Test,3,"// Test different diag levels, in channel and global, before and after RAII.",MatchSource.CODE_COMMENT,core/foundation/test/testLogger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx:3,Testability,Test,Test,3,"// Test Info level verbosity.",MatchSource.CODE_COMMENT,core/foundation/test/testLogger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx:3,Testability,Test,Test,3,"// Test verbosity change on other channel not influcing this one.",MatchSource.CODE_COMMENT,core/foundation/test/testLogger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testLogger.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testStringUtils.cxx:3,Testability,Test,Test,3,"// Test that ROOT::Split behaves like str.split from Python.",MatchSource.CODE_COMMENT,core/foundation/test/testStringUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testStringUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testStringUtils.cxx:3,Testability,Test,Test,3,"// Test that ROOT::Join behaves like str.join from Python.",MatchSource.CODE_COMMENT,core/foundation/test/testStringUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testStringUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testTypeTraits.cxx:21,Availability,mask,masking,21,"// std::function; // masking signature int(int) of freeFunc1",MatchSource.CODE_COMMENT,core/foundation/test/testTypeTraits.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testTypeTraits.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testTypeTraits.cxx:3,Availability,mask,masking,3,"// masking signature of lambda2",MatchSource.CODE_COMMENT,core/foundation/test/testTypeTraits.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/test/testTypeTraits.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:230,Usability,Feedback,Feedback,230,"/// \file ROOT/RError.hxx; /// \ingroup Base ROOT7; /// \author Jakob Blomer <jblomer@cern.ch>; /// \date 2019-12-11; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:130,Availability,error,error,130,"// clang-format off; /**; \class ROOT::Experimental::RError; \ingroup Base; \brief Captures diagnostics related to a ROOT runtime error; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:47,Availability,avail,available,47,"// TODO(jblomer) use std::source_location once available",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:16,Availability,error,error,16,"/// User-facing error message",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:22,Integrability,message,message,22,"/// User-facing error message",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:24,Availability,error,error,24,"/// The location of the error related to fMessage plus upper frames if the error is forwarded through the call stack",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:75,Availability,error,error,75,"/// The location of the error related to fMessage plus upper frames if the error is forwarded through the call stack",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:54,Integrability,message,message,54,"/// Format a dignostics report, e.g. for an exception message",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:111,Availability,error,error,111,"// clang-format off; /**; \class ROOT::Experimental::RResultBase; \ingroup Base; \brief Common handling of the error case for RResult<T> (T != void) and RResult<void>. RResultBase captures a possible runtime error that might have occured. If the RResultBase leaves the scope unchecked,; it will throw an exception. RResultBase should only be allocated on the stack, which is helped by deleting the; new operator. RResultBase is movable but not copyable to avoid throwing multiple exceptions about the same failure.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:208,Availability,error,error,208,"// clang-format off; /**; \class ROOT::Experimental::RResultBase; \ingroup Base; \brief Common handling of the error case for RResult<T> (T != void) and RResult<void>. RResultBase captures a possible runtime error that might have occured. If the RResultBase leaves the scope unchecked,; it will throw an exception. RResultBase should only be allocated on the stack, which is helped by deleting the; new operator. RResultBase is movable but not copyable to avoid throwing multiple exceptions about the same failure.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:506,Availability,failure,failure,506,"// clang-format off; /**; \class ROOT::Experimental::RResultBase; \ingroup Base; \brief Common handling of the error case for RResult<T> (T != void) and RResult<void>. RResultBase captures a possible runtime error that might have occured. If the RResultBase leaves the scope unchecked,; it will throw an exception. RResultBase should only be allocated on the stack, which is helped by deleting the; new operator. RResultBase is movable but not copyable to avoid throwing multiple exceptions about the same failure.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:342,Energy Efficiency,allocate,allocated,342,"// clang-format off; /**; \class ROOT::Experimental::RResultBase; \ingroup Base; \brief Common handling of the error case for RResult<T> (T != void) and RResult<void>. RResultBase captures a possible runtime error that might have occured. If the RResultBase leaves the scope unchecked,; it will throw an exception. RResultBase should only be allocated on the stack, which is helped by deleting the; new operator. RResultBase is movable but not copyable to avoid throwing multiple exceptions about the same failure.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:456,Safety,avoid,avoid,456,"// clang-format off; /**; \class ROOT::Experimental::RResultBase; \ingroup Base; \brief Common handling of the error case for RResult<T> (T != void) and RResult<void>. RResultBase captures a possible runtime error that might have occured. If the RResultBase leaves the scope unchecked,; it will throw an exception. RResultBase should only be allocated on the stack, which is helped by deleting the; new operator. RResultBase is movable but not copyable to avoid throwing multiple exceptions about the same failure.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:404,Availability,error,error,404,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:459,Availability,error,error,459,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:676,Availability,error,error,676,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:907,Availability,error,error,907,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:1118,Availability,failure,failure,1118,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:1156,Availability,error,error,1156,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:1314,Availability,error,error,1314,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:171,Integrability,wrap,wraps,171,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:682,Integrability,message,message,682,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:1282,Integrability,wrap,wrapped,1282,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:1518,Usability,clear,clear,1518,"// class RResultBase; // clang-format off; /**; \class ROOT::Experimental::RResult; \ingroup Base; \brief The class is used as a return type for operations that can fail; wraps a value of type T or an RError. The RResult<T> class and their related classes are used for call chains that can throw exceptions,; such as I/O code paths. Throwing of the exception is deferred to allow for `if (result)` style error; checking where it makes sense. If an RResult in error state leaves the scope unchecked, it will throw. A function returning an RResult might look like this:. ~~~ {.cpp}; RResult<int> MyIOFunc(); {; int rv = syscall(...);; if (rv == -1); return R__FAIL(""user-facing error message"");; if (rv == kShortcut); return 42;; return R__FORWARD_RESULT(FuncThatReturnsRResultOfInt());; }; ~~~. Code using MyIOFunc might look like this:. ~~~ {.cpp}; auto result = MyIOOperation();; if (!result) {; // custom error handling or result.Throw(); }; switch (result.Inspect()) {; ...; }; ~~~. Note that RResult<void> can be used for a function without return value, like this. ~~~ {.cpp}; RResult<void> DoSomething(); {; if (failure); return R__FAIL(""user-facing error messge"");; return RResult<void>::Success();; }; ~~~. RResult<T>::Unwrap() can be used as a short hand for; ""give me the wrapped value or, in case of an error, throw"". For instance:. ~~~ {.cpp}; int value = FuncThatReturnsRResultOfInt().Unwrap(); // may throw; ~~~. There is no implict operator that converts RResult<T> to T. This is intentional to make it clear in the calling code; where an exception may be thrown.; */; // clang-format on",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:44,Availability,error,errors,44,"// Ensure accessor methods throw in case of errors",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:10,Security,access,accessor,10,"// Ensure accessor methods throw in case of errors",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:109,Availability,error,error,109,"// Accessors can be wrapped in a try-catch block, so throwing the; // exception here is akin to checking the error.; //; // Setting fIsChecked to true also avoids a spurious warning in the RResult destructor",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:20,Integrability,wrap,wrapped,20,"// Accessors can be wrapped in a try-catch block, so throwing the; // exception here is akin to checking the error.; //; // Setting fIsChecked to true also avoids a spurious warning in the RResult destructor",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:156,Safety,avoid,avoids,156,"// Accessors can be wrapped in a try-catch block, so throwing the; // exception here is akin to checking the error.; //; // Setting fIsChecked to true also avoids a spurious warning in the RResult destructor",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:3,Security,Access,Accessors,3,"// Accessors can be wrapped in a try-catch block, so throwing the; // exception here is akin to checking the error.; //; // Setting fIsChecked to true also avoids a spurious warning in the RResult destructor",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:83,Availability,error,errors,83,"/// Used by R__FORWARD_RESULT in order to keep track of the stack trace in case of errors",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:103,Availability,error,error,103,"/// If the operation was successful, returns a const reference to the inner type.; /// If there was an error, Inspect() instead throws an exception.",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:299,Availability,error,error,299,"/// If the operation was successful, returns the inner type by value.; ///; /// For move-only types, Unwrap can only be called once, as it yields ownership of; /// the inner value to the caller using std::move, potentially leaving the; /// RResult in an unspecified state.; ///; /// If there was an error, Unwrap() instead throws an exception.",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:83,Availability,error,errors,83,"/// Used by R__FORWARD_RESULT in order to keep track of the stack trace in case of errors",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:59,Availability,error,errors,59,"/// Short-hand method to throw an exception in the case of errors. Does nothing for; /// successful RResults.",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:45,Availability,error,error,45,"/// Short-hand to return an RResult<T> in an error state; the RError is implicitly converted into RResult<T>",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:45,Availability,error,error,45,"/// Short-hand to return an RResult<T> in an error state (i.e. after checking)",MatchSource.CODE_COMMENT,core/foundation/v7/inc/ROOT/RError.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/src/RError.cxx:225,Usability,Feedback,Feedback,225,"/// \file RError.cxx; /// \ingroup Base ROOT7; /// \author Jakob Blomer <jblomer@cern.ch>; /// \date 2019-12-11; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,core/foundation/v7/src/RError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/src/RError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/src/RError.cxx:3,Safety,Avoid,Avoid,3,"// Avoid frequent reallocations as we move up the call stack",MatchSource.CODE_COMMENT,core/foundation/v7/src/RError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/src/RError.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx:24,Integrability,wrap,wrapped,24,"/// Used to verify that wrapped return values are not unnecessarily copied",MatchSource.CODE_COMMENT,core/foundation/v7/test/base_exception.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx:75,Availability,error,error,75,"// Throwing ExceptionX will destruct rv along the way. Since rv carries an error state, it would normally; // throw an exception itself. In this test, we verify that rv surpresses throwing an exception if another; // exception is currently active.",MatchSource.CODE_COMMENT,core/foundation/v7/test/base_exception.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx:145,Testability,test,test,145,"// Throwing ExceptionX will destruct rv along the way. Since rv carries an error state, it would normally; // throw an exception itself. In this test, we verify that rv surpresses throwing an exception if another; // exception is currently active.",MatchSource.CODE_COMMENT,core/foundation/v7/test/base_exception.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx:127,Availability,failure,failure,127,"// This will only catch ExceptionX but not RException. In case rv mistakenly throws an exception,; // we would notice the test failure by a crash of the unit test.",MatchSource.CODE_COMMENT,core/foundation/v7/test/base_exception.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx:122,Testability,test,test,122,"// This will only catch ExceptionX but not RException. In case rv mistakenly throws an exception,; // we would notice the test failure by a crash of the unit test.",MatchSource.CODE_COMMENT,core/foundation/v7/test/base_exception.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx:158,Testability,test,test,158,"// This will only catch ExceptionX but not RException. In case rv mistakenly throws an exception,; // we would notice the test failure by a crash of the unit test.",MatchSource.CODE_COMMENT,core/foundation/v7/test/base_exception.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx:12,Availability,failure,failure,12,"// throw on failure",MatchSource.CODE_COMMENT,core/foundation/v7/test/base_exception.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx:39,Availability,error,error,39,"// In production code, we would expect error handling code other than throw",MatchSource.CODE_COMMENT,core/foundation/v7/test/base_exception.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx
https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx:133,Security,access,access,133,"// Using Inspect to make a copy won't compile; // auto copy_inner = res.Inspect();; // This will compile, but we only have read-only access",MatchSource.CODE_COMMENT,core/foundation/v7/test/base_exception.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/test/base_exception.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:15,Availability,mask,mask,15,"///< Structure mask type",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:9,Availability,mask,mask,9,"///< bit mask specifying which fields are valid",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:37,Deployability,install,installed,37,"///< boolean, is color map currently installed",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:14,Availability,mask,mask,14,"///< my event mask",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:15,Availability,mask,masks,15,"// Input event masks, used to set SetWindowAttributes_t::fEventMask; // and to be passed to TVirtualX::SelectInput()",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:19,Availability,mask,mask,19,"///< key or button mask",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:25,Security,expose,exposed,25,"///< width and height of exposed area",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:42,Security,expose,exposes,42,"///< if non-zero, at least this many more exposes",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:35,Integrability,message,message,35,"///< 5 longs can be used by client message events; ///< NOTE: only [0], [1] and [2] may be used.; ///< [1] and [2] may contain >32 bit quantities; ///< (i.e. pointers on 64 bit machines)",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:7,Availability,mask,masks,7,"// Key masks, used as modifiers to GrabButton and GrabKey and; // in Event_t::fState in various key-, mouse-, and button-related events",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:5,Testability,log,logical,5,"///< logical operation",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:11,Availability,mask,mask,11,"///< plane mask",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:9,Availability,mask,mask,9,"///< bit mask specifying which fields are valid",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:5,Energy Efficiency,green,green,5,"///< green component (0..65535)",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:5,Availability,mask,mask,5,"///< mask telling which color components are valid",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:5,Availability,mask,mask,5,"///< mask specifying which attributes are defined",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:23,Availability,mask,masks,23,"// PictureAttributes_t masks bits",MatchSource.CODE_COMMENT,core/gui/inc/GuiTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TApplicationImp.h:174,Integrability,protocol,protocol,174,"//////////////////////////////////////////////////////////////////////////; // //; // TApplicationImp //; // //; // ABC describing GUI independent application implementation protocol. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TApplicationImp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TApplicationImp.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TApplicationImp.h:29,Integrability,protocol,protocol,29,"//ABC describing application protocol",MatchSource.CODE_COMMENT,core/gui/inc/TApplicationImp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TApplicationImp.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TBrowserImp.h:166,Integrability,protocol,protocol,166,"//////////////////////////////////////////////////////////////////////////; // //; // TBrowserImp //; // //; // ABC describing GUI independent browser implementation protocol. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TBrowserImp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TBrowserImp.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TBrowserImp.h:40,Integrability,protocol,protocol,40,"//ABC describing browser implementation protocol",MatchSource.CODE_COMMENT,core/gui/inc/TBrowserImp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TBrowserImp.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TCanvasImp.h:29,Integrability,protocol,protocol,29,"//ABC describing main window protocol",MatchSource.CODE_COMMENT,core/gui/inc/TCanvasImp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TCanvasImp.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TClassMenuItem.h:7,Deployability,toggle,toggle,7,"//flag toggle method",MatchSource.CODE_COMMENT,core/gui/inc/TClassMenuItem.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TClassMenuItem.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TContextMenu.h:299,Availability,down,downs,299,"////////////////////////////////////////////////////////////////////////////////; // //; // TContextMenu //; // //; // This class provides an interface to context sensitive popup menus. //; // These menus pop up when the user hits the right mouse button, and //; // are destroyed when the menu pops downs. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TContextMenu.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TContextMenu.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TContextMenu.h:142,Integrability,interface,interface,142,"////////////////////////////////////////////////////////////////////////////////; // //; // TContextMenu //; // //; // This class provides an interface to context sensitive popup menus. //; // These menus pop up when the user hits the right mouse button, and //; // are destroyed when the menu pops downs. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TContextMenu.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TContextMenu.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TContextMenuImp.h:145,Integrability,interface,interface,145,"////////////////////////////////////////////////////////////////////////////////; // //; // TContextMenuImp //; // //; // This class provides an interface to GUI independent //; // context sensitive popup menus. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TContextMenuImp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TContextMenuImp.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h:444,Availability,error,error,444,"//////////////////////////////////////////////////////////////////////////; // //; // TObjectSpy, TObjectRefSpy //; // //; // Monitors objects for deletion and reflects the deletion by reverting //; // the internal pointer to zero. When this pointer is zero we know the //; // object has been deleted. This avoids the unsafe TestBit(kNotDeleted) //; // hack. The spied object must have the kMustCleanup bit set otherwise //; // you will get an error. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TObjectSpy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h:126,Energy Efficiency,Monitor,Monitors,126,"//////////////////////////////////////////////////////////////////////////; // //; // TObjectSpy, TObjectRefSpy //; // //; // Monitors objects for deletion and reflects the deletion by reverting //; // the internal pointer to zero. When this pointer is zero we know the //; // object has been deleted. This avoids the unsafe TestBit(kNotDeleted) //; // hack. The spied object must have the kMustCleanup bit set otherwise //; // you will get an error. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TObjectSpy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h:307,Safety,avoid,avoids,307,"//////////////////////////////////////////////////////////////////////////; // //; // TObjectSpy, TObjectRefSpy //; // //; // Monitors objects for deletion and reflects the deletion by reverting //; // the internal pointer to zero. When this pointer is zero we know the //; // object has been deleted. This avoids the unsafe TestBit(kNotDeleted) //; // hack. The spied object must have the kMustCleanup bit set otherwise //; // you will get an error. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TObjectSpy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h:318,Safety,unsafe,unsafe,318,"//////////////////////////////////////////////////////////////////////////; // //; // TObjectSpy, TObjectRefSpy //; // //; // Monitors objects for deletion and reflects the deletion by reverting //; // the internal pointer to zero. When this pointer is zero we know the //; // object has been deleted. This avoids the unsafe TestBit(kNotDeleted) //; // hack. The spied object must have the kMustCleanup bit set otherwise //; // you will get an error. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TObjectSpy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h:325,Testability,Test,TestBit,325,"//////////////////////////////////////////////////////////////////////////; // //; // TObjectSpy, TObjectRefSpy //; // //; // Monitors objects for deletion and reflects the deletion by reverting //; // the internal pointer to zero. When this pointer is zero we know the //; // object has been deleted. This avoids the unsafe TestBit(kNotDeleted) //; // hack. The spied object must have the kMustCleanup bit set otherwise //; // you will get an error. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TObjectSpy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h:591,Deployability,toggle,toggle,591,"//////////////////////////////////////////////////////////////////////////; // //; // TToggle //; // //; // This class defines toggling facility for both - object's method or //; // variables. //; // Assume that user provides an object with a two-state field, and //; // methods to Get/Set value of this field. This object enables to switch//; // values via this method when the only thing you know about the field //; // is the name of the method (or method itself) which sets the field. //; // This facility is required in context popup menu, when the only //; // information about how to toggle a field is a name of method which //; // sets it. //; // This Object may be also used for toggling an integer variable, //; // which may be important while building universal objects... //; // When user provides a ""set-method"" of name SetXXX this object tries //; // automaticaly to find a matching ""get-method"" by looking for a method //; // with name GetXXX or IsXXX for given object. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TToggle.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h:182,Modifiability,variab,variables,182,"//////////////////////////////////////////////////////////////////////////; // //; // TToggle //; // //; // This class defines toggling facility for both - object's method or //; // variables. //; // Assume that user provides an object with a two-state field, and //; // methods to Get/Set value of this field. This object enables to switch//; // values via this method when the only thing you know about the field //; // is the name of the method (or method itself) which sets the field. //; // This facility is required in context popup menu, when the only //; // information about how to toggle a field is a name of method which //; // sets it. //; // This Object may be also used for toggling an integer variable, //; // which may be important while building universal objects... //; // When user provides a ""set-method"" of name SetXXX this object tries //; // automaticaly to find a matching ""get-method"" by looking for a method //; // with name GetXXX or IsXXX for given object. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TToggle.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h:708,Modifiability,variab,variable,708,"//////////////////////////////////////////////////////////////////////////; // //; // TToggle //; // //; // This class defines toggling facility for both - object's method or //; // variables. //; // Assume that user provides an object with a two-state field, and //; // methods to Get/Set value of this field. This object enables to switch//; // values via this method when the only thing you know about the field //; // is the name of the method (or method itself) which sets the field. //; // This facility is required in context popup menu, when the only //; // information about how to toggle a field is a name of method which //; // sets it. //; // This Object may be also used for toggling an integer variable, //; // which may be important while building universal objects... //; // When user provides a ""set-method"" of name SetXXX this object tries //; // automaticaly to find a matching ""get-method"" by looking for a method //; // with name GetXXX or IsXXX for given object. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/gui/inc/TToggle.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h:73,Deployability,Toggle,Toggle,73,"//True if either SetToggledObject or SetToggledVariable called - enables Toggle() method.",MatchSource.CODE_COMMENT,core/gui/inc/TToggle.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h:18,Deployability,Toggle,Toggle,18,"//The object this Toggle belongs to",MatchSource.CODE_COMMENT,core/gui/inc/TToggle.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h:51,Deployability,Toggle,Toggled,51,"//Alternatively: pointer to an integer value to be Toggled instead of TObjectl",MatchSource.CODE_COMMENT,core/gui/inc/TToggle.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggleGroup.h:24,Deployability,toggle,toggle,24,"// Group of contex-menu toggle objects",MatchSource.CODE_COMMENT,core/gui/inc/TToggleGroup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggleGroup.h
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/InitGui.cxx:186,Integrability,interface,interface,186,"// @(#)root/base:$Id$; // Author: Fons Rademakers 15/01/98; ////////////////////////////////////////////////////////////////////////////////; /// Initialize the GUI and windowing system interface.; /// This version initializes the ROOT native GUI system.",MatchSource.CODE_COMMENT,core/gui/src/InitGui.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/InitGui.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/InitGui.cxx:41,Performance,Load,Loading,41,"// Dummy for backward compatability.; // Loading of libraries and initialization of graphics objects is; // done in TApplication::LoadGraphicsLibs().",MatchSource.CODE_COMMENT,core/gui/src/InitGui.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/InitGui.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/InitGui.cxx:130,Performance,Load,LoadGraphicsLibs,130,"// Dummy for backward compatability.; // Loading of libraries and initialization of graphics objects is; // done in TApplication::LoadGraphicsLibs().",MatchSource.CODE_COMMENT,core/gui/src/InitGui.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/InitGui.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TApplicationImp.cxx:519,Integrability,protocol,protocol,519,"// @(#)root/base:$Id$; // Author: Fons Rademakers 22/12/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TApplicationImp; \ingroup Base. ABC describing GUI independent application implementation protocol.; */",MatchSource.CODE_COMMENT,core/gui/src/TApplicationImp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TApplicationImp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx:53,Integrability,wrap,wrap,53,/** \class TBrowserObject; This class is designed to wrap a Foreign object in order to inject it into the Browse sub-system.; */,MatchSource.CODE_COMMENT,core/gui/src/TBrowser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx:87,Integrability,inject,inject,87,/** \class TBrowserObject; This class is designed to wrap a Foreign object in order to inject it into the Browse sub-system.; */,MatchSource.CODE_COMMENT,core/gui/src/TBrowser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx:87,Security,inject,inject,87,/** \class TBrowserObject; This class is designed to wrap a Foreign object in order to inject it into the Browse sub-system.; */,MatchSource.CODE_COMMENT,core/gui/src/TBrowser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx:151,Performance,load,loaded,151,"////////////////////////////////////////////////////////////////////////////////; // Make sure the application environment exists and the GUI libs are loaded",MatchSource.CODE_COMMENT,core/gui/src/TBrowser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx:44,Performance,load,loaded,44,"// make sure that the Gpad and GUI libs are loaded",MatchSource.CODE_COMMENT,core/gui/src/TBrowser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx:232,Integrability,depend,depending,232,"////////////////////////////////////////////////////////////////////////////////; /// Create a new browser with a name, title. Width and height are by; /// default set to 640x400 and (optionally) adjusted by the screen factor; /// (depending on Rint.Canvas.UseScreenFactor to be true or false, default; /// is true).",MatchSource.CODE_COMMENT,core/gui/src/TBrowser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowserImp.cxx:511,Integrability,protocol,protocol,511,"// @(#)root/base:$Id$; // Author: Fons Rademakers 15/11/95; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TBrowserImp; \ingroup Base. ABC describing GUI independent browser implementation protocol.; */",MatchSource.CODE_COMMENT,core/gui/src/TBrowserImp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowserImp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx:623,Availability,down,downs,623,"// @(#)root/base:$Id$; // Author: Nenad Buncic 08/02/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TContextMenu; \ingroup Base. This class provides an interface to context sensitive popup menus.; These menus pop up when the user hits the right mouse button, and; are destroyed when the menu pops downs. Context Menus are automatically generated by ROOT using the; following convention: if the string `// *MENU*` is found in the; comment field of a member function. This function will be added to; the list of items in the menu. The picture below shows a canvas with a pop-up menu. \image html base_hsummenu.png. The picture below shows a canvas with a pop-up menu and a dialog box. \image html base_hsumdialog.png; */; // silence warning about some cast operations",MatchSource.CODE_COMMENT,core/gui/src/TContextMenu.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx:478,Integrability,interface,interface,478,"// @(#)root/base:$Id$; // Author: Nenad Buncic 08/02/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TContextMenu; \ingroup Base. This class provides an interface to context sensitive popup menus.; These menus pop up when the user hits the right mouse button, and; are destroyed when the menu pops downs. Context Menus are automatically generated by ROOT using the; following convention: if the string `// *MENU*` is found in the; comment field of a member function. This function will be added to; the list of items in the menu. The picture below shows a canvas with a pop-up menu. \image html base_hsummenu.png. The picture below shows a canvas with a pop-up menu and a dialog box. \image html base_hsumdialog.png; */; // silence warning about some cast operations",MatchSource.CODE_COMMENT,core/gui/src/TContextMenu.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx:99,Performance,perform,performed,99,"////////////////////////////////////////////////////////////////////////////////; /// Action to be performed when this menu item is selected.; /// If the selected method requires arguments we popup an; /// automatically generated dialog, otherwise the method is; /// directly executed.",MatchSource.CODE_COMMENT,core/gui/src/TContextMenu.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx:99,Performance,perform,performed,99,"////////////////////////////////////////////////////////////////////////////////; /// Action to be performed when this menu item is selected.; /// If the selected method requires arguments we popup an; /// automatically generated dialog, otherwise the method is; /// directly executed.",MatchSource.CODE_COMMENT,core/gui/src/TContextMenu.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx:119,Deployability,toggle,toggle,119,"////////////////////////////////////////////////////////////////////////////////; /// Action to be performed when this toggle menu item is selected.",MatchSource.CODE_COMMENT,core/gui/src/TContextMenu.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx:99,Performance,perform,performed,99,"////////////////////////////////////////////////////////////////////////////////; /// Action to be performed when this toggle menu item is selected.",MatchSource.CODE_COMMENT,core/gui/src/TContextMenu.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenuImp.cxx:481,Integrability,interface,interface,481,"// @(#)root/base:$Id$; // Author: Nenad Buncic 08/02/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TContextMenuImp; \ingroup Base. This class provides an interface to GUI independent context sensitive popup menus.; */",MatchSource.CODE_COMMENT,core/gui/src/TContextMenuImp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenuImp.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TGuiFactory.cxx:499,Integrability,Depend,Depending,499,"// @(#)root/base:$Id$; // Author: Fons Rademakers 15/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGuiFactory; \ingroup Base. This ABC is a factory for GUI components. Depending on which; factory is active one gets either ROOT native (X11 based with Win95; look and feel), Win32 or Mac components. In case there is no platform dependent implementation on can run in; batch mode directly using an instance of this base class.; */",MatchSource.CODE_COMMENT,core/gui/src/TGuiFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TGuiFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TGuiFactory.cxx:658,Integrability,depend,dependent,658,"// @(#)root/base:$Id$; // Author: Fons Rademakers 15/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGuiFactory; \ingroup Base. This ABC is a factory for GUI components. Depending on which; factory is active one gets either ROOT native (X11 based with Win95; look and feel), Win32 or Mac components. In case there is no platform dependent implementation on can run in; batch mode directly using an instance of this base class.; */",MatchSource.CODE_COMMENT,core/gui/src/TGuiFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TGuiFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx:354,Availability,error,error,354,/** \class TObjectRefSpy; \class TObjectSpy; \ingroup Base. Monitors objects for deletion and reflects the deletion by reverting; the internal pointer to zero. When this pointer is zero we know the; object has been deleted. This avoids the unsafe TestBit(kNotDeleted); hack. The spied object must have the kMustCleanup bit set otherwise; you will get an error.; */,MatchSource.CODE_COMMENT,core/gui/src/TObjectSpy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx:60,Energy Efficiency,Monitor,Monitors,60,/** \class TObjectRefSpy; \class TObjectSpy; \ingroup Base. Monitors objects for deletion and reflects the deletion by reverting; the internal pointer to zero. When this pointer is zero we know the; object has been deleted. This avoids the unsafe TestBit(kNotDeleted); hack. The spied object must have the kMustCleanup bit set otherwise; you will get an error.; */,MatchSource.CODE_COMMENT,core/gui/src/TObjectSpy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx:229,Safety,avoid,avoids,229,/** \class TObjectRefSpy; \class TObjectSpy; \ingroup Base. Monitors objects for deletion and reflects the deletion by reverting; the internal pointer to zero. When this pointer is zero we know the; object has been deleted. This avoids the unsafe TestBit(kNotDeleted); hack. The spied object must have the kMustCleanup bit set otherwise; you will get an error.; */,MatchSource.CODE_COMMENT,core/gui/src/TObjectSpy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx:240,Safety,unsafe,unsafe,240,/** \class TObjectRefSpy; \class TObjectSpy; \ingroup Base. Monitors objects for deletion and reflects the deletion by reverting; the internal pointer to zero. When this pointer is zero we know the; object has been deleted. This avoids the unsafe TestBit(kNotDeleted); hack. The spied object must have the kMustCleanup bit set otherwise; you will get an error.; */,MatchSource.CODE_COMMENT,core/gui/src/TObjectSpy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx:247,Testability,Test,TestBit,247,/** \class TObjectRefSpy; \class TObjectSpy; \ingroup Base. Monitors objects for deletion and reflects the deletion by reverting; the internal pointer to zero. When this pointer is zero we know the; object has been deleted. This avoids the unsafe TestBit(kNotDeleted); hack. The spied object must have the kMustCleanup bit set otherwise; you will get an error.; */,MatchSource.CODE_COMMENT,core/gui/src/TObjectSpy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TObjectSpy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:880,Deployability,toggle,toggle,880,"// @(#)root/meta:$Id$; // Author: Piotr Golonka 30/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TToggle. This class defines toggling facility for both - object's method or; variables.; Assume that user provides an object with a two-state field , and; methods to Get/Set value of this field. This object enables to switch; values via this method when the only thing you know about the field; is the name of the method (or method itself) which sets the field.; This facility is required in context Pop-Up menu, when the only; information about how to toggle a field is a name of methhod which; sets it.; This class may be also used for toggling an integer variable,; which may be important while building universal objects...; When user provides a ""set-method"" of name SetXXX this object tries; automaticaly find a matching ""get-method"" by lookin for a method; with name GetXXX, IsXXX or HasXXX for given object.; */",MatchSource.CODE_COMMENT,core/gui/src/TToggle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:504,Modifiability,variab,variables,504,"// @(#)root/meta:$Id$; // Author: Piotr Golonka 30/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TToggle. This class defines toggling facility for both - object's method or; variables.; Assume that user provides an object with a two-state field , and; methods to Get/Set value of this field. This object enables to switch; values via this method when the only thing you know about the field; is the name of the method (or method itself) which sets the field.; This facility is required in context Pop-Up menu, when the only; information about how to toggle a field is a name of methhod which; sets it.; This class may be also used for toggling an integer variable,; which may be important while building universal objects...; When user provides a ""set-method"" of name SetXXX this object tries; automaticaly find a matching ""get-method"" by lookin for a method; with name GetXXX, IsXXX or HasXXX for given object.; */",MatchSource.CODE_COMMENT,core/gui/src/TToggle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:985,Modifiability,variab,variable,985,"// @(#)root/meta:$Id$; // Author: Piotr Golonka 30/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TToggle. This class defines toggling facility for both - object's method or; variables.; Assume that user provides an object with a two-state field , and; methods to Get/Set value of this field. This object enables to switch; values via this method when the only thing you know about the field; is the name of the method (or method itself) which sets the field.; This facility is required in context Pop-Up menu, when the only; information about how to toggle a field is a name of methhod which; sets it.; This class may be also used for toggling an integer variable,; which may be important while building universal objects...; When user provides a ""set-method"" of name SetXXX this object tries; automaticaly find a matching ""get-method"" by lookin for a method; with name GetXXX, IsXXX or HasXXX for given object.; */",MatchSource.CODE_COMMENT,core/gui/src/TToggle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:188,Deployability,Toggle,Toggle,188,"////////////////////////////////////////////////////////////////////////////////; /// Initializes object for use with a variable - you pass it via reference; /// so it will be modified by Toggle.",MatchSource.CODE_COMMENT,core/gui/src/TToggle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:120,Modifiability,variab,variable,120,"////////////////////////////////////////////////////////////////////////////////; /// Initializes object for use with a variable - you pass it via reference; /// so it will be modified by Toggle.",MatchSource.CODE_COMMENT,core/gui/src/TToggle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:107,Deployability,Toggle,Toggle,107,"////////////////////////////////////////////////////////////////////////////////; /// Returns the state of Toggle according to its current value and; /// fOnValue, returns true if they match.",MatchSource.CODE_COMMENT,core/gui/src/TToggle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:104,Deployability,toggle,toggle,104,"////////////////////////////////////////////////////////////////////////////////; /// Sets the value of toggle to fOnValue or fOffValue according to passed; /// argument.",MatchSource.CODE_COMMENT,core/gui/src/TToggle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:104,Deployability,toggle,toggle,104,"////////////////////////////////////////////////////////////////////////////////; /// Sets the value of toggle and modifies its state according to whether; /// the value is equal to fOnValue.",MatchSource.CODE_COMMENT,core/gui/src/TToggle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:86,Deployability,Toggle,Toggles,86,"////////////////////////////////////////////////////////////////////////////////; /// Toggles the Values and State of this object and connected data!",MatchSource.CODE_COMMENT,core/gui/src/TToggle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:104,Deployability,toggle,toggle,104,"////////////////////////////////////////////////////////////////////////////////; /// Initializes it to toggle an object's datamember using this object's; /// method.",MatchSource.CODE_COMMENT,core/gui/src/TToggle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:94,Deployability,toggle,togglegroup,94,"////////////////////////////////////////////////////////////////////////////////; /// Deletes togglegroup but does not disposes toggled objects!",MatchSource.CODE_COMMENT,core/gui/src/TToggleGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:128,Deployability,toggle,toggled,128,"////////////////////////////////////////////////////////////////////////////////; /// Deletes togglegroup but does not disposes toggled objects!",MatchSource.CODE_COMMENT,core/gui/src/TToggleGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:96,Deployability,toggle,toggle,96,"////////////////////////////////////////////////////////////////////////////////; /// Add a new toggle.",MatchSource.CODE_COMMENT,core/gui/src/TToggleGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:96,Deployability,toggle,toggle,96,"////////////////////////////////////////////////////////////////////////////////; /// Add a new toggle at a specific position.",MatchSource.CODE_COMMENT,core/gui/src/TToggleGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:95,Deployability,toggle,toggle,95,"////////////////////////////////////////////////////////////////////////////////; /// Select a toggle.",MatchSource.CODE_COMMENT,core/gui/src/TToggleGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:97,Deployability,toggle,toggle,97,"////////////////////////////////////////////////////////////////////////////////; /// Selector a toggle.",MatchSource.CODE_COMMENT,core/gui/src/TToggleGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:12,Deployability,toggle,toggled,12,"// Untoggle toggled , and toggle this one if it's present on a list!",MatchSource.CODE_COMMENT,core/gui/src/TToggleGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:26,Deployability,toggle,toggle,26,"// Untoggle toggled , and toggle this one if it's present on a list!",MatchSource.CODE_COMMENT,core/gui/src/TToggleGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:114,Usability,clear,clears,114,"////////////////////////////////////////////////////////////////////////////////; /// Disposes of all objects and clears array",MatchSource.CODE_COMMENT,core/gui/src/TToggleGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx:314,Availability,avail,available,314,"/// A thread-safe stack of N indexes (0 to size - 1).; /// RSlotStack can be used to safely assign a ""processing slot"" number to; /// each thread in multi-thread applications.; /// In release builds, pop and push operations are unchecked, potentially; /// resulting in undefined behavior if more slot numbers than available are; /// requested.; /// An important design assumption is that a slot will almost always be available; /// when a thread asks for it, and if it is not available it will be very soon,; /// therefore a spinlock is used for synchronization.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RSlotStack.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx:417,Availability,avail,available,417,"/// A thread-safe stack of N indexes (0 to size - 1).; /// RSlotStack can be used to safely assign a ""processing slot"" number to; /// each thread in multi-thread applications.; /// In release builds, pop and push operations are unchecked, potentially; /// resulting in undefined behavior if more slot numbers than available are; /// requested.; /// An important design assumption is that a slot will almost always be available; /// when a thread asks for it, and if it is not available it will be very soon,; /// therefore a spinlock is used for synchronization.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RSlotStack.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx:476,Availability,avail,available,476,"/// A thread-safe stack of N indexes (0 to size - 1).; /// RSlotStack can be used to safely assign a ""processing slot"" number to; /// each thread in multi-thread applications.; /// In release builds, pop and push operations are unchecked, potentially; /// resulting in undefined behavior if more slot numbers than available are; /// requested.; /// An important design assumption is that a slot will almost always be available; /// when a thread asks for it, and if it is not available it will be very soon,; /// therefore a spinlock is used for synchronization.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RSlotStack.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx:184,Deployability,release,release,184,"/// A thread-safe stack of N indexes (0 to size - 1).; /// RSlotStack can be used to safely assign a ""processing slot"" number to; /// each thread in multi-thread applications.; /// In release builds, pop and push operations are unchecked, potentially; /// resulting in undefined behavior if more slot numbers than available are; /// requested.; /// An important design assumption is that a slot will almost always be available; /// when a thread asks for it, and if it is not available it will be very soon,; /// therefore a spinlock is used for synchronization.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RSlotStack.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx:546,Integrability,synchroniz,synchronization,546,"/// A thread-safe stack of N indexes (0 to size - 1).; /// RSlotStack can be used to safely assign a ""processing slot"" number to; /// each thread in multi-thread applications.; /// In release builds, pop and push operations are unchecked, potentially; /// resulting in undefined behavior if more slot numbers than available are; /// requested.; /// An important design assumption is that a slot will almost always be available; /// when a thread asks for it, and if it is not available it will be very soon,; /// therefore a spinlock is used for synchronization.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RSlotStack.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx:149,Performance,multi-thread,multi-thread,149,"/// A thread-safe stack of N indexes (0 to size - 1).; /// RSlotStack can be used to safely assign a ""processing slot"" number to; /// each thread in multi-thread applications.; /// In release builds, pop and push operations are unchecked, potentially; /// resulting in undefined behavior if more slot numbers than available are; /// requested.; /// An important design assumption is that a slot will almost always be available; /// when a thread asks for it, and if it is not available it will be very soon,; /// therefore a spinlock is used for synchronization.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RSlotStack.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx:13,Safety,safe,safe,13,"/// A thread-safe stack of N indexes (0 to size - 1).; /// RSlotStack can be used to safely assign a ""processing slot"" number to; /// each thread in multi-thread applications.; /// In release builds, pop and push operations are unchecked, potentially; /// resulting in undefined behavior if more slot numbers than available are; /// requested.; /// An important design assumption is that a slot will almost always be available; /// when a thread asks for it, and if it is not available it will be very soon,; /// therefore a spinlock is used for synchronization.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RSlotStack.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx:85,Safety,safe,safely,85,"/// A thread-safe stack of N indexes (0 to size - 1).; /// RSlotStack can be used to safely assign a ""processing slot"" number to; /// each thread in multi-thread applications.; /// In release builds, pop and push operations are unchecked, potentially; /// resulting in undefined behavior if more slot numbers than available are; /// requested.; /// An important design assumption is that a slot will almost always be available; /// when a thread asks for it, and if it is not available it will be very soon,; /// therefore a spinlock is used for synchronization.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RSlotStack.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx:116,Availability,avail,available,116,"/// A RAII object to pop and push slot numbers from a RSlotStack object.; /// After construction the slot number is available as the data member fSlot.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RSlotStack.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx:789,Deployability,install,installed,789,"// @(#)root/thread:$Id$; // // Author: Xavier Valls Pla 08/05/20; //; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // RTaskArena //; // //; // This file implements the method to initialize and retrieve ROOT's //; // global task arena, together with a method to check for active //; // CPU bandwith control, and a class to wrap the tbb task arena with //; // the purpose of keeping tbb off the installed headers //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RTaskArena.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx:718,Integrability,wrap,wrap,718,"// @(#)root/thread:$Id$; // // Author: Xavier Valls Pla 08/05/20; //; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // RTaskArena //; // //; // This file implements the method to initialize and retrieve ROOT's //; // global task arena, together with a method to check for active //; // CPU bandwith control, and a class to wrap the tbb task arena with //; // the purpose of keeping tbb off the installed headers //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RTaskArena.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx:14,Availability,error,error,14,"// No need to error out for dictionaries.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RTaskArena.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx:98,Availability,avail,available,98,"////////////////////////////////////////////////////////////////////////////////; /// Returns the available number of logical cores.; ///; /// - Checks if there is CFS bandwidth control in place (linux, via cgroups,; /// assuming standard paths); /// - Otherwise, returns the number of logical cores provided by; /// std::thread::hardware_concurrency(); ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RTaskArena.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx:118,Testability,log,logical,118,"////////////////////////////////////////////////////////////////////////////////; /// Returns the available number of logical cores.; ///; /// - Checks if there is CFS bandwidth control in place (linux, via cgroups,; /// assuming standard paths); /// - Otherwise, returns the number of logical cores provided by; /// std::thread::hardware_concurrency(); ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RTaskArena.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx:286,Testability,log,logical,286,"////////////////////////////////////////////////////////////////////////////////; /// Returns the available number of logical cores.; ///; /// - Checks if there is CFS bandwidth control in place (linux, via cgroups,; /// assuming standard paths); /// - Otherwise, returns the number of logical cores provided by; /// std::thread::hardware_concurrency(); ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RTaskArena.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx:86,Integrability,Wrap,Wrapper,86,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper for tbb::task_arena.; ///; /// Necessary in order to keep tbb away from ROOT headers.; /// This class is thought out to be used as a singleton.; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/RTaskArena.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:223,Energy Efficiency,Reduce,Reduce,223,"// MapReduce; // the late return types also check at compile-time whether redfunc is compatible with func,; // other than checking that func is compatible with the type of arguments.; // a static_assert check in TExecutor::Reduce is used to check that redfunc is compatible with the type returned by func",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:3,Energy Efficiency,Reduce,Reduce,3,"// Reduce; //",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:21,Availability,avail,available,21,"// When they are not available, we use a placeholder type instead of TThreadExecutor or TProcessExecutor.; // The corresponding data members will not be used.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:169,Energy Efficiency,Reduce,Reduce,169,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function `nTimes` (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results if the execution policy is multithreaded.; /// Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed as second argument as a parameter.; /// \param nTimes Number of times function should be called.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `const std::vector<T>` where T; /// is the output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:352,Performance,perform,performs,352,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function `nTimes` (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results if the execution policy is multithreaded.; /// Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed as second argument as a parameter.; /// \param nTimes Number of times function should be called.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `const std::vector<T>` where T; /// is the output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:22,Energy Efficiency,reduce,reduce,22,"// check we can apply reduce to objs",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:187,Energy Efficiency,Reduce,Reduce,187,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over a sequence of indexes (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results if the execution policy is multithreaded.; /// Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed assecond argument as a parameter.; /// \param args Sequence of indexes to execute `func` on.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `std::vector<T>` where T is the; /// output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:370,Performance,perform,performs,370,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over a sequence of indexes (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results if the execution policy is multithreaded.; /// Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed assecond argument as a parameter.; /// \param args Sequence of indexes to execute `func` on.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `std::vector<T>` where T is the; /// output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:206,Energy Efficiency,Reduce,Reduce,206,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of an initializer_list (Map) and accumulate the results into a single; /// value (Reduce). Benefits from partial reduction into `nChunks` intermediate results if the execution policy is; /// multithreaded. Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed as second argument as a parameter.; /// \param args initializer_list for a vector to apply `func` on.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `const std::vector<T>` where T; /// is the output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:384,Performance,perform,performs,384,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of an initializer_list (Map) and accumulate the results into a single; /// value (Reduce). Benefits from partial reduction into `nChunks` intermediate results if the execution policy is; /// multithreaded. Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed as second argument as a parameter.; /// \param args initializer_list for a vector to apply `func` on.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `const std::vector<T>` where T; /// is the output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:195,Energy Efficiency,Reduce,Reduce,195,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of a vector (Map) and accumulate the results into a single value; /// (Reduce). Benefits from partial reduction into `nChunks` intermediate results if the execution policy is; /// multithreaded. Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed assecond argument as a parameter.; /// \param args Vector of elements passed as an argument to `func`.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `const std::vector<T>` where T; /// is the output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:373,Performance,perform,performs,373,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of a vector (Map) and accumulate the results into a single value; /// (Reduce). Benefits from partial reduction into `nChunks` intermediate results if the execution policy is; /// multithreaded. Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed assecond argument as a parameter.; /// \param args Vector of elements passed as an argument to `func`.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `const std::vector<T>` where T; /// is the output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:206,Energy Efficiency,Reduce,Reduce,206,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of an immutable vector (Map) and accumulate the results into a single; /// value (Reduce). Benefits from partial reduction into `nChunks` intermediate results if the execution policy is; /// multithreaded. Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed assecond argument as a parameter.; /// \param args Immutable vector, whose elements are passed as an argument to `func`.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `const std::vector<T>` where T; /// is the output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:384,Performance,perform,performs,384,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of an immutable vector (Map) and accumulate the results into a single; /// value (Reduce). Benefits from partial reduction into `nChunks` intermediate results if the execution policy is; /// multithreaded. Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed assecond argument as a parameter.; /// \param args Immutable vector, whose elements are passed as an argument to `func`.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `const std::vector<T>` where T; /// is the output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TTaskGroup.hxx:157,Performance,concurren,concurrent,157,/**; \class ROOT::Experimental::TTaskGroup; \ingroup Parallelism; \brief A class to manage the asynchronous execution of work items. A TTaskGroup represents concurrent execution of a group of tasks. Tasks may be dynamically added to the group as it; is executing.; */,MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TTaskGroup.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TTaskGroup.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:14,Availability,error,error,14,"// No need to error out for dictionaries.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:375,Energy Efficiency,Reduce,Reduce,375,"// MapReduce; //; // We need to reimplement the MapReduce interfaces to allow for parallel reduction, defined in; // this class but not in the base class.; //; // the late return types also check at compile-time whether redfunc is compatible with func,; // other than checking that func is compatible with the type of arguments.; // a static_assert check in TThreadExecutor::Reduce is used to check that redfunc is compatible with the type returned by func",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:58,Integrability,interface,interfaces,58,"// MapReduce; //; // We need to reimplement the MapReduce interfaces to allow for parallel reduction, defined in; // this class but not in the base class.; //; // the late return types also check at compile-time whether redfunc is compatible with func,; // other than checking that func is compatible with the type of arguments.; // a static_assert check in TThreadExecutor::Reduce is used to check that redfunc is compatible with the type returned by func",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:86,Availability,avail,available,86,"// Extension of the Map interfaces with chunking, specific to this class and; // only available from a MapReduce call.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:24,Integrability,interface,interfaces,24,"// Extension of the Map interfaces with chunking, specific to this class and; // only available from a MapReduce call.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:18,Integrability,interface,interface,18,"// Functions that interface with the parallel library used as a backend",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:34,Integrability,wrap,wrapper,34,"/// Pointer to the TBB task arena wrapper",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:3,Safety,Avoid,Avoid,3,"// Avoid empty chunks",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:28,Safety,Avoid,Avoid,28,"// ceiling the division; // Avoid empty chunks",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:27,Safety,Avoid,Avoid,27,"//ceiling the division; // Avoid empty chunks",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:27,Safety,Avoid,Avoid,27,"//ceiling the division; // Avoid empty chunks",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:181,Energy Efficiency,Reduce,Reduce,181,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function `nTimes` in parallel (Map) and accumulate the results into a single value (Reduce).; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,unsigned nTimes,R redfunc)",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:202,Energy Efficiency,Reduce,Reduce,202,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function in parallel over the elements of a vector (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results.; ///; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,unsigned nTimes,R redfunc,unsigned nChunks)",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:202,Energy Efficiency,Reduce,Reduce,202,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function in parallel over the elements of a vector (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results.; ///; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,ROOT::TSeq<INTEGER> args,R redfunc,unsigned nChunks)",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:213,Energy Efficiency,Reduce,Reduce,213,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function in parallel over the elements of an initializer_list (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results.; ///; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,std::initializer_list<T> args,R redfunc,unsigned nChunks)",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:202,Energy Efficiency,Reduce,Reduce,202,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of a vector in parallel (Map) and accumulate the results into a single value (Reduce).; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,std::vector<T> &args,R redfunc)",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:213,Energy Efficiency,Reduce,Reduce,213,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of an immutable vector in parallel (Map) and accumulate the results into a single value (Reduce).; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,const std::vector<T> &args,R redfunc)",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:202,Energy Efficiency,Reduce,Reduce,202,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function in parallel over the elements of a vector (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results.; ///; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,std::vector<T> &args,R redfunc,unsigned nChunks)",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:213,Energy Efficiency,Reduce,Reduce,213,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function in parallel over the elements of an immutable vector (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results.; ///; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,const std::vector<T> &args,R redfunc,unsigned nChunks)",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:116,Energy Efficiency,Reduce,Reduce,116,"//////////////////////////////////////////////////////////////////////////; /// \copydoc ROOT::Internal::TExecutor::Reduce(const std::vector<T> &objs,R redfunc)",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:22,Energy Efficiency,reduce,reduce,22,"// check we can apply reduce to objs",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:88,Energy Efficiency,Reduce,Reduce,88,"//////////////////////////////////////////////////////////////////////////; /// \brief ""Reduce"" an std::vector into a single object in parallel by passing a; /// binary function as the second argument defining the reduction operation.; ///; /// \param objs A vector of elements to combine.; /// \param redfunc Binary reduction function to combine the elements of the vector `objs`.; /// \return A value result of combining the vector elements into a single object of the same type.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:22,Energy Efficiency,reduce,reduce,22,"// check we can apply reduce to objs",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:88,Energy Efficiency,Reduce,Reduce,88,"//////////////////////////////////////////////////////////////////////////; /// \brief ""Reduce"", sequentially, an std::vector into a single object; ///; /// \param objs A vector of elements to combine.; /// \param redfunc Reduction function to combine the elements of the vector `objs`.; /// \return A value result of combining the vector elements into a single object of the same type.",MatchSource.CODE_COMMENT,core/imt/inc/ROOT/TThreadExecutor.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:491,Energy Efficiency,schedul,scheduler,491,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::RTaskArenaWrapper; /// \ingroup Parallelism; /// \brief Wrapper over tbb::task_arena; ///; /// This class is a wrapper over tbb::task_arena, in order to keep; /// TBB away from ROOT's headers. We keep a single global instance to be; /// used by any parallel ROOT class with TBB as a backend.; ///; /// TThreadExecutor, IMT and any class relying on TBB will get a pointer; /// to the scheduler through `ROOT::Internal::GetGlobalTaskArena()`, which; /// will return areference to the only pointer to the TBB scheduler that; /// will be active in any ROOT Process.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] auto gTA = ROOT::Internal::GetGlobalTaskArena(nWorkers) //get a shared_ptr to the global arena and initialize; /// //it with nWorkers. Enable thread safety in ROOT; /// root[] gTA->TaskArenaSize() // Get the current size of the arena (number of worker threads); /// root[] gTA->Access() //std::unique_ptr to the internal tbb::task_arena for interacting directly with it (needed to; /// //call operations such as execute); /// root[] gTA->Access().max_concurrency() // call to tbb::task_arena::max_concurrency(); /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:614,Energy Efficiency,schedul,scheduler,614,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::RTaskArenaWrapper; /// \ingroup Parallelism; /// \brief Wrapper over tbb::task_arena; ///; /// This class is a wrapper over tbb::task_arena, in order to keep; /// TBB away from ROOT's headers. We keep a single global instance to be; /// used by any parallel ROOT class with TBB as a backend.; ///; /// TThreadExecutor, IMT and any class relying on TBB will get a pointer; /// to the scheduler through `ROOT::Internal::GetGlobalTaskArena()`, which; /// will return areference to the only pointer to the TBB scheduler that; /// will be active in any ROOT Process.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] auto gTA = ROOT::Internal::GetGlobalTaskArena(nWorkers) //get a shared_ptr to the global arena and initialize; /// //it with nWorkers. Enable thread safety in ROOT; /// root[] gTA->TaskArenaSize() // Get the current size of the arena (number of worker threads); /// root[] gTA->Access() //std::unique_ptr to the internal tbb::task_arena for interacting directly with it (needed to; /// //call operations such as execute); /// root[] gTA->Access().max_concurrency() // call to tbb::task_arena::max_concurrency(); /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:164,Integrability,Wrap,Wrapper,164,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::RTaskArenaWrapper; /// \ingroup Parallelism; /// \brief Wrapper over tbb::task_arena; ///; /// This class is a wrapper over tbb::task_arena, in order to keep; /// TBB away from ROOT's headers. We keep a single global instance to be; /// used by any parallel ROOT class with TBB as a backend.; ///; /// TThreadExecutor, IMT and any class relying on TBB will get a pointer; /// to the scheduler through `ROOT::Internal::GetGlobalTaskArena()`, which; /// will return areference to the only pointer to the TBB scheduler that; /// will be active in any ROOT Process.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] auto gTA = ROOT::Internal::GetGlobalTaskArena(nWorkers) //get a shared_ptr to the global arena and initialize; /// //it with nWorkers. Enable thread safety in ROOT; /// root[] gTA->TaskArenaSize() // Get the current size of the arena (number of worker threads); /// root[] gTA->Access() //std::unique_ptr to the internal tbb::task_arena for interacting directly with it (needed to; /// //call operations such as execute); /// root[] gTA->Access().max_concurrency() // call to tbb::task_arena::max_concurrency(); /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:219,Integrability,wrap,wrapper,219,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::RTaskArenaWrapper; /// \ingroup Parallelism; /// \brief Wrapper over tbb::task_arena; ///; /// This class is a wrapper over tbb::task_arena, in order to keep; /// TBB away from ROOT's headers. We keep a single global instance to be; /// used by any parallel ROOT class with TBB as a backend.; ///; /// TThreadExecutor, IMT and any class relying on TBB will get a pointer; /// to the scheduler through `ROOT::Internal::GetGlobalTaskArena()`, which; /// will return areference to the only pointer to the TBB scheduler that; /// will be active in any ROOT Process.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] auto gTA = ROOT::Internal::GetGlobalTaskArena(nWorkers) //get a shared_ptr to the global arena and initialize; /// //it with nWorkers. Enable thread safety in ROOT; /// root[] gTA->TaskArenaSize() // Get the current size of the arena (number of worker threads); /// root[] gTA->Access() //std::unique_ptr to the internal tbb::task_arena for interacting directly with it (needed to; /// //call operations such as execute); /// root[] gTA->Access().max_concurrency() // call to tbb::task_arena::max_concurrency(); /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:871,Safety,safe,safety,871,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::RTaskArenaWrapper; /// \ingroup Parallelism; /// \brief Wrapper over tbb::task_arena; ///; /// This class is a wrapper over tbb::task_arena, in order to keep; /// TBB away from ROOT's headers. We keep a single global instance to be; /// used by any parallel ROOT class with TBB as a backend.; ///; /// TThreadExecutor, IMT and any class relying on TBB will get a pointer; /// to the scheduler through `ROOT::Internal::GetGlobalTaskArena()`, which; /// will return areference to the only pointer to the TBB scheduler that; /// will be active in any ROOT Process.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] auto gTA = ROOT::Internal::GetGlobalTaskArena(nWorkers) //get a shared_ptr to the global arena and initialize; /// //it with nWorkers. Enable thread safety in ROOT; /// root[] gTA->TaskArenaSize() // Get the current size of the arena (number of worker threads); /// root[] gTA->Access() //std::unique_ptr to the internal tbb::task_arena for interacting directly with it (needed to; /// //call operations such as execute); /// root[] gTA->Access().max_concurrency() // call to tbb::task_arena::max_concurrency(); /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:1000,Security,Access,Access,1000,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::RTaskArenaWrapper; /// \ingroup Parallelism; /// \brief Wrapper over tbb::task_arena; ///; /// This class is a wrapper over tbb::task_arena, in order to keep; /// TBB away from ROOT's headers. We keep a single global instance to be; /// used by any parallel ROOT class with TBB as a backend.; ///; /// TThreadExecutor, IMT and any class relying on TBB will get a pointer; /// to the scheduler through `ROOT::Internal::GetGlobalTaskArena()`, which; /// will return areference to the only pointer to the TBB scheduler that; /// will be active in any ROOT Process.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] auto gTA = ROOT::Internal::GetGlobalTaskArena(nWorkers) //get a shared_ptr to the global arena and initialize; /// //it with nWorkers. Enable thread safety in ROOT; /// root[] gTA->TaskArenaSize() // Get the current size of the arena (number of worker threads); /// root[] gTA->Access() //std::unique_ptr to the internal tbb::task_arena for interacting directly with it (needed to; /// //call operations such as execute); /// root[] gTA->Access().max_concurrency() // call to tbb::task_arena::max_concurrency(); /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:1160,Security,Access,Access,1160,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::RTaskArenaWrapper; /// \ingroup Parallelism; /// \brief Wrapper over tbb::task_arena; ///; /// This class is a wrapper over tbb::task_arena, in order to keep; /// TBB away from ROOT's headers. We keep a single global instance to be; /// used by any parallel ROOT class with TBB as a backend.; ///; /// TThreadExecutor, IMT and any class relying on TBB will get a pointer; /// to the scheduler through `ROOT::Internal::GetGlobalTaskArena()`, which; /// will return areference to the only pointer to the TBB scheduler that; /// will be active in any ROOT Process.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] auto gTA = ROOT::Internal::GetGlobalTaskArena(nWorkers) //get a shared_ptr to the global arena and initialize; /// //it with nWorkers. Enable thread safety in ROOT; /// root[] gTA->TaskArenaSize() // Get the current size of the arena (number of worker threads); /// root[] gTA->Access() //std::unique_ptr to the internal tbb::task_arena for interacting directly with it (needed to; /// //call operations such as execute); /// root[] gTA->Access().max_concurrency() // call to tbb::task_arena::max_concurrency(); /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:21,Modifiability,variab,variable,21,"// Honor environment variable `ROOT_MAX_THREADS` if set.; // Also honor cgroup quotas if set: see https://github.com/oneapi-src/oneTBB/issues/190",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:7,Safety,detect,detect,7,/*auto-detect base*/,MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:223,Safety,avoid,avoids,223,"////////////////////////////////////////////////////////////////////////////////; /// Initializes the tbb::task_arena within RTaskArenaWrapper.; ///; /// * Can't be reinitialized; /// * Checks for CPU bandwidth control and avoids oversubscribing; /// * If no BC in place and maxConcurrency<1, defaults to the default tbb number of threads,; /// which is CPU affinity aware; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:109,Integrability,wrap,wrapped,109,"////////////////////////////////////////////////////////////////////////////////; /// Provides access to the wrapped tbb::task_arena.; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:95,Security,access,access,95,"////////////////////////////////////////////////////////////////////////////////; /// Provides access to the wrapped tbb::task_arena.; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/RTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:2469,Availability,avail,available,2469,"nts (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. The signature of the reduce function should be `(const std::vector<T>) -> T`; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// <b>(Note: Please be aware that chunking is only available when the policy is kMultiThread, ignoring this argument in; /// other cases)</b> This may be useful to avoid the overhead introduced when running really short tasks. In this case,; /// the reduction function should be independent of the size of the vector returned by Map due to optimization of the; /// number of chunks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::Internal::TExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int>; /// &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::Internal::TExecutor; /// pool(ROOT::EExecutionPolicy::kMultiProcess); auto hist = pool.MapReduce(CreateAndFillHists, 10,; /// PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/TExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:2239,Energy Efficiency,reduce,reduce,2239,"nts (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. The signature of the reduce function should be `(const std::vector<T>) -> T`; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// <b>(Note: Please be aware that chunking is only available when the policy is kMultiThread, ignoring this argument in; /// other cases)</b> This may be useful to avoid the overhead introduced when running really short tasks. In this case,; /// the reduction function should be independent of the size of the vector returned by Map due to optimization of the; /// number of chunks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::Internal::TExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int>; /// &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::Internal::TExecutor; /// pool(ROOT::EExecutionPolicy::kMultiProcess); auto hist = pool.MapReduce(CreateAndFillHists, 10,; /// PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/TExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:3177,Energy Efficiency,Reduce,ReduceObjects,3177,"nts (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. The signature of the reduce function should be `(const std::vector<T>) -> T`; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// <b>(Note: Please be aware that chunking is only available when the policy is kMultiThread, ignoring this argument in; /// other cases)</b> This may be useful to avoid the overhead introduced when running really short tasks. In this case,; /// the reduction function should be independent of the size of the vector returned by Map due to optimization of the; /// number of chunks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::Internal::TExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int>; /// &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::Internal::TExecutor; /// pool(ROOT::EExecutionPolicy::kMultiProcess); auto hist = pool.MapReduce(CreateAndFillHists, 10,; /// PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/TExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:156,Integrability,interface,interface,156,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::TExecutor; /// \brief This class implements the interface to execute the same task; /// multiple times, sequentially or in parallel depending on the execution policy passed; /// as a first parameter on construction, and possibly with different arguments every time.; ///; /// ###ROOT::Internal::TExecutor::Map; /// The two possible usages of the Map method are:\n; /// * `Map(F func, unsigned nTimes)`: func is executed nTimes with no arguments; /// * `Map(F func, T& args)`: func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// n workers; where n tipically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included. ROOT::::Internal::TExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves ",MatchSource.CODE_COMMENT,core/imt/src/TExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:240,Integrability,depend,depending,240,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::TExecutor; /// \brief This class implements the interface to execute the same task; /// multiple times, sequentially or in parallel depending on the execution policy passed; /// as a first parameter on construction, and possibly with different arguments every time.; ///; /// ###ROOT::Internal::TExecutor::Map; /// The two possible usages of the Map method are:\n; /// * `Map(F func, unsigned nTimes)`: func is executed nTimes with no arguments; /// * `Map(F func, T& args)`: func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// n workers; where n tipically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included. ROOT::::Internal::TExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves ",MatchSource.CODE_COMMENT,core/imt/src/TExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:1718,Integrability,wrap,wrapped,1718,"r either signature, func is executed as many times as needed by a pool of; /// n workers; where n tipically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included. ROOT::::Internal::TExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. The signature of the reduce function should be `(const std::vector<T>) -> T`; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// <b>(Note: Please be aware that chunking is only available when the policy is kMultiThread, ignoring this argument in; /// other cases)</b> This may be useful to avoid the overhead introduced when running really short tasks. In this case,; /// th",MatchSource.CODE_COMMENT,core/imt/src/TExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:2758,Performance,optimiz,optimization,2758,"nts (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. The signature of the reduce function should be `(const std::vector<T>) -> T`; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// <b>(Note: Please be aware that chunking is only available when the policy is kMultiThread, ignoring this argument in; /// other cases)</b> This may be useful to avoid the overhead introduced when running really short tasks. In this case,; /// the reduction function should be independent of the size of the vector returned by Map due to optimization of the; /// number of chunks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::Internal::TExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int>; /// &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::Internal::TExecutor; /// pool(ROOT::EExecutionPolicy::kMultiProcess); auto hist = pool.MapReduce(CreateAndFillHists, 10,; /// PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/TExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:2582,Safety,avoid,avoid,2582,"nts (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. The signature of the reduce function should be `(const std::vector<T>) -> T`; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// <b>(Note: Please be aware that chunking is only available when the policy is kMultiThread, ignoring this argument in; /// other cases)</b> This may be useful to avoid the overhead introduced when running really short tasks. In this case,; /// the reduction function should be independent of the size of the vector returned by Map due to optimization of the; /// number of chunks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::Internal::TExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int>; /// &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::Internal::TExecutor; /// pool(ROOT::EExecutionPolicy::kMultiProcess); auto hist = pool.MapReduce(CreateAndFillHists, 10,; /// PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/TExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:1096,Usability,simpl,simply,1096,"///; ///; /// \class ROOT::Internal::TExecutor; /// \brief This class implements the interface to execute the same task; /// multiple times, sequentially or in parallel depending on the execution policy passed; /// as a first parameter on construction, and possibly with different arguments every time.; ///; /// ###ROOT::Internal::TExecutor::Map; /// The two possible usages of the Map method are:\n; /// * `Map(F func, unsigned nTimes)`: func is executed nTimes with no arguments; /// * `Map(F func, T& args)`: func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// n workers; where n tipically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included. ROOT::::Internal::TExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third arg",MatchSource.CODE_COMMENT,core/imt/src/TExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TImplicitMT.cxx:649,Performance,multi-thread,multi-threading,649,"// @(#)root/thread:$Id$; // // Author: Enric Tejedor Saavedra 03/12/15; //; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TImplicitMT //; // //; // This file implements the methods to enable, disable and check the //; // status of the global implicit multi-threading in ROOT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/imt/src/TImplicitMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TImplicitMT.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TTaskGroup.cxx:157,Performance,concurren,concurrent,157,/**; \class ROOT::Experimental::TTaskGroup; \ingroup Parallelism; \brief A class to manage the asynchronous execution of work items. A TTaskGroup represents concurrent execution of a group of tasks.; Tasks may be dynamically added to the group as it is executing.; Nesting TTaskGroup instances may result in a runtime overhead.; */,MatchSource.CODE_COMMENT,core/imt/src/TTaskGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TTaskGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TTaskGroup.cxx:212,Energy Efficiency,efficient,efficient,212,"/////////////////////////////////////////////////////////////////////////////; /// Add to the group an item of work which will be ran asynchronously.; /// Adding many small items of work to the TTaskGroup is not efficient,; /// unless they run for long enough. If the work to be done is little, look; /// try to express nested parallelism or resort to other constructs such as; /// the TThreadExecutor.; /// Trying to add a work item to the group while it is in waiting state; /// makes the method block.",MatchSource.CODE_COMMENT,core/imt/src/TTaskGroup.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TTaskGroup.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:417,Energy Efficiency,adapt,adapting,417,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TThreadExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel threads, possibly with different arguments every; /// time.; ///; /// ### ROOT::TThreadExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutorCRTP\n, adapting them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in ",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:721,Energy Efficiency,reduce,reduce,721,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TThreadExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel threads, possibly with different arguments every; /// time.; ///; /// ### ROOT::TThreadExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutorCRTP\n, adapting them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in ",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:3728,Energy Efficiency,Reduce,ReduceObjects,3728,"ects returned by the corresponding Map execution to ""squash"" them; /// into a single object. This function should be independent of the size of; /// the vector returned by Map due to optimization of the number of chunks.; ///; /// If this function is a binary operator, the ""squashing"" will be performed in parallel.; /// This is exclusive to ROOT::TThreadExecutor and not any other ROOT::TExecutorCRTP-derived classes.\n; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// This may be useful to avoid the overhead introduced when running really short tasks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int> &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::TThreadExecutor pool; auto hist = pool.MapReduce(CreateAndFillHists, 10, PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////; /*; VERY IMPORTANT NOTE ABOUT WORK ISOLATION. We enclose the parallel_for and parallel_reduce invocations in a; task_arena::isolate because we want to prevent a thread to start executing an; outer task when the task it's running spawned subtasks, e.g. with a parallel_for,; and is waiting on inner tasks to be completed. While this change has a negligible performance impact, it has benefits for; several applications, for example big parallelised HEP frameworks and; RDataFrame analyses.; - For HEP Frameworks, without work isolation, it can happen that a huge; framework task is pulled by a yielding ROOT task.; This causes to delay the processing of the event which is interrupted by the; long task.; For example, work isolation avoids that during the wait due to the parallel; flushing of baskets, a very long simulation task is pulled in by the idle task.; - For RDataFrame analyses we want to guarantee that each entry is processed from; the",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:181,Integrability,interface,interface,181,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TThreadExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel threads, possibly with different arguments every; /// time.; ///; /// ### ROOT::TThreadExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutorCRTP\n, adapting them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in ",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:378,Integrability,interface,interfaces,378,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TThreadExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel threads, possibly with different arguments every; /// time.; ///; /// ### ROOT::TThreadExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutorCRTP\n, adapting them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in ",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:2135,Integrability,wrap,wrapped,2135,"her signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; ///; /// #### Examples:; ///; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto hists = pool.Map(CreateHisto, 10);; /// root[] ROOT::TThreadExecutor pool(2); auto squares = pool.Map([](int a) { return a*a; }, {1,2,3});; /// ~~~; ///; /// ### ROOT::TThreadExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. This function should be independent of the size of; /// the vector returned by Map due to optimization of the number of chunks.; ///; /// If this function is a binary operator, the ""squashing"" will be performed i",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:365,Modifiability,inherit,inherits,365,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TThreadExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel threads, possibly with different arguments every; /// time.; ///; /// ### ROOT::TThreadExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutorCRTP\n, adapting them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in ",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:417,Modifiability,adapt,adapting,417,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TThreadExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel threads, possibly with different arguments every; /// time.; ///; /// ### ROOT::TThreadExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutorCRTP\n, adapting them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in ",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:470,Modifiability,extend,extends,470,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TThreadExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel threads, possibly with different arguments every; /// time.; ///; /// ### ROOT::TThreadExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutorCRTP\n, adapting them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in ",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:2964,Performance,optimiz,optimization,2964,"integer only for the first.; /// \endparblock; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; ///; /// #### Examples:; ///; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto hists = pool.Map(CreateHisto, 10);; /// root[] ROOT::TThreadExecutor pool(2); auto squares = pool.Map([](int a) { return a*a; }, {1,2,3});; /// ~~~; ///; /// ### ROOT::TThreadExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. This function should be independent of the size of; /// the vector returned by Map due to optimization of the number of chunks.; ///; /// If this function is a binary operator, the ""squashing"" will be performed in parallel.; /// This is exclusive to ROOT::TThreadExecutor and not any other ROOT::TExecutorCRTP-derived classes.\n; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// This may be useful to avoid the overhead introduced when running really short tasks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int> &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::TThreadExecutor pool; auto hist = pool.MapReduce(CreateAndFillHists, 10, PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////; /*; VERY IMPORTANT NOTE ABOUT WORK ISOLATION. We enclose the parallel_for and parallel_reduce invocati",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:3075,Performance,perform,performed,3075,"re than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; ///; /// #### Examples:; ///; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto hists = pool.Map(CreateHisto, 10);; /// root[] ROOT::TThreadExecutor pool(2); auto squares = pool.Map([](int a) { return a*a; }, {1,2,3});; /// ~~~; ///; /// ### ROOT::TThreadExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. This function should be independent of the size of; /// the vector returned by Map due to optimization of the number of chunks.; ///; /// If this function is a binary operator, the ""squashing"" will be performed in parallel.; /// This is exclusive to ROOT::TThreadExecutor and not any other ROOT::TExecutorCRTP-derived classes.\n; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// This may be useful to avoid the overhead introduced when running really short tasks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int> &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::TThreadExecutor pool; auto hist = pool.MapReduce(CreateAndFillHists, 10, PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////; /*; VERY IMPORTANT NOTE ABOUT WORK ISOLATION. We enclose the parallel_for and parallel_reduce invocations in a; task_arena::isolate because we want to prevent a thread to start executing an; outer task when the tas",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:4191,Performance,perform,performance,4191,"lel.; /// This is exclusive to ROOT::TThreadExecutor and not any other ROOT::TExecutorCRTP-derived classes.\n; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// This may be useful to avoid the overhead introduced when running really short tasks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int> &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::TThreadExecutor pool; auto hist = pool.MapReduce(CreateAndFillHists, 10, PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////; /*; VERY IMPORTANT NOTE ABOUT WORK ISOLATION. We enclose the parallel_for and parallel_reduce invocations in a; task_arena::isolate because we want to prevent a thread to start executing an; outer task when the task it's running spawned subtasks, e.g. with a parallel_for,; and is waiting on inner tasks to be completed. While this change has a negligible performance impact, it has benefits for; several applications, for example big parallelised HEP frameworks and; RDataFrame analyses.; - For HEP Frameworks, without work isolation, it can happen that a huge; framework task is pulled by a yielding ROOT task.; This causes to delay the processing of the event which is interrupted by the; long task.; For example, work isolation avoids that during the wait due to the parallel; flushing of baskets, a very long simulation task is pulled in by the idle task.; - For RDataFrame analyses we want to guarantee that each entry is processed from; the beginning to the end without TBB interrupting it to pull in other work items.; As a corollary, the usage of ROOT (or TBB in work isolation mode) in actions; and transformations guarantee that each entry is processed from the beginning to; the end without being interrupted by the processing of outer tasks.; */",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:3351,Safety,avoid,avoid,3351,"; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto hists = pool.Map(CreateHisto, 10);; /// root[] ROOT::TThreadExecutor pool(2); auto squares = pool.Map([](int a) { return a*a; }, {1,2,3});; /// ~~~; ///; /// ### ROOT::TThreadExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. This function should be independent of the size of; /// the vector returned by Map due to optimization of the number of chunks.; ///; /// If this function is a binary operator, the ""squashing"" will be performed in parallel.; /// This is exclusive to ROOT::TThreadExecutor and not any other ROOT::TExecutorCRTP-derived classes.\n; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// This may be useful to avoid the overhead introduced when running really short tasks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int> &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::TThreadExecutor pool; auto hist = pool.MapReduce(CreateAndFillHists, 10, PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////; /*; VERY IMPORTANT NOTE ABOUT WORK ISOLATION. We enclose the parallel_for and parallel_reduce invocations in a; task_arena::isolate because we want to prevent a thread to start executing an; outer task when the task it's running spawned subtasks, e.g. with a parallel_for,; and is waiting on inner tasks to be completed. While this change has a negligible performance impact, it has benefits for; several applications, for example big parallelised HEP frameworks and; RDataFrame analyses.; - For HEP Frameworks, without work isolatio",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:4567,Safety,avoid,avoids,4567,"lel.; /// This is exclusive to ROOT::TThreadExecutor and not any other ROOT::TExecutorCRTP-derived classes.\n; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// This may be useful to avoid the overhead introduced when running really short tasks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int> &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::TThreadExecutor pool; auto hist = pool.MapReduce(CreateAndFillHists, 10, PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////; /*; VERY IMPORTANT NOTE ABOUT WORK ISOLATION. We enclose the parallel_for and parallel_reduce invocations in a; task_arena::isolate because we want to prevent a thread to start executing an; outer task when the task it's running spawned subtasks, e.g. with a parallel_for,; and is waiting on inner tasks to be completed. While this change has a negligible performance impact, it has benefits for; several applications, for example big parallelised HEP frameworks and; RDataFrame analyses.; - For HEP Frameworks, without work isolation, it can happen that a huge; framework task is pulled by a yielding ROOT task.; This causes to delay the processing of the event which is interrupted by the; long task.; For example, work isolation avoids that during the wait due to the parallel; flushing of baskets, a very long simulation task is pulled in by the idle task.; - For RDataFrame analyses we want to guarantee that each entry is processed from; the beginning to the end without TBB interrupting it to pull in other work items.; As a corollary, the usage of ROOT (or TBB in work isolation mode) in actions; and transformations guarantee that each entry is processed from the beginning to; the end without being interrupted by the processing of outer tasks.; */",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:174,Usability,simpl,simple,174,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TThreadExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel threads, possibly with different arguments every; /// time.; ///; /// ### ROOT::TThreadExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutorCRTP\n, adapting them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in ",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:1520,Usability,simpl,simply,1520,"ng them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; ///; /// #### Examples:; ///; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool;",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:449,Availability,avail,available,449,"// End NS Internal; //////////////////////////////////////////////////////////////////////////; /// \brief Class constructor.; /// If the scheduler is active (e.g. because another TThreadExecutor is in flight, or ROOT::EnableImplicitMT() was; /// called), work with the current pool of threads.; /// If not, initialize the pool of threads, spawning nThreads. nThreads' default value, 0, initializes the; /// pool with as many logical threads as are available in the system (see NLogicalCores in RTaskArenaWrapper.cxx).; ///; /// At construction time, TThreadExecutor automatically enables ROOT's thread-safety locks as per calling; /// ROOT::EnableThreadSafety().",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:138,Energy Efficiency,schedul,scheduler,138,"// End NS Internal; //////////////////////////////////////////////////////////////////////////; /// \brief Class constructor.; /// If the scheduler is active (e.g. because another TThreadExecutor is in flight, or ROOT::EnableImplicitMT() was; /// called), work with the current pool of threads.; /// If not, initialize the pool of threads, spawning nThreads. nThreads' default value, 0, initializes the; /// pool with as many logical threads as are available in the system (see NLogicalCores in RTaskArenaWrapper.cxx).; ///; /// At construction time, TThreadExecutor automatically enables ROOT's thread-safety locks as per calling; /// ROOT::EnableThreadSafety().",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:603,Safety,safe,safety,603,"// End NS Internal; //////////////////////////////////////////////////////////////////////////; /// \brief Class constructor.; /// If the scheduler is active (e.g. because another TThreadExecutor is in flight, or ROOT::EnableImplicitMT() was; /// called), work with the current pool of threads.; /// If not, initialize the pool of threads, spawning nThreads. nThreads' default value, 0, initializes the; /// pool with as many logical threads as are available in the system (see NLogicalCores in RTaskArenaWrapper.cxx).; ///; /// At construction time, TThreadExecutor automatically enables ROOT's thread-safety locks as per calling; /// ROOT::EnableThreadSafety().",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:426,Testability,log,logical,426,"// End NS Internal; //////////////////////////////////////////////////////////////////////////; /// \brief Class constructor.; /// If the scheduler is active (e.g. because another TThreadExecutor is in flight, or ROOT::EnableImplicitMT() was; /// called), work with the current pool of threads.; /// If not, initialize the pool of threads, spawning nThreads. nThreads' default value, 0, initializes the; /// pool with as many logical threads as are available in the system (see NLogicalCores in RTaskArenaWrapper.cxx).; ///; /// At construction time, TThreadExecutor automatically enables ROOT's thread-safety locks as per calling; /// ROOT::EnableThreadSafety().",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:88,Energy Efficiency,Reduce,Reduce,88,"//////////////////////////////////////////////////////////////////////////; /// \brief ""Reduce"" in parallel an std::vector<double> into a single double value; ///; /// \param objs A vector of elements to combine.; /// \param redfunc Reduction function to combine the elements of the vector `objs`.; /// \return A value result of combining the vector elements into a single object of the same type.",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:88,Energy Efficiency,Reduce,Reduce,88,"//////////////////////////////////////////////////////////////////////////; /// \brief ""Reduce"" in parallel an std::vector<float> into a single float value; ///; /// \param objs A vector of elements to combine.; /// \param redfunc Reduction function to combine the elements of the vector `objs`.; /// \return A value result of combining the vector elements into a single object of the same type.",MatchSource.CODE_COMMENT,core/imt/src/TThreadExecutor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx:65,Testability,test,tests,65,"// define the range; /// Suppress the task arena diagnostics for tests where we try to create the task arena multiple times.",MatchSource.CODE_COMMENT,core/imt/test/testRTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx:77,Deployability,Integrat,Integration,77,"////////////////////////////////////////////////////////////////////////; // Integration Tests",MatchSource.CODE_COMMENT,core/imt/test/testRTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx:77,Integrability,Integrat,Integration,77,"////////////////////////////////////////////////////////////////////////; // Integration Tests",MatchSource.CODE_COMMENT,core/imt/test/testRTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx:89,Testability,Test,Tests,89,"////////////////////////////////////////////////////////////////////////; // Integration Tests",MatchSource.CODE_COMMENT,core/imt/test/testRTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx:357,Deployability,release,released,357,"// Acquire pointers to ROOT's task arena from many threads in parallel.; // To create more chaos, half of the threads will immediately try to get the pointer,; // while the other half waits for a condition variable.; // To test destroying and recreating a task arena, the first half of the shared; // pointers will be destroyed before the other threads are released.; // Then, using a notify_all(), the other half of threads will wake up; // and race to create a task arena again.",MatchSource.CODE_COMMENT,core/imt/test/testRTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx:206,Modifiability,variab,variable,206,"// Acquire pointers to ROOT's task arena from many threads in parallel.; // To create more chaos, half of the threads will immediately try to get the pointer,; // while the other half waits for a condition variable.; // To test destroying and recreating a task arena, the first half of the shared; // pointers will be destroyed before the other threads are released.; // Then, using a notify_all(), the other half of threads will wake up; // and race to create a task arena again.",MatchSource.CODE_COMMENT,core/imt/test/testRTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx:223,Testability,test,test,223,"// Acquire pointers to ROOT's task arena from many threads in parallel.; // To create more chaos, half of the threads will immediately try to get the pointer,; // while the other half waits for a condition variable.; // To test destroying and recreating a task arena, the first half of the shared; // pointers will be destroyed before the other threads are released.; // Then, using a notify_all(), the other half of threads will wake up; // and race to create a task arena again.",MatchSource.CODE_COMMENT,core/imt/test/testRTaskArena.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testTBBGlobalControl.cxx:13,Testability,test,test,13,"// skip this test on systems with only 1 core",MatchSource.CODE_COMMENT,core/imt/test/testTBBGlobalControl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testTBBGlobalControl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testTBBGlobalControl.cxx:13,Testability,test,test,13,"// skip this test on systems with only 1 core; // ***See them warn***",MatchSource.CODE_COMMENT,core/imt/test/testTBBGlobalControl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testTBBGlobalControl.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lz4/inc/ZipLZ4.h:102,Safety,avoid,avoid,102,"// NOTE: the ROOT compression libraries aren't consistently written in C++; hence the; // #ifdef's to avoid problems with C code.",MatchSource.CODE_COMMENT,core/lz4/inc/ZipLZ4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/inc/ZipLZ4.h
https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:166,Security,checksum,checksum,166,"// Header consists of:; // - 2 byte identifier ""L4""; // - 1 byte LZ4 version string.; // - 3 bytes of uncompressed size; // - 3 bytes of compressed size; // - 8 byte checksum using xxhash 64.",MatchSource.CODE_COMMENT,core/lz4/src/ZipLZ4.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:139,Modifiability,layers,layers,139,"/* compressed size, including the checksum. */; // NOTE: these next 6 bytes are required from the ROOT compressed buffer format;; // upper layers will assume they are laid out in a specific manner.",MatchSource.CODE_COMMENT,core/lz4/src/ZipLZ4.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:34,Security,checksum,checksum,34,"/* compressed size, including the checksum. */; // NOTE: these next 6 bytes are required from the ROOT compressed buffer format;; // upper layers will assume they are laid out in a specific manner.",MatchSource.CODE_COMMENT,core/lz4/src/ZipLZ4.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:13,Security,checksum,checksum,13,"// Write out checksum.",MatchSource.CODE_COMMENT,core/lz4/src/ZipLZ4.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:143,Modifiability,layers,layers,143,"// NOTE: We don't check that srcsize / tgtsize is reasonable or within the ROOT-imposed limits.; // This is assumed to be handled by the upper layers.",MatchSource.CODE_COMMENT,core/lz4/src/ZipLZ4.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:109,Performance,perform,perform,109,"// TODO: The checksum followed by the decompression means we iterate through the buffer twice.; // We should perform some performance tests to see whether we can interleave the two -- i.e., at; // what size of chunks does interleaving (avoiding two fetches from RAM) improve enough for the; // extra function call costs? NOTE that ROOT limits the buffer size to 16MB.",MatchSource.CODE_COMMENT,core/lz4/src/ZipLZ4.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:122,Performance,perform,performance,122,"// TODO: The checksum followed by the decompression means we iterate through the buffer twice.; // We should perform some performance tests to see whether we can interleave the two -- i.e., at; // what size of chunks does interleaving (avoiding two fetches from RAM) improve enough for the; // extra function call costs? NOTE that ROOT limits the buffer size to 16MB.",MatchSource.CODE_COMMENT,core/lz4/src/ZipLZ4.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:236,Safety,avoid,avoiding,236,"// TODO: The checksum followed by the decompression means we iterate through the buffer twice.; // We should perform some performance tests to see whether we can interleave the two -- i.e., at; // what size of chunks does interleaving (avoiding two fetches from RAM) improve enough for the; // extra function call costs? NOTE that ROOT limits the buffer size to 16MB.",MatchSource.CODE_COMMENT,core/lz4/src/ZipLZ4.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:13,Security,checksum,checksum,13,"// TODO: The checksum followed by the decompression means we iterate through the buffer twice.; // We should perform some performance tests to see whether we can interleave the two -- i.e., at; // what size of chunks does interleaving (avoiding two fetches from RAM) improve enough for the; // extra function call costs? NOTE that ROOT limits the buffer size to 16MB.",MatchSource.CODE_COMMENT,core/lz4/src/ZipLZ4.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:134,Testability,test,tests,134,"// TODO: The checksum followed by the decompression means we iterate through the buffer twice.; // We should perform some performance tests to see whether we can interleave the two -- i.e., at; // what size of chunks does interleaving (avoiding two fetches from RAM) improve enough for the; // extra function call costs? NOTE that ROOT limits the buffer size to 16MB.",MatchSource.CODE_COMMENT,core/lz4/src/ZipLZ4.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx
https://github.com/root-project/root/tree/v6-32-06/core/lzma/src/ZipLZMA.c:3,Energy Efficiency,reduce,reduce,3,"/* reduce the dictionary size if larger than 1/4 the input size, preset; dictionaries size can be expensively large; */",MatchSource.CODE_COMMENT,core/lzma/src/ZipLZMA.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lzma/src/ZipLZMA.c
https://github.com/root-project/root/tree/v6-32-06/core/lzma/src/ZipLZMA.c:23,Availability,error,error,23,/* No need to print an error message. We simply abandon the compression; the buffer cannot be compressed or compressed buffer would be larger than original buffer; */,MatchSource.CODE_COMMENT,core/lzma/src/ZipLZMA.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lzma/src/ZipLZMA.c
https://github.com/root-project/root/tree/v6-32-06/core/lzma/src/ZipLZMA.c:29,Integrability,message,message,29,/* No need to print an error message. We simply abandon the compression; the buffer cannot be compressed or compressed buffer would be larger than original buffer; */,MatchSource.CODE_COMMENT,core/lzma/src/ZipLZMA.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lzma/src/ZipLZMA.c
https://github.com/root-project/root/tree/v6-32-06/core/lzma/src/ZipLZMA.c:41,Usability,simpl,simply,41,/* No need to print an error message. We simply abandon the compression; the buffer cannot be compressed or compressed buffer would be larger than original buffer; */,MatchSource.CODE_COMMENT,core/lzma/src/ZipLZMA.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lzma/src/ZipLZMA.c
https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h:58,Deployability,release,release,58,"//Even if both reference the same NSObject, it's ok to do release.",MatchSource.CODE_COMMENT,core/macosx/inc/CocoaUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h:2,Energy Efficiency,Drain,Drains,2,"//Drains the previous pool (if any); //and activates a new one.",MatchSource.CODE_COMMENT,core/macosx/inc/CocoaUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h:217,Deployability,release,release,217,"///////////////////////////////////////////////////////////; // //; // Strong reference for a Core Foundation object. //; // This class can have specializations for CF object //; // with it's own version of retain or release. //; // //; ///////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/macosx/inc/CocoaUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h:177,Energy Efficiency,allocate,allocated,177,"///////////////////////////////////////////////////; // //; // Scoped array - scope guard for an array. //; // Sometimes, I can not use std::vector, //; // for example, data is allocated in TGCocoa //; // and must be later freed in Objective-C code. //; // To make the code exception-safe, I still //; // have to care about memory, which is already //; // allocated. //; // //; ///////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/macosx/inc/CocoaUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h:356,Energy Efficiency,allocate,allocated,356,"///////////////////////////////////////////////////; // //; // Scoped array - scope guard for an array. //; // Sometimes, I can not use std::vector, //; // for example, data is allocated in TGCocoa //; // and must be later freed in Objective-C code. //; // To make the code exception-safe, I still //; // have to care about memory, which is already //; // allocated. //; // //; ///////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/macosx/inc/CocoaUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h:284,Safety,safe,safe,284,"///////////////////////////////////////////////////; // //; // Scoped array - scope guard for an array. //; // Sometimes, I can not use std::vector, //; // for example, data is allocated in TGCocoa //; // and must be later freed in Objective-C code. //; // To make the code exception-safe, I still //; // have to care about memory, which is already //; // allocated. //; // //; ///////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/macosx/inc/CocoaUtils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/RootMetaSelection.h:18,Safety,avoid,avoid,18,"///\brief Used to avoid to select all instances of a template",MatchSource.CODE_COMMENT,core/meta/inc/RootMetaSelection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/RootMetaSelection.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TBaseClass.h:3,Performance,cache,cache,3,"// cache of IsSTLContainer()",MatchSource.CODE_COMMENT,core/meta/inc/TBaseClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TBaseClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:64,Performance,load,loaded,64,"// The library containing the dictionary for this class was; // loaded and has been unloaded from memory.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:160,Performance,load,loaded,160,"// The class has a TClass proper bootstrap coming from a run; // through rootcling/genreflex/TMetaUtils and the library; // containing this dictionary has been loaded in memory.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:48,Energy Efficiency,allocate,allocated,48,"// ""Typed"" pointer that recalls how TClass::New allocated the object.; // It is returned by TClass:NewObject and should be passed to TClass::DeleteArray or TClass::Destructor; // to delete the object.; // It is also used in TVirtualCollectionProxy for the same reasons.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:152,Performance,perform,performed,152,"// A class which is used to collect decl names starting from normalised; // names (typedef resolution is excluded here, just string manipulation; // is performed). At the heart of the implementation, an unordered set.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:492,Deployability,update,updated,492,"// TClass objects can be created as a result of opening a TFile (in which; // they are in emulated mode) or as a result of loading the dictionary for; // the corresponding class. When a dictionary is loaded any pre-existing; // emulated TClass is replaced by the one created/coming from the dictionary.; // To have a reference that always point to the 'current' TClass object for; // a given class, one should use a TClassRef.; // TClassRef works by holding on to the fPersistentRef which is updated; // atomically whenever a TClass is replaced. During the replacement the; // value of fPersistentRef is set to zero, leading the TClassRef to call; // TClass::GetClass which is also locked by the replacement. At the end; // of the replacement, fPersistentRef points to the new TClass object.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:123,Performance,load,loading,123,"// TClass objects can be created as a result of opening a TFile (in which; // they are in emulated mode) or as a result of loading the dictionary for; // the corresponding class. When a dictionary is loaded any pre-existing; // emulated TClass is replaced by the one created/coming from the dictionary.; // To have a reference that always point to the 'current' TClass object for; // a given class, one should use a TClassRef.; // TClassRef works by holding on to the fPersistentRef which is updated; // atomically whenever a TClass is replaced. During the replacement the; // value of fPersistentRef is set to zero, leading the TClassRef to call; // TClass::GetClass which is also locked by the replacement. At the end; // of the replacement, fPersistentRef points to the new TClass object.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:200,Performance,load,loaded,200,"// TClass objects can be created as a result of opening a TFile (in which; // they are in emulated mode) or as a result of loading the dictionary for; // the corresponding class. When a dictionary is loaded any pre-existing; // emulated TClass is replaced by the one created/coming from the dictionary.; // To have a reference that always point to the 'current' TClass object for; // a given class, one should use a TClassRef.; // TClassRef works by holding on to the fPersistentRef which is updated; // atomically whenever a TClass is replaced. During the replacement the; // value of fPersistentRef is set to zero, leading the TClassRef to call; // TClass::GetClass which is also locked by the replacement. At the end; // of the replacement, fPersistentRef points to the new TClass object.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:2,Security,checksum,checksum,2,"//checksum of data members and base classes",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:13,Integrability,interface,interface,13,"//Collection interface",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:2,Integrability,Wrap,Wrapper,2,"//Wrapper around this class custom Streamer member function.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:2,Integrability,Wrap,Wrapper,2,"//Wrapper around this class custom conversion Streamer member function.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:20,Performance,load,loaded,20,"//!Whether info was loaded from a root pcm.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:53,Availability,avail,available,53,"//!Indicates whether the ClassInfo is supposed to be available.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:3,Performance,cache,cached,3,"//!cached of the streaming method to use",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:54,Performance,Load,Loaded,54,"//!Current 'state' of the class (Emulated,Interpreted,Loaded)",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:3,Performance,cache,cached,3,"//!cached current streamer info.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:3,Performance,cache,cached,3,"//!cached streamer info used in the last read.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:34,Security,hash,hash,34,"// These are the above-referenced hash tables. (The pointers are null; // if no entries have been made.)",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:97,Modifiability,inherit,inheritance,97,"/// @brief Return 'true' if we can guarantee that if this class (or any class in; /// this class inheritance hierarchy) overload TObject::Hash it also starts; /// the RecursiveRemove process from its own destructor.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:138,Security,Hash,Hash,138,"/// @brief Return 'true' if we can guarantee that if this class (or any class in; /// this class inheritance hierarchy) overload TObject::Hash it also starts; /// the RecursiveRemove process from its own destructor.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:14,Performance,perform,performance,14,"// Inline for performance, skipping one function call.",MatchSource.CODE_COMMENT,core/meta/inc/TClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassGenerator.h:139,Integrability,interface,interface,139,"//////////////////////////////////////////////////////////////////////////; // //; // TClassGenerator //; // //; // Objects following this interface can be passed onto the TROOT object //; // to implement a user customized way to create the TClass objects. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TClassGenerator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassGenerator.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassGenerator.h:3,Integrability,interface,interface,3,"// interface for TClass generators",MatchSource.CODE_COMMENT,core/meta/inc/TClassGenerator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassGenerator.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h:385,Availability,error,error,385,"// The address passed to operator() will be the address of the start of the; // object. Overload this routine, if your derived class can optimize; // the handling of the onfileClass (rather than storing and restoring from the; // fOnFileClass member.; // Note we can not name this routine 'operator' has it would be slightly; // backward incompatible and lead to the following warning/error from the; // compiler in the derived class overloading the other operator():; // include/TClassStreamer.h:51: error: ‘virtual void TClassStreamer::operator()(TBuffer&, void*, const TClass*)’ was hidden; // include/TCollectionProxyFactory.h:180: error: by ‘virtual void TCollectionClassStreamer::operator()(TBuffer&, void*)’; // cc1plus: warnings being treated as errors",MatchSource.CODE_COMMENT,core/meta/inc/TClassStreamer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h:501,Availability,error,error,501,"// The address passed to operator() will be the address of the start of the; // object. Overload this routine, if your derived class can optimize; // the handling of the onfileClass (rather than storing and restoring from the; // fOnFileClass member.; // Note we can not name this routine 'operator' has it would be slightly; // backward incompatible and lead to the following warning/error from the; // compiler in the derived class overloading the other operator():; // include/TClassStreamer.h:51: error: ‘virtual void TClassStreamer::operator()(TBuffer&, void*, const TClass*)’ was hidden; // include/TCollectionProxyFactory.h:180: error: by ‘virtual void TCollectionClassStreamer::operator()(TBuffer&, void*)’; // cc1plus: warnings being treated as errors",MatchSource.CODE_COMMENT,core/meta/inc/TClassStreamer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h:636,Availability,error,error,636,"// The address passed to operator() will be the address of the start of the; // object. Overload this routine, if your derived class can optimize; // the handling of the onfileClass (rather than storing and restoring from the; // fOnFileClass member.; // Note we can not name this routine 'operator' has it would be slightly; // backward incompatible and lead to the following warning/error from the; // compiler in the derived class overloading the other operator():; // include/TClassStreamer.h:51: error: ‘virtual void TClassStreamer::operator()(TBuffer&, void*, const TClass*)’ was hidden; // include/TCollectionProxyFactory.h:180: error: by ‘virtual void TCollectionClassStreamer::operator()(TBuffer&, void*)’; // cc1plus: warnings being treated as errors",MatchSource.CODE_COMMENT,core/meta/inc/TClassStreamer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h:754,Availability,error,errors,754,"// The address passed to operator() will be the address of the start of the; // object. Overload this routine, if your derived class can optimize; // the handling of the onfileClass (rather than storing and restoring from the; // fOnFileClass member.; // Note we can not name this routine 'operator' has it would be slightly; // backward incompatible and lead to the following warning/error from the; // compiler in the derived class overloading the other operator():; // include/TClassStreamer.h:51: error: ‘virtual void TClassStreamer::operator()(TBuffer&, void*, const TClass*)’ was hidden; // include/TCollectionProxyFactory.h:180: error: by ‘virtual void TCollectionClassStreamer::operator()(TBuffer&, void*)’; // cc1plus: warnings being treated as errors",MatchSource.CODE_COMMENT,core/meta/inc/TClassStreamer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h:102,Integrability,rout,routine,102,"// The address passed to operator() will be the address of the start of the; // object. Overload this routine, if your derived class can optimize; // the handling of the onfileClass (rather than storing and restoring from the; // fOnFileClass member.; // Note we can not name this routine 'operator' has it would be slightly; // backward incompatible and lead to the following warning/error from the; // compiler in the derived class overloading the other operator():; // include/TClassStreamer.h:51: error: ‘virtual void TClassStreamer::operator()(TBuffer&, void*, const TClass*)’ was hidden; // include/TCollectionProxyFactory.h:180: error: by ‘virtual void TCollectionClassStreamer::operator()(TBuffer&, void*)’; // cc1plus: warnings being treated as errors",MatchSource.CODE_COMMENT,core/meta/inc/TClassStreamer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h:281,Integrability,rout,routine,281,"// The address passed to operator() will be the address of the start of the; // object. Overload this routine, if your derived class can optimize; // the handling of the onfileClass (rather than storing and restoring from the; // fOnFileClass member.; // Note we can not name this routine 'operator' has it would be slightly; // backward incompatible and lead to the following warning/error from the; // compiler in the derived class overloading the other operator():; // include/TClassStreamer.h:51: error: ‘virtual void TClassStreamer::operator()(TBuffer&, void*, const TClass*)’ was hidden; // include/TCollectionProxyFactory.h:180: error: by ‘virtual void TCollectionClassStreamer::operator()(TBuffer&, void*)’; // cc1plus: warnings being treated as errors",MatchSource.CODE_COMMENT,core/meta/inc/TClassStreamer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h:137,Performance,optimiz,optimize,137,"// The address passed to operator() will be the address of the start of the; // object. Overload this routine, if your derived class can optimize; // the handling of the onfileClass (rather than storing and restoring from the; // fOnFileClass member.; // Note we can not name this routine 'operator' has it would be slightly; // backward incompatible and lead to the following warning/error from the; // compiler in the derived class overloading the other operator():; // include/TClassStreamer.h:51: error: ‘virtual void TClassStreamer::operator()(TBuffer&, void*, const TClass*)’ was hidden; // include/TCollectionProxyFactory.h:180: error: by ‘virtual void TCollectionClassStreamer::operator()(TBuffer&, void*)’; // cc1plus: warnings being treated as errors",MatchSource.CODE_COMMENT,core/meta/inc/TClassStreamer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassStreamer.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDataMember.h:123,Integrability,interface,interface,123,"//////////////////////////////////////////////////////////////////////////; // //; // TDataMember //; // //; // Dictionary interface for a class data member. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TDataMember.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDataMember.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDataMember.h:37,Modifiability,variab,variable,37,"//String representation of the index variable name",MatchSource.CODE_COMMENT,core/meta/inc/TDataMember.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDataMember.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDataMember.h:75,Security,access,access,75,"//full type description with no typedef; // The following fields allows to access all (even private) datamembers and; // provide a possibility of having options with names and strings.; // These options are defined in a comment to a field!",MatchSource.CODE_COMMENT,core/meta/inc/TDataMember.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDataMember.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDataMember.h:46,Deployability,toggle,toggle,46,"//Not used yet: bitmask used when option is a toggle group",MatchSource.CODE_COMMENT,core/meta/inc/TDataMember.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDataMember.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:143,Integrability,interface,interface,143,"//////////////////////////////////////////////////////////////////////////; // //; // TDictionary //; // //; // This class defines an abstract interface that must be implemented //; // by all classes that contain dictionary information. //; // //; // The dictionary is defined by the followling classes: //; // TDataType (typedef definitions) //; // TGlobal (global variables) //; // TFunction (global functions) //; // TClass (classes) //; // TBaseClass (base classes) //; // TDataMember (class datamembers) //; // TMethod (class methods) //; // TMethodArg (method arguments) //; // //; // All the above classes implement the TDictionary abstract interface //; // (note: the indentation shows aggregation not inheritance). //; // The ROOT dictionary system provides a very extensive RTTI //; // environment that facilitates a.o. object inspectors, object I/O, //; // ROOT Trees, etc. Most of the type information is provided by the //; // CINT C++ interpreter. //; // //; // TMethodCall (method call environment) //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TDictionary.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:648,Integrability,interface,interface,648,"//////////////////////////////////////////////////////////////////////////; // //; // TDictionary //; // //; // This class defines an abstract interface that must be implemented //; // by all classes that contain dictionary information. //; // //; // The dictionary is defined by the followling classes: //; // TDataType (typedef definitions) //; // TGlobal (global variables) //; // TFunction (global functions) //; // TClass (classes) //; // TBaseClass (base classes) //; // TDataMember (class datamembers) //; // TMethod (class methods) //; // TMethodArg (method arguments) //; // //; // All the above classes implement the TDictionary abstract interface //; // (note: the indentation shows aggregation not inheritance). //; // The ROOT dictionary system provides a very extensive RTTI //; // environment that facilitates a.o. object inspectors, object I/O, //; // ROOT Trees, etc. Most of the type information is provided by the //; // CINT C++ interpreter. //; // //; // TMethodCall (method call environment) //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TDictionary.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:366,Modifiability,variab,variables,366,"//////////////////////////////////////////////////////////////////////////; // //; // TDictionary //; // //; // This class defines an abstract interface that must be implemented //; // by all classes that contain dictionary information. //; // //; // The dictionary is defined by the followling classes: //; // TDataType (typedef definitions) //; // TGlobal (global variables) //; // TFunction (global functions) //; // TClass (classes) //; // TBaseClass (base classes) //; // TDataMember (class datamembers) //; // TMethod (class methods) //; // TMethodArg (method arguments) //; // //; // All the above classes implement the TDictionary abstract interface //; // (note: the indentation shows aggregation not inheritance). //; // The ROOT dictionary system provides a very extensive RTTI //; // environment that facilitates a.o. object inspectors, object I/O, //; // ROOT Trees, etc. Most of the type information is provided by the //; // CINT C++ interpreter. //; // //; // TMethodCall (method call environment) //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TDictionary.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:710,Modifiability,inherit,inheritance,710,"//////////////////////////////////////////////////////////////////////////; // //; // TDictionary //; // //; // This class defines an abstract interface that must be implemented //; // by all classes that contain dictionary information. //; // //; // The dictionary is defined by the followling classes: //; // TDataType (typedef definitions) //; // TGlobal (global variables) //; // TFunction (global functions) //; // TClass (classes) //; // TBaseClass (base classes) //; // TDataMember (class datamembers) //; // TMethod (class methods) //; // TMethodArg (method arguments) //; // //; // All the above classes implement the TDictionary abstract interface //; // (note: the indentation shows aggregation not inheritance). //; // The ROOT dictionary system provides a very extensive RTTI //; // environment that facilitates a.o. object inspectors, object I/O, //; // ROOT Trees, etc. Most of the type information is provided by the //; // CINT C++ interpreter. //; // //; // TMethodCall (method call environment) //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TDictionary.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:17,Availability,avail,available,17,"// 0x01000000 is available",MatchSource.CODE_COMMENT,core/meta/inc/TDictionary.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:17,Availability,avail,available,17,"// 0x80000000 is available",MatchSource.CODE_COMMENT,core/meta/inc/TDictionary.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:45,Deployability,update,updated,45,"//!the Cling ID of the transaction that last updated the object",MatchSource.CODE_COMMENT,core/meta/inc/TDictionary.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:2,Integrability,Interface,Interface,2,"//Interface to dictionary",MatchSource.CODE_COMMENT,core/meta/inc/TDictionary.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TFileMergeInfo.h:235,Security,access,access,235,"//////////////////////////////////////////////////////////////////////////; // //; // TFileMergeInfo //; // //; // This class helps passing information from the TFileMerger to //; // the objects being merged. //; // //; // It provides access to the output directory pointer (fOutputDirectory)//; // to whether or not this is the first time Merge is being called in the//; // serie (for example for TTree, the first time we also need to Clone //; // the object on which Merge is called), and provides for a User Data //; // object to be passed along to each of the calls to Merge. //; // The fUserData object is owned by the TFileMergeInfo and will be //; // deleted when the TFileMerger moves on to the next set of objects. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TFileMergeInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TFileMergeInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TFileMergeInfo.h:45,Availability,down,down,45,"// Additional text based option being passed down to customize the merge.",MatchSource.CODE_COMMENT,core/meta/inc/TFileMergeInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TFileMergeInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TGlobal.h:115,Modifiability,variab,variables,115,"//////////////////////////////////////////////////////////////////////////; // //; // TGlobal //; // //; // Global variables class (global variables are obtained from CINT). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TGlobal.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TGlobal.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TGlobal.h:139,Modifiability,variab,variables,139,"//////////////////////////////////////////////////////////////////////////; // //; // TGlobal //; // //; // Global variables class (global variables are obtained from CINT). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TGlobal.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TGlobal.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TGlobal.h:9,Modifiability,variab,variable,9,"//Global variable class",MatchSource.CODE_COMMENT,core/meta/inc/TGlobal.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TGlobal.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:144,Integrability,interface,interface,144,"//////////////////////////////////////////////////////////////////////////; // //; // TInterpreter //; // //; // This class defines an abstract interface to a generic command line //; // interpreter. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:3,Availability,error,error,3,/* error */,MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:42,Availability,error,error,42,"/// \brief Report diagnostics to the ROOT error handler (see TError.h).",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:12,Integrability,interface,interface,12,"// CallFunc interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:13,Integrability,interface,interface,13,"// ClassInfo interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:17,Integrability,interface,interface,17,"// BaseClassInfo interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:18,Integrability,interface,interface,18,"// DataMemberInfo interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:21,Integrability,interface,interface,21,"// Function Template interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:14,Integrability,interface,interface,14,"// MethodInfo interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:17,Integrability,interface,interface,17,"// MethodArgInfo interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:12,Integrability,interface,interface,12,"// TypeInfo interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:15,Integrability,interface,interface,15,"// TypedefInfo interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:23,Integrability,interface,interface,23,"// QualType Opaque Ptr interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:16,Integrability,interface,interface,16,"// FunctionDecl interface",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:15,Integrability,interface,interface,15,"//ABC defining interface to generic interpreter",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreterValue.h:684,Modifiability,variab,variable,684,"// @(#)root/core/meta:$Id$e; // Author: Vassil Vassilev 13/03/2013; /*******************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; ******************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; // //; // Class representing a value coming from the interpreter. Its main use case //; // is to TCallFunc. When TCallFunc returns by-value, i.e. a temporary //; // variable, its lifetime has to be extended. TInterpreterValue provides a //; // way to extend the temporaries lifetime and gives the user to control it. //; // //; // The class needs to be derived from for the actual interpreter, //; // see TClingValue. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreterValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreterValue.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreterValue.h:717,Modifiability,extend,extended,717,"// @(#)root/core/meta:$Id$e; // Author: Vassil Vassilev 13/03/2013; /*******************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; ******************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; // //; // Class representing a value coming from the interpreter. Its main use case //; // is to TCallFunc. When TCallFunc returns by-value, i.e. a temporary //; // variable, its lifetime has to be extended. TInterpreterValue provides a //; // way to extend the temporaries lifetime and gives the user to control it. //; // //; // The class needs to be derived from for the actual interpreter, //; // see TClingValue. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreterValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreterValue.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreterValue.h:770,Modifiability,extend,extend,770,"// @(#)root/core/meta:$Id$e; // Author: Vassil Vassilev 13/03/2013; /*******************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; ******************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; // //; // Class representing a value coming from the interpreter. Its main use case //; // is to TCallFunc. When TCallFunc returns by-value, i.e. a temporary //; // variable, its lifetime has to be extended. TInterpreterValue provides a //; // way to extend the temporaries lifetime and gives the user to control it. //; // //; // The class needs to be derived from for the actual interpreter, //; // see TClingValue. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TInterpreterValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreterValue.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TIsAProxy.h:334,Availability,down,down,334,"// On testing with the data from the 250202_181_RECO.root and doing ""just"" serializing; // the value 8 was the sweet spot of performance. With more slots, too much time is; // spent scanning the array of ""last"" seen and with less slots then the; // serialization induced by and/or the cost of executed `++fSubTypesReaders is slow; // down (noticeably) the streaming of branches with polymorphic containers.",MatchSource.CODE_COMMENT,core/meta/inc/TIsAProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TIsAProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TIsAProxy.h:383,Modifiability,polymorphi,polymorphic,383,"// On testing with the data from the 250202_181_RECO.root and doing ""just"" serializing; // the value 8 was the sweet spot of performance. With more slots, too much time is; // spent scanning the array of ""last"" seen and with less slots then the; // serialization induced by and/or the cost of executed `++fSubTypesReaders is slow; // down (noticeably) the streaming of branches with polymorphic containers.",MatchSource.CODE_COMMENT,core/meta/inc/TIsAProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TIsAProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TIsAProxy.h:125,Performance,perform,performance,125,"// On testing with the data from the 250202_181_RECO.root and doing ""just"" serializing; // the value 8 was the sweet spot of performance. With more slots, too much time is; // spent scanning the array of ""last"" seen and with less slots then the; // serialization induced by and/or the cost of executed `++fSubTypesReaders is slow; // down (noticeably) the streaming of branches with polymorphic containers.",MatchSource.CODE_COMMENT,core/meta/inc/TIsAProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TIsAProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TIsAProxy.h:6,Testability,test,testing,6,"// On testing with the data from the 250202_181_RECO.root and doing ""just"" serializing; // the value 8 was the sweet spot of performance. With more slots, too much time is; // spent scanning the array of ""last"" seen and with less slots then the; // serialization induced by and/or the cost of executed `++fSubTypesReaders is slow; // down (noticeably) the streaming of branches with polymorphic containers.",MatchSource.CODE_COMMENT,core/meta/inc/TIsAProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TIsAProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TIsAProxy.h:34,Deployability,update,update,34,"// Next slot in fLasts to use for update (ring buffer)",MatchSource.CODE_COMMENT,core/meta/inc/TIsAProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TIsAProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfDataMembers.h:173,Security,access,access,173,"//////////////////////////////////////////////////////////////////////////; // //; // TListOfDataMembers //; // //; // A collection of TDataMember objects designed for fast access given a //; // DeclId_t and for keep track of TDataMember that were described //; // unloaded member. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TListOfDataMembers.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfDataMembers.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfDataMembers.h:56,Performance,load,load,56,"//! Represent interpreter state when we last did a full load.",MatchSource.CODE_COMMENT,core/meta/inc/TListOfDataMembers.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfDataMembers.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfDataMembers.h:17,Performance,Load,Load,17,"//! Mark whether Load was executed.",MatchSource.CODE_COMMENT,core/meta/inc/TListOfDataMembers.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfDataMembers.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfDataMembers.h:123,Modifiability,variab,variables,123,"/// Constructor, possibly for all members of a class (or globals).; /// Include (or not) the scope's using declarations of variables.",MatchSource.CODE_COMMENT,core/meta/inc/TListOfDataMembers.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfDataMembers.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfEnums.h:161,Security,access,access,161,"//////////////////////////////////////////////////////////////////////////; // //; // TListOfEnums //; // //; // A collection of TEnum objects designed for fast access given a //; // DeclId_t and for keep track of TEnum that were described //; // unloaded enum. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TListOfEnums.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfEnums.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfEnums.h:17,Performance,Load,Load,17,"//! Mark whether Load was executed.",MatchSource.CODE_COMMENT,core/meta/inc/TListOfEnums.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfEnums.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfEnums.h:56,Performance,load,load,56,"//! Represent interpreter state when we last did a full load.",MatchSource.CODE_COMMENT,core/meta/inc/TListOfEnums.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfEnums.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfEnumsWithLock.h:169,Security,access,access,169,"//////////////////////////////////////////////////////////////////////////; // //; // TListOfEnumsWithLock //; // //; // A collection of TEnum objects designed for fast access given a //; // DeclId_t and for keep track of TEnum that were described //; // unloaded enum. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TListOfEnumsWithLock.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfEnumsWithLock.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfFunctions.h:169,Security,access,access,169,"//////////////////////////////////////////////////////////////////////////; // //; // TListOfFunctions //; // //; // A collection of TFunction objects designed for fast access given a //; // DeclId_t and for keep track of TFunction that were described //; // unloaded function. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TListOfFunctions.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfFunctions.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfFunctions.h:55,Performance,load,load,55,"// Represent interpreter state when we last did a full load.",MatchSource.CODE_COMMENT,core/meta/inc/TListOfFunctions.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfFunctions.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfFunctionTemplates.h:185,Security,access,access,185,"//////////////////////////////////////////////////////////////////////////; // //; // TListOfFunctionTemplates //; // //; // A collection of TFunctionTemplate objects designed for fast access //; // given a DeclId_t and for keep track of TFunctionTempalte that were //; // described unloaded function. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TListOfFunctionTemplates.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfFunctionTemplates.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfFunctionTemplates.h:55,Performance,load,load,55,"// Represent interpreter state when we last did a full load.",MatchSource.CODE_COMMENT,core/meta/inc/TListOfFunctionTemplates.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TListOfFunctionTemplates.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMemberStreamer.h:104,Modifiability,variab,variable,104,"// The address passed to operator() will be the address of the data member.; // If the data member is a variable size array, 'size' is the number of elements; // to read/write",MatchSource.CODE_COMMENT,core/meta/inc/TMemberStreamer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMemberStreamer.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethod.h:34,Deployability,TOGGLE,TOGGLE,34,"//state getter in case this is a *TOGGLE method",MatchSource.CODE_COMMENT,core/meta/inc/TMethod.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethod.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethod.h:49,Deployability,TOGGLE,TOGGLE,49,"//methodcall for state getter in case this is a *TOGGLE method",MatchSource.CODE_COMMENT,core/meta/inc/TMethod.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethod.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethod.h:49,Deployability,TOGGLE,TOGGLE,49,"//methodcall for state setter in case this is a *TOGGLE method",MatchSource.CODE_COMMENT,core/meta/inc/TMethod.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethod.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodArg.h:122,Integrability,interface,interface,122,"//////////////////////////////////////////////////////////////////////////; // //; // TMethodArg //; // //; // Dictionary interface for a method argument. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TMethodArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodArg.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h:139,Integrability,interface,interface,139,"//////////////////////////////////////////////////////////////////////////; // //; // TMethodCall //; // //; // Method or function calling interface. Objects of this class contain //; // the (CINT) environment to call a global function or a method for an //; // object of a specific class with the desired arguments. This class is //; // espicially useful when a method has to be called more times for //; // different objects and/or with different arguments. If a function or //; // method needs to be called only once one better uses //; // TInterpreter::Execute(). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TMethodCall.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h:2,Availability,error,error,2,/*error*/,MatchSource.CODE_COMMENT,core/meta/inc/TMethodCall.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h:2,Availability,error,error,2,/*error*/,MatchSource.CODE_COMMENT,core/meta/inc/TMethodCall.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h:17,Integrability,interface,interface,17,"//Method calling interface",MatchSource.CODE_COMMENT,core/meta/inc/TMethodCall.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TProtoClass.h:11,Integrability,depend,dependent,11,"// list of dependent classes",MatchSource.CODE_COMMENT,core/meta/inc/TProtoClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TProtoClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TProtoClass.h:2,Security,checksum,checksum,2,"//checksum of data members and base classes",MatchSource.CODE_COMMENT,core/meta/inc/TProtoClass.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TProtoClass.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TSchemaRule.h:10,Security,checksum,checksum,10,"// Source checksum string",MatchSource.CODE_COMMENT,core/meta/inc/TSchemaRule.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TSchemaRule.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TSchemaRule.h:11,Security,checksum,checksum,11,"//! Source checksum vector (for searching purposes)",MatchSource.CODE_COMMENT,core/meta/inc/TSchemaRule.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TSchemaRule.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TSchemaRuleSet.h:16,Security,checksum,checksum,16,"// Target class checksum",MatchSource.CODE_COMMENT,core/meta/inc/TSchemaRuleSet.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TSchemaRuleSet.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h:42,Modifiability,inherit,inherits,42,"//!base offset for TObject if the element inherits from it",MatchSource.CODE_COMMENT,core/meta/inc/TStreamerElement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h:3,Security,checksum,checksum,3,"//!checksum of the base class (used during memberwise streaming)",MatchSource.CODE_COMMENT,core/meta/inc/TStreamerElement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h:16,Integrability,wrap,wrapper,16,"//!Pointer to a wrapper around a custom streamer member function.",MatchSource.CODE_COMMENT,core/meta/inc/TStreamerElement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h:16,Integrability,wrap,wrapper,16,"//!Pointer to a wrapper around a custom convertion streamer member function.",MatchSource.CODE_COMMENT,core/meta/inc/TStreamerElement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h:3,Availability,Error,Error,3,"//!Error message in case of checksum/version mismatch.",MatchSource.CODE_COMMENT,core/meta/inc/TStreamerElement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h:9,Integrability,message,message,9,"//!Error message in case of checksum/version mismatch.",MatchSource.CODE_COMMENT,core/meta/inc/TStreamerElement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h:28,Security,checksum,checksum,28,"//!Error message in case of checksum/version mismatch.",MatchSource.CODE_COMMENT,core/meta/inc/TStreamerElement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h:19,Integrability,inject,injected,19,"// StreamerElement injected by a TSchemaRule. Transient only to preserve forward compatibility.",MatchSource.CODE_COMMENT,core/meta/inc/TStreamerElement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h:19,Security,inject,injected,19,"// StreamerElement injected by a TSchemaRule. Transient only to preserve forward compatibility.",MatchSource.CODE_COMMENT,core/meta/inc/TStreamerElement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TStreamerElement.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualArray.h:40,Integrability,Wrap,Wrapper,40,/**; \class TVirtualArray; \ingroup IO; Wrapper around an object and giving indirect access to its content; even if the object is not of a class in the Cint/Reflex dictionary.; */,MatchSource.CODE_COMMENT,core/meta/inc/TVirtualArray.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualArray.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualArray.h:85,Security,access,access,85,/**; \class TVirtualArray; \ingroup IO; Wrapper around an object and giving indirect access to its content; even if the object is not of a class in the Cint/Reflex dictionary.; */,MatchSource.CODE_COMMENT,core/meta/inc/TVirtualArray.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualArray.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualObject.h:41,Integrability,Wrap,Wrapper,41,/**; \class TVirtualObject; \ingroup IO. Wrapper around an object and giving indirect access to its content; even if the object is not of a class in the Cint/Reflex dictionary.; */,MatchSource.CODE_COMMENT,core/meta/inc/TVirtualObject.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualObject.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualObject.h:86,Security,access,access,86,/**; \class TVirtualObject; \ingroup IO. Wrapper around an object and giving indirect access to its content; even if the object is not of a class in the Cint/Reflex dictionary.; */,MatchSource.CODE_COMMENT,core/meta/inc/TVirtualObject.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualObject.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:2028,Availability,error,error,2028,"ramework in interactive mode in order to; // dereference these objects and access the objects pointed to by; // the reference objects.; //; // Implementations are supplied for ROOT own reference mechanism; // based on instances of the TRef and the TRefArray classes.; //; // To support generality this mechanism was implemented using a; // proxy mechanism, which shields the concrete implementation of the; // reference classes from ROOT. Hence, this mechanism also works for; // references as they are supported by the POOL persistency framework; // and by frameworks like Gaudi.; //; // To enable reference support a concrete sub-class instance of; // the TVirtualRefProxy base class must be attached to the TClass; // instance representing the reference itself. Please see the; // header- and implementation file TRefProxy.h/cxx for details.; // For ROOT's own references this is done simply by a call like:; //; // #include ""TROOT.h""; // #include ""TClass.h""; // #include ""TRefProxy.h""; //; // ...; // gROOT->GetClass(""TRef"")->AdoptReferenceProxy(new TRefProxy());; //; // - GetObject() must return the pointer to the referenced; // object. TTreeFormula then figures out how to access the; // value to be plotted.; // Hence, the actual work is done inside a call to:; //; // void* TRefProxy::GetObject(TFormLeafInfoReference* info, void* data, int); // {; // if ( data ) {; // TRef* ref = (TRef*)((char*)data + info->GetOffset());; // // Dereference TRef and return pointer to object; // void* obj = ref->GetObject();; // if ( obj ) { return obj; }; //; // ... else handle error or implement failover ....; //; //; // The type of the referenced object must either be known at compilation; // time or it must be possible to guess it reading the first TTree entry.; // In this case the following conditions must be met:; // - GetValueClass() must return the TClass to the referenced; // objects (or a base class); //; //______________________________________________________________________________",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:2047,Availability,failover,failover,2047,"ramework in interactive mode in order to; // dereference these objects and access the objects pointed to by; // the reference objects.; //; // Implementations are supplied for ROOT own reference mechanism; // based on instances of the TRef and the TRefArray classes.; //; // To support generality this mechanism was implemented using a; // proxy mechanism, which shields the concrete implementation of the; // reference classes from ROOT. Hence, this mechanism also works for; // references as they are supported by the POOL persistency framework; // and by frameworks like Gaudi.; //; // To enable reference support a concrete sub-class instance of; // the TVirtualRefProxy base class must be attached to the TClass; // instance representing the reference itself. Please see the; // header- and implementation file TRefProxy.h/cxx for details.; // For ROOT's own references this is done simply by a call like:; //; // #include ""TROOT.h""; // #include ""TClass.h""; // #include ""TRefProxy.h""; //; // ...; // gROOT->GetClass(""TRef"")->AdoptReferenceProxy(new TRefProxy());; //; // - GetObject() must return the pointer to the referenced; // object. TTreeFormula then figures out how to access the; // value to be plotted.; // Hence, the actual work is done inside a call to:; //; // void* TRefProxy::GetObject(TFormLeafInfoReference* info, void* data, int); // {; // if ( data ) {; // TRef* ref = (TRef*)((char*)data + info->GetOffset());; // // Dereference TRef and return pointer to object; // void* obj = ref->GetObject();; // if ( obj ) { return obj; }; //; // ... else handle error or implement failover ....; //; //; // The type of the referenced object must either be known at compilation; // time or it must be possible to guess it reading the first TTree entry.; // In this case the following conditions must be met:; // - GetValueClass() must return the TClass to the referenced; // objects (or a base class); //; //______________________________________________________________________________",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:527,Security,access,access,527,"//______________________________________________________________________________; //; // Abstract proxy definition to follow reference objects.; //; //; // Generic Mechanism for Object References; // =======================================; //; // References are a well known mechanism to support persistency; // of entities, which in C++ typically are represented as; // pointers. The generic mechanism allows clients to supply; // hooks to the ROOT framework in interactive mode in order to; // dereference these objects and access the objects pointed to by; // the reference objects.; //; // Implementations are supplied for ROOT own reference mechanism; // based on instances of the TRef and the TRefArray classes.; //; // To support generality this mechanism was implemented using a; // proxy mechanism, which shields the concrete implementation of the; // reference classes from ROOT. Hence, this mechanism also works for; // references as they are supported by the POOL persistency framework; // and by frameworks like Gaudi.; //; // To enable reference support a concrete sub-class instance of; // the TVirtualRefProxy base class must be attached to the TClass; // instance representing the reference itself. Please see the; // header- and implementation file TRefProxy.h/cxx for details.; // For ROOT's own references this is done simply by a call like:; //; // #include ""TROOT.h""; // #include ""TClass.h""; // #include ""TRefProxy.h""; //; // ...; // gROOT->GetClass(""TRef"")->AdoptReferenceProxy(new TRefProxy());; //; // - GetObject() must return the pointer to the referenced; // object. TTreeFormula then figures out how to access the; // value to be plotted.; // Hence, the actual work is done inside a call to:; //; // void* TRefProxy::GetObject(TFormLeafInfoReference* info, void* data, int); // {; // if ( data ) {; // TRef* ref = (TRef*)((char*)data + info->GetOffset());; // // Dereference TRef and return pointer to object; // void* obj = ref->GetObject();; // if ( obj ) { return obj;",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:1633,Security,access,access,1633,"ramework in interactive mode in order to; // dereference these objects and access the objects pointed to by; // the reference objects.; //; // Implementations are supplied for ROOT own reference mechanism; // based on instances of the TRef and the TRefArray classes.; //; // To support generality this mechanism was implemented using a; // proxy mechanism, which shields the concrete implementation of the; // reference classes from ROOT. Hence, this mechanism also works for; // references as they are supported by the POOL persistency framework; // and by frameworks like Gaudi.; //; // To enable reference support a concrete sub-class instance of; // the TVirtualRefProxy base class must be attached to the TClass; // instance representing the reference itself. Please see the; // header- and implementation file TRefProxy.h/cxx for details.; // For ROOT's own references this is done simply by a call like:; //; // #include ""TROOT.h""; // #include ""TClass.h""; // #include ""TRefProxy.h""; //; // ...; // gROOT->GetClass(""TRef"")->AdoptReferenceProxy(new TRefProxy());; //; // - GetObject() must return the pointer to the referenced; // object. TTreeFormula then figures out how to access the; // value to be plotted.; // Hence, the actual work is done inside a call to:; //; // void* TRefProxy::GetObject(TFormLeafInfoReference* info, void* data, int); // {; // if ( data ) {; // TRef* ref = (TRef*)((char*)data + info->GetOffset());; // // Dereference TRef and return pointer to object; // void* obj = ref->GetObject();; // if ( obj ) { return obj; }; //; // ... else handle error or implement failover ....; //; //; // The type of the referenced object must either be known at compilation; // time or it must be possible to guess it reading the first TTree entry.; // In this case the following conditions must be met:; // - GetValueClass() must return the TClass to the referenced; // objects (or a base class); //; //______________________________________________________________________________",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:1340,Usability,simpl,simply,1340,"pically are represented as; // pointers. The generic mechanism allows clients to supply; // hooks to the ROOT framework in interactive mode in order to; // dereference these objects and access the objects pointed to by; // the reference objects.; //; // Implementations are supplied for ROOT own reference mechanism; // based on instances of the TRef and the TRefArray classes.; //; // To support generality this mechanism was implemented using a; // proxy mechanism, which shields the concrete implementation of the; // reference classes from ROOT. Hence, this mechanism also works for; // references as they are supported by the POOL persistency framework; // and by frameworks like Gaudi.; //; // To enable reference support a concrete sub-class instance of; // the TVirtualRefProxy base class must be attached to the TClass; // instance representing the reference itself. Please see the; // header- and implementation file TRefProxy.h/cxx for details.; // For ROOT's own references this is done simply by a call like:; //; // #include ""TROOT.h""; // #include ""TClass.h""; // #include ""TRefProxy.h""; //; // ...; // gROOT->GetClass(""TRef"")->AdoptReferenceProxy(new TRefProxy());; //; // - GetObject() must return the pointer to the referenced; // object. TTreeFormula then figures out how to access the; // value to be plotted.; // Hence, the actual work is done inside a call to:; //; // void* TRefProxy::GetObject(TFormLeafInfoReference* info, void* data, int); // {; // if ( data ) {; // TRef* ref = (TRef*)((char*)data + info->GetOffset());; // // Dereference TRef and return pointer to object; // void* obj = ref->GetObject();; // if ( obj ) { return obj; }; //; // ... else handle error or implement failover ....; //; //; // The type of the referenced object must either be known at compilation; // time or it must be possible to guess it reading the first TTree entry.; // In this case the following conditions must be met:; // - GetValueClass() must return the TClass to the referenced; // ob",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:3,Deployability,Release,Release,3,"// Release the reference proxy (virtual destructor)",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:3,Security,Access,Access,3,"// Access to the target class.; // In the event the value class cannot be specified from the reference; // itself, because the object behind the reference requires a cast,; // the return value must be NULL.; //; // data [IN] Resolved pointer to the referenced object",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:3,Deployability,Update,Update,3,"// Update (and propagate) cached information",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:26,Performance,cache,cached,26,"// Update (and propagate) cached information",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:3,Security,Access,Access,3,"// Access to container size (if container reference (ie TRefArray) etc); //; // info [IN] Pointer to the structure called by TTree::Draw; // to extract the required object information.; // data [IN] Pointer to the reference object; //; // return value: The prepared pointer to the reference.",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:3,Security,Access,Access,3,"// Access referenced object(-data); //; // info [IN] Pointer to the structure called by TTree::Draw; // to extract the required object information.; // data [IN] Pointer to the referenced object; // instance [IN] Item number if ref collection; //; // return value: Pointer to the requested information",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:116,Integrability,Interface,Interface,116,"//////////////////////////////////////////////////////////////////////////; // //; // TVirtualStreamerInfo Abstract Interface class //; // //; // Abstract Interface describing Streamer information for one class. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualStreamerInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:155,Integrability,Interface,Interface,155,"//////////////////////////////////////////////////////////////////////////; // //; // TVirtualStreamerInfo Abstract Interface class //; // //; // Abstract Interface describing Streamer information for one class. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualStreamerInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:38,Performance,optimiz,optimized,38,"//! true if the StreamerInfo has been optimized",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualStreamerInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:10,Performance,optimiz,optimization,10,"//True if optimization on",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualStreamerInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:1252,Performance,Cache,Cache,1252,"// clang-format off; /// EReadWrite Enumerator; /// | Enum Constant | Description |; /// |-------------|--------------------|; /// | kBase | Base class element |; /// | kOffsetL | Fixed size array |; /// | kOffsetP | Pointer to object |; /// | kCounter | Counter for array size |; /// | kCharStar | Pointer to array of char |; /// | kLegacyChar | Equal to TDataType's kchar |; /// | kBits | TObject::fBits in case of a referenced object |; /// | kObject | Class derived from TObject, or for TStreamerSTL::fCtype non-pointer elements |; /// | kObjectp | Class* derived from TObject and with comment field //->Class, or for TStreamerSTL::fCtype: pointer elements |; /// | kObjectP | Class* derived from TObject and with NO comment field //->Class |; /// | kAny | Class not derived from TObject |; /// | kAnyp | Class* not derived from TObject with comment field //->Class |; /// | kAnyP | Class* not derived from TObject with NO comment field //->Class |; /// | kAnyPnoVT | Class* not derived from TObject with NO comment field //->Class and Class has NO virtual table |; /// | kSTLp | Pointer to STL container |; /// | kTString | TString, special case |; /// | kTObject | TObject, special case |; /// | kTNamed | TNamed , special case |; /// | kCache | Cache the value in memory than is not part of the object but is accessible via a SchemaRule |; /// | kNoType | Indicator that we don't know the current type because the member does not exist in memory |; /// | kUnsupportedConversion | The member type onfile and in memory can not be converted |; /// | kUnset | default value |",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualStreamerInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:1316,Security,access,accessible,1316,"// clang-format off; /// EReadWrite Enumerator; /// | Enum Constant | Description |; /// |-------------|--------------------|; /// | kBase | Base class element |; /// | kOffsetL | Fixed size array |; /// | kOffsetP | Pointer to object |; /// | kCounter | Counter for array size |; /// | kCharStar | Pointer to array of char |; /// | kLegacyChar | Equal to TDataType's kchar |; /// | kBits | TObject::fBits in case of a referenced object |; /// | kObject | Class derived from TObject, or for TStreamerSTL::fCtype non-pointer elements |; /// | kObjectp | Class* derived from TObject and with comment field //->Class, or for TStreamerSTL::fCtype: pointer elements |; /// | kObjectP | Class* derived from TObject and with NO comment field //->Class |; /// | kAny | Class not derived from TObject |; /// | kAnyp | Class* not derived from TObject with comment field //->Class |; /// | kAnyP | Class* not derived from TObject with NO comment field //->Class |; /// | kAnyPnoVT | Class* not derived from TObject with NO comment field //->Class and Class has NO virtual table |; /// | kSTLp | Pointer to STL container |; /// | kTString | TString, special case |; /// | kTObject | TObject, special case |; /// | kTNamed | TNamed , special case |; /// | kCache | Cache the value in memory than is not part of the object but is accessible via a SchemaRule |; /// | kNoType | Indicator that we don't know the current type because the member does not exist in memory |; /// | kUnsupportedConversion | The member type onfile and in memory can not be converted |; /// | kUnset | default value |",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualStreamerInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:3,Performance,Cache,Cache,3,"// Cache the value in memory than is not part of the object but is accessible via a SchemaRule",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualStreamerInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:67,Security,access,accessible,67,"// Cache the value in memory than is not part of the object but is accessible via a SchemaRule",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualStreamerInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:337,Availability,avail,available,337,"/// \brief Generate the TClass and TStreamerInfo for the requested pair.; /// This creates a TVirtualStreamerInfo for the pair and trigger the BuildCheck/Old to; /// provokes the creation of the corresponding TClass. This relies on the dictionary for; /// std::pair<const int, int> to already exist (or the interpreter information being available); /// as it is used as a template.; /// \note The returned object is owned by the caller.",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualStreamerInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:11,Integrability,Interface,Interface,11,"//Abstract Interface describing Streamer information for one class",MatchSource.CODE_COMMENT,core/meta/inc/TVirtualStreamerInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx:258,Modifiability,inherit,inherited,258,/** \class TBaseClass; Each class (see TClass) has a linked list of its base class(es).; This class describes one single base class.; The base class info is obtained via the CINT api.; see class TCling. The base class information is used a.o. in to find all inherited methods.; */,MatchSource.CODE_COMMENT,core/meta/src/TBaseClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx:75,Availability,avail,available,75,"// fSTLType is -1 if not yet evaluated.; // fSTLType is -2 if no fInfo was available.",MatchSource.CODE_COMMENT,core/meta/src/TBaseClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx:161,Modifiability,variab,variables,161,"////////////////////////////////////////////////////////////////////////////////; /// Stream an object of TBaseClass. Triggers the calculation of the; /// cache variables to store them.",MatchSource.CODE_COMMENT,core/meta/src/TBaseClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx:155,Performance,cache,cache,155,"////////////////////////////////////////////////////////////////////////////////; /// Stream an object of TBaseClass. Triggers the calculation of the; /// cache variables to store them.",MatchSource.CODE_COMMENT,core/meta/src/TBaseClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx:26,Performance,cache,cache,26,"// Writing.; // Calculate cache properties first.",MatchSource.CODE_COMMENT,core/meta/src/TBaseClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:209,Security,Hash,Hash,209,"//////////////////////////////////////////////////////////////////////////; // //; // TCheckHashRecursiveRemoveConsistency //; // //; // Utility class to discover whether a class that overload //; // TObject::Hash also (as required) calls RecursiveRemove in its //; // destructor. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:48,Security,Hash,Hash,48,"// Destructor. This class does not overload; // Hash so it can rely on the base class to call; // RecursiveRemove (and hence remove this from the list; // of cleanups).",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:36,Security,hash,hash,36,"// std::cout << "" Found object with hash = "" << p->fRecordedHash << '\n';; // std::cout << "" Current hash = "" << obj->Hash() << '\n';",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:101,Security,hash,hash,101,"// std::cout << "" Found object with hash = "" << p->fRecordedHash << '\n';; // std::cout << "" Current hash = "" << obj->Hash() << '\n';",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:118,Security,Hash,Hash,118,"// std::cout << "" Found object with hash = "" << p->fRecordedHash << '\n';; // std::cout << "" Current hash = "" << obj->Hash() << '\n';",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:27,Availability,Error,Error,27,"// else; // std::cout << "" Error: the recorded hash and the one returned by Hash are distinct.\n"";",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:47,Security,hash,hash,47,"// else; // std::cout << "" Error: the recorded hash and the one returned by Hash are distinct.\n"";",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:76,Security,Hash,Hash,76,"// else; // std::cout << "" Error: the recorded hash and the one returned by Hash are distinct.\n"";",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:137,Testability,test,test,137,"// Clean up is disable and the object is such that we wont be able to 'mark' it; // as needing a clean up anyway, so we can not actually test it.",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:17,Availability,Error,Error,17,"// std::cerr << ""Error: old= "" << size << "" new="" << fCont.size() << '\n';; // std::cerr << ""Error "" << classRef.GetName() <<; // "" or one of its base classes override TObject::Hash but does not call TROOT::CallRecursiveRemoveIfNeeded; // in its destructor.\n"";",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:93,Availability,Error,Error,93,"// std::cerr << ""Error: old= "" << size << "" new="" << fCont.size() << '\n';; // std::cerr << ""Error "" << classRef.GetName() <<; // "" or one of its base classes override TObject::Hash but does not call TROOT::CallRecursiveRemoveIfNeeded; // in its destructor.\n"";",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:177,Security,Hash,Hash,177,"// std::cerr << ""Error: old= "" << size << "" new="" << fCont.size() << '\n';; // std::cerr << ""Error "" << classRef.GetName() <<; // "" or one of its base classes override TObject::Hash but does not call TROOT::CallRecursiveRemoveIfNeeded; // in its destructor.\n"";",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:23,Testability,test,testing,23,"// We already did this testing for this class.",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:123,Security,Hash,HashMember,123,"// We won't be able to check the base class, we need to (try) to check; // this class even-though it does not have a local HashMember.",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:25,Modifiability,inherit,inherit,25,"// If the class does not inherit from TObject, the setup is always 'correct'; // (or more exactly does not matter).",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:74,Availability,error,error,74,"// We won't be able to check, so assume the worst but don't issue any; // error message.",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:80,Integrability,message,message,80,"// We won't be able to check, so assume the worst but don't issue any; // error message.",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:154,Availability,Error,Error,154,"// Because ClassDefInline does not yet support class template on all platforms,; // we have no ClassDef and thus can not get a good message from TObject::Error.",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:132,Integrability,message,message,132,"// Because ClassDefInline does not yet support class template on all platforms,; // we have no ClassDef and thus can not get a good message from TObject::Error.",MatchSource.CODE_COMMENT,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:1172,Performance,perform,perform,1172,"; // Author: Rene Brun 07/01/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClass; TClass instances represent classes, structs and namespaces in the ROOT type system. TClass instances are created starting from different sources of information:; 1. TStreamerInfo instances saved in a ROOT file which is opened. This is called in jargon an *emulated TClass*.; 2. From TProtoClass instances saved in a ROOT pcm file created by the dictionary generator and the dictionary itself.; 3. From a lookup in the AST built by cling. If a TClass instance is built through the mechanisms 1. and 2., it does not contain information about methods of the; class/struct/namespace it represents. Conversely, if built through 3. or 1., it does not carry the information which is necessary; to ROOT to perform I/O of instances of the class/struct it represents.; The mechanisms 1., 2. and 3. are not mutually exclusive: it can happen that during the execution of the program, all; the three are triggered, modifying the state of the TClass instance. In order to retrieve a TClass instance from the type system, a query can be executed as follows through the static; TClass::GetClass method:. ~~~ {.cpp}; auto myClassTClass_0 = TClass::GetClass(""myClass"");; auto myClassTClass_1 = TClass::GetClass<myClass>();; auto myClassTClass_2 = TClass::GetClass(myClassTypeInfo);; ~~~. The name of classes is crucial for ROOT. A careful procedure of *name normalization* is carried out for; each and every class. A *normalized name* is a valid C++ class name.; In order to access the name of a class within the ROOT type system, the method TClass::GetName() can be used.; */; //*-*x7.5 macros/layout_class",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:1931,Security,access,access,1931,"; // Author: Rene Brun 07/01/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClass; TClass instances represent classes, structs and namespaces in the ROOT type system. TClass instances are created starting from different sources of information:; 1. TStreamerInfo instances saved in a ROOT file which is opened. This is called in jargon an *emulated TClass*.; 2. From TProtoClass instances saved in a ROOT pcm file created by the dictionary generator and the dictionary itself.; 3. From a lookup in the AST built by cling. If a TClass instance is built through the mechanisms 1. and 2., it does not contain information about methods of the; class/struct/namespace it represents. Conversely, if built through 3. or 1., it does not carry the information which is necessary; to ROOT to perform I/O of instances of the class/struct it represents.; The mechanisms 1., 2. and 3. are not mutually exclusive: it can happen that during the execution of the program, all; the three are triggered, modifying the state of the TClass instance. In order to retrieve a TClass instance from the type system, a query can be executed as follows through the static; TClass::GetClass method:. ~~~ {.cpp}; auto myClassTClass_0 = TClass::GetClass(""myClass"");; auto myClassTClass_1 = TClass::GetClass<myClass>();; auto myClassTClass_2 = TClass::GetClass(myClassTypeInfo);; ~~~. The name of classes is crucial for ROOT. A careful procedure of *name normalization* is carried out for; each and every class. A *normalized name* is a valid C++ class name.; In order to access the name of a class within the ROOT type system, the method TClass::GetName() can be used.; */; //*-*x7.5 macros/layout_class",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:212,Safety,avoid,avoid,212,"// When a new class is created, we need to be able to find; // if there are any existing classes that have the same name; // after any typedefs are expanded. (This only really affects; // template arguments.) To avoid having to search through all classes; // in that case, we keep a hash table mapping from the fully; // typedef-expanded names to the original class names.; // An entry is made in the table only if they are actually different.; //; // In these objects, the TObjString base holds the typedef-expanded; // name (the hash key), and fOrigName holds the original class name; // (the value to which the key maps).; //",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:283,Security,hash,hash,283,"// When a new class is created, we need to be able to find; // if there are any existing classes that have the same name; // after any typedefs are expanded. (This only really affects; // template arguments.) To avoid having to search through all classes; // in that case, we keep a hash table mapping from the fully; // typedef-expanded names to the original class names.; // An entry is made in the table only if they are actually different.; //; // In these objects, the TObjString base holds the typedef-expanded; // name (the hash key), and fOrigName holds the original class name; // (the value to which the key maps).; //",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:531,Security,hash,hash,531,"// When a new class is created, we need to be able to find; // if there are any existing classes that have the same name; // after any typedefs are expanded. (This only really affects; // template arguments.) To avoid having to search through all classes; // in that case, we keep a hash table mapping from the fully; // typedef-expanded names to the original class names.; // An entry is made in the table only if they are actually different.; //; // In these objects, the TObjString base holds the typedef-expanded; // name (the hash key), and fOrigName holds the original class name; // (the value to which the key maps).; //",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:3,Safety,Sanity check,Sanity check,3,"// Sanity check",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:8,Integrability,wrap,wrapper,8,"// This wrapper class allow to avoid putting #include <map> in the; // TROOT.h header file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:31,Safety,avoid,avoid,31,"// This wrapper class allow to avoid putting #include <map> in the; // TROOT.h header file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:3,Integrability,Wrap,Wrapper,3,"// Wrapper class for the multimap of DeclId_t and TClass.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:20,Performance,load,loaded,20,"// The class is not loaded, hence it is 'emulated' and the main source of; // information is the StreamerInfo.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:38,Security,access,access,38,"// For the DataModelEvolution we need access to the transient member.; // so we now record them in the list of RealData.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:177,Safety,detect,detect,177,"// Case where the collection dictionary was not requested and; // the content's dictionary was also not requested.; // [This is a super set of what we need, but we can't really detect it :(]",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:176,Security,access,access,176,"////////////////////////////////////////////////////////////////////////////////; /// Internal, default constructor.; ///; /// \note Use `TClass::GetClass(""ClassName"")` to get access to a TClass object for a certain class!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:321,Integrability,interface,interface,321,"////////////////////////////////////////////////////////////////////////////////; /// Create a TClass object. This object contains the full dictionary; /// of a class. It has list to baseclasses, datamembers and methods.; /// Use this ctor to create a standalone TClass object. Only useful; /// to get a temporary TClass interface to an interpreted class. Used by TTabCom.; ///; /// \note Use `TClass::GetClass(""ClassName"")` to get access to a TClass object for a certain class!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:432,Security,access,access,432,"////////////////////////////////////////////////////////////////////////////////; /// Create a TClass object. This object contains the full dictionary; /// of a class. It has list to baseclasses, datamembers and methods.; /// Use this ctor to create a standalone TClass object. Only useful; /// to get a temporary TClass interface to an interpreted class. Used by TTabCom.; ///; /// \note Use `TClass::GetClass(""ClassName"")` to get access to a TClass object for a certain class!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:167,Security,access,access,167,"////////////////////////////////////////////////////////////////////////////////; /// Internal constructor.; ///; /// \note Use `TClass::GetClass(""ClassName"")` to get access to a TClass object for a certain class!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:229,Security,access,access,229,"////////////////////////////////////////////////////////////////////////////////; /// Internal constructor, mimicing the case of a class fwd declared in the interpreter.; ///; /// \note Use `TClass::GetClass(""ClassName"")` to get access to a TClass object for a certain class!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:343,Integrability,interface,interface,343,"////////////////////////////////////////////////////////////////////////////////; /// Internal constructor.; ///; /// Create a TClass object. This object contains the full dictionary; /// of a class. It has list to baseclasses, datamembers and methods.; /// Use this ctor to create a standalone TClass object. Most useful; /// to get a TClass interface to an interpreted class. Used by TTabCom.; ///; /// This copies the ClassInfo (i.e. does *not* take ownership of it).; ///; /// \note Use `TClass::GetClass(""class"")` to get access to a TClass object for a certain class!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:526,Security,access,access,526,"////////////////////////////////////////////////////////////////////////////////; /// Internal constructor.; ///; /// Create a TClass object. This object contains the full dictionary; /// of a class. It has list to baseclasses, datamembers and methods.; /// Use this ctor to create a standalone TClass object. Most useful; /// to get a TClass interface to an interpreted class. Used by TTabCom.; ///; /// This copies the ClassInfo (i.e. does *not* take ownership of it).; ///; /// \note Use `TClass::GetClass(""class"")` to get access to a TClass object for a certain class!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:163,Security,access,access,163,"////////////////////////////////////////////////////////////////////////////////; /// Internal constructor.; ///; /// \note Use `TClass::GetClass(""class"")` to get access to a TClass object for a certain class!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:163,Security,access,access,163,"////////////////////////////////////////////////////////////////////////////////; /// Internal constructor.; ///; /// \note Use `TClass::GetClass(""class"")` to get access to a TClass object for a certain class!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:48,Deployability,update,update,48,"// See also TCling::GenerateTClass() which will update fClassVersion after creation!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:68,Deployability,update,updated,68,"// move the StreamerInfo immediately so that there are; // properly updated!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:28,Performance,load,loading,28,"// Advertise ourself as the loading class for this class name",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:19,Performance,Load,LoadClassInfo,19,"// avoids calls to LoadClassInfo() if info is already loaded",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:54,Performance,load,loaded,54,"// avoids calls to LoadClassInfo() if info is already loaded",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:3,Safety,avoid,avoids,3,"// avoids calls to LoadClassInfo() if info is already loaded",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:156,Performance,load,load,156,"// If the TClass is being generated from a ROOT dictionary,; // even though we do not seem to have a CINT dictionary for; // the class, we will will try to load it anyway UNLESS; // the class is an STL container (or string).; // This is because we do not expect the CINT dictionary; // to be present for all STL classes (and we can handle; // the lack of CINT dictionary in that cases).; // However, the cling the dictionary no longer carries; // an instantiation with it, unless we request the loading; // here *or* the user explicitly instantiate the template; // we would not have a ClassInfo for the template; // instantiation.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:495,Performance,load,loading,495,"// If the TClass is being generated from a ROOT dictionary,; // even though we do not seem to have a CINT dictionary for; // the class, we will will try to load it anyway UNLESS; // the class is an STL container (or string).; // This is because we do not expect the CINT dictionary; // to be present for all STL classes (and we can handle; // the lack of CINT dictionary in that cases).; // However, the cling the dictionary no longer carries; // an instantiation with it, unless we request the loading; // here *or* the user explicitly instantiate the template; // we would not have a ClassInfo for the template; // instantiation.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:41,Security,hash,hash,41,"// Make the typedef-expanded -> original hash table entries.; // There may be several entries for any given key.; // We only make entries if the typedef-expanded name; // is different from the original name.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:11,Integrability,interface,interface,11,"// Missing interface:; // fDeclFileLine = gInterpreter->ClassInfo_FileLine( fClassInfo );; // But really do not want to set ImplFileLine as it is currently the; // marker of being 'loaded' or not (reminder loaded == has a TClass bootstrap).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:181,Performance,load,loaded,181,"// Missing interface:; // fDeclFileLine = gInterpreter->ClassInfo_FileLine( fClassInfo );; // But really do not want to set ImplFileLine as it is currently the; // marker of being 'loaded' or not (reminder loaded == has a TClass bootstrap).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:206,Performance,load,loaded,206,"// Missing interface:; // fDeclFileLine = gInterpreter->ClassInfo_FileLine( fClassInfo );; // But really do not want to set ImplFileLine as it is currently the; // marker of being 'loaded' or not (reminder loaded == has a TClass bootstrap).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:55,Safety,safe,safely,55,"// If we have a TClass compiled initialization, we can safely assume that; // there will also be a collection proxy.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:27,Security,hash,hashtables,27,"// Remove from the typedef hashtables.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:120,Security,access,access,120,"// Not owning lists, don't call Delete(); // But this still need to be done first because the TList destructor; // does access the object contained (via GetObject()->TestBit(kCanDelete))",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:166,Testability,Test,TestBit,166,"// Not owning lists, don't call Delete(); // But this still need to be done first because the TList destructor; // does access the object contained (via GetObject()->TestBit(kCanDelete))",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:161,Availability,error,error,161,"// Read a class.rules file which contains one rule per line with comment; // starting with a #; // Returns the number of rules loaded.; // Returns -1 in case of error.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:127,Performance,load,loaded,127,"// Read a class.rules file which contains one rule per line with comment; // starting with a #; // Returns the number of rules loaded.; // Returns -1 in case of error.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:251,Availability,error,error,251,"////////////////////////////////////////////////////////////////////////////////; /// Read a class.rules file which contains one rule per line with comment; /// starting with a #; /// - Returns the number of rules loaded.; /// - Returns -1 in case of error.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:214,Performance,load,loaded,214,"////////////////////////////////////////////////////////////////////////////////; /// Read a class.rules file which contains one rule per line with comment; /// starting with a #; /// - Returns the number of rules loaded.; /// - Returns -1 in case of error.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:1343,Deployability,update,updated,1343,"////////////////////////////////////////////////////////////////////////////////; /// Add a schema evolution customization rule.; /// The syntax of the rule can be either the short form:; /// ~~~ {.cpp}; /// [type=Read] classname membername [attributes=... ] [version=[...] ] [checksum=[...] ] [oldtype=...] [code={...}]; /// ~~~; /// or the long form; /// ~~~ {.cpp}; /// [type=Read] sourceClass=classname [targetclass=newClassname] [ source=""type membername; [type2 membername2]"" ]; /// [target=""membername3;membername4""] [attributes=... ] [version=...] [checksum=...] [code={...}|functionname]; /// ~~~; ///; /// For example to set HepMC::GenVertex::m_event to _not_ owned the object it is pointing to:; /// HepMC::GenVertex m_event attributes=NotOwner; ///; /// Semantic of the tags:; /// - type : the type of the rule, valid values: Read, ReadRaw, Write, WriteRaw, the default is 'Read'.; /// - sourceClass : the name of the class as it is on the rule file; /// - targetClass : the name of the class as it is in the current code ; defaults to the value of sourceClass; /// - source : the types and names of the data members from the class on file that are needed, the list is separated by semi-colons ';'; /// - oldtype: in the short form only, indicates the type on disk of the data member.; /// - target : the names of the data members updated by this rule, the list is separated by semi-colons ';'; /// - attributes : list of possible qualifiers among: Owner, NotOwner; /// - version : list of the version of the class layout that this rule applies to. The syntax can be [1,4,5] or [2-] or [1-3] or [-3]; /// - checksum : comma delimited list of the checksums of the class layout that this rule applies to.; /// - code={...} : code to be executed for the rule or name of the function implementing it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:277,Security,checksum,checksum,277,"////////////////////////////////////////////////////////////////////////////////; /// Add a schema evolution customization rule.; /// The syntax of the rule can be either the short form:; /// ~~~ {.cpp}; /// [type=Read] classname membername [attributes=... ] [version=[...] ] [checksum=[...] ] [oldtype=...] [code={...}]; /// ~~~; /// or the long form; /// ~~~ {.cpp}; /// [type=Read] sourceClass=classname [targetclass=newClassname] [ source=""type membername; [type2 membername2]"" ]; /// [target=""membername3;membername4""] [attributes=... ] [version=...] [checksum=...] [code={...}|functionname]; /// ~~~; ///; /// For example to set HepMC::GenVertex::m_event to _not_ owned the object it is pointing to:; /// HepMC::GenVertex m_event attributes=NotOwner; ///; /// Semantic of the tags:; /// - type : the type of the rule, valid values: Read, ReadRaw, Write, WriteRaw, the default is 'Read'.; /// - sourceClass : the name of the class as it is on the rule file; /// - targetClass : the name of the class as it is in the current code ; defaults to the value of sourceClass; /// - source : the types and names of the data members from the class on file that are needed, the list is separated by semi-colons ';'; /// - oldtype: in the short form only, indicates the type on disk of the data member.; /// - target : the names of the data members updated by this rule, the list is separated by semi-colons ';'; /// - attributes : list of possible qualifiers among: Owner, NotOwner; /// - version : list of the version of the class layout that this rule applies to. The syntax can be [1,4,5] or [2-] or [1-3] or [-3]; /// - checksum : comma delimited list of the checksums of the class layout that this rule applies to.; /// - code={...} : code to be executed for the rule or name of the function implementing it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:557,Security,checksum,checksum,557,"////////////////////////////////////////////////////////////////////////////////; /// Add a schema evolution customization rule.; /// The syntax of the rule can be either the short form:; /// ~~~ {.cpp}; /// [type=Read] classname membername [attributes=... ] [version=[...] ] [checksum=[...] ] [oldtype=...] [code={...}]; /// ~~~; /// or the long form; /// ~~~ {.cpp}; /// [type=Read] sourceClass=classname [targetclass=newClassname] [ source=""type membername; [type2 membername2]"" ]; /// [target=""membername3;membername4""] [attributes=... ] [version=...] [checksum=...] [code={...}|functionname]; /// ~~~; ///; /// For example to set HepMC::GenVertex::m_event to _not_ owned the object it is pointing to:; /// HepMC::GenVertex m_event attributes=NotOwner; ///; /// Semantic of the tags:; /// - type : the type of the rule, valid values: Read, ReadRaw, Write, WriteRaw, the default is 'Read'.; /// - sourceClass : the name of the class as it is on the rule file; /// - targetClass : the name of the class as it is in the current code ; defaults to the value of sourceClass; /// - source : the types and names of the data members from the class on file that are needed, the list is separated by semi-colons ';'; /// - oldtype: in the short form only, indicates the type on disk of the data member.; /// - target : the names of the data members updated by this rule, the list is separated by semi-colons ';'; /// - attributes : list of possible qualifiers among: Owner, NotOwner; /// - version : list of the version of the class layout that this rule applies to. The syntax can be [1,4,5] or [2-] or [1-3] or [-3]; /// - checksum : comma delimited list of the checksums of the class layout that this rule applies to.; /// - code={...} : code to be executed for the rule or name of the function implementing it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:1619,Security,checksum,checksum,1619,"////////////////////////////////////////////////////////////////////////////////; /// Add a schema evolution customization rule.; /// The syntax of the rule can be either the short form:; /// ~~~ {.cpp}; /// [type=Read] classname membername [attributes=... ] [version=[...] ] [checksum=[...] ] [oldtype=...] [code={...}]; /// ~~~; /// or the long form; /// ~~~ {.cpp}; /// [type=Read] sourceClass=classname [targetclass=newClassname] [ source=""type membername; [type2 membername2]"" ]; /// [target=""membername3;membername4""] [attributes=... ] [version=...] [checksum=...] [code={...}|functionname]; /// ~~~; ///; /// For example to set HepMC::GenVertex::m_event to _not_ owned the object it is pointing to:; /// HepMC::GenVertex m_event attributes=NotOwner; ///; /// Semantic of the tags:; /// - type : the type of the rule, valid values: Read, ReadRaw, Write, WriteRaw, the default is 'Read'.; /// - sourceClass : the name of the class as it is on the rule file; /// - targetClass : the name of the class as it is in the current code ; defaults to the value of sourceClass; /// - source : the types and names of the data members from the class on file that are needed, the list is separated by semi-colons ';'; /// - oldtype: in the short form only, indicates the type on disk of the data member.; /// - target : the names of the data members updated by this rule, the list is separated by semi-colons ';'; /// - attributes : list of possible qualifiers among: Owner, NotOwner; /// - version : list of the version of the class layout that this rule applies to. The syntax can be [1,4,5] or [2-] or [1-3] or [-3]; /// - checksum : comma delimited list of the checksums of the class layout that this rule applies to.; /// - code={...} : code to be executed for the rule or name of the function implementing it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:1658,Security,checksum,checksums,1658,"////////////////////////////////////////////////////////////////////////////////; /// Add a schema evolution customization rule.; /// The syntax of the rule can be either the short form:; /// ~~~ {.cpp}; /// [type=Read] classname membername [attributes=... ] [version=[...] ] [checksum=[...] ] [oldtype=...] [code={...}]; /// ~~~; /// or the long form; /// ~~~ {.cpp}; /// [type=Read] sourceClass=classname [targetclass=newClassname] [ source=""type membername; [type2 membername2]"" ]; /// [target=""membername3;membername4""] [attributes=... ] [version=...] [checksum=...] [code={...}|functionname]; /// ~~~; ///; /// For example to set HepMC::GenVertex::m_event to _not_ owned the object it is pointing to:; /// HepMC::GenVertex m_event attributes=NotOwner; ///; /// Semantic of the tags:; /// - type : the type of the rule, valid values: Read, ReadRaw, Write, WriteRaw, the default is 'Read'.; /// - sourceClass : the name of the class as it is on the rule file; /// - targetClass : the name of the class as it is in the current code ; defaults to the value of sourceClass; /// - source : the types and names of the data members from the class on file that are needed, the list is separated by semi-colons ';'; /// - oldtype: in the short form only, indicates the type on disk of the data member.; /// - target : the names of the data members updated by this rule, the list is separated by semi-colons ';'; /// - attributes : list of possible qualifiers among: Owner, NotOwner; /// - version : list of the version of the class layout that this rule applies to. The syntax can be [1,4,5] or [2-] or [1-3] or [-3]; /// - checksum : comma delimited list of the checksums of the class layout that this rule applies to.; /// - code={...} : code to be executed for the rule or name of the function implementing it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:109,Modifiability,inherit,inherited,109,"////////////////////////////////////////////////////////////////////////////////; /// Browse external object inherited from TObject.; /// It passes through inheritance tree and calls TBrowser::Add; /// in appropriate cases. Static function.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:156,Modifiability,inherit,inheritance,156,"////////////////////////////////////////////////////////////////////////////////; /// Browse external object inherited from TObject.; /// It passes through inheritance tree and calls TBrowser::Add; /// in appropriate cases. Static function.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:34,Deployability,Update,Update,34,"// When called via TMapFile (e.g. Update()) make sure that the dictionary; // gets allocated on the heap and not in the mapped file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:83,Energy Efficiency,allocate,allocated,83,"// When called via TMapFile (e.g. Update()) make sure that the dictionary; // gets allocated on the heap and not in the mapped file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:39,Modifiability,Inherit,InheritsFrom,39,"// CallShowMember will force a call to InheritsFrom, which indirectly; // calls TClass::GetClass. It forces the loading of new typedefs in; // case some of them were not yet loaded.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:112,Performance,load,loading,112,"// CallShowMember will force a call to InheritsFrom, which indirectly; // calls TClass::GetClass. It forces the loading of new typedefs in; // case some of them were not yet loaded.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:174,Performance,load,loaded,174,"// CallShowMember will force a call to InheritsFrom, which indirectly; // calls TClass::GetClass. It forces the loading of new typedefs in; // case some of them were not yet loaded.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:260,Availability,error,error,260,"// This is a transient data member, so it is probably fine to not have; // access to its content. However let's no mark it as definitively setup,; // since another class might use this class for a persistent data member and; // in this case we really want the error message.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:266,Integrability,message,message,266,"// This is a transient data member, so it is probably fine to not have; // access to its content. However let's no mark it as definitively setup,; // since another class might use this class for a persistent data member and; // in this case we really want the error message.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:75,Security,access,access,75,"// This is a transient data member, so it is probably fine to not have; // access to its content. However let's no mark it as definitively setup,; // since another class might use this class for a persistent data member and; // in this case we really want the error message.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:222,Security,access,access,222,"////////////////////////////////////////////////////////////////////////////////; /// Calculate the offset between an object of this class to; /// its base class TObject. The pointer can be adjusted by; /// that offset to access any virtual method of TObject like; /// Streamer() and ShowMembers().",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:34,Deployability,Update,Update,34,"// When called via TMapFile (e.g. Update()) make sure that the dictionary; // gets allocated on the heap and not in the mapped file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:83,Energy Efficiency,allocate,allocated,83,"// When called via TMapFile (e.g. Update()) make sure that the dictionary; // gets allocated on the heap and not in the mapped file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:23,Availability,avail,available,23,"// TTree is not always available (for example in rootcling), so we need; // to grab it silently.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:11,Modifiability,inherit,inheritance,11,"// Look at inheritance tree",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:16,Security,access,access,16,"// Need to lock access to TROOT::GetListOfClasses so the cloning happens atomically",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:37,Testability,test,test,37,"// // This code was used too quickly test the STL Emulation layer; // Int_t k = TClassEdit::IsSTLCont(GetName());; // if (k==1||k==-1) return;",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:106,Modifiability,inherit,inheritance,106,"////////////////////////////////////////////////////////////////////////////////; /// Draw detailed class inheritance structure.; /// If a class B inherits from a class A, the description of B is drawn; /// on the right side of the description of A.; /// Member functions overridden by B are shown in class A with a blue line; /// erasing the corresponding member function",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:147,Modifiability,inherit,inherits,147,"////////////////////////////////////////////////////////////////////////////////; /// Draw detailed class inheritance structure.; /// If a class B inherits from a class A, the description of B is drawn; /// on the right side of the description of A.; /// Member functions overridden by B are shown in class A with a blue line; /// erasing the corresponding member function",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:211,Modifiability,inherit,inheritance,211,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to the base class ""classname"". Returns 0 in case; /// ""classname"" is not a base class. Takes care of multiple inheritance.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:197,Modifiability,inherit,inheritance,197,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to the base class ""cl"". Returns 0 in case ""cl""; /// is not a base class. Takes care of multiple inheritance.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:21,Modifiability,inherit,inheritance,21,"// otherwise look at inheritance tree",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:313,Modifiability,inherit,inheritance,313,"////////////////////////////////////////////////////////////////////////////////; /// Return data member offset to the base class ""cl"".; /// - Returns -1 in case ""cl"" is not a base class.; /// - Returns -2 if cl is a base class, but we can't find the offset; /// because it's virtual.; /// Takes care of multiple inheritance.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:21,Modifiability,inherit,inheritance,21,"// otherwise look at inheritance tree",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:118,Availability,avail,available,118,"//use option load=kFALSE to avoid a warning like:; //""Warning in <TClass::TClass>: no dictionary for class TRefCnt is available""; //We can not afford to not have the class if it exist, so we; //use kTRUE.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:13,Performance,load,load,13,"//use option load=kFALSE to avoid a warning like:; //""Warning in <TClass::TClass>: no dictionary for class TRefCnt is available""; //We can not afford to not have the class if it exist, so we; //use kTRUE.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:28,Safety,avoid,avoid,28,"//use option load=kFALSE to avoid a warning like:; //""Warning in <TClass::TClass>: no dictionary for class TRefCnt is available""; //We can not afford to not have the class if it exist, so we; //use kTRUE.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:218,Modifiability,inherit,inheritance,218,"////////////////////////////////////////////////////////////////////////////////; /// - Return data member offset to the base class ""cl"".; /// - Returns -1 in case ""cl"" is not a base class.; /// Takes care of multiple inheritance.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:43,Performance,load,loaded,43,"// At least of the ClassInfo have not been loaded in memory yet and; // since there is no virtual base class (or we don't have enough so it; // would not make a difference) we can use the 'static' information",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:95,Performance,optimiz,optimized,95,"// Use assert, so that this line (slow because of the TClassEdit) is completely; // removed in optimized code.; //assert(TestBit(kLoading) || !TClassEdit::IsSTLCont(fName) || fCollectionProxy || 0 == ""The TClass for the STL collection has no collection proxy!"");",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:7,Testability,assert,assert,7,"// Use assert, so that this line (slow because of the TClassEdit) is completely; // removed in optimized code.; //assert(TestBit(kLoading) || !TClassEdit::IsSTLCont(fName) || fCollectionProxy || 0 == ""The TClass for the STL collection has no collection proxy!"");",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:114,Testability,assert,assert,114,"// Use assert, so that this line (slow because of the TClassEdit) is completely; // removed in optimized code.; //assert(TestBit(kLoading) || !TClassEdit::IsSTLCont(fName) || fCollectionProxy || 0 == ""The TClass for the STL collection has no collection proxy!"");",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:121,Testability,Test,TestBit,121,"// Use assert, so that this line (slow because of the TClassEdit) is completely; // removed in optimized code.; //assert(TestBit(kLoading) || !TClassEdit::IsSTLCont(fName) || fCollectionProxy || 0 == ""The TClass for the STL collection has no collection proxy!"");",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:92,Integrability,wrap,wrapper,92,"////////////////////////////////////////////////////////////////////////////////; /// Get a wrapper/accessor function around this class custom streamer (member function).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Security,access,accessor,100,"////////////////////////////////////////////////////////////////////////////////; /// Get a wrapper/accessor function around this class custom streamer (member function).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:92,Integrability,wrap,wrapper,92,"////////////////////////////////////////////////////////////////////////////////; /// Get a wrapper/accessor function around this class custom conversion streamer (member function).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Security,access,accessor,100,"////////////////////////////////////////////////////////////////////////////////; /// Get a wrapper/accessor function around this class custom conversion streamer (member function).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:165,Performance,load,load,165,"////////////////////////////////////////////////////////////////////////////////; /// Static method returning pointer to TClass of the specified class name.; /// If load is true, an attempt is made to obtain the class by loading; /// the appropriate shared library (directed by the rootmap file).; /// If silent is 'true', do not warn about missing dictionary for the class.; /// (typically used for classes that are used only for transient members); /// Returns `nullptr` in case class is not found.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:221,Performance,load,loading,221,"////////////////////////////////////////////////////////////////////////////////; /// Static method returning pointer to TClass of the specified class name.; /// If load is true, an attempt is made to obtain the class by loading; /// the appropriate shared library (directed by the rootmap file).; /// If silent is 'true', do not warn about missing dictionary for the class.; /// (typically used for classes that are used only for transient members); /// Returns `nullptr` in case class is not found.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:19,Deployability,release,release,19,"// Early return to release the lock without having to execute the; // long-ish normalization.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:171,Availability,avail,available,171,"// We could speed-up some of the search by adding (the equivalent of); //; // if (cl->GetState() == kInterpreter) return cl; //; // In this case, if a ROOT dictionary was available when the TClass; // was first requested it would have been used and if a ROOT dictionary is; // loaded later on TClassTable::Add will take care of updating the TClass.; // So as far as ROOT dictionary are concerned, if the current TClass is; // in interpreted state, we are sure there is nothing to load.; //; // However (see TROOT::LoadClass), the TClass can also be loaded/provided; // by a user provided TClassGenerator. We have no way of knowing whether; // those do (or even can) behave the same way as the ROOT dictionary and; // have the 'dictionary is now available for use' step informs the existing; // TClass that their dictionary is now available.; //we may pass here in case of a dummy class created by TVirtualStreamerInfo",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:745,Availability,avail,available,745,"// We could speed-up some of the search by adding (the equivalent of); //; // if (cl->GetState() == kInterpreter) return cl; //; // In this case, if a ROOT dictionary was available when the TClass; // was first requested it would have been used and if a ROOT dictionary is; // loaded later on TClassTable::Add will take care of updating the TClass.; // So as far as ROOT dictionary are concerned, if the current TClass is; // in interpreted state, we are sure there is nothing to load.; //; // However (see TROOT::LoadClass), the TClass can also be loaded/provided; // by a user provided TClassGenerator. We have no way of knowing whether; // those do (or even can) behave the same way as the ROOT dictionary and; // have the 'dictionary is now available for use' step informs the existing; // TClass that their dictionary is now available.; //we may pass here in case of a dummy class created by TVirtualStreamerInfo",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:830,Availability,avail,available,830,"// We could speed-up some of the search by adding (the equivalent of); //; // if (cl->GetState() == kInterpreter) return cl; //; // In this case, if a ROOT dictionary was available when the TClass; // was first requested it would have been used and if a ROOT dictionary is; // loaded later on TClassTable::Add will take care of updating the TClass.; // So as far as ROOT dictionary are concerned, if the current TClass is; // in interpreted state, we are sure there is nothing to load.; //; // However (see TROOT::LoadClass), the TClass can also be loaded/provided; // by a user provided TClassGenerator. We have no way of knowing whether; // those do (or even can) behave the same way as the ROOT dictionary and; // have the 'dictionary is now available for use' step informs the existing; // TClass that their dictionary is now available.; //we may pass here in case of a dummy class created by TVirtualStreamerInfo",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:277,Performance,load,loaded,277,"// We could speed-up some of the search by adding (the equivalent of); //; // if (cl->GetState() == kInterpreter) return cl; //; // In this case, if a ROOT dictionary was available when the TClass; // was first requested it would have been used and if a ROOT dictionary is; // loaded later on TClassTable::Add will take care of updating the TClass.; // So as far as ROOT dictionary are concerned, if the current TClass is; // in interpreted state, we are sure there is nothing to load.; //; // However (see TROOT::LoadClass), the TClass can also be loaded/provided; // by a user provided TClassGenerator. We have no way of knowing whether; // those do (or even can) behave the same way as the ROOT dictionary and; // have the 'dictionary is now available for use' step informs the existing; // TClass that their dictionary is now available.; //we may pass here in case of a dummy class created by TVirtualStreamerInfo",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:480,Performance,load,load,480,"// We could speed-up some of the search by adding (the equivalent of); //; // if (cl->GetState() == kInterpreter) return cl; //; // In this case, if a ROOT dictionary was available when the TClass; // was first requested it would have been used and if a ROOT dictionary is; // loaded later on TClassTable::Add will take care of updating the TClass.; // So as far as ROOT dictionary are concerned, if the current TClass is; // in interpreted state, we are sure there is nothing to load.; //; // However (see TROOT::LoadClass), the TClass can also be loaded/provided; // by a user provided TClassGenerator. We have no way of knowing whether; // those do (or even can) behave the same way as the ROOT dictionary and; // have the 'dictionary is now available for use' step informs the existing; // TClass that their dictionary is now available.; //we may pass here in case of a dummy class created by TVirtualStreamerInfo",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:514,Performance,Load,LoadClass,514,"// We could speed-up some of the search by adding (the equivalent of); //; // if (cl->GetState() == kInterpreter) return cl; //; // In this case, if a ROOT dictionary was available when the TClass; // was first requested it would have been used and if a ROOT dictionary is; // loaded later on TClassTable::Add will take care of updating the TClass.; // So as far as ROOT dictionary are concerned, if the current TClass is; // in interpreted state, we are sure there is nothing to load.; //; // However (see TROOT::LoadClass), the TClass can also be loaded/provided; // by a user provided TClassGenerator. We have no way of knowing whether; // those do (or even can) behave the same way as the ROOT dictionary and; // have the 'dictionary is now available for use' step informs the existing; // TClass that their dictionary is now available.; //we may pass here in case of a dummy class created by TVirtualStreamerInfo",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:549,Performance,load,loaded,549,"// We could speed-up some of the search by adding (the equivalent of); //; // if (cl->GetState() == kInterpreter) return cl; //; // In this case, if a ROOT dictionary was available when the TClass; // was first requested it would have been used and if a ROOT dictionary is; // loaded later on TClassTable::Add will take care of updating the TClass.; // So as far as ROOT dictionary are concerned, if the current TClass is; // in interpreted state, we are sure there is nothing to load.; //; // However (see TROOT::LoadClass), the TClass can also be loaded/provided; // by a user provided TClassGenerator. We have no way of knowing whether; // those do (or even can) behave the same way as the ROOT dictionary and; // have the 'dictionary is now available for use' step informs the existing; // TClass that their dictionary is now available.; //we may pass here in case of a dummy class created by TVirtualStreamerInfo",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:376,Performance,load,loading,376,"// If there is a @ symbol (followed by a version number) then this is a synthetic class name created; // from an already normalized name for the purpose of supporting schema evolution.; // There is no dictionary or interpreter information about this kind of class, the only; // (undesirable) side-effect of doing the search would be a waste of CPU time and potential; // auto-loading or auto-parsing based on the scope of the name.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:6,Safety,avoid,avoid,6,"// To avoid spurious auto parsing, let's check if the name as-is is; // known in the TClassTable.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:840,Safety,avoid,avoid,840,"// This assertion currently fails because of; // TClass *c1 = TClass::GetClass(""basic_iostream<char,char_traits<char> >"");; // TClass *c2 = TClass::GetClass(""std::iostream"");; // where the TClassEdit normalized name of iostream is basic_iostream<char>; // i.e missing the addition of the default parameter. This is because TClingLookupHelper; // uses only 'part' of TMetaUtils::GetNormalizedName.; // if (!cl) {; // TDataType* dataType = (TDataType*)gROOT->GetListOfTypes()->FindObject(name);; // TClass *altcl = dataType ? (TClass*)gROOT->GetListOfClasses()->FindObject(dataType->GetFullTypeName()) : 0;; // if (altcl && normalizedName != altcl->GetName()); // ::Fatal(""TClass::GetClass"",""The existing name (%s) for %s is different from the normalized name: %s\n"",; // altcl->GetName(), name, normalizedName.c_str());; // }; // We want to avoid auto-parsing due to intentionally missing dictionary for std::pair.; // However, we don't need this special treatement in rootcling (there is no auto-parsing); // and we want to make that the TClass for the pair goes through the regular creation; // mechanism (i.e. in rootcling they should be in kInterpreted state and never in; // kEmulated state) so that they have proper interpreter (ClassInfo) information which; // will be used to create the TProtoClass (if one is requested for the pair).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:8,Testability,assert,assertion,8,"// This assertion currently fails because of; // TClass *c1 = TClass::GetClass(""basic_iostream<char,char_traits<char> >"");; // TClass *c2 = TClass::GetClass(""std::iostream"");; // where the TClassEdit normalized name of iostream is basic_iostream<char>; // i.e missing the addition of the default parameter. This is because TClingLookupHelper; // uses only 'part' of TMetaUtils::GetNormalizedName.; // if (!cl) {; // TDataType* dataType = (TDataType*)gROOT->GetListOfTypes()->FindObject(name);; // TClass *altcl = dataType ? (TClass*)gROOT->GetListOfClasses()->FindObject(dataType->GetFullTypeName()) : 0;; // if (altcl && normalizedName != altcl->GetName()); // ::Fatal(""TClass::GetClass"",""The existing name (%s) for %s is different from the normalized name: %s\n"",; // altcl->GetName(), name, normalizedName.c_str());; // }; // We want to avoid auto-parsing due to intentionally missing dictionary for std::pair.; // However, we don't need this special treatement in rootcling (there is no auto-parsing); // and we want to make that the TClass for the pair goes through the regular creation; // mechanism (i.e. in rootcling they should be in kInterpreted state and never in; // kEmulated state) so that they have proper interpreter (ClassInfo) information which; // will be used to create the TProtoClass (if one is requested for the pair).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:43,Performance,load,loaded,43,"// At this point more information has been loaded. This; // information might be pertinent to the normalization of the name.; // For example it might contain or be a typedef for which we don't; // have a forward declaration (eg. typedef to instance of class; // template with default parameters). So let's redo the normalization; // as the new information (eg. typedef in TROOT::GetListOfTypes) might; // lead to a different value.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:35,Performance,load,loaded,35,"// We have not been able to find a loaded TClass, return the Emulated; // TClass if we have one.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:321,Safety,avoid,avoid,321,"// altname now contains the full name of the class including a possible; // namespace if there has been a using namespace statement.; // At least in the case C<string [2]> (normalized) vs C<string[2]> (altname); // the TClassEdit normalization and the TMetaUtils normalization leads to; // two different space layout. To avoid an infinite recursion, we also; // add the test on (altname != name)",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:370,Testability,test,test,370,"// altname now contains the full name of the class including a possible; // namespace if there has been a using namespace statement.; // At least in the case C<string [2]> (normalized) vs C<string[2]> (altname); // the TClassEdit normalization and the TMetaUtils normalization leads to; // two different space layout. To avoid an infinite recursion, we also; // add the test on (altname != name)",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:10,Security,access,access,10,"//protect access to TROOT::GetIdMap",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Performance,load,load,100,"// Note we might need support for typedefs and simple types!; // TDataType *objType = GetType(name, load);; //if (objType) {; // const char *typdfName = objType->GetTypeName();; // if (typdfName && strcmp(typdfName, name)) {; // cl = GetClass(typdfName, load);; // return cl;; // }; // }",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:254,Performance,load,load,254,"// Note we might need support for typedefs and simple types!; // TDataType *objType = GetType(name, load);; //if (objType) {; // const char *typdfName = objType->GetTypeName();; // if (typdfName && strcmp(typdfName, name)) {; // cl = GetClass(typdfName, load);; // return cl;; // }; // }",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:47,Usability,simpl,simple,47,"// Note we might need support for typedefs and simple types!; // TDataType *objType = GetType(name, load);; //if (objType) {; // const char *typdfName = objType->GetTypeName();; // if (typdfName && strcmp(typdfName, name)) {; // cl = GetClass(typdfName, load);; // return cl;; // }; // }",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:32,Testability,test,test,32,"// Re-disable, we just meant to test",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:23,Safety,avoid,avoid,23,"// Disable autoload to avoid potential infinite recursion",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:164,Performance,load,load,164,"////////////////////////////////////////////////////////////////////////////////; /// Static method returning pointer to TClass of the specified ClassInfo.; /// If load is true an attempt is made to obtain the class by loading; /// the appropriate shared library (directed by the rootmap file).; /// If silent is 'true', do not warn about missing dictionary for the class.; /// (typically used for class that are used only for transient members); /// Returns 0 in case class is not found.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:219,Performance,load,loading,219,"////////////////////////////////////////////////////////////////////////////////; /// Static method returning pointer to TClass of the specified ClassInfo.; /// If load is true an attempt is made to obtain the class by loading; /// the appropriate shared library (directed by the rootmap file).; /// If silent is 'true', do not warn about missing dictionary for the class.; /// (typically used for class that are used only for transient members); /// Returns 0 in case class is not found.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:145,Performance,Load,LoadClass,145,"// Technically we need the write lock only for the call to ClassInfo_FullName; // and GenerateTClass but FindObject will take the read lock (and LoadClass will; // take the write lock). Since taking/releasing the lock is expensive, let just; // take the write guard and keep it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:121,Performance,load,loading,121,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to the dictionary loading function generated by; /// rootcint",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:121,Performance,load,loading,121,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to the dictionary loading function generated by; /// rootcint",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:16,Usability,simpl,simple,16,"// If this is a simple name there is a chance to find it in the; // StreamerInfo even if we did not find it in the RealData.; // For example an array name would be fArray[3] in RealData but; // just fArray in the streamerInfo.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:19,Usability,simpl,simple,19,"// -- Not found, a simple name, all done.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:270,Integrability,depend,depends,270,"////////////////////////////////////////////////////////////////////////////////; /// Get the list of shared libraries containing the code for class cls.; /// The first library in the list is the one containing the class, the; /// others are the libraries the first one depends on. Returns 0; /// in case the library is not found.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:6,Testability,test,test,6,"// We test again on fCanLoadClassInfo has another thread may have executed it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:165,Safety,safe,safe,165,"////////////////////////////////////////////////////////////////////////////////; /// Return a list containing the TEnums of a class.; ///; /// The list returned is safe to use from multiple thread without explicitly; /// taking the ROOT global lock.; ///; /// In the case the TClass represents a namespace, the returned list will; /// implicit take the ROOT global lock upon any access (see TListOfEnumsWithLock); ///; /// In the case the TClass represents a class or struct and requestListLoading; /// is true, the list is immutable (and thus safe to access from multiple thread; /// without taking the global lock at all).; ///; /// In the case the TClass represents a class or struct and requestListLoading; /// is false, the list is mutable and thus we return a TListOfEnumsWithLock; /// which will implicit take the ROOT global lock upon any access.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:545,Safety,safe,safe,545,"////////////////////////////////////////////////////////////////////////////////; /// Return a list containing the TEnums of a class.; ///; /// The list returned is safe to use from multiple thread without explicitly; /// taking the ROOT global lock.; ///; /// In the case the TClass represents a namespace, the returned list will; /// implicit take the ROOT global lock upon any access (see TListOfEnumsWithLock); ///; /// In the case the TClass represents a class or struct and requestListLoading; /// is true, the list is immutable (and thus safe to access from multiple thread; /// without taking the global lock at all).; ///; /// In the case the TClass represents a class or struct and requestListLoading; /// is false, the list is mutable and thus we return a TListOfEnumsWithLock; /// which will implicit take the ROOT global lock upon any access.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:380,Security,access,access,380,"////////////////////////////////////////////////////////////////////////////////; /// Return a list containing the TEnums of a class.; ///; /// The list returned is safe to use from multiple thread without explicitly; /// taking the ROOT global lock.; ///; /// In the case the TClass represents a namespace, the returned list will; /// implicit take the ROOT global lock upon any access (see TListOfEnumsWithLock); ///; /// In the case the TClass represents a class or struct and requestListLoading; /// is true, the list is immutable (and thus safe to access from multiple thread; /// without taking the global lock at all).; ///; /// In the case the TClass represents a class or struct and requestListLoading; /// is false, the list is mutable and thus we return a TListOfEnumsWithLock; /// which will implicit take the ROOT global lock upon any access.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:553,Security,access,access,553,"////////////////////////////////////////////////////////////////////////////////; /// Return a list containing the TEnums of a class.; ///; /// The list returned is safe to use from multiple thread without explicitly; /// taking the ROOT global lock.; ///; /// In the case the TClass represents a namespace, the returned list will; /// implicit take the ROOT global lock upon any access (see TListOfEnumsWithLock); ///; /// In the case the TClass represents a class or struct and requestListLoading; /// is true, the list is immutable (and thus safe to access from multiple thread; /// without taking the global lock at all).; ///; /// In the case the TClass represents a class or struct and requestListLoading; /// is false, the list is mutable and thus we return a TListOfEnumsWithLock; /// which will implicit take the ROOT global lock upon any access.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:848,Security,access,access,848,"////////////////////////////////////////////////////////////////////////////////; /// Return a list containing the TEnums of a class.; ///; /// The list returned is safe to use from multiple thread without explicitly; /// taking the ROOT global lock.; ///; /// In the case the TClass represents a namespace, the returned list will; /// implicit take the ROOT global lock upon any access (see TListOfEnumsWithLock); ///; /// In the case the TClass represents a class or struct and requestListLoading; /// is true, the list is immutable (and thus safe to access from multiple thread; /// without taking the global lock at all).; ///; /// In the case the TClass represents a class or struct and requestListLoading; /// is false, the list is mutable and thus we return a TListOfEnumsWithLock; /// which will implicit take the ROOT global lock upon any access.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:46,Performance,load,loaded,46,"// We have a class for which the list was not loaded fully at; // first use.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:164,Performance,load,load,164,"// If the we have a class or struct or union, the order; // of data members is the list is essential since it determines their; // order on file. So we must always load. Also, the list is fixed; // since the language does not allow to add members.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:31,Performance,load,load,31,"// Fast path, no lock? Classes load at creation time.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:31,Performance,load,load,31,"// Fast path, no lock? Classes load at creation time.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:142,Performance,load,load,142,"////////////////////////////////////////////////////////////////////////////////; /// Return list containing the TMethods of a class.; /// If load is true, the list is populated with all the defined function; /// and currently instantiated function template.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:110,Security,access,accessible,110,"////////////////////////////////////////////////////////////////////////////////; /// Returns list of methods accessible by context menu.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:242,Performance,load,loading,242,"////////////////////////////////////////////////////////////////////////////////; /// Check whether a class has a dictionary or not.; /// This is equivalent to ask if a class is coming from a bootstrapping; /// procedure initiated during the loading of a library.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:299,Availability,avail,available,299,"////////////////////////////////////////////////////////////////////////////////; /// Check whether a class has a dictionary or ROOT can load one.; /// This is equivalent to ask HasDictionary() or whether a library is known; /// where it can be loaded from, or whether a Dictionary function is; /// available because the class's dictionary library was already loaded.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:137,Performance,load,load,137,"////////////////////////////////////////////////////////////////////////////////; /// Check whether a class has a dictionary or ROOT can load one.; /// This is equivalent to ask HasDictionary() or whether a library is known; /// where it can be loaded from, or whether a Dictionary function is; /// available because the class's dictionary library was already loaded.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:245,Performance,load,loaded,245,"////////////////////////////////////////////////////////////////////////////////; /// Check whether a class has a dictionary or ROOT can load one.; /// This is equivalent to ask HasDictionary() or whether a library is known; /// where it can be loaded from, or whether a Dictionary function is; /// available because the class's dictionary library was already loaded.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:360,Performance,load,loaded,360,"////////////////////////////////////////////////////////////////////////////////; /// Check whether a class has a dictionary or ROOT can load one.; /// This is equivalent to ask HasDictionary() or whether a library is known; /// where it can be loaded from, or whether a Dictionary function is; /// available because the class's dictionary library was already loaded.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:10,Deployability,update,update,10,"//we must update the class pointers pointing to 'this' in all TStreamerElements",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:116,Performance,load,loading,116,"// Since we are in the process of replacing a TClass by a TClass; // coming from a dictionary, there is no point in loading any; // libraries during this search.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:24,Performance,load,loaded,24,"// if the ClassInfo was loaded for a class with a TClass Init and it; // gets unloaded, should we guess it can be reloaded?",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:103,Performance,cache,caches,103,"////////////////////////////////////////////////////////////////////////////////; /// To clean out all caches.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:199,Security,access,accessible,199,"////////////////////////////////////////////////////////////////////////////////; /// Makes a customizable version of the popup menu list, i.e. makes a list; /// of TClassMenuItem objects of methods accessible by context menu.; /// The standard (and different) way consists in having just one element; /// in this list, corresponding to the whole standard list.; /// Once the customizable version is done, one can remove or add elements.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:113,Performance,perform,perform,113,"// If/when we have access to a copy constructor (or better to a move; // constructor), this function should also perform the data move.; // For now we just information the repository.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:19,Security,access,access,19,"// If/when we have access to a copy constructor (or better to a move; // constructor), this function should also perform the data move.; // For now we just information the repository.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:303,Performance,load,loads,303,"////////////////////////////////////////////////////////////////////////////////; /// Return (create an empty one if needed) the list of functions.; /// The major difference with GetListOfMethod is that this returns; /// the internal type of fMethod and thus can not be made public.; /// It also never 'loads' the content of the list.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:217,Performance,load,loading,217,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to method without looking at parameters.; /// Does not look in (possible) base classes.; /// Has the side effect of loading all the TMethod object in the list; /// of the class.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:131,Integrability,interface,interface,131,"////////////////////////////////////////////////////////////////////////////////; /// Look for a method in this class that has the interface function; /// address faddr.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:256,Performance,load,load,256,"////////////////////////////////////////////////////////////////////////////////; /// Return the number of methods of this class; /// Note that in case the list of methods is not yet created, it will be done; /// by GetListOfMethods().; /// This will also load/populate the list of methods, to get 'just' the; /// number of currently loaded methods use:; /// cl->GetListOfMethods(false)->GetSize();",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:334,Performance,load,loaded,334,"////////////////////////////////////////////////////////////////////////////////; /// Return the number of methods of this class; /// Note that in case the list of methods is not yet created, it will be done; /// by GetListOfMethods().; /// This will also load/populate the list of methods, to get 'just' the; /// number of currently loaded methods use:; /// cl->GetListOfMethods(false)->GetSize();",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:529,Modifiability,variab,variable,529,"////////////////////////////////////////////////////////////////////////////////; /// returns a pointer to the TVirtualStreamerInfo object for version; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:583,Modifiability,variab,variable,583,"////////////////////////////////////////////////////////////////////////////////; /// returns a pointer to the TVirtualStreamerInfo object for version; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:311,Performance,load,loaded,311,"////////////////////////////////////////////////////////////////////////////////; /// returns a pointer to the TVirtualStreamerInfo object for version; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:368,Performance,load,loaded,368,"////////////////////////////////////////////////////////////////////////////////; /// returns a pointer to the TVirtualStreamerInfo object for version; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:476,Performance,optimiz,optimizes,476,"////////////////////////////////////////////////////////////////////////////////; /// returns a pointer to the TVirtualStreamerInfo object for version; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:622,Performance,Optimiz,Optimize,622,"////////////////////////////////////////////////////////////////////////////////; /// returns a pointer to the TVirtualStreamerInfo object for version; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:48,Performance,load,loaded,48,"// Version 0 is special, it means the currently loaded version.; // We need to set it at the beginning to be able to guess it correctly.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:687,Performance,load,loading,687,"// Note that the access to fClassVersion above is technically not thread-safe with a low probably of problems.; // fClassVersion is not an atomic and is modified TClass::SetClassVersion (called from RootClassVersion via; // ROOT::ResetClassVersion) and is 'somewhat' protected by the atomic fVersionUsed.; // However, direct access to fClassVersion should be replaced by calls to GetClassVersion to set fVersionUsed.; // Even with such a change the code here and in these functions need to be reviewed as a cursory look seem; // to indicates they are not yet properly protection against mutli-thread access.; //; // However, the use of these functions is rare and mostly done at library loading time which should; // in almost all cases preceeds the possibility of GetStreamerInfo being called from multiple thread; // on that same TClass object.; //; // Summary: need careful review but risk of problem is extremely low.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:73,Safety,safe,safe,73,"// Note that the access to fClassVersion above is technically not thread-safe with a low probably of problems.; // fClassVersion is not an atomic and is modified TClass::SetClassVersion (called from RootClassVersion via; // ROOT::ResetClassVersion) and is 'somewhat' protected by the atomic fVersionUsed.; // However, direct access to fClassVersion should be replaced by calls to GetClassVersion to set fVersionUsed.; // Even with such a change the code here and in these functions need to be reviewed as a cursory look seem; // to indicates they are not yet properly protection against mutli-thread access.; //; // However, the use of these functions is rare and mostly done at library loading time which should; // in almost all cases preceeds the possibility of GetStreamerInfo being called from multiple thread; // on that same TClass object.; //; // Summary: need careful review but risk of problem is extremely low.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:888,Safety,risk,risk,888,"// Note that the access to fClassVersion above is technically not thread-safe with a low probably of problems.; // fClassVersion is not an atomic and is modified TClass::SetClassVersion (called from RootClassVersion via; // ROOT::ResetClassVersion) and is 'somewhat' protected by the atomic fVersionUsed.; // However, direct access to fClassVersion should be replaced by calls to GetClassVersion to set fVersionUsed.; // Even with such a change the code here and in these functions need to be reviewed as a cursory look seem; // to indicates they are not yet properly protection against mutli-thread access.; //; // However, the use of these functions is rare and mostly done at library loading time which should; // in almost all cases preceeds the possibility of GetStreamerInfo being called from multiple thread; // on that same TClass object.; //; // Summary: need careful review but risk of problem is extremely low.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:17,Security,access,access,17,"// Note that the access to fClassVersion above is technically not thread-safe with a low probably of problems.; // fClassVersion is not an atomic and is modified TClass::SetClassVersion (called from RootClassVersion via; // ROOT::ResetClassVersion) and is 'somewhat' protected by the atomic fVersionUsed.; // However, direct access to fClassVersion should be replaced by calls to GetClassVersion to set fVersionUsed.; // Even with such a change the code here and in these functions need to be reviewed as a cursory look seem; // to indicates they are not yet properly protection against mutli-thread access.; //; // However, the use of these functions is rare and mostly done at library loading time which should; // in almost all cases preceeds the possibility of GetStreamerInfo being called from multiple thread; // on that same TClass object.; //; // Summary: need careful review but risk of problem is extremely low.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:325,Security,access,access,325,"// Note that the access to fClassVersion above is technically not thread-safe with a low probably of problems.; // fClassVersion is not an atomic and is modified TClass::SetClassVersion (called from RootClassVersion via; // ROOT::ResetClassVersion) and is 'somewhat' protected by the atomic fVersionUsed.; // However, direct access to fClassVersion should be replaced by calls to GetClassVersion to set fVersionUsed.; // Even with such a change the code here and in these functions need to be reviewed as a cursory look seem; // to indicates they are not yet properly protection against mutli-thread access.; //; // However, the use of these functions is rare and mostly done at library loading time which should; // in almost all cases preceeds the possibility of GetStreamerInfo being called from multiple thread; // on that same TClass object.; //; // Summary: need careful review but risk of problem is extremely low.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:600,Security,access,access,600,"// Note that the access to fClassVersion above is technically not thread-safe with a low probably of problems.; // fClassVersion is not an atomic and is modified TClass::SetClassVersion (called from RootClassVersion via; // ROOT::ResetClassVersion) and is 'somewhat' protected by the atomic fVersionUsed.; // However, direct access to fClassVersion should be replaced by calls to GetClassVersion to set fVersionUsed.; // Even with such a change the code here and in these functions need to be reviewed as a cursory look seem; // to indicates they are not yet properly protection against mutli-thread access.; //; // However, the use of these functions is rare and mostly done at library loading time which should; // in almost all cases preceeds the possibility of GetStreamerInfo being called from multiple thread; // on that same TClass object.; //; // Summary: need careful review but risk of problem is extremely low.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:66,Integrability,rout,routine,66,"// Implementation of/for TStreamerInfo::GetStreamerInfo.; // This routine assumes the global lock has been taken.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:53,Safety,abort,abort,53,"// FIXME: Shouldn't we go to -1 here, or better just abort?",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:102,Performance,load,loaded,102,"// When the requested version does not exist we return; // the TVirtualStreamerInfo for the currently loaded class version.; // FIXME: This arguably makes no sense, we should warn and return nothing instead.; // Note: This is done for STL collections; // Note: fClassVersion could be -1 here (for an emulated class).; // This is also the code path take for unversioned classes.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:3,Performance,Cache,Cache,3,"// Cache the current info if we now have it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:691,Modifiability,variab,variable,691,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:745,Modifiability,variab,variable,745,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:300,Performance,load,loaded,300,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:473,Performance,load,loaded,473,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:530,Performance,load,loaded,530,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:638,Performance,optimiz,optimizes,638,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:784,Performance,Optimiz,Optimize,784,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:102,Performance,load,loaded,102,"// When the requested version does not exist we return; // the TVirtualStreamerInfo for the currently loaded class version.; // FIXME: This arguably makes no sense, we should warn and return nothing instead.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:24,Availability,avail,available,24,"// Let's take the first available StreamerInfo as a start",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:498,Modifiability,variab,variable,498,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:552,Modifiability,variab,variable,552,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:300,Performance,load,loaded,300,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:445,Performance,optimiz,optimizes,445,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:591,Performance,Optimiz,Optimize,591,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:102,Performance,load,loaded,102,"// When the requested version does not exist we return; // the TVirtualStreamerInfo for the currently loaded class version.; // FIXME: This arguably makes no sense, we should warn and return nothing instead.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:24,Availability,avail,available,24,"// Let's take the first available StreamerInfo as a start",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:40,Testability,test,test,40,"// We need to tak the lock since we are test and then setting fBits; // and TStreamerInfo::fBits (and the StreamerInfo state in general); // which can also be modified by another thread.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:113,Modifiability,inherit,inherits,113,"////////////////////////////////////////////////////////////////////////////////; /// Return kTRUE if this class inherits from a class with name ""classname"".; /// note that the function returns kTRUE in case classname is the class itself",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:113,Modifiability,inherit,inherits,113,"////////////////////////////////////////////////////////////////////////////////; /// Return kTRUE if this class inherits from class cl.; /// note that the function returns KTRUE in case cl is the class itself",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:181,Availability,down,down,181,"////////////////////////////////////////////////////////////////////////////////; /// Cast obj of this class type up to baseclass cl if up is true.; /// Cast obj of this class type down from baseclass cl if up is false.; /// If this class is not a baseclass of cl return 0, else the pointer; /// to the cl part of this (up) or to this (down).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:336,Availability,down,down,336,"////////////////////////////////////////////////////////////////////////////////; /// Cast obj of this class type up to baseclass cl if up is true.; /// Cast obj of this class type down from baseclass cl if up is false.; /// If this class is not a baseclass of cl return 0, else the pointer; /// to the cl part of this (up) or to this (down).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:181,Availability,down,down,181,"////////////////////////////////////////////////////////////////////////////////; /// Cast obj of this class type up to baseclass cl if up is true.; /// Cast obj of this class type down from baseclass cl if up is false.; /// If this class is not a baseclass of cl return 0, else the pointer; /// to the cl part of this (up) or to this (down).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:336,Availability,down,down,336,"////////////////////////////////////////////////////////////////////////////////; /// Cast obj of this class type up to baseclass cl if up is true.; /// Cast obj of this class type down from baseclass cl if up is false.; /// If this class is not a baseclass of cl return 0, else the pointer; /// to the cl part of this (up) or to this (down).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:312,Availability,Error,Error,312,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated object of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().; ///; /// If quiet is true, do no issue a message via Error on case; /// of problems, just return 0.; ///; /// The constructor actually called here can be customized by; /// using the rootcint pragma:; /// ~~~ {.cpp}; /// #pragma link C++ ioctortype UserClass;; /// ~~~; /// For example, with this pragma and a class named MyClass,; /// this method will called the first of the following 3; /// constructors which exists and is public:; /// ~~~ {.cpp}; /// MyClass(UserClass*);; /// MyClass(TRootIOCtor*);; /// MyClass(); // Or a constructor with all its arguments defaulted.; /// ~~~; ///; /// When more than one pragma ioctortype is used, the first seen as priority; /// For example with:; /// ~~~ {.cpp}; /// #pragma link C++ ioctortype UserClass1;; /// #pragma link C++ ioctortype UserClass2;; /// ~~~; /// We look in the following order:; /// ~~~ {.cpp}; /// MyClass(UserClass1*);; /// MyClass(UserClass2*);; /// MyClass(TRootIOCtor*);; /// MyClass(); // Or a constructor with all its arguments defaulted.; /// ~~~",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:114,Energy Efficiency,allocate,allocated,114,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated object of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().; ///; /// If quiet is true, do no issue a message via Error on case; /// of problems, just return 0.; ///; /// The constructor actually called here can be customized by; /// using the rootcint pragma:; /// ~~~ {.cpp}; /// #pragma link C++ ioctortype UserClass;; /// ~~~; /// For example, with this pragma and a class named MyClass,; /// this method will called the first of the following 3; /// constructors which exists and is public:; /// ~~~ {.cpp}; /// MyClass(UserClass*);; /// MyClass(TRootIOCtor*);; /// MyClass(); // Or a constructor with all its arguments defaulted.; /// ~~~; ///; /// When more than one pragma ioctortype is used, the first seen as priority; /// For example with:; /// ~~~ {.cpp}; /// #pragma link C++ ioctortype UserClass1;; /// #pragma link C++ ioctortype UserClass2;; /// ~~~; /// We look in the following order:; /// ~~~ {.cpp}; /// MyClass(UserClass1*);; /// MyClass(UserClass2*);; /// MyClass(TRootIOCtor*);; /// MyClass(); // Or a constructor with all its arguments defaulted.; /// ~~~",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:300,Integrability,message,message,300,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated object of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().; ///; /// If quiet is true, do no issue a message via Error on case; /// of problems, just return 0.; ///; /// The constructor actually called here can be customized by; /// using the rootcint pragma:; /// ~~~ {.cpp}; /// #pragma link C++ ioctortype UserClass;; /// ~~~; /// For example, with this pragma and a class named MyClass,; /// this method will called the first of the following 3; /// constructors which exists and is public:; /// ~~~ {.cpp}; /// MyClass(UserClass*);; /// MyClass(TRootIOCtor*);; /// MyClass(); // Or a constructor with all its arguments defaulted.; /// ~~~; ///; /// When more than one pragma ioctortype is used, the first seen as priority; /// For example with:; /// ~~~ {.cpp}; /// #pragma link C++ ioctortype UserClass1;; /// #pragma link C++ ioctortype UserClass2;; /// ~~~; /// We look in the following order:; /// ~~~ {.cpp}; /// MyClass(UserClass1*);; /// MyClass(UserClass2*);; /// MyClass(TRootIOCtor*);; /// MyClass(); // Or a constructor with all its arguments defaulted.; /// ~~~",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:84,Energy Efficiency,allocate,allocated,84,"// See TClass:New; // returns a TClass::ObjectPtr which remembers if the object was allocated; // via a TStreamerInfo.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:28,Integrability,wrap,wrapper,28,"// We have the new operator wrapper function,; // so there is a dictionary and it was generated; // by rootcint, so there should be a default; // constructor we can call through the wrapper.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:182,Integrability,wrap,wrapper,182,"// We have the new operator wrapper function,; // so there is a dictionary and it was generated; // by rootcint, so there should be a default; // constructor we can call through the wrapper.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:2,Availability,Error,Error,2,"//Error(""New"", ""cannot create object of class %s version %d"", GetName(), fClassVersion);",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:62,Integrability,wrap,wrapper,62,"// We have the dictionary but do not have the; // constructor wrapper, so the dictionary was; // not generated by rootcint. Let's try to; // create the object by having the interpreter; // call the new operator, hopefully the class; // library is loaded and there will be a default; // constructor we can call.; // [This is very unlikely to work, but who knows!]",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:247,Performance,load,loaded,247,"// We have the dictionary but do not have the; // constructor wrapper, so the dictionary was; // not generated by rootcint. Let's try to; // create the object by having the interpreter; // call the new operator, hopefully the class; // library is loaded and there will be a default; // constructor we can call.; // [This is very unlikely to work, but who knows!]",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:2,Availability,Error,Error,2,"//Error(""New"", ""cannot create object of class %s version %d"", GetName(), fClassVersion);",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:2,Availability,Error,Error,2,"//Error(""New"", ""cannot create object of class %s version %d"", GetName(), fClassVersion);",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:91,Availability,avail,available,91,"// There is no dictionary at all and we do not have; // the services of a collection proxy available, so; // use the streamer info to approximate calling a; // constructor (basically we just make sure that the; // pointer data members are null, unless they are marked; // as preallocated with the ""->"" comment, in which case; // we default-construct an object to point at).; // Do not register any TObject's that we create; // as a result of creating this object.; // FIXME: Why do we do this?; // FIXME: Partial Answer: Is this because we may never actually deregister them???",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:114,Energy Efficiency,allocate,allocated,114,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated object of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:114,Energy Efficiency,allocate,allocated,114,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated object of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:28,Integrability,wrap,wrapper,28,"// We have the new operator wrapper function,; // so there is a dictionary and it was generated; // by rootcint, so there should be a default; // constructor we can call through the wrapper.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:182,Integrability,wrap,wrapper,182,"// We have the new operator wrapper function,; // so there is a dictionary and it was generated; // by rootcint, so there should be a default; // constructor we can call through the wrapper.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:62,Integrability,wrap,wrapper,62,"// We have the dictionary but do not have the; // constructor wrapper, so the dictionary was; // not generated by rootcint. Let's try to; // create the object by having the interpreter; // call the new operator, hopefully the class; // library is loaded and there will be a default; // constructor we can call.; // [This is very unlikely to work, but who knows!]",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:247,Performance,load,loaded,247,"// We have the dictionary but do not have the; // constructor wrapper, so the dictionary was; // not generated by rootcint. Let's try to; // create the object by having the interpreter; // call the new operator, hopefully the class; // library is loaded and there will be a default; // constructor we can call.; // [This is very unlikely to work, but who knows!]",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:91,Availability,avail,available,91,"// There is no dictionary at all and we do not have; // the services of a collection proxy available, so; // use the streamer info to approximate calling a; // constructor (basically we just make sure that the; // pointer data members are null, unless they are marked; // as preallocated with the ""->"" comment, in which case; // we default-construct an object to point at).; // ???BUG??? ???WHY???; // Do not register any TObject's that we create; // as a result of creating this object.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:114,Energy Efficiency,allocate,allocated,114,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated array of objects; /// of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:114,Energy Efficiency,allocate,allocated,114,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated array of objects; /// of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:28,Integrability,wrap,wrapper,28,"// We have the new operator wrapper function,; // so there is a dictionary and it was generated; // by rootcint, so there should be a default; // constructor we can call through the wrapper.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:182,Integrability,wrap,wrapper,182,"// We have the new operator wrapper function,; // so there is a dictionary and it was generated; // by rootcint, so there should be a default; // constructor we can call through the wrapper.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:62,Integrability,wrap,wrapper,62,"// We have the dictionary but do not have the; // constructor wrapper, so the dictionary was; // not generated by rootcint. Let's try to; // create the object by having the interpreter; // call the new operator, hopefully the class; // library is loaded and there will be a default; // constructor we can call.; // [This is very unlikely to work, but who knows!]",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:247,Performance,load,loaded,247,"// We have the dictionary but do not have the; // constructor wrapper, so the dictionary was; // not generated by rootcint. Let's try to; // create the object by having the interpreter; // call the new operator, hopefully the class; // library is loaded and there will be a default; // constructor we can call.; // [This is very unlikely to work, but who knows!]",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:91,Availability,avail,available,91,"// There is no dictionary at all and we do not have; // the services of a collection proxy available, so; // use the streamer info to approximate calling a; // constructor (basically we just make sure that the; // pointer data members are null, unless they are marked; // as preallocated with the ""->"" comment, in which case; // we default-construct an object to point at).; // ???BUG??? ???WHY???; // Do not register any TObject's that we create; // as a result of creating this object.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:114,Energy Efficiency,allocate,allocated,114,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated object of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:114,Energy Efficiency,allocate,allocated,114,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated object of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:28,Integrability,wrap,wrapper,28,"// We have the new operator wrapper function,; // so there is a dictionary and it was generated; // by rootcint, so there should be a default; // constructor we can call through the wrapper.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:182,Integrability,wrap,wrapper,182,"// We have the new operator wrapper function,; // so there is a dictionary and it was generated; // by rootcint, so there should be a default; // constructor we can call through the wrapper.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:470,Availability,avail,available,470,"// We have the dictionary but do not have the constructor wrapper,; // so the dictionary was not generated by rootcint (it was made either; // by cint or by some external mechanism). Let's try to create the; // object by having the interpreter call the new operator, either the; // class library is loaded and there is a default constructor we can; // call, or the class is interpreted and we will call the default; // constructor that way, or no default constructor is available and; // we fail.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:58,Integrability,wrap,wrapper,58,"// We have the dictionary but do not have the constructor wrapper,; // so the dictionary was not generated by rootcint (it was made either; // by cint or by some external mechanism). Let's try to create the; // object by having the interpreter call the new operator, either the; // class library is loaded and there is a default constructor we can; // call, or the class is interpreted and we will call the default; // constructor that way, or no default constructor is available and; // we fail.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:299,Performance,load,loaded,299,"// We have the dictionary but do not have the constructor wrapper,; // so the dictionary was not generated by rootcint (it was made either; // by cint or by some external mechanism). Let's try to create the; // object by having the interpreter call the new operator, either the; // class library is loaded and there is a default constructor we can; // call, or the class is interpreted and we will call the default; // constructor that way, or no default constructor is available and; // we fail.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:91,Availability,avail,available,91,"// There is no dictionary at all and we do not have; // the services of a collection proxy available, so; // use the streamer info to approximate calling a; // constructor (basically we just make sure that the; // pointer data members are null, unless they are marked; // as preallocated with the ""->"" comment, in which case; // we default-construct an object to point at).; // ???BUG??? ???WHY???; // Do not register any TObject's that we create; // as a result of creating this object.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:26,Integrability,wrap,wrapper,26,"// We have the destructor wrapper, use it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:22,Integrability,wrap,wrapper,22,"// We have the delete wrapper, use it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:66,Integrability,wrap,wrapper,66,"// We have the dictionary but do not have the; // destruct/delete wrapper, so the dictionary was; // not generated by rootcint (it could have been; // created by cint or by some external mechanism).; // Let's have the interpreter call the destructor,; // either the code will be in a loaded library,; // or it will be interpreted, otherwise we fail; // because there is no destructor code at all.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:284,Performance,load,loaded,284,"// We have the dictionary but do not have the; // destruct/delete wrapper, so the dictionary was; // not generated by rootcint (it could have been; // created by cint or by some external mechanism).; // Let's have the interpreter call the destructor,; // either the code will be in a loaded library,; // or it will be interpreted, otherwise we fail; // because there is no destructor code at all.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:91,Availability,avail,available,91,"// There is no dictionary at all and we do not have; // the services of a collection proxy available, so; // use the streamer info to approximate calling a; // destructor.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:19,Energy Efficiency,allocate,allocated,19,"// Was this object allocated through TClass?",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:52,Availability,Error,Error,52,"// No, it wasn't, skip special version handling.; //Error(""Destructor2"", ""Attempt to delete unregistered object of class '%s' at address %p!"", GetName(), p);",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:18,Energy Efficiency,allocate,allocated,18,"// The object was allocated using code for the same class version; // as is loaded now. We may proceed without worry.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:76,Performance,load,loaded,76,"// The object was allocated using code for the same class version; // as is loaded now. We may proceed without worry.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:93,Energy Efficiency,allocate,allocate,93,"// The loaded class version is not the same as the version of the code; // which was used to allocate this object. The best we can do is use; // the TVirtualStreamerInfo to try to free up some of the allocated memory.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:200,Energy Efficiency,allocate,allocated,200,"// The loaded class version is not the same as the version of the code; // which was used to allocate this object. The best we can do is use; // the TVirtualStreamerInfo to try to free up some of the allocated memory.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:7,Performance,load,loaded,7,"// The loaded class version is not the same as the version of the code; // which was used to allocate this object. The best we can do is use; // the TVirtualStreamerInfo to try to free up some of the allocated memory.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:28,Integrability,wrap,wrapper,28,"// We have the array delete wrapper, use it.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:63,Integrability,wrap,wrapper,63,"// We have the dictionary but do not have the; // array delete wrapper, so the dictionary was; // not generated by rootcint. Let's try to; // delete the array by having the interpreter; // call the array delete operator, hopefully; // the class library is loaded and there will be; // a destructor we can call.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:256,Performance,load,loaded,256,"// We have the dictionary but do not have the; // array delete wrapper, so the dictionary was; // not generated by rootcint. Let's try to; // delete the array by having the interpreter; // call the array delete operator, hopefully; // the class library is loaded and there will be; // a destructor we can call.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:91,Availability,avail,available,91,"// There is no dictionary at all and we do not have; // the services of a collection proxy available, so; // use the streamer info to approximate calling the; // array destructor.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:25,Energy Efficiency,allocate,allocated,25,"// Was this array object allocated through TClass?",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:48,Availability,Error,Error,48,"// No, it wasn't, we cannot know what to do.; //Error(""DeleteArray"", ""Attempt to delete unregistered array object, element type '%s', at address %p!"", GetName(), p);",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:18,Energy Efficiency,allocate,allocated,18,"// The object was allocated using code for the same class version; // as is loaded now. We may proceed without worry.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:76,Performance,load,loaded,76,"// The object was allocated using code for the same class version; // as is loaded now. We may proceed without worry.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:93,Energy Efficiency,allocate,allocate,93,"// The loaded class version is not the same as the version of the code; // which was used to allocate this array. The best we can do is use; // the TVirtualStreamerInfo to try to free up some of the allocated memory.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:199,Energy Efficiency,allocate,allocated,199,"// The loaded class version is not the same as the version of the code; // which was used to allocate this array. The best we can do is use; // the TVirtualStreamerInfo to try to free up some of the allocated memory.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:7,Performance,load,loaded,7,"// The loaded class version is not the same as the version of the code; // which was used to allocate this array. The best we can do is use; // the TVirtualStreamerInfo to try to free up some of the allocated memory.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:197,Integrability,interface,interface,197,"////////////////////////////////////////////////////////////////////////////////; /// Private function. Set the class version for the 'class' represented by; /// this TClass object. See the public interface:; /// ROOT::ResetClassVersion; /// defined in TClassTable.cxx; ///; /// Note on class version numbers:; /// - If no class number has been specified, TClass::GetVersion will return -1; /// - The Class Version 0 request the whole object to be transient; /// - The Class Version 1, unless specified via ClassDef indicates that the; /// I/O should use the TClass checksum to distinguish the layout of the class",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:566,Security,checksum,checksum,566,"////////////////////////////////////////////////////////////////////////////////; /// Private function. Set the class version for the 'class' represented by; /// this TClass object. See the public interface:; /// ROOT::ResetClassVersion; /// defined in TClassTable.cxx; ///; /// Note on class version numbers:; /// - If no class number has been specified, TClass::GetVersion will return -1; /// - The Class Version 0 request the whole object to be transient; /// - The Class Version 1, unless specified via ClassDef indicates that the; /// I/O should use the TClass checksum to distinguish the layout of the class",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load class description from I/O buffer and return class object.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:161,Performance,load,load,161,"////////////////////////////////////////////////////////////////////////////////; /// Helper function used by TClass::GetClass().; /// This function attempts to load the dictionary for 'classname'; /// either from the TClassTable or from the list of generator.; /// If silent is 'true', do not warn about missing dictionary for the class.; /// (typically used for class that are used only for transient members); ///; /// The 'requestedname' is expected to be already normalized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:79,Performance,load,loaded,79,"// This function does not (and should not) attempt to check in the; // list of loaded classes or in the typedef.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:161,Performance,load,load,161,"////////////////////////////////////////////////////////////////////////////////; /// Helper function used by TClass::GetClass().; /// This function attempts to load the dictionary for 'classname' from; /// the TClassTable or the autoloader.; /// If silent is 'true', do not warn about missing dictionary for the class.; /// (typically used for class that are used only for transient members); ///; /// The 'requestedname' is expected to be already normalized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:79,Performance,load,loaded,79,"// This function does not (and should not) attempt to check in the; // list of loaded classes or in the typedef.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:161,Performance,load,load,161,"////////////////////////////////////////////////////////////////////////////////; /// Helper function used by TClass::GetClass().; /// This function attempts to load the dictionary for 'classname'; /// from the list of generator.; /// If silent is 'true', do not warn about missing dictionary for the class.; /// (typically used for class that are used only for transient members); ///; /// The 'requestedname' is expected to be already normalized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:79,Performance,load,loaded,79,"// This function does not (and should not) attempt to check in the; // list of loaded classes or in the typedef.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:115,Availability,avail,available,115,"////////////////////////////////////////////////////////////////////////////////; /// Try to load the ClassInfo if available. This function may require parsing; /// the header file and/or loading data from the clang pcm. If further calls to; /// this function cannot affect the value of fClassInfo, fCanLoadClassInfo is set; /// to false.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:93,Performance,load,load,93,"////////////////////////////////////////////////////////////////////////////////; /// Try to load the ClassInfo if available. This function may require parsing; /// the header file and/or loading data from the clang pcm. If further calls to; /// this function cannot affect the value of fClassInfo, fCanLoadClassInfo is set; /// to false.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:188,Performance,load,loading,188,"////////////////////////////////////////////////////////////////////////////////; /// Try to load the ClassInfo if available. This function may require parsing; /// the header file and/or loading data from the clang pcm. If further calls to; /// this function cannot affect the value of fClassInfo, fCanLoadClassInfo is set; /// to false.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:36,Performance,load,loaded,36,"// Return if another thread already loaded the info; // while we were waiting for the lock",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:34,Deployability,Update,Update,34,"// When called via TMapFile (e.g. Update()) make sure that the dictionary; // gets allocated on the heap and not in the mapped file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:83,Energy Efficiency,allocate,allocated,83,"// When called via TMapFile (e.g. Update()) make sure that the dictionary; // gets allocated on the heap and not in the mapped file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:34,Deployability,Update,Update,34,"// When called via TMapFile (e.g. Update()) make sure that the dictionary; // gets allocated on the heap and not in the mapped file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:83,Energy Efficiency,allocate,allocated,83,"// When called via TMapFile (e.g. Update()) make sure that the dictionary; // gets allocated on the heap and not in the mapped file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:113,Modifiability,inherit,inherits,113,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if this class inherits from TObject and if the start of; /// the TObject parts is at the very beginning of the objects.; /// Concretely this means that the following code is proper for this class:; /// ~~~ {.cpp}; /// ThisClass *ptr;; /// void *void_ptr = (void)ptr;; /// TObject *obj = (TObject*)void_ptr;; /// ~~~; /// This code would be wrong if 'ThisClass' did not inherit 'first' from; /// TObject.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:468,Modifiability,inherit,inherit,468,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if this class inherits from TObject and if the start of; /// the TObject parts is at the very beginning of the objects.; /// Concretely this means that the following code is proper for this class:; /// ~~~ {.cpp}; /// ThisClass *ptr;; /// void *void_ptr = (void)ptr;; /// TObject *obj = (TObject*)void_ptr;; /// ~~~; /// This code would be wrong if 'ThisClass' did not inherit 'first' from; /// TObject.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:112,Modifiability,inherit,inherits,112,"////////////////////////////////////////////////////////////////////////////////; /// Return kTRUE is the class inherits from TObject.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:209,Energy Efficiency,efficient,efficiently,209,"////////////////////////////////////////////////////////////////////////////////; /// Do the initialization that can only be done after the CINT dictionary has; /// been fully populated and can not be delayed efficiently.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:35,Performance,load,loaded,35,"// In the case of a Foreign class (loaded class without a Streamer function); // we reset fClassVersion to be -1 so that the current TVirtualStreamerInfo will not; // be confused with a previously loaded streamerInfo.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:197,Performance,load,loaded,197,"// In the case of a Foreign class (loaded class without a Streamer function); // we reset fClassVersion to be -1 so that the current TVirtualStreamerInfo will not; // be confused with a previously loaded streamerInfo.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:90,Performance,load,loaded,90,"// Here we need to check whether this TVirtualStreamerInfo (which presumably has been; // loaded from a file) is consistent with the definition in the library we just loaded.; // BuildCheck is not appropriate here since it check a streamerinfo against the; // 'current streamerinfo' which, at time point, would be the same as 'info'!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:167,Performance,load,loaded,167,"// Here we need to check whether this TVirtualStreamerInfo (which presumably has been; // loaded from a file) is consistent with the definition in the library we just loaded.; // BuildCheck is not appropriate here since it check a streamerinfo against the; // 'current streamerinfo' which, at time point, would be the same as 'info'!",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:3,Deployability,Update,Update,3,"// Update the related pair's TClass if it has already been created.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:454,Modifiability,inherit,inherits,454,"////////////////////////////////////////////////////////////////////////////////; /// Returns the properties of the TClass as a bit field stored as a `Long_t` value.; ///; /// The bit values used for the return value are defined in the enum EProperty (in TDictionary.h); ///; /// Also sets `TObject::fBits` and `fStreamerType` to cache information about the; /// class. The bits stored in `TObject::fBits` are; /// ~~~ {.cpp}; /// kIsTObject : the class inherits from TObject; /// kStartWithTObject: TObject is the left-most class in the inheritance tree; /// kIsForeign : the class doe not have a Streamer method; /// ~~~; /// The value of `fStreamerType` are; /// ~~~ {.cpp}; /// kTObject : the class inherits from TObject; /// kForeign : the class does not have a Streamer method; /// kInstrumented: the class does have a Streamer method; /// kExternal: the class has a free standing way of streaming itself; /// kEmulatedStreamer: the class is missing its shared library.; /// ~~~; ///; /// Implementation note: the data member fProperty has the value -1; /// until it is initialized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:538,Modifiability,inherit,inheritance,538,"////////////////////////////////////////////////////////////////////////////////; /// Returns the properties of the TClass as a bit field stored as a `Long_t` value.; ///; /// The bit values used for the return value are defined in the enum EProperty (in TDictionary.h); ///; /// Also sets `TObject::fBits` and `fStreamerType` to cache information about the; /// class. The bits stored in `TObject::fBits` are; /// ~~~ {.cpp}; /// kIsTObject : the class inherits from TObject; /// kStartWithTObject: TObject is the left-most class in the inheritance tree; /// kIsForeign : the class doe not have a Streamer method; /// ~~~; /// The value of `fStreamerType` are; /// ~~~ {.cpp}; /// kTObject : the class inherits from TObject; /// kForeign : the class does not have a Streamer method; /// kInstrumented: the class does have a Streamer method; /// kExternal: the class has a free standing way of streaming itself; /// kEmulatedStreamer: the class is missing its shared library.; /// ~~~; ///; /// Implementation note: the data member fProperty has the value -1; /// until it is initialized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:703,Modifiability,inherit,inherits,703,"////////////////////////////////////////////////////////////////////////////////; /// Returns the properties of the TClass as a bit field stored as a `Long_t` value.; ///; /// The bit values used for the return value are defined in the enum EProperty (in TDictionary.h); ///; /// Also sets `TObject::fBits` and `fStreamerType` to cache information about the; /// class. The bits stored in `TObject::fBits` are; /// ~~~ {.cpp}; /// kIsTObject : the class inherits from TObject; /// kStartWithTObject: TObject is the left-most class in the inheritance tree; /// kIsForeign : the class doe not have a Streamer method; /// ~~~; /// The value of `fStreamerType` are; /// ~~~ {.cpp}; /// kTObject : the class inherits from TObject; /// kForeign : the class does not have a Streamer method; /// kInstrumented: the class does have a Streamer method; /// kExternal: the class has a free standing way of streaming itself; /// kEmulatedStreamer: the class is missing its shared library.; /// ~~~; ///; /// Implementation note: the data member fProperty has the value -1; /// until it is initialized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:330,Performance,cache,cache,330,"////////////////////////////////////////////////////////////////////////////////; /// Returns the properties of the TClass as a bit field stored as a `Long_t` value.; ///; /// The bit values used for the return value are defined in the enum EProperty (in TDictionary.h); ///; /// Also sets `TObject::fBits` and `fStreamerType` to cache information about the; /// class. The bits stored in `TObject::fBits` are; /// ~~~ {.cpp}; /// kIsTObject : the class inherits from TObject; /// kStartWithTObject: TObject is the left-most class in the inheritance tree; /// kIsForeign : the class doe not have a Streamer method; /// ~~~; /// The value of `fStreamerType` are; /// ~~~ {.cpp}; /// kTObject : the class inherits from TObject; /// kForeign : the class does not have a Streamer method; /// kInstrumented: the class does have a Streamer method; /// kExternal: the class has a free standing way of streaming itself; /// kEmulatedStreamer: the class is missing its shared library.; /// ~~~; ///; /// Implementation note: the data member fProperty has the value -1; /// until it is initialized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:3,Safety,Avoid,Avoid,3,"// Avoid asking about the class when it is still building",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:34,Deployability,Update,Update,34,"// When called via TMapFile (e.g. Update()) make sure that the dictionary; // gets allocated on the heap and not in the mapped file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:83,Energy Efficiency,allocate,allocated,83,"// When called via TMapFile (e.g. Update()) make sure that the dictionary; // gets allocated on the heap and not in the mapped file.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:16,Modifiability,inherit,inheritance,16,"// Is it DIRECT inheritance from TObject?",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:94,Integrability,rout,routine,94,"// This code used to use ClassInfo_Has|IsValidMethod but since v6; // they return true if the routine is defined in the class or any of; // its parent. We explicitly want to know whether the function is; // defined locally.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:407,Performance,load,load,407,"// In the case where the TClass for one of ROOT's core class; // (eg TClonesArray for map<int,TClonesArray*>) is requested; // during the execution of rootcling, we could end up in a situation; // where we should have the information (since TClonesArray has; // a dictionary as part of libCore) but do not because the user; // only include a forward declaration of TClonesArray and we do not; // forcefully load the header file either (because the autoparsing; // is intentionally disabled).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:79,Testability,test,test,79,"// Must set this last since other threads may read fProperty; // and think all test bits have been properly set.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:95,Integrability,rout,routine,95,"////////////////////////////////////////////////////////////////////////////////; /// Internal routine to set calculate the class properties that can only be; /// known at run-time, for example whether the Hash member function and the; /// destructor are consistent.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:206,Security,Hash,Hash,206,"////////////////////////////////////////////////////////////////////////////////; /// Internal routine to set calculate the class properties that can only be; /// known at run-time, for example whether the Hash member function and the; /// destructor are consistent.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:144,Availability,down,downside,144,"// For now, no need to lock this routines as fRuntimeProperties is; // the only atomic set here and this is done at the end; // and there is no downside if the execution is done twice.; // Note SetRuntimeProperties is set to const as it is technically; // thread-safe.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:33,Integrability,rout,routines,33,"// For now, no need to lock this routines as fRuntimeProperties is; // the only atomic set here and this is done at the end; // and there is no downside if the execution is done twice.; // Note SetRuntimeProperties is set to const as it is technically; // thread-safe.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:263,Safety,safe,safe,263,"// For now, no need to lock this routines as fRuntimeProperties is; // the only atomic set here and this is done at the end; // and there is no downside if the execution is done twice.; // Note SetRuntimeProperties is set to const as it is technically; // thread-safe.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:95,Integrability,rout,routine,95,"////////////////////////////////////////////////////////////////////////////////; /// Internal routine to set fStreamerImpl based on the value of; /// fStreamerType.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Deployability,install,installs,100,"////////////////////////////////////////////////////////////////////////////////; /// This function installs a global IsA function for this class.; /// The global IsA function will be used if there is no local IsA function (fIsA); ///; /// A global IsA function has the signature:; ///; /// ~~~ {.cpp}; /// TClass *func( TClass *cl, const void *obj);; /// ~~~; ///; /// 'cl' is a pointer to the TClass object that corresponds to the; /// 'pointer type' used to retrieve the value 'obj'; ///; /// For example with:; /// ~~~ {.cpp}; /// TNamed * m = new TNamed(""example"",""test"");; /// TObject* o = m; /// ~~~; /// and; /// the global IsA function would be called with TObject::Class() as; /// the first parameter and the exact numerical value in the pointer; /// 'o'.; ///; /// In other word, inside the global IsA function. it is safe to C-style; /// cast the value of 'obj' into a pointer to the class described by 'cl'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:829,Safety,safe,safe,829,"////////////////////////////////////////////////////////////////////////////////; /// This function installs a global IsA function for this class.; /// The global IsA function will be used if there is no local IsA function (fIsA); ///; /// A global IsA function has the signature:; ///; /// ~~~ {.cpp}; /// TClass *func( TClass *cl, const void *obj);; /// ~~~; ///; /// 'cl' is a pointer to the TClass object that corresponds to the; /// 'pointer type' used to retrieve the value 'obj'; ///; /// For example with:; /// ~~~ {.cpp}; /// TNamed * m = new TNamed(""example"",""test"");; /// TObject* o = m; /// ~~~; /// and; /// the global IsA function would be called with TObject::Class() as; /// the first parameter and the exact numerical value in the pointer; /// 'o'.; ///; /// In other word, inside the global IsA function. it is safe to C-style; /// cast the value of 'obj' into a pointer to the class described by 'cl'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:570,Testability,test,test,570,"////////////////////////////////////////////////////////////////////////////////; /// This function installs a global IsA function for this class.; /// The global IsA function will be used if there is no local IsA function (fIsA); ///; /// A global IsA function has the signature:; ///; /// ~~~ {.cpp}; /// TClass *func( TClass *cl, const void *obj);; /// ~~~; ///; /// 'cl' is a pointer to the TClass object that corresponds to the; /// 'pointer type' used to retrieve the value 'obj'; ///; /// For example with:; /// ~~~ {.cpp}; /// TNamed * m = new TNamed(""example"",""test"");; /// TObject* o = m; /// ~~~; /// and; /// the global IsA function would be called with TObject::Class() as; /// the first parameter and the exact numerical value in the pointer; /// 'o'.; ///; /// In other word, inside the global IsA function. it is safe to C-style; /// cast the value of 'obj' into a pointer to the class described by 'cl'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:1182,Availability,Error,Error,1182,"// info is specified, nothing to do, except that we should verify; // that it contains a valid descriptor.; /*; TDataMember *dm;; Int_t nch = info ? strlen(info) : 0;; Bool_t update = kTRUE;; if (nch != 0) {; //decode strings like ""TObject;TAttLine;fA;fB;Int_t i,j,k;""; char *save, *temp, *blank, *colon, *comma;; save = new char[10000];; temp = save;; strlcpy(temp,info,10000);; //remove heading and trailing blanks; while (*temp == ' ') temp++;; while (save[nch-1] == ' ') {nch--; save[nch] = 0;}; if (nch == 0) {delete [] save; return;}; if (save[nch-1] != ';') {save[nch] = ';'; save[nch+1] = 0;}; //remove blanks around , or ;; while ((blank = strstr(temp,""; ""))) strcpy(blank+1,blank+2);; while ((blank = strstr(temp,"" ;""))) strcpy(blank, blank+1);; while ((blank = strstr(temp,"", ""))) strcpy(blank+1,blank+2);; while ((blank = strstr(temp,"" ,""))) strcpy(blank, blank+1);; while ((blank = strstr(temp,"" ""))) strcpy(blank, blank+1);; //loop on tokens separated by ;; char *final = new char[1000];; char token[100];; while ((colon=strchr(temp,';'))) {; *colon = 0;; strlcpy(token,temp,100);; blank = strchr(token,' ');; if (blank) {; *blank = 0;; if (!gROOT->GetType(token)) {; Error(""SetStreamerInfo"",""Illegal type: %s in %s"",token,info);; return;; }; while (blank) {; strlcat(final,token,1000);; strlcat(final,"" "",1000);; comma = strchr(blank+1,','); if (comma) *comma=0;; strlcat(final,blank+1,1000);; strlcat(final,"";"",1000);; blank = comma;; }. } else {; if (TClass::GetClass(token,update)) {; //a class name; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; //a data member name; dm = (TDataMember*)GetListOfDataMembers()->FindObject(token);; if (dm) {; strlcat(final,dm->GetFullTypeName(),1000);; strlcat(final,"" "",1000);; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; Error(""SetStreamerInfo"",""Illegal name: %s in %s"",token,info);; return;; }; }; update = kFALSE;; }; temp = colon+1;; if (*temp == 0) break;; }; //// fStreamerInfo = final;; delete [] final;; ",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:1811,Availability,Error,Error,1811,"nk, blank+1);; while ((blank = strstr(temp,"", ""))) strcpy(blank+1,blank+2);; while ((blank = strstr(temp,"" ,""))) strcpy(blank, blank+1);; while ((blank = strstr(temp,"" ""))) strcpy(blank, blank+1);; //loop on tokens separated by ;; char *final = new char[1000];; char token[100];; while ((colon=strchr(temp,';'))) {; *colon = 0;; strlcpy(token,temp,100);; blank = strchr(token,' ');; if (blank) {; *blank = 0;; if (!gROOT->GetType(token)) {; Error(""SetStreamerInfo"",""Illegal type: %s in %s"",token,info);; return;; }; while (blank) {; strlcat(final,token,1000);; strlcat(final,"" "",1000);; comma = strchr(blank+1,','); if (comma) *comma=0;; strlcat(final,blank+1,1000);; strlcat(final,"";"",1000);; blank = comma;; }. } else {; if (TClass::GetClass(token,update)) {; //a class name; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; //a data member name; dm = (TDataMember*)GetListOfDataMembers()->FindObject(token);; if (dm) {; strlcat(final,dm->GetFullTypeName(),1000);; strlcat(final,"" "",1000);; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; Error(""SetStreamerInfo"",""Illegal name: %s in %s"",token,info);; return;; }; }; update = kFALSE;; }; temp = colon+1;; if (*temp == 0) break;; }; //// fStreamerInfo = final;; delete [] final;; delete [] save;; return;; }. //info is empty. Let's build the default Streamer descriptor. char *temp = new char[10000];; temp[0] = 0;; char local[100];. //add list of base classes; TIter nextb(GetListOfBases());; TBaseClass *base;; while ((base = (TBaseClass*) nextb())) {; snprintf(local,100,""%s;"",base->GetName());; strlcat(temp,local,10000);; }. //add list of data members and types; TIter nextd(GetListOfDataMembers());; while ((dm = (TDataMember *) nextd())) {; if (dm->IsEnum()) continue;; if (!dm->IsPersistent()) continue;; Long_t property = dm->Property();; if (property & kIsStatic) continue;; TClass *acl = TClass::GetClass(dm->GetTypeName(),update);; update = kFALSE;; if (acl) {; if (acl->GetClassVersion() == 0) continue;; }.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:175,Deployability,update,update,175,"// info is specified, nothing to do, except that we should verify; // that it contains a valid descriptor.; /*; TDataMember *dm;; Int_t nch = info ? strlen(info) : 0;; Bool_t update = kTRUE;; if (nch != 0) {; //decode strings like ""TObject;TAttLine;fA;fB;Int_t i,j,k;""; char *save, *temp, *blank, *colon, *comma;; save = new char[10000];; temp = save;; strlcpy(temp,info,10000);; //remove heading and trailing blanks; while (*temp == ' ') temp++;; while (save[nch-1] == ' ') {nch--; save[nch] = 0;}; if (nch == 0) {delete [] save; return;}; if (save[nch-1] != ';') {save[nch] = ';'; save[nch+1] = 0;}; //remove blanks around , or ;; while ((blank = strstr(temp,""; ""))) strcpy(blank+1,blank+2);; while ((blank = strstr(temp,"" ;""))) strcpy(blank, blank+1);; while ((blank = strstr(temp,"", ""))) strcpy(blank+1,blank+2);; while ((blank = strstr(temp,"" ,""))) strcpy(blank, blank+1);; while ((blank = strstr(temp,"" ""))) strcpy(blank, blank+1);; //loop on tokens separated by ;; char *final = new char[1000];; char token[100];; while ((colon=strchr(temp,';'))) {; *colon = 0;; strlcpy(token,temp,100);; blank = strchr(token,' ');; if (blank) {; *blank = 0;; if (!gROOT->GetType(token)) {; Error(""SetStreamerInfo"",""Illegal type: %s in %s"",token,info);; return;; }; while (blank) {; strlcat(final,token,1000);; strlcat(final,"" "",1000);; comma = strchr(blank+1,','); if (comma) *comma=0;; strlcat(final,blank+1,1000);; strlcat(final,"";"",1000);; blank = comma;; }. } else {; if (TClass::GetClass(token,update)) {; //a class name; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; //a data member name; dm = (TDataMember*)GetListOfDataMembers()->FindObject(token);; if (dm) {; strlcat(final,dm->GetFullTypeName(),1000);; strlcat(final,"" "",1000);; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; Error(""SetStreamerInfo"",""Illegal name: %s in %s"",token,info);; return;; }; }; update = kFALSE;; }; temp = colon+1;; if (*temp == 0) break;; }; //// fStreamerInfo = final;; delete [] final;; ",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:1491,Deployability,update,update,1491,"nk, blank+1);; while ((blank = strstr(temp,"", ""))) strcpy(blank+1,blank+2);; while ((blank = strstr(temp,"" ,""))) strcpy(blank, blank+1);; while ((blank = strstr(temp,"" ""))) strcpy(blank, blank+1);; //loop on tokens separated by ;; char *final = new char[1000];; char token[100];; while ((colon=strchr(temp,';'))) {; *colon = 0;; strlcpy(token,temp,100);; blank = strchr(token,' ');; if (blank) {; *blank = 0;; if (!gROOT->GetType(token)) {; Error(""SetStreamerInfo"",""Illegal type: %s in %s"",token,info);; return;; }; while (blank) {; strlcat(final,token,1000);; strlcat(final,"" "",1000);; comma = strchr(blank+1,','); if (comma) *comma=0;; strlcat(final,blank+1,1000);; strlcat(final,"";"",1000);; blank = comma;; }. } else {; if (TClass::GetClass(token,update)) {; //a class name; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; //a data member name; dm = (TDataMember*)GetListOfDataMembers()->FindObject(token);; if (dm) {; strlcat(final,dm->GetFullTypeName(),1000);; strlcat(final,"" "",1000);; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; Error(""SetStreamerInfo"",""Illegal name: %s in %s"",token,info);; return;; }; }; update = kFALSE;; }; temp = colon+1;; if (*temp == 0) break;; }; //// fStreamerInfo = final;; delete [] final;; delete [] save;; return;; }. //info is empty. Let's build the default Streamer descriptor. char *temp = new char[10000];; temp[0] = 0;; char local[100];. //add list of base classes; TIter nextb(GetListOfBases());; TBaseClass *base;; while ((base = (TBaseClass*) nextb())) {; snprintf(local,100,""%s;"",base->GetName());; strlcat(temp,local,10000);; }. //add list of data members and types; TIter nextd(GetListOfDataMembers());; while ((dm = (TDataMember *) nextd())) {; if (dm->IsEnum()) continue;; if (!dm->IsPersistent()) continue;; Long_t property = dm->Property();; if (property & kIsStatic) continue;; TClass *acl = TClass::GetClass(dm->GetTypeName(),update);; update = kFALSE;; if (acl) {; if (acl->GetClassVersion() == 0) continue;; }.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:1889,Deployability,update,update,1889,"nk, blank+1);; while ((blank = strstr(temp,"", ""))) strcpy(blank+1,blank+2);; while ((blank = strstr(temp,"" ,""))) strcpy(blank, blank+1);; while ((blank = strstr(temp,"" ""))) strcpy(blank, blank+1);; //loop on tokens separated by ;; char *final = new char[1000];; char token[100];; while ((colon=strchr(temp,';'))) {; *colon = 0;; strlcpy(token,temp,100);; blank = strchr(token,' ');; if (blank) {; *blank = 0;; if (!gROOT->GetType(token)) {; Error(""SetStreamerInfo"",""Illegal type: %s in %s"",token,info);; return;; }; while (blank) {; strlcat(final,token,1000);; strlcat(final,"" "",1000);; comma = strchr(blank+1,','); if (comma) *comma=0;; strlcat(final,blank+1,1000);; strlcat(final,"";"",1000);; blank = comma;; }. } else {; if (TClass::GetClass(token,update)) {; //a class name; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; //a data member name; dm = (TDataMember*)GetListOfDataMembers()->FindObject(token);; if (dm) {; strlcat(final,dm->GetFullTypeName(),1000);; strlcat(final,"" "",1000);; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; Error(""SetStreamerInfo"",""Illegal name: %s in %s"",token,info);; return;; }; }; update = kFALSE;; }; temp = colon+1;; if (*temp == 0) break;; }; //// fStreamerInfo = final;; delete [] final;; delete [] save;; return;; }. //info is empty. Let's build the default Streamer descriptor. char *temp = new char[10000];; temp[0] = 0;; char local[100];. //add list of base classes; TIter nextb(GetListOfBases());; TBaseClass *base;; while ((base = (TBaseClass*) nextb())) {; snprintf(local,100,""%s;"",base->GetName());; strlcat(temp,local,10000);; }. //add list of data members and types; TIter nextd(GetListOfDataMembers());; while ((dm = (TDataMember *) nextd())) {; if (dm->IsEnum()) continue;; if (!dm->IsPersistent()) continue;; Long_t property = dm->Property();; if (property & kIsStatic) continue;; TClass *acl = TClass::GetClass(dm->GetTypeName(),update);; update = kFALSE;; if (acl) {; if (acl->GetClassVersion() == 0) continue;; }.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:2655,Deployability,update,update,2655,"hr(token,' ');; if (blank) {; *blank = 0;; if (!gROOT->GetType(token)) {; Error(""SetStreamerInfo"",""Illegal type: %s in %s"",token,info);; return;; }; while (blank) {; strlcat(final,token,1000);; strlcat(final,"" "",1000);; comma = strchr(blank+1,','); if (comma) *comma=0;; strlcat(final,blank+1,1000);; strlcat(final,"";"",1000);; blank = comma;; }. } else {; if (TClass::GetClass(token,update)) {; //a class name; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; //a data member name; dm = (TDataMember*)GetListOfDataMembers()->FindObject(token);; if (dm) {; strlcat(final,dm->GetFullTypeName(),1000);; strlcat(final,"" "",1000);; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; Error(""SetStreamerInfo"",""Illegal name: %s in %s"",token,info);; return;; }; }; update = kFALSE;; }; temp = colon+1;; if (*temp == 0) break;; }; //// fStreamerInfo = final;; delete [] final;; delete [] save;; return;; }. //info is empty. Let's build the default Streamer descriptor. char *temp = new char[10000];; temp[0] = 0;; char local[100];. //add list of base classes; TIter nextb(GetListOfBases());; TBaseClass *base;; while ((base = (TBaseClass*) nextb())) {; snprintf(local,100,""%s;"",base->GetName());; strlcat(temp,local,10000);; }. //add list of data members and types; TIter nextd(GetListOfDataMembers());; while ((dm = (TDataMember *) nextd())) {; if (dm->IsEnum()) continue;; if (!dm->IsPersistent()) continue;; Long_t property = dm->Property();; if (property & kIsStatic) continue;; TClass *acl = TClass::GetClass(dm->GetTypeName(),update);; update = kFALSE;; if (acl) {; if (acl->GetClassVersion() == 0) continue;; }. // dm->GetArrayIndex() returns an empty string if it does not; // applies; const char * index = dm->GetArrayIndex();; if (strlen(index)==0); snprintf(local,100,""%s %s;"",dm->GetFullTypeName(),dm->GetName());; else; snprintf(local,100,""%s %s[%s];"",dm->GetFullTypeName(),dm->GetName(),index);; strlcat(temp,local,10000);; }; //fStreamerInfo = temp;; delete [] temp;; */",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:2665,Deployability,update,update,2665,"hr(token,' ');; if (blank) {; *blank = 0;; if (!gROOT->GetType(token)) {; Error(""SetStreamerInfo"",""Illegal type: %s in %s"",token,info);; return;; }; while (blank) {; strlcat(final,token,1000);; strlcat(final,"" "",1000);; comma = strchr(blank+1,','); if (comma) *comma=0;; strlcat(final,blank+1,1000);; strlcat(final,"";"",1000);; blank = comma;; }. } else {; if (TClass::GetClass(token,update)) {; //a class name; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; //a data member name; dm = (TDataMember*)GetListOfDataMembers()->FindObject(token);; if (dm) {; strlcat(final,dm->GetFullTypeName(),1000);; strlcat(final,"" "",1000);; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; Error(""SetStreamerInfo"",""Illegal name: %s in %s"",token,info);; return;; }; }; update = kFALSE;; }; temp = colon+1;; if (*temp == 0) break;; }; //// fStreamerInfo = final;; delete [] final;; delete [] save;; return;; }. //info is empty. Let's build the default Streamer descriptor. char *temp = new char[10000];; temp[0] = 0;; char local[100];. //add list of base classes; TIter nextb(GetListOfBases());; TBaseClass *base;; while ((base = (TBaseClass*) nextb())) {; snprintf(local,100,""%s;"",base->GetName());; strlcat(temp,local,10000);; }. //add list of data members and types; TIter nextd(GetListOfDataMembers());; while ((dm = (TDataMember *) nextd())) {; if (dm->IsEnum()) continue;; if (!dm->IsPersistent()) continue;; Long_t property = dm->Property();; if (property & kIsStatic) continue;; TClass *acl = TClass::GetClass(dm->GetTypeName(),update);; update = kFALSE;; if (acl) {; if (acl->GetClassVersion() == 0) continue;; }. // dm->GetArrayIndex() returns an empty string if it does not; // applies; const char * index = dm->GetArrayIndex();; if (strlen(index)==0); snprintf(local,100,""%s %s;"",dm->GetFullTypeName(),dm->GetName());; else; snprintf(local,100,""%s %s[%s];"",dm->GetFullTypeName(),dm->GetName(),index);; strlcat(temp,local,10000);; }; //fStreamerInfo = temp;; delete [] temp;; */",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:105,Security,checksum,checksum,105,"////////////////////////////////////////////////////////////////////////////////; /// Return true if the checksum passed as argument is one of the checksum; /// value produced by the older checksum calculation algorithm.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:147,Security,checksum,checksum,147,"////////////////////////////////////////////////////////////////////////////////; /// Return true if the checksum passed as argument is one of the checksum; /// value produced by the older checksum calculation algorithm.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:189,Security,checksum,checksum,189,"////////////////////////////////////////////////////////////////////////////////; /// Return true if the checksum passed as argument is one of the checksum; /// value produced by the older checksum calculation algorithm.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:212,Security,checksum,checksum,212,"////////////////////////////////////////////////////////////////////////////////; /// Compute and/or return the class check sum.; ///; /// isvalid is set to false, if the function is unable to calculate the; /// checksum.; ///; /// The class ckecksum is used by the automatic schema evolution algorithm; /// to uniquely identify a class version.; /// The check sum is built from the names/types of base classes and; /// data members.; /// Original algorithm from Victor Perevovchikov (perev@bnl.gov).; ///; /// The valid range of code is determined by ECheckSum.; ///; /// - kNoEnum: data members of type enum are not counted in the checksum; /// - kNoRange: return the checksum of data members and base classes, not including the ranges and array size found in comments.; /// - kWithTypeDef: use the sugared type name in the calculation.; ///; /// This is needed for backward compatibility.; ///; /// WARNING: this function must be kept in sync with TStreamerInfo::GetCheckSum.; /// They are both used to handle backward compatibility and should both return the same values.; /// TStreamerInfo uses the information in TStreamerElement while TClass uses the information; /// from TClass::GetListOfBases and TClass::GetListOfDataMembers.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:633,Security,checksum,checksum,633,"////////////////////////////////////////////////////////////////////////////////; /// Compute and/or return the class check sum.; ///; /// isvalid is set to false, if the function is unable to calculate the; /// checksum.; ///; /// The class ckecksum is used by the automatic schema evolution algorithm; /// to uniquely identify a class version.; /// The check sum is built from the names/types of base classes and; /// data members.; /// Original algorithm from Victor Perevovchikov (perev@bnl.gov).; ///; /// The valid range of code is determined by ECheckSum.; ///; /// - kNoEnum: data members of type enum are not counted in the checksum; /// - kNoRange: return the checksum of data members and base classes, not including the ranges and array size found in comments.; /// - kWithTypeDef: use the sugared type name in the calculation.; ///; /// This is needed for backward compatibility.; ///; /// WARNING: this function must be kept in sync with TStreamerInfo::GetCheckSum.; /// They are both used to handle backward compatibility and should both return the same values.; /// TStreamerInfo uses the information in TStreamerElement while TClass uses the information; /// from TClass::GetListOfBases and TClass::GetListOfDataMembers.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:670,Security,checksum,checksum,670,"////////////////////////////////////////////////////////////////////////////////; /// Compute and/or return the class check sum.; ///; /// isvalid is set to false, if the function is unable to calculate the; /// checksum.; ///; /// The class ckecksum is used by the automatic schema evolution algorithm; /// to uniquely identify a class version.; /// The check sum is built from the names/types of base classes and; /// data members.; /// Original algorithm from Victor Perevovchikov (perev@bnl.gov).; ///; /// The valid range of code is determined by ECheckSum.; ///; /// - kNoEnum: data members of type enum are not counted in the checksum; /// - kNoRange: return the checksum of data members and base classes, not including the ranges and array size found in comments.; /// - kWithTypeDef: use the sugared type name in the calculation.; ///; /// This is needed for backward compatibility.; ///; /// WARNING: this function must be kept in sync with TStreamerInfo::GetCheckSum.; /// They are both used to handle backward compatibility and should both return the same values.; /// TStreamerInfo uses the information in TStreamerElement while TClass uses the information; /// from TClass::GetListOfBases and TClass::GetListOfDataMembers.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:26,Modifiability,variab,variable,26,"// fCheckSum is an atomic variable. Also once it has; // transition from a zero Value it never changes. If two; // thread reach past this if statement and calculated the; // 'kLastestCheckSum', they will by definition obtain the; // same value, so technically we could simply have:; // if (fCheckSum && code == kCurrentCheckSum) return fCheckSum;; // However save a little bit of barrier time by calling load(); // only once.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:404,Performance,load,load,404,"// fCheckSum is an atomic variable. Also once it has; // transition from a zero Value it never changes. If two; // thread reach past this if statement and calculated the; // 'kLastestCheckSum', they will by definition obtain the; // same value, so technically we could simply have:; // if (fCheckSum && code == kCurrentCheckSum) return fCheckSum;; // However save a little bit of barrier time by calling load(); // only once.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:269,Usability,simpl,simply,269,"// fCheckSum is an atomic variable. Also once it has; // transition from a zero Value it never changes. If two; // thread reach past this if statement and calculated the; // 'kLastestCheckSum', they will by definition obtain the; // same value, so technically we could simply have:; // if (fCheckSum && code == kCurrentCheckSum) return fCheckSum;; // However save a little bit of barrier time by calling load(); // only once.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install a new member streamer (p will be copied).",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:39,Testability,test,test,39,"// // This code can be used to quickly test the STL Emulation layer; // Int_t k = TClassEdit::IsSTLCont(GetName());; // if (k==1||k==-1) { delete str; return; }",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:92,Integrability,wrap,wrapper,92,"////////////////////////////////////////////////////////////////////////////////; /// Set a wrapper/accessor function around this class custom streamer.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Security,access,accessor,100,"////////////////////////////////////////////////////////////////////////////////; /// Set a wrapper/accessor function around this class custom streamer.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:92,Integrability,wrap,wrapper,92,"////////////////////////////////////////////////////////////////////////////////; /// Set a wrapper/accessor function around this class custom conversion streamer.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Security,access,accessor,100,"////////////////////////////////////////////////////////////////////////////////; /// Set a wrapper/accessor function around this class custom conversion streamer.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'Merge'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Integrability,wrap,wrapper,100,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'Merge'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'ResetAfterMerge'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Integrability,wrap,wrapper,100,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'ResetAfterMerge'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'new'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Integrability,wrap,wrapper,100,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'new'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'new []'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Integrability,wrap,wrapper,100,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'new []'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'delete'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Integrability,wrap,wrapper,100,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'delete'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'delete []'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Integrability,wrap,wrapper,100,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'delete []'.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around the destructor.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Integrability,wrap,wrapper,100,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around the destructor.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around the directory auto add function.; /// The function autoAddFunc has the signature void (*)(void *obj, TDirectory dir); /// and should register 'obj' to the directory if dir is not null; /// and unregister 'obj' from its current directory if dir is null",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,Integrability,wrap,wrapper,100,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around the directory auto add function.; /// The function autoAddFunc has the signature void (*)(void *obj, TDirectory dir); /// and should register 'obj' to the directory if dir is not null; /// and unregister 'obj' from its current directory if dir is null",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:154,Security,checksum,checksum,154,"////////////////////////////////////////////////////////////////////////////////; /// Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:154,Security,checksum,checksum,154,"////////////////////////////////////////////////////////////////////////////////; /// Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:83,Performance,Cache,Cache,83,"//----------------------------------------------------------------------------; // Cache this streamer info; /////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:177,Security,checksum,checksum,177,"////////////////////////////////////////////////////////////////////////////////; /// Return a Conversion StreamerInfo from the class 'classname' for the layout represented by 'checksum' to this class, if any.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:183,Security,checksum,checksum,183,"////////////////////////////////////////////////////////////////////////////////; /// Return a Conversion StreamerInfo from the class represented by cl for the layout represented by 'checksum' to this class, if any.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:83,Performance,Cache,Cache,83,"//----------------------------------------------------------------------------; // Cache this streamer info; /////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:145,Deployability,Update,Update,145,"////////////////////////////////////////////////////////////////////////////////; /// Remove and delete the StreamerInfo in the given slot.; /// Update the slot accordingly.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:396,Integrability,rout,routines,396,"////////////////////////////////////////////////////////////////////////////////; /// Return true is the Hash/RecursiveRemove setup is consistent, i.e. when all; /// classes in the class hierarchy that overload TObject::Hash do call; /// ROOT::CallRecursiveRemoveIfNeeded in their destructor.; /// i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation.; /// This routines is used for a small subset of the class for which we need; /// the answer before gROOT is properly initialized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:309,Safety,safe,safe,309,"////////////////////////////////////////////////////////////////////////////////; /// Return true is the Hash/RecursiveRemove setup is consistent, i.e. when all; /// classes in the class hierarchy that overload TObject::Hash do call; /// ROOT::CallRecursiveRemoveIfNeeded in their destructor.; /// i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation.; /// This routines is used for a small subset of the class for which we need; /// the answer before gROOT is properly initialized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:105,Security,Hash,Hash,105,"////////////////////////////////////////////////////////////////////////////////; /// Return true is the Hash/RecursiveRemove setup is consistent, i.e. when all; /// classes in the class hierarchy that overload TObject::Hash do call; /// ROOT::CallRecursiveRemoveIfNeeded in their destructor.; /// i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation.; /// This routines is used for a small subset of the class for which we need; /// the answer before gROOT is properly initialized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:220,Security,Hash,Hash,220,"////////////////////////////////////////////////////////////////////////////////; /// Return true is the Hash/RecursiveRemove setup is consistent, i.e. when all; /// classes in the class hierarchy that overload TObject::Hash do call; /// ROOT::CallRecursiveRemoveIfNeeded in their destructor.; /// i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation.; /// This routines is used for a small subset of the class for which we need; /// the answer before gROOT is properly initialized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:326,Security,Hash,Hash,326,"////////////////////////////////////////////////////////////////////////////////; /// Return true is the Hash/RecursiveRemove setup is consistent, i.e. when all; /// classes in the class hierarchy that overload TObject::Hash do call; /// ROOT::CallRecursiveRemoveIfNeeded in their destructor.; /// i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation.; /// This routines is used for a small subset of the class for which we need; /// the answer before gROOT is properly initialized.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:83,Testability,test,testHashRecursiveRemove,83,"// Hand selection of correct classes, those classes should be; // cross-checked in testHashRecursiveRemove.cxx",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:309,Safety,safe,safe,309,"////////////////////////////////////////////////////////////////////////////////; /// Return true is the Hash/RecursiveRemove setup is consistent, i.e. when all; /// classes in the class hierarchy that overload TObject::Hash do call; /// ROOT::CallRecursiveRemoveIfNeeded in their destructor.; /// i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:105,Security,Hash,Hash,105,"////////////////////////////////////////////////////////////////////////////////; /// Return true is the Hash/RecursiveRemove setup is consistent, i.e. when all; /// classes in the class hierarchy that overload TObject::Hash do call; /// ROOT::CallRecursiveRemoveIfNeeded in their destructor.; /// i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:220,Security,Hash,Hash,220,"////////////////////////////////////////////////////////////////////////////////; /// Return true is the Hash/RecursiveRemove setup is consistent, i.e. when all; /// classes in the class hierarchy that overload TObject::Hash do call; /// ROOT::CallRecursiveRemoveIfNeeded in their destructor.; /// i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:326,Security,Hash,Hash,326,"////////////////////////////////////////////////////////////////////////////////; /// Return true is the Hash/RecursiveRemove setup is consistent, i.e. when all; /// classes in the class hierarchy that overload TObject::Hash do call; /// ROOT::CallRecursiveRemoveIfNeeded in their destructor.; /// i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:354,Integrability,rout,routine,354,"////////////////////////////////////////////////////////////////////////////////; /// Return true if we have access to a constructor usable for I/O. This is; /// typically the default constructor but can also be a constructor specifically; /// marked for I/O (for example a constructor taking a TRootIOCtor* as an; /// argument). In other words, if this routine returns true, TClass::New is; /// guarantee to succeed.; /// To know if the class described by this TClass has a default constructor; /// (public or not), use; /// \code{.cpp}; /// cl->GetProperty() & kClassHasDefaultCtor; /// \endcode; /// To know if the class described by this TClass has a public default; /// constructor use:; /// \code{.cpp}; /// gInterpreter->ClassInfo_HasDefaultConstructor(aClass->GetClassInfo());; /// \endcode",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:109,Security,access,access,109,"////////////////////////////////////////////////////////////////////////////////; /// Return true if we have access to a constructor usable for I/O. This is; /// typically the default constructor but can also be a constructor specifically; /// marked for I/O (for example a constructor taking a TRootIOCtor* as an; /// argument). In other words, if this routine returns true, TClass::New is; /// guarantee to succeed.; /// To know if the class described by this TClass has a default constructor; /// (public or not), use; /// \code{.cpp}; /// cl->GetProperty() & kClassHasDefaultCtor; /// \endcode; /// To know if the class described by this TClass has a public default; /// constructor use:; /// \code{.cpp}; /// gInterpreter->ClassInfo_HasDefaultConstructor(aClass->GetClassInfo());; /// \endcode",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:133,Usability,usab,usable,133,"////////////////////////////////////////////////////////////////////////////////; /// Return true if we have access to a constructor usable for I/O. This is; /// typically the default constructor but can also be a constructor specifically; /// marked for I/O (for example a constructor taking a TRootIOCtor* as an; /// argument). In other words, if this routine returns true, TClass::New is; /// guarantee to succeed.; /// To know if the class described by this TClass has a default constructor; /// (public or not), use; /// \code{.cpp}; /// cl->GetProperty() & kClassHasDefaultCtor; /// \endcode; /// To know if the class described by this TClass has a public default; /// constructor use:; /// \code{.cpp}; /// gInterpreter->ClassInfo_HasDefaultConstructor(aClass->GetClassInfo());; /// \endcode",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:175,Security,Hash,Hash,175,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if this class has an definition and/or overload of the; /// member function Hash.; ///; /// For example to test if the class overload TObject::Hash use; /// ~~~ {.cpp}; /// if (cl->IsTObject() && cl->HasLocalHashMember()); /// ~~~",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:242,Security,Hash,Hash,242,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if this class has an definition and/or overload of the; /// member function Hash.; ///; /// For example to test if the class overload TObject::Hash use; /// ~~~ {.cpp}; /// if (cl->IsTObject() && cl->HasLocalHashMember()); /// ~~~",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:206,Testability,test,test,206,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if this class has an definition and/or overload of the; /// member function Hash.; ///; /// For example to test if the class overload TObject::Hash use; /// ~~~ {.cpp}; /// if (cl->IsTObject() && cl->HasLocalHashMember()); /// ~~~",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,Integrability,wrap,wrapper,97,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around Merge.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,Integrability,wrap,wrapper,97,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around Merge.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,Integrability,wrap,wrapper,97,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around new ThisClass().",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,Integrability,wrap,wrapper,97,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around new ThisClass[].",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,Integrability,wrap,wrapper,97,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around delete ThiObject.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,Integrability,wrap,wrapper,97,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around delete [] ThiObject.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,Integrability,wrap,wrapper,97,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around the destructor",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,Integrability,wrap,wrapper,97,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around the directory auto add function.",MatchSource.CODE_COMMENT,core/meta/src/TClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClassGenerator.cxx:470,Integrability,interface,interface,470,"// @(#)root/base:$Id$; // Author: Philippe Canal 24/06/2003; /*************************************************************************; * Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClassGenerator; Objects following this interface can be passed onto the TROOT object; to implement a user customized way to create the TClass objects. Use TROOT::AddClassGenerator to register a concrete instance.; */",MatchSource.CODE_COMMENT,core/meta/src/TClassGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClassGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClassRef.cxx:687,Performance,load,loaded,687,"// @(#)root/meta:$Id$; // Author: Philippe Canal 15/03/2005; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClassRef; TClassRef is used to implement a permanent reference to a TClass; object. In particular this reference will change if and when the; TClass object is regenerated. This regeneration usually happens; when a library containing the described class is loaded after a; file containing an instance of this class has been opened. The references kept track of using an intrusive double linked list.; The intrusive list is maintained by TClass::AddRef and; TClass::RemoveRef. The 'start' of the list is held in; TClass::fRefStart.; */",MatchSource.CODE_COMMENT,core/meta/src/TClassRef.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClassRef.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClassRef.cxx:184,Integrability,rout,routines,184,"////////////////////////////////////////////////////////////////////////////////; /// Assignment operator implementation, increases reference count to original class object.; /// This routines assumes that the copy actually need to be done.",MatchSource.CODE_COMMENT,core/meta/src/TClassRef.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClassRef.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClassRef.cxx:169,Integrability,rout,routines,169,"////////////////////////////////////////////////////////////////////////////////; /// Assignment operator, increases reference count to original class object.; /// This routines assumes that the copy actually need to be done.",MatchSource.CODE_COMMENT,core/meta/src/TClassRef.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClassRef.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:3025,Integrability,rout,routines,3025,"that names that are automatically recognized may be also:; for data fields: either fXXX or fIsXXX; and for getter function; GetXXX() or IsXXX() [where XXX is base name]. As an example of using it let's analyse a few lines which get and set; a fEditable field in TCanvas:; ~~~ {.cpp}; TCanvas *c = new TCanvas(""c""); // create a canvas; TClass *cl = c->IsA(); // get its class description object. TDataMember *dm = cl->GetDataMember(""fEditable""); //This is our data member. TMethodCall *getter = dm->GetterMethod(c); //find a method that gets value!; Long_t l; // declare a storage for this value;. getter->Execute(c,"""",l); // Get this Value !!!! It will appear in l !!!. TMethodCall *setter = dm->SetterMethod(c);; setter->Execute(c,""0"",); // Set Value 0 !!!; ~~~. This trick is widely used in ROOT TContextMenu and dialogs for obtaining; current values and put them as initial values in dialog fields. If you don't want to follow the convention of naming used by ROOT; you still could benefit from Getter/Setter method support: the solution; is to instruct ROOT what the names of these routines are.; The way to do it is putting this information in a comment string to a data; field in your class declaration:. ~~~ {.cpp}; class MyClass{; Int_t mydata; // *OPTIONS={GetMethod=""Get"";SetMethod=""Set""}; ...; Int_t Get() const { return mydata;};; void Set(Int_t i) {mydata=i;};; }; ~~~. However, this getting/setting functions are not the only feature of; this class. The next point is providing lists of possible settings; for the concerned data member. The idea is to have a list of possible; options for this data member, with strings identifying them. This; is used in dialogs with parameters to set - for details see; TMethodArg, TRootContextMenu, TContextMenu. This list not only specifies; the allowed value, but also provides strings naming the options.; Options are managed via TList of TOptionListItem objects. This list; is also created automatically: if a data type is an enum type,; the list",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:1118,Security,access,access,1118,"ight (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TDataMember. All ROOT classes may have RTTI (run time type identification) support; added. The data is stored in so called DICTIONARY (look at TDictionary).; Information about a class is stored in TClass.; This information may be obtained via the cling api - see class TCling.; TClass has a list of TDataMember objects providing information about all; data members of described class. \image html base_classinfo.png. TDataMember provides information about name of data member, its type,; and comment field string. It also tries to find the TMethodCall objects; responsible for getting/setting a value of it, and gives you pointers; to these methods. This gives you a unique possibility to access; protected and private (!) data members if only methods for doing that; are defined. These methods could either be specified in a comment field, or found; out automatically by ROOT: here's an example:; suppose you have a class definition:; ~~~ {.cpp}; class MyClass{; private:; Float_t fX1;; ...; public:; void SetX1(Float_t x) {fX1 = x;};; Float_t GetX1() {return fX1;};; ...; }; ~~~; Look at the data member name and method names: a data member name has; a prefix letter (f) and has a base name X1 . The methods for getting and; setting this value have names which consist of string Get/Set and the; same base name. This convention of naming data fields and methods which; access them allows TDataMember find this methods by itself completely; automatically. To make this description complete, one should know,; that names that are automatically recognized may be also:; for data fields: either fXXX or fIsXXX; and for getter function; GetXXX() or IsXXX() [where XXX is base name]. As an example of using it let's ana",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:1800,Security,access,access,1800," \image html base_classinfo.png. TDataMember provides information about name of data member, its type,; and comment field string. It also tries to find the TMethodCall objects; responsible for getting/setting a value of it, and gives you pointers; to these methods. This gives you a unique possibility to access; protected and private (!) data members if only methods for doing that; are defined. These methods could either be specified in a comment field, or found; out automatically by ROOT: here's an example:; suppose you have a class definition:; ~~~ {.cpp}; class MyClass{; private:; Float_t fX1;; ...; public:; void SetX1(Float_t x) {fX1 = x;};; Float_t GetX1() {return fX1;};; ...; }; ~~~; Look at the data member name and method names: a data member name has; a prefix letter (f) and has a base name X1 . The methods for getting and; setting this value have names which consist of string Get/Set and the; same base name. This convention of naming data fields and methods which; access them allows TDataMember find this methods by itself completely; automatically. To make this description complete, one should know,; that names that are automatically recognized may be also:; for data fields: either fXXX or fIsXXX; and for getter function; GetXXX() or IsXXX() [where XXX is base name]. As an example of using it let's analyse a few lines which get and set; a fEditable field in TCanvas:; ~~~ {.cpp}; TCanvas *c = new TCanvas(""c""); // create a canvas; TClass *cl = c->IsA(); // get its class description object. TDataMember *dm = cl->GetDataMember(""fEditable""); //This is our data member. TMethodCall *getter = dm->GetterMethod(c); //find a method that gets value!; Long_t l; // declare a storage for this value;. getter->Execute(c,"""",l); // Get this Value !!!! It will appear in l !!!. TMethodCall *setter = dm->SetterMethod(c);; setter->Execute(c,""0"",); // Set Value 0 !!!; ~~~. This trick is widely used in ROOT TContextMenu and dialogs for obtaining; current values and put them as initia",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:125,Deployability,Update,Update,125,"////////////////////////////////////////////////////////////////////////////////; /// Routines called by the constructor and Update to reset the member's; /// information.; /// afterReading is set when initializing after reading through Streamer().",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:86,Integrability,Rout,Routines,86,"////////////////////////////////////////////////////////////////////////////////; /// Routines called by the constructor and Update to reset the member's; /// information.; /// afterReading is set when initializing after reading through Streamer().",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:70,Performance,load,loaded,70,"// humm we did not find it ... maybe it's a typedef that has not been loaded yet.; // (this can happen if the executable does not have a TApplication object).",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:23,Availability,Error,Error,23,"// if (!fDataType); // Error(""TDataMember"", ""basic data type %s not found in list of basic types"",; // GetTypeName());",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:157,Performance,load,loaded,157,"////////////////////////////////////////////////////////////////////////////////; /// Return true if this data member object is pointing to a currently; /// loaded data member. If a function is unloaded after the TDataMember; /// is created, the TDataMember will be set to be invalid.",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:82,Deployability,update,updated,82,"// We need to make sure that the list of data member is properly; // informed and updated.",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:24,Security,access,access,24,"// Set to the strictest access of the member and the type",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:89,Modifiability,inherit,inheritance,89,"// check whether such method exists; // FIXME: wrong in case called derives via multiple inheritance from this class",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:52,Modifiability,inherit,inheritance,52,"// FIXME: wrong in case called derives via multiple inheritance from this class",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:289,Modifiability,inherit,inheritance,289,"////////////////////////////////////////////////////////////////////////////////; /// Return a TMethodCall method responsible for getting the value; /// of data member. The cl argument specifies the class of the object; /// which will be used to call this method (in case of multiple; /// inheritance TMethodCall needs to know this to calculate the proper; /// offset).",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:289,Modifiability,inherit,inheritance,289,"////////////////////////////////////////////////////////////////////////////////; /// Return a TMethodCall method responsible for setting the value; /// of data member. The cl argument specifies the class of the object; /// which will be used to call this method (in case of multiple; /// inheritance TMethodCall needs to know this to calculate the proper; /// offset).",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the TFunction to reflect the new info.; ///; /// This can be used to implement unloading (info == 0) and then reloading; /// (info being the 'new' decl address).",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:145,Performance,cache,cached,145,"////////////////////////////////////////////////////////////////////////////////; /// Stream an object of TDataMember. Forces calculation of all cached; /// (and persistent) values.",MatchSource.CODE_COMMENT,core/meta/src/TDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx:633,Security,access,accessible,633,"// @(#)root/meta:$Id$; // Author: Rene Brun 04/02/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons . *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TDataType; Basic data type descriptor (datatype information is obtained from; CINT). This class describes the attributes of type definitions; (typedef's). The TROOT class contains a list of all currently; defined types (accessible via TROOT::GetListOfTypes()).; */",MatchSource.CODE_COMMENT,core/meta/src/TDataType.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx:173,Deployability,Update,UpdateListOfTypes,173,"////////////////////////////////////////////////////////////////////////////////; /// Default TDataType ctor. TDataTypes are constructed in TROOT via; /// a call to TCling::UpdateListOfTypes().",MatchSource.CODE_COMMENT,core/meta/src/TDataType.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx:98,Integrability,depend,depending,98,"////////////////////////////////////////////////////////////////////////////////; /// Set type id depending on name.",MatchSource.CODE_COMMENT,core/meta/src/TDataType.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx:98,Integrability,depend,depending,98,"////////////////////////////////////////////////////////////////////////////////; /// Set type id depending on name.",MatchSource.CODE_COMMENT,core/meta/src/TDataType.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx:63,Performance,load,loaded,63,"// This can be needed if the library defining this typedef was loaded after; // another library and that this other library is unloaded (in which case; // things can get renumbered inside CINT).",MatchSource.CODE_COMMENT,core/meta/src/TDataType.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx:48,Security,hash,hash,48,"//Add the property pair name - Int value to the hash table.",MatchSource.CODE_COMMENT,core/meta/src/TDictAttributeMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx:85,Security,Access,Access,85,"////////////////////////////////////////////////////////////////////////////////; ///Access the value of a String property using the key.",MatchSource.CODE_COMMENT,core/meta/src/TDictAttributeMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx:28,Safety,avoid,avoid,28,"//Copy object into found to avoid calling the function two times.",MatchSource.CODE_COMMENT,core/meta/src/TDictAttributeMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx:10,Availability,error,error,10,"//Show an error message if the key is not found.",MatchSource.CODE_COMMENT,core/meta/src/TDictAttributeMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx:16,Integrability,message,message,16,"//Show an error message if the key is not found.",MatchSource.CODE_COMMENT,core/meta/src/TDictAttributeMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictionary.cxx:473,Integrability,interface,interface,473,"// @(#)root/meta:$Id$; // Author: Fons Rademakers 20/06/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TDictionary. This class defines an abstract interface that must be implemented; by all classes that contain dictionary information. The dictionary is defined by the following classes:; ~~~ {.cpp}; TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments); ~~~; All the above classes implement the TDictionary abstract interface.; Note: the indentation shows aggregation not inheritance.; ~~~ {.cpp}; TMethodCall (method call environment); ~~~; \image html base_tdictionary.png; */",MatchSource.CODE_COMMENT,core/meta/src/TDictionary.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictionary.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictionary.cxx:915,Integrability,interface,interface,915,"// @(#)root/meta:$Id$; // Author: Fons Rademakers 20/06/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TDictionary. This class defines an abstract interface that must be implemented; by all classes that contain dictionary information. The dictionary is defined by the following classes:; ~~~ {.cpp}; TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments); ~~~; All the above classes implement the TDictionary abstract interface.; Note: the indentation shows aggregation not inheritance.; ~~~ {.cpp}; TMethodCall (method call environment); ~~~; \image html base_tdictionary.png; */",MatchSource.CODE_COMMENT,core/meta/src/TDictionary.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictionary.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictionary.cxx:675,Modifiability,variab,variables,675,"// @(#)root/meta:$Id$; // Author: Fons Rademakers 20/06/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TDictionary. This class defines an abstract interface that must be implemented; by all classes that contain dictionary information. The dictionary is defined by the following classes:; ~~~ {.cpp}; TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments); ~~~; All the above classes implement the TDictionary abstract interface.; Note: the indentation shows aggregation not inheritance.; ~~~ {.cpp}; TMethodCall (method call environment); ~~~; \image html base_tdictionary.png; */",MatchSource.CODE_COMMENT,core/meta/src/TDictionary.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictionary.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictionary.cxx:971,Modifiability,inherit,inheritance,971,"// @(#)root/meta:$Id$; // Author: Fons Rademakers 20/06/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TDictionary. This class defines an abstract interface that must be implemented; by all classes that contain dictionary information. The dictionary is defined by the following classes:; ~~~ {.cpp}; TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments); ~~~; All the above classes implement the TDictionary abstract interface.; Note: the indentation shows aggregation not inheritance.; ~~~ {.cpp}; TMethodCall (method call environment); ~~~; \image html base_tdictionary.png; */",MatchSource.CODE_COMMENT,core/meta/src/TDictionary.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictionary.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:150,Performance,load,loaded,150,"////////////////////////////////////////////////////////////////////////////////; /// Return true if this enum object is pointing to a currently; /// loaded enum. If a enum is unloaded after the TEnum; /// is created, the TEnum will be set to be invalid.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:197,Performance,load,load,197,"////////////////////////////////////////////////////////////////////////////////; /// Static function to retrieve enumerator from the ROOT's typesystem.; /// It has no side effect, except when the load flag is true. In this case,; /// the load of the library containing the scope of the enumerator is attempted.; /// There are two top level code paths: the enumerator is scoped or isn't.; /// If it is not, a lookup in the list of global enums is performed.; /// If it is, two lookups are carried out for its scope: one in the list of; /// classes and one in the list of protoclasses. If a scope with the desired name; /// is found, the enum is searched. If the scope is not found, and the load flag is; /// true, the aforementioned two steps are performed again after an autoload attempt; /// with the name of the scope as key is tried out.; /// If the interpreter lookup flag is false, the ListOfEnums objects are not treated; /// as such, but rather as THashList objects. This prevents any flow of information; /// from the interpreter into the ROOT's typesystem: a snapshot of the typesystem; /// status is taken.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:239,Performance,load,load,239,"////////////////////////////////////////////////////////////////////////////////; /// Static function to retrieve enumerator from the ROOT's typesystem.; /// It has no side effect, except when the load flag is true. In this case,; /// the load of the library containing the scope of the enumerator is attempted.; /// There are two top level code paths: the enumerator is scoped or isn't.; /// If it is not, a lookup in the list of global enums is performed.; /// If it is, two lookups are carried out for its scope: one in the list of; /// classes and one in the list of protoclasses. If a scope with the desired name; /// is found, the enum is searched. If the scope is not found, and the load flag is; /// true, the aforementioned two steps are performed again after an autoload attempt; /// with the name of the scope as key is tried out.; /// If the interpreter lookup flag is false, the ListOfEnums objects are not treated; /// as such, but rather as THashList objects. This prevents any flow of information; /// from the interpreter into the ROOT's typesystem: a snapshot of the typesystem; /// status is taken.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:447,Performance,perform,performed,447,"////////////////////////////////////////////////////////////////////////////////; /// Static function to retrieve enumerator from the ROOT's typesystem.; /// It has no side effect, except when the load flag is true. In this case,; /// the load of the library containing the scope of the enumerator is attempted.; /// There are two top level code paths: the enumerator is scoped or isn't.; /// If it is not, a lookup in the list of global enums is performed.; /// If it is, two lookups are carried out for its scope: one in the list of; /// classes and one in the list of protoclasses. If a scope with the desired name; /// is found, the enum is searched. If the scope is not found, and the load flag is; /// true, the aforementioned two steps are performed again after an autoload attempt; /// with the name of the scope as key is tried out.; /// If the interpreter lookup flag is false, the ListOfEnums objects are not treated; /// as such, but rather as THashList objects. This prevents any flow of information; /// from the interpreter into the ROOT's typesystem: a snapshot of the typesystem; /// status is taken.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:690,Performance,load,load,690,"////////////////////////////////////////////////////////////////////////////////; /// Static function to retrieve enumerator from the ROOT's typesystem.; /// It has no side effect, except when the load flag is true. In this case,; /// the load of the library containing the scope of the enumerator is attempted.; /// There are two top level code paths: the enumerator is scoped or isn't.; /// If it is not, a lookup in the list of global enums is performed.; /// If it is, two lookups are carried out for its scope: one in the list of; /// classes and one in the list of protoclasses. If a scope with the desired name; /// is found, the enum is searched. If the scope is not found, and the load flag is; /// true, the aforementioned two steps are performed again after an autoload attempt; /// with the name of the scope as key is tried out.; /// If the interpreter lookup flag is false, the ListOfEnums objects are not treated; /// as such, but rather as THashList objects. This prevents any flow of information; /// from the interpreter into the ROOT's typesystem: a snapshot of the typesystem; /// status is taken.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:747,Performance,perform,performed,747,"////////////////////////////////////////////////////////////////////////////////; /// Static function to retrieve enumerator from the ROOT's typesystem.; /// It has no side effect, except when the load flag is true. In this case,; /// the load of the library containing the scope of the enumerator is attempted.; /// There are two top level code paths: the enumerator is scoped or isn't.; /// If it is not, a lookup in the list of global enums is performed.; /// If it is, two lookups are carried out for its scope: one in the list of; /// classes and one in the list of protoclasses. If a scope with the desired name; /// is found, the enum is searched. If the scope is not found, and the load flag is; /// true, the aforementioned two steps are performed again after an autoload attempt; /// with the name of the scope as key is tried out.; /// If the interpreter lookup flag is false, the ListOfEnums objects are not treated; /// as such, but rather as THashList objects. This prevents any flow of information; /// from the interpreter into the ROOT's typesystem: a snapshot of the typesystem; /// status is taken.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:27,Energy Efficiency,reduce,reduce,27,"// Potential optimisation: reduce number of branches using partial specialisation of; // helper functions.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:3,Integrability,Wrap,Wrap,3,"// Wrap some gymnastic around the enum finding. The special treatment of the; // ListOfEnums objects is located in this routine.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:120,Integrability,rout,routine,120,"// Wrap some gymnastic around the enum finding. The special treatment of the; // ListOfEnums objects is located in this routine.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:10,Integrability,rout,routine,10,"// Helper routine to look fo the scope::enum in the typesystem.; // If autoload and interpreter lookup is allowed, TClass::GetClass is called.; // If not, the list of classes and the list of protoclasses is inspected.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:23,Performance,load,load,23,"// If this is a class, load only if the user allowed interpreter lookup; // If this is a namespace and the user did not allow for interpreter lookup, load but before disable; // autoparsing if enabled.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:150,Performance,load,load,150,"// If this is a class, load only if the user allowed interpreter lookup; // If this is a namespace and the user did not allow for interpreter lookup, load but before disable; // autoparsing if enabled.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:165,Deployability,update,update,165,"// Keep the state consistent. In particular prevent change in the state of; // AutoLoading and AutoParsing allowance and gROOT->GetListOfClasses(); // and the later update/modification to the autoparsing state.",MatchSource.CODE_COMMENT,core/meta/src/TEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:633,Security,access,accessible,633,"// @(#)root/meta:$Id$; // Author: Fons Rademakers 07/02/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TFunction; Global functions class (global functions are obtained from CINT).; This class describes one single global function.; The TROOT class contains a list of all currently defined global; functions (accessible via TROOT::GetListOfGlobalFunctions()).; */",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:173,Deployability,Update,UpdateListOfGlobalFunctions,173,"////////////////////////////////////////////////////////////////////////////////; /// Default TFunction ctor. TFunctions are constructed in TROOT via; /// a call to TCling::UpdateListOfGlobalFunctions().",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:60,Performance,cache,cached,60,"// The next call locks the interpreter mutex. The result is cached in the; // fSignature data member.",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:64,Performance,cache,cached,64,"// The next call locks the interpreter mutex.; // The result is cached in the fSignature data member.",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:108,Integrability,interface,interface,108,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to the interface method. Using this pointer we; /// can find which TFunction belongs to a CINT MethodInfo object.; /// Both need to have the same InterfaceMethod pointer.",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:247,Integrability,Interface,InterfaceMethod,247,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to the interface method. Using this pointer we; /// can find which TFunction belongs to a CINT MethodInfo object.; /// Both need to have the same InterfaceMethod pointer.",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:154,Performance,load,loaded,154,"////////////////////////////////////////////////////////////////////////////////; /// Return true if this function object is pointing to a currently; /// loaded function. If a function is unloaded after the TFunction; /// is created, the TFunction will be set to be invalid.",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:147,Availability,error,error,147,"////////////////////////////////////////////////////////////////////////////////; /// Returns the mangled name as defined by CINT, or 0 in case of error.",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:163,Availability,error,error,163,"////////////////////////////////////////////////////////////////////////////////; /// Returns the prototype of a function as defined by CINT, or 0 in; /// case of error.",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the TFunction to reflect the new info.; ///; /// This can be used to implement unloading (info == 0) and then reloading; /// (info being the 'new' decl address).",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:31,Security,access,access,31,"// This function needs to lock access to the interpreter multiple times.; // Take the lock at the beginning of the function so that we don't incur; // in too much locking/unlocking.",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:40,Safety,safe,safety,40,"// TODO: Check for MethodArgInfo thread-safety",MatchSource.CODE_COMMENT,core/meta/src/TFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunctionTemplate.cxx:163,Performance,load,loaded,163,"////////////////////////////////////////////////////////////////////////////////; /// Return true if this function template object is pointing to a currently; /// loaded function. If a function is unloaded after the TFunction; /// is created, the TFunction will be set to be invalid.",MatchSource.CODE_COMMENT,core/meta/src/TFunctionTemplate.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunctionTemplate.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunctionTemplate.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the TFunctionTemplate to reflect the new info.; ///; /// This can be used to implement unloading (info == 0) and then reloading; /// (info being the 'new' decl address).",MatchSource.CODE_COMMENT,core/meta/src/TFunctionTemplate.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunctionTemplate.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:17,Performance,load,loads,17,"// This function loads the default behavior for the; // loading of classes.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:56,Performance,load,loading,56,"// This function loads the default behavior for the; // loading of classes.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:17,Integrability,rout,routine,17,"// Initilization routine.; //TVirtualStreamerInfo::Class_Version MUST be the same as TStreamerInfo::Class_Version",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:36,Security,access,access,36,"// Return the list of rule give raw access to the TBuffer.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:65,Security,access,access,65,"// Set the list of Data Model Evolution read rules giving direct access to the TBuffer.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:9,Integrability,wrap,wrapper,9,"// Set a wrapper around the Streamer member function.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:9,Integrability,wrap,wrapper,9,"// Set a wrapper around the Streamer member function.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Deployability,Install,Install,3,"// Install a new wrapper around 'new'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:17,Integrability,wrap,wrapper,17,"// Install a new wrapper around 'new'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Deployability,Install,Install,3,"// Install a new wrapper around 'new []'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:17,Integrability,wrap,wrapper,17,"// Install a new wrapper around 'new []'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Deployability,Install,Install,3,"// Install a new wrapper around 'delete'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:17,Integrability,wrap,wrapper,17,"// Install a new wrapper around 'delete'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Deployability,Install,Install,3,"// Install a new wrapper around 'delete []'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:17,Integrability,wrap,wrapper,17,"// Install a new wrapper around 'delete []'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Deployability,Install,Install,3,"// Install a new wrapper around the destructor.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:17,Integrability,wrap,wrapper,17,"// Install a new wrapper around the destructor.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Deployability,Install,Install,3,"// Install a new wrapper around SetDirectoryAutoAdd.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:17,Integrability,wrap,wrapper,17,"// Install a new wrapper around SetDirectoryAutoAdd.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Deployability,Install,Install,3,"// Install a new wrapper around the Merge function.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:17,Integrability,wrap,wrapper,17,"// Install a new wrapper around the Merge function.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Deployability,Install,Install,3,"// Install a new wrapper around the Merge function.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:17,Integrability,wrap,wrapper,17,"// Install a new wrapper around the Merge function.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:11,Integrability,wrap,wrapper,11,"// Get the wrapper around 'new'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:11,Integrability,wrap,wrapper,11,"// Get the wrapper around 'new []'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:11,Integrability,wrap,wrapper,11,"// Get the wrapper around 'delete'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:11,Integrability,wrap,wrapper,11,"// Get the wrapper around 'delete []'.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:11,Integrability,wrap,wrapper,11,"// Get the wrapper around the destructor.",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:11,Integrability,wrap,wrapper,11,"// Get the wrapper around the directory-auto-add function .",MatchSource.CODE_COMMENT,core/meta/src/TGenericClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:439,Modifiability,variab,variables,439,"// @(#)root/meta:$Id$; // Author: Rene Brun 13/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGlobal; Global variables class (global variables are obtained from CINT).; This class describes the attributes of a global variable.; The TROOT class contains a list of all currently defined global; variables (accessible via TROOT::GetListOfGlobals()).; */",MatchSource.CODE_COMMENT,core/meta/src/TGlobal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:463,Modifiability,variab,variables,463,"// @(#)root/meta:$Id$; // Author: Rene Brun 13/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGlobal; Global variables class (global variables are obtained from CINT).; This class describes the attributes of a global variable.; The TROOT class contains a list of all currently defined global; variables (accessible via TROOT::GetListOfGlobals()).; */",MatchSource.CODE_COMMENT,core/meta/src/TGlobal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:547,Modifiability,variab,variable,547,"// @(#)root/meta:$Id$; // Author: Rene Brun 13/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGlobal; Global variables class (global variables are obtained from CINT).; This class describes the attributes of a global variable.; The TROOT class contains a list of all currently defined global; variables (accessible via TROOT::GetListOfGlobals()).; */",MatchSource.CODE_COMMENT,core/meta/src/TGlobal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:623,Modifiability,variab,variables,623,"// @(#)root/meta:$Id$; // Author: Rene Brun 13/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGlobal; Global variables class (global variables are obtained from CINT).; This class describes the attributes of a global variable.; The TROOT class contains a list of all currently defined global; variables (accessible via TROOT::GetListOfGlobals()).; */",MatchSource.CODE_COMMENT,core/meta/src/TGlobal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:634,Security,access,accessible,634,"// @(#)root/meta:$Id$; // Author: Rene Brun 13/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGlobal; Global variables class (global variables are obtained from CINT).; This class describes the attributes of a global variable.; The TROOT class contains a list of all currently defined global; variables (accessible via TROOT::GetListOfGlobals()).; */",MatchSource.CODE_COMMENT,core/meta/src/TGlobal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:105,Modifiability,variab,variable,105,"////////////////////////////////////////////////////////////////////////////////; /// Get type of global variable, e,g.: ""class TDirectory*"" -> ""TDirectory"".; /// Result needs to be used or copied immediately.",MatchSource.CODE_COMMENT,core/meta/src/TGlobal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:122,Modifiability,variab,variable,122,"////////////////////////////////////////////////////////////////////////////////; /// Get full type description of global variable, e,g.: ""class TDirectory*"".",MatchSource.CODE_COMMENT,core/meta/src/TGlobal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:152,Performance,load,loaded,152,"////////////////////////////////////////////////////////////////////////////////; /// Return true if this global object is pointing to a currently; /// loaded global. If a global is unloaded after the TGlobal; /// is created, the TGlobal will be set to be invalid.",MatchSource.CODE_COMMENT,core/meta/src/TGlobal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the TFunction to reflect the new info.; ///; /// This can be used to implement unloading (info == 0) and then reloading; /// (info being the 'new' decl address).",MatchSource.CODE_COMMENT,core/meta/src/TGlobal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:14,Safety,safe,safe,14,"// For thread-safe setting of SetOwner(kTRUE).",MatchSource.CODE_COMMENT,core/meta/src/TGlobal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TInterpreter.cxx:474,Integrability,interface,interface,474,"// @(#)root/meta:$Id$; // Author: Fons Rademakers 01/03/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TInterpreter; This class defines an abstract interface to a generic command line; interpreter.; */",MatchSource.CODE_COMMENT,core/meta/src/TInterpreter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TInterpreter.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TInterpreter.cxx:63,Modifiability,variab,variable,63,"// use special functor to extract pointer on gInterpreterLocal variable",MatchSource.CODE_COMMENT,core/meta/src/TInterpreter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TInterpreter.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx:135,Safety,safe,safe,135,"////////////////////////////////////////////////////////////////////////////////; /// Set class pointer; /// This method is not thread safe",MatchSource.CODE_COMMENT,core/meta/src/TIsAProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx:3,Safety,Avoid,Avoid,3,"// Avoid the case that the first word is a virtual_base_offset_table instead of; // a virtual_function_table",MatchSource.CODE_COMMENT,core/meta/src/TIsAProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx:41,Performance,cache,cache,41,"// Check if type is already in sub-class cache",MatchSource.CODE_COMMENT,core/meta/src/TIsAProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx:52,Performance,load,loaded,52,"// Don't record failed searches (a library might be loaded between now and the next search).",MatchSource.CODE_COMMENT,core/meta/src/TIsAProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx:109,Performance,cache,cached,109,"////////////////////////////////////////////////////////////////////////////////; /// See if we have already cached the TClass that correspond to this std::type_info.",MatchSource.CODE_COMMENT,core/meta/src/TIsAProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx:51,Deployability,release,release,51,"//See if there is a writer, if there is we need to release; // our reader count so that the writer can proceed",MatchSource.CODE_COMMENT,core/meta/src/TIsAProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx:37,Deployability,update,update,37,"// type is already in the map, let's update it.",MatchSource.CODE_COMMENT,core/meta/src/TIsAProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TIsAProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:497,Security,access,access,497,"// @(#)root/cont; // Author: Philippe Canal Aug 2013; /*************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TListOfDataMembers; A collection of TDataMember objects designed for fast access given a; DeclId_t and for keep track of TDataMember that were described; unloaded data member.; */",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:291,Safety,avoid,avoid,291,"// The interpreter does not know about this class yet (or a problem; // occurred that prevented the proper updating of fClassInfo).; // So this decl can not possibly be part of this class.; // [In addition calling GetClassInfo would trigger a late parsing; // of the header which we want to avoid].",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:263,Performance,perform,performed,263,"////////////////////////////////////////////////////////////////////////////////; /// Return (after creating it if necessary) the TDataMember; /// describing the data member corresponding to the Decl 'id'.; /// The skipChecks flag controls the consistency checks performed inspecting; /// the AST. In some cases, we explicitly alter the datamembers in the; /// typesystem with respect to the AST and therefore we must not enforce; /// consistency.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:291,Safety,avoid,avoid,291,"// The interpreter does not know about this class yet (or a problem; // occurred that prevented the proper updating of fClassInfo).; // So this decl can not possibly be part of this class.; // [In addition calling GetClassInfo would trigger a late parsing; // of the header which we want to avoid].",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:415,Availability,avail,available,415,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:357,Security,hash,hash,357,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:375,Security,hash,hash,375,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:392,Security,hash,hash,392,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load all the DataMembers known to the interpreter for the scope 'fClass'; /// into this collection.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:27,Modifiability,extend,extendable,27,"// Class and union are not extendable, if we already; // loaded all the data member there is no need to recheck",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:57,Performance,load,loaded,57,"// Class and union are not extendable, if we already; // loaded all the data member there is no need to recheck",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:239,Modifiability,variab,variable,239,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:45,Performance,load,loaded,45,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:74,Performance,load,load,74,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:147,Performance,load,loaded,147,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:308,Performance,load,load,308,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:157,Safety,avoid,avoid,157,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:501,Security,access,access,501,"// @(#)root/cont; // Author: Bianca-Cristina Cristescu February 2014; /*************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TListOfEnums; A collection of TEnum objects designed for fast access given a; DeclId_t and for keep track of TEnum that were described; unloaded enum.; */",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:20,Deployability,update,update,20,"// In this case, we update the declId, update its constants and add the enum to the ids map and return.; // At this point it is like it came from the interpreter.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:39,Deployability,update,update,39,"// In this case, we update the declId, update its constants and add the enum to the ids map and return.; // At this point it is like it came from the interpreter.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:291,Safety,avoid,avoid,291,"// The interpreter does not know about this class yet (or a problem; // occurred that prevented the proper updating of fClassInfo).; // So this decl can not possibly be part of this class.; // [In addition calling GetClassInfo would trigger a late parsing; // of the header which we want to avoid].",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:208,Integrability,rout,routine,208,"////////////////////////////////////////////////////////////////////////////////; /// Return an object from the list of enums *if and only if* is has already; /// been loaded in the list. This is an internal routine.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:168,Performance,load,loaded,168,"////////////////////////////////////////////////////////////////////////////////; /// Return an object from the list of enums *if and only if* is has already; /// been loaded in the list. This is an internal routine.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:415,Availability,avail,available,415,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:357,Security,hash,hash,357,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:375,Security,hash,hash,375,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:392,Security,hash,hash,392,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load all the DataMembers known to the interpreter for the scope 'fClass'; /// into this collection.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:27,Modifiability,extend,extendable,27,"// Class and union are not extendable, if we already; // loaded all the data member there is no need to recheck",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:57,Performance,load,loaded,57,"// Class and union are not extendable, if we already; // loaded all the data member there is no need to recheck",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:239,Modifiability,variab,variable,239,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:45,Performance,load,loaded,45,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:74,Performance,load,load,74,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:147,Performance,load,loaded,147,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:308,Performance,load,load,308,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:157,Safety,avoid,avoid,157,"// In the case of namespace, even if we have loaded before we need to; // load again in case there was new data member added.; // Mark the list as loaded to avoid an infinite recursion in the case; // where we have a data member that is a variable size array. In that; // case TDataMember::Init needs to get/load the list to find the data; // member used as the array size.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:13,Usability,clear,clear,13,"// We cannot clear the whole unloaded list. It is too much.; // fUnloaded->Clear();",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:75,Usability,Clear,Clear,75,"// We cannot clear the whole unloaded list. It is too much.; // fUnloaded->Clear();",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnums.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx:509,Security,access,access,509,"// @(#)root/cont; // Author: Bianca-Cristina Cristescu February 2014; /*************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TListOfEnumsWithLock; A collection of TEnum objects designed for fast access given a; DeclId_t and for keep track of TEnum that were described; unloaded enum.; */",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnumsWithLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx:208,Integrability,rout,routine,208,"////////////////////////////////////////////////////////////////////////////////; /// Return an object from the list of enums *if and only if* is has already; /// been loaded in the list. This is an internal routine.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnumsWithLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx:168,Performance,load,loaded,168,"////////////////////////////////////////////////////////////////////////////////; /// Return an object from the list of enums *if and only if* is has already; /// been loaded in the list. This is an internal routine.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnumsWithLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx:415,Availability,avail,available,415,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnumsWithLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx:357,Security,hash,hash,357,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnumsWithLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx:375,Security,hash,hash,375,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnumsWithLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx:392,Security,hash,hash,392,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfEnumsWithLock.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnumsWithLock.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:493,Security,access,access,493,"// @(#)root/cont; // Author: Philippe Canal Aug 2013; /*************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TListOfFunctions; A collection of TFunction objects designed for fast access given a; DeclId_t and for keep track of TFunction that were described; unloaded function.; */",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:144,Availability,avail,available,144,"////////////////////////////////////////////////////////////////////////////////; /// Return the set of overloads for this name, collecting all available ones.; /// Can construct and insert new TFunction-s.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:3,Deployability,Update,Update,3,"// Update if needed.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:144,Availability,avail,available,144,"////////////////////////////////////////////////////////////////////////////////; /// Return the set of overloads for this name, collecting all available ones.; /// Can construct and insert new TFunction-s.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:147,Availability,avail,available,147,"////////////////////////////////////////////////////////////////////////////////; /// Return the set of overloads for function obj, collecting all available ones.; /// Can construct and insert new TFunction-s.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:415,Availability,avail,available,415,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:357,Security,hash,hash,357,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:375,Security,hash,hash,375,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:392,Security,hash,hash,392,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load all the functions known to the interpreter for the scope 'fClass'; /// into this collection.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx:514,Security,access,access,514,"// @(#)root/cont; // Author: Bianca-Cristina Cristescu March 2014; /*************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TListOfFunctionTemplates; A collection of TFunction objects designed for fast access given a; DeclId_t and for keep track of TFunction that were described; unloaded function.; */",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctionTemplates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx:144,Availability,avail,available,144,"////////////////////////////////////////////////////////////////////////////////; /// Return the set of overloads for this name, collecting all available ones.; /// Can construct and insert new TFunction-s.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctionTemplates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx:3,Deployability,Update,Update,3,"// Update if needed.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctionTemplates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx:144,Availability,avail,available,144,"////////////////////////////////////////////////////////////////////////////////; /// Return the set of overloads for this name, collecting all available ones.; /// Can construct and insert new TFunction-s.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctionTemplates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx:147,Availability,avail,available,147,"////////////////////////////////////////////////////////////////////////////////; /// Return the set of overloads for function obj, collecting all available ones.; /// Can construct and insert new TFunction-s.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctionTemplates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx:415,Availability,avail,available,415,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctionTemplates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx:357,Security,hash,hash,357,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctionTemplates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx:375,Security,hash,hash,375,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctionTemplates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx:392,Security,hash,hash,392,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctionTemplates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load all the functions known to the interpreter for the scope 'fClass'; /// into this collection.",MatchSource.CODE_COMMENT,core/meta/src/TListOfFunctionTemplates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctionTemplates.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx:156,Deployability,TOGGLE,TOGGLE,156,"////////////////////////////////////////////////////////////////////////////////; /// Return call environment for the getter method in case this is a; /// *TOGGLE method (for the context menu).",MatchSource.CODE_COMMENT,core/meta/src/TMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx:154,Performance,load,loaded,154,"////////////////////////////////////////////////////////////////////////////////; /// Return true if this function object is pointing to a currently; /// loaded function. If a function is unloaded after the TMethod; /// is created, the TMethod will be set to be invalid.",MatchSource.CODE_COMMENT,core/meta/src/TMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx:150,Deployability,TOGGLE,TOGGLE,150,"////////////////////////////////////////////////////////////////////////////////; /// Return call environment for this method in case this is a; /// *TOGGLE method which takes a single boolean or integer argument.",MatchSource.CODE_COMMENT,core/meta/src/TMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx:126,Deployability,update,updates,126,"////////////////////////////////////////////////////////////////////////////////; /// Returns methodarg list and additionally updates fDataMember in TMethod by; /// calling FindDataMember();",MatchSource.CODE_COMMENT,core/meta/src/TMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the TMethod to reflect the new info.; ///; /// This can be used to implement unloading (info == 0) and then reloading; /// (info being the 'new' decl address).",MatchSource.CODE_COMMENT,core/meta/src/TMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodArg.cxx:545,Usability,learn,learn,545,"////////////////////////////////////////////////////////////////////////////////; /// Returns TDataMember pointed by this methodarg.; /// If you want to specify list of options or current value for your; /// MethodArg (i.e. it is used as initial values in argument-asking dialogs; /// popped up from context-meny),you can get this value from one of data; /// members of the class.; ///; /// The only restriction is, that this DataMember object must have its; /// Getter/Setter methods set-up correctly - for details look at TDataMember.; /// To learn how to specify the data member to which the argument should; /// ""point"", look at TMethod. This is TMethod which sets up fDataMember,; /// so it could work correctly.",MatchSource.CODE_COMMENT,core/meta/src/TMethodArg.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodArg.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodArg.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update fInfo (to 0 for unloading and non-zero for reloading).; /// This takes ownership of 'info'",MatchSource.CODE_COMMENT,core/meta/src/TMethodArg.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodArg.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:917,Availability,failure,failures,917,"// @(#)Root/meta:$Id$; // Author: Fons Rademakers 13/06/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMethodCall; Method or function calling interface. Objects of this class contain; the (CINT) environment to call a global function or a method for an; object of a specific class with the desired arguments. This class is; especially useful when a method has to be called more times for; different objects and/or with different arguments. If a function or; method needs to be called only once one better uses; TInterpreter::Execute(). A limitation is known with the present implementation: failures can ; occur if parameters involve temporary object construction.; */",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:469,Integrability,interface,interface,469,"// @(#)Root/meta:$Id$; // Author: Fons Rademakers 13/06/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMethodCall; Method or function calling interface. Objects of this class contain; the (CINT) environment to call a global function or a method for an; object of a specific class with the desired arguments. This class is; especially useful when a method has to be called more times for; different objects and/or with different arguments. If a function or; method needs to be called only once one better uses; TInterpreter::Execute(). A limitation is known with the present implementation: failures can ; occur if parameters involve temporary object construction.; */",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:335,Energy Efficiency,efficient,efficient,335,"////////////////////////////////////////////////////////////////////////////////; /// Create a method invocation environment for a specific class, method and; /// parameters. The parameter string has the form: ""\""aap\"", 3, 4.35"".; /// To execute the method call TMethodCall::Execute(object,...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:295,Energy Efficiency,efficient,efficient,295,"////////////////////////////////////////////////////////////////////////////////; /// Create a global function invocation environment. The parameter; /// string has the form: ""\""aap\"", 3, 4,35"". To execute the; /// function call TMethodCall::Execute(...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:262,Energy Efficiency,efficient,efficient,262,"////////////////////////////////////////////////////////////////////////////////; /// Create a global function invocation environment base on a TFunction object.; /// To execute the function call TMethodCall::Execute(...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:361,Energy Efficiency,efficient,efficient,361,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the method invocation environment. Necessary input; /// information: the class, method name and the parameter string; /// of the form ""\""aap\"", 3, 4.35"".; ///; /// To execute the method call TMethodCall::Execute(object,...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:351,Energy Efficiency,efficient,efficient,351,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the function invocation environment. Necessary input; /// information: the function name and the parameter string of; /// the form ""\""aap\"", 3, 4.35"".; ///; /// To execute the method call TMethodCall::Execute(...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:361,Energy Efficiency,efficient,efficient,361,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the method invocation environment. Necessary input; /// information: the class, method name and the prototype string of; /// the form: ""char*,int,float"".; ///; /// To execute the method call TMethodCall::Execute(object,...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:351,Energy Efficiency,efficient,efficient,351,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the function invocation environment. Necessary input; /// information: the function name and the prototype string of; /// the form: ""char*,int,float"".; ///; /// To execute the method call TMethodCall::Execute(...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:159,Usability,usab,usable,159,"////////////////////////////////////////////////////////////////////////////////; /// Return true if the method call has been properly initialized and is; /// usable.",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:289,Performance,cache,cached,289,"////////////////////////////////////////////////////////////////////////////////; /// Returns the TMethod describing the method to be executed. This takes; /// all overriding and overloading into account (call TClass::GetMethod()).; /// Since finding the method is expensive the result is cached.",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:275,Performance,cache,cached,275,"////////////////////////////////////////////////////////////////////////////////; /// Returns the return type of the method. Either (unsigned) long,; /// int, short and char, or float and double or anything else.; /// Since finding the return type is expensive the result is cached.",MatchSource.CODE_COMMENT,core/meta/src/TMethodCall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:41,Performance,load,loaded,41,"// Make sure all the enum information is loaded",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:40,Security,access,access,40,"// Build the list of RealData before we access it:",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:584,Testability,Test,TestBit,584,"// if (gDebug > 2) {; // for (const auto &data : fPRealData) {; // const auto classType = dataPtr->IsA();; // const auto dataName = data.fName;; // const auto dataClass = data.fClass;; // Info(""TProtoClass"",""Data is a protorealdata: %s - class %s - transient %d"", dataName.Data(),dataClass.Data(),data.fIsTransient);; //if (!dataClass.IsNull(); // if (classType == TProtoRealData::Class()); // Info(""TProtoClass"",""Data is a protorealdata: %s"", dataPtrName);; // if (classType == TObjString::Class()); // Info(""TProtoClass"",""Data is a objectstring: %s"", dataPtrName);; // if (dataPtr->TestBit(TRealData::kTransient)); // Info(""TProtoClass"",""And is transient"");; // }; // }",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:403,Availability,error,error,403,"// The class has dictionary, has gone through some initialization and is now being requested; // to be filled by a TProtoClass.; // This can be due to:; // (a) A duplicate dictionary for a class (with or without a rootpcm associated with); // (b) The TClass was created before the registration of the rootpcm ** and ** it was; // attempted to be used before this registration; // This is technically an error; // but we either already warned that there is a 2nd dictionary for the class (in TClassTable::Add); // or this is the same (but now emptied) TProtoClass instance as before.; // We return false, since we are doing no actual change to the TClass instance and thus; // if a caller was hoping for 'improvement' in the state of the TClass instance, it did not; // happen.",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:122,Safety,avoid,avoid,122,"// A first loop to retrieve the mother classes before starting to; // fill this TClass instance. This is done in order to avoid recursions; // for example in presence of daughter and mother class present in two; // dictionaries compiled in two different libraries which are not linked; // one with each other.",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:181,Performance,load,loaded,181,"// for (auto * dataMember : fData) {; // //printf(""add data member for class %s - member %s \n"",GetName(), dataMember->GetName() );; // cl->fData->Add(dataMember);; // }; // // set loaded bit to true to avoid re-loading the data members; // cl->fData->SetIsLoaded();*; //cl->fData = (TListOfDataMembers*)fData;; // The TDataMember were passed along.",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:212,Performance,load,loading,212,"// for (auto * dataMember : fData) {; // //printf(""add data member for class %s - member %s \n"",GetName(), dataMember->GetName() );; // cl->fData->Add(dataMember);; // }; // // set loaded bit to true to avoid re-loading the data members; // cl->fData->SetIsLoaded();*; //cl->fData = (TListOfDataMembers*)fData;; // The TDataMember were passed along.",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:203,Safety,avoid,avoid,203,"// for (auto * dataMember : fData) {; // //printf(""add data member for class %s - member %s \n"",GetName(), dataMember->GetName() );; // cl->fData->Add(dataMember);; // }; // // set loaded bit to true to avoid re-loading the data members; // cl->fData->SetIsLoaded();*; //cl->fData = (TListOfDataMembers*)fData;; // The TDataMember were passed along.",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:3,Deployability,Update,Update,3,"// Update pointers to TClass",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:42,Performance,load,loading,42,"// We now check for the TClass entry, w/o loading. Indeed we did that above.; // If the class is not found, it means that really it was not selected and we; // replace it with an empty placeholder with the status of kForwardDeclared.; // Interactivity will be of course possible but if IO is attempted, a warning; // will be issued.",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:3,Performance,Load,Load,3,/* Load */,MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:27,Energy Efficiency,allocate,allocate,27,"// to reset the underlying allocate space; // if (fPRealData) fPRealData->Delete();; // delete fPRealData;; // fPRealData = 0;",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx:14,Availability,down,down,14,"// I am going down 1 level",MatchSource.CODE_COMMENT,core/meta/src/TProtoClass.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TProtoClass.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TRealData.cxx:155,Modifiability,inherit,inherits,155,"/** \class TRealData; The TRealData class manages the effective list of all data members; for a given class. For example for an object of class TLine that inherits; from TObject and TAttLine, the TRealData object for a line contains the; complete list of all data members of the 3 classes. The list of TRealData members in TClass is built when functions like; object.Inspect or object.DrawClass are called.; */; ////////////////////////////////////////////////////////////////////////////////; /// RealData default constructor.",MatchSource.CODE_COMMENT,core/meta/src/TRealData.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TRealData.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx:94,Security,checksum,checksum,94,"////////////////////////////////////////////////////////////////////////////////; /// Set the checksum string - returns kFALSE if the format is incorrect",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx:101,Security,checksum,checksum,101,"////////////////////////////////////////////////////////////////////////////////; /// Check if given checksum is defined in this rule",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx:21,Security,checksum,checksum,21,"// At this point the checksum string should always be correct",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx:132,Usability,simpl,simple,132,"////////////////////////////////////////////////////////////////////////////////; /// Get the target data members of this rule as a simple string (i.e. the in memory data member).",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx:113,Security,checksum,checksums,113,"//---------------------------------------------------------------------------; // Check if there are conflicting checksums; /////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx:105,Security,checksum,checksum,105,"////////////////////////////////////////////////////////////////////////////////; /// Check if specified checksum string is correct and build checksum vector.",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx:142,Security,checksum,checksum,142,"////////////////////////////////////////////////////////////////////////////////; /// Check if specified checksum string is correct and build checksum vector.",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx:96,Security,checksum,checksum,96,"////////////////////////////////////////////////////////////////////////////////; /// Parse the checksum in the given string. Returns either the checksum or zero; /// if the string is not a hex or decimal number.",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx:145,Security,checksum,checksum,145,"////////////////////////////////////////////////////////////////////////////////; /// Parse the checksum in the given string. Returns either the checksum or zero; /// if the string is not a hex or decimal number.",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRule.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRuleSet.cxx:556,Testability,test,test,556,"////////////////////////////////////////////////////////////////////////////////; /// The consistency check always fails if the TClass object was not set!; /// if checkConsistency is:; /// kNoCheck: no check is done, register the rule as is; /// kCheckConflict: check only for conflicting rules; /// kCheckAll: check for conflict and check for rule about members that are not in the current class layout.; /// return kTRUE if the layout is accepted, in which case we take ownership of; /// the rule object.; /// return kFALSE if the rule failed one of the test, the rule now needs to be deleted by the caller.",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRuleSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRuleSet.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRuleSet.cxx:137,Security,checksum,checksum,137,"////////////////////////////////////////////////////////////////////////////////; /// Return all the rules that applies to the specified checksum of the given 'source' class.; /// User has to delete the returned array",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRuleSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRuleSet.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRuleSet.cxx:148,Security,checksum,checksum,148,"////////////////////////////////////////////////////////////////////////////////; /// Return all the rules that applies to the specified version OR checksum of the given 'source' class.; /// User has to delete the returned array",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRuleSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRuleSet.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRuleSet.cxx:281,Performance,cache,cached,281,"////////////////////////////////////////////////////////////////////////////////; /// Return true if the set of rules has at least one rule that has the data; /// member named 'name' as a source.; /// If needingAlloc is true, only the rule that requires the data member to; /// be cached will be taken in consideration.",MatchSource.CODE_COMMENT,core/meta/src/TSchemaRuleSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TSchemaRuleSet.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:1851,Availability,Error,Error,1851," contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStatusBitsChecker. TStatusBitsChecker::Check and TStatusBitsChecker::CheckAllClasses will; determine if the set of ""status bit"" declared in the class and its; base classes presents any overlap. The status bit are declared in; a given class by declaring an enum type named EStatusBits.; If some of the duplication is intentional, those duplication can; be registered in an enum type named EStatusBitsDupExceptions. ~~~ {.cpp}; // TStreamerElement status bits; enum EStatusBits {; kHasRange = BIT(6),; kCache = BIT(9),; kRepeat = BIT(10),; kRead = BIT(11),; kWrite = BIT(12),; kDoNotDelete = BIT(13),; kWholeObject = BIT(14); };. enum class EStatusBitsDupExceptions {; // This bit duplicates TObject::kInvalidObject. As the semantic of kDoNotDelete is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kInvalidObject and its semantic is not (and should not be); // used in TStreamerElement; kDoNotDelete = TStreamerElement::kDoNotDelete,. // This bit duplicates TObject::kCannotPick. As the semantic of kHasRange is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kCannotPick and its semantic is not (and should not be); // used in TStreamerElement; kHasRange = TStreamerElement::kHasRange; };; ~~~ {.cpp}. Without the EStatusBitsDupExceptions enum you would see. ~~~ {.cpp}; TStatusBitsChecker::Check(""TStreamerElement"");. Error in `<TStatusBitsChecker>`: In TStreamerElement class hierarchy, there are duplicates bits:; Error in `<TStatusBitsChecker>`: Bit 6 used in TStreamerElement as kHasRange; Error in `<TStatusBitsChecker>`: Bit 6 used in TObject as kCannotPick; Error in `<TStatusBitsChecker>`: Bit 13 used in TStreamerElement as kDoNotDelete; Error in `<TStatusBitsChecker>`: Bit 13 used in TObject as kInvalidObject; ~~~ {.cpp}. */",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:1949,Availability,Error,Error,1949," contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStatusBitsChecker. TStatusBitsChecker::Check and TStatusBitsChecker::CheckAllClasses will; determine if the set of ""status bit"" declared in the class and its; base classes presents any overlap. The status bit are declared in; a given class by declaring an enum type named EStatusBits.; If some of the duplication is intentional, those duplication can; be registered in an enum type named EStatusBitsDupExceptions. ~~~ {.cpp}; // TStreamerElement status bits; enum EStatusBits {; kHasRange = BIT(6),; kCache = BIT(9),; kRepeat = BIT(10),; kRead = BIT(11),; kWrite = BIT(12),; kDoNotDelete = BIT(13),; kWholeObject = BIT(14); };. enum class EStatusBitsDupExceptions {; // This bit duplicates TObject::kInvalidObject. As the semantic of kDoNotDelete is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kInvalidObject and its semantic is not (and should not be); // used in TStreamerElement; kDoNotDelete = TStreamerElement::kDoNotDelete,. // This bit duplicates TObject::kCannotPick. As the semantic of kHasRange is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kCannotPick and its semantic is not (and should not be); // used in TStreamerElement; kHasRange = TStreamerElement::kHasRange; };; ~~~ {.cpp}. Without the EStatusBitsDupExceptions enum you would see. ~~~ {.cpp}; TStatusBitsChecker::Check(""TStreamerElement"");. Error in `<TStatusBitsChecker>`: In TStreamerElement class hierarchy, there are duplicates bits:; Error in `<TStatusBitsChecker>`: Bit 6 used in TStreamerElement as kHasRange; Error in `<TStatusBitsChecker>`: Bit 6 used in TObject as kCannotPick; Error in `<TStatusBitsChecker>`: Bit 13 used in TStreamerElement as kDoNotDelete; Error in `<TStatusBitsChecker>`: Bit 13 used in TObject as kInvalidObject; ~~~ {.cpp}. */",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:2027,Availability,Error,Error,2027," contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStatusBitsChecker. TStatusBitsChecker::Check and TStatusBitsChecker::CheckAllClasses will; determine if the set of ""status bit"" declared in the class and its; base classes presents any overlap. The status bit are declared in; a given class by declaring an enum type named EStatusBits.; If some of the duplication is intentional, those duplication can; be registered in an enum type named EStatusBitsDupExceptions. ~~~ {.cpp}; // TStreamerElement status bits; enum EStatusBits {; kHasRange = BIT(6),; kCache = BIT(9),; kRepeat = BIT(10),; kRead = BIT(11),; kWrite = BIT(12),; kDoNotDelete = BIT(13),; kWholeObject = BIT(14); };. enum class EStatusBitsDupExceptions {; // This bit duplicates TObject::kInvalidObject. As the semantic of kDoNotDelete is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kInvalidObject and its semantic is not (and should not be); // used in TStreamerElement; kDoNotDelete = TStreamerElement::kDoNotDelete,. // This bit duplicates TObject::kCannotPick. As the semantic of kHasRange is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kCannotPick and its semantic is not (and should not be); // used in TStreamerElement; kHasRange = TStreamerElement::kHasRange; };; ~~~ {.cpp}. Without the EStatusBitsDupExceptions enum you would see. ~~~ {.cpp}; TStatusBitsChecker::Check(""TStreamerElement"");. Error in `<TStatusBitsChecker>`: In TStreamerElement class hierarchy, there are duplicates bits:; Error in `<TStatusBitsChecker>`: Bit 6 used in TStreamerElement as kHasRange; Error in `<TStatusBitsChecker>`: Bit 6 used in TObject as kCannotPick; Error in `<TStatusBitsChecker>`: Bit 13 used in TStreamerElement as kDoNotDelete; Error in `<TStatusBitsChecker>`: Bit 13 used in TObject as kInvalidObject; ~~~ {.cpp}. */",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:2098,Availability,Error,Error,2098," contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStatusBitsChecker. TStatusBitsChecker::Check and TStatusBitsChecker::CheckAllClasses will; determine if the set of ""status bit"" declared in the class and its; base classes presents any overlap. The status bit are declared in; a given class by declaring an enum type named EStatusBits.; If some of the duplication is intentional, those duplication can; be registered in an enum type named EStatusBitsDupExceptions. ~~~ {.cpp}; // TStreamerElement status bits; enum EStatusBits {; kHasRange = BIT(6),; kCache = BIT(9),; kRepeat = BIT(10),; kRead = BIT(11),; kWrite = BIT(12),; kDoNotDelete = BIT(13),; kWholeObject = BIT(14); };. enum class EStatusBitsDupExceptions {; // This bit duplicates TObject::kInvalidObject. As the semantic of kDoNotDelete is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kInvalidObject and its semantic is not (and should not be); // used in TStreamerElement; kDoNotDelete = TStreamerElement::kDoNotDelete,. // This bit duplicates TObject::kCannotPick. As the semantic of kHasRange is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kCannotPick and its semantic is not (and should not be); // used in TStreamerElement; kHasRange = TStreamerElement::kHasRange; };; ~~~ {.cpp}. Without the EStatusBitsDupExceptions enum you would see. ~~~ {.cpp}; TStatusBitsChecker::Check(""TStreamerElement"");. Error in `<TStatusBitsChecker>`: In TStreamerElement class hierarchy, there are duplicates bits:; Error in `<TStatusBitsChecker>`: Bit 6 used in TStreamerElement as kHasRange; Error in `<TStatusBitsChecker>`: Bit 6 used in TObject as kCannotPick; Error in `<TStatusBitsChecker>`: Bit 13 used in TStreamerElement as kDoNotDelete; Error in `<TStatusBitsChecker>`: Bit 13 used in TObject as kInvalidObject; ~~~ {.cpp}. */",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:2180,Availability,Error,Error,2180," contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStatusBitsChecker. TStatusBitsChecker::Check and TStatusBitsChecker::CheckAllClasses will; determine if the set of ""status bit"" declared in the class and its; base classes presents any overlap. The status bit are declared in; a given class by declaring an enum type named EStatusBits.; If some of the duplication is intentional, those duplication can; be registered in an enum type named EStatusBitsDupExceptions. ~~~ {.cpp}; // TStreamerElement status bits; enum EStatusBits {; kHasRange = BIT(6),; kCache = BIT(9),; kRepeat = BIT(10),; kRead = BIT(11),; kWrite = BIT(12),; kDoNotDelete = BIT(13),; kWholeObject = BIT(14); };. enum class EStatusBitsDupExceptions {; // This bit duplicates TObject::kInvalidObject. As the semantic of kDoNotDelete is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kInvalidObject and its semantic is not (and should not be); // used in TStreamerElement; kDoNotDelete = TStreamerElement::kDoNotDelete,. // This bit duplicates TObject::kCannotPick. As the semantic of kHasRange is a persistent,; // we can not change its value without breaking forward compatibility.; // Furthermore, TObject::kCannotPick and its semantic is not (and should not be); // used in TStreamerElement; kHasRange = TStreamerElement::kHasRange; };; ~~~ {.cpp}. Without the EStatusBitsDupExceptions enum you would see. ~~~ {.cpp}; TStatusBitsChecker::Check(""TStreamerElement"");. Error in `<TStatusBitsChecker>`: In TStreamerElement class hierarchy, there are duplicates bits:; Error in `<TStatusBitsChecker>`: Bit 6 used in TStreamerElement as kHasRange; Error in `<TStatusBitsChecker>`: Bit 6 used in TObject as kCannotPick; Error in `<TStatusBitsChecker>`: Bit 13 used in TStreamerElement as kDoNotDelete; Error in `<TStatusBitsChecker>`: Bit 13 used in TObject as kInvalidObject; ~~~ {.cpp}. */",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:27,Availability,error,errors,27,"// frexp doc is:; // if no errors occur,; // returns the value x in the range (-1;-0.5], [0.5; 1); // and stores an integer value in *exp such that x×2^(*exp) = arg",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:34,Availability,error,error,34,"/// @brief Return false and print error messages if there is any unexpected; /// duplicates BIT constant in the class hierarchy or any of the bits; /// already registered.; /// If verbose is true, also print all the bit declare in this class; /// and all its bases.",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:40,Integrability,message,messages,40,"/// @brief Return false and print error messages if there is any unexpected; /// duplicates BIT constant in the class hierarchy or any of the bits; /// already registered.; /// If verbose is true, also print all the bit declare in this class; /// and all its bases.",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:27,Availability,error,error,27,"/// Return false and print error messages if there is any unexpected; /// duplicates BIT constant in the class hierarchy.; /// If verbose is true, also print all the bit declare in this class; /// and all its bases.",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:33,Integrability,message,messages,33,"/// Return false and print error messages if there is any unexpected; /// duplicates BIT constant in the class hierarchy.; /// If verbose is true, also print all the bit declare in this class; /// and all its bases.",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:27,Availability,error,error,27,"/// Return false and print error messages if there is any unexpected; /// duplicates BIT constant in the class hierarchy.; /// If verbose is true, also print all the bit declare in this class; /// and all its bases.",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:33,Integrability,message,messages,33,"/// Return false and print error messages if there is any unexpected; /// duplicates BIT constant in the class hierarchy.; /// If verbose is true, also print all the bit declare in this class; /// and all its bases.",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:27,Availability,error,error,27,"/// Return false and print error messages if there is any unexpected; /// duplicates BIT constant in any of the class hierarchy knows; /// to TClassTable.; /// If verbose is true, also print all the bit declare in eacho of the classes; /// and all their bases.",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx:33,Integrability,message,messages,33,"/// Return false and print error messages if there is any unexpected; /// duplicates BIT constant in any of the class hierarchy knows; /// to TClassTable.; /// If verbose is true, also print all the bit declare in eacho of the classes; /// and all their bases.",MatchSource.CODE_COMMENT,core/meta/src/TStatusBitsChecker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStatusBitsChecker.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:167,Performance,cache,cached,167,"////////////////////////////////////////////////////////////////////////////////; /// Fill type with the string representation of sequence; /// information including 'cached','repeat','write' or; /// 'nodelete'.",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:212,Safety,detect,detected,212,"////////////////////////////////////////////////////////////////////////////////; /// The early 3.00/00 and 3.01/01 versions used to store; /// dm->GetTypeName instead of dm->GetFullTypename; /// if this case is detected, the element type name is modified.",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:191,Performance,cache,cache,191,"////////////////////////////////////////////////////////////////////////////////; /// Return kTRUE if the element represent an entity that is not written; /// to the disk (transient members, cache allocator/deallocator, etc.)",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:104,Performance,load,loaded,104,"// Well since some emulated class is replaced by a real class, we can; // assume a new library has been loaded. If this is the case, we should; // check whether the class now exist (this would be the case for example; // for reading STL containers).",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:75,Performance,load,loaded,75,"// If the class owning the TStreamerElement and the base class are not; // loaded, on the file their streamer info might be in the following; // order (derived class,base class) and hence the base class is not; // yet emulated.",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:35,Modifiability,inherit,inheritance,35,"// FIXME: does not suport multiple inheritance for counter in base class.; // This is wrong in case counter is not in the same class or one of; // the left most (non virtual) base classes. For the other we would; // really need to use the object coming from the list of real data.; // (and even that need analysis for virtual base class).",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:243,Modifiability,inherit,inherits,243,"//______________________________________________________________________________; //////////////////////////////////////////////////////////////////////////; // //; // TStreamerObject implements streaming of embedded objects whose type //; // inherits from TObject. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:237,Modifiability,inherit,inheriting,237,"//______________________________________________________________________________; //////////////////////////////////////////////////////////////////////////; // //; // TStreamerObjectAny implement streaming of embedded object not //; // inheriting from TObject. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:240,Modifiability,inherit,inheriting,240,"//______________________________________________________________________________; //////////////////////////////////////////////////////////////////////////; // //; // TStreamerObjectPointer implements streaming of pointer to object //; // inheriting from TObject. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:247,Modifiability,inherit,inheriting,247,"//______________________________________________________________________________; //////////////////////////////////////////////////////////////////////////; // //; // TStreamerObjectPointerAny implements streaming of pointer to object //; // not inheriting from TObject. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:128,Modifiability,variab,variable,128,"////////////////////////////////////////////////////////////////////////////////; /// We can not split STL's which are inside a variable size array.; /// At least for now.",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:17,Modifiability,variab,variable,17,"// can not split variable size array",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:94,Integrability,depend,depends,94,"// Since the STL collection might or might not be emulated and that the; // sizeof the object depends on this, let's just always retrieve the; // current size!",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:3,Safety,Avoid,Avoid,3,"// Avoid resetting during a cloning.",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:220,Integrability,inject,injected,220,"//______________________________________________________________________________; ///////////////////////////////////////////////////////////////////////////////; // //; // TStreamerArtificial implements StreamerElement injected by a TSchemaRule. //; // //; ///////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:220,Security,inject,injected,220,"//______________________________________________________________________________; ///////////////////////////////////////////////////////////////////////////////; // //; // TStreamerArtificial implements StreamerElement injected by a TSchemaRule. //; // //; ///////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:3,Safety,Avoid,Avoid,3,"// Avoid streaming the synthetic/artificial streamer elements.; // Intentionally, nothing to do at all.",MatchSource.CODE_COMMENT,core/meta/src/TStreamerElement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx:481,Integrability,interface,interface,481,"// @(#)root/cont:$Id$; // Author: Philippe Canal October 2013; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TViewPubDataMembers; View implementing the TList interface and giving access all the; TDictionary describing public data members in a class and all its; base classes without caching any of the TDictionary pointers. Adding to this collection directly is prohibited.; Iteration can only be done via the TIterator interfaces.; */",MatchSource.CODE_COMMENT,core/meta/src/TViewPubDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx:743,Integrability,interface,interfaces,743,"// @(#)root/cont:$Id$; // Author: Philippe Canal October 2013; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TViewPubDataMembers; View implementing the TList interface and giving access all the; TDictionary describing public data members in a class and all its; base classes without caching any of the TDictionary pointers. Adding to this collection directly is prohibited.; Iteration can only be done via the TIterator interfaces.; */",MatchSource.CODE_COMMENT,core/meta/src/TViewPubDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx:502,Security,access,access,502,"// @(#)root/cont:$Id$; // Author: Philippe Canal October 2013; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TViewPubDataMembers; View implementing the TList interface and giving access all the; TDictionary describing public data members in a class and all its; base classes without caching any of the TDictionary pointers. Adding to this collection directly is prohibited.; Iteration can only be done via the TIterator interfaces.; */",MatchSource.CODE_COMMENT,core/meta/src/TViewPubDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear is not allowed in this class.; /// See TList::Clear for the intended behavior.",MatchSource.CODE_COMMENT,core/meta/src/TViewPubDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx:138,Usability,Clear,Clear,138,"////////////////////////////////////////////////////////////////////////////////; /// Clear is not allowed in this class.; /// See TList::Clear for the intended behavior.",MatchSource.CODE_COMMENT,core/meta/src/TViewPubDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx:37,Security,hash,hash,37,"// The 'ListForObject' is actually a hash table bucket that can also; // contain other element/name.",MatchSource.CODE_COMMENT,core/meta/src/TViewPubDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx:143,Performance,load,loaded,143,"////////////////////////////////////////////////////////////////////////////////; /// Return the total number of public data members(currently loaded in the list; /// of DataMembers) in this class and all its base classes.",MatchSource.CODE_COMMENT,core/meta/src/TViewPubDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load all the DataMembers known to the interpreter for the scope 'fClass'; /// and all its bases classes.",MatchSource.CODE_COMMENT,core/meta/src/TViewPubDataMembers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.h:21,Integrability,rout,routines,21,"// All the following routines are explicitly disallow/unsupported for; // a view",MatchSource.CODE_COMMENT,core/meta/src/TViewPubDataMembers.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx:479,Integrability,interface,interface,479,"// @(#)root/cont:$Id$; // Author: Philippe Canal October 2013; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TViewPubFunctions; View implementing the TList interface and giving access all the; TFunction describing public methods in a class and all its base; classes without caching any of the TFunction pointers. Adding to this collection directly is prohibited.; Iteration can only be done via the TIterator interfaces.; */",MatchSource.CODE_COMMENT,core/meta/src/TViewPubFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx:732,Integrability,interface,interfaces,732,"// @(#)root/cont:$Id$; // Author: Philippe Canal October 2013; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TViewPubFunctions; View implementing the TList interface and giving access all the; TFunction describing public methods in a class and all its base; classes without caching any of the TFunction pointers. Adding to this collection directly is prohibited.; Iteration can only be done via the TIterator interfaces.; */",MatchSource.CODE_COMMENT,core/meta/src/TViewPubFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx:500,Security,access,access,500,"// @(#)root/cont:$Id$; // Author: Philippe Canal October 2013; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TViewPubFunctions; View implementing the TList interface and giving access all the; TFunction describing public methods in a class and all its base; classes without caching any of the TFunction pointers. Adding to this collection directly is prohibited.; Iteration can only be done via the TIterator interfaces.; */",MatchSource.CODE_COMMENT,core/meta/src/TViewPubFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear is not allowed in this class.; /// See TList::Clear for the intended behavior.",MatchSource.CODE_COMMENT,core/meta/src/TViewPubFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx:138,Usability,Clear,Clear,138,"////////////////////////////////////////////////////////////////////////////////; /// Clear is not allowed in this class.; /// See TList::Clear for the intended behavior.",MatchSource.CODE_COMMENT,core/meta/src/TViewPubFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx:139,Performance,load,loaded,139,"////////////////////////////////////////////////////////////////////////////////; /// Return the total number of public methods (currently loaded in the list; /// of functions) in this class and all its base classes.",MatchSource.CODE_COMMENT,core/meta/src/TViewPubFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load all the functions known to the interpreter for the scope 'fClass'; /// and all its bases classes.",MatchSource.CODE_COMMENT,core/meta/src/TViewPubFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.h:21,Integrability,rout,routines,21,"// All the following routines are explicitly disallow/unsupported for; // a view",MatchSource.CODE_COMMENT,core/meta/src/TViewPubFunctions.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.h:27,Security,hash,hashtable,27,"// Doubly linked list with hashtable for lookup",MatchSource.CODE_COMMENT,core/meta/src/TViewPubFunctions.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.h
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx:456,Integrability,Interface,Interface,456,"// @(#)root/base:$Id$; // Author: Rene Brun 05/02/2007; /*************************************************************************; * Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualStreamerInfo; Abstract Interface class describing Streamer information for one class.; */",MatchSource.CODE_COMMENT,core/meta/src/TVirtualStreamerInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx:120,Performance,optimiz,optimization,120,"////////////////////////////////////////////////////////////////////////////////; /// static function returning true if optimization can be on",MatchSource.CODE_COMMENT,core/meta/src/TVirtualStreamerInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx:484,Testability,test,testing,484,"// Even if the streamerInfo exist, it could still need to be 'build'; // It is important to figure this out, because; // a) if it is not build, we need to build; // b) if is build, we should not build it (or we could end up in an; // infinite loop, if the element and its counter are in the same; // class!; // Checking IsCompiled is sufficient here even-though it is set only at; // the end of the call to Build as this function has an; // internal recursion prevention (setting and testing kBuildRunning).",MatchSource.CODE_COMMENT,core/meta/src/TVirtualStreamerInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx:532,Modifiability,polymorphi,polymorphism,532,"////////////////////////////////////////////////////////////////////////////////; /// Return whether the TStreamerInfos will save the collections in; /// ""member-wise"" order whenever possible. The default is to store member-wise.; /// - kTRUE indicates member-wise storing; /// - kFALSE inddicates object-wise storing; ///; /// A collection can be saved member wise when it contain is guaranteed to be; /// homogeneous. For example std::vector<THit> can be stored member wise,; /// while std::vector<THit*> can not (possible use of polymorphism).",MatchSource.CODE_COMMENT,core/meta/src/TVirtualStreamerInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx:122,Performance,optimiz,optimization,122,"////////////////////////////////////////////////////////////////////////////////; /// This is a static function.; /// Set optimization option.; /// When this option is activated (default), consecutive data members; /// of the same type are merged into an array (faster).; /// Optimization must be off in TTree split mode.",MatchSource.CODE_COMMENT,core/meta/src/TVirtualStreamerInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx:276,Performance,Optimiz,Optimization,276,"////////////////////////////////////////////////////////////////////////////////; /// This is a static function.; /// Set optimization option.; /// When this option is activated (default), consecutive data members; /// of the same type are merged into an array (faster).; /// Optimization must be off in TTree split mode.",MatchSource.CODE_COMMENT,core/meta/src/TVirtualStreamerInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx:223,Modifiability,plugin,plugin,223,"////////////////////////////////////////////////////////////////////////////////; /// Static function returning a pointer to a new TVirtualStreamerInfo object.; /// If the Info factory does not exist, it is created via the plugin manager.; /// In reality the factory is an empty TStreamerInfo object.",MatchSource.CODE_COMMENT,core/meta/src/TVirtualStreamerInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx:205,Modifiability,polymorphi,polymorphism,205,"// A collection can be saved member wise when it contain is guaranteed to be; // homogeneous. For example std::vector<THit> can be stored member wise,; // while std::vector<THit*> can not (possible use of polymorphism).",MatchSource.CODE_COMMENT,core/meta/src/TVirtualStreamerInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:2465,Energy Efficiency,energy,energy,2465,"{; public:; virtual int Get() = 0;. ClassDef(SecondAbstract, 2);; };. class Third : public SecondAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(Third, 2);; };. class FirstOverloadCorrect : public TObject; {; public:; ~FirstOverloadCorrect() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }; virtual ULong_t Hash() const { return 3; }. ClassDefInline(FirstOverloadCorrect, 2);; };. class SecondCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondCorrectAbstract, 2);; };. class SecondCorrectAbstractHash : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; ~SecondCorrectAbstractHash() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }. virtual ULong_t Hash() const { return 4; }; virtual int Get() = 0;. ClassDef(SecondCorrectAbstractHash, 2);; };. class ThirdCorrect : public SecondCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdCorrect, 2);; };. class SecondInCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 5; }; virtual int Get() = 0;. ClassDef(SecondInCorrectAbstract, 2);; };. class ThirdInCorrect : public SecondInCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdInCorrect, 2);; };. // Just declare this one so Cling will know it, but; // do not use it to avoid the TClass being stuck in; // kInterpreted state.; class WrongSetup : public TObject; {; public:; virtual ULong_t Hash() const { return 6; }. ClassDefInline(WrongSetup, 2);; };. // This example is valid according to C++11, 9.2/16: In addition, if class T has a user-declared constructor (12.1),; // every non-static data member of class T shall have a name different from T.; //; class Rho: public TObject; {; public:; Float_t Rho; // rho energy density; Float_t Edges[2]; // pseudorapidity range edges. ClassDef(Rho, 1); };; )CODE""",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:2020,Safety,avoid,avoid,2020,"{; public:; virtual int Get() = 0;. ClassDef(SecondAbstract, 2);; };. class Third : public SecondAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(Third, 2);; };. class FirstOverloadCorrect : public TObject; {; public:; ~FirstOverloadCorrect() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }; virtual ULong_t Hash() const { return 3; }. ClassDefInline(FirstOverloadCorrect, 2);; };. class SecondCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondCorrectAbstract, 2);; };. class SecondCorrectAbstractHash : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; ~SecondCorrectAbstractHash() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }. virtual ULong_t Hash() const { return 4; }; virtual int Get() = 0;. ClassDef(SecondCorrectAbstractHash, 2);; };. class ThirdCorrect : public SecondCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdCorrect, 2);; };. class SecondInCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 5; }; virtual int Get() = 0;. ClassDef(SecondInCorrectAbstract, 2);; };. class ThirdInCorrect : public SecondInCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdInCorrect, 2);; };. // Just declare this one so Cling will know it, but; // do not use it to avoid the TClass being stuck in; // kInterpreted state.; class WrongSetup : public TObject; {; public:; virtual ULong_t Hash() const { return 6; }. ClassDefInline(WrongSetup, 2);; };. // This example is valid according to C++11, 9.2/16: In addition, if class T has a user-declared constructor (12.1),; // every non-static data member of class T shall have a name different from T.; //; class Rho: public TObject; {; public:; Float_t Rho; // rho energy density; Float_t Edges[2]; // pseudorapidity range edges. ClassDef(Rho, 1); };; )CODE""",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:116,Security,Hash,Hash,116,"R""CODE(. #include ""TROOT.h""; #include <iostream>. class FirstOverload : public TObject; {; public:; virtual ULong_t Hash() const { return 1; }. ClassDefInline(FirstOverload, 2);; };. class SecondOverload : public FirstOverload // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 2; }. ClassDefInline(SecondOverload, 2);; };. class SecondNoHash : public FirstOverload // Could also have used TNamed.; {; public:. ClassDefInline(SecondNoHash, 2);; };. class SecondAbstract : public FirstOverload // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondAbstract, 2);; };. class Third : public SecondAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(Third, 2);; };. class FirstOverloadCorrect : public TObject; {; public:; ~FirstOverloadCorrect() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }; virtual ULong_t Hash() const { return 3; }. ClassDefInline(FirstOverloadCorrect, 2);; };. class SecondCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondCorrectAbstract, 2);; };. class SecondCorrectAbstractHash : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; ~SecondCorrectAbstractHash() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }. virtual ULong_t Hash() const { return 4; }; virtual int Get() = 0;. ClassDef(SecondCorrectAbstractHash, 2);; };. class ThirdCorrect : public SecondCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdCorrect, 2);; };. class SecondInCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 5; }; virtual int Get() = 0;. ClassDef(SecondInCorrectAbstract, 2);; };. class ThirdInCorrect : public SecondInCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdInCorrect, 2);; };. // Just declare this one so Cling will know it, but; /",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:288,Security,Hash,Hash,288,"R""CODE(. #include ""TROOT.h""; #include <iostream>. class FirstOverload : public TObject; {; public:; virtual ULong_t Hash() const { return 1; }. ClassDefInline(FirstOverload, 2);; };. class SecondOverload : public FirstOverload // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 2; }. ClassDefInline(SecondOverload, 2);; };. class SecondNoHash : public FirstOverload // Could also have used TNamed.; {; public:. ClassDefInline(SecondNoHash, 2);; };. class SecondAbstract : public FirstOverload // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondAbstract, 2);; };. class Third : public SecondAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(Third, 2);; };. class FirstOverloadCorrect : public TObject; {; public:; ~FirstOverloadCorrect() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }; virtual ULong_t Hash() const { return 3; }. ClassDefInline(FirstOverloadCorrect, 2);; };. class SecondCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondCorrectAbstract, 2);; };. class SecondCorrectAbstractHash : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; ~SecondCorrectAbstractHash() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }. virtual ULong_t Hash() const { return 4; }; virtual int Get() = 0;. ClassDef(SecondCorrectAbstractHash, 2);; };. class ThirdCorrect : public SecondCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdCorrect, 2);; };. class SecondInCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 5; }; virtual int Get() = 0;. ClassDef(SecondInCorrectAbstract, 2);; };. class ThirdInCorrect : public SecondInCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdInCorrect, 2);; };. // Just declare this one so Cling will know it, but; /",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:897,Security,Hash,Hash,897,"R""CODE(. #include ""TROOT.h""; #include <iostream>. class FirstOverload : public TObject; {; public:; virtual ULong_t Hash() const { return 1; }. ClassDefInline(FirstOverload, 2);; };. class SecondOverload : public FirstOverload // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 2; }. ClassDefInline(SecondOverload, 2);; };. class SecondNoHash : public FirstOverload // Could also have used TNamed.; {; public:. ClassDefInline(SecondNoHash, 2);; };. class SecondAbstract : public FirstOverload // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondAbstract, 2);; };. class Third : public SecondAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(Third, 2);; };. class FirstOverloadCorrect : public TObject; {; public:; ~FirstOverloadCorrect() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }; virtual ULong_t Hash() const { return 3; }. ClassDefInline(FirstOverloadCorrect, 2);; };. class SecondCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondCorrectAbstract, 2);; };. class SecondCorrectAbstractHash : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; ~SecondCorrectAbstractHash() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }. virtual ULong_t Hash() const { return 4; }; virtual int Get() = 0;. ClassDef(SecondCorrectAbstractHash, 2);; };. class ThirdCorrect : public SecondCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdCorrect, 2);; };. class SecondInCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 5; }; virtual int Get() = 0;. ClassDef(SecondInCorrectAbstract, 2);; };. class ThirdInCorrect : public SecondInCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdInCorrect, 2);; };. // Just declare this one so Cling will know it, but; /",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:1340,Security,Hash,Hash,1340,"lass SecondNoHash : public FirstOverload // Could also have used TNamed.; {; public:. ClassDefInline(SecondNoHash, 2);; };. class SecondAbstract : public FirstOverload // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondAbstract, 2);; };. class Third : public SecondAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(Third, 2);; };. class FirstOverloadCorrect : public TObject; {; public:; ~FirstOverloadCorrect() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }; virtual ULong_t Hash() const { return 3; }. ClassDefInline(FirstOverloadCorrect, 2);; };. class SecondCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondCorrectAbstract, 2);; };. class SecondCorrectAbstractHash : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; ~SecondCorrectAbstractHash() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }. virtual ULong_t Hash() const { return 4; }; virtual int Get() = 0;. ClassDef(SecondCorrectAbstractHash, 2);; };. class ThirdCorrect : public SecondCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdCorrect, 2);; };. class SecondInCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 5; }; virtual int Get() = 0;. ClassDef(SecondInCorrectAbstract, 2);; };. class ThirdInCorrect : public SecondInCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdInCorrect, 2);; };. // Just declare this one so Cling will know it, but; // do not use it to avoid the TClass being stuck in; // kInterpreted state.; class WrongSetup : public TObject; {; public:; virtual ULong_t Hash() const { return 6; }. ClassDefInline(WrongSetup, 2);; };. // This example is valid according to C++11, 9.2/16: In addition, if class T has a user-declared constructor (12.1),; // every non-static data member of ",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:1702,Security,Hash,Hash,1702,"{; public:; virtual int Get() = 0;. ClassDef(SecondAbstract, 2);; };. class Third : public SecondAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(Third, 2);; };. class FirstOverloadCorrect : public TObject; {; public:; ~FirstOverloadCorrect() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }; virtual ULong_t Hash() const { return 3; }. ClassDefInline(FirstOverloadCorrect, 2);; };. class SecondCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondCorrectAbstract, 2);; };. class SecondCorrectAbstractHash : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; ~SecondCorrectAbstractHash() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }. virtual ULong_t Hash() const { return 4; }; virtual int Get() = 0;. ClassDef(SecondCorrectAbstractHash, 2);; };. class ThirdCorrect : public SecondCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdCorrect, 2);; };. class SecondInCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 5; }; virtual int Get() = 0;. ClassDef(SecondInCorrectAbstract, 2);; };. class ThirdInCorrect : public SecondInCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdInCorrect, 2);; };. // Just declare this one so Cling will know it, but; // do not use it to avoid the TClass being stuck in; // kInterpreted state.; class WrongSetup : public TObject; {; public:; virtual ULong_t Hash() const { return 6; }. ClassDefInline(WrongSetup, 2);; };. // This example is valid according to C++11, 9.2/16: In addition, if class T has a user-declared constructor (12.1),; // every non-static data member of class T shall have a name different from T.; //; class Rho: public TObject; {; public:; Float_t Rho; // rho energy density; Float_t Edges[2]; // pseudorapidity range edges. ClassDef(Rho, 1); };; )CODE""",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:2140,Security,Hash,Hash,2140,"{; public:; virtual int Get() = 0;. ClassDef(SecondAbstract, 2);; };. class Third : public SecondAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(Third, 2);; };. class FirstOverloadCorrect : public TObject; {; public:; ~FirstOverloadCorrect() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }; virtual ULong_t Hash() const { return 3; }. ClassDefInline(FirstOverloadCorrect, 2);; };. class SecondCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondCorrectAbstract, 2);; };. class SecondCorrectAbstractHash : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; ~SecondCorrectAbstractHash() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }. virtual ULong_t Hash() const { return 4; }; virtual int Get() = 0;. ClassDef(SecondCorrectAbstractHash, 2);; };. class ThirdCorrect : public SecondCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdCorrect, 2);; };. class SecondInCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 5; }; virtual int Get() = 0;. ClassDef(SecondInCorrectAbstract, 2);; };. class ThirdInCorrect : public SecondInCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdInCorrect, 2);; };. // Just declare this one so Cling will know it, but; // do not use it to avoid the TClass being stuck in; // kInterpreted state.; class WrongSetup : public TObject; {; public:; virtual ULong_t Hash() const { return 6; }. ClassDefInline(WrongSetup, 2);; };. // This example is valid according to C++11, 9.2/16: In addition, if class T has a user-declared constructor (12.1),; // every non-static data member of class T shall have a name different from T.; //; class Rho: public TObject; {; public:; Float_t Rho; // rho energy density; Float_t Edges[2]; // pseudorapidity range edges. ClassDef(Rho, 1); };; )CODE""",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:3,Testability,test,testing,3,"// testing::internal::CaptureStderr();",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:24,Testability,test,testing,24,"// std::string output = testing::internal::GetCapturedStderr();; // EXPECT_EQ(gErrorOutput,output);",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:19,Availability,redundant,redundant,19,"// Avoid spurrious/redundant error messages in case of failure.",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:29,Availability,error,error,29,"// Avoid spurrious/redundant error messages in case of failure.",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:55,Availability,failure,failure,55,"// Avoid spurrious/redundant error messages in case of failure.",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:35,Integrability,message,messages,35,"// Avoid spurrious/redundant error messages in case of failure.",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:3,Safety,Avoid,Avoid,3,"// Avoid spurrious/redundant error messages in case of failure.",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:19,Safety,redund,redundant,19,"// Avoid spurrious/redundant error messages in case of failure.",MatchSource.CODE_COMMENT,core/meta/test/testHashRecursiveRemove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/ClingRAII.h:114,Availability,down,down,114,"// We can't PushDeclContext, because we go up and the routine that pops; // the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.",MatchSource.CODE_COMMENT,core/metacling/src/ClingRAII.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/ClingRAII.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/ClingRAII.h:54,Integrability,rout,routine,54,"// We can't PushDeclContext, because we go up and the routine that pops; // the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.",MatchSource.CODE_COMMENT,core/metacling/src/ClingRAII.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/ClingRAII.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/ClingRAII.h:198,Integrability,wrap,wrapper,198,"// We can't PushDeclContext, because we go up and the routine that pops; // the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.",MatchSource.CODE_COMMENT,core/metacling/src/ClingRAII.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/ClingRAII.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/ClingRAII.h:81,Safety,safe,safe,81,"// After we have saved the token reset the current one to something which; // is safe (semi colon usually means empty decl)",MatchSource.CODE_COMMENT,core/metacling/src/ClingRAII.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/ClingRAII.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:469,Integrability,interface,interface,469,"// @(#)root/meta:$Id$; // vim: sw=3 ts=3 expandtab foldmethod=indent; /*************************************************************************; * Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TCling. This class defines an interface to the cling C++ interpreter. Cling is a full ANSI compliant C++-11 interpreter based on; clang/LLVM technology.; */",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:36,Modifiability,plugin,plugin,36,"// This is here to avoid to use the plugin manager",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:19,Safety,avoid,avoid,19,"// This is here to avoid to use the plugin manager",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:117,Testability,test,testing,117,"//______________________________________________________________________________; // These functions are helpers for testing issues directly rather than; // relying on side effects.; // This is used for the test for ROOT-7462/ROOT-6070",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:207,Testability,test,test,207,"//______________________________________________________________________________; // These functions are helpers for testing issues directly rather than; // relying on side effects.; // This is used for the test for ROOT-7462/ROOT-6070",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:26,Availability,Error,Error,26,"// The macros below use ::Error, so let's ensure it is included",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:712,Availability,Error,Error,712,"R""ICF(; #include ""TError.h"". #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; private: \; public: \; static TClass *Class() { static TClass* sIsA = 0; if (!sIsA) sIsA = TClass::GetClass(#name); return sIsA; } \; static const char *Class_Name() { return #name; } \; virtual_keyword Bool_t CheckTObjectHashConsistency() const overrd { return true; } \; static Version_t Class_Version() { return id; } \; static TClass *Dictionary() { return 0; } \; virtual_keyword TClass *IsA() const overrd { return name::Class(); } \; virtual_keyword void ShowMembers(TMemberInspector&insp) const overrd { ::ROOT::Class_ShowMembers(name::Class(), this, insp); } \; virtual_keyword void Streamer(TBuffer&) overrd { ::Error(""Streamer"", ""Cannot stream interpreted class.""); } \; void StreamerNVirtual(TBuffer&ClassDef_StreamerNVirtual_b) { name::Streamer(ClassDef_StreamerNVirtual_b); } \; static const char *DeclFileName() { return __FILE__; } \; static int ImplFileLine() { return 0; } \; static const char *ImplFileName() { return __FILE__; }; )ICF""",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:29,Integrability,bridg,bridge,29,"// The functions are used to bridge cling/clang/llvm compiled with no-rtti and; // ROOT (which uses rtti); ////////////////////////////////////////////////////////////////////////////////; /// Print a StackTrace!",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load a library.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:190,Availability,error,error,190,"////////////////////////////////////////////////////////////////////////////////; /// Lookup libraries in LD_LIBRARY_PATH and DYLD_LIBRARY_PATH with mangled_name,; /// which is extracted by error messages we get from callback from cling. Return true; /// when the missing library was autoloaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:196,Integrability,message,messages,196,"////////////////////////////////////////////////////////////////////////////////; /// Lookup libraries in LD_LIBRARY_PATH and DYLD_LIBRARY_PATH with mangled_name,; /// which is extracted by error messages we get from callback from cling. Return true; /// when the missing library was autoloaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update TClingClassInfo for a class (e.g. upon seeing a definition).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:71,Deployability,Update,UpdateClassInfo,71,"// If we are called indirectly from within another call to; // TCling::UpdateClassInfo, we delay the update until the dictionary loading; // is finished (i.e. when we return to the top level TCling::UpdateClassInfo).; // This allows for the dictionary to be fully populated when we actually; // update the TClass object. The updating of the TClass sometimes; // (STL containers and when there is an emulated class) forces the building; // of the TClass object's real data (which needs the dictionary info).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:101,Deployability,update,update,101,"// If we are called indirectly from within another call to; // TCling::UpdateClassInfo, we delay the update until the dictionary loading; // is finished (i.e. when we return to the top level TCling::UpdateClassInfo).; // This allows for the dictionary to be fully populated when we actually; // update the TClass object. The updating of the TClass sometimes; // (STL containers and when there is an emulated class) forces the building; // of the TClass object's real data (which needs the dictionary info).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:199,Deployability,Update,UpdateClassInfo,199,"// If we are called indirectly from within another call to; // TCling::UpdateClassInfo, we delay the update until the dictionary loading; // is finished (i.e. when we return to the top level TCling::UpdateClassInfo).; // This allows for the dictionary to be fully populated when we actually; // update the TClass object. The updating of the TClass sometimes; // (STL containers and when there is an emulated class) forces the building; // of the TClass object's real data (which needs the dictionary info).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:295,Deployability,update,update,295,"// If we are called indirectly from within another call to; // TCling::UpdateClassInfo, we delay the update until the dictionary loading; // is finished (i.e. when we return to the top level TCling::UpdateClassInfo).; // This allows for the dictionary to be fully populated when we actually; // update the TClass object. The updating of the TClass sometimes; // (STL containers and when there is an emulated class) forces the building; // of the TClass object's real data (which needs the dictionary info).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:129,Performance,load,loading,129,"// If we are called indirectly from within another call to; // TCling::UpdateClassInfo, we delay the update until the dictionary loading; // is finished (i.e. when we return to the top level TCling::UpdateClassInfo).; // This allows for the dictionary to be fully populated when we actually; // update the TClass object. The updating of the TClass sometimes; // (STL containers and when there is an emulated class) forces the building; // of the TClass object's real data (which needs the dictionary info).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:31,Deployability,update,update,31,"// Create the TEnumConstant or update it if existing",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:65,Availability,error,error,65,"// Load library containing specified class. Returns 0 in case of error; // and 1 in case if success.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Performance,Load,Load,3,"// Load library containing specified class. Returns 0 in case of error; // and 1 in case if success.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:17,Availability,failure,failure,17,"// Returns 0 for failure 1 for success",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:319,Availability,error,error,319,"////////////////////////////////////////////////////////////////////////////////; /// Find a template decl within N nested namespaces, 0<=N<inf; /// Assumes 1 and only 1 template present and 1 and only 1 entity contained; /// by the namespace. Example: `ns1::ns2::..::%nsN::%myTemplate`; /// Returns nullptr in case of error",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:142,Integrability,depend,depends,142,"//This function automatically creates the ""LinkDef.h"" file for templated; //classes then executes CompileMacro on it.; //The name of the file depends on the class name, and it's not generated again; //if the file exist.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:142,Integrability,depend,depends,142,"//This function automatically creates the ""LinkDef.h"" file for templated; //classes then executes CompileMacro on it.; //The name of the file depends on the class name, and it's not generated again; //if the file exist.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:124,Integrability,synchroniz,synchronize,124,"//______________________________________________________________________________; //; //; //; // It is a ""fantom"" method to synchronize user keyboard input; // and ROOT prompt line (for WIN32)",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:94,Availability,error,error,94,"//______________________________________________________________________________; //; // llvm error handler through exceptions; see also cling/UserInterface; //",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:21,Availability,error,errors,21,"// Handle fatal llvm errors by throwing an exception.; // Yes, throwing exceptions in error handlers is bad.; // Doing nothing is pretty terrible, too.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Availability,error,error,86,"// Handle fatal llvm errors by throwing an exception.; // Yes, throwing exceptions in error handlers is bad.; // Doing nothing is pretty terrible, too.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:98,Safety,avoid,avoid,98,"////////////////////////////////////////////////////////////////////////////////; /// Try hard to avoid looking up in the Cling database as this could enduce; /// an unwanted autoparsing.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:37,Performance,load,loaded,37,"// This is a raw type and an already loaded typedef.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:33,Performance,load,loaded,33,"// It may still be in one of the loaded protoclasses",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:117,Performance,load,loaded,117,"////////////////////////////////////////////////////////////////////////////////; ///\returns true if the module was loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:38,Performance,load,load,38,"// When starting up ROOT, cling would load all modulemap files on the include; // paths. However, in a ROOT session, it is very common to run aclic which; // will invoke rootcling and possibly produce a modulemap and a module in; // the current folder.; //; // Before failing, try loading the modulemap in the current folder and try; // loading the requested module from it.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:281,Performance,load,loading,281,"// When starting up ROOT, cling would load all modulemap files on the include; // paths. However, in a ROOT session, it is very common to run aclic which; // will invoke rootcling and possibly produce a modulemap and a module in; // the current folder.; //; // Before failing, try loading the modulemap in the current folder and try; // loading the requested module from it.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:337,Performance,load,loading,337,"// When starting up ROOT, cling would load all modulemap files on the include; // paths. However, in a ROOT session, it is very common to run aclic which; // will invoke rootcling and possibly produce a modulemap and a module in; // the current folder.; //; // Before failing, try loading the modulemap in the current folder and try; // loading the requested module from it.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:214,Availability,avail,available,214,"////////////////////////////////////////////////////////////////////////////////; /// Loads the C++ modules that we require to run any ROOT program. This is just; /// supposed to make a C++ module from a modulemap available to the interpreter.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Performance,Load,Loads,86,"////////////////////////////////////////////////////////////////////////////////; /// Loads the C++ modules that we require to run any ROOT program. This is just; /// supposed to make a C++ module from a modulemap available to the interpreter.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Performance,Load,Load,3,"// Load the module from *only* in the prebuilt module path.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:38,Performance,load,loads,38,"// Get an existing global index. This loads it if not already loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:62,Performance,load,loaded,62,"// Get an existing global index. This loads it if not already loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:56,Integrability,message,messages,56,"// For finding modules needing to be imported for fixit messages,; // we need to make the global index cover all modules, so we do that here.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:68,Deployability,update,updates,68,"// FIXME: All decls should have an owning module once rootcling; // updates its generated decls from within the LookupHelper & co.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Performance,Load,Loading,3,"// Loading of a module might deserialize.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:55,Performance,Load,Load,55,"// Setup core C++ modules if we have any to setup.; // Load libc and stl first.; // Load vcruntime module for windows",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:84,Performance,Load,Load,84,"// Setup core C++ modules if we have any to setup.; // Load libc and stl first.; // Load vcruntime module for windows",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Performance,Load,Load,3,"// Load core modules; // This should be vector in order to be able to pass it to LoadModules",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:81,Performance,Load,LoadModules,81,"// Load core modules; // This should be vector in order to be able to pass it to LoadModules",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:36,Performance,load,loadGlobalIndex,36,"// FIXME: The ASTReader still calls loadGlobalIndex and loads the file; // We should investigate how to suppress it completely.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:56,Performance,load,loads,56,"// FIXME: The ASTReader still calls loadGlobalIndex and loads the file; // We should investigate how to suppress it completely.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:14,Performance,load,load,14,"// We want to load only already created modules.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:58,Performance,load,loadModule,58,"// FIXME: We may be able to remove those checks as cling::loadModule; // checks if a module was alredy loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:103,Performance,load,loaded,103,"// FIXME: We may be able to remove those checks as cling::loadModule; // checks if a module was alredy loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:43,Performance,load,loaded,43,"// This is a core module which was already loaded.; // Load system modules now and delay the other modules after we have; // loaded all system ones.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:55,Performance,Load,Load,55,"// This is a core module which was already loaded.; // Load system modules now and delay the other modules after we have; // loaded all system ones.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:125,Performance,load,loaded,125,"// This is a core module which was already loaded.; // Load system modules now and delay the other modules after we have; // loaded all system ones.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:4,Availability,ERROR,ERROR,4,"// `ERROR` and `PI` are from loading R related modules, which conflict with; // user's code.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:29,Performance,load,loading,29,"// `ERROR` and `PI` are from loading R related modules, which conflict with; // user's code.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:47,Availability,ERROR,ERROR,47,"R""CODE(; #ifdef PI; # undef PI; #endif; #ifdef ERROR; # undef ERROR; #endif; )CODE""",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:62,Availability,ERROR,ERROR,62,"R""CODE(; #ifdef PI; # undef PI; #endif; #ifdef ERROR; # undef ERROR; #endif; )CODE""",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:126,Testability,assert,assert,126,"// We must include it even when we have modules because it is marked as; // textual in the modulemap due to the nature of the assert header.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:119,Integrability,interface,interface,119,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the cling interpreter interface.; /// \param name name for TInterpreter; /// \param title title for TInterpreter; /// \param argv - array of arguments passed to the cling::Interpreter constructor; /// e.g. `-DFOO=bar`. The last element of the array must be `nullptr`.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:156,Deployability,upgrade,upgrade,156,"// The -O1 optimization flag has nasty side effects on Windows (32 and 64 bit); // See the GitHub issues #9809 and #9944; // TODO: to be reviewed after the upgrade of LLVM & Clang",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:11,Performance,optimiz,optimization,11,"// The -O1 optimization flag has nasty side effects on Windows (32 and 64 bit); // See the GitHub issues #9809 and #9944; // TODO: to be reviewed after the upgrade of LLVM & Clang",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:11,Performance,optimiz,optimized,11,"// Disable optimized register allocation which is turned on automatically; // by -O1, but seems to require -O2 to not explode in run time.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:111,Integrability,depend,depending,111,"// Activate C++ modules support. If we are running within rootcling, it's up; // to rootcling to set this flag depending on whether it wants to produce; // C++ modules.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:195,Performance,load,load,195,"// ROOT implements its AutoLoading upon module's link directives. We; // generate module A { header ""A.h"" link ""A.so"" export * } where ROOT's; // facilities use the link directive to dynamically load the relevant; // library. So, we need to suppress clang's default autolink behavior.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:18,Integrability,inject,injected,18,"// Add statically injected extra arguments, usually coming from rootcling.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:18,Security,inject,injected,18,"// Add statically injected extra arguments, usually coming from rootcling.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:31,Performance,load,loaded,31,"// We are now ready (enough is loaded) to init the list of opaque typedefs.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:110,Integrability,interface,interface,110,"////////////////////////////////////////////////////////////////////////////////; /// Destroy the interpreter interface.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:58,Availability,avail,available,58,"// ROOT's atexit functions require the interepreter to be available.; // Run them before shutting down.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:98,Availability,down,down,98,"// ROOT's atexit functions require the interepreter to be available.; // Run them before shutting down.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:43,Performance,load,loading,43,"// Read the rules before enabling the auto loading to not inadvertently; // load the libraries for the classes concerned even-though the user is; // *not* using them.; // Note this call must happen before the first call to LoadLibraryMap.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:76,Performance,load,load,76,"// Read the rules before enabling the auto loading to not inadvertently; // load the libraries for the classes concerned even-though the user is; // *not* using them.; // Note this call must happen before the first call to LoadLibraryMap.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:223,Performance,Load,LoadLibraryMap,223,"// Read the rules before enabling the auto loading to not inadvertently; // load the libraries for the classes concerned even-though the user is; // *not* using them.; // Note this call must happen before the first call to LoadLibraryMap.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:16,Modifiability,variab,variable,16,"// avoid unused variable warning.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Safety,avoid,avoid,3,"// avoid unused variable warning.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:117,Performance,load,loading,117,"////////////////////////////////////////////////////////////////////////////////; /// Register Rdict data for future loading by LoadPCM;",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:128,Performance,Load,LoadPCM,128,"////////////////////////////////////////////////////////////////////////////////; /// Register Rdict data for future loading by LoadPCM;",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:95,Performance,load,load,95,"////////////////////////////////////////////////////////////////////////////////; /// Tries to load a PCM from TFile; returns true on success.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Performance,Cache,Cache,3,"// Cache the pointers",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:105,Integrability,rout,routine,105,"// For this case, the list will be immutable once constructed; // (i.e. in this case, by the end of this routine).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:57,Deployability,update,update,57,"// Now that all TClass-es know how to set them up we can update; // existing TClasses, which might cause the creation of e.g. TBaseClass; // objects which in turn requires the creation of TClasses, that could; // come from the PCH, but maybe later in the loop. Instead of resolving; // a dependency graph the addition to the TClassTable above allows us; // to create these dependent TClasses as needed below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:288,Integrability,depend,dependency,288,"// Now that all TClass-es know how to set them up we can update; // existing TClasses, which might cause the creation of e.g. TBaseClass; // objects which in turn requires the creation of TClasses, that could; // come from the PCH, but maybe later in the loop. Instead of resolving; // a dependency graph the addition to the TClassTable above allows us; // to create these dependent TClasses as needed below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:373,Integrability,depend,dependent,373,"// Now that all TClass-es know how to set them up we can update; // existing TClasses, which might cause the creation of e.g. TBaseClass; // objects which in turn requires the creation of TClasses, that could; // come from the PCH, but maybe later in the loop. Instead of resolving; // a dependency graph the addition to the TClassTable above allows us; // to create these dependent TClasses as needed below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:108,Availability,avail,available,108,"// We have an existing TClass object. It might be emulated; // or interpreted; we now have more information available.; // Make that available.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:133,Availability,avail,available,133,"// We have an existing TClass object. It might be emulated; // or interpreted; we now have more information available.; // Make that available.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:95,Performance,load,load,95,"////////////////////////////////////////////////////////////////////////////////; /// Tries to load a rdict PCM, issues diagnostics if it fails.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:32,Integrability,interface,interfaces,32,"// Easier to work with the ROOT interfaces.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:138,Modifiability,plugin,plugin,138,"// Prevent the ROOT-PCMs hitting this during auto-load during; // JITting - which will cause recursive compilation.; // Avoid to call the plugin manager at all.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:50,Performance,load,load,50,"// Prevent the ROOT-PCMs hitting this during auto-load during; // JITting - which will cause recursive compilation.; // Avoid to call the plugin manager at all.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:120,Safety,Avoid,Avoid,120,"// Prevent the ROOT-PCMs hitting this during auto-load during; // JITting - which will cause recursive compilation.; // Avoid to call the plugin manager at all.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:291,Deployability,update,update,291,"// Currently the module file are never unloaded (even if the library is; // unloaded) and, of course, never reloaded.; // Consequently, we must NOT remove the `pendingRdict` from the list; // of pending dictionary, otherwise if a library is unloaded and then; // reload we will be unable to update properly the TClass object; // (because we wont be able to load the rootpcm file by executing the; // above lines)",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:357,Performance,load,load,357,"// Currently the module file are never unloaded (even if the library is; // unloaded) and, of course, never reloaded.; // Consequently, we must NOT remove the `pendingRdict` from the list; // of pending dictionary, otherwise if a library is unloaded and then; // reload we will be unable to update properly the TClass object; // (because we wont be able to load the rootpcm file by executing the; // above lines)",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:138,Availability,error,error,138,"////////////////////////////////////////////////////////////////////////////////; ///\returns true if the module map was loaded, false on error or if the map was; /// already loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:121,Performance,load,loaded,121,"////////////////////////////////////////////////////////////////////////////////; ///\returns true if the module map was loaded, false on error or if the map was; /// already loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:175,Performance,load,loaded,175,"////////////////////////////////////////////////////////////////////////////////; ///\returns true if the module map was loaded, false on error or if the map was; /// already loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:113,Performance,Cache,CacheFailure,113,"// We cannot use HS.lookupModuleMapFile(DE, /*IsFramework*/ false);; // because its internal call to getFile has CacheFailure set to true.; // In our case, modulemaps can appear any time due to ACLiC.; // Code copied from HS.lookupModuleMapFile.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:2,Performance,Cache,CacheFailure,2,/*CacheFailure*/,MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:85,Deployability,Update,Update,85,"////////////////////////////////////////////////////////////////////////////////; // Update all the TClass registered in fClassesToUpdate",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:42,Performance,load,loaded,42,"// If somehow the TClass has already been loaded (maybe it was registered several time),; // we skip it. Otherwise, the existing TClass is in mode kInterpreted, kEmulated or; // maybe even kForwardDeclared and needs to replaced.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Integrability,Inject,Inject,86,"////////////////////////////////////////////////////////////////////////////////; /// Inject the module named ""modulename"" into cling; load all headers.; /// headers is a 0-terminated array of header files to `#include` after; /// loading the module. The module is searched for in all $LD_LIBRARY_PATH; /// entries (or %PATH% on Windows).; /// This function gets called by the static initialization of dictionary; /// libraries.; /// The payload code is injected ""as is"" in the interpreter.; /// The value of 'triggerFunc' is used to find the shared library location.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:454,Integrability,inject,injected,454,"////////////////////////////////////////////////////////////////////////////////; /// Inject the module named ""modulename"" into cling; load all headers.; /// headers is a 0-terminated array of header files to `#include` after; /// loading the module. The module is searched for in all $LD_LIBRARY_PATH; /// entries (or %PATH% on Windows).; /// This function gets called by the static initialization of dictionary; /// libraries.; /// The payload code is injected ""as is"" in the interpreter.; /// The value of 'triggerFunc' is used to find the shared library location.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:135,Performance,load,load,135,"////////////////////////////////////////////////////////////////////////////////; /// Inject the module named ""modulename"" into cling; load all headers.; /// headers is a 0-terminated array of header files to `#include` after; /// loading the module. The module is searched for in all $LD_LIBRARY_PATH; /// entries (or %PATH% on Windows).; /// This function gets called by the static initialization of dictionary; /// libraries.; /// The payload code is injected ""as is"" in the interpreter.; /// The value of 'triggerFunc' is used to find the shared library location.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:231,Performance,load,loading,231,"////////////////////////////////////////////////////////////////////////////////; /// Inject the module named ""modulename"" into cling; load all headers.; /// headers is a 0-terminated array of header files to `#include` after; /// loading the module. The module is searched for in all $LD_LIBRARY_PATH; /// entries (or %PATH% on Windows).; /// This function gets called by the static initialization of dictionary; /// libraries.; /// The payload code is injected ""as is"" in the interpreter.; /// The value of 'triggerFunc' is used to find the shared library location.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Security,Inject,Inject,86,"////////////////////////////////////////////////////////////////////////////////; /// Inject the module named ""modulename"" into cling; load all headers.; /// headers is a 0-terminated array of header files to `#include` after; /// loading the module. The module is searched for in all $LD_LIBRARY_PATH; /// entries (or %PATH% on Windows).; /// This function gets called by the static initialization of dictionary; /// libraries.; /// The payload code is injected ""as is"" in the interpreter.; /// The value of 'triggerFunc' is used to find the shared library location.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:454,Security,inject,injected,454,"////////////////////////////////////////////////////////////////////////////////; /// Inject the module named ""modulename"" into cling; load all headers.; /// headers is a 0-terminated array of header files to `#include` after; /// loading the module. The module is searched for in all $LD_LIBRARY_PATH; /// entries (or %PATH% on Windows).; /// This function gets called by the static initialization of dictionary; /// libraries.; /// The payload code is injected ""as is"" in the interpreter.; /// The value of 'triggerFunc' is used to find the shared library location.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:62,Integrability,inject,inject,62,"// We need the dictionary initialization but we don't want to inject the; // declarations into the interpreter, except for those we really need for; // I/O; see rootcling.cxx after the call to TCling__GetInterpreter().",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:62,Security,inject,inject,62,"// We need the dictionary initialization but we don't want to inject the; // declarations into the interpreter, except for those we really need for; // I/O; see rootcling.cxx after the call to TCling__GetInterpreter().",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:64,Performance,load,loaded,64,"// Make sure we relookup symbols that were search for before we loaded; // their autoparse information. We could be more subtil and remove only; // the failed one or only the one in this module, but for now this is; // better than nothing.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:6,Usability,clear,clear,6,"// We clear the scopes which we may have carried from a previous iteration",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Safety,Avoid,Avoid,3,"// Avoid the overhead if nothing is to be declared",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:27,Performance,load,loading,27,"// In case we are directly loading the library via gSystem->Load() without; // specifying the relevant include paths we should try loading the; // modulemap next to the library location.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:60,Performance,Load,Load,60,"// In case we are directly loading the library via gSystem->Load() without; // specifying the relevant include paths we should try loading the; // modulemap next to the library location.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:131,Performance,load,loading,131,"// In case we are directly loading the library via gSystem->Load() without; // specifying the relevant include paths we should try loading the; // modulemap next to the library location.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:181,Availability,avail,available,181,"// Now that all the header have been registered/compiled, let's; // make sure to 'reset' the TClass that have a class init in this module; // but already had their type information available (using information/header; // loaded from other modules or from class rules or from opening a TFile; // or from loading header in a way that did not provoke the loading of; // the library we just loaded).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:221,Performance,load,loaded,221,"// Now that all the header have been registered/compiled, let's; // make sure to 'reset' the TClass that have a class init in this module; // but already had their type information available (using information/header; // loaded from other modules or from class rules or from opening a TFile; // or from loading header in a way that did not provoke the loading of; // the library we just loaded).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:303,Performance,load,loading,303,"// Now that all the header have been registered/compiled, let's; // make sure to 'reset' the TClass that have a class init in this module; // but already had their type information available (using information/header; // loaded from other modules or from class rules or from opening a TFile; // or from loading header in a way that did not provoke the loading of; // the library we just loaded).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:352,Performance,load,loading,352,"// Now that all the header have been registered/compiled, let's; // make sure to 'reset' the TClass that have a class init in this module; // but already had their type information available (using information/header; // loaded from other modules or from class rules or from opening a TFile; // or from loading header in a way that did not provoke the loading of; // the library we just loaded).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:387,Performance,load,loaded,387,"// Now that all the header have been registered/compiled, let's; // make sure to 'reset' the TClass that have a class init in this module; // but already had their type information available (using information/header; // loaded from other modules or from class rules or from opening a TFile; // or from loading header in a way that did not provoke the loading of; // the library we just loaded).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:131,Integrability,interface,interface,131,"// Do not do anything if we have no global module index.; // FIXME: This is mostly to real with false positives in the TTabCom; // interface for non-modules.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:236,Deployability,Update,UpdateClassInfo,236,"////////////////////////////////////////////////////////////////////////////////; /// Register classes that already existed prior to their dictionary loading; /// and that already had a ClassInfo (and thus would not be refresh via; /// UpdateClassInfo.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:150,Performance,load,loading,150,"////////////////////////////////////////////////////////////////////////////////; /// Register classes that already existed prior to their dictionary loading; /// and that already had a ClassInfo (and thus would not be refresh via; /// UpdateClassInfo.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:107,Performance,load,loaded,107,"////////////////////////////////////////////////////////////////////////////////; /// If the dictionary is loaded, we can remove the class from the list; /// (otherwise the class might be loaded twice).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:188,Performance,load,loaded,188,"////////////////////////////////////////////////////////////////////////////////; /// If the dictionary is loaded, we can remove the class from the list; /// (otherwise the class might be loaded twice).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:165,Availability,error,error,165,"////////////////////////////////////////////////////////////////////////////////; /// Let cling process a command line.; ///; /// If the command is executed and the error is 0, then the return value; /// is the int value corresponding to the result of the executed command; /// (float and double return values will be truncated).; ///; // Method for handling the interpreter exceptions.; // the MetaProcessor is passing in as argument to teh function, because; // cling::Interpreter::CompilationResult is a nested class and it cannot be; // forward declared, thus this method cannot be a static member function; // of TCling.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:127,Integrability,rout,routines,127,"// Copy the passed line, it comes from a static buffer in TApplication; // which can be reentered through the Cling evaluation routines,; // which would overwrite the static buffer and we would forget what we; // were doing.; //",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:94,Integrability,synchroniz,synchronize,94,"// End-Of-Line action; // See the comment (copied from above):; // It is a ""fantom"" method to synchronize user keyboard input; // and ROOT prompt line (for WIN32); // and is implemented by",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Performance,Load,Loading,3,"// Loading failed.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:10,Availability,error,error,10,"// Ignore error caused by the inside of std::unique_ptr; // This is needed solely because of rootclingIO's IsUnsupportedUniquePointer; // which checks the number of elements in the GetListOfRealData.; // If this usage is removed, this can be replaced with a return statement.; // See https://github.com/root-project/root/issues/13574",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:212,Usability,simpl,simple,212,"// for ptr arithmetics; // Treat the case of std::complex in a special manner. We want to enforce; // the layout of a stl implementation independent class, which is the; // complex as implemented in ROOT5.; // A simple lambda to simplify the code",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:229,Usability,simpl,simplify,229,"// for ptr arithmetics; // Treat the case of std::complex in a special manner. We want to enforce; // the layout of a stl implementation independent class, which is the; // complex as implemented in ROOT5.; // A simple lambda to simplify the code",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:153,Availability,Error,Error,153,"// TVirtualCollectionProxy *proxy = cl->GetCollectionProxy();; // if (proxy && ( proxy->GetProperties() & TVirtualCollectionProxy::kIsEmulated ) ) {; // Error(""InspectMembers"",""The TClass for %s has an emulated proxy but we are looking at a compiled version of the collection!\n"",; // cl->GetName());; // }",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:7,Performance,load,loaded,7,"// For loaded class, CallShowMember will (especially for TObject); // call the virtual ShowMember rather than the class specific version; // resulting in an infinite recursion.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:46,Usability,clear,cleared,46,"// No-op there is not equivalent state (to be cleared) in Cling.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:440,Availability,failure,failure,440,"////////////////////////////////////////////////////////////////////////////////; /// Declare code to the interpreter, without any of the interpreter actions; /// that could trigger a re-interpretation of the code. I.e. make cling; /// behave like a compiler: no dynamic lookup, no input wrapping for; /// subsequent execution, no automatic provision of declarations but just a; /// plain `#include`.; /// Returns true on success, false on failure.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:288,Integrability,wrap,wrapping,288,"////////////////////////////////////////////////////////////////////////////////; /// Declare code to the interpreter, without any of the interpreter actions; /// that could trigger a re-interpretation of the code. I.e. make cling; /// behave like a compiler: no dynamic lookup, no input wrapping for; /// subsequent execution, no automatic provision of declarations but just a; /// plain `#include`.; /// Returns true on success, false on failure.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:116,Integrability,synchroniz,synchronize,116,"////////////////////////////////////////////////////////////////////////////////; /// It calls a ""fantom"" method to synchronize user keyboard input; /// and ROOT prompt line.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:149,Safety,avoid,avoid,149,"// This static function is a hop of TCling::IsLibraryLoaded, which is taking a lock and calling; // into this function. This is because we wanted to avoid a duplication in TCling::IsLoaded, which; // was already taking a lock.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:197,Performance,load,loading,197,"////////////////////////////////////////////////////////////////////////////////; /// Return true if ROOT has cxxmodules pcm for a given library name.; // FIXME: We need to be able to support lazy loading of pcm generated by ACLiC.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:266,Integrability,interface,interface,266,"// FIXME: In case when the modulemap is not yet loaded we will return the; // wrong result. Consider a call to HasPCMForLibrary(../test/libEvent.so); // We will only load the modulemap for libEvent.so after we dlopen libEvent; // which may happen after calling this interface. Maybe we should also check; // if there is a Event.pcm file and a module.modulemap, load it and return; // true.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:48,Performance,load,loaded,48,"// FIXME: In case when the modulemap is not yet loaded we will return the; // wrong result. Consider a call to HasPCMForLibrary(../test/libEvent.so); // We will only load the modulemap for libEvent.so after we dlopen libEvent; // which may happen after calling this interface. Maybe we should also check; // if there is a Event.pcm file and a module.modulemap, load it and return; // true.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:166,Performance,load,load,166,"// FIXME: In case when the modulemap is not yet loaded we will return the; // wrong result. Consider a call to HasPCMForLibrary(../test/libEvent.so); // We will only load the modulemap for libEvent.so after we dlopen libEvent; // which may happen after calling this interface. Maybe we should also check; // if there is a Event.pcm file and a module.modulemap, load it and return; // true.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:361,Performance,load,load,361,"// FIXME: In case when the modulemap is not yet loaded we will return the; // wrong result. Consider a call to HasPCMForLibrary(../test/libEvent.so); // We will only load the modulemap for libEvent.so after we dlopen libEvent; // which may happen after calling this interface. Maybe we should also check; // if there is a Event.pcm file and a module.modulemap, load it and return; // true.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:131,Testability,test,test,131,"// FIXME: In case when the modulemap is not yet loaded we will return the; // wrong result. Consider a call to HasPCMForLibrary(../test/libEvent.so); // We will only load the modulemap for libEvent.so after we dlopen libEvent; // which may happen after calling this interface. Maybe we should also check; // if there is a Event.pcm file and a module.modulemap, load it and return; // true.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:127,Performance,load,loaded,127,"////////////////////////////////////////////////////////////////////////////////; /// Return true if the file has already been loaded by cint.; /// We will try in this order:; /// actual filename; /// filename as a path relative to; /// the include path; /// the shared library path",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:2,Performance,Cache,CacheFail,2,/*CacheFail*/,MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:55,Performance,load,loaded,55,"// check in the source manager if the file is actually loaded",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:124,Performance,cache,cache,124,"////////////////////////////////////////////////////////////////////////////////; /// Check if lib is in the dynamic linker cache, returns true if it is, and if so,; /// modifies the library file name parameter `lib` from `/usr/lib/libFOO.dylib`; /// to `-lFOO` such that it can be passed to the linker.; /// This is a unique feature of macOS 11.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:35,Deployability,Update,UpdateListOfLoadedSharedLibraries,35,"// This function is called through UpdateListOfLoadedSharedLibraries() which is locked.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:115,Availability,error,error,115,"//the linker does not like to be mmapped; //causes a crash in cling::DynamicLibraryManager::loadLibrary()); //with error message ""mmap of entire address space failed: Cannot allocate memory""",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:174,Energy Efficiency,allocate,allocate,174,"//the linker does not like to be mmapped; //causes a crash in cling::DynamicLibraryManager::loadLibrary()); //with error message ""mmap of entire address space failed: Cannot allocate memory""",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:121,Integrability,message,message,121,"//the linker does not like to be mmapped; //causes a crash in cling::DynamicLibraryManager::loadLibrary()); //with error message ""mmap of entire address space failed: Cannot allocate memory""",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:92,Performance,load,loadLibrary,92,"//the linker does not like to be mmapped; //causes a crash in cling::DynamicLibraryManager::loadLibrary()); //with error message ""mmap of entire address space failed: Cannot allocate memory""",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:45,Availability,avail,available,45,"// Tell the interpreter that this library is available; all libraries can be; // used to resolve symbols.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:20,Availability,avail,available,20,"// Update string of available libraries.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Deployability,Update,Update,3,"// Update string of available libraries.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:214,Availability,failure,failure,214,"////////////////////////////////////////////////////////////////////////////////; /// Load a library file in cling's memory.; /// if 'system' is true, the library is never unloaded.; /// Return 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load a library file in cling's memory.; /// if 'system' is true, the library is never unloaded.; /// Return 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:54,Availability,failure,failure,54,"// Used to return 0 on success, 1 on duplicate, -1 on failure, -2 on ""fatal"".",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load a macro file in cling's memory.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Testability,Test,Test,3,"// Test on ApplicationImp not being 0 is needed because only at end of; // TApplication ctor the IsLineProcessing flag is set to 0, so before; // we can not use it.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Availability,Failure,Failure,3,"// Failure in compilation.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Availability,Failure,Failure,3,"// Failure at runtime.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:253,Performance,perform,performance,253,"// NOTE: When replacing the mutex by a ReadWrite mutex, we **must**; // put in place the Read/Write part here. Keeping the write lock; // here is 'catasptrophic' for scaling as it means that ALL calls; // to RecursiveRemove will take the write lock and performance; // of many threads trying to access the write lock at the same; // time is relatively bad.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:295,Security,access,access,295,"// NOTE: When replacing the mutex by a ReadWrite mutex, we **must**; // put in place the Read/Write part here. Keeping the write lock; // here is 'catasptrophic' for scaling as it means that ALL calls; // to RecursiveRemove will take the write lock and performance; // of many threads trying to access the write lock at the same; // time is relatively bad.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:47,Deployability,update,updated,47,"// Note that fgSetOfSpecials is supposed to be updated by TClingCallbacks::tryFindROOTSpecialInternal; // (but isn't at the moment).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:120,Modifiability,variab,variables,120,"////////////////////////////////////////////////////////////////////////////////; /// Reset in Cling the list of global variables to the state saved by the last; /// call to TCling::SaveGlobalsContext().; ///; /// Note: Right now, all we do is run the global destructors.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:124,Modifiability,variab,variables,124,"////////////////////////////////////////////////////////////////////////////////; /// Reset the Cling 'user' global objects/variables state to the state saved by the last; /// call to TCling::SaveGlobalsContext().",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:137,Security,access,accessed,137,"////////////////////////////////////////////////////////////////////////////////; /// Delete obj from Cling symbol table so it cannot be accessed anymore.; /// Returns 1 in case of success and 0 in case object was not in table.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:154,Availability,failure,failure,154,"////////////////////////////////////////////////////////////////////////////////; /// Undeclare obj called name.; /// Returns 1 in case of success, 0 for failure.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:122,Deployability,update,update,122,"////////////////////////////////////////////////////////////////////////////////; /// No op: see TClingCallbacks (used to update the list of globals)",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:122,Deployability,update,update,122,"////////////////////////////////////////////////////////////////////////////////; /// No op: see TClingCallbacks (used to update the list of global functions)",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:122,Deployability,update,update,122,"////////////////////////////////////////////////////////////////////////////////; /// No op: see TClingCallbacks (used to update the list of types)",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:52,Availability,error,error,52,"// Declare is not silent (yet?), so add an explicit error message; // to indicate the consequence of the syntax errors.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:112,Availability,error,errors,112,"// Declare is not silent (yet?), so add an explicit error message; // to indicate the consequence of the syntax errors.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:58,Integrability,message,message,58,"// Declare is not silent (yet?), so add an explicit error message; // to indicate the consequence of the syntax errors.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:19,Availability,down,down,19,"// We are shutting down, there is no point in reloading, it only triggers; // redundant deserializations.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:78,Availability,redundant,redundant,78,"// We are shutting down, there is no point in reloading, it only triggers; // redundant deserializations.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:78,Safety,redund,redundant,78,"// We are shutting down, there is no point in reloading, it only triggers; // redundant deserializations.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Testability,Test,Test,3,"// Test again as another thread may have set fClassInfo to nullptr.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:110,Usability,simpl,simpler,110,"// Handle the special case of 'tuple' where we ignore the real implementation; // details and just overlay a 'simpler'/'simplistic' version that is easy; // for the I/O to understand and handle.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:120,Usability,simpl,simplistic,120,"// Handle the special case of 'tuple' where we ignore the real implementation; // details and just overlay a 'simpler'/'simplistic' version that is easy; // for the I/O to understand and handle.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:138,Safety,detect,detect,138,"// Note: We are transferring ownership here.; // In case a class contains an external enum, the enum will be seen as a; // class. We must detect this special case and make the class a Zombie.; // Here we assume that a class has at least one method.; // We can NOT call TClass::Property from here, because this method; // assumes that the TClass is well formed to do a lot of information; // caching. The method SetClassInfo (i.e. here) is usually called during; // the building phase of the TClass, hence it is NOT well formed yet.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:38,Availability,avail,available,38,"// this happens when no dictionary is available",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:764,Availability,error,error,764,"////////////////////////////////////////////////////////////////////////////////; /// Checks if an entity with the specified name is defined in Cling.; /// Returns kUnknown if the entity is not defined.; /// Returns kWithClassDefInline if the entity exists and has a ClassDefInline; /// Returns kKnown if the entity is defined.; ///; /// By default, structs, namespaces, classes, enums and unions are looked for.; /// If the flag isClassOrNamespaceOnly is true, classes, structs and; /// namespaces only are considered. I.e. if the name is an enum or a union,; /// the returned value is false.; ///; /// In the case where the class is not loaded and belongs to a namespace; /// or is nested, looking for the full class name is outputting a lots of; /// (expected) error messages. Currently the only way to avoid this is to; /// specifically check that each level of nesting is already loaded.; /// In case of templates the idea is that everything between the outer; /// '<' and '>' has to be skipped, e.g.: `aap<pippo<noot>::klaas>::a_class`",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:770,Integrability,message,messages,770,"////////////////////////////////////////////////////////////////////////////////; /// Checks if an entity with the specified name is defined in Cling.; /// Returns kUnknown if the entity is not defined.; /// Returns kWithClassDefInline if the entity exists and has a ClassDefInline; /// Returns kKnown if the entity is defined.; ///; /// By default, structs, namespaces, classes, enums and unions are looked for.; /// If the flag isClassOrNamespaceOnly is true, classes, structs and; /// namespaces only are considered. I.e. if the name is an enum or a union,; /// the returned value is false.; ///; /// In the case where the class is not loaded and belongs to a namespace; /// or is nested, looking for the full class name is outputting a lots of; /// (expected) error messages. Currently the only way to avoid this is to; /// specifically check that each level of nesting is already loaded.; /// In case of templates the idea is that everything between the outer; /// '<' and '>' has to be skipped, e.g.: `aap<pippo<noot>::klaas>::a_class`",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:639,Performance,load,loaded,639,"////////////////////////////////////////////////////////////////////////////////; /// Checks if an entity with the specified name is defined in Cling.; /// Returns kUnknown if the entity is not defined.; /// Returns kWithClassDefInline if the entity exists and has a ClassDefInline; /// Returns kKnown if the entity is defined.; ///; /// By default, structs, namespaces, classes, enums and unions are looked for.; /// If the flag isClassOrNamespaceOnly is true, classes, structs and; /// namespaces only are considered. I.e. if the name is an enum or a union,; /// the returned value is false.; ///; /// In the case where the class is not loaded and belongs to a namespace; /// or is nested, looking for the full class name is outputting a lots of; /// (expected) error messages. Currently the only way to avoid this is to; /// specifically check that each level of nesting is already loaded.; /// In case of templates the idea is that everything between the outer; /// '<' and '>' has to be skipped, e.g.: `aap<pippo<noot>::klaas>::a_class`",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:885,Performance,load,loaded,885,"////////////////////////////////////////////////////////////////////////////////; /// Checks if an entity with the specified name is defined in Cling.; /// Returns kUnknown if the entity is not defined.; /// Returns kWithClassDefInline if the entity exists and has a ClassDefInline; /// Returns kKnown if the entity is defined.; ///; /// By default, structs, namespaces, classes, enums and unions are looked for.; /// If the flag isClassOrNamespaceOnly is true, classes, structs and; /// namespaces only are considered. I.e. if the name is an enum or a union,; /// the returned value is false.; ///; /// In the case where the class is not loaded and belongs to a namespace; /// or is nested, looking for the full class name is outputting a lots of; /// (expected) error messages. Currently the only way to avoid this is to; /// specifically check that each level of nesting is already loaded.; /// In case of templates the idea is that everything between the outer; /// '<' and '>' has to be skipped, e.g.: `aap<pippo<noot>::klaas>::a_class`",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:806,Safety,avoid,avoid,806,"////////////////////////////////////////////////////////////////////////////////; /// Checks if an entity with the specified name is defined in Cling.; /// Returns kUnknown if the entity is not defined.; /// Returns kWithClassDefInline if the entity exists and has a ClassDefInline; /// Returns kKnown if the entity is defined.; ///; /// By default, structs, namespaces, classes, enums and unions are looked for.; /// If the flag isClassOrNamespaceOnly is true, classes, structs and; /// namespaces only are considered. I.e. if the name is an enum or a union,; /// the returned value is false.; ///; /// In the case where the class is not loaded and belongs to a namespace; /// or is nested, looking for the full class name is outputting a lots of; /// (expected) error messages. Currently the only way to avoid this is to; /// specifically check that each level of nesting is already loaded.; /// In case of templates the idea is that everything between the outer; /// '<' and '>' has to be skipped, e.g.: `aap<pippo<noot>::klaas>::a_class`",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Safety,Avoid,Avoid,3,"// Avoid the double search below in case the name is a fundamental type; // or typedef to a fundamental type.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:191,Performance,load,loading,191,"// Migrated from within TClass::GetClass; // If we want to know if a class or a namespace with this name exists in the; // interpreter and this is an enum in the type system, before or after loading; // according to the autoload function argument, return kUnknown.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:36,Performance,load,loading,36,"// RAII to suspend and restore auto-loading and auto-parsing based on some external conditions.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:369,Energy Efficiency,reduce,reduce,369,"// If we have a forward declaration for a class template instantiation,; // we want to ignore it if it was produced/induced by the call to; // findScope, however we can not distinguish those from the; // instantiation induce by 'soft' use (and thus also induce by the; // same underlying code paths); // ['soft' use = use not requiring a complete definition]; // So to reduce the amount of disruption to the existing code we; // would just ignore those for STL collection, for which we really; // need to have the compiled collection proxy (and thus the TClass; // bootstrap).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:31,Performance,load,loaded,31,"// Add the enum to the list of loaded enums.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the list of pointers to method for TClass cl; /// This is now a nop. The creation and updating is handled in; /// TListOfFunctions.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the list of pointers to data members for TClass cl; /// This is now a nop. The creation and updating is handled in; /// TListOfDataMembers.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:416,Integrability,interface,interfaces,416,"// For now the following line would lead to the (unwanted) instantiation; // of class template. This could/would need to be resurrected only if; // we re-introduce so sort of automatic instantiation. However this would; // have to include carefull look at the template parameter to avoid; // creating instance we can not really use (if the parameter are only forward; // declaration or do not have all the necessary interfaces).; // TClingClassInfo tci(fInterpreter, classname);; // if (1 || !tci.IsValid()) {",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:282,Safety,avoid,avoid,282,"// For now the following line would lead to the (unwanted) instantiation; // of class template. This could/would need to be resurrected only if; // we re-introduce so sort of automatic instantiation. However this would; // have to include carefull look at the template parameter to avoid; // creating instance we can not really use (if the parameter are only forward; // declaration or do not have all the necessary interfaces).; // TClingClassInfo tci(fInterpreter, classname);; // if (1 || !tci.IsValid()) {",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:42,Deployability,update,update,42,"// We have a version and it might need an update.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:132,Modifiability,variab,variable,132,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to cling Decl of global/static variable that is located; /// at the address given by addr.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:133,Availability,redundant,redundant,133,"// We are looking up for something on the TU scope.; // FIXME: We do not want to go through TClingClassInfo(fInterpreter) because of redundant deserializations. That; // interface will actually construct iterators and walk over the decls on the global scope. In would return the first; // occurrence of a decl with the looked up name. However, that's not what C++ lookup would do: if we want to switch; // to a more complete C++ lookup interface we need sift through the found names and pick up the declarations which; // are only fulfilling ROOT's understanding for a Data Member.; // FIXME: We should probably deprecate the TClingClassInfo(fInterpreter) interface and replace it withe something; // similar as below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:170,Integrability,interface,interface,170,"// We are looking up for something on the TU scope.; // FIXME: We do not want to go through TClingClassInfo(fInterpreter) because of redundant deserializations. That; // interface will actually construct iterators and walk over the decls on the global scope. In would return the first; // occurrence of a decl with the looked up name. However, that's not what C++ lookup would do: if we want to switch; // to a more complete C++ lookup interface we need sift through the found names and pick up the declarations which; // are only fulfilling ROOT's understanding for a Data Member.; // FIXME: We should probably deprecate the TClingClassInfo(fInterpreter) interface and replace it withe something; // similar as below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:436,Integrability,interface,interface,436,"// We are looking up for something on the TU scope.; // FIXME: We do not want to go through TClingClassInfo(fInterpreter) because of redundant deserializations. That; // interface will actually construct iterators and walk over the decls on the global scope. In would return the first; // occurrence of a decl with the looked up name. However, that's not what C++ lookup would do: if we want to switch; // to a more complete C++ lookup interface we need sift through the found names and pick up the declarations which; // are only fulfilling ROOT's understanding for a Data Member.; // FIXME: We should probably deprecate the TClingClassInfo(fInterpreter) interface and replace it withe something; // similar as below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:656,Integrability,interface,interface,656,"// We are looking up for something on the TU scope.; // FIXME: We do not want to go through TClingClassInfo(fInterpreter) because of redundant deserializations. That; // interface will actually construct iterators and walk over the decls on the global scope. In would return the first; // occurrence of a decl with the looked up name. However, that's not what C++ lookup would do: if we want to switch; // to a more complete C++ lookup interface we need sift through the found names and pick up the declarations which; // are only fulfilling ROOT's understanding for a Data Member.; // FIXME: We should probably deprecate the TClingClassInfo(fInterpreter) interface and replace it withe something; // similar as below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:133,Safety,redund,redundant,133,"// We are looking up for something on the TU scope.; // FIXME: We do not want to go through TClingClassInfo(fInterpreter) because of redundant deserializations. That; // interface will actually construct iterators and walk over the decls on the global scope. In would return the first; // occurrence of a decl with the looked up name. However, that's not what C++ lookup would do: if we want to switch; // to a more complete C++ lookup interface we need sift through the found names and pick up the declarations which; // are only fulfilling ROOT's understanding for a Data Member.; // FIXME: We should probably deprecate the TClingClassInfo(fInterpreter) interface and replace it withe something; // similar as below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:132,Modifiability,variab,variable,132,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to cling Decl of global/static variable that is located; /// at the address given by addr.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:12,Usability,simpl,simply,12,"// It might simply be an unmangled global name.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:110,Integrability,interface,interface,110,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to cling interface function for a method of a class with; /// parameters params (params is a string of actual arguments, not formal; /// ones). If the class is 0 the global function list will be searched.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:110,Integrability,interface,interface,110,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to cling interface function for a method of a class with; /// a certain name.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:51,Security,access,access,51,"// else lookup with NotForRedeclaration will check access etc",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:110,Integrability,interface,interface,110,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to cling interface function for a method of a class with; /// a certain prototype, i.e. ""char*,int,float"". If the class is 0 the global; /// function list will be searched.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:110,Integrability,interface,interface,110,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to cling interface function for a method of a class with; /// a certain prototype, i.e. ""char*,int,float"". If the class is 0 the global; /// function list will be searched.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:110,Integrability,interface,interface,110,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to cling interface function for a method of a class with; /// a certain name.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:256,Integrability,synchroniz,synchronize,256,"////////////////////////////////////////////////////////////////////////////////; /// The 'name' is known to the interpreter, this function returns; /// the internal version of this name (usually just resolving typedefs); /// This is used in particular to synchronize between the name used; /// by rootcling and by the run-time environment (TClass); /// Return 0 if the name is not known.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:280,Availability,error,errors,280,"////////////////////////////////////////////////////////////////////////////////; /// Execute a global function with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:357,Availability,error,error,357,"////////////////////////////////////////////////////////////////////////////////; /// Execute a global function with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:382,Availability,error,error,382,"////////////////////////////////////////////////////////////////////////////////; /// Execute a global function with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:541,Availability,error,errors,541,"////////////////////////////////////////////////////////////////////////////////; /// Execute a global function with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:479,Integrability,interface,interfaces,479,"////////////////////////////////////////////////////////////////////////////////; /// Execute a global function with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:465,Modifiability,enhance,enhance,465,"////////////////////////////////////////////////////////////////////////////////; /// Execute a global function with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:348,Security,secur,security,348,"////////////////////////////////////////////////////////////////////////////////; /// Execute a global function with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:285,Availability,error,errors,285,"////////////////////////////////////////////////////////////////////////////////; /// Execute a method from class cl with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:362,Availability,error,error,362,"////////////////////////////////////////////////////////////////////////////////; /// Execute a method from class cl with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:387,Availability,error,error,387,"////////////////////////////////////////////////////////////////////////////////; /// Execute a method from class cl with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:546,Availability,error,errors,546,"////////////////////////////////////////////////////////////////////////////////; /// Execute a method from class cl with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:484,Integrability,interface,interfaces,484,"////////////////////////////////////////////////////////////////////////////////; /// Execute a method from class cl with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:470,Modifiability,enhance,enhance,470,"////////////////////////////////////////////////////////////////////////////////; /// Execute a method from class cl with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:353,Security,secur,security,353,"////////////////////////////////////////////////////////////////////////////////; /// Execute a method from class cl with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:38,Modifiability,inherit,inherits,38,"// If the actual class of this object inherits 2nd (or more) from TObject,; // 'obj' is unlikely to be the start of the object (as described by IsA()),; // hence gInterpreter->Execute will improperly correct the offset.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:38,Modifiability,inherit,inherits,38,"// If the actual class of this object inherits 2nd (or more) from TObject,; // 'obj' is unlikely to be the start of the object (as described by IsA()),; // hence gInterpreter->Execute will improperly correct the offset.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:321,Availability,error,error,321,"////////////////////////////////////////////////////////////////////////////////; /// Read and parse a rootmapfile in its new format, and return 0 in case of; /// success, -1 if the file has already been read, and -3 in case its format; /// is the old one (e.g. containing ""Library.ClassName""), -4 in case of syntax; /// error.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:61,Performance,load,loaded,61,"// it is a header: add the libname to the list of libs to be loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:439,Modifiability,variab,variable,439,"////////////////////////////////////////////////////////////////////////////////; /// Create a resource table and read the (possibly) three resource files,; /// i.e. `$ROOTSYS/etc/system<name>` (or `ROOTETCDIR/system<name>`), `$HOME/<name>`; /// and `$PWD/<name>`. ROOT always reads "".rootrc"" (in TROOT::InitSystem()). You; /// can read additional user defined resource files by creating additional TEnv; /// objects. By setting the shell variable ROOTENV_NO_HOME=1 the reading of; /// the `$HOME/<name>` resource file will be skipped. This might be useful in; /// case the home directory resides on an automounted remote file system; /// and one wants to avoid the file system from being mounted.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:656,Safety,avoid,avoid,656,"////////////////////////////////////////////////////////////////////////////////; /// Create a resource table and read the (possibly) three resource files,; /// i.e. `$ROOTSYS/etc/system<name>` (or `ROOTETCDIR/system<name>`), `$HOME/<name>`; /// and `$PWD/<name>`. ROOT always reads "".rootrc"" (in TROOT::InitSystem()). You; /// can read additional user defined resource files by creating additional TEnv; /// objects. By setting the shell variable ROOTENV_NO_HOME=1 the reading of; /// the `$HOME/<name>` resource file will be skipped. This might be useful in; /// case the home directory resides on an automounted remote file system; /// and one wants to avoid the file system from being mounted.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:138,Performance,load,loading,138,"// No need to recurse. On the contrary, recursing is actively harmful:; // NOTE: must not recurse to prevent this visitor from triggering loading from; // the external AST source (i.e. autoloading). This would be triggered right here,; // before autoloading is even set up, as rootmap file parsing happens before that.; // Even if autoloading is off and has no effect, triggering loading from external; // AST source resets the flag setHasExternalLexicalStorage(), hiding this specialization; // from subsequent autoloads!",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:380,Performance,load,loading,380,"// No need to recurse. On the contrary, recursing is actively harmful:; // NOTE: must not recurse to prevent this visitor from triggering loading from; // the external AST source (i.e. autoloading). This would be triggered right here,; // before autoloading is even set up, as rootmap file parsing happens before that.; // Even if autoloading is off and has no effect, triggering loading from external; // AST source resets the flag setHasExternalLexicalStorage(), hiding this specialization; // from subsequent autoloads!",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:235,Availability,error,error,235,"////////////////////////////////////////////////////////////////////////////////; /// Load map between class and library. If rootmapfile is specified a; /// specific rootmap file can be added (typically used by ACLiC).; /// In case of error -1 is returned, 0 otherwise.; /// The interpreter uses this information to automatically load the shared; /// library for a class (autoload mechanism), see the AutoLoad() methods below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load map between class and library. If rootmapfile is specified a; /// specific rootmap file can be added (typically used by ACLiC).; /// In case of error -1 is returned, 0 otherwise.; /// The interpreter uses this information to automatically load the shared; /// library for a class (autoload mechanism), see the AutoLoad() methods below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:330,Performance,load,load,330,"////////////////////////////////////////////////////////////////////////////////; /// Load map between class and library. If rootmapfile is specified a; /// specific rootmap file can be added (typically used by ACLiC).; /// In case of error -1 is returned, 0 otherwise.; /// The interpreter uses this information to automatically load the shared; /// library for a class (autoload mechanism), see the AutoLoad() methods below.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:138,Safety,safe,safe,138,"// Prepare a list of all forward declarations for cling; // For some experiments it is easily as big as 500k characters. To be on the; // safe side, we go for 1M.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Performance,Load,Load,3,"// Load all rootmap files in the dynamic load path ((DY)LD_LIBRARY_PATH, etc.).; // A rootmap file must end with the string "".rootmap"".",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:41,Performance,load,load,41,"// Load all rootmap files in the dynamic load path ((DY)LD_LIBRARY_PATH, etc.).; // A rootmap file must end with the string "".rootmap"".",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:46,Integrability,depend,dependent,46,"// get the first lib from the list of lib and dependent libs",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Usability,clear,clear,3,"// clear duplicates",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:309,Availability,error,error,309,"////////////////////////////////////////////////////////////////////////////////; /// Scan again along the dynamic path for library maps. Entries for the loaded; /// shared libraries are unloaded first. This can be useful after reseting; /// the dynamic path through TSystem::SetDynamicPath(); /// In case of error -1 is returned, 0 otherwise.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:154,Performance,load,loaded,154,"////////////////////////////////////////////////////////////////////////////////; /// Scan again along the dynamic path for library maps. Entries for the loaded; /// shared libraries are unloaded first. This can be useful after reseting; /// the dynamic path through TSystem::SetDynamicPath(); /// In case of error -1 is returned, 0 otherwise.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:223,Availability,error,error,223,"////////////////////////////////////////////////////////////////////////////////; /// Reload the library map entries coming from all the loaded shared libraries,; /// after first unloading the current ones.; /// In case of error -1 is returned, 0 otherwise.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:137,Performance,load,loaded,137,"////////////////////////////////////////////////////////////////////////////////; /// Reload the library map entries coming from all the loaded shared libraries,; /// after first unloading the current ones.; /// In case of error -1 is returned, 0 otherwise.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:137,Performance,load,loaded,137,"////////////////////////////////////////////////////////////////////////////////; /// Unload the library map entries coming from all the loaded shared libraries.; /// Returns 0 if succesful",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:46,Integrability,depend,dependent,46,"// get the first lib from the list of lib and dependent libs",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:181,Integrability,interface,interface,181,"////////////////////////////////////////////////////////////////////////////////; /// Demangle the name (from the typeinfo) and then request the class; /// via the usual name based interface (TClass::GetClass).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:152,Availability,error,error,152,"////////////////////////////////////////////////////////////////////////////////; /// Load library containing the specified class. Returns 0 in case of error; /// and 1 in case if success.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load library containing the specified class. Returns 0 in case of error; /// and 1 in case if success.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:147,Performance,load,load,147,"////////////////////////////////////////////////////////////////////////////////; // Get the list of 'published'/'known' library for the class and load them.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:32,Integrability,depend,dependent,32,"// lookup class to find list of dependent libraries",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:214,Performance,load,loading,214,"////////////////////////////////////////////////////////////////////////////////; // Iterate through the data member of the class (either through the TProtoClass; // or through Cling) and trigger, recursively, the loading the necessary libraries.; // \note `cls` is expected to be already normalized!; // \returns 1 on success.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:151,Performance,load,load,151,"// Try to insert; if insertion failed because the entry existed, DeepAutoLoadImpl(); // has previously (within the same call to `AutoLoad()`) tried to load this class; // and we are done, whether success or not, as it won't work better now than before,; // because there is no additional information now compared to before.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:35,Availability,error,error,35,"// If ShallowAutoLoadImpl() has an error, we have an error.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:53,Availability,error,error,53,"// If ShallowAutoLoadImpl() has an error, we have an error.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:39,Performance,load,load,39,"// Now look through the TProtoClass to load the required library/dictionary",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Availability,Failure,Failure,3,"// Failure to load a dictionary is not (quite) a failure load; // the top-level library. If we return false here, then; // we would end up in a situation where the library and thus; // the dictionary is loaded for ""cls"" but the TClass is; // not created and/or marked as unavailable (in case where; // AutoLoad is called from TClass::GetClass).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:49,Availability,failure,failure,49,"// Failure to load a dictionary is not (quite) a failure load; // the top-level library. If we return false here, then; // we would end up in a situation where the library and thus; // the dictionary is loaded for ""cls"" but the TClass is; // not created and/or marked as unavailable (in case where; // AutoLoad is called from TClass::GetClass).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:14,Performance,load,load,14,"// Failure to load a dictionary is not (quite) a failure load; // the top-level library. If we return false here, then; // we would end up in a situation where the library and thus; // the dictionary is loaded for ""cls"" but the TClass is; // not created and/or marked as unavailable (in case where; // AutoLoad is called from TClass::GetClass).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:57,Performance,load,load,57,"// Failure to load a dictionary is not (quite) a failure load; // the top-level library. If we return false here, then; // we would end up in a situation where the library and thus; // the dictionary is loaded for ""cls"" but the TClass is; // not created and/or marked as unavailable (in case where; // AutoLoad is called from TClass::GetClass).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:203,Performance,load,loaded,203,"// Failure to load a dictionary is not (quite) a failure load; // the top-level library. If we return false here, then; // we would end up in a situation where the library and thus; // the dictionary is loaded for ""cls"" but the TClass is; // not created and/or marked as unavailable (in case where; // AutoLoad is called from TClass::GetClass).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Availability,Failure,Failure,3,"// Failure to load a dictionary is not (quite) a failure load; // the top-level library. See detailed comment in the TProtoClass; // branch (above).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:49,Availability,failure,failure,49,"// Failure to load a dictionary is not (quite) a failure load; // the top-level library. See detailed comment in the TProtoClass; // branch (above).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:14,Performance,load,load,14,"// Failure to load a dictionary is not (quite) a failure load; // the top-level library. See detailed comment in the TProtoClass; // branch (above).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:57,Performance,load,load,57,"// Failure to load a dictionary is not (quite) a failure load; // the top-level library. See detailed comment in the TProtoClass; // branch (above).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:152,Availability,error,error,152,"////////////////////////////////////////////////////////////////////////////////; /// Load library containing the specified class. Returns 0 in case of error; /// and 1 in case if success.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load library containing the specified class. Returns 0 in case of error; /// and 1 in case if success.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:11,Deployability,update,update,11,"// Prevent update to IsClassAutoloading between our check and our actions.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:161,Safety,avoid,avoid,161,"// TClass::GetClass explicitly calls gInterpreter->AutoLoad. When called from; // rootcling (in *_rdict.pcm file generation) it is a no op.; // FIXME: We should avoid calling autoload when we know we are not supposed; // to and transform this check into an assert.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:257,Testability,assert,assert,257,"// TClass::GetClass explicitly calls gInterpreter->AutoLoad. When called from; // rootcling (in *_rdict.pcm file generation) it is a no op.; // FIXME: We should avoid calling autoload when we know we are not supposed; // to and transform this check into an assert.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:9,Performance,load,load,9,"// Never load any library from rootcling/genreflex.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:26,Performance,load,loaded,26,"// The library is already loaded as the class's dictionary is known.; // Return success.; // Note: the name (cls) is expected to be normalized as it comes either; // from a callbacks (that can/should calculate the normalized name from the; // decl) or from TClass::GetClass (which does also calculate the normalized; // name).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:57,Performance,load,loaded,57,"// Prevent the recursion when the library dictionary are loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:272,Availability,avail,available,272,"// During the 'Deep' part of the search we will call GetClassSharedLibsForModule; // (when module are enabled) which might end up calling AutoParsing but; // that should only be for the cases where the library has no generated pcm; // and in that case a rootmap should be available.; // This avoids a very costly operation (for generally no gain) but reduce the; // quality of the search (i.e. bad in case of library with no pcm and no rootmap; // file).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:351,Energy Efficiency,reduce,reduce,351,"// During the 'Deep' part of the search we will call GetClassSharedLibsForModule; // (when module are enabled) which might end up calling AutoParsing but; // that should only be for the cases where the library has no generated pcm; // and in that case a rootmap should be available.; // This avoids a very costly operation (for generally no gain) but reduce the; // quality of the search (i.e. bad in case of library with no pcm and no rootmap; // file).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:292,Safety,avoid,avoids,292,"// During the 'Deep' part of the search we will call GetClassSharedLibsForModule; // (when module are enabled) which might end up calling AutoParsing but; // that should only be for the cases where the library has no generated pcm; // and in that case a rootmap should be available.; // This avoids a very costly operation (for generally no gain) but reduce the; // quality of the search (i.e. bad in case of library with no pcm and no rootmap; // file).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:93,Integrability,rout,routine,93,"////////////////////////////////////////////////////////////////////////////////; /// Helper routine for TCling::AutoParse implementing the actual call to the; /// parser and looping over template parameters (if; /// any) and when they don't have a registered header to autoparse,; /// recurse over their template parameters.; ///; /// Returns the number of header parsed.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Safety,Avoid,Avoid,3,"// Avoid unused var warning",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:141,Performance,load,load,141,"// There is no header registered for this class, if this a; // template, it will be instantiated if/when it is requested; // and if we do no load/parse its components we might end up; // not using an eventual specialization.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:174,Availability,failure,failure,174,"////////////////////////////////////////////////////////////////////////////////; /// Parse the headers relative to the class; /// Returns 1 in case of success, 0 in case of failure",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:57,Performance,load,loaded,57,"// Prevent the recursion when the library dictionary are loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:81,Performance,load,loadLibrary,81,"// This is a function which gets callback from cling when DynamicLibraryManager->loadLibrary failed for some reason.; // Try to solve the problem by AutoLoading. Return true when AutoLoading success, return; // false if not.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:74,Performance,load,loadLibrary,74,"// This branch is taken when the callback was from DynamicLibraryManager::loadLibrary",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:19,Performance,load,loaded,19,"// We have already loaded the library.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:121,Deployability,update,update,121,"////////////////////////////////////////////////////////////////////////////////; /// Internal function. Actually do the update of the ClassInfo when seeing; // new TagDecl or NamespaceDecl.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:45,Deployability,update,update,45,"// If we only had a forward declaration then update the; // TClingClassInfo with the definition if we have it now.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:18,Deployability,update,update,18,"// We now need to update the state and bits.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:175,Safety,avoid,avoid,175,"// Check if we have registered the unqualified name into the list; // of TClass that are in kNoInfo, kEmulated or kFwdDeclaredState.; // Since this is used as heureutistic to avoid spurrious calls to GetNormalizedName; // the unqualified name is sufficient (and the fully qualified name might be; // 'wrong' if there is difference in spelling in the template paramters (for example)",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:63,Performance,load,loaded,63,"// Supposedly we are being called while something is being; // loaded ... let's now tell the autoloader to do the work; // yet another time.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:80,Deployability,update,update,80,"// And here we should find the other 'aliases' (eg. vector<Double32_t>); // and update them too:; // foreach(aliascl in gROOT->GetListOfClasses()->FindAliasesOf(name.c_str())); // RefreshClassInfo(cl, tdDef, true);",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:55,Deployability,Update,UpdateClassInfoWithDecl,55,"// This is a no-op as part of the API.; // TCling uses UpdateClassInfoWithDecl() instead.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update all canvases at end the terminal input command.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:25,Deployability,update,update,25,"// TClasses that require update after this transaction; // If the transaction does not contain anything we can return earlier.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:44,Security,expose,expose,44,"// The is the first transaction, we have to expose to meta; // what's already in the AST.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:406,Deployability,update,update,406,"// When fully building the reflection info in TClass, a deserialization; // could be triggered, which may result in request for building the; // reflection info for the same TClass. This in turn will clear the caches; // for the TClass in-flight and cause null ptr derefs.; // FIXME: This is a quick fix, solving most of the issues. The actual; // question is: Shouldn't TClass provide a lock mechanism on update or lock; // itself until the update is done.; //",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:442,Deployability,update,update,442,"// When fully building the reflection info in TClass, a deserialization; // could be triggered, which may result in request for building the; // reflection info for the same TClass. This in turn will clear the caches; // for the TClass in-flight and cause null ptr derefs.; // FIXME: This is a quick fix, solving most of the issues. The actual; // question is: Shouldn't TClass provide a lock mechanism on update or lock; // itself until the update is done.; //",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:210,Performance,cache,caches,210,"// When fully building the reflection info in TClass, a deserialization; // could be triggered, which may result in request for building the; // reflection info for the same TClass. This in turn will clear the caches; // for the TClass in-flight and cause null ptr derefs.; // FIXME: This is a quick fix, solving most of the issues. The actual; // question is: Shouldn't TClass provide a lock mechanism on update or lock; // itself until the update is done.; //",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:200,Usability,clear,clear,200,"// When fully building the reflection info in TClass, a deserialization; // could be triggered, which may result in request for building the; // reflection info for the same TClass. This in turn will clear the caches; // for the TClass in-flight and cause null ptr derefs.; // FIXME: This is a quick fix, solving most of the issues. The actual; // question is: Shouldn't TClass provide a lock mechanism on update or lock; // itself until the update is done.; //",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:23,Deployability,update,updates,23,"// Lock the TClass for updates",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:25,Deployability,update,updates,25,"// Unlock the TClass for updates",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:21,Performance,cache,cached,21,"///\brief Invalidate cached TCling information for the given global declaration.; ///",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:21,Performance,cache,cached,21,"///\brief Invalidate cached TCling information for the given declaration, and; /// removed it from the appropriate object list.; ///\param[in] Lists - std::tuple<TListOfDataMembers&, TListOfFunctions&,; /// TListOfFunctionTemplates&, TListOfEnums&>; /// of pointers to the (global/class) object lists.; ///\param[in] D - Decl to discard.; ///",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:46,Deployability,Update,UpdateListOfLoadedSharedLibraries,46,"// R__LOCKGUARD_CLING(gInterpreterMutex);; // UpdateListOfLoadedSharedLibraries();",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:122,Performance,load,loaded,122,"////////////////////////////////////////////////////////////////////////////////; /// Return the list of shared libraries loaded into the process.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:241,Testability,log,logic,241,"// FIXME: Such case is described ROOT-7765 where; // ROOT_GENERATE_DICTIONARY does not contain the list of headers.; // They are specified as #includes in the LinkDef file. This leads to; // generation of incomplete modulemap files and this logic fails to; // compute the corresponding module of D.; // FIXME: If we want to support such a case, we should not rely on; // the contents of the modulemap but mangle D and look it up in the; // .so files.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:270,Integrability,depend,depends,270,"////////////////////////////////////////////////////////////////////////////////; /// Get the list of shared libraries containing the code for class cls.; /// The first library in the list is the one containing the class, the; /// others are the libraries the first one depends on. Returns 0; /// in case the library is not found.; /// \param cls the name of the class; /// \param skipCore if true (default), remove ""Core"" from the returned list",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:241,Testability,test,tests,241,"// If we get a class name containing lambda, we cannot parse it and we; // can exit early.; // FIXME: This works around a bug when we are instantiating a template; // make_unique and the substitution fails. Seen in most of the dataframe; // tests.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:9,Integrability,interface,interface,9,"/// This interface returns a list of dependent libraries in the form:; /// lib libA.so libB.so libC.so. The first library is the library we are; /// searching dependencies for.; /// Note: In order to speed up the search, we display the dependencies of the; /// libraries which are not yet loaded. For instance, if libB.so was already; /// loaded the list would contain: lib libA.so libC.so.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:37,Integrability,depend,dependent,37,"/// This interface returns a list of dependent libraries in the form:; /// lib libA.so libB.so libC.so. The first library is the library we are; /// searching dependencies for.; /// Note: In order to speed up the search, we display the dependencies of the; /// libraries which are not yet loaded. For instance, if libB.so was already; /// loaded the list would contain: lib libA.so libC.so.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:159,Integrability,depend,dependencies,159,"/// This interface returns a list of dependent libraries in the form:; /// lib libA.so libB.so libC.so. The first library is the library we are; /// searching dependencies for.; /// Note: In order to speed up the search, we display the dependencies of the; /// libraries which are not yet loaded. For instance, if libB.so was already; /// loaded the list would contain: lib libA.so libC.so.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:236,Integrability,depend,dependencies,236,"/// This interface returns a list of dependent libraries in the form:; /// lib libA.so libB.so libC.so. The first library is the library we are; /// searching dependencies for.; /// Note: In order to speed up the search, we display the dependencies of the; /// libraries which are not yet loaded. For instance, if libB.so was already; /// loaded the list would contain: lib libA.so libC.so.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:289,Performance,load,loaded,289,"/// This interface returns a list of dependent libraries in the form:; /// lib libA.so libB.so libC.so. The first library is the library we are; /// searching dependencies for.; /// Note: In order to speed up the search, we display the dependencies of the; /// libraries which are not yet loaded. For instance, if libB.so was already; /// loaded the list would contain: lib libA.so libC.so.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:339,Performance,load,loaded,339,"/// This interface returns a list of dependent libraries in the form:; /// lib libA.so libB.so libC.so. The first library is the library we are; /// searching dependencies for.; /// Note: In order to speed up the search, we display the dependencies of the; /// libraries which are not yet loaded. For instance, if libB.so was already; /// loaded the list would contain: lib libA.so libC.so.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:168,Safety,avoid,avoid,168,"// Skip the symbols which are part of the C/C++ runtime and have a; // fixed library version. See binutils ld VERSION. Those reside in; // 'system' libraries, which we avoid in FindLibraryForSymbol.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:53,Performance,load,loaded,53,"// If we can find the address of the symbol, we have loaded it. Skip.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:162,Deployability,a/b,a/b,162,"// The expected output is just filename without the full path, which; // is not very accurate, because our Dyld implementation might find; // a match in location a/b/c.so and if we return just c.so ROOT might; // resolve it to y/z/c.so and there we might not be ABI compatible.; // FIXME: Teach the users of GetSharedLibDeps to work with full paths.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Performance,Perform,Perform,3,"// Perform a last resort by dropping the lib prefix.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:343,Availability,avail,available,343,"////////////////////////////////////////////////////////////////////////////////; /// Get the list a libraries on which the specified lib depends. The; /// returned string contains as first element the lib itself.; /// Returns 0 in case the lib does not exist or does not have; /// any dependencies. If useDyld is true, we iterate through all available; /// libraries and try to construct the dependency chain by resolving each; /// symbol.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:138,Integrability,depend,depends,138,"////////////////////////////////////////////////////////////////////////////////; /// Get the list a libraries on which the specified lib depends. The; /// returned string contains as first element the lib itself.; /// Returns 0 in case the lib does not exist or does not have; /// any dependencies. If useDyld is true, we iterate through all available; /// libraries and try to construct the dependency chain by resolving each; /// symbol.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:286,Integrability,depend,dependencies,286,"////////////////////////////////////////////////////////////////////////////////; /// Get the list a libraries on which the specified lib depends. The; /// returned string contains as first element the lib itself.; /// Returns 0 in case the lib does not exist or does not have; /// any dependencies. If useDyld is true, we iterate through all available; /// libraries and try to construct the dependency chain by resolving each; /// symbol.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:393,Integrability,depend,dependency,393,"////////////////////////////////////////////////////////////////////////////////; /// Get the list a libraries on which the specified lib depends. The; /// returned string contains as first element the lib itself.; /// Returns 0 in case the lib does not exist or does not have; /// any dependencies. If useDyld is true, we iterate through all available; /// libraries and try to construct the dependency chain by resolving each; /// symbol.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:89,Availability,error,error,89,"////////////////////////////////////////////////////////////////////////////////; /// If error messages are disabled, the interpreter should suppress its; /// failures and warning messages from stdout.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:159,Availability,failure,failures,159,"////////////////////////////////////////////////////////////////////////////////; /// If error messages are disabled, the interpreter should suppress its; /// failures and warning messages from stdout.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:95,Integrability,message,messages,95,"////////////////////////////////////////////////////////////////////////////////; /// If error messages are disabled, the interpreter should suppress its; /// failures and warning messages from stdout.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:180,Integrability,message,messages,180,"////////////////////////////////////////////////////////////////////////////////; /// If error messages are disabled, the interpreter should suppress its; /// failures and warning messages from stdout.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:89,Availability,error,error,89,"////////////////////////////////////////////////////////////////////////////////; /// If error messages are disabled, the interpreter should suppress its; /// failures and warning messages from stdout. Return the previous state.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:159,Availability,failure,failures,159,"////////////////////////////////////////////////////////////////////////////////; /// If error messages are disabled, the interpreter should suppress its; /// failures and warning messages from stdout. Return the previous state.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:95,Integrability,message,messages,95,"////////////////////////////////////////////////////////////////////////////////; /// If error messages are disabled, the interpreter should suppress its; /// failures and warning messages from stdout. Return the previous state.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:180,Integrability,message,messages,180,"////////////////////////////////////////////////////////////////////////////////; /// If error messages are disabled, the interpreter should suppress its; /// failures and warning messages from stdout. Return the previous state.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:3,Integrability,Interface,Interface,3,"// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:122,Availability,error,error,122,"////////////////////////////////////////////////////////////////////////////////; /// Let the interpreter issue a generic error, and set its error state.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:141,Availability,error,error,141,"////////////////////////////////////////////////////////////////////////////////; /// Let the interpreter issue a generic error, and set its error state.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:601,Availability,avail,available,601,"////////////////////////////////////////////////////////////////////////////////; /// This routines used to return the address of the internal wrapper; /// function (of the interpreter) that was used to call *all* the; /// interpreted functions that were bytecode compiled (no longer; /// interpreted line by line). In Cling, there is no such; /// wrapper function.; /// In practice this routines was use to decipher whether the; /// pointer returns by InterfaceMethod could be used to uniquely; /// represent the function. In Cling if the function is in a; /// useable state (its compiled version is available), this is; /// always the case.; /// See TClass::GetMethod.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:91,Integrability,rout,routines,91,"////////////////////////////////////////////////////////////////////////////////; /// This routines used to return the address of the internal wrapper; /// function (of the interpreter) that was used to call *all* the; /// interpreted functions that were bytecode compiled (no longer; /// interpreted line by line). In Cling, there is no such; /// wrapper function.; /// In practice this routines was use to decipher whether the; /// pointer returns by InterfaceMethod could be used to uniquely; /// represent the function. In Cling if the function is in a; /// useable state (its compiled version is available), this is; /// always the case.; /// See TClass::GetMethod.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:143,Integrability,wrap,wrapper,143,"////////////////////////////////////////////////////////////////////////////////; /// This routines used to return the address of the internal wrapper; /// function (of the interpreter) that was used to call *all* the; /// interpreted functions that were bytecode compiled (no longer; /// interpreted line by line). In Cling, there is no such; /// wrapper function.; /// In practice this routines was use to decipher whether the; /// pointer returns by InterfaceMethod could be used to uniquely; /// represent the function. In Cling if the function is in a; /// useable state (its compiled version is available), this is; /// always the case.; /// See TClass::GetMethod.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:348,Integrability,wrap,wrapper,348,"////////////////////////////////////////////////////////////////////////////////; /// This routines used to return the address of the internal wrapper; /// function (of the interpreter) that was used to call *all* the; /// interpreted functions that were bytecode compiled (no longer; /// interpreted line by line). In Cling, there is no such; /// wrapper function.; /// In practice this routines was use to decipher whether the; /// pointer returns by InterfaceMethod could be used to uniquely; /// represent the function. In Cling if the function is in a; /// useable state (its compiled version is available), this is; /// always the case.; /// See TClass::GetMethod.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:388,Integrability,rout,routines,388,"////////////////////////////////////////////////////////////////////////////////; /// This routines used to return the address of the internal wrapper; /// function (of the interpreter) that was used to call *all* the; /// interpreted functions that were bytecode compiled (no longer; /// interpreted line by line). In Cling, there is no such; /// wrapper function.; /// In practice this routines was use to decipher whether the; /// pointer returns by InterfaceMethod could be used to uniquely; /// represent the function. In Cling if the function is in a; /// useable state (its compiled version is available), this is; /// always the case.; /// See TClass::GetMethod.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:453,Integrability,Interface,InterfaceMethod,453,"////////////////////////////////////////////////////////////////////////////////; /// This routines used to return the address of the internal wrapper; /// function (of the interpreter) that was used to call *all* the; /// interpreted functions that were bytecode compiled (no longer; /// interpreted line by line). In Cling, there is no such; /// wrapper function.; /// In practice this routines was use to decipher whether the; /// pointer returns by InterfaceMethod could be used to uniquely; /// represent the function. In Cling if the function is in a; /// useable state (its compiled version is available), this is; /// always the case.; /// See TClass::GetMethod.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load a source file or library called path into the interpreter.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:280,Availability,failure,failure,280,"////////////////////////////////////////////////////////////////////////////////; /// Load the declarations from text into the interpreter.; /// Note that this cannot be (top level) statements; text must contain; /// top level declarations.; /// Returns true on success, false on failure.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load the declarations from text into the interpreter.; /// Note that this cannot be (top level) statements; text must contain; /// top level declarations.; /// Returns true on success, false on failure.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:241,Safety,safe,safe,241,"////////////////////////////////////////////////////////////////////////////////; /// [Place holder for Mutex Lock]; /// Provide the interpreter with a way to; /// acquire a lock used to protect critical section; /// of its code (non-thread safe parts).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:161,Deployability,release,release,161,"////////////////////////////////////////////////////////////////////////////////; /// [Place holder for Mutex Unlock] Provide the interpreter with a way to; /// release a lock used to protect critical section; /// of its code (non-thread safe parts).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:238,Safety,safe,safe,238,"////////////////////////////////////////////////////////////////////////////////; /// [Place holder for Mutex Unlock] Provide the interpreter with a way to; /// release a lock used to protect critical section; /// of its code (non-thread safe parts).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:192,Availability,error,errors,192,"// If no state change is required, exit early.; // FIXME: In future we probably want to complain if we made a request which; // was with the same state as before in order to catch programming errors.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:112,Availability,error,error,112,"////////////////////////////////////////////////////////////////////////////////; /// Set a callback to receive error messages.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:118,Integrability,message,messages,118,"////////////////////////////////////////////////////////////////////////////////; /// Set a callback to receive error messages.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:215,Integrability,interface,interfaces,215,"////////////////////////////////////////////////////////////////////////////////; /// Register value as a temporary, extending its lifetime to that of the; /// interpreter. This is needed for TCling's compatibility interfaces; /// returning long - the address of the temporary objects.; /// As such, ""simple"" types don't need to be stored; they are returned by; /// value; only pointers / references / objects need to be stored.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:117,Modifiability,extend,extending,117,"////////////////////////////////////////////////////////////////////////////////; /// Register value as a temporary, extending its lifetime to that of the; /// interpreter. This is needed for TCling's compatibility interfaces; /// returning long - the address of the temporary objects.; /// As such, ""simple"" types don't need to be stored; they are returned by; /// value; only pointers / references / objects need to be stored.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:301,Usability,simpl,simple,301,"////////////////////////////////////////////////////////////////////////////////; /// Register value as a temporary, extending its lifetime to that of the; /// interpreter. This is needed for TCling's compatibility interfaces; /// returning long - the address of the temporary objects.; /// As such, ""simple"" types don't need to be stored; they are returned by; /// value; only pointers / references / objects need to be stored.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:214,Performance,cache,cache,214,"////////////////////////////////////////////////////////////////////////////////; /// If the interpreter encounters Name, check whether that is an object ROOT; /// could retrieve. To not re-read objects from disk, cache the name/object; /// pair for a given LookupCtx.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:99,Performance,load,loading,99,"// The call to FindSpecialObject might induces any kind of use; // of the interpreter ... (library loading, function calling, etc.); // ... and we _know_ we are in the middle of parsing, so let's make; // sure to save the state and then restore it.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:81,Safety,safe,safe,81,"// After we have saved the token reset the current one to something which; // is safe (semi colon usually means empty decl)",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:114,Availability,down,down,114,"// We can't PushDeclContext, because we go up and the routine that pops; // the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:54,Integrability,rout,routine,54,"// We can't PushDeclContext, because we go up and the routine that pops; // the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:198,Integrability,wrap,wrapper,198,"// We can't PushDeclContext, because we go up and the routine that pops; // the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Integrability,Inject,Inject,86,"////////////////////////////////////////////////////////////////////////////////; /// Inject function as a friend into klass.; /// With function being f in void f() {new N::PrivKlass(); } this enables; /// I/O of non-public classes.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Security,Inject,Inject,86,"////////////////////////////////////////////////////////////////////////////////; /// Inject function as a friend into klass.; /// With function being f in void f() {new N::PrivKlass(); } this enables; /// I/O of non-public classes.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:98,Integrability,interface,interface,98,"//______________________________________________________________________________; //; // CallFunc interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:99,Integrability,interface,interface,99,"//______________________________________________________________________________; //; // ClassInfo interface; //; ////////////////////////////////////////////////////////////////////////////////; /// Return true if the entity pointed to by 'declid' is declared in; /// the context described by 'info'. If info is null, look into the; /// global scope (translation unit scope).",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:103,Integrability,interface,interface,103,"//______________________________________________________________________________; //; // BaseClassInfo interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:104,Integrability,interface,interface,104,"//______________________________________________________________________________; //; // DataMemberInfo interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:107,Integrability,interface,interface,107,"//______________________________________________________________________________; //; // Function Template interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:100,Integrability,interface,interface,100,"//______________________________________________________________________________; //; // MethodInfo interface; //; ////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:201,Integrability,Interface,Interface,201,"//______________________________________________________________________________; //; // MethodInfo interface; //; ////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:255,Deployability,upgrade,upgrade,255,"// Support only up to long long ... but; // FIXME the TMethodCall::Execute only; // return long (4 bytes) ...; // The v5 implementation of TMethodCall::ReturnType; // was not making the distinction so we let it go; // as is for now, but we really need to upgrade; // TMethodCall::Execute ...",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:103,Integrability,interface,interface,103,"//______________________________________________________________________________; //; // MethodArgInfo interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:98,Integrability,interface,interface,98,"//______________________________________________________________________________; //; // TypeInfo interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:101,Integrability,interface,interface,101,"//______________________________________________________________________________; //; // TypedefInfo interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:30,Deployability,update,update,30,"// Now that we have the lock, update the global",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:398,Deployability,release,release,398,"// This case happens when EnableThreadSafety is first called from; // the interpreter function we just handled.; // Since thread safety was not enabled at the time we rewound, there was; // no lock taken and even-though we should be locking the rest of this; // interpreter handling/modifying code (since there might be threads in; // flight), we can't because there would not be any lock guard to release the; // locks",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:129,Safety,safe,safety,129,"// This case happens when EnableThreadSafety is first called from; // the interpreter function we just handled.; // Since thread safety was not enabled at the time we rewound, there was; // no lock taken and even-though we should be locking the rest of this; // interpreter handling/modifying code (since there might be threads in; // flight), we can't because there would not be any lock guard to release the; // locks",MatchSource.CODE_COMMENT,core/metacling/src/TCling.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:129,Integrability,interface,interface,129,"//////////////////////////////////////////////////////////////////////////; // //; // TCling //; // //; // This class defines an interface to the cling C++ interpreter. //; // //; // Cling is a full ANSI compliant C++ interpreter based on //; // clang/LLVM technology. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:32,Modifiability,variab,variables,32,"// set of TObjects used in CINT variables",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:20,Performance,load,loaded,20,"// Shared libraries loaded by G__loadfile().",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:11,Performance,load,load,11,"// Dynamic load path for rootmap files.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:18,Security,hash,hashes,18,"// Map of classes hashes and headers associated",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:12,Security,hash,hashing,12,"// A simple hashing function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:5,Usability,simpl,simple,5,"// A simple hashing function",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:3,Performance,Load,Loaded,3,"// Loaded rootmap files.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:20,Safety,avoid,avoid,20,"// Which typedef to avoid stripping.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:34,Performance,load,loaded,34,"// Internal info to mark the last loaded libray.",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:10,Integrability,Interface,Interface,10,"// Public Interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:12,Integrability,interface,interface,12,"// CallFunc interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:13,Integrability,interface,interface,13,"// ClassInfo interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:17,Integrability,interface,interface,17,"// BaseClassInfo interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:18,Integrability,interface,interface,18,"// DataMemberInfo interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:21,Integrability,interface,interface,21,"// Function Template interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:14,Integrability,interface,interface,14,"// MethodInfo interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:17,Integrability,interface,interface,17,"// MethodArgInfo interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:12,Integrability,interface,interface,12,"// TypeInfo interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:15,Integrability,interface,interface,15,"// TypedefInfo interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:23,Integrability,interface,interface,23,"// QualType Opaque Ptr interface",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:16,Integrability,interface,interface,16,"// FunctionDecl interface ",MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:2,Availability,error,error,2,/*error*/,MatchSource.CODE_COMMENT,core/metacling/src/TCling.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:532,Integrability,interface,interface,532,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingBaseClassInfo. Emulation of the CINT BaseClassInfo class. The CINT C++ interpreter provides an interface to metadata about; the base classes of a class through the BaseClassInfo class. This; class provides the same functionality, using an interface as close; as possible to BaseClassInfo but the base class metadata comes from; the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:676,Integrability,interface,interface,676,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingBaseClassInfo. Emulation of the CINT BaseClassInfo class. The CINT C++ interpreter provides an interface to metadata about; the base classes of a class through the BaseClassInfo class. This; class provides the same functionality, using an interface as close; as possible to BaseClassInfo but the base class metadata comes from; the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:12,Integrability,wrap,wrapper,12,"// Make the wrapper name.",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:13,Integrability,wrap,wrapper,13,"// Write the wrapper code.",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:38,Availability,down,downcast,38,"// If the object is not derived, will downcast to toBase first.",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:3,Usability,Simpl,Simple,3,"// Simple case, move on to the next base class specifier.",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:36,Integrability,depend,dependent,36,"// Check if current base class is a dependent type, that is, an; // uninstantiated template class.",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:5,Integrability,depend,dependent,5,"// A dependent type (uninstantiated template), skip it.",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:3,Deployability,Update,Update,3,"// Update info for this base class.",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:2,Safety,Detect,DetectVirtual,2,/*DetectVirtual=*/,MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:138,Modifiability,inherit,inheritance,138,"// If Dst is not derived from Src we can skip the whole computation below and; // return that Src is not a public base of Dst. Record all inheritance paths.",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:25,Modifiability,inherit,inheritance,25,"// Now walk all possible inheritance paths.",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:36,Modifiability,inherit,inheritance,36,"// If the base class has no virtual inheritance.",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:77,Integrability,message,message,77,"// Need TNormalizedCtxt otherwise...; // Note: should we really be issuing a message here? Shouldn't; // the caller check and issue the message?",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:136,Integrability,message,message,136,"// Need TNormalizedCtxt otherwise...; // Note: should we really be issuing a message here? Shouldn't; // the caller check and issue the message?",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:11,Modifiability,inherit,inheritance,11,"// Virtual inheritance case",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:2,Safety,Detect,DetectVirtual,2,/*DetectVirtual=*/,MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:3,Availability,Error,Error,3,"// Error really unexpected here, because construction / iteration guarantees; //inheritance;",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:80,Modifiability,inherit,inheritance,80,"// Error really unexpected here, because construction / iteration guarantees; //inheritance;",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:54,Modifiability,inherit,inherits,54,"// Derived: public Mid; Mid : protected Base: Derived inherits protected Base?",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.h:214,Integrability,interface,interface,214,"//////////////////////////////////////////////////////////////////////////; // //; // TClingBaseClassInfo //; // //; // Emulation of the CINT BaseClassInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // the base classes of a class through the BaseClassInfo class. This //; // class provides the same functionality, using an interface as close //; // as possible to BaseClassInfo but the base class metadata comes from //; // the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.h:370,Integrability,interface,interface,370,"//////////////////////////////////////////////////////////////////////////; // //; // TClingBaseClassInfo //; // //; // Emulation of the CINT BaseClassInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // the base classes of a class through the BaseClassInfo class. This //; // class provides the same functionality, using an interface as close //; // as possible to BaseClassInfo but the base class metadata comes from //; // the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingBaseClassInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:26,Availability,avail,available,26,"// Check if the symbol is available without loading the library.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:44,Performance,load,loading,44,"// Check if the symbol is available without loading the library.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:93,Integrability,interface,interface,93,"// Try to load the library which should provide the symbol definition.; // TODO: Should this interface with the DynamicLibraryManager directly?",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:10,Performance,load,load,10,"// Try to load the library which should provide the symbol definition.; // TODO: Should this interface with the DynamicLibraryManager directly?",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:12,Performance,load,loading,12,"// Only try loading the library once.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:234,Performance,load,load,234,"// If we get here, the symbols have not been found in the current process,; // so no need to check that again. Instead search for the library that; // provides the symbol and create one MaterializationUnit per library to; // actually load it if needed.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:285,Availability,avail,available,285,"// libCling symbols are intentionally hidden from the process, and libCling must not be; // dlopened. Instead, symbols must be resolved by specifically querying the dynlib handle of; // libCling, which by definition is loaded - else we could not call this code. The handle; // is made available as argument to `CreateInterpreter`.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:219,Performance,load,loaded,219,"// libCling symbols are intentionally hidden from the process, and libCling must not be; // dlopened. Instead, symbols must be resolved by specifically querying the dynlib handle of; // libCling, which by definition is loaded - else we could not call this code. The handle; // is made available as argument to `CreateInterpreter`.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:2,Security,Hash,HashLoc,2,/*HashLoc*/,MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:274,Availability,error,error,274,"// Method called via Callbacks->FileNotFound(Filename); // in Preprocessor::HandleIncludeDirective(), initially allowing to; // change the include path, and allowing us to compile code via ACLiC; // when specifying #include ""myfile.C+"", and suppressing the preprocessor; // error message:; // input_line_23:1:10: fatal error: 'myfile.C+' file not found",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:319,Availability,error,error,319,"// Method called via Callbacks->FileNotFound(Filename); // in Preprocessor::HandleIncludeDirective(), initially allowing to; // change the include path, and allowing us to compile code via ACLiC; // when specifying #include ""myfile.C+"", and suppressing the preprocessor; // error message:; // input_line_23:1:10: fatal error: 'myfile.C+' file not found",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:280,Integrability,message,message,280,"// Method called via Callbacks->FileNotFound(Filename); // in Preprocessor::HandleIncludeDirective(), initially allowing to; // change the include path, and allowing us to compile code via ACLiC; // when specifying #include ""myfile.C+"", and suppressing the preprocessor; // error message:; // input_line_23:1:10: fatal error: 'myfile.C+' file not found",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:150,Safety,safe,safe,150,"// We provide our own way of handling the entire #include ""file.c+""; // After we have saved the token reset the current one to; // something which is safe (semi colon usually means empty decl)",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:114,Availability,down,down,114,"// We can't PushDeclContext, because we go up and the routine that pops; // the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.; // This is needed to solve potential issues when using #include ""myFile.C+""; // after a scope declaration like:; // void Check(TObject* obj) {; // if (obj) cout << ""Found the referenced object\n"";; // else cout << ""Error: Could not find the referenced object\n"";; // }; // #include ""A.C+""",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:473,Availability,Error,Error,473,"// We can't PushDeclContext, because we go up and the routine that pops; // the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.; // This is needed to solve potential issues when using #include ""myFile.C+""; // after a scope declaration like:; // void Check(TObject* obj) {; // if (obj) cout << ""Found the referenced object\n"";; // else cout << ""Error: Could not find the referenced object\n"";; // }; // #include ""A.C+""",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:54,Integrability,rout,routine,54,"// We can't PushDeclContext, because we go up and the routine that pops; // the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.; // This is needed to solve potential issues when using #include ""myFile.C+""; // after a scope declaration like:; // void Check(TObject* obj) {; // if (obj) cout << ""Found the referenced object\n"";; // else cout << ""Error: Could not find the referenced object\n"";; // }; // #include ""A.C+""",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:198,Integrability,wrap,wrapper,198,"// We can't PushDeclContext, because we go up and the routine that pops; // the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.; // This is needed to solve potential issues when using #include ""myFile.C+""; // after a scope declaration like:; // void Check(TObject* obj) {; // if (obj) cout << ""Found the referenced object\n"";; // else cout << ""Error: Could not find the referenced object\n"";; // }; // #include ""A.C+""",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:70,Availability,error,error,70,"// On a failed lookup we have to try to more things before issuing an error.; // The symbol might need to be loaded by ROOT's AutoLoading mechanism or; // it might be a ROOT special object.; //; // Try those first and if still failing issue the diagnostics.; //; // returns true when a declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:314,Availability,error,error,314,"// On a failed lookup we have to try to more things before issuing an error.; // The symbol might need to be loaded by ROOT's AutoLoading mechanism or; // it might be a ROOT special object.; //; // Try those first and if still failing issue the diagnostics.; //; // returns true when a declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:109,Performance,load,loaded,109,"// On a failed lookup we have to try to more things before issuing an error.; // The symbol might need to be loaded by ROOT's AutoLoading mechanism or; // it might be a ROOT special object.; //; // Try those first and if still failing issue the diagnostics.; //; // returns true when a declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:8,Availability,error,error,8,"// init error or rootcling",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:33,Availability,error,error,33,"// Don't do any extra work if an error that is not still recovered occurred.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:57,Availability,recover,recovered,57,"// Don't do any extra work if an error that is not still recovered occurred.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:57,Safety,recover,recovered,57,"// Don't do any extra work if an error that is not still recovered occurred.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:39,Integrability,rout,routines,39,"// happiness.; // The remaining lookup routines only work on global scope functions; // (""macros""), not in classes, namespaces etc - anything that looks like; // it has seen any trace of software development.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:117,Integrability,inject,inject,117,"// For backward-compatibility with CINT we must support stmts like:; // x = 4; y = new MyClass();; // I.e we should ""inject"" a C++11 auto keyword in front of ""x"" and ""y""; // This has to have higher precedence than the dynamic scopes. It is claimed; // that if one assigns to a name and the lookup of that name fails if *must*; // auto keyword must be injected and the stmt evaluation must not be delayed; // until runtime.; // For now supported only at the prompt.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:351,Integrability,inject,injected,351,"// For backward-compatibility with CINT we must support stmts like:; // x = 4; y = new MyClass();; // I.e we should ""inject"" a C++11 auto keyword in front of ""x"" and ""y""; // This has to have higher precedence than the dynamic scopes. It is claimed; // that if one assigns to a name and the lookup of that name fails if *must*; // auto keyword must be injected and the stmt evaluation must not be delayed; // until runtime.; // For now supported only at the prompt.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:117,Security,inject,inject,117,"// For backward-compatibility with CINT we must support stmts like:; // x = 4; y = new MyClass();; // I.e we should ""inject"" a C++11 auto keyword in front of ""x"" and ""y""; // This has to have higher precedence than the dynamic scopes. It is claimed; // that if one assigns to a name and the lookup of that name fails if *must*; // auto keyword must be injected and the stmt evaluation must not be delayed; // until runtime.; // For now supported only at the prompt.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:351,Security,inject,injected,351,"// For backward-compatibility with CINT we must support stmts like:; // x = 4; y = new MyClass();; // I.e we should ""inject"" a C++11 auto keyword in front of ""x"" and ""y""; // This has to have higher precedence than the dynamic scopes. It is claimed; // that if one assigns to a name and the lookup of that name fails if *must*; // auto keyword must be injected and the stmt evaluation must not be delayed; // until runtime.; // For now supported only at the prompt.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:174,Performance,load,load,174,"// We are currently instantiating one (or more) templates. At that point,; // all Decls are present in the AST (with possibly deserialization pending),; // and we should not load more modules which could find an implicit template; // instantiation that is lazily loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:263,Performance,load,loaded,263,"// We are currently instantiating one (or more) templates. At that point,; // all Decls are present in the AST (with possibly deserialization pending),; // and we should not load more modules which could find an implicit template; // instantiation that is lazily loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:40,Availability,avail,available,40,"// FIXME: We should load only the first available and rely on other callbacks; // such as RequireCompleteType and LookupUnqualified to load all.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:20,Performance,load,load,20,"// FIXME: We should load only the first available and rely on other callbacks; // such as RequireCompleteType and LookupUnqualified to load all.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:135,Performance,load,load,135,"// FIXME: We should load only the first available and rely on other callbacks; // such as RequireCompleteType and LookupUnqualified to load all.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:29,Performance,load,loaded,29,"// Skip to the first not-yet-loaded module.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:8,Availability,error,error,8,"// init error or rootcling",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:34,Deployability,update,update,34,"// After loading modules, we must update the redeclaration chains.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:9,Performance,load,loading,9,"// After loading modules, we must update the redeclaration chains.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:2,Performance,load,loadFirstMatchOnly,2,/*loadFirstMatchOnly*/,MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:14,Safety,avoid,avoid,14,"// We want to avoid qualified lookups, because they are expensive and; // difficult to construct. This is why we *artificially* push a scope and; // a decl context, where Sema should do the lookup.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:8,Availability,error,error,8,"// init error or rootcling",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:53,Performance,load,loadFirstMatchOnly,53,"// if (findInGlobalModuleIndex(Tag->getDeclName(), /*loadFirstMatchOnly*/false)); // return true;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:207,Availability,error,error,207,"// The symbol might be defined in the ROOT class AutoLoading map so we have to; // try to autoload it first and do secondary lookup to try to find it.; //; // returns true when a declaration is found and no error should be emitted.; // If FileEntry, this is a reacting on a #include and Name is the included; // filename.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:8,Availability,error,error,8,"// init error or rootcling",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:3,Safety,Avoid,Avoid,3,"// Avoid tail chasing.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:50,Availability,failure,failures,50,"// We should try autoload only for special lookup failures.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:111,Performance,load,load,111,"// Good enough; RequireCompleteType() will tell us if we; // need to auto parse.; // But we might need to auto-load.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:70,Availability,error,error,70,"// If cling cannot find a name it should ask ROOT before it issues an error.; // If ROOT knows the name then it has to create a new variable with that name; // and type in dedicated for that namespace (eg. __ROOT_SpecialObjects).; // For example if the interpreter is looking for h in h-Draw(), this routine; // will create; // namespace __ROOT_SpecialObjects {; // THist* h = (THist*) the_address;; // }; //; // Later if h is called again it again won't be found by the standart lookup; // because it is in our hidden namespace (nobody should do using namespace; // __ROOT_SpecialObjects). It caches the variable declarations and their; // last address. If the newly found decl with the same name (h) has different; // address than the cached one it goes directly at the address and updates it.; //; // returns true when declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:850,Availability,error,error,850,"// If cling cannot find a name it should ask ROOT before it issues an error.; // If ROOT knows the name then it has to create a new variable with that name; // and type in dedicated for that namespace (eg. __ROOT_SpecialObjects).; // For example if the interpreter is looking for h in h-Draw(), this routine; // will create; // namespace __ROOT_SpecialObjects {; // THist* h = (THist*) the_address;; // }; //; // Later if h is called again it again won't be found by the standart lookup; // because it is in our hidden namespace (nobody should do using namespace; // __ROOT_SpecialObjects). It caches the variable declarations and their; // last address. If the newly found decl with the same name (h) has different; // address than the cached one it goes directly at the address and updates it.; //; // returns true when declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:784,Deployability,update,updates,784,"// If cling cannot find a name it should ask ROOT before it issues an error.; // If ROOT knows the name then it has to create a new variable with that name; // and type in dedicated for that namespace (eg. __ROOT_SpecialObjects).; // For example if the interpreter is looking for h in h-Draw(), this routine; // will create; // namespace __ROOT_SpecialObjects {; // THist* h = (THist*) the_address;; // }; //; // Later if h is called again it again won't be found by the standart lookup; // because it is in our hidden namespace (nobody should do using namespace; // __ROOT_SpecialObjects). It caches the variable declarations and their; // last address. If the newly found decl with the same name (h) has different; // address than the cached one it goes directly at the address and updates it.; //; // returns true when declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:300,Integrability,rout,routine,300,"// If cling cannot find a name it should ask ROOT before it issues an error.; // If ROOT knows the name then it has to create a new variable with that name; // and type in dedicated for that namespace (eg. __ROOT_SpecialObjects).; // For example if the interpreter is looking for h in h-Draw(), this routine; // will create; // namespace __ROOT_SpecialObjects {; // THist* h = (THist*) the_address;; // }; //; // Later if h is called again it again won't be found by the standart lookup; // because it is in our hidden namespace (nobody should do using namespace; // __ROOT_SpecialObjects). It caches the variable declarations and their; // last address. If the newly found decl with the same name (h) has different; // address than the cached one it goes directly at the address and updates it.; //; // returns true when declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:132,Modifiability,variab,variable,132,"// If cling cannot find a name it should ask ROOT before it issues an error.; // If ROOT knows the name then it has to create a new variable with that name; // and type in dedicated for that namespace (eg. __ROOT_SpecialObjects).; // For example if the interpreter is looking for h in h-Draw(), this routine; // will create; // namespace __ROOT_SpecialObjects {; // THist* h = (THist*) the_address;; // }; //; // Later if h is called again it again won't be found by the standart lookup; // because it is in our hidden namespace (nobody should do using namespace; // __ROOT_SpecialObjects). It caches the variable declarations and their; // last address. If the newly found decl with the same name (h) has different; // address than the cached one it goes directly at the address and updates it.; //; // returns true when declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:605,Modifiability,variab,variable,605,"// If cling cannot find a name it should ask ROOT before it issues an error.; // If ROOT knows the name then it has to create a new variable with that name; // and type in dedicated for that namespace (eg. __ROOT_SpecialObjects).; // For example if the interpreter is looking for h in h-Draw(), this routine; // will create; // namespace __ROOT_SpecialObjects {; // THist* h = (THist*) the_address;; // }; //; // Later if h is called again it again won't be found by the standart lookup; // because it is in our hidden namespace (nobody should do using namespace; // __ROOT_SpecialObjects). It caches the variable declarations and their; // last address. If the newly found decl with the same name (h) has different; // address than the cached one it goes directly at the address and updates it.; //; // returns true when declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:594,Performance,cache,caches,594,"// If cling cannot find a name it should ask ROOT before it issues an error.; // If ROOT knows the name then it has to create a new variable with that name; // and type in dedicated for that namespace (eg. __ROOT_SpecialObjects).; // For example if the interpreter is looking for h in h-Draw(), this routine; // will create; // namespace __ROOT_SpecialObjects {; // THist* h = (THist*) the_address;; // }; //; // Later if h is called again it again won't be found by the standart lookup; // because it is in our hidden namespace (nobody should do using namespace; // __ROOT_SpecialObjects). It caches the variable declarations and their; // last address. If the newly found decl with the same name (h) has different; // address than the cached one it goes directly at the address and updates it.; //; // returns true when declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:737,Performance,cache,cached,737,"// If cling cannot find a name it should ask ROOT before it issues an error.; // If ROOT knows the name then it has to create a new variable with that name; // and type in dedicated for that namespace (eg. __ROOT_SpecialObjects).; // For example if the interpreter is looking for h in h-Draw(), this routine; // will create; // namespace __ROOT_SpecialObjects {; // THist* h = (THist*) the_address;; // }; //; // Later if h is called again it again won't be found by the standart lookup; // because it is in our hidden namespace (nobody should do using namespace; // __ROOT_SpecialObjects). It caches the variable declarations and their; // last address. If the newly found decl with the same name (h) has different; // address than the cached one it goes directly at the address and updates it.; //; // returns true when declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:8,Availability,error,error,8,"// init error or rootcling",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:24,Safety,abort,abort,24,"// If there is a result abort.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:23,Performance,cache,cache,23,"// force restoring the cache",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:216,Testability,log,log,216,"// Register the address in TCling::fgSetOfSpecials; // to speed-up the execution of TCling::RecursiveRemove when; // the object is not a special.; // See http://root.cern.ch/viewvc/trunk/core/meta/src/TCint.cxx?view=log#rev18109",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:114,Deployability,update,update,114,"// Since code was generated already we cannot rely on the initializer; // of the decl in the AST, however we will update that init so that it; // will be easier while debugging.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:14,Deployability,update,update,14,"// The actual update happens here, directly in memory.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:23,Modifiability,variab,variable,23,"// We will declare the variable as pointer.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:8,Availability,error,error,8,"// init error or rootcling",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:37,Integrability,wrap,wrapper,37,"// DynamicLookup only happens inside wrapper functions:",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:36,Integrability,wrap,wrapper,36,"// Can't have a function inside the wrapper:",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:11,Availability,redundant,redundant,11,"// Prevent redundant declarations for control statements (e.g., for, if, while); // that have already been annotated.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:11,Safety,redund,redundant,11,"// Prevent redundant declarations for control statements (e.g., for, if, while); // that have already been annotated.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:136,Availability,recover,recover,136,"//SemaRef.PushOnScopeChains(Result, SemaRef.TUScope, /*Add to ctx*/true);; // Say that we can handle the situation. Clang should try to recover",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:136,Safety,recover,recover,136,"//SemaRef.PushOnScopeChains(Result, SemaRef.TUScope, /*Add to ctx*/true);; // Say that we can handle the situation. Clang should try to recover",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:739,Performance,cache,cached,739,"// FIXME: Figure out better way to handle:; // C++ [basic.lookup.classref]p1:; // In a class member access expression (5.2.5), if the . or -> token is; // immediately followed by an identifier followed by a <, the; // identifier must be looked up to determine whether the < is the; // beginning of a template argument list (14.2) or a less-than operator.; // The identifier is first looked up in the class of the object; // expression. If the identifier is not found, it is then looked up in; // the context of the entire postfix-expression and shall name a class; // or function template.; //; // We want to ignore object(.|->)member<template>; //if (R.getSema().PP.LookAhead(0).getKind() == tok::less); // TODO: check for . or -> in the cached token stream; // return false;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:100,Security,access,access,100,"// FIXME: Figure out better way to handle:; // C++ [basic.lookup.classref]p1:; // In a class member access expression (5.2.5), if the . or -> token is; // immediately followed by an identifier followed by a <, the; // identifier must be looked up to determine whether the < is the; // beginning of a template argument list (14.2) or a less-than operator.; // The identifier is first looked up in the class of the object; // expression. If the identifier is not found, it is then looked up in; // the context of the entire postfix-expression and shall name a class; // or function template.; //; // We want to ignore object(.|->)member<template>; //if (R.getSema().PP.LookAhead(0).getKind() == tok::less); // TODO: check for . or -> in the cached token stream; // return false;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:8,Availability,error,error,8,"// init error or rootcling",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:52,Integrability,inject,injection,52,"// Raise a warning when trying to use implicit auto injection feature.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:52,Security,inject,injection,52,"// Raise a warning when trying to use implicit auto injection feature.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:61,Availability,recover,recover,61,"// Say that we can handle the situation. Clang should try to recover",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:61,Safety,recover,recover,61,"// Say that we can handle the situation. Clang should try to recover",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:27,Deployability,update,update,27,"// The callback is used to update the list of globals in ROOT.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:27,Deployability,update,update,27,"// The callback is used to update the list of globals in ROOT.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:49,Performance,cache,caches,49,"// The callback is used to clear the autoparsing caches.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:27,Usability,clear,clear,27,"// The callback is used to clear the autoparsing caches.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:10,Safety,safe,safely,10,"// We can safely assume that if the lock exist already when we are in Cling code,; // then the lock has (or should been taken) already. Any action (that caused callers; // to take the lock) is halted during ProcessLine. So it is fair to unlock it.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h:29,Deployability,update,update,29,"// The callbacks are used to update the list of globals in ROOT.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h:2,Security,Hash,HashLoc,2,/*HashLoc*/,MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h:27,Deployability,update,update,27,"// The callback is used to update the list of globals in ROOT.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h:27,Deployability,update,update,27,"// The callback is used to update the list of globals in ROOT.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h:49,Performance,cache,caches,49,"// The callback is used to clear the autoparsing caches.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h:27,Usability,clear,clear,27,"// The callback is used to clear the autoparsing caches.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:565,Integrability,interface,interface,565,"// root/core/meta; // vim: sw=3; // Author: Paul Russo 30/07/2012; // Author: Vassil Vassilev 9/02/2013; /*************************************************************************; * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingCallFunc; Emulation of the CINT CallFunc class. The CINT C++ interpreter provides an interface for calling; functions through the generated wrappers in dictionaries with; the CallFunc class. This class provides the same functionality,; using an interface as close as possible to CallFunc but the; function metadata and calling service comes from the Cling; C++ interpreter and the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:620,Integrability,wrap,wrappers,620,"// root/core/meta; // vim: sw=3; // Author: Paul Russo 30/07/2012; // Author: Vassil Vassilev 9/02/2013; /*************************************************************************; * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingCallFunc; Emulation of the CINT CallFunc class. The CINT C++ interpreter provides an interface for calling; functions through the generated wrappers in dictionaries with; the CallFunc class. This class provides the same functionality,; using an interface as close as possible to CallFunc but the; function metadata and calling service comes from the Cling; C++ interpreter and the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:725,Integrability,interface,interface,725,"// root/core/meta; // vim: sw=3; // Author: Paul Russo 30/07/2012; // Author: Vassil Vassilev 9/02/2013; /*************************************************************************; * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingCallFunc; Emulation of the CINT CallFunc class. The CINT C++ interpreter provides an interface for calling; functions through the generated wrappers in dictionaries with; the CallFunc class. This class provides the same functionality,; using an interface as close as possible to CallFunc but the; function metadata and calling service comes from the Cling; C++ interpreter and the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:67,Deployability,update,update,67,"// FIXME: Find the right type or make sure we have an interface to update; // the clang::Type in the cling::Value",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:54,Integrability,interface,interface,54,"// FIXME: Find the right type or make sure we have an interface to update; // the clang::Type in the cling::Value",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:17,Integrability,wrap,wrapper,17,"// TODO: Build a wrapper around the expression to avoid decompilation and; // compilation and other string operations.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:50,Safety,avoid,avoid,50,"// TODO: Build a wrapper around the expression to avoid decompilation and; // compilation and other string operations.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:186,Testability,test,test,186,"// FIXME: Take the code here https://github.com/root-project/root/blob/550fb2644f3c07d1db72b9b4ddc4eba5a99ddc12/interpreter/cling/lib/Utils/AST.cpp#L316-L350; // to make hist/histdrawv7/test/histhistdrawv7testUnit work into; // QualTypeNames.h in clang; //type_name = clang::TypeName::getFullyQualifiedName(QT, C, Policy);",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:95,Integrability,wrap,wrapper,95,"//; // Collect information about type type of a function parameter; // needed for building the wrapper function.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:576,Availability,failure,failures,576,"// Sometimes it's necessary that we cast the function we want to call first; // to its explicit function type before calling it. This is supposed to prevent; // that we accidentially ending up in a function that is not the one we're; // supposed to call here (e.g. because the C++ function lookup decides to take; // another function that better fits).; // This method has some problems, e.g. when we call a function with default; // arguments and we don't provide all arguments, we would fail with this pattern.; // Same applies with member methods which seem to cause parse failures even when; // we supply the object parameter.; // Therefore we only use it in cases where we know it works and set this variable; // to true when we do.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:705,Modifiability,variab,variable,705,"// Sometimes it's necessary that we cast the function we want to call first; // to its explicit function type before calling it. This is supposed to prevent; // that we accidentially ending up in a function that is not the one we're; // supposed to call here (e.g. because the C++ function lookup decides to take; // another function that better fits).; // This method has some problems, e.g. when we call a function with default; // arguments and we don't provide all arguments, we would fail with this pattern.; // Same applies with member methods which seem to cause parse failures even when; // we supply the object parameter.; // Therefore we only use it in cases where we know it works and set this variable; // to true when we do.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:340,Availability,avail,available,340,"///////////////////////////////////////////////////////////////////////////////; // Returns the DeclContext corresponding to fMethod's Decl.; // \Note that this might be a FunctionDecl or a UsingShadowDecl; we use the; // DeclContext of the UsingShadowDecl e.g. for constructing a derived class; // object, even if invoking a function made available by a using declaration; // of a constructor of a base class (ROOT-11010).",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:175,Availability,Error,Error,175,"// Ordinary function, not a template specialization.; // Note: This might be ok, the body might be defined; // in a library, and all we have seen is the; // header file.; //::Error(""TClingCallFunc::make_wrapper"",; // ""Cannot make wrapper for a function which is ""; // ""declared but not defined!"");; // return 0;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:230,Integrability,wrap,wrapper,230,"// Ordinary function, not a template specialization.; // Note: This might be ok, the body might be defined; // in a library, and all we have seen is the; // header file.; //::Error(""TClingCallFunc::make_wrapper"",; // ""Cannot make wrapper for a function which is ""; // ""declared but not defined!"");; // return 0;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:189,Availability,Error,Error,189,"// We are either TSK_Undeclared or; // TSK_ExplicitSpecialization.; // Note: This might be ok, the body might be defined; // in a library, and all we have seen is the; // header file.; //::Error(""TClingCallFunc::make_wrapper"",; // ""Cannot make wrapper for a function template ""; // ""explicit specialization which is declared ""; // ""but not defined!"");; // return 0;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:244,Integrability,wrap,wrapper,244,"// We are either TSK_Undeclared or; // TSK_ExplicitSpecialization.; // Note: This might be ok, the body might be defined; // in a library, and all we have seen is the; // header file.; //::Error(""TClingCallFunc::make_wrapper"",; // ""Cannot make wrapper for a function template ""; // ""explicit specialization which is declared ""; // ""but not defined!"");; // return 0;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:189,Availability,Error,Error,189,"// We are either TSK_Undeclared or; // TSK_ExplicitSpecialization.; // Note: This might be ok, the body might be defined; // in a library, and all we have seen is the; // header file.; //::Error(""TClingCallFunc::make_wrapper"",; // ""Cannot make wrapper for a function template ""; // ""explicit specialization which is declared ""; // ""but not defined!"");; // return 0;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:244,Integrability,wrap,wrapper,244,"// We are either TSK_Undeclared or; // TSK_ExplicitSpecialization.; // Note: This might be ok, the body might be defined; // in a library, and all we have seen is the; // header file.; //::Error(""TClingCallFunc::make_wrapper"",; // ""Cannot make wrapper for a function template ""; // ""explicit specialization which is declared ""; // ""but not defined!"");; // return 0;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:350,Integrability,depend,dependent,350,"// This function is the result of instantiating or; // specializing a member function of a class template,; // or a member function of a class member of a class template,; // or a member function template of a class template, or a; // member function template of a class member of a class; // template where at least some part of the function is; // dependent on a template argument.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:189,Availability,Error,Error,189,"// We are either TSK_Undeclared or; // TSK_ExplicitSpecialization.; // Note: This might be ok, the body might be defined; // in a library, and all we have seen is the; // header file.; //::Error(""TClingCallFunc::make_wrapper"",; // ""Cannot make wrapper for a dependent function ""; // ""template explicit specialization which is declared ""; // ""but not defined!"");; // return 0;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:244,Integrability,wrap,wrapper,244,"// We are either TSK_Undeclared or; // TSK_ExplicitSpecialization.; // Note: This might be ok, the body might be defined; // in a library, and all we have seen is the; // header file.; //::Error(""TClingCallFunc::make_wrapper"",; // ""Cannot make wrapper for a dependent function ""; // ""template explicit specialization which is declared ""; // ""but not defined!"");; // return 0;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:258,Integrability,depend,dependent,258,"// We are either TSK_Undeclared or; // TSK_ExplicitSpecialization.; // Note: This might be ok, the body might be defined; // in a library, and all we have seen is the; // header file.; //::Error(""TClingCallFunc::make_wrapper"",; // ""Cannot make wrapper for a dependent function ""; // ""template explicit specialization which is declared ""; // ""but not defined!"");; // return 0;",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:350,Integrability,depend,dependent,350,"// This function is the result of instantiating or; // specializing a member function of a class template,; // or a member function of a class member of a class template,; // or a member function template of a class template, or a; // member function template of a class member of a class; // template where at least some part of the function is; // dependent on a template argument.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:16,Integrability,wrap,wrapper,16,"//; // Make the wrapper name.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:17,Integrability,wrap,wrapper,17,"//; // Write the wrapper code.; // FIXME: this should be synthesized into the AST!; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:29,Integrability,inject,inject,29,"// Using declarations cannot inject special members; do not call them; // as such. This might happen by using `Base(Base&, int = 12)`, which; // is fine to be called as `Derived d(someBase, 42)` but not as; // copy constructor of `Derived`.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:29,Security,inject,inject,29,"// Using declarations cannot inject special members; do not call them; // as such. This might happen by using `Base(Base&, int = 12)`, which; // is fine to be called as `Derived d(someBase, 42)` but not as; // copy constructor of `Derived`.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:26,Integrability,wrap,wrapper,26,"//fprintf(stderr, ""%s\n"", wrapper.c_str());; //; // Compile the wrapper code.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:64,Integrability,wrap,wrapper,64,"//fprintf(stderr, ""%s\n"", wrapper.c_str());; //; // Compile the wrapper code.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:16,Integrability,wrap,wrapper,16,"//; // Make the wrapper name.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:17,Integrability,wrap,wrapper,17,"//; // Write the wrapper code.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:7,Integrability,wrap,wrapper,7,"// End wrapper.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:26,Integrability,wrap,wrapper,26,"//fprintf(stderr, ""%s\n"", wrapper.c_str());; //; // Compile the wrapper code.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:64,Integrability,wrap,wrapper,64,"//fprintf(stderr, ""%s\n"", wrapper.c_str());; //; // Compile the wrapper code.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:16,Integrability,wrap,wrapper,16,"//; // Make the wrapper name.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:17,Integrability,wrap,wrapper,17,"//; // Write the wrapper code.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:7,Integrability,wrap,wrapper,7,"// End wrapper.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:26,Integrability,wrap,wrapper,26,"//fprintf(stderr, ""%s\n"", wrapper.c_str());; //; // Compile the wrapper code.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:64,Integrability,wrap,wrapper,64,"//fprintf(stderr, ""%s\n"", wrapper.c_str());; //; // Compile the wrapper code.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:162,Integrability,wrap,wrapper,162,"// Check if we provided a this parameter.; // FIXME: Currently we do not provide consistently the this pointer at; // index 0 of the call arguments passed to the wrapper.; // In C++ we can still call member functions which do not use it. Eg:; // struct S {int Print() { return printf(""a"");} }; auto r1 = ((S*)0)->Print();; // This works just fine even though it might be UB...",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:134,Availability,Error,Error,134,"//if (!info->HasDefaultConstructor()) {; // // FIXME: We might have a ROOT ioctor, we might; // // have to check for that here.; // ::Error(""TClingCallFunc::ExecDefaultConstructor"",; // ""Class has no default constructor: %s"",; // info->Name());; // return 0;; //}",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:4,Availability,Error,Error,4,"//::Error(""TClingCallFunc::SetFunc"", ""Could not find method %s(%s)"", method,; // arglist);",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:70,Modifiability,enhance,enhance,70,"// FIXME: The arglist was already parsed by the lookup, we should; // enhance the lookup to return the resulting expression; // list so we do not need to parse it again here.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:4,Availability,Error,Error,4,"//::Error(""TClingCallFunc::SetFuncProto"", ""Could not find method %s(%s)"",; // method, proto);",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:4,Availability,Error,Error,4,"//::Error(""TClingCallFunc::SetFuncProto"", ""Could not find method %s(%s)"",; // method, proto);",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h:204,Integrability,interface,interface,204,"//////////////////////////////////////////////////////////////////////////; // //; // TClingCallFunc //; // //; // Emulation of the CINT CallFunc class. //; // //; // The CINT C++ interpreter provides an interface for calling //; // functions through the generated wrappers in dictionaries with //; // the CallFunc class. This class provides the same functionality, //; // using an interface as close as possible to CallFunc but the //; // function metadata and calling service comes from the Cling //; // C++ interpreter and the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h:265,Integrability,wrap,wrappers,265,"//////////////////////////////////////////////////////////////////////////; // //; // TClingCallFunc //; // //; // Emulation of the CINT CallFunc class. //; // //; // The CINT C++ interpreter provides an interface for calling //; // functions through the generated wrappers in dictionaries with //; // the CallFunc class. This class provides the same functionality, //; // using an interface as close as possible to CallFunc but the //; // function metadata and calling service comes from the Cling //; // C++ interpreter and the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h:382,Integrability,interface,interface,382,"//////////////////////////////////////////////////////////////////////////; // //; // TClingCallFunc //; // //; // Emulation of the CINT CallFunc class. //; // //; // The CINT C++ interpreter provides an interface for calling //; // functions through the generated wrappers in dictionaries with //; // the CallFunc class. This class provides the same functionality, //; // using an interface as close as possible to CallFunc but the //; // function metadata and calling service comes from the Cling //; // C++ interpreter and the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h:24,Integrability,wrap,wrapper,24,"/// Pointer to compiled wrapper, we do *not* own.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h:20,Integrability,interface,interface,20,/*FIXME Remove that interface */,MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h:207,Safety,avoid,avoid,207,"// T can be different from the actual parameter of the underlying function.; // If we know already the function signature, make sure we create the; // cling::Value with the proper type and representation to avoid; // re-adjusting at the time we execute.",MatchSource.CODE_COMMENT,core/metacling/src/TClingCallFunc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:524,Integrability,interface,interface,524,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingClassInfo. Emulation of the CINT ClassInfo class. The CINT C++ interpreter provides an interface to metadata about; a class through the ClassInfo class. This class provides the same; functionality, using an interface as close as possible to ClassInfo; but the class metadata comes from the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:644,Integrability,interface,interface,644,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingClassInfo. Emulation of the CINT ClassInfo class. The CINT C++ interpreter provides an interface to metadata about; a class through the ClassInfo class. This class provides the same; functionality, using an interface as close as possible to ClassInfo; but the class metadata comes from the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:45,Integrability,interface,interface,45,"// We are an enum or namespace.; // The cint interface always returns 0L for these guys.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:12,Integrability,interface,interface,12,"// The cint interface always returns 0L for these guys.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:28,Security,access,accessible,28,"// This function may not be accessible using a pointer; // to the declaring class, get the adjustment necessary; // to convert that to a pointer to the defining class.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:31,Performance,cache,cache,31,"// Check for the offset in the cache.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:253,Modifiability,enhance,enhanced,253,"// Return true if there a constructor taking no arguments (including; // a constructor that has defaults for all of its arguments) which; // is callable. Either it has a body, or it is trivial and the; // compiler elides it.; //; // Note: This is could enhanced to also know about the ROOT ioctor; // but this was not the case in CINT.; //",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:36,Performance,load,loaded,36,"// All clang classes are considered loaded.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:18,Performance,cache,cache,18,"// invalidate the cache.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:19,Usability,usab,usable,19,"// Advance to next usable decl, or return if there is no next usable decl.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:62,Usability,usab,usable,62,"// Advance to next usable decl, or return if there is no next usable decl.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:75,Availability,Error,Error,75,"// FIXME: We fail roottest root/io/newdelete if we issue this message!; // Error(""TClingClassInfo::New()"", ""Class has no default constructor: %s"",; // FullyQualifiedName(GetDecl()).c_str());",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:62,Integrability,message,message,62,"// FIXME: We fail roottest root/io/newdelete if we issue this message!; // Error(""TClingClassInfo::New()"", ""Class has no default constructor: %s"",; // FullyQualifiedName(GetDecl()).c_str());",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:74,Availability,Error,Error,74,"// FIXME: We fail roottest root/io/newdelete if we issue this message!; //Error(""TClingClassInfo::New(n)"",; // ""Class has no default constructor: %s"",; // FullyQualifiedName(GetDecl()).c_str());",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:62,Integrability,message,message,62,"// FIXME: We fail roottest root/io/newdelete if we issue this message!; //Error(""TClingClassInfo::New(n)"",; // ""Class has no default constructor: %s"",; // FullyQualifiedName(GetDecl()).c_str());",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:74,Availability,Error,Error,74,"// FIXME: We fail roottest root/io/newdelete if we issue this message!; //Error(""TClingClassInfo::New(n, arena)"",; // ""Class has no default constructor: %s"",; // FullyQualifiedName(GetDecl()).c_str());",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:62,Integrability,message,message,62,"// FIXME: We fail roottest root/io/newdelete if we issue this message!; //Error(""TClingClassInfo::New(n, arena)"",; // ""Class has no default constructor: %s"",; // FullyQualifiedName(GetDecl()).c_str());",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:74,Availability,Error,Error,74,"// FIXME: We fail roottest root/io/newdelete if we issue this message!; //Error(""TClingClassInfo::New(arena)"",; // ""Class has no default constructor: %s"",; // FullyQualifiedName(GetDecl()).c_str());",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:62,Integrability,message,message,62,"// FIXME: We fail roottest root/io/newdelete if we issue this message!; //Error(""TClingClassInfo::New(arena)"",; // ""Class has no default constructor: %s"",; // FullyQualifiedName(GetDecl()).c_str());",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:19,Performance,cache,cache,19,"// NOTE: We cannot cache the result, since we are really an iterator.; // Try to get the comment either from the annotation or the header; // file, if present.; // Iterate over the redeclarations, we can have multiple definitions in the; // redecl chain (came from merging of pcms).",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h:206,Integrability,interface,interface,206,"//////////////////////////////////////////////////////////////////////////; // //; // TClingClassInfo //; // //; // Emulation of the CINT ClassInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // a class through the ClassInfo class. This class provides the same //; // functionality, using an interface as close as possible to ClassInfo //; // but the class metadata comes from the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h:338,Integrability,interface,interface,338,"//////////////////////////////////////////////////////////////////////////; // //; // TClingClassInfo //; // //; // Emulation of the CINT ClassInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // a class through the ClassInfo class. This class provides the same //; // functionality, using an interface as close as possible to ClassInfo //; // but the class metadata comes from the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h:26,Availability,down,down,26,"// FIXME: We should track down all sets and potentially avoid them.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h:56,Safety,avoid,avoid,56,"// FIXME: We should track down all sets and potentially avoid them.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h:18,Performance,cache,cache,18,"// invalidate the cache.",MatchSource.CODE_COMMENT,core/metacling/src/TClingClassInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:534,Integrability,interface,interface,534,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingDataMemberInfo. Emulation of the CINT DataMemberInfo class. The CINT C++ interpreter provides an interface to metadata about; the data members of a class through the DataMemberInfo class. This; class provides the same functionality, using an interface as close; as possible to DataMemberInfo but the data member metadata comes; from the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:679,Integrability,interface,interface,679,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingDataMemberInfo. Emulation of the CINT DataMemberInfo class. The CINT C++ interpreter provides an interface to metadata about; the data members of a class through the DataMemberInfo class. This; class provides the same functionality, using an interface as close; as possible to DataMemberInfo but the data member metadata comes; from the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:136,Modifiability,variab,variable,136,"// Skip unnamed declarations, e.g. in; // struct S {; // struct { int i; }; // };; // the inner struct corresponds to an unnamed member variable,; // where only `S::i` should be exposed.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:178,Security,expose,exposed,178,"// Skip unnamed declarations, e.g. in; // struct S {; // struct { int i; }; // };; // the inner struct corresponds to an unnamed member variable,; // where only `S::i` should be exposed.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:3,Safety,Sanity check,Sanity check,3,"// Sanity check the current data member.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:3,Availability,Error,Error,3,"// Error, was not a data member, variable, or enumerator.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:33,Modifiability,variab,variable,33,"// Error, was not a data member, variable, or enumerator.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:3,Safety,Sanity check,Sanity check,3,"// Sanity check the current data member.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:3,Availability,Error,Error,3,"// Error, was not a data member, variable, or enumerator.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:33,Modifiability,variab,variable,33,"// Error, was not a data member, variable, or enumerator.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:40,Modifiability,variab,variables,40,"// We can't reassign constexpr or const variables. We can compute the; // initializer.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:121,Security,access,access,121,"// If the declaration is public in a private nested struct, make the declaration; // private nonetheless, as for outside access (e.g. ROOT I/O) it's private:; // NOTE: this uses `GetDecl()`, to capture the access of the UsingShadowDecl,; // which is defined in the derived class and might differ from the access of the decl; // in the base class.; // TODO: move this somewhere such that TClingMethodInfo can use this, too.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:206,Security,access,access,206,"// If the declaration is public in a private nested struct, make the declaration; // private nonetheless, as for outside access (e.g. ROOT I/O) it's private:; // NOTE: this uses `GetDecl()`, to capture the access of the UsingShadowDecl,; // which is defined in the derived class and might differ from the access of the decl; // in the base class.; // TODO: move this somewhere such that TClingMethodInfo can use this, too.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:305,Security,access,access,305,"// If the declaration is public in a private nested struct, make the declaration; // private nonetheless, as for outside access (e.g. ROOT I/O) it's private:; // NOTE: this uses `GetDecl()`, to capture the access of the UsingShadowDecl,; // which is defined in the derived class and might differ from the access of the decl; // in the base class.; // TODO: move this somewhere such that TClingMethodInfo can use this, too.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:42,Modifiability,variab,variable,42,"// Data members of a namespace are global variable which were; // considered to be 'static' in the CINT (and thus ROOT) scheme.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:3,Safety,Sanity check,Sanity check,3,"// Sanity check the current data member.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:3,Availability,Error,Error,3,"// Error, was not a data member, variable, or enumerator.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:33,Modifiability,variab,variable,33,"// Error, was not a data member, variable, or enumerator.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:32,Integrability,interface,interface,32,"// Truncate cast to fit to cint interface.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:110,Integrability,depend,depends,110,"// In CINT's version, the type name returns did *not* include any array; // information, ROOT's existing code depends on it.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:110,Integrability,depend,depends,110,"// In CINT's version, the type name returns did *not* include any array; // information, ROOT's existing code depends on it.; // This might become part of the implementation of GetNormalizedName.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:29,Performance,cache,cache,29,"//NOTE: We can't use it as a cache due to the ""thoughtful"" self iterator; //if (fTitle.size()); // return fTitle.c_str();",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.h:216,Integrability,interface,interface,216,"//////////////////////////////////////////////////////////////////////////; // //; // TClingDataMemberInfo //; // //; // Emulation of the CINT DataMemberInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // the data members of a class through the DataMemberInfo class. This //; // class provides the same functionality, using an interface as close //; // as possible to DataMemberInfo but the data member metadata comes //; // from the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.h:373,Integrability,interface,interface,373,"//////////////////////////////////////////////////////////////////////////; // //; // TClingDataMemberInfo //; // //; // Emulation of the CINT DataMemberInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // the data members of a class through the DataMemberInfo class. This //; // class provides the same functionality, using an interface as close //; // as possible to DataMemberInfo but the data member metadata comes //; // from the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.h:23,Performance,cache,caches,23,"// Invalidate the name caches.",MatchSource.CODE_COMMENT,core/metacling/src/TClingDataMemberInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMemberIter.h:25,Modifiability,variab,variable,25,"// TODO: add support for variable templates.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMemberIter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMemberIter.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx:529,Integrability,interface,interface,529,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingMethodArgInfo; Emulation of the CINT MethodInfo class. The CINT C++ interpreter provides an interface to metadata about; the arguments to a function through the MethodArgInfo class. This; class provides the same functionality, using an interface as close; as possible to MethodArgInfo but the typedef metadata comes from; the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodArgInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx:673,Integrability,interface,interface,673,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingMethodArgInfo; Emulation of the CINT MethodInfo class. The CINT C++ interpreter provides an interface to metadata about; the arguments to a function through the MethodArgInfo class. This; class provides the same functionality, using an interface as close; as possible to MethodArgInfo but the typedef metadata comes from; the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodArgInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx:128,Integrability,depend,depends,128,"// Calling the base class implementation is unsafe because we override the; // GetDecl which it forwads to. That implementation depends on fIdx which is; // used to determine validity.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodArgInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx:44,Safety,unsafe,unsafe,44,"// Calling the base class implementation is unsafe because we override the; // GetDecl which it forwads to. That implementation depends on fIdx which is; // used to determine validity.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodArgInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx:18,Performance,cache,cache,18,"// invalidate the cache.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodArgInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.h:211,Integrability,interface,interface,211,"//////////////////////////////////////////////////////////////////////////; // //; // TClingMethodArgInfo //; // //; // Emulation of the CINT MethodInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // the arguments to a function through the MethodArgInfo class. This //; // class provides the same functionality, using an interface as close //; // as possible to MethodArgInfo but the typedef metadata comes from //; // the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodArgInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.h:367,Integrability,interface,interface,367,"//////////////////////////////////////////////////////////////////////////; // //; // TClingMethodArgInfo //; // //; // Emulation of the CINT MethodInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // the arguments to a function through the MethodArgInfo class. This //; // class provides the same functionality, using an interface as close //; // as possible to MethodArgInfo but the typedef metadata comes from //; // the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodArgInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:526,Integrability,interface,interface,526,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingMethodInfo; Emulation of the CINT MethodInfo class. The CINT C++ interpreter provides an interface to metadata about; a function through the MethodInfo class. This class provides the; same functionality, using an interface as close as possible to; MethodInfo but the typedef metadata comes from the Clang C++; compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:650,Integrability,interface,interface,650,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingMethodInfo; Emulation of the CINT MethodInfo class. The CINT C++ interpreter provides an interface to metadata about; a function through the MethodInfo class. This class provides the; same functionality, using an interface as close as possible to; MethodInfo but the typedef metadata comes from the Clang C++; compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:364,Security,expose,exposed,364,"// This is a special member pulled in through a using decl. Special; // members of derived classes cannot be replaced; ignore this using decl,; // and keep only the (still possibly compiler-generated) special member of the; // derived class.; // NOTE that e.g. `Klass(int = 0)` has SpecMemKind == clang::Sema::CXXDefaultConstructor,; // yet this signature must be exposed, so check the argument count.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:333,Integrability,depend,dependent,333,"// We have a function template; // template <class X = int, int i = 7> void func(int a0, X a1[i], X::type a2[i]); // which has defaults for all its template parameters `X` and `i`. To; // instantiate it we have to do a lookup, which in turn needs the function; // argument types, e.g. `int[12]`.; // If the function argument type is dependent (a1 and a2) we need to; // substitute the types first, using the template arguments derived from the; // template parameters' defaults.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:14,Integrability,inject,inject,14,"// This would inject an emprt parameter pack, which is a good default.; // But for cases where instantiation fails, this hits bug in unloading; // of the failed instantiation, causing a missing symbol in subsequent; // transactions where a Decl instantiated by the failed instatiation; // is not re-emitted. So for now just give up default-instantiating; // templates with parameter packs, even if this is simply a work-around.; //defaultTemplateArgs.emplace_back(ArrayRef<TemplateArgument>{}); // empty pack.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:14,Security,inject,inject,14,"// This would inject an emprt parameter pack, which is a good default.; // But for cases where instantiation fails, this hits bug in unloading; // of the failed instantiation, causing a missing symbol in subsequent; // transactions where a Decl instantiated by the failed instatiation; // is not re-emitted. So for now just give up default-instantiating; // templates with parameter packs, even if this is simply a work-around.; //defaultTemplateArgs.emplace_back(ArrayRef<TemplateArgument>{}); // empty pack.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:406,Usability,simpl,simply,406,"// This would inject an emprt parameter pack, which is a good default.; // But for cases where instantiation fails, this hits bug in unloading; // of the failed instantiation, causing a missing symbol in subsequent; // transactions where a Decl instantiated by the failed instatiation; // is not re-emitted. So for now just give up default-instantiating; // templates with parameter packs, even if this is simply a work-around.; //defaultTemplateArgs.emplace_back(ArrayRef<TemplateArgument>{}); // empty pack.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:22,Integrability,depend,dependent,22,"// Now substitute the dependent function parameter types given defaultTemplateArgs.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:52,Availability,error,errors,52,"// Provide an instantiation context that suppresses errors:; // DeducedTemplateArgumentSubstitution! (ROOT-8422)",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:78,Integrability,depend,dependent,78,"// Collect the function arguments of the templated function, substituting; // dependent types as possible.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:27,Integrability,depend,dependent,27,"// If the function type is dependent, try to resolve it through the class's; // template arguments. If that fails, skip this function.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:99,Integrability,depend,dependent,99,"// Even after resolving the types through the surrounding template; // this argument type is still dependent: do not look it up.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:29,Integrability,interface,interface,29,"// Truncate cast to fit cint interface.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:29,Integrability,interface,interface,29,"// Truncate cast to fit cint interface.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:18,Performance,cache,cache,18,"// invalidate the cache.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:47,Security,access,access,47,"// NOTE: this uses `GetDecl()`, to capture the access of the UsingShadowDecl,; // which is defined in the derived class and might differ from the access of fd; // in the base class.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:146,Security,access,access,146,"// NOTE: this uses `GetDecl()`, to capture the access of the UsingShadowDecl,; // which is defined in the derived class and might differ from the access of fd; // in the base class.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:44,Modifiability,inherit,inheritance,44,"// Access of the ctor is access of the base inheritance, and; // cannot be overruled by the access of the using decl.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:3,Security,Access,Access,3,"// Access of the ctor is access of the base inheritance, and; // cannot be overruled by the access of the using decl.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:25,Security,access,access,25,"// Access of the ctor is access of the base inheritance, and; // cannot be overruled by the access of the using decl.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:92,Security,access,access,92,"// Access of the ctor is access of the base inheritance, and; // cannot be overruled by the access of the using decl.",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:29,Performance,cache,cache,29,"//NOTE: We can't use it as a cache due to the ""thoughtful"" self iterator; //if (fTitle.size()); // return fTitle.c_str();; // Try to get the comment either from the annotation or the header file if present; // Iterate over the redeclarations, we can have multiple definitions in the; // redecl chain (came from merging of pcms).",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.h:208,Integrability,interface,interface,208,"//////////////////////////////////////////////////////////////////////////; // //; // TClingMethodInfo //; // //; // Emulation of the CINT MethodInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // a function through the MethodInfo class. This class provides the //; // same functionality, using an interface as close as possible to //; // MethodInfo but the typedef metadata comes from the Clang C++ //; // compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.h:344,Integrability,interface,interface,344,"//////////////////////////////////////////////////////////////////////////; // //; // TClingMethodInfo //; // //; // Emulation of the CINT MethodInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // a function through the MethodInfo class. This class provides the //; // same functionality, using an interface as close as possible to //; // MethodInfo but the typedef metadata comes from the Clang C++ //; // compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingMethodInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingRdictModuleFileExtension.h:37,Testability,test,testing,37,"/// A module file extension used for testing purposes.",MatchSource.CODE_COMMENT,core/metacling/src/TClingRdictModuleFileExtension.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingRdictModuleFileExtension.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:528,Integrability,interface,interface,528,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingTypedefInfo; Emulation of the CINT TypedefInfo class. The CINT C++ interpreter provides an interface to metadata about; a typedef through the TypedefInfo class. This class provides the; same functionality, using an interface as close as possible to; TypedefInfo but the typedef metadata comes from the Clang C++; compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:652,Integrability,interface,interface,652,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingTypedefInfo; Emulation of the CINT TypedefInfo class. The CINT C++ interpreter provides an interface to metadata about; a typedef through the TypedefInfo class. This class provides the; same functionality, using an interface as close as possible to; TypedefInfo but the typedef metadata comes from the Clang C++; compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:18,Performance,cache,cache,18,"// invalidate the cache.",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:19,Usability,usab,usable,19,"// Advance to next usable decl, or return if; // there is no next usable decl.",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:66,Usability,usab,usable,66,"// Advance to next usable decl, or return if; // there is no next usable decl.",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:99,Availability,mask,mask,99,"////////////////////////////////////////////////////////////////////////////////; /// Return a bit mask of metadata about the current typedef.",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:26,Integrability,depend,dependent,26,"// The underlying type is dependent on a template parameter,; // we have no idea what it is yet.",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:33,Integrability,interface,interface,33,"// Truncate cast to fit the CINT interface.",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:29,Performance,cache,cache,29,"//NOTE: We can't use it as a cache due to the ""thoughtful"" self iterator; //if (fTitle.size()); // return fTitle.c_str();; // Try to get the comment either from the annotation or the header file if present; // Iterate over the redeclarations, we can have multiple definitions in the; // redecl chain (came from merging of pcms).",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.h:210,Integrability,interface,interface,210,"//////////////////////////////////////////////////////////////////////////; // //; // TClingTypedefInfo //; // //; // Emulation of the CINT TypedefInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // a typedef through the TypedefInfo class. This class provides the //; // same functionality, using an interface as close as possible to //; // TypedefInfo but the typedef metadata comes from the Clang C++ //; // compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.h:346,Integrability,interface,interface,346,"//////////////////////////////////////////////////////////////////////////; // //; // TClingTypedefInfo //; // //; // Emulation of the CINT TypedefInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // a typedef through the TypedefInfo class. This class provides the //; // same functionality, using an interface as close as possible to //; // TypedefInfo but the typedef metadata comes from the Clang C++ //; // compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypedefInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx:522,Integrability,interface,interface,522,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingTypeInfo; Emulation of the CINT TypeInfo class. The CINT C++ interpreter provides an interface to metadata about; a type through the TypeInfo class. This class provides the same; functionality, using an interface as close as possible to TypeInfo; but the type metadata comes from the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypeInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx:640,Integrability,interface,interface,640,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingTypeInfo; Emulation of the CINT TypeInfo class. The CINT C++ interpreter provides an interface to metadata about; a type through the TypeInfo class. This class provides the same; functionality, using an interface as close as possible to TypeInfo; but the type metadata comes from the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypeInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx:96,Integrability,depend,depend,96,"// TODO: This needs to be locked, but the lock cannot be placed in TClingUtils.cxx as it cannot depend from; // TInterpreter.h for the declaration of gInterpreterMutex. Or can it?",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypeInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx:3,Integrability,Depend,Dependent,3,"// Dependent on a template parameter, we do not know what it is yet.",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypeInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx:96,Integrability,depend,depend,96,"// TODO: This needs to be locked, but the lock cannot be placed in TClingUtils.cxx as it cannot depend from; // TInterpreter.h for the declaration of gInterpreterMutex. Or can it?",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypeInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx:96,Integrability,depend,depend,96,"// TODO: This needs to be locked, but the lock cannot be placed in TClingUtils.cxx as it cannot depend from; // TInterpreter.h for the declaration of gInterpreterMutex. Or can it?",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypeInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx:25,Energy Efficiency,efficient,efficient,25,"// in C++11 this will be efficient thanks to the move constructor.",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypeInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.h:204,Integrability,interface,interface,204,"//////////////////////////////////////////////////////////////////////////; // //; // TClingTypeInfo //; // //; // Emulation of the CINT TypeInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // a type through the TypeInfo class. This class provides the same //; // functionality, using an interface as close as possible to TypeInfo //; // but the type metadata comes from the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypeInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.h:334,Integrability,interface,interface,334,"//////////////////////////////////////////////////////////////////////////; // //; // TClingTypeInfo //; // //; // Emulation of the CINT TypeInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // a type through the TypeInfo class. This class provides the same //; // functionality, using an interface as close as possible to TypeInfo //; // but the type metadata comes from the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingTypeInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingValue.cxx:460,Integrability,Bridg,Bridge,460,"// @(#)root/core/meta:$Id$; // Author: Vassil Vassilev 14/03/2013; /*******************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; ******************************************************************************/; /** \class TClingValue; Bridge between cling::Value and ROOT.; */",MatchSource.CODE_COMMENT,core/metacling/src/TClingValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingValue.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingValue.h:674,Modifiability,variab,variable,674,"// @(#)root/core/meta:$Id$e; // Author: Vassil Vassilev 13/03/2013; /*******************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; ******************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; // //; // Class representing a value coming from cling. Its main use case //; // is to TCallFunc. When TCallFunc returns by-value, i.e. a temporary //; // variable, its lifetime has to be extended. TClingValue provides a //; // way to extend the temporaries lifetime and gives the user to control it. //; // //; // The class is used to hide the implementation details of //; // cling::Value. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingValue.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingValue.h:707,Modifiability,extend,extended,707,"// @(#)root/core/meta:$Id$e; // Author: Vassil Vassilev 13/03/2013; /*******************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; ******************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; // //; // Class representing a value coming from cling. Its main use case //; // is to TCallFunc. When TCallFunc returns by-value, i.e. a temporary //; // variable, its lifetime has to be extended. TClingValue provides a //; // way to extend the temporaries lifetime and gives the user to control it. //; // //; // The class is used to hide the implementation details of //; // cling::Value. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingValue.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingValue.h:754,Modifiability,extend,extend,754,"// @(#)root/core/meta:$Id$e; // Author: Vassil Vassilev 13/03/2013; /*******************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; ******************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; // //; // Class representing a value coming from cling. Its main use case //; // is to TCallFunc. When TCallFunc returns by-value, i.e. a temporary //; // variable, its lifetime has to be extended. TClingValue provides a //; // way to extend the temporaries lifetime and gives the user to control it. //; // //; // The class is used to hide the implementation details of //; // cling::Value. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,core/metacling/src/TClingValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingValue.h
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:35,Integrability,wrap,wrapper,35,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:97,Integrability,interface,interface,97,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:140,Integrability,wrap,wrapper,140,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:233,Integrability,wrap,wrapper,233,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:324,Integrability,wrap,wrapper,324,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:332,Integrability,interface,interface,332,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:524,Integrability,interface,interface,524,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:9,Testability,test,tests,9,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:128,Testability,test,test,128,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:264,Testability,assert,assertions,264,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:500,Testability,test,tests,500,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:604,Testability,test,tests,604,"// These tests check the generated wrapper functions that allow calling C++ functions.; // via C interface.; // Usually we only test that a wrapper function compiles correctly, but sometimes; // we also do some further checks on the wrapper here. See the specific assertions for more; // explanation on this.; // NOTE: This wrapper interface should be replaced in the future with a proper; // way of calling these functions that doesn't require parsing generated strings; // of C++ code, so if these tests fail because this interface was replaced by another; // system, feel free to delete them as these tests here don't represent things the user; // should do in his code.; // A class that creates a CallFunc and deletes it at the end of its scope.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:3,Testability,Test,Test,3,"// Test that we cast this function to the right function type.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:3,Testability,Test,Test,3,"// Test that we cast this function to the right function type.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:3,Testability,Test,Test,3,"// Test that we cast this function to the right function type.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:3,Testability,Test,Test,3,"// Test that we don't cast the function because otherwise we lose the information; // about the default call.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:3,Testability,Test,Test,3,"// Test that we cast this template function to the right function type.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:25,Integrability,wrap,wrapper,25,"// We just test that the wrapper compiles. This is a regression test to make sure; // we never try to cast a member function as we do above.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:11,Testability,test,test,11,"// We just test that the wrapper compiles. This is a regression test to make sure; // we never try to cast a member function as we do above.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:64,Testability,test,test,64,"// We just test that the wrapper compiles. This is a regression test to make sure; // we never try to cast a member function as we do above.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:53,Integrability,wrap,wrapper,53,"// FIXME: It's currently possible that we generate a wrapper that is similar to the; // call we use to initialize k2. In this case we generate a wrapper that doesn't; // compile and we crash. As it seems to be impossible/difficult to call template; // operators through the interface we use in the other tests, we just demonstrate; // the failing declaration of the wrapper here.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:145,Integrability,wrap,wrapper,145,"// FIXME: It's currently possible that we generate a wrapper that is similar to the; // call we use to initialize k2. In this case we generate a wrapper that doesn't; // compile and we crash. As it seems to be impossible/difficult to call template; // operators through the interface we use in the other tests, we just demonstrate; // the failing declaration of the wrapper here.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:274,Integrability,interface,interface,274,"// FIXME: It's currently possible that we generate a wrapper that is similar to the; // call we use to initialize k2. In this case we generate a wrapper that doesn't; // compile and we crash. As it seems to be impossible/difficult to call template; // operators through the interface we use in the other tests, we just demonstrate; // the failing declaration of the wrapper here.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:366,Integrability,wrap,wrapper,366,"// FIXME: It's currently possible that we generate a wrapper that is similar to the; // call we use to initialize k2. In this case we generate a wrapper that doesn't; // compile and we crash. As it seems to be impossible/difficult to call template; // operators through the interface we use in the other tests, we just demonstrate; // the failing declaration of the wrapper here.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:304,Testability,test,tests,304,"// FIXME: It's currently possible that we generate a wrapper that is similar to the; // call we use to initialize k2. In this case we generate a wrapper that doesn't; // compile and we crash. As it seems to be impossible/difficult to call template; // operators through the interface we use in the other tests, we just demonstrate; // the failing declaration of the wrapper here.",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:2,Safety,abort,abort,2,/*abort*/,MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:14,Testability,test,testfunc,14,"R""cpp(; float testfunc(int a, int b, float c) {; return a + b * c;; }; )cpp""",MatchSource.CODE_COMMENT,core/metacling/test/TClingCallFuncTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingDataMemberInfoTests.cxx:284,Availability,redundant,redundant,284,"// gGeoManager is defined in the Geom libraries and we want to make sure we; // do not load it when autoloading is off. We can only test this in modules; // mode because gGeoManager is not part of the PCH and non-modular ROOT has; // header parsing and autoloading coupled leading to redundant load of; // libGeom at gROOT->GetGlobal time.",MatchSource.CODE_COMMENT,core/metacling/test/TClingDataMemberInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingDataMemberInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingDataMemberInfoTests.cxx:87,Performance,load,load,87,"// gGeoManager is defined in the Geom libraries and we want to make sure we; // do not load it when autoloading is off. We can only test this in modules; // mode because gGeoManager is not part of the PCH and non-modular ROOT has; // header parsing and autoloading coupled leading to redundant load of; // libGeom at gROOT->GetGlobal time.",MatchSource.CODE_COMMENT,core/metacling/test/TClingDataMemberInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingDataMemberInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingDataMemberInfoTests.cxx:294,Performance,load,load,294,"// gGeoManager is defined in the Geom libraries and we want to make sure we; // do not load it when autoloading is off. We can only test this in modules; // mode because gGeoManager is not part of the PCH and non-modular ROOT has; // header parsing and autoloading coupled leading to redundant load of; // libGeom at gROOT->GetGlobal time.",MatchSource.CODE_COMMENT,core/metacling/test/TClingDataMemberInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingDataMemberInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingDataMemberInfoTests.cxx:284,Safety,redund,redundant,284,"// gGeoManager is defined in the Geom libraries and we want to make sure we; // do not load it when autoloading is off. We can only test this in modules; // mode because gGeoManager is not part of the PCH and non-modular ROOT has; // header parsing and autoloading coupled leading to redundant load of; // libGeom at gROOT->GetGlobal time.",MatchSource.CODE_COMMENT,core/metacling/test/TClingDataMemberInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingDataMemberInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingDataMemberInfoTests.cxx:132,Testability,test,test,132,"// gGeoManager is defined in the Geom libraries and we want to make sure we; // do not load it when autoloading is off. We can only test this in modules; // mode because gGeoManager is not part of the PCH and non-modular ROOT has; // header parsing and autoloading coupled leading to redundant load of; // libGeom at gROOT->GetGlobal time.",MatchSource.CODE_COMMENT,core/metacling/test/TClingDataMemberInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingDataMemberInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingLoadUnloadFileTests.cxx:20,Performance,load,load,20,"// All threads will load/unload the same library",MatchSource.CODE_COMMENT,core/metacling/test/TClingLoadUnloadFileTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingLoadUnloadFileTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingLoadUnloadFileTests.cxx:16,Performance,load,loads,16,"// Every thread loads/unloads a different library",MatchSource.CODE_COMMENT,core/metacling/test/TClingLoadUnloadFileTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingLoadUnloadFileTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:24,Testability,assert,assert,24,"// On Windows we get an assert, CodeGen-ing the callfunc for the construction:; // CGClass.cpp:488's CallBaseDtor::Emit fails to cast CFG.CurCodeDecl (the callfunc; // __cf2 function) into the expected destructor (i.e. CXXMethodDecl). I.e. something; // is wrong in the exception emission stack.",MatchSource.CODE_COMMENT,core/metacling/test/TClingMethodInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:255,Testability,test,test,255,"// PyROOT needs to know whether a ctor is a template, see clingwrapper.cxx:; // > // don't give in just yet, but rather get the full name through the symbol name,; // > // as eg. constructors do not receive their proper/full name from GetName().; // Also test ""can we instantiate this function without extra type info""; // (see `Templates::MyMethods`).",MatchSource.CODE_COMMENT,core/metacling/test/TClingMethodInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:127,Modifiability,Inherit,InheritTemplateFun,127,"R""CODE(; struct TemplateFun {; template <class T>; TemplateFun(int, T);. template <class T>; int NonCtor(float, T);; };; class InheritTemplateFun: TemplateFun {; public:; using TemplateFun::TemplateFun;; };. namespace Templates {; class TypeArg;; template <class T> class TemplateArg;; template <class OUTER>; struct MyMethods {; template <class X> int Na();; template <class X> int Nb(X); // can be deduced but not enough for MethodInfo.; template <class A, class B = int> int Nc();; template <class X = OUTER, class... ARGS, class Y> int Nd();. template <class X = int> int Ya();; template <class...> int Yb();; template <int X = 12> int Yc();; template <typename X = TypeArg> int Yd1();; template <template <class T> class X = TemplateArg> int Yd2();; template <class X = OUTER> int Ye();; template <class X = OUTER> int Yf();; template <class X = OUTER, class... ARGS> int Yg();; template <class X = OUTER, class... ARGS, class Y = int> int Yh();; };; }. )CODE""",MatchSource.CODE_COMMENT,core/metacling/test/TClingMethodInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:137,Availability,avail,available,137,"// Fails because LookupHelper doesn't know how to instantiate function templates,; // even though at least the function template is made available to the derived; // class as per using decl. This is issue #6481.; //TFunction *funInhCtor = clInhTemplateFun->GetMethodWithPrototype(""InheritTemplateFun"", ""int, int"");; //ASSERT_NE(funInhCtor, nullptr);; //EXPECT_EQ(funInhCtor->ExtraProperty() & kIsTemplateSpec, kIsTemplateSpec);; //EXPECT_EQ(funInhCtor->Property() & kIsPrivate, kIsPrivate);; // Doesn't work either, as GetListOfFunctionTemplates() ignores using decls.; // Issue #6482; // clInhTemplateFun->GetListOfFunctionTemplates(true)->ls(); // FindObject(""InheritTemplateFun"")-",MatchSource.CODE_COMMENT,core/metacling/test/TClingMethodInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:281,Modifiability,Inherit,InheritTemplateFun,281,"// Fails because LookupHelper doesn't know how to instantiate function templates,; // even though at least the function template is made available to the derived; // class as per using decl. This is issue #6481.; //TFunction *funInhCtor = clInhTemplateFun->GetMethodWithPrototype(""InheritTemplateFun"", ""int, int"");; //ASSERT_NE(funInhCtor, nullptr);; //EXPECT_EQ(funInhCtor->ExtraProperty() & kIsTemplateSpec, kIsTemplateSpec);; //EXPECT_EQ(funInhCtor->Property() & kIsPrivate, kIsPrivate);; // Doesn't work either, as GetListOfFunctionTemplates() ignores using decls.; // Issue #6482; // clInhTemplateFun->GetListOfFunctionTemplates(true)->ls(); // FindObject(""InheritTemplateFun"")-",MatchSource.CODE_COMMENT,core/metacling/test/TClingMethodInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:662,Modifiability,Inherit,InheritTemplateFun,662,"// Fails because LookupHelper doesn't know how to instantiate function templates,; // even though at least the function template is made available to the derived; // class as per using decl. This is issue #6481.; //TFunction *funInhCtor = clInhTemplateFun->GetMethodWithPrototype(""InheritTemplateFun"", ""int, int"");; //ASSERT_NE(funInhCtor, nullptr);; //EXPECT_EQ(funInhCtor->ExtraProperty() & kIsTemplateSpec, kIsTemplateSpec);; //EXPECT_EQ(funInhCtor->Property() & kIsPrivate, kIsPrivate);; // Doesn't work either, as GetListOfFunctionTemplates() ignores using decls.; // Issue #6482; // clInhTemplateFun->GetListOfFunctionTemplates(true)->ls(); // FindObject(""InheritTemplateFun"")-",MatchSource.CODE_COMMENT,core/metacling/test/TClingMethodInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:284,Security,access,access,284,"R""CODE(; namespace BUG6578 {; struct Base1 {; Base1(int = 42) {}; protected:; Base1(const Base1&, std::string = ""abc"") {}; };. struct Base2 {; Base2() {}; Base2(const Base2&) {}; Base2(int, int) {}; };. class Derived: public Base1, protected Base2 {; private: // This is irrelevant - access of used ctors is defined by access of base class!; using Base1::Base1; // Base1(int), Base1(Base1&, string); public: // This is irrelevant - access of used ctors is defined by access of base class!; using Base2::Base2; // Base2(int, int); Derived() = delete;; Derived(const Derived&) = delete;; };; }; )CODE""",MatchSource.CODE_COMMENT,core/metacling/test/TClingMethodInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:319,Security,access,access,319,"R""CODE(; namespace BUG6578 {; struct Base1 {; Base1(int = 42) {}; protected:; Base1(const Base1&, std::string = ""abc"") {}; };. struct Base2 {; Base2() {}; Base2(const Base2&) {}; Base2(int, int) {}; };. class Derived: public Base1, protected Base2 {; private: // This is irrelevant - access of used ctors is defined by access of base class!; using Base1::Base1; // Base1(int), Base1(Base1&, string); public: // This is irrelevant - access of used ctors is defined by access of base class!; using Base2::Base2; // Base2(int, int); Derived() = delete;; Derived(const Derived&) = delete;; };; }; )CODE""",MatchSource.CODE_COMMENT,core/metacling/test/TClingMethodInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:432,Security,access,access,432,"R""CODE(; namespace BUG6578 {; struct Base1 {; Base1(int = 42) {}; protected:; Base1(const Base1&, std::string = ""abc"") {}; };. struct Base2 {; Base2() {}; Base2(const Base2&) {}; Base2(int, int) {}; };. class Derived: public Base1, protected Base2 {; private: // This is irrelevant - access of used ctors is defined by access of base class!; using Base1::Base1; // Base1(int), Base1(Base1&, string); public: // This is irrelevant - access of used ctors is defined by access of base class!; using Base2::Base2; // Base2(int, int); Derived() = delete;; Derived(const Derived&) = delete;; };; }; )CODE""",MatchSource.CODE_COMMENT,core/metacling/test/TClingMethodInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:467,Security,access,access,467,"R""CODE(; namespace BUG6578 {; struct Base1 {; Base1(int = 42) {}; protected:; Base1(const Base1&, std::string = ""abc"") {}; };. struct Base2 {; Base2() {}; Base2(const Base2&) {}; Base2(int, int) {}; };. class Derived: public Base1, protected Base2 {; private: // This is irrelevant - access of used ctors is defined by access of base class!; using Base1::Base1; // Base1(int), Base1(Base1&, string); public: // This is irrelevant - access of used ctors is defined by access of base class!; using Base2::Base2; // Base2(int, int); Derived() = delete;; Derived(const Derived&) = delete;; };; }; )CODE""",MatchSource.CODE_COMMENT,core/metacling/test/TClingMethodInfoTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:282,Availability,failure,failures,282,"// virtual void SetUp() { }; // FIXME: We cannot rely on TearDown because it is executed at the end of; // every test. This triggers another bug in the dictionary generation phase,; // possibly due to concurrent file system operations.; //virtual void TearDown() {; // If there are failures we want to keep the created files.; //if (!::testing::Test::HasFatalFailure()); // cleanup();; //}",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:201,Performance,concurren,concurrent,201,"// virtual void SetUp() { }; // FIXME: We cannot rely on TearDown because it is executed at the end of; // every test. This triggers another bug in the dictionary generation phase,; // possibly due to concurrent file system operations.; //virtual void TearDown() {; // If there are failures we want to keep the created files.; //if (!::testing::Test::HasFatalFailure()); // cleanup();; //}",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:113,Testability,test,test,113,"// virtual void SetUp() { }; // FIXME: We cannot rely on TearDown because it is executed at the end of; // every test. This triggers another bug in the dictionary generation phase,; // possibly due to concurrent file system operations.; //virtual void TearDown() {; // If there are failures we want to keep the created files.; //if (!::testing::Test::HasFatalFailure()); // cleanup();; //}",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:336,Testability,test,testing,336,"// virtual void SetUp() { }; // FIXME: We cannot rely on TearDown because it is executed at the end of; // every test. This triggers another bug in the dictionary generation phase,; // possibly due to concurrent file system operations.; //virtual void TearDown() {; // If there are failures we want to keep the created files.; //if (!::testing::Test::HasFatalFailure()); // cleanup();; //}",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:345,Testability,Test,Test,345,"// virtual void SetUp() { }; // FIXME: We cannot rely on TearDown because it is executed at the end of; // every test. This triggers another bug in the dictionary generation phase,; // possibly due to concurrent file system operations.; //virtual void TearDown() {; // If there are failures we want to keep the created files.; //if (!::testing::Test::HasFatalFailure()); // cleanup();; //}",MatchSource.CODE_COMMENT,core/metacling/test/TClingTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx
