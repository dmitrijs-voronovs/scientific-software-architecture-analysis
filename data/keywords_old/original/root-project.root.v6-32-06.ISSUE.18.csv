id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/15924:1049,Performance,load,load,1049,"uplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT with gnuinstall=ON, the following happen when trying to`import ROOT` in Python, on macOS : . ```; Python 3.9.6 (default, Mar 29 2024, 10:51:09); [Clang 15.0.0 (clang-1500.3.9.4)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>; from ._cpython_cppyy import *; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>; c = loader.load_cpp_backend(); File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend; raise RuntimeError(""could not load cppyy_backend library""); RuntimeError: could not load cppyy_backend library; >>> quit(); ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```; git clone https://github.com/root-project/root; cd root; mkdir build; cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON; source ../install-2/thisroot.sh; python3 -c 'import ROOT'; ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```; ---------------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Jun 25 2024, 12:00:47 |; | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; -------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/pull/15925:22,Deployability,update,update,22,# This Pull request:. update the CMAKE_INSTALL_RPATH on macOS . ## Changes or fixes:. fixes #15924 . ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15924,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15925
https://github.com/root-project/root/pull/15925:152,Deployability,update,updated,152,# This Pull request:. update the CMAKE_INSTALL_RPATH on macOS . ## Changes or fixes:. fixes #15924 . ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15924,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15925
https://github.com/root-project/root/pull/15925:122,Testability,test,tested,122,# This Pull request:. update the CMAKE_INSTALL_RPATH on macOS . ## Changes or fixes:. fixes #15924 . ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15924,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15925
https://github.com/root-project/root/pull/15926:200,Testability,log,logic,200,"Revert the changes to `build_root.py` from commit 542b98b2cc (""[ci] Add alma9 clang build"") since they were not reflected when uploading the artifacts which could consequently not be found. The extra logic of appending the image doesn't seem needed, the compiler is part of the options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15926
https://github.com/root-project/root/issues/15927:1292,Deployability,Install,Installation,1292,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:355,Energy Efficiency,efficient,efficiently,355,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:893,Energy Efficiency,Power,PowerPC,893,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:819,Integrability,depend,depends,819,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:1166,Modifiability,evolve,evolved,1166,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/pull/15929:1351,Deployability,update,updated,1351,"# This Pull request:. ## Changes or fixes:. nullptr access when branch is not found. Fixes first part of https://its.cern.ch/jira/browse/ROOT-8842 by @jpivarski. `GetNextRange(int)`. but it still crashes later at:. ```; 1 frombuf                                                      Bytes.h                  384 0x7f62c0ded275 ; 2 ROOT::Experimental::TTreeReaderValueFast<float>::Deserialize TTreeReaderValueFast.hxx 171 0x7f62b6563bd0 ; 3 ROOT::Experimental::TTreeReaderValueFast<float>::Get         TTreeReaderValueFast.hxx 162 0x7f62b6563b42 ; 4 ROOT::Experimental::TTreeReaderValueFast<float>::operator *  TTreeReaderValueFast.hxx 165 0x7f62b6563b60 ; 5 reader                                                       reader.C                 30  0x7f62b6563004 ; 6 ??                                                                                        0x7f62b7e280bc ; 7 ??                                                                                        0x7ffda58c2b60 ; 8 ??                                                                                        0x7ffda58c2b28 ; 9 ??                                                                                                       ; ```. and this part, I do not know how to solve. The crash happens every time at a different entry. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15929
https://github.com/root-project/root/pull/15929:52,Security,access,access,52,"# This Pull request:. ## Changes or fixes:. nullptr access when branch is not found. Fixes first part of https://its.cern.ch/jira/browse/ROOT-8842 by @jpivarski. `GetNextRange(int)`. but it still crashes later at:. ```; 1 frombuf                                                      Bytes.h                  384 0x7f62c0ded275 ; 2 ROOT::Experimental::TTreeReaderValueFast<float>::Deserialize TTreeReaderValueFast.hxx 171 0x7f62b6563bd0 ; 3 ROOT::Experimental::TTreeReaderValueFast<float>::Get         TTreeReaderValueFast.hxx 162 0x7f62b6563b42 ; 4 ROOT::Experimental::TTreeReaderValueFast<float>::operator *  TTreeReaderValueFast.hxx 165 0x7f62b6563b60 ; 5 reader                                                       reader.C                 30  0x7f62b6563004 ; 6 ??                                                                                        0x7f62b7e280bc ; 7 ??                                                                                        0x7ffda58c2b60 ; 8 ??                                                                                        0x7ffda58c2b28 ; 9 ??                                                                                                       ; ```. and this part, I do not know how to solve. The crash happens every time at a different entry. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15929
https://github.com/root-project/root/pull/15929:1321,Testability,test,tested,1321,"# This Pull request:. ## Changes or fixes:. nullptr access when branch is not found. Fixes first part of https://its.cern.ch/jira/browse/ROOT-8842 by @jpivarski. `GetNextRange(int)`. but it still crashes later at:. ```; 1 frombuf                                                      Bytes.h                  384 0x7f62c0ded275 ; 2 ROOT::Experimental::TTreeReaderValueFast<float>::Deserialize TTreeReaderValueFast.hxx 171 0x7f62b6563bd0 ; 3 ROOT::Experimental::TTreeReaderValueFast<float>::Get         TTreeReaderValueFast.hxx 162 0x7f62b6563b42 ; 4 ROOT::Experimental::TTreeReaderValueFast<float>::operator *  TTreeReaderValueFast.hxx 165 0x7f62b6563b60 ; 5 reader                                                       reader.C                 30  0x7f62b6563004 ; 6 ??                                                                                        0x7f62b7e280bc ; 7 ??                                                                                        0x7ffda58c2b60 ; 8 ??                                                                                        0x7ffda58c2b28 ; 9 ??                                                                                                       ; ```. and this part, I do not know how to solve. The crash happens every time at a different entry. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15929
https://github.com/root-project/root/pull/15930:172,Deployability,configurat,configuration,172,"The main motivation is because it is a clear blocker for proper cross-compilation. Also, the tutorial itself is already run as the first tutorial irrespective of the build configuration so the test is actually repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15930
https://github.com/root-project/root/pull/15930:172,Modifiability,config,configuration,172,"The main motivation is because it is a clear blocker for proper cross-compilation. Also, the tutorial itself is already run as the first tutorial irrespective of the build configuration so the test is actually repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15930
https://github.com/root-project/root/pull/15930:193,Testability,test,test,193,"The main motivation is because it is a clear blocker for proper cross-compilation. Also, the tutorial itself is already run as the first tutorial irrespective of the build configuration so the test is actually repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15930
https://github.com/root-project/root/pull/15930:39,Usability,clear,clear,39,"The main motivation is because it is a clear blocker for proper cross-compilation. Also, the tutorial itself is already run as the first tutorial irrespective of the build configuration so the test is actually repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15930
https://github.com/root-project/root/pull/15931:3,Availability,Error,Errors,3,"1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values; 2. Protect GetMinimum method for case of log scale; 3. Improve pads options:; 3.1. Always ensure that subpad is clear when drawing stack histograms; 3.2. Reuse existing subpads, no need to divide canvas again; 3.3. Use TPad::Add() method to add histograms to subpads",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:149,Testability,log,log,149,"1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values; 2. Protect GetMinimum method for case of log scale; 3. Improve pads options:; 3.1. Always ensure that subpad is clear when drawing stack histograms; 3.2. Reuse existing subpads, no need to divide canvas again; 3.3. Use TPad::Add() method to add histograms to subpads",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:220,Usability,clear,clear,220,"1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values; 2. Protect GetMinimum method for case of log scale; 3. Improve pads options:; 3.1. Always ensure that subpad is clear when drawing stack histograms; 3.2. Reuse existing subpads, no need to divide canvas again; 3.3. Use TPad::Add() method to add histograms to subpads",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15932:153,Availability,error,errors,153,"# This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-3594. This explores if the fix suggested by the user triggers any errors in the CI tests. I did not check myself a local build, nor the unit test (attached below).; [clones_test_3.zip](https://github.com/user-attachments/files/15984085/clones_test_3.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15932
https://github.com/root-project/root/pull/15932:170,Testability,test,tests,170,"# This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-3594. This explores if the fix suggested by the user triggers any errors in the CI tests. I did not check myself a local build, nor the unit test (attached below).; [clones_test_3.zip](https://github.com/user-attachments/files/15984085/clones_test_3.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15932
https://github.com/root-project/root/pull/15932:228,Testability,test,test,228,"# This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-3594. This explores if the fix suggested by the user triggers any errors in the CI tests. I did not check myself a local build, nor the unit test (attached below).; [clones_test_3.zip](https://github.com/user-attachments/files/15984085/clones_test_3.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15932
https://github.com/root-project/root/issues/15933:437,Deployability,Install,Installation,437,"### Explain what you would like to see improved and how. The filter seems to include files that were changed since the last branch off of master. Take for instance https://github.com/root-project/root/actions/runs/9682129594/job/26714405775. The COMMIT_FILES variable contains many files not touched in this PR. This makes the output quite tedious to parse and the PR hard to improve. ### ROOT version. Irrelevant, it is a CI issue. ### Installation method. CI. ### Operating system. CI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15933
https://github.com/root-project/root/issues/15933:259,Modifiability,variab,variable,259,"### Explain what you would like to see improved and how. The filter seems to include files that were changed since the last branch off of master. Take for instance https://github.com/root-project/root/actions/runs/9682129594/job/26714405775. The COMMIT_FILES variable contains many files not touched in this PR. This makes the output quite tedious to parse and the PR hard to improve. ### ROOT version. Irrelevant, it is a CI issue. ### Installation method. CI. ### Operating system. CI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15933
https://github.com/root-project/root/pull/15934:34,Deployability,install,installed,34,To differentiate between versions installed on runners with identical labels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15934
https://github.com/root-project/root/issues/15936:290,Availability,failure,failures,290,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:480,Deployability,Install,Installation,480,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:248,Safety,avoid,avoid,248,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:79,Testability,test,test,79,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:322,Testability,test,test,322,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:413,Testability,test,test,413,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/pull/15937:1266,Energy Efficiency,reduce,reduced,1266,"It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:; ```; void TObject::Paint(Option_t *opt); {; if (gPad) ; PaintOn(gPad);; }; ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect ; if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked.; ```; if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)); obj->Paint(lnk->GetOption());; else; obj->PaintOn(this, lnk->GetOption());; ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code.; PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. ; But contentiously usage of `gPad` will be reduced.; Main goal - `gPad` should not be touched when painting ROOT classes. ; Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare ; special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and ; advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, ; but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:337,Safety,detect,detect,337,"It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:; ```; void TObject::Paint(Option_t *opt); {; if (gPad) ; PaintOn(gPad);; }; ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect ; if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked.; ```; if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)); obj->Paint(lnk->GetOption());; else; obj->PaintOn(this, lnk->GetOption());; ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code.; PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. ; But contentiously usage of `gPad` will be reduced.; Main goal - `gPad` should not be touched when painting ROOT classes. ; Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare ; special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and ; advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, ; but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:1732,Safety,safe,safe,1732,"It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:; ```; void TObject::Paint(Option_t *opt); {; if (gPad) ; PaintOn(gPad);; }; ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect ; if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked.; ```; if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)); obj->Paint(lnk->GetOption());; else; obj->PaintOn(this, lnk->GetOption());; ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code.; PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. ; But contentiously usage of `gPad` will be reduced.; Main goal - `gPad` should not be touched when painting ROOT classes. ; Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare ; special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and ; advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, ; but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:1115,Usability,simpl,simple,1115,"It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:; ```; void TObject::Paint(Option_t *opt); {; if (gPad) ; PaintOn(gPad);; }; ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect ; if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked.; ```; if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)); obj->Paint(lnk->GetOption());; else; obj->PaintOn(this, lnk->GetOption());; ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code.; PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. ; But contentiously usage of `gPad` will be reduced.; Main goal - `gPad` should not be touched when painting ROOT classes. ; Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare ; special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and ; advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, ; but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/issues/15938:323,Deployability,upgrade,upgrade,323,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++; // calo.h; #ifndef __CALO__; #define __CALO__. namespace calo {; int nUnits = 0;; void setnUnits (int n) {; 	nUnits = n;; }; }. #endif. // insert.h; #ifndef _cali_; #define _cali_. void insert();; #endif. // insert.C; #include <iostream>; #include ""calo.h""; #include ""insert.h"". using namespace std;. void insert() {; cout << ""DEBUG\t"" << calo::nUnits << endl;; }; ```. ```; $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C; ```. On the prompt:; ```; gSystem->Load(""libinsert.so""); #include ""calo.h""; #include ""insert.h""; insert(); calo::setnUnits(3); insert(); ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:1042,Deployability,Install,Installation,1042,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++; // calo.h; #ifndef __CALO__; #define __CALO__. namespace calo {; int nUnits = 0;; void setnUnits (int n) {; 	nUnits = n;; }; }. #endif. // insert.h; #ifndef _cali_; #define _cali_. void insert();; #endif. // insert.C; #include <iostream>; #include ""calo.h""; #include ""insert.h"". using namespace std;. void insert() {; cout << ""DEBUG\t"" << calo::nUnits << endl;; }; ```. ```; $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C; ```. On the prompt:; ```; gSystem->Load(""libinsert.so""); #include ""calo.h""; #include ""insert.h""; insert(); calo::setnUnits(3); insert(); ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:243,Modifiability,variab,variables,243,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++; // calo.h; #ifndef __CALO__; #define __CALO__. namespace calo {; int nUnits = 0;; void setnUnits (int n) {; 	nUnits = n;; }; }. #endif. // insert.h; #ifndef _cali_; #define _cali_. void insert();; #endif. // insert.C; #include <iostream>; #include ""calo.h""; #include ""insert.h"". using namespace std;. void insert() {; cout << ""DEBUG\t"" << calo::nUnits << endl;; }; ```. ```; $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C; ```. On the prompt:; ```; gSystem->Load(""libinsert.so""); #include ""calo.h""; #include ""insert.h""; insert(); calo::setnUnits(3); insert(); ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:1211,Modifiability,variab,variable,1211,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++; // calo.h; #ifndef __CALO__; #define __CALO__. namespace calo {; int nUnits = 0;; void setnUnits (int n) {; 	nUnits = n;; }; }. #endif. // insert.h; #ifndef _cali_; #define _cali_. void insert();; #endif. // insert.C; #include <iostream>; #include ""calo.h""; #include ""insert.h"". using namespace std;. void insert() {; cout << ""DEBUG\t"" << calo::nUnits << endl;; }; ```. ```; $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C; ```. On the prompt:; ```; gSystem->Load(""libinsert.so""); #include ""calo.h""; #include ""insert.h""; insert(); calo::setnUnits(3); insert(); ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:835,Performance,Load,Load,835,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++; // calo.h; #ifndef __CALO__; #define __CALO__. namespace calo {; int nUnits = 0;; void setnUnits (int n) {; 	nUnits = n;; }; }. #endif. // insert.h; #ifndef _cali_; #define _cali_. void insert();; #endif. // insert.C; #include <iostream>; #include ""calo.h""; #include ""insert.h"". using namespace std;. void insert() {; cout << ""DEBUG\t"" << calo::nUnits << endl;; }; ```. ```; $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C; ```. On the prompt:; ```; gSystem->Load(""libinsert.so""); #include ""calo.h""; #include ""insert.h""; insert(); calo::setnUnits(3); insert(); ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/pull/15939:1196,Deployability,update,updated,1196,"With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:; 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator.; 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:218,Integrability,interface,interface,218,"With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:; 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator.; 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:298,Integrability,interface,interface,298,"With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:; 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator.; 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:609,Integrability,interface,interface,609,"With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:; 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator.; 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:1087,Performance,load,load,1087,"With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:; 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator.; 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:931,Security,access,access,931,"With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:; 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator.; 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:1166,Testability,test,tested,1166,"With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:; 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator.; 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15940:389,Availability,failure,failure,389,We need to add a new category of initialized tensors in RModel that are not written in the weight file. These are for example tensors defining the shape and use as input to some operator such as Reshape. Its data are used when parsing and hard-coded then in the model. There is no need to generate or getting t heir value when using the model for inference. This Pull request should fix a failure reported in master after merging the PR on constant operator ( #15837 ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15940
https://github.com/root-project/root/pull/15942:241,Availability,failure,failures,241,"When exporting collection proxies, the type was only checked against the RooArgList proxy, so RooArgSet proxies would not get correctly exported. It is better to check for the more general `RooAbsCollection` base class. This fixes the build failures on macos-beta. Needs to be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15942
https://github.com/root-project/root/pull/15943:223,Deployability,update,update,223,"Canvas name was used as identifier to track HTML element. ; If new canvas with same name was created, old HTML name was overwritten.; Therefore add unique ID (pointer) to the canvas name to handle new canvas properly. Also update jsroot link to latest version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15943
https://github.com/root-project/root/pull/15946:153,Deployability,release,release-notes,153,Thanks to Tomas Dado for noticing that this was broken. We should ensure that ROOT always builds with this flag. See also:; * https://root.cern/doc/v632/release-notes.html#compile-your-code-with-memory-safe-interfaces; * https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooFit/Config.h#L16,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15946
https://github.com/root-project/root/pull/15946:207,Integrability,interface,interfaces,207,Thanks to Tomas Dado for noticing that this was broken. We should ensure that ROOT always builds with this flag. See also:; * https://root.cern/doc/v632/release-notes.html#compile-your-code-with-memory-safe-interfaces; * https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooFit/Config.h#L16,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15946
https://github.com/root-project/root/pull/15946:299,Modifiability,Config,Config,299,Thanks to Tomas Dado for noticing that this was broken. We should ensure that ROOT always builds with this flag. See also:; * https://root.cern/doc/v632/release-notes.html#compile-your-code-with-memory-safe-interfaces; * https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooFit/Config.h#L16,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15946
https://github.com/root-project/root/pull/15946:202,Safety,safe,safe-interfaces,202,Thanks to Tomas Dado for noticing that this was broken. We should ensure that ROOT always builds with this flag. See also:; * https://root.cern/doc/v632/release-notes.html#compile-your-code-with-memory-safe-interfaces; * https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooFit/Config.h#L16,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15946
https://github.com/root-project/root/pull/15947:1216,Deployability,update,updated,1216,"# This Pull request:; Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:583,Energy Efficiency,allocate,allocated,583,"# This Pull request:; Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:1186,Testability,test,tested,1186,"# This Pull request:; Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/issues/15948:788,Deployability,Install,Installation,788,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As well explained in this [forum post](https://root-forum.cern.ch/t/text-rendering-bug-related-to-tex-gyreheros-font-since-v6-32/60032), the Tex Gyre fonts put in action by this [PR](https://github.com/root-project/root/pull/14841) on CMS demand have a very bad side effect: white spaces before special symbols like `#pm` are far too large. The following example shows the problem:. ```; {; auto c = new TCanvas;; auto l1 = new TLatex(.1, 0.9, ""A #pm #in B"");; l1->SetTextFont(42);; l1->SetTextSize(0.05);; l1->Draw();; c->Print(""file.ps"");; c->Print(""file.pdf"");; }; ```; For the time being, there is no obvious fix except reverting the PR. ### Reproducer. see the forum post. ### ROOT version. >= v6.32.00. ### Installation method. any. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15948
https://github.com/root-project/root/pull/15952:433,Deployability,patch,patch,433,"Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened.; 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:46,Energy Efficiency,schedul,scheduler,46,"Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened.; 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:256,Energy Efficiency,schedul,scheduling,256,"Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened.; 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:64,Performance,multi-thread,multi-threaded,64,"Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened.; 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:496,Performance,cache,cached,496,"Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened.; 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15953:552,Deployability,update,updated,552,"# This Pull request:; adds the possibility of requesting metrics in `RNTupleReadOptions`. ; Since one normally has to call `EnableMetrics()` on the RNTupleReader to start collecting metrics, it is currently not possible to query the metrics gathered during construction of the reader itself. With this new option you can request metrics to be enabled at construction time. As a somewhat arbitrary choice, an RNTupleReader created via `Clone()` will inherit this option from the one it is cloned from. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15953
https://github.com/root-project/root/pull/15953:449,Modifiability,inherit,inherit,449,"# This Pull request:; adds the possibility of requesting metrics in `RNTupleReadOptions`. ; Since one normally has to call `EnableMetrics()` on the RNTupleReader to start collecting metrics, it is currently not possible to query the metrics gathered during construction of the reader itself. With this new option you can request metrics to be enabled at construction time. As a somewhat arbitrary choice, an RNTupleReader created via `Clone()` will inherit this option from the one it is cloned from. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15953
https://github.com/root-project/root/pull/15953:522,Testability,test,tested,522,"# This Pull request:; adds the possibility of requesting metrics in `RNTupleReadOptions`. ; Since one normally has to call `EnableMetrics()` on the RNTupleReader to start collecting metrics, it is currently not possible to query the metrics gathered during construction of the reader itself. With this new option you can request metrics to be enabled at construction time. As a somewhat arbitrary choice, an RNTupleReader created via `Clone()` will inherit this option from the one it is cloned from. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15953
https://github.com/root-project/root/pull/15954:152,Deployability,update,updated,152,# This Pull request:; adds the use of `RClusterPool` to preload clusters during merging of RNTuples. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15954
https://github.com/root-project/root/pull/15954:122,Testability,test,tested,122,# This Pull request:; adds the use of `RClusterPool` to preload clusters during merging of RNTuples. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15954
https://github.com/root-project/root/issues/15957:337,Availability,error,error,337,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in; from DelphesAnalysis import Delphes; File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in; root.CreateScopeProxy( “Event” ).str = Event__str; File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr; raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)); AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:1230,Deployability,Install,Installation,1230,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in; from DelphesAnalysis import Delphes; File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in; root.CreateScopeProxy( “Event” ).str = Event__str; File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr; raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)); AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/pull/15960:424,Deployability,update,updated,424,"# This Pull request:; Translates all ""math"" tutorials into Python.; ## Changes or fixes:; It shows creative ways of using C++ methods in Python more than; the usual way of ROOT.gROOT.ProcessLine method. There are some notes; about why we should or shouldn't use some syntax(inherited from C++-ROOT) ; in Python.; Enjoy them as much as I did reproducing them. ## Checklist:. - [yes] very well tested changes locally; - [yes] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15960
https://github.com/root-project/root/pull/15960:274,Modifiability,inherit,inherited,274,"# This Pull request:; Translates all ""math"" tutorials into Python.; ## Changes or fixes:; It shows creative ways of using C++ methods in Python more than; the usual way of ROOT.gROOT.ProcessLine method. There are some notes; about why we should or shouldn't use some syntax(inherited from C++-ROOT) ; in Python.; Enjoy them as much as I did reproducing them. ## Checklist:. - [yes] very well tested changes locally; - [yes] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15960
https://github.com/root-project/root/pull/15960:392,Testability,test,tested,392,"# This Pull request:; Translates all ""math"" tutorials into Python.; ## Changes or fixes:; It shows creative ways of using C++ methods in Python more than; the usual way of ROOT.gROOT.ProcessLine method. There are some notes; about why we should or shouldn't use some syntax(inherited from C++-ROOT) ; in Python.; Enjoy them as much as I did reproducing them. ## Checklist:. - [yes] very well tested changes locally; - [yes] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15960
https://github.com/root-project/root/pull/15961:510,Energy Efficiency,reduce,reduces,510,"For the file backend only, map identical pages within a cluster to the same locator. That effectively de-duplicates identical pages on disk (not in memory though). . As a result, reading code has to be able to deal with pages that don't necessarily reference pair-wise distinct byte ranges. This is difficult to combine with the DAOS caging feature. Same page merging needs explicit support from the backend and is turned off for the DAOS backend. For the nanoAOD and ATLAS OpenData samples, same page merging reduces the file size by about 3.5%.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15961
https://github.com/root-project/root/issues/15962:577,Deployability,Install,Installation,577,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Most of the links in the source code starting with http://root.cern.ch/root/html/ point to a no longer existing URL. ### Reproducer. grep -r 'root/html' /opt/root_src/*. Another way to reproduce it is to go open a TRootBrowser, right click on a tree, ""Scan"", then click on ""Online Help"" button. ### ROOT version. ```; ROOT v6.32.00; Built for linuxx8664gcc on May 28 2024, 05:02:02; From tags/v6-32-00@v6-32-00; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. It could be that changing to `root/htmldoc` solves most of the 404s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15962
https://github.com/root-project/root/issues/15962:605,Deployability,Release,Release,605,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Most of the links in the source code starting with http://root.cern.ch/root/html/ point to a no longer existing URL. ### Reproducer. grep -r 'root/html' /opt/root_src/*. Another way to reproduce it is to go open a TRootBrowser, right click on a tree, ""Scan"", then click on ""Online Help"" button. ### ROOT version. ```; ROOT v6.32.00; Built for linuxx8664gcc on May 28 2024, 05:02:02; From tags/v6-32-00@v6-32-00; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. It could be that changing to `root/htmldoc` solves most of the 404s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15962
https://github.com/root-project/root/issues/15963:1544,Deployability,Install,Installation,1544,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```; ************************************************************; * Row * time.time * time_fine * slope.slo * pileup.pi *; ************************************************************; * 0 * 476428 * 44 * 372.48736 * 0 *; * 1 * 1494475 * 36 * 1432.6547 * 0 *; * 2 * 1526983 * 55 * 205.83961 * 0 *; * 3 * 1774924 * 49 * 297.62847 * 0 *; * 4 * 2046332 * -56 * 790.71905 * 0 *; * 5 * 2850089 * 41 * 394.59698 * 0 *; ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```; ************************; * Row * time *; ************************; * 1799 * 1.045e+09 *; * 1800 * 1.045e+09 *; * 7161 * 1.727e+09 *; * 7162 * 1.727e+09 *; * 9036 * 1.757e+09 *; ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```; ROOT v6.32.00; Built for linuxx8664gcc on May 28 2024, 05:02:02; From tags/v6-32-00@v6-32-00; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:1572,Deployability,Release,Release,1572,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```; ************************************************************; * Row * time.time * time_fine * slope.slo * pileup.pi *; ************************************************************; * 0 * 476428 * 44 * 372.48736 * 0 *; * 1 * 1494475 * 36 * 1432.6547 * 0 *; * 2 * 1526983 * 55 * 205.83961 * 0 *; * 3 * 1774924 * 49 * 297.62847 * 0 *; * 4 * 2046332 * -56 * 790.71905 * 0 *; * 5 * 2850089 * 41 * 394.59698 * 0 *; ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```; ************************; * Row * time *; ************************; * 1799 * 1.045e+09 *; * 1800 * 1.045e+09 *; * 7161 * 1.727e+09 *; * 7162 * 1.727e+09 *; * 9036 * 1.757e+09 *; ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```; ROOT v6.32.00; Built for linuxx8664gcc on May 28 2024, 05:02:02; From tags/v6-32-00@v6-32-00; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15964:154,Availability,failure,failure,154,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 ; The script is quite simple:; ```; from ROOT import TFile; f=TFile.Open(""tmp.RDO""); f.ls(); t=f.Get(""CollectionTree""); n=t.GetEntries(); for i in range(n):; s=t.GetEntry(i); print(s); f.Close(); ```; For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0; . ### ROOT version. Writing: 6.32/02; Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:91,Deployability,update,update,91,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 ; The script is quite simple:; ```; from ROOT import TFile; f=TFile.Open(""tmp.RDO""); f.ls(); t=f.Get(""CollectionTree""); n=t.GetEntries(); for i in range(n):; s=t.GetEntry(i); print(s); f.Close(); ```; For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0; . ### ROOT version. Writing: 6.32/02; Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:202,Deployability,release,release,202,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 ; The script is quite simple:; ```; from ROOT import TFile; f=TFile.Open(""tmp.RDO""); f.ls(); t=f.Get(""CollectionTree""); n=t.GetEntries(); for i in range(n):; s=t.GetEntry(i); print(s); f.Close(); ```; For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0; . ### ROOT version. Writing: 6.32/02; Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:247,Deployability,release,release,247,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 ; The script is quite simple:; ```; from ROOT import TFile; f=TFile.Open(""tmp.RDO""); f.ls(); t=f.Get(""CollectionTree""); n=t.GetEntries(); for i in range(n):; s=t.GetEntry(i); print(s); f.Close(); ```; For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0; . ### ROOT version. Writing: 6.32/02; Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:381,Deployability,release,release,381,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 ; The script is quite simple:; ```; from ROOT import TFile; f=TFile.Open(""tmp.RDO""); f.ls(); t=f.Get(""CollectionTree""); n=t.GetEntries(); for i in range(n):; s=t.GetEntry(i); print(s); f.Close(); ```; For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0; . ### ROOT version. Writing: 6.32/02; Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:1058,Deployability,Install,Installation,1058,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 ; The script is quite simple:; ```; from ROOT import TFile; f=TFile.Open(""tmp.RDO""); f.ls(); t=f.Get(""CollectionTree""); n=t.GetEntries(); for i in range(n):; s=t.GetEntry(i); print(s); f.Close(); ```; For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0; . ### ROOT version. Writing: 6.32/02; Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:149,Testability,test,test,149,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 ; The script is quite simple:; ```; from ROOT import TFile; f=TFile.Open(""tmp.RDO""); f.ls(); t=f.Get(""CollectionTree""); n=t.GetEntries(); for i in range(n):; s=t.GetEntry(i); print(s); f.Close(); ```; For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0; . ### ROOT version. Writing: 6.32/02; Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:909,Testability,log,log,909,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 ; The script is quite simple:; ```; from ROOT import TFile; f=TFile.Open(""tmp.RDO""); f.ls(); t=f.Get(""CollectionTree""); n=t.GetEntries(); for i in range(n):; s=t.GetEntry(i); print(s); f.Close(); ```; For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0; . ### ROOT version. Writing: 6.32/02; Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:974,Testability,log,log,974,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 ; The script is quite simple:; ```; from ROOT import TFile; f=TFile.Open(""tmp.RDO""); f.ls(); t=f.Get(""CollectionTree""); n=t.GetEntries(); for i in range(n):; s=t.GetEntry(i); print(s); f.Close(); ```; For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0; . ### ROOT version. Writing: 6.32/02; Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:572,Usability,simpl,simple,572,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 ; The script is quite simple:; ```; from ROOT import TFile; f=TFile.Open(""tmp.RDO""); f.ls(); t=f.Get(""CollectionTree""); n=t.GetEntries(); for i in range(n):; s=t.GetEntry(i); print(s); f.Close(); ```; For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0; . ### ROOT version. Writing: 6.32/02; Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/pull/15968:421,Deployability,update,updated,421,"Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ?. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15968
https://github.com/root-project/root/pull/15968:391,Testability,test,tested,391,"Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ?. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15968
https://github.com/root-project/root/pull/15969:421,Deployability,update,updated,421,"Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ?; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15969
https://github.com/root-project/root/pull/15969:391,Testability,test,tested,391,"Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ?; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15969
https://github.com/root-project/root/issues/15970:140,Availability,fault,fault,140,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```; (root-bug) ➜ ~ python; Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import tensorflow; 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.; 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>; >>> import ROOT. *** Break *** segmentation violation; ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:; ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):; #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6; #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6; #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3; #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6; #4 0x00007f1095d0ec40 in c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:607,Availability,error,errors,607,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```; (root-bug) ➜ ~ python; Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import tensorflow; 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.; 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>; >>> import ROOT. *** Break *** segmentation violation; ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:; ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):; #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6; #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6; #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3; #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6; #4 0x00007f1095d0ec40 in c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:848,Availability,avail,available,848,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```; (root-bug) ➜ ~ python; Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import tensorflow; 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.; 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>; >>> import ROOT. *** Break *** segmentation violation; ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:; ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):; #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6; #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6; #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3; #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6; #4 0x00007f1095d0ec40 in c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:1309,Availability,fault,fault,1309,"ight"", ""credits"" or ""license"" for more information.; >>> import tensorflow; 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.; 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>; >>> import ROOT. *** Break *** segmentation violation; ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:; ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):; #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6; #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6; #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3; #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6; #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):; #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6; #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6; #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53712,Availability,fault,fault,53712,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509; #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604; #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680; #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734; #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6; #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6; #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9; ===========================================================. [1] 281175 segmentation fault (core dumped) python; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:1170,Deployability,Install,Installation,1170,"round works fine. ### Reproducer. ```; (root-bug) ➜ ~ python; Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import tensorflow; 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.; 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>; >>> import ROOT. *** Break *** segmentation violation; ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:; ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):; #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6; #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6; #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3; #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6; #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):; #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6; #1 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:687,Modifiability,variab,variable,687,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```; (root-bug) ➜ ~ python; Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import tensorflow; 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.; 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>; >>> import ROOT. *** Break *** segmentation violation; ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:; ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):; #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6; #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6; #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3; #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6; #4 0x00007f1095d0ec40 in c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29088,Modifiability,config,config,29088,"ut>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509; #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604; #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680; #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734; #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6; #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6; #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum htt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:30026,Modifiability,variab,variable,30026,"0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509; #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604; #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680; #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734; #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6; #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6; #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2; #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2; #7 0x00007f107aeedf3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:52949,Modifiability,config,config,52949,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509; #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604; #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680; #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734; #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6; #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6; #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9; ===========================================================. [1] 281175 segmentation fault (core dumped) python; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:831,Performance,optimiz,optimized,831,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```; (root-bug) ➜ ~ python; Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import tensorflow; 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.; 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>; >>> import ROOT. *** Break *** segmentation violation; ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:; ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):; #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6; #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6; #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3; #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6; #4 0x00007f1095d0ec40 in c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:878,Performance,perform,performance-critical,878,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```; (root-bug) ➜ ~ python; Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import tensorflow; 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.; 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>; >>> import ROOT. *** Break *** segmentation violation; ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:; ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):; #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6; #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6; #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3; #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6; #4 0x00007f1095d0ec40 in c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:8203,Performance,load,loadSLocEntry,8203,"/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1; #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #14 0x00007f101a494421 in clang::SourceManager::getFileIDSlow(unsigned int) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:9645,Performance,load,loadModule,9645,"ng.so; #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #23 0x00007f101a38f15d in clang::Lexer::LexTokenInt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:13069,Performance,optimiz,optimized,13069,"::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32; #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32; #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so; #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70; #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26; #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117; #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6; #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822; #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:13120,Performance,optimiz,optimized,13120,"07f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32; #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32; #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so; #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70; #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26; #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117; #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6; #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822; #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:13594,Performance,optimiz,optimized,13594,"T2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32; #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so; #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70; #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26; #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117; #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6; #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822; #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14136,Performance,optimiz,optimized,14136,"=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26; #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117; #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6; #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822; #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14158,Performance,optimiz,optimized,14158,"=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26; #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117; #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6; #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822; #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14314,Performance,optimiz,optimized,14314,"at dl-init.c:117; #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6; #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822; #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14338,Performance,optimiz,optimized,14338,"at dl-init.c:117; #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6; #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822; #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14542,Performance,optimiz,optimized,14542,"ch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14699,Performance,optimiz,optimized,14699,"v=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14722,Performance,optimiz,optimized,14722,"v=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14749,Performance,optimiz,optimized,14749,"v=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15050,Performance,optimiz,optimized,15050,"1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15117,Performance,optimiz,optimized,15117,"1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15269,Performance,optimiz,optimized,15269,"args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15315,Performance,optimiz,optimized,15315,"args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15340,Performance,optimiz,optimized,15340,"args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15685,Performance,optimiz,optimized,15685,"ized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15706,Performance,optimiz,optimized,15706,"ized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15872,Performance,optimiz,optimized,15872,"12c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15894,Performance,optimiz,optimized,15894,"12c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16059,Performance,optimiz,optimized,16059,"wnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16240,Performance,optimiz,optimized,16240,"6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16263,Performance,optimiz,optimized,16263,"6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16411,Performance,optimiz,optimized,16411,"908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16434,Performance,optimiz,optimized,16434,"908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16461,Performance,optimiz,optimized,16461,"908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16825,Performance,optimiz,optimized,16825,"on-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17006,Performance,optimiz,optimized,17006,"49893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17157,Performance,optimiz,optimized,17157,"e+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17182,Performance,optimiz,optimized,17182,"e+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17359,Performance,optimiz,optimized,17359," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17381,Performance,optimiz,optimized,17381," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17404,Performance,optimiz,optimized,17404," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17429,Performance,optimiz,optimized,17429," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17634,Performance,optimiz,optimized,17634,"f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17789,Performance,optimiz,optimized,17789,"ized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17882,Performance,optimiz,optimized,17882,"ized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17995,Performance,optimiz,optimized,17995," locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18018,Performance,optimiz,optimized,18018," locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18045,Performance,optimiz,optimized,18045," locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18346,Performance,optimiz,optimized,18346,"mized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18413,Performance,optimiz,optimized,18413,"mized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18565,Performance,optimiz,optimized,18565," args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18611,Performance,optimiz,optimized,18611," args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18636,Performance,optimiz,optimized,18636," args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:19017,Performance,optimiz,optimized,19017,"out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:19207,Performance,optimiz,optimized,19207,"12788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:19525,Performance,optimiz,optimized,19525,"nction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:19549,Performance,optimiz,optimized,19549,"nction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:19813,Performance,optimiz,optimized,19813,"Tstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:19926,Performance,optimiz,optimized,19926," object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:19949,Performance,optimiz,optimized,19949," object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:19976,Performance,optimiz,optimized,19976," object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20340,Performance,optimiz,optimized,20340,"name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20521,Performance,optimiz,optimized,20521,"lobals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20672,Performance,optimiz,optimized,20672,"bd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20697,Performance,optimiz,optimized,20697,"bd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20874,Performance,optimiz,optimized,20874," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20896,Performance,optimiz,optimized,20896," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20919,Performance,optimiz,optimized,20919," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20944,Performance,optimiz,optimized,20944," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21149,Performance,optimiz,optimized,21149,"f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21304,Performance,optimiz,optimized,21304,"ized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21397,Performance,optimiz,optimized,21397,"ized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21510,Performance,optimiz,optimized,21510," locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21533,Performance,optimiz,optimized,21533," locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21560,Performance,optimiz,optimized,21560," locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21861,Performance,optimiz,optimized,21861,"mized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21928,Performance,optimiz,optimized,21928,"mized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:22080,Performance,optimiz,optimized,22080," args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:22126,Performance,optimiz,optimized,22126," args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:22151,Performance,optimiz,optimized,22151," args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:22532,Performance,optimiz,optimized,22532,"out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:22722,Performance,optimiz,optimized,22722,"123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRun",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23040,Performance,optimiz,optimized,23040,"ctorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, glo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23064,Performance,optimiz,optimized,23064,"ctorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, glo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23362,Performance,optimiz,optimized,23362,"f=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23475,Performance,optimiz,optimized,23475,"998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23498,Performance,optimiz,optimized,23498,"998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23525,Performance,optimiz,optimized,23525,"998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23889,Performance,optimiz,optimized,23889,"08be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24070,Performance,optimiz,optimized,24070,"timized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24221,Performance,optimiz,optimized,24221,"+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24246,Performance,optimiz,optimized,24246,"+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24423,Performance,optimiz,optimized,24423," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24445,Performance,optimiz,optimized,24445," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24468,Performance,optimiz,optimized,24468," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24493,Performance,optimiz,optimized,24493," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24699,Performance,optimiz,optimized,24699,"1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24855,Performance,optimiz,optimized,24855,"ed out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24948,Performance,optimiz,optimized,24948,"ed out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25062,Performance,optimiz,optimized,25062,"cals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25085,Performance,optimiz,optimized,25085,"cals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25112,Performance,optimiz,optimized,25112,"cals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25415,Performance,optimiz,optimized,25415,"d out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25482,Performance,optimiz,optimized,25482,"d out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25635,Performance,optimiz,optimized,25635,"s=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25681,Performance,optimiz,optimized,25681,"s=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25706,Performance,optimiz,optimized,25706,"s=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:26089,Performance,optimiz,optimized,26089,", throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:26280,Performance,optimiz,optimized,26280,", tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:26600,Performance,optimiz,optimized,26600,"call (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:26624,Performance,optimiz,optimized,26624,"call (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:26923,Performance,optimiz,optimized,26923," args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:27037,Performance,optimiz,optimized,27037,"_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:27060,Performance,optimiz,optimized,27060,"_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:27087,Performance,optimiz,optimized,27087,"_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:27453,Performance,optimiz,optimized,27453,"5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:27635,Performance,optimiz,optimized,27635,"ed out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:27992,Performance,optimiz,optimized,27992,", frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:28018,Performance,optimiz,optimized,28018,", frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:28088,Performance,optimiz,optimized,28088,", frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:28111,Performance,optimiz,optimized,28111,", frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:28932,Performance,optimiz,optimized,28932,"1.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509; #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604; #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680; #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734; #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6; #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6; #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29419,Performance,optimiz,optimized,29419,"61; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509; #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604; #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680; #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734; #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6; #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6; #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in add",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29441,Performance,optimiz,optimized,29441,"61; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509; #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604; #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680; #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734; #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6; #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6; #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in add",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:32064,Performance,load,loadSLocEntry,32064,"/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1; #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #14 0x00007f101a494421 in clang::SourceManager::getFileIDSlow(unsigned int) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:33506,Performance,load,loadModule,33506,"ng.so; #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #23 0x00007f101a38f15d in clang::Lexer::LexTokenInt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:36930,Performance,optimiz,optimized,36930,"::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32; #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32; #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so; #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70; #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26; #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117; #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6; #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822; #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:36981,Performance,optimiz,optimized,36981,"07f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32; #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32; #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so; #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70; #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26; #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117; #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6; #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822; #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:37455,Performance,optimiz,optimized,37455,"T2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32; #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so; #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70; #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26; #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117; #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6; #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822; #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:37997,Performance,optimiz,optimized,37997,"=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26; #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117; #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6; #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822; #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38019,Performance,optimiz,optimized,38019,"=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26; #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117; #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6; #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822; #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38175,Performance,optimiz,optimized,38175,"at dl-init.c:117; #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6; #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822; #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38199,Performance,optimiz,optimized,38199,"at dl-init.c:117; #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6; #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822; #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38403,Performance,optimiz,optimized,38403,"ch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38560,Performance,optimiz,optimized,38560,"v=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38583,Performance,optimiz,optimized,38583,"v=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38610,Performance,optimiz,optimized,38610,"v=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38911,Performance,optimiz,optimized,38911,"1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38978,Performance,optimiz,optimized,38978,"1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39130,Performance,optimiz,optimized,39130,"args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39176,Performance,optimiz,optimized,39176,"args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39201,Performance,optimiz,optimized,39201,"args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39546,Performance,optimiz,optimized,39546,"ized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39567,Performance,optimiz,optimized,39567,"ized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39733,Performance,optimiz,optimized,39733,"12c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39755,Performance,optimiz,optimized,39755,"12c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39920,Performance,optimiz,optimized,39920,"wnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40101,Performance,optimiz,optimized,40101,"6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40124,Performance,optimiz,optimized,40124,"6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40272,Performance,optimiz,optimized,40272,"908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40295,Performance,optimiz,optimized,40295,"908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40322,Performance,optimiz,optimized,40322,"908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40686,Performance,optimiz,optimized,40686,"on-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40867,Performance,optimiz,optimized,40867,"49893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41018,Performance,optimiz,optimized,41018,"e+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41043,Performance,optimiz,optimized,41043,"e+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41220,Performance,optimiz,optimized,41220," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41242,Performance,optimiz,optimized,41242," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41265,Performance,optimiz,optimized,41265," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41290,Performance,optimiz,optimized,41290," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41495,Performance,optimiz,optimized,41495,"f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41650,Performance,optimiz,optimized,41650,"ized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41743,Performance,optimiz,optimized,41743,"ized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41856,Performance,optimiz,optimized,41856," locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41879,Performance,optimiz,optimized,41879," locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41906,Performance,optimiz,optimized,41906," locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:42207,Performance,optimiz,optimized,42207,"mized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:42274,Performance,optimiz,optimized,42274,"mized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:42426,Performance,optimiz,optimized,42426," args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:42472,Performance,optimiz,optimized,42472," args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:42497,Performance,optimiz,optimized,42497," args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:42878,Performance,optimiz,optimized,42878,"out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43068,Performance,optimiz,optimized,43068,"12788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43386,Performance,optimiz,optimized,43386,"nction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43410,Performance,optimiz,optimized,43410,"nction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43674,Performance,optimiz,optimized,43674,"Tstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43787,Performance,optimiz,optimized,43787," object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43810,Performance,optimiz,optimized,43810," object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43837,Performance,optimiz,optimized,43837," object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44201,Performance,optimiz,optimized,44201,"name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44382,Performance,optimiz,optimized,44382,"lobals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44533,Performance,optimiz,optimized,44533,"bd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44558,Performance,optimiz,optimized,44558,"bd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44735,Performance,optimiz,optimized,44735," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44757,Performance,optimiz,optimized,44757," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44780,Performance,optimiz,optimized,44780," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44805,Performance,optimiz,optimized,44805," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45010,Performance,optimiz,optimized,45010,"f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45165,Performance,optimiz,optimized,45165,"ized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45258,Performance,optimiz,optimized,45258,"ized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45371,Performance,optimiz,optimized,45371," locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45394,Performance,optimiz,optimized,45394," locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45421,Performance,optimiz,optimized,45421," locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45722,Performance,optimiz,optimized,45722,"mized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45789,Performance,optimiz,optimized,45789,"mized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45941,Performance,optimiz,optimized,45941," args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45987,Performance,optimiz,optimized,45987," args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:46012,Performance,optimiz,optimized,46012," args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:46393,Performance,optimiz,optimized,46393,"out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:46583,Performance,optimiz,optimized,46583,"123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRun",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:46901,Performance,optimiz,optimized,46901,"ctorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, glo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:46925,Performance,optimiz,optimized,46925,"ctorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, glo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:47223,Performance,optimiz,optimized,47223,"f=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:47336,Performance,optimiz,optimized,47336,"998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:47359,Performance,optimiz,optimized,47359,"998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:47386,Performance,optimiz,optimized,47386,"998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:47750,Performance,optimiz,optimized,47750,"08be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:47931,Performance,optimiz,optimized,47931,"timized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48082,Performance,optimiz,optimized,48082,"+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48107,Performance,optimiz,optimized,48107,"+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48284,Performance,optimiz,optimized,48284," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48306,Performance,optimiz,optimized,48306," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48329,Performance,optimiz,optimized,48329," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48354,Performance,optimiz,optimized,48354," (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48560,Performance,optimiz,optimized,48560,"1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48716,Performance,optimiz,optimized,48716,"ed out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48809,Performance,optimiz,optimized,48809,"ed out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48923,Performance,optimiz,optimized,48923,"cals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48946,Performance,optimiz,optimized,48946,"cals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48973,Performance,optimiz,optimized,48973,"cals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49276,Performance,optimiz,optimized,49276,"d out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49343,Performance,optimiz,optimized,49343,"d out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49496,Performance,optimiz,optimized,49496,"s=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49542,Performance,optimiz,optimized,49542,"s=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49567,Performance,optimiz,optimized,49567,"s=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49950,Performance,optimiz,optimized,49950,", throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50141,Performance,optimiz,optimized,50141,", tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50461,Performance,optimiz,optimized,50461,"call (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50485,Performance,optimiz,optimized,50485,"call (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50784,Performance,optimiz,optimized,50784," args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50898,Performance,optimiz,optimized,50898,"_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50921,Performance,optimiz,optimized,50921,"_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50948,Performance,optimiz,optimized,50948,"_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:51314,Performance,optimiz,optimized,51314,"5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:51496,Performance,optimiz,optimized,51496,"ed out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:51853,Performance,optimiz,optimized,51853,", frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:51879,Performance,optimiz,optimized,51879,", frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:51949,Performance,optimiz,optimized,51949,", frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:51972,Performance,optimiz,optimized,51972,", frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:52793,Performance,optimiz,optimized,52793,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509; #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604; #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680; #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734; #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6; #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6; #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9; ===========================================================. [1] 281175 segmentation fault (core dumped) python; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53280,Performance,optimiz,optimized,53280,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509; #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604; #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680; #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734; #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6; #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6; #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9; ===========================================================. [1] 281175 segmentation fault (core dumped) python; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53302,Performance,optimiz,optimized,53302,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509; #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604; #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680; #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734; #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6; #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6; #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9; ===========================================================. [1] 281175 segmentation fault (core dumped) python; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/pull/15972:953,Deployability,update,updated,953,"##### Edit:; I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:; I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:; Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally; - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:923,Testability,test,tested,923,"##### Edit:; I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:; I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:; Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally; - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:685,Usability,guid,guide,685,"##### Edit:; I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:; I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:; Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally; - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:705,Usability,Simpl,Simply,705,"##### Edit:; I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:; I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:; Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally; - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15973:131,Availability,error,error,131,"I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:435,Availability,error,error,435,"I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:563,Availability,error,error,563,"I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:73,Deployability,upgrade,upgrade,73,"I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15974:524,Deployability,update,updated,524,"In RPageStorageFile we're currently either writing all pages in a single vector write or, if their total size exceeds `maxKeySize`, we commit one at a time.; With this change we try to commit as many consecutive pages as possible and split the vector write as soon as the next page would exceed `maxKeySize`. If a single page is bigger than `maxKeySize` we take care to write it in the non-vectorized fashion, since splitting a key is only supported through `WriteBlob()`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15974
https://github.com/root-project/root/pull/15974:494,Testability,test,tested,494,"In RPageStorageFile we're currently either writing all pages in a single vector write or, if their total size exceeds `maxKeySize`, we commit one at a time.; With this change we try to commit as many consecutive pages as possible and split the vector write as soon as the next page would exceed `maxKeySize`. If a single page is bigger than `maxKeySize` we take care to write it in the non-vectorized fashion, since splitting a key is only supported through `WriteBlob()`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15974
https://github.com/root-project/root/pull/15975:249,Testability,test,tested,249,Currently is not backward-compatible (will fail if we read an old RNTuple version with a newer one which adds new members from version 4). Was unnoticed so far because RTFNTuple v4 and v6 (current) happen to have the same size. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15975
https://github.com/root-project/root/issues/15977:998,Deployability,Install,Installation,998,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CaptureEvent when hovering with the mouse over a zoomed canvas captures a TMarker far outside of the zoom region. Maybe some rounding issue is going on there. As seen in the picture above, the statusbar points at a TMarker, but no TMarker is visible in the zoom region. ![image](https://github.com/root-project/root/assets/10653970/07fa6cb5-9f9a-42ec-b33b-812121279659). ### Reproducer. Open the attached TFile with classic TRootBrowser, double click on the canvas c_pulse, then try to unzoom the X axis. [c_pulse.root.zip](https://github.com/user-attachments/files/16087609/c_pulse.root.zip). It does not work. Click and drag whatever point, so that the TMarker is repositioned. Only then, you can unzoom the axis. ### ROOT version. ```; ROOT v6.32.00; Built for linuxx8664gcc on May 28 2024, 05:02:02; From tags/v6-32-00@v6-32-00; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15977
https://github.com/root-project/root/issues/15977:1026,Deployability,Release,Release,1026,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CaptureEvent when hovering with the mouse over a zoomed canvas captures a TMarker far outside of the zoom region. Maybe some rounding issue is going on there. As seen in the picture above, the statusbar points at a TMarker, but no TMarker is visible in the zoom region. ![image](https://github.com/root-project/root/assets/10653970/07fa6cb5-9f9a-42ec-b33b-812121279659). ### Reproducer. Open the attached TFile with classic TRootBrowser, double click on the canvas c_pulse, then try to unzoom the X axis. [c_pulse.root.zip](https://github.com/user-attachments/files/16087609/c_pulse.root.zip). It does not work. Click and drag whatever point, so that the TMarker is repositioned. Only then, you can unzoom the axis. ### ROOT version. ```; ROOT v6.32.00; Built for linuxx8664gcc on May 28 2024, 05:02:02; From tags/v6-32-00@v6-32-00; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15977
https://github.com/root-project/root/pull/15979:275,Security,secur,security,275,`RBrowser` is no longer experimental and can be compiled once `webgui` is enabled.; It also required to implement file dialogs in other widgets (like TWebCanvas) therefore need to be compiled together. Add `ROOT::RWebWindowsManager::SetUseConnectionKey` method to let change security settings via method call.; Before only rootrc file can be used. Small fix in URL generation when token is used.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15979
https://github.com/root-project/root/pull/15981:104,Availability,error,error,104,# This Pull request:; fixes a warning due to an unused param in SimplexSeedGenerator (becomes a compile error with dev=ON),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15981
https://github.com/root-project/root/pull/15981:64,Usability,Simpl,SimplexSeedGenerator,64,# This Pull request:; fixes a warning due to an unused param in SimplexSeedGenerator (becomes a compile error with dev=ON),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15981
https://github.com/root-project/root/pull/15982:326,Deployability,update,updated,326,"Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed).; With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15982
https://github.com/root-project/root/pull/15982:142,Energy Efficiency,allocate,allocates,142,"Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed).; With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15982
https://github.com/root-project/root/pull/15982:242,Energy Efficiency,allocate,allocate,242,"Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed).; With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15982
https://github.com/root-project/root/pull/15982:0,Safety,Avoid,Avoids,0,"Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed).; With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15982
https://github.com/root-project/root/pull/15982:296,Testability,test,tested,296,"Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed).; With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15982
https://github.com/root-project/root/pull/15983:188,Deployability,update,updated,188,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/15977. Improve also doxygen documentation. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15983
https://github.com/root-project/root/pull/15983:158,Testability,test,tested,158,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/15977. Improve also doxygen documentation. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15983
https://github.com/root-project/root/pull/15985:781,Deployability,update,updated,781,"This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15985
https://github.com/root-project/root/pull/15985:410,Security,access,access,410,"This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15985
https://github.com/root-project/root/pull/15985:751,Testability,test,tested,751,"This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15985
https://github.com/root-project/root/issues/15986:1155,Availability,Error,Error,1155,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files.; In the past all this worked:; ```; TUri uri1(""EcalBarrel.gdml"");; TUri uri2(""file://EcalBarrel.gdml"");; TUri uri3(""file://./EcalBarrel.gdml"");; ```; now after sync'ing with master this does not work anymore. Any invocation results in a SEGV.; - Is this a real problem in ROOT or; - What do I wrong; I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```; $> root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |; | From heads/master@v6-31-01-2515-g03703814ef |; | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""); ```. Result:; ```; Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation; ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/issues/15986:1400,Deployability,Install,Installation,1400,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files.; In the past all this worked:; ```; TUri uri1(""EcalBarrel.gdml"");; TUri uri2(""file://EcalBarrel.gdml"");; TUri uri3(""file://./EcalBarrel.gdml"");; ```; now after sync'ing with master this does not work anymore. Any invocation results in a SEGV.; - Is this a real problem in ROOT or; - What do I wrong; I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```; $> root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |; | From heads/master@v6-31-01-2515-g03703814ef |; | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""); ```. Result:; ```; Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation; ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/pull/15987:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15987
https://github.com/root-project/root/pull/15987:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15987
https://github.com/root-project/root/pull/15988:1142,Availability,error,error,1142,"# This Pull request:. ## Changes or fixes:. [core] Make TUri class PCRE2 compatible; ; PCRE2 has a stricter regular expression syntax parsing than PCRE.; Some non-conforming regular expressions that were accepted by PCRE are; correcrly rejected by PCRE2.; ; Some of the regular expressions used by the TUri class do not follow; the syntax rules and were relying on them being acceped by PCRE; anyway. This commit corrects the syntax of these expressions so that; they are now accepted by PCRE2. The corrected expressions still work; correctly with the old PCRE. [core] Correct the regular expression for the scheme part in TUri class; ; RFC 3986 (https://datatracker.ietf.org/doc/html/rfc3986) defines the; scheme part of a URI as:; ; scheme = ALPHA *( ALPHA / DIGIT / ""+"" / ""-"" / ""."" ); ; The regular expression for finding the scheme part in the TUri class; was defined as; ; ^[[:alpha:]][[:alpha:][:digit:]+-.]*$; ; This does not match the definition in the RFC, since +-. in regular; expression syntax is the range of ascii codes from '+' to '.', which; means '+', ',', '-' and '.'. I.e. the ',' is included in the regular; expression in error. This commit adds a backslash escape to the '-' so; that it is interpreted as a literal '-' sign instead of indicating a; range in the regular expression. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15986",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15988
https://github.com/root-project/root/pull/15988:1354,Deployability,update,updated,1354,"# This Pull request:. ## Changes or fixes:. [core] Make TUri class PCRE2 compatible; ; PCRE2 has a stricter regular expression syntax parsing than PCRE.; Some non-conforming regular expressions that were accepted by PCRE are; correcrly rejected by PCRE2.; ; Some of the regular expressions used by the TUri class do not follow; the syntax rules and were relying on them being acceped by PCRE; anyway. This commit corrects the syntax of these expressions so that; they are now accepted by PCRE2. The corrected expressions still work; correctly with the old PCRE. [core] Correct the regular expression for the scheme part in TUri class; ; RFC 3986 (https://datatracker.ietf.org/doc/html/rfc3986) defines the; scheme part of a URI as:; ; scheme = ALPHA *( ALPHA / DIGIT / ""+"" / ""-"" / ""."" ); ; The regular expression for finding the scheme part in the TUri class; was defined as; ; ^[[:alpha:]][[:alpha:][:digit:]+-.]*$; ; This does not match the definition in the RFC, since +-. in regular; expression syntax is the range of ascii codes from '+' to '.', which; means '+', ',', '-' and '.'. I.e. the ',' is included in the regular; expression in error. This commit adds a backslash escape to the '-' so; that it is interpreted as a literal '-' sign instead of indicating a; range in the regular expression. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15986",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15988
https://github.com/root-project/root/pull/15988:1324,Testability,test,tested,1324,"# This Pull request:. ## Changes or fixes:. [core] Make TUri class PCRE2 compatible; ; PCRE2 has a stricter regular expression syntax parsing than PCRE.; Some non-conforming regular expressions that were accepted by PCRE are; correcrly rejected by PCRE2.; ; Some of the regular expressions used by the TUri class do not follow; the syntax rules and were relying on them being acceped by PCRE; anyway. This commit corrects the syntax of these expressions so that; they are now accepted by PCRE2. The corrected expressions still work; correctly with the old PCRE. [core] Correct the regular expression for the scheme part in TUri class; ; RFC 3986 (https://datatracker.ietf.org/doc/html/rfc3986) defines the; scheme part of a URI as:; ; scheme = ALPHA *( ALPHA / DIGIT / ""+"" / ""-"" / ""."" ); ; The regular expression for finding the scheme part in the TUri class; was defined as; ; ^[[:alpha:]][[:alpha:][:digit:]+-.]*$; ; This does not match the definition in the RFC, since +-. in regular; expression syntax is the range of ascii codes from '+' to '.', which; means '+', ',', '-' and '.'. I.e. the ',' is included in the regular; expression in error. This commit adds a backslash escape to the '-' so; that it is interpreted as a literal '-' sign instead of indicating a; range in the regular expression. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15986",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15988
https://github.com/root-project/root/pull/15991:79,Deployability,patch,patch,79,"The _column model_ turned into an unnecessary wrapper for the column type. The patch replaces the use of the column model by using directly the column type. Along with it, some unused flags of the column information in the header are removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15991
https://github.com/root-project/root/pull/15991:46,Integrability,wrap,wrapper,46,"The _column model_ turned into an unnecessary wrapper for the column type. The patch replaces the use of the column model by using directly the column type. Along with it, some unused flags of the column information in the header are removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15991
https://github.com/root-project/root/pull/15992:289,Deployability,update,updated,289,# This Pull request:; gives RNTupleMerger the capability of changing the source RNTuples' compression while doing the merging. This can also be used to change the compression of a single RNTuple. Depends on #15954 . ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15992
https://github.com/root-project/root/pull/15992:196,Integrability,Depend,Depends,196,# This Pull request:; gives RNTupleMerger the capability of changing the source RNTuples' compression while doing the merging. This can also be used to change the compression of a single RNTuple. Depends on #15954 . ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15992
https://github.com/root-project/root/pull/15992:259,Testability,test,tested,259,# This Pull request:; gives RNTupleMerger the capability of changing the source RNTuples' compression while doing the merging. This can also be used to change the compression of a single RNTuple. Depends on #15954 . ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15992
https://github.com/root-project/root/issues/15996:101,Availability,error,error,101,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:; ```back; export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase ; source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh; asetup main--dev4LCG,latest,Athena; python; ```; ```python; import ROOT, cppyy.ll; ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(); ```; ```txt; True; ```; ```python; cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0); ```; ```txt; TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)""; ```; but using a typedef to the DataVector works (note the real type of the returned object):; ```python; cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0); ```; ```txt; <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>; ```; and after the previous call autoloaded some libraries, the real type starts to work as well:; ```python; cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0); ```; ```txt; <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>; ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/issues/15996:770,Availability,error,errors,770,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:; ```back; export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase ; source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh; asetup main--dev4LCG,latest,Athena; python; ```; ```python; import ROOT, cppyy.ll; ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(); ```; ```txt; True; ```; ```python; cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0); ```; ```txt; TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)""; ```; but using a typedef to the DataVector works (note the real type of the returned object):; ```python; cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0); ```; ```txt; <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>; ```; and after the previous call autoloaded some libraries, the real type starts to work as well:; ```python; cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0); ```; ```txt; <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>; ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/issues/15996:1397,Deployability,Install,Installation,1397,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:; ```back; export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase ; source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh; asetup main--dev4LCG,latest,Athena; python; ```; ```python; import ROOT, cppyy.ll; ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(); ```; ```txt; True; ```; ```python; cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0); ```; ```txt; TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)""; ```; but using a typedef to the DataVector works (note the real type of the returned object):; ```python; cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0); ```; ```txt; <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>; ```; and after the previous call autoloaded some libraries, the real type starts to work as well:; ```python; cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0); ```; ```txt; <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>; ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/pull/15997:82,Deployability,release,release,82,"Backport of #15988. Doesn't need to backported further, because 6.32 is the first release that supports PCRE 2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15997
https://github.com/root-project/root/pull/16000:469,Availability,failure,failure,469,"# This Pull request:; Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:; - `roottest-python-cpp-cpp`; - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:519,Deployability,patch,patch,519,"# This Pull request:; Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:; - `roottest-python-cpp-cpp`; - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:762,Deployability,update,updated,762,"# This Pull request:; Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:; - `roottest-python-cpp-cpp`; - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:50,Performance,perform,performance,50,"# This Pull request:; Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:; - `roottest-python-cpp-cpp`; - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:450,Performance,perform,performance,450,"# This Pull request:; Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:; - `roottest-python-cpp-cpp`; - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:41,Testability,test,test,41,"# This Pull request:; Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:; - `roottest-python-cpp-cpp`; - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:77,Testability,test,tests,77,"# This Pull request:; Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:; - `roottest-python-cpp-cpp`; - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:121,Testability,test,tests,121,"# This Pull request:; Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:; - `roottest-python-cpp-cpp`; - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:371,Testability,test,tests,371,"# This Pull request:; Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:; - `roottest-python-cpp-cpp`; - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:671,Testability,test,tests,671,"# This Pull request:; Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:; - `roottest-python-cpp-cpp`; - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:732,Testability,test,tested,732,"# This Pull request:; Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:; - `roottest-python-cpp-cpp`; - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16001:188,Deployability,update,updated,188,# This Pull request:. ## Changes or fixes:. Fixes https://root-forum.cern.ch/t/change-to-hadd-that-breaks-previously-working-code/60126. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16001
https://github.com/root-project/root/pull/16001:158,Testability,test,tested,158,# This Pull request:. ## Changes or fixes:. Fixes https://root-forum.cern.ch/t/change-to-hadd-that-breaks-previously-working-code/60126. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16001
https://github.com/root-project/root/pull/16002:133,Availability,error,error,133,Given the very small statistics used (especially on MAcoS) due to th eslow time in evaluating we disable the check on the regression error obtained. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16002
https://github.com/root-project/root/pull/16002:244,Deployability,update,updated,244,Given the very small statistics used (especially on MAcoS) due to th eslow time in evaluating we disable the check on the regression error obtained. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16002
https://github.com/root-project/root/pull/16002:214,Testability,test,tested,214,Given the very small statistics used (especially on MAcoS) due to th eslow time in evaluating we disable the check on the regression error obtained. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16002
https://github.com/root-project/root/pull/16007:77,Deployability,release,release,77,"This is spinning off the commits from #15616 that don't depend on a new Clad release, so we can merge and validate the development in the nightlies early.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16007
https://github.com/root-project/root/pull/16007:56,Integrability,depend,depend,56,"This is spinning off the commits from #15616 that don't depend on a new Clad release, so we can merge and validate the development in the nightlies early.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16007
https://github.com/root-project/root/pull/16007:106,Security,validat,validate,106,"This is spinning off the commits from #15616 that don't depend on a new Clad release, so we can merge and validate the development in the nightlies early.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16007
https://github.com/root-project/root/pull/16008:59,Deployability,install,install-root-in-my-directory-in-a-share-server,59,Inspired by this forum post:; https://root-forum.cern.ch/t/install-root-in-my-directory-in-a-share-server/60150/2. We can simply require the needed components to avoid manual checking and emitting `FATAL_ERROR`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16008
https://github.com/root-project/root/pull/16008:162,Safety,avoid,avoid,162,Inspired by this forum post:; https://root-forum.cern.ch/t/install-root-in-my-directory-in-a-share-server/60150/2. We can simply require the needed components to avoid manual checking and emitting `FATAL_ERROR`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16008
https://github.com/root-project/root/pull/16008:122,Usability,simpl,simply,122,Inspired by this forum post:; https://root-forum.cern.ch/t/install-root-in-my-directory-in-a-share-server/60150/2. We can simply require the needed components to avoid manual checking and emitting `FATAL_ERROR`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16008
https://github.com/root-project/root/pull/16010:41,Availability,error,error,41,"# This Pull request:; fixes a copy-paste error resulting in the wrong index being used to assign the new buffer to the sealedPage in RNTupleMerger.; This could result not only in errors in the merged file, but also in memory corruption.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16010
https://github.com/root-project/root/pull/16010:179,Availability,error,errors,179,"# This Pull request:; fixes a copy-paste error resulting in the wrong index being used to assign the new buffer to the sealedPage in RNTupleMerger.; This could result not only in errors in the merged file, but also in memory corruption.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16010
https://github.com/root-project/root/pull/16012:22,Deployability,Update,Updates,22,"# This Pull Request:; Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:; - Updated implementation in the respective ROperator files to handle parametric shapes.; - Added tests as well as models for the same. ## Checklist:; - [x] Tested changes locally; - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:269,Deployability,Update,Updated,269,"# This Pull Request:; Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:; - Updated implementation in the respective ROperator files to handle parametric shapes.; - Added tests as well as models for the same. ## Checklist:; - [x] Tested changes locally; - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:453,Deployability,Update,Updated,453,"# This Pull Request:; Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:; - Updated implementation in the respective ROperator files to handle parametric shapes.; - Added tests as well as models for the same. ## Checklist:; - [x] Tested changes locally; - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:364,Testability,test,tests,364,"# This Pull Request:; Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:; - Updated implementation in the respective ROperator files to handle parametric shapes.; - Added tests as well as models for the same. ## Checklist:; - [x] Tested changes locally; - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:423,Testability,Test,Tested,423,"# This Pull Request:; Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:; - Updated implementation in the respective ROperator files to handle parametric shapes.; - Added tests as well as models for the same. ## Checklist:; - [x] Tested changes locally; - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16013:480,Deployability,update,updated,480,"# This Pull request:; - makes it so that RNTupleMerger reads the outFile's compression settings and changes the destination RNTuple's compression accordingly. Effectively, this allows users to select the out RNTuple compression with the `-f[0-9]` flag of `hadd`.; - fixes a couple of bugs in the compression changing code; - adds some tests for it; - related PR in [roottest](https://github.com/root-project/roottest/pull/1143). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16013
https://github.com/root-project/root/pull/16013:335,Testability,test,tests,335,"# This Pull request:; - makes it so that RNTupleMerger reads the outFile's compression settings and changes the destination RNTuple's compression accordingly. Effectively, this allows users to select the out RNTuple compression with the `-f[0-9]` flag of `hadd`.; - fixes a couple of bugs in the compression changing code; - adds some tests for it; - related PR in [roottest](https://github.com/root-project/roottest/pull/1143). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16013
https://github.com/root-project/root/pull/16013:450,Testability,test,tested,450,"# This Pull request:; - makes it so that RNTupleMerger reads the outFile's compression settings and changes the destination RNTuple's compression accordingly. Effectively, this allows users to select the out RNTuple compression with the `-f[0-9]` flag of `hadd`.; - fixes a couple of bugs in the compression changing code; - adds some tests for it; - related PR in [roottest](https://github.com/root-project/roottest/pull/1143). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16013
https://github.com/root-project/root/pull/16014:1713,Integrability,Wrap,WrapperCall,1713," by 0x498B90B: _PyEval_EvalFrameDefault.cold (generated_cases.c.h:256); ==2728568== by 0x4AE8B35: PyEval_EvalCode (ceval.c:578); ==2728568== by 0x4B0EDB9: run_eval_code_obj (pythonrun.c:1722); ==2728568== by 0x4B0947D: run_mod (pythonrun.c:1743); ==2728568== by 0x4B2D492: pyrun_file (pythonrun.c:1643); ==2728568== by 0x4B2C689: _PyRun_SimpleFileObject (pythonrun.c:433); ==2728568== by 0x4B2C3BE: _PyRun_AnyFileObject (pythonrun.c:78); ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:360); ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379); ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629); ==2728568== by 0x4B1B291: Py_RunMain (main.c:709); ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763); ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58); ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd; ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483); ==2728568== by 0x3735A021: ???; ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802); ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895); ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99); ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767); ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123); ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203); ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956); ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133); ```. See also the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2736,Testability,log,log,2736,": UnknownInlinedFun (main.c:360); ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379); ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629); ==2728568== by 0x4B1B291: Py_RunMain (main.c:709); ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763); ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58); ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd; ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483); ==2728568== by 0x3735A021: ???; ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802); ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895); ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99); ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767); ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123); ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203); ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956); ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133); ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log); * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2785,Testability,log,log,2785,": UnknownInlinedFun (main.c:360); ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379); ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629); ==2728568== by 0x4B1B291: Py_RunMain (main.c:709); ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763); ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58); ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd; ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483); ==2728568== by 0x3735A021: ???; ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802); ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895); ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99); ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767); ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123); ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203); ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956); ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133); ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log); * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2861,Testability,log,log,2861,": UnknownInlinedFun (main.c:360); ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379); ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629); ==2728568== by 0x4B1B291: Py_RunMain (main.c:709); ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763); ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58); ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd; ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483); ==2728568== by 0x3735A021: ???; ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802); ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895); ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99); ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767); ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123); ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203); ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956); ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133); ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log); * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2889,Testability,log,log,2889,": UnknownInlinedFun (main.c:360); ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379); ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629); ==2728568== by 0x4B1B291: Py_RunMain (main.c:709); ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763); ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58); ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd; ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483); ==2728568== by 0x3735A021: ???; ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802); ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895); ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99); ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767); ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123); ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203); ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956); ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133); ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log); * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2964,Testability,log,log,2964,": UnknownInlinedFun (main.c:360); ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379); ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629); ==2728568== by 0x4B1B291: Py_RunMain (main.c:709); ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763); ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58); ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd; ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483); ==2728568== by 0x3735A021: ???; ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802); ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895); ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99); ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767); ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123); ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203); ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956); ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133); ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log); * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16015:751,Deployability,update,updated,751,"# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13387. Reported by @xkzl; DaemonUtils files have been restored from latest version before removal by @amadio in https://github.com/root-project/root/pull/2704 although it is unclear to me how these files ended up reaching SrvAuth, as they were removed from the glob there before that change (and in another target).; Edit: Probably the problem dates back to the change from Make to CMake, see https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/Module.mk vs https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/CMakeLists.txt. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16015
https://github.com/root-project/root/pull/16015:721,Testability,test,tested,721,"# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13387. Reported by @xkzl; DaemonUtils files have been restored from latest version before removal by @amadio in https://github.com/root-project/root/pull/2704 although it is unclear to me how these files ended up reaching SrvAuth, as they were removed from the glob there before that change (and in another target).; Edit: Probably the problem dates back to the change from Make to CMake, see https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/Module.mk vs https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/CMakeLists.txt. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16015
https://github.com/root-project/root/pull/16016:314,Availability,ERROR,ERROR,314,"# This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test; ```; 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR; ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Exception: Found not whitelisted libraries after importing ROOT:; - libtbbmalloc; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ----------------------------------------------------------------------; Ran 1 test in 1.186s; FAILED (errors=1); ```; This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:393,Availability,ERROR,ERROR,393,"# This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test; ```; 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR; ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Exception: Found not whitelisted libraries after importing ROOT:; - libtbbmalloc; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ----------------------------------------------------------------------; Ran 1 test in 1.186s; FAILED (errors=1); ```; This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:852,Availability,error,errors,852,"# This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test; ```; 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR; ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Exception: Found not whitelisted libraries after importing ROOT:; - libtbbmalloc; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ----------------------------------------------------------------------; Ran 1 test in 1.186s; FAILED (errors=1); ```; This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:873,Availability,failure,failure,873,"# This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test; ```; 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR; ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Exception: Found not whitelisted libraries after importing ROOT:; - libtbbmalloc; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ----------------------------------------------------------------------; Ran 1 test in 1.186s; FAILED (errors=1); ```; This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:916,Deployability,update,updated,916,"# This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test; ```; 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR; ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Exception: Found not whitelisted libraries after importing ROOT:; - libtbbmalloc; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ----------------------------------------------------------------------; Ran 1 test in 1.186s; FAILED (errors=1); ```; This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:1040,Deployability,update,updated,1040,"# This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test; ```; 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR; ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Exception: Found not whitelisted libraries after importing ROOT:; - libtbbmalloc; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ----------------------------------------------------------------------; Ran 1 test in 1.186s; FAILED (errors=1); ```; This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:139,Performance,load,load-libs,139,"# This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test; ```; 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR; ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Exception: Found not whitelisted libraries after importing ROOT:; - libtbbmalloc; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ----------------------------------------------------------------------; Ran 1 test in 1.186s; FAILED (errors=1); ```; This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:282,Performance,load,loaded,282,"# This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test; ```; 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR; ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Exception: Found not whitelisted libraries after importing ROOT:; - libtbbmalloc; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ----------------------------------------------------------------------; Ran 1 test in 1.186s; FAILED (errors=1); ```; This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:474,Performance,load,loaded,474,"# This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test; ```; 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR; ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Exception: Found not whitelisted libraries after importing ROOT:; - libtbbmalloc; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ----------------------------------------------------------------------; Ran 1 test in 1.186s; FAILED (errors=1); ```; This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:698,Performance,load,loaded,698,"# This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test; ```; 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR; ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Exception: Found not whitelisted libraries after importing ROOT:; - libtbbmalloc; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ----------------------------------------------------------------------; Ran 1 test in 1.186s; FAILED (errors=1); ```; This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:85,Testability,test,test,85,"# This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test; ```; 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR; ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Exception: Found not whitelisted libraries after importing ROOT:; - libtbbmalloc; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ----------------------------------------------------------------------; Ran 1 test in 1.186s; FAILED (errors=1); ```; This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:103,Testability,Test,Test,103,"# This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test; ```; 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR; ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Exception: Found not whitelisted libraries after importing ROOT:; - libtbbmalloc; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ----------------------------------------------------------------------; Ran 1 test in 1.186s; FAILED (errors=1); ```; This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:267,Testability,Test,Test,267,"# This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test; ```; 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR; ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Exception: Found not whitelisted libraries after importing ROOT:; - libtbbmalloc; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ----------------------------------------------------------------------; Ran 1 test in 1.186s; FAILED (errors=1); ```; This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:459,Testability,Test,Test,459,"# This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test; ```; 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR; ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Exception: Found not whitelisted libraries after importing ROOT:; - libtbbmalloc; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ----------------------------------------------------------------------; Ran 1 test in 1.186s; FAILED (errors=1); ```; This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:664,Testability,test,test,664,"# This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test; ```; 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR; ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Exception: Found not whitelisted libraries after importing ROOT:; - libtbbmalloc; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ----------------------------------------------------------------------; Ran 1 test in 1.186s; FAILED (errors=1); ```; This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:828,Testability,test,test,828,"# This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test; ```; 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR; ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Exception: Found not whitelisted libraries after importing ROOT:; - libtbbmalloc; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ----------------------------------------------------------------------; Ran 1 test in 1.186s; FAILED (errors=1); ```; This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:1010,Testability,test,tested,1010,"# This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test; ```; 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR; ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Exception: Found not whitelisted libraries after importing ROOT:; - libtbbmalloc; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ----------------------------------------------------------------------; Ran 1 test in 1.186s; FAILED (errors=1); ```; This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16018:61,Deployability,patch,patch,61,Backports of recent fixes and improvements for the next 6.32 patch release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16018
https://github.com/root-project/root/pull/16018:67,Deployability,release,release,67,Backports of recent fixes and improvements for the next 6.32 patch release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16018
https://github.com/root-project/root/pull/16021:61,Deployability,patch,patch,61,Backports of recent fixes and improvements for the next 6.32 patch release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16021
https://github.com/root-project/root/pull/16021:67,Deployability,release,release,67,Backports of recent fixes and improvements for the next 6.32 patch release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16021
https://github.com/root-project/root/pull/16022:287,Deployability,update,updated,287,"The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16022
https://github.com/root-project/root/pull/16022:201,Safety,avoid,avoiding,201,"The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16022
https://github.com/root-project/root/pull/16022:165,Security,access,access,165,"The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16022
https://github.com/root-project/root/pull/16022:257,Testability,test,tested,257,"The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16022
https://github.com/root-project/root/pull/16022:158,Usability,simpl,simply,158,"The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16022
https://github.com/root-project/root/pull/16023:54,Performance,load,loading,54,Let use browser `import()` function to control proper loading of JSROOT modules. ; No need to use older `JSRoot.core.js`. To be tested,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16023
https://github.com/root-project/root/pull/16023:128,Testability,test,tested,128,Let use browser `import()` function to control proper loading of JSROOT modules. ; No need to use older `JSRoot.core.js`. To be tested,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16023
https://github.com/root-project/root/issues/16024:671,Deployability,install,installation,671,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. `thisroot.sh` has a `clean_environment` function that tries to remove previously added ROOT entries from various path variables:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L32-L47. However, for the lib paths the entry removed is the `lib` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```; cmake3 /opt/src/root \; -DCMAKE_INSTALL_PREFIX=/opt/root \; -DPYTHON_EXECUTABLE=${python_executable} \; -DPYTHON_INCLUDE_DIR=${python_include_dir} \; -DPYTHON_LIBRARY=${python_include_dir} \; -Dpython3:BOOL=ON \; -Dsoversion:BOOL=ON \; -Dtmva:BOOL=OFF \; -Dgnuinstall:BOOL=ON \; -Wno-de; cmake3 --build . --clean-first --target install; ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 19 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:1334,Deployability,install,install,1334," the lib paths the entry removed is the `lib` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```; cmake3 /opt/src/root \; -DCMAKE_INSTALL_PREFIX=/opt/root \; -DPYTHON_EXECUTABLE=${python_executable} \; -DPYTHON_INCLUDE_DIR=${python_include_dir} \; -DPYTHON_LIBRARY=${python_include_dir} \; -Dpython3:BOOL=ON \; -Dsoversion:BOOL=ON \; -Dtmva:BOOL=OFF \; -Dgnuinstall:BOOL=ON \; -Wno-de; cmake3 --build . --clean-first --target install; ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |; | From heads/master@tags/v6-30-02 |; | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:1742,Deployability,install,installation,1742,"b` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```; cmake3 /opt/src/root \; -DCMAKE_INSTALL_PREFIX=/opt/root \; -DPYTHON_EXECUTABLE=${python_executable} \; -DPYTHON_INCLUDE_DIR=${python_include_dir} \; -DPYTHON_LIBRARY=${python_include_dir} \; -Dpython3:BOOL=ON \; -Dsoversion:BOOL=ON \; -Dtmva:BOOL=OFF \; -Dgnuinstall:BOOL=ON \; -Wno-de; cmake3 --build . --clean-first --target install; ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |; | From heads/master@tags/v6-30-02 |; | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL 8). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:2256,Deployability,Install,Installation,2256,"b` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```; cmake3 /opt/src/root \; -DCMAKE_INSTALL_PREFIX=/opt/root \; -DPYTHON_EXECUTABLE=${python_executable} \; -DPYTHON_INCLUDE_DIR=${python_include_dir} \; -DPYTHON_LIBRARY=${python_include_dir} \; -Dpython3:BOOL=ON \; -Dsoversion:BOOL=ON \; -Dtmva:BOOL=OFF \; -Dgnuinstall:BOOL=ON \; -Wno-de; cmake3 --build . --clean-first --target install; ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |; | From heads/master@tags/v6-30-02 |; | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL 8). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:193,Modifiability,variab,variables,193,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. `thisroot.sh` has a `clean_environment` function that tries to remove previously added ROOT entries from various path variables:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L32-L47. However, for the lib paths the entry removed is the `lib` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```; cmake3 /opt/src/root \; -DCMAKE_INSTALL_PREFIX=/opt/root \; -DPYTHON_EXECUTABLE=${python_executable} \; -DPYTHON_INCLUDE_DIR=${python_include_dir} \; -DPYTHON_LIBRARY=${python_include_dir} \; -Dpython3:BOOL=ON \; -Dsoversion:BOOL=ON \; -Dtmva:BOOL=OFF \; -Dgnuinstall:BOOL=ON \; -Wno-de; cmake3 --build . --clean-first --target install; ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 19 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:288,Modifiability,config,config,288,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. `thisroot.sh` has a `clean_environment` function that tries to remove previously added ROOT entries from various path variables:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L32-L47. However, for the lib paths the entry removed is the `lib` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```; cmake3 /opt/src/root \; -DCMAKE_INSTALL_PREFIX=/opt/root \; -DPYTHON_EXECUTABLE=${python_executable} \; -DPYTHON_INCLUDE_DIR=${python_include_dir} \; -DPYTHON_LIBRARY=${python_include_dir} \; -Dpython3:BOOL=ON \; -Dsoversion:BOOL=ON \; -Dtmva:BOOL=OFF \; -Dgnuinstall:BOOL=ON \; -Wno-de; cmake3 --build . --clean-first --target install; ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 19 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:472,Modifiability,config,config,472,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. `thisroot.sh` has a `clean_environment` function that tries to remove previously added ROOT entries from various path variables:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L32-L47. However, for the lib paths the entry removed is the `lib` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```; cmake3 /opt/src/root \; -DCMAKE_INSTALL_PREFIX=/opt/root \; -DPYTHON_EXECUTABLE=${python_executable} \; -DPYTHON_INCLUDE_DIR=${python_include_dir} \; -DPYTHON_LIBRARY=${python_include_dir} \; -Dpython3:BOOL=ON \; -Dsoversion:BOOL=ON \; -Dtmva:BOOL=OFF \; -Dgnuinstall:BOOL=ON \; -Wno-de; cmake3 --build . --clean-first --target install; ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 19 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:545,Modifiability,variab,variable,545,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. `thisroot.sh` has a `clean_environment` function that tries to remove previously added ROOT entries from various path variables:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L32-L47. However, for the lib paths the entry removed is the `lib` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```; cmake3 /opt/src/root \; -DCMAKE_INSTALL_PREFIX=/opt/root \; -DPYTHON_EXECUTABLE=${python_executable} \; -DPYTHON_INCLUDE_DIR=${python_include_dir} \; -DPYTHON_LIBRARY=${python_include_dir} \; -Dpython3:BOOL=ON \; -Dsoversion:BOOL=ON \; -Dtmva:BOOL=OFF \; -Dgnuinstall:BOOL=ON \; -Wno-de; cmake3 --build . --clean-first --target install; ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 19 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:639,Modifiability,config,config,639,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. `thisroot.sh` has a `clean_environment` function that tries to remove previously added ROOT entries from various path variables:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L32-L47. However, for the lib paths the entry removed is the `lib` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```; cmake3 /opt/src/root \; -DCMAKE_INSTALL_PREFIX=/opt/root \; -DPYTHON_EXECUTABLE=${python_executable} \; -DPYTHON_INCLUDE_DIR=${python_include_dir} \; -DPYTHON_LIBRARY=${python_include_dir} \; -Dpython3:BOOL=ON \; -Dsoversion:BOOL=ON \; -Dtmva:BOOL=OFF \; -Dgnuinstall:BOOL=ON \; -Wno-de; cmake3 --build . --clean-first --target install; ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 19 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:901,Modifiability,variab,variables,901,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. `thisroot.sh` has a `clean_environment` function that tries to remove previously added ROOT entries from various path variables:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L32-L47. However, for the lib paths the entry removed is the `lib` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```; cmake3 /opt/src/root \; -DCMAKE_INSTALL_PREFIX=/opt/root \; -DPYTHON_EXECUTABLE=${python_executable} \; -DPYTHON_INCLUDE_DIR=${python_include_dir} \; -DPYTHON_LIBRARY=${python_include_dir} \; -Dpython3:BOOL=ON \; -Dsoversion:BOOL=ON \; -Dtmva:BOOL=OFF \; -Dgnuinstall:BOOL=ON \; -Wno-de; cmake3 --build . --clean-first --target install; ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 19 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/pull/16027:152,Deployability,update,updated,152,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16024. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16027
https://github.com/root-project/root/pull/16027:122,Testability,test,tested,122,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16024. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16027
https://github.com/root-project/root/issues/16028:1770,Deployability,Install,Installation,1770,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```; using namespace RooFit;. void mytest() {. const int nBin=100;; double xbins[nBin+1];; const float left_Val = 150;; const float rightVal = 1150; ; const float logxmin = TMath::Log10(left_Val);; const float logxmax = TMath::Log10(rightVal);; const double dxLog = (logxmax-logxmin)/nBin;; for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);; f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);; h1->FillRandom(""f1"",10000000);; RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);; RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));; TCanvas *cExpo1 = new TCanvas();; gPad->SetLogx();; gPad->SetLogy();; auto plot_test1 = mInv.frame();; hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));; plot_test1->Draw();; h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);; h2->FillRandom(""f1"",10000000);; RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));; TCanvas *cExpo2 = new TCanvas();; gPad->SetLogx();; gPad->SetLogy();; auto plot_test2 = mInv.frame();; hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));; plot_test2->Draw();; h2->Draw(""same"");. }; ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:844,Energy Efficiency,Power,Power,844,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```; using namespace RooFit;. void mytest() {. const int nBin=100;; double xbins[nBin+1];; const float left_Val = 150;; const float rightVal = 1150; ; const float logxmin = TMath::Log10(left_Val);; const float logxmax = TMath::Log10(rightVal);; const double dxLog = (logxmax-logxmin)/nBin;; for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);; f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);; h1->FillRandom(""f1"",10000000);; RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);; RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));; TCanvas *cExpo1 = new TCanvas();; gPad->SetLogx();; gPad->SetLogy();; auto plot_test1 = mInv.frame();; hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));; plot_test1->Draw();; h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);; h2->FillRandom(""f1"",10000000);; RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));; TCanvas *cExpo2 = new TCanvas();; gPad->SetLogx();; gPad->SetLogy();; auto plot_test2 = mInv.frame();; hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));; plot_test2->Draw();; h2->Draw(""same"");. }; ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:286,Modifiability,variab,variable,286,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```; using namespace RooFit;. void mytest() {. const int nBin=100;; double xbins[nBin+1];; const float left_Val = 150;; const float rightVal = 1150; ; const float logxmin = TMath::Log10(left_Val);; const float logxmax = TMath::Log10(rightVal);; const double dxLog = (logxmax-logxmin)/nBin;; for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);; f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);; h1->FillRandom(""f1"",10000000);; RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);; RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));; TCanvas *cExpo1 = new TCanvas();; gPad->SetLogx();; gPad->SetLogy();; auto plot_test1 = mInv.frame();; hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));; plot_test1->Draw();; h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);; h2->FillRandom(""f1"",10000000);; RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));; TCanvas *cExpo2 = new TCanvas();; gPad->SetLogx();; gPad->SetLogy();; auto plot_test2 = mInv.frame();; hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));; plot_test2->Draw();; h2->Draw(""same"");. }; ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:672,Testability,log,logxmin,672,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```; using namespace RooFit;. void mytest() {. const int nBin=100;; double xbins[nBin+1];; const float left_Val = 150;; const float rightVal = 1150; ; const float logxmin = TMath::Log10(left_Val);; const float logxmax = TMath::Log10(rightVal);; const double dxLog = (logxmax-logxmin)/nBin;; for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);; f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);; h1->FillRandom(""f1"",10000000);; RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);; RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));; TCanvas *cExpo1 = new TCanvas();; gPad->SetLogx();; gPad->SetLogy();; auto plot_test1 = mInv.frame();; hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));; plot_test1->Draw();; h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);; h2->FillRandom(""f1"",10000000);; RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));; TCanvas *cExpo2 = new TCanvas();; gPad->SetLogx();; gPad->SetLogy();; auto plot_test2 = mInv.frame();; hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));; plot_test2->Draw();; h2->Draw(""same"");. }; ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:719,Testability,log,logxmax,719,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```; using namespace RooFit;. void mytest() {. const int nBin=100;; double xbins[nBin+1];; const float left_Val = 150;; const float rightVal = 1150; ; const float logxmin = TMath::Log10(left_Val);; const float logxmax = TMath::Log10(rightVal);; const double dxLog = (logxmax-logxmin)/nBin;; for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);; f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);; h1->FillRandom(""f1"",10000000);; RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);; RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));; TCanvas *cExpo1 = new TCanvas();; gPad->SetLogx();; gPad->SetLogy();; auto plot_test1 = mInv.frame();; hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));; plot_test1->Draw();; h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);; h2->FillRandom(""f1"",10000000);; RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));; TCanvas *cExpo2 = new TCanvas();; gPad->SetLogx();; gPad->SetLogy();; auto plot_test2 = mInv.frame();; hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));; plot_test2->Draw();; h2->Draw(""same"");. }; ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:776,Testability,log,logxmax-logxmin,776,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```; using namespace RooFit;. void mytest() {. const int nBin=100;; double xbins[nBin+1];; const float left_Val = 150;; const float rightVal = 1150; ; const float logxmin = TMath::Log10(left_Val);; const float logxmax = TMath::Log10(rightVal);; const double dxLog = (logxmax-logxmin)/nBin;; for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);; f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);; h1->FillRandom(""f1"",10000000);; RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);; RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));; TCanvas *cExpo1 = new TCanvas();; gPad->SetLogx();; gPad->SetLogy();; auto plot_test1 = mInv.frame();; hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));; plot_test1->Draw();; h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);; h2->FillRandom(""f1"",10000000);; RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));; TCanvas *cExpo2 = new TCanvas();; gPad->SetLogx();; gPad->SetLogy();; auto plot_test2 = mInv.frame();; hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));; plot_test2->Draw();; h2->Draw(""same"");. }; ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:855,Testability,log,logxmin,855,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```; using namespace RooFit;. void mytest() {. const int nBin=100;; double xbins[nBin+1];; const float left_Val = 150;; const float rightVal = 1150; ; const float logxmin = TMath::Log10(left_Val);; const float logxmax = TMath::Log10(rightVal);; const double dxLog = (logxmax-logxmin)/nBin;; for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);; f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);; h1->FillRandom(""f1"",10000000);; RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);; RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));; TCanvas *cExpo1 = new TCanvas();; gPad->SetLogx();; gPad->SetLogy();; auto plot_test1 = mInv.frame();; hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));; plot_test1->Draw();; h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);; h2->FillRandom(""f1"",10000000);; RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));; TCanvas *cExpo2 = new TCanvas();; gPad->SetLogx();; gPad->SetLogy();; auto plot_test2 = mInv.frame();; hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));; plot_test2->Draw();; h2->Draw(""same"");. }; ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/pull/16029:294,Deployability,update,updated,294,# This Pull request:; Incorporates a total translation of graphics-tutorials into Python language for the; `IPython[]:` interpreter.; ## Changes or fixes:; It doesn't change or fix anything but adds new ways to re-read graphics-tutorials. ## Checklist:. - [yes] tested changes locally; - [yes] updated the docs (if necessary); - [yes] branch up to date with 'origin/master',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16029
https://github.com/root-project/root/pull/16029:262,Testability,test,tested,262,# This Pull request:; Incorporates a total translation of graphics-tutorials into Python language for the; `IPython[]:` interpreter.; ## Changes or fixes:; It doesn't change or fix anything but adds new ways to re-read graphics-tutorials. ## Checklist:. - [yes] tested changes locally; - [yes] updated the docs (if necessary); - [yes] branch up to date with 'origin/master',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16029
https://github.com/root-project/root/pull/16030:22,Deployability,configurat,configuration,22,Let's see if this new configuration of the test still shows issues on some CI runs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16030
https://github.com/root-project/root/pull/16030:22,Modifiability,config,configuration,22,Let's see if this new configuration of the test still shows issues on some CI runs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16030
https://github.com/root-project/root/pull/16030:43,Testability,test,test,43,Let's see if this new configuration of the test still shows issues on some CI runs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16030
https://github.com/root-project/root/issues/16031:928,Deployability,Install,Installation,928,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Binary functions in VecOps are not always using the right types, as reported [here](https://root-forum.cern.ch/t/std-pow-x-vecops-rvec/60211). ### Reproducer. ```; auto v = ROOT::RVec<double>{3.4};. cout << ROOT::VecOps::pow(v, 2) << endl; // output: { 9 }; cout << ROOT::VecOps::pow(v, 2.0) << endl; // output: { 11.56 }. cout << std::pow(3.4, 2) << endl; // output: 11.56 ; cout << std::pow(3.4, 2.0) << endl; //output: 11.56 ; ```. See RVec.hxx. ```; template <typename T0, typename T1> \; RVec<PromoteTypes<T0, T1>> NAME(const RVec<T0> &v, const T1 &y) \; { \; RVec<PromoteTypes<T0, T1>> ret(v.size()); \; auto f = [&y](const T1 &x) { return FUNC(x, y); }; \; std::transform(v.begin(), v.end(), ret.begin(), f); \; return ret; \; } ; ```; There it should be; ```; auto f = [&y](const T0 &x) { return FUNC(x, y); };; ```. ### ROOT version. 6.32. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16031
https://github.com/root-project/root/pull/16032:5,Testability,test,test,5,Also test 6.32 CI,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16032
https://github.com/root-project/root/issues/16034:1660,Availability,fault,fault,1660,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp; using ROOT::Experimental::RNTupleModel;; using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";; const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";; const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {; auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));; auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;; tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};; tree->Fill();; tree->Write();; }. void write_ntuple() {; auto model = RNTupleModel::Create();; auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =; RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};; ntuple->Fill();; }. void read(std::string_view name, std::string_view path) {; ROOT::RDataFrame df(name, path);; auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}); .Display();; dfRes->Print();; }. void rdf_stdvector() {; write_tree();; read(kTreeName, kTreeFileName);. write_ntuple();; read(kNTupleName, kNTupleFileName);; }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:1843,Deployability,Install,Installation,1843,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp; using ROOT::Experimental::RNTupleModel;; using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";; const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";; const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {; auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));; auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;; tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};; tree->Fill();; tree->Write();; }. void write_ntuple() {; auto model = RNTupleModel::Create();; auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =; RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};; ntuple->Fill();; }. void read(std::string_view name, std::string_view path) {; ROOT::RDataFrame df(name, path);; auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}); .Display();; dfRes->Print();; }. void rdf_stdvector() {; write_tree();; read(kTreeName, kTreeFileName);. write_ntuple();; read(kNTupleName, kNTupleFileName);; }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/pull/16037:201,Deployability,update,updated,201,"RPageSource and all its children are using exclusively the static version of RNTupleDecompressor::Unzip, so there's no need to keep it there for now. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16037
https://github.com/root-project/root/pull/16037:171,Testability,test,tested,171,"RPageSource and all its children are using exclusively the static version of RNTupleDecompressor::Unzip, so there's no need to keep it there for now. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16037
https://github.com/root-project/root/issues/16038:254,Availability,Error,Error,254,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```; 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); 9.604 Call Stack (most recent call first):; 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency); 9.604 CMakeLists.txt:363 (find_package); ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads; ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\; apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\; apt-get install -y dialog apt-utils&&\; apt-get install -y tzdata &&\; apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:915,Availability,error,error,915,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```; 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); 9.604 Call Stack (most recent call first):; 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency); 9.604 CMakeLists.txt:363 (find_package); ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads; ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\; apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\; apt-get install -y dialog apt-utils&&\; apt-get install -y tzdata &&\; apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:2678,Availability,echo,echo,2678,"v libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\; rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8; ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\; git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\; mkdir -p /container/app/acts/build/v35.2.0 &&\; cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install; RUN echo ""done"". ```. ### ROOT version. ```; #7 [4/6] RUN root -b -q; #7 0.544 ------------------------------------------------------------------; #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |; #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |; #7 0.544 | From tags/v6-32-02@v6-32-02 |; #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |; #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; #7 0.544 ------------------------------------------------------------------; ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Linux. ### Additional context. Update: everything works on rootproject/root:6.28.00-ubuntu22.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:932,Deployability,configurat,configuration,932,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```; 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); 9.604 Call Stack (most recent call first):; 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency); 9.604 CMakeLists.txt:363 (find_package); ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads; ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\; apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\; apt-get install -y dialog apt-utils&&\; apt-get install -y tzdata &&\; apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1192,Deployability,update,update,1192,"gs); 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency); 9.604 CMakeLists.txt:363 (find_package); ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads; ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\; apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\; apt-get install -y dialog apt-utils&&\; apt-get install -y tzdata &&\; apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\; rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8; ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\; git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\; mkdir -p /container/app/acts/build/v35.2.0 &&\; cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1212,Deployability,install,install,1212,"gs); 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency); 9.604 CMakeLists.txt:363 (find_package); ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads; ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\; apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\; apt-get install -y dialog apt-utils&&\; apt-get install -y tzdata &&\; apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\; rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8; ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\; git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\; mkdir -p /container/app/acts/build/v35.2.0 &&\; cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1328,Deployability,install,install,1328,"gs); 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency); 9.604 CMakeLists.txt:363 (find_package); ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads; ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\; apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\; apt-get install -y dialog apt-utils&&\; apt-get install -y tzdata &&\; apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\; rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8; ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\; git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\; mkdir -p /container/app/acts/build/v35.2.0 &&\; cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1368,Deployability,install,install,1368,"gs); 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency); 9.604 CMakeLists.txt:363 (find_package); ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads; ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\; apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\; apt-get install -y dialog apt-utils&&\; apt-get install -y tzdata &&\; apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\; rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8; ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\; git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\; mkdir -p /container/app/acts/build/v35.2.0 &&\; cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1399,Deployability,install,install,1399,"gs); 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency); 9.604 CMakeLists.txt:363 (find_package); ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads; ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\; apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\; apt-get install -y dialog apt-utils&&\; apt-get install -y tzdata &&\; apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\; rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8; ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\; git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\; mkdir -p /container/app/acts/build/v35.2.0 &&\; cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:2665,Deployability,install,install,2665,"v libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\; rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8; ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\; git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\; mkdir -p /container/app/acts/build/v35.2.0 &&\; cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install; RUN echo ""done"". ```. ### ROOT version. ```; #7 [4/6] RUN root -b -q; #7 0.544 ------------------------------------------------------------------; #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |; #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |; #7 0.544 | From tags/v6-32-02@v6-32-02 |; #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |; #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; #7 0.544 ------------------------------------------------------------------; ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Linux. ### Additional context. Update: everything works on rootproject/root:6.28.00-ubuntu22.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:3281,Deployability,Install,Installation,3281,"v libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\; rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8; ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\; git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\; mkdir -p /container/app/acts/build/v35.2.0 &&\; cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install; RUN echo ""done"". ```. ### ROOT version. ```; #7 [4/6] RUN root -b -q; #7 0.544 ------------------------------------------------------------------; #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |; #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |; #7 0.544 | From tags/v6-32-02@v6-32-02 |; #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |; #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; #7 0.544 ------------------------------------------------------------------; ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Linux. ### Additional context. Update: everything works on rootproject/root:6.28.00-ubuntu22.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:3406,Deployability,Update,Update,3406,"v libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\; rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8; ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\; git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\; mkdir -p /container/app/acts/build/v35.2.0 &&\; cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install; RUN echo ""done"". ```. ### ROOT version. ```; #7 [4/6] RUN root -b -q; #7 0.544 ------------------------------------------------------------------; #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |; #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |; #7 0.544 | From tags/v6-32-02@v6-32-02 |; #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |; #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; #7 0.544 ------------------------------------------------------------------; ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Linux. ### Additional context. Update: everything works on rootproject/root:6.28.00-ubuntu22.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:334,Integrability,message,message,334,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```; 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); 9.604 Call Stack (most recent call first):; 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency); 9.604 CMakeLists.txt:363 (find_package); ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads; ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\; apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\; apt-get install -y dialog apt-utils&&\; apt-get install -y tzdata &&\; apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:932,Modifiability,config,configuration,932,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```; 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); 9.604 Call Stack (most recent call first):; 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency); 9.604 CMakeLists.txt:363 (find_package); ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads; ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\; apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\; apt-get install -y dialog apt-utils&&\; apt-get install -y tzdata &&\; apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1163,Modifiability,config,config,1163,"and build any cmake application which references root, it fails with . ```; 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); 9.604 Call Stack (most recent call first):; 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency); 9.604 CMakeLists.txt:363 (find_package); ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads; ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\; apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\; apt-get install -y dialog apt-utils&&\; apt-get install -y tzdata &&\; apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\; rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8; ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1828,Testability,test,test-dev,1828,"gs); 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency); 9.604 CMakeLists.txt:363 (find_package); ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads; ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\; apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\; apt-get install -y dialog apt-utils&&\; apt-get install -y tzdata &&\; apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\; rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8; ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\; git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\; mkdir -p /container/app/acts/build/v35.2.0 &&\; cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/pull/16042:1722,Deployability,Update,Update,1722,"Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. ; This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`.; But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:; ```; <script type=""importmap"">; {; ""imports"": {; ""jsroot"": ""./jsrootsys/modules/main.mjs"",; ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",; ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",; ""jsrootsys/"" :: ""./jsrootsys/""; }; }; ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. ; But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. ; Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes.; Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1505,Modifiability,config,configure,1505,"Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. ; This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`.; But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:; ```; <script type=""importmap"">; {; ""imports"": {; ""jsroot"": ""./jsrootsys/modules/main.mjs"",; ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",; ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",; ""jsrootsys/"" :: ""./jsrootsys/""; }; }; ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. ; But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. ; Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes.; Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:31,Performance,load,loaded,31,"Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. ; This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`.; But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:; ```; <script type=""importmap"">; {; ""imports"": {; ""jsroot"": ""./jsrootsys/modules/main.mjs"",; ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",; ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",; ""jsrootsys/"" :: ""./jsrootsys/""; }; }; ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. ; But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. ; Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes.; Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1764,Performance,load,loading,1764,"Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. ; This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`.; But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:; ```; <script type=""importmap"">; {; ""imports"": {; ""jsroot"": ""./jsrootsys/modules/main.mjs"",; ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",; ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",; ""jsrootsys/"" :: ""./jsrootsys/""; }; }; ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. ; But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. ; Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes.; Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16043:191,Availability,error,error,191,Found by the conda nightly . ```; 2024-07-17T04:49:33.5552609Z /home/conda/feedstock_root/build_artifacts/root_base_1721190805440/work/root-source/math/mathcore/test/testGradient.cxx:467:36: error: 'setprecision' is not a member of 'std'; 2024-07-17T04:49:33.5632853Z 467 | std::cout << std::fixed << std::setprecision(4);; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16043
https://github.com/root-project/root/pull/16043:161,Testability,test,test,161,Found by the conda nightly . ```; 2024-07-17T04:49:33.5552609Z /home/conda/feedstock_root/build_artifacts/root_base_1721190805440/work/root-source/math/mathcore/test/testGradient.cxx:467:36: error: 'setprecision' is not a member of 'std'; 2024-07-17T04:49:33.5632853Z 467 | std::cout << std::fixed << std::setprecision(4);; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16043
https://github.com/root-project/root/pull/16043:166,Testability,test,testGradient,166,Found by the conda nightly . ```; 2024-07-17T04:49:33.5552609Z /home/conda/feedstock_root/build_artifacts/root_base_1721190805440/work/root-source/math/mathcore/test/testGradient.cxx:467:36: error: 'setprecision' is not a member of 'std'; 2024-07-17T04:49:33.5632853Z 467 | std::cout << std::fixed << std::setprecision(4);; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16043
https://github.com/root-project/root/pull/16045:429,Deployability,update,updated,429,"# This Pull request:; To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:; The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master); - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:225,Testability,test,tested,225,"# This Pull request:; To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:; The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master); - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:264,Testability,test,test,264,"# This Pull request:; To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:; The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master); - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16046:474,Deployability,Install,Install,474,"# This Pull request:; Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners.; Uses our existing Makefile setup. Initial PR #15337. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:681,Deployability,release,releases,681,"# This Pull request:; Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners.; Uses our existing Makefile setup. Initial PR #15337. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:942,Integrability,depend,dependencies,942,"# This Pull request:; Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners.; Uses our existing Makefile setup. Initial PR #15337. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:697,Performance,OPTIMIZ,OPTIMIZATION,697,"# This Pull request:; Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners.; Uses our existing Makefile setup. Initial PR #15337. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:62,Testability,test,testing,62,"# This Pull request:; Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners.; Uses our existing Makefile setup. Initial PR #15337. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:290,Testability,test,tests,290,"# This Pull request:; Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners.; Uses our existing Makefile setup. Initial PR #15337. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:406,Testability,Test,Test,406,"# This Pull request:; Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners.; Uses our existing Makefile setup. Initial PR #15337. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/issues/16047:376,Deployability,Install,Installation,376,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a shadow variable declaration as highlighted by the linter in PRs, see for example https://github.com/root-project/root/pull/16042/files. ![image](https://github.com/user-attachments/assets/8b4df9b7-42a3-4676-a862-725299f61ad7). ### Reproducer. See description. ### ROOT version. Master. ### Installation method. build from source. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16047
https://github.com/root-project/root/issues/16047:93,Modifiability,variab,variable,93,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a shadow variable declaration as highlighted by the linter in PRs, see for example https://github.com/root-project/root/pull/16042/files. ![image](https://github.com/user-attachments/assets/8b4df9b7-42a3-4676-a862-725299f61ad7). ### Reproducer. See description. ### ROOT version. Master. ### Installation method. build from source. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16047
https://github.com/root-project/root/pull/16050:116,Deployability,update,updated,116,- RNTupleInspector::Create; - RNTupleReader::Open (2 overloads). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16050
https://github.com/root-project/root/pull/16050:86,Testability,test,tested,86,- RNTupleInspector::Create; - RNTupleReader::Open (2 overloads). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16050
https://github.com/root-project/root/issues/16051:539,Availability,Down,Download,539,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022; 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`; 3. `python3 ./TColorBug.py`; 4. Output; 	```; 	Creating test file in a separate process; 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor; 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created; 	Reading test file; 	ROOT.TColor.GetFreeColorIndex() = 1179; 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor; 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used; 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:683,Deployability,release,releases,683,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022; 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`; 3. `python3 ./TColorBug.py`; 4. Output; 	```; 	Creating test file in a separate process; 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor; 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created; 	Reading test file; 	ROOT.TColor.GetFreeColorIndex() = 1179; 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor; 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used; 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:1264,Deployability,Install,Installation,1264,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022; 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`; 3. `python3 ./TColorBug.py`; 4. Output; 	```; 	Creating test file in a separate process; 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor; 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created; 	Reading test file; 	ROOT.TColor.GetFreeColorIndex() = 1179; 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor; 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used; 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:868,Energy Efficiency,Green,Green,868,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022; 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`; 3. `python3 ./TColorBug.py`; 4. Output; 	```; 	Creating test file in a separate process; 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor; 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created; 	Reading test file; 	ROOT.TColor.GetFreeColorIndex() = 1179; 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor; 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used; 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:1083,Energy Efficiency,Green,Green,1083,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022; 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`; 3. `python3 ./TColorBug.py`; 4. Output; 	```; 	Creating test file in a separate process; 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor; 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created; 	Reading test file; 	ROOT.TColor.GetFreeColorIndex() = 1179; 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor; 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used; 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:299,Performance,load,load,299,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022; 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`; 3. `python3 ./TColorBug.py`; 4. Output; 	```; 	Creating test file in a separate process; 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor; 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created; 	Reading test file; 	ROOT.TColor.GetFreeColorIndex() = 1179; 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor; 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used; 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:810,Testability,test,test,810,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022; 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`; 3. `python3 ./TColorBug.py`; 4. Output; 	```; 	Creating test file in a separate process; 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor; 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created; 	Reading test file; 	ROOT.TColor.GetFreeColorIndex() = 1179; 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor; 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used; 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:1006,Testability,test,test,1006,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022; 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`; 3. `python3 ./TColorBug.py`; 4. Output; 	```; 	Creating test file in a separate process; 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor; 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created; 	Reading test file; 	ROOT.TColor.GetFreeColorIndex() = 1179; 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor; 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used; 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/pull/16054:93,Modifiability,Extend,Extends,93,"Provides the foundations for multiple, alternative column representations of a single field. Extends the binary format to store multiple sets of columns per field and handles (de-)serialization and the descriptor representation (backwards compatible). A follow-up PR will use this capability from the RField/RColumn classes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16054
https://github.com/root-project/root/pull/16060:57,Security,checksum,checksum,57,"For custom classes with dictionaries, store the streamer checksum in the field metadata. The checksum is used to apply read rules that use checksums to identify the source class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16060
https://github.com/root-project/root/pull/16060:93,Security,checksum,checksum,93,"For custom classes with dictionaries, store the streamer checksum in the field metadata. The checksum is used to apply read rules that use checksums to identify the source class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16060
https://github.com/root-project/root/pull/16060:139,Security,checksum,checksums,139,"For custom classes with dictionaries, store the streamer checksum in the field metadata. The checksum is used to apply read rules that use checksums to identify the source class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16060
https://github.com/root-project/root/issues/16062:3089,Deployability,Install,Installation,3089,"RED ${SOURCES} G__mwe.cxx); target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); target_link_libraries(mwe ${ROOT_LIBRARIES}); ```. myscript.py:. ```; import cppyy; import ROOT; cppyy.load_library('libmwe.so'); createHistMap = cppyy.gbl.createHistMap; hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:; hist.ProjectionY() # This should fail if the type is not correctly handled; print(""something is wrong""); except AttributeError as e:; print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed; print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""); ```. mwe.cpp:. ```; #include <mwe.h>; #include <TH1.h>; #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {; std::map<std::string, TH1*> histMap;; TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);; TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100, 0, 100, 100, 0, 100);; histMap[""hist1""] = hist1;; histMap[""hist2""] = hist2;; return histMap;; }; ```. mwe.h:. ```; #include <string>; #include <TH1.h>; #include <map>. std::map<std::string, TH1*> createHistMap();; ```. LinkDef.h:. ```; #ifdef __CINT__; #pragma link C++ class std::map<std::string, TH1*>+;; #pragma link C++ function createHistMap;; #endif; ```. Steps to Reproduce: `mkdir build && cd build && cmake .. && make && python ../myscript.py`. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.02 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 22 2024, 18:26:29 |; | From heads/master@tags/v6-32-02 |; | With c++ (GCC) 14.1.1 20240522 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. ArchLinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:643,Modifiability,polymorphi,polymorphic,643,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Using the latest ROOT master on Arch Linux, I encountered an issue when trying to return a `std::map<std::string, TH1*>` from C++ to Python using cppyy and ROOT. The function populates the map with a mix of TH1* and TH2*. ; When converting the map into a python `dict` and retrieving one of the `TH2*` instances, trying to call a method specific to TH2, such as ProjectionY, causes an AttributeError, indicating that the method does not exist. However, cloning the histogram and then calling ProjectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```; cmake_minimum_required(VERSION 3.10); project(ROOTHistMapExample); find_package(ROOT REQUIRED); include(${ROOT_USE_FILE}); set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp); set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h); ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h); add_library(mwe SHARED ${SOURCES} G__mwe.cxx); target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); target_link_libraries(mwe ${ROOT_LIBRARIES}); ```. myscript.py:. ```; import cppyy; import ROOT; cppyy.load_library('libmwe.so'); createHistMap = cppyy.gbl.createHistMap; hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:; hist.ProjectionY() # This should fail if the type is not correctly handled; print(""something is wrong""); except AttributeError as e:; print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed; print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""); ```. mwe.cpp:. ```; #include <mwe.h>; #include <TH1.h>; #include <TH2.h>. std::map<std::string, TH1*> createHistMap() ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/pull/16063:733,Availability,down,downside,733,"While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead.; Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored.; This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:89,Energy Efficiency,allocate,allocated,89,"While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead.; Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored.; This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:187,Performance,Load,LoadTree,187,"While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead.; Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored.; This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:382,Performance,cache,cache,382,"While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead.; Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored.; This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:461,Performance,Load,LoadTreeWithOptions,461,"While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead.; Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored.; This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:548,Performance,cache,cache,548,"While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead.; Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored.; This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:567,Performance,cache,cache,567,"While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead.; Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored.; This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:591,Performance,perform,performing,591,"While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead.; Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored.; This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:606,Performance,Load,LoadTree,606,"While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead.; Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored.; This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:629,Performance,cache,cache,629,"While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead.; Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored.; This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/issues/16064:150,Deployability,upgrade,upgrade,150,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python; import cppyy; import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works!; cppyy.gbl.std.function[""void(int, int)""]() # works!; cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work!; ```. Gives you this output:; ```txt; Traceback (most recent call last):; File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>; cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work!; ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__; pyclass = _backend.MakeCppTemplateClass(*newargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class; ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:888,Deployability,install,install,888,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python; import cppyy; import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works!; cppyy.gbl.std.function[""void(int, int)""]() # works!; cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work!; ```. Gives you this output:; ```txt; Traceback (most recent call last):; File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>; cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work!; ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__; pyclass = _backend.MakeCppTemplateClass(*newargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class; ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:1168,Deployability,Install,Installation,1168,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python; import cppyy; import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works!; cppyy.gbl.std.function[""void(int, int)""]() # works!; cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work!; ```. Gives you this output:; ```txt; Traceback (most recent call last):; File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>; cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work!; ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__; pyclass = _backend.MakeCppTemplateClass(*newargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class; ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:688,Usability,simpl,simple,688,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python; import cppyy; import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works!; cppyy.gbl.std.function[""void(int, int)""]() # works!; cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work!; ```. Gives you this output:; ```txt; Traceback (most recent call last):; File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>; cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work!; ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__; pyclass = _backend.MakeCppTemplateClass(*newargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class; ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/pull/16067:52,Testability,test,test,52,"The memory leaks were introduced on purpose in that test, but they are probably not necessary anymore. Also, suppress unneeded logging and format code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16067
https://github.com/root-project/root/pull/16067:127,Testability,log,logging,127,"The memory leaks were introduced on purpose in that test, but they are probably not necessary anymore. Also, suppress unneeded logging and format code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16067
https://github.com/root-project/root/issues/16070:177,Availability,error,errors,177,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). ; * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. ; It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. ; ; ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function ; . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot ; * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. ; * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. ; ; ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42); ; * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below; ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) ; ![image](https://github.com/user-attachments/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:357,Availability,error,error,357,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). ; * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. ; It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. ; ; ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function ; . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot ; * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. ; * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. ; ; ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42); ; * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below; ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) ; ![image](https://github.com/user-attachments/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:462,Availability,error,errors,462,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). ; * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. ; It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. ; ; ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function ; . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot ; * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. ; * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. ; ; ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42); ; * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below; ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) ; ![image](https://github.com/user-attachments/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:554,Availability,error,error,554,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). ; * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. ; It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. ; ; ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function ; . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot ; * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. ; * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. ; ; ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42); ; * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below; ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) ; ![image](https://github.com/user-attachments/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:642,Availability,error,error,642,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). ; * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. ; It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. ; ; ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function ; . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot ; * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. ; * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. ; ; ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42); ; * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below; ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) ; ![image](https://github.com/user-attachments/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:735,Availability,error,error,735,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). ; * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. ; It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. ; ; ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function ; . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot ; * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. ; * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. ; ; ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42); ; * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below; ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) ; ![image](https://github.com/user-attachments/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:1289,Availability,error,error,1289,"tErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). ; * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. ; It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. ; ; ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function ; . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot ; * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. ; * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. ; ; ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42); ; * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below; ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) ; ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**; ; Many thanks in advance for the fix that would be super helpful, ; In the meantime I have found some very hacky workaround (not very useful here I ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2464,Availability,error,errors,2464,"eed not be displayed since `ymin= 0.1`. ; ; ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42); ; * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below; ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) ; ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**; ; Many thanks in advance for the fix that would be super helpful, ; In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),; Best, ; Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndErrorSize(10). nPoints = 10; # Set ymin and ymax on purpose so that some error bars should be go beyon this range ; ymax = 4; ymin = 0. # Data x, y; data_x = array('d', list(range(nPoints))); data_y = array('d', [2.]*nPoints). # x and y up/down errors ; # Increasing y-error for each points; unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom ; data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2664,Availability,error,error,2664,".SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below; ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) ; ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**; ; Many thanks in advance for the fix that would be super helpful, ; In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),; Best, ; Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndErrorSize(10). nPoints = 10; # Set ymin and ymax on purpose so that some error bars should be go beyon this range ; ymax = 4; ymin = 0. # Data x, y; data_x = array('d', list(range(nPoints))); data_y = array('d', [2.]*nPoints). # x and y up/down errors ; # Increasing y-error for each points; unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom ; data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(1.5); gr.SetLin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2831,Availability,down,down,2831,"; ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) ; ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**; ; Many thanks in advance for the fix that would be super helpful, ; In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),; Best, ; Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndErrorSize(10). nPoints = 10; # Set ymin and ymax on purpose so that some error bars should be go beyon this range ; ymax = 4; ymin = 0. # Data x, y; data_x = array('d', list(range(nPoints))); data_y = array('d', [2.]*nPoints). # x and y up/down errors ; # Increasing y-error for each points; unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom ; data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(1.5); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""); ```. **testErrorGraph_v2**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndError",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2836,Availability,error,errors,2836,"; ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) ; ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**; ; Many thanks in advance for the fix that would be super helpful, ; In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),; Best, ; Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndErrorSize(10). nPoints = 10; # Set ymin and ymax on purpose so that some error bars should be go beyon this range ; ymax = 4; ymin = 0. # Data x, y; data_x = array('d', list(range(nPoints))); data_y = array('d', [2.]*nPoints). # x and y up/down errors ; # Increasing y-error for each points; unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom ; data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(1.5); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""); ```. **testErrorGraph_v2**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndError",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2860,Availability,error,error,2860,"; ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) ; ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**; ; Many thanks in advance for the fix that would be super helpful, ; In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),; Best, ; Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndErrorSize(10). nPoints = 10; # Set ymin and ymax on purpose so that some error bars should be go beyon this range ; ymax = 4; ymin = 0. # Data x, y; data_x = array('d', list(range(nPoints))); data_y = array('d', [2.]*nPoints). # x and y up/down errors ; # Increasing y-error for each points; unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom ; data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(1.5); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""); ```. **testErrorGraph_v2**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndError",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:3931,Availability,error,error,3931,"rray('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom ; data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(1.5); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""); ```. **testErrorGraph_v2**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndErrorSize(10). nPoints = 10; # Set ymin and ymax on purpose so that some error bars should be go beyon this range ; ymax = 4; # Set ymin > 0 since here we use log scale ; ymin = 0.1. # Data x, y; data_x = array('d', list(range(nPoints))); data_y = array('d', [2.]*nPoints). # x and y up/down errors ; # Increasing y-error for each points; unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point negative ; data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 ; # observe the difference for the last point ; pad.SetBottomMargin(0.); #pad.SetBottomMargin(0.1); pad.SetLogy(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4145,Availability,down,down,4145,"""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(1.5); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""); ```. **testErrorGraph_v2**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndErrorSize(10). nPoints = 10; # Set ymin and ymax on purpose so that some error bars should be go beyon this range ; ymax = 4; # Set ymin > 0 since here we use log scale ; ymin = 0.1. # Data x, y; data_x = array('d', list(range(nPoints))); data_y = array('d', [2.]*nPoints). # x and y up/down errors ; # Increasing y-error for each points; unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point negative ; data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 ; # observe the difference for the last point ; pad.SetBottomMargin(0.); #pad.SetBottomMargin(0.1); pad.SetLogy(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(3); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4150,Availability,error,errors,4150,"""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(1.5); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""); ```. **testErrorGraph_v2**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndErrorSize(10). nPoints = 10; # Set ymin and ymax on purpose so that some error bars should be go beyon this range ; ymax = 4; # Set ymin > 0 since here we use log scale ; ymin = 0.1. # Data x, y; data_x = array('d', list(range(nPoints))); data_y = array('d', [2.]*nPoints). # x and y up/down errors ; # Increasing y-error for each points; unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point negative ; data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 ; # observe the difference for the last point ; pad.SetBottomMargin(0.); #pad.SetBottomMargin(0.1); pad.SetLogy(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(3); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4174,Availability,error,error,4174,"""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(1.5); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""); ```. **testErrorGraph_v2**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndErrorSize(10). nPoints = 10; # Set ymin and ymax on purpose so that some error bars should be go beyon this range ; ymax = 4; # Set ymin > 0 since here we use log scale ; ymin = 0.1. # Data x, y; data_x = array('d', list(range(nPoints))); data_y = array('d', [2.]*nPoints). # x and y up/down errors ; # Increasing y-error for each points; unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point negative ; data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 ; # observe the difference for the last point ; pad.SetBottomMargin(0.); #pad.SetBottomMargin(0.1); pad.SetLogy(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(3); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:5315,Deployability,Install,Installation,5315,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(1.5); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""); ```. **testErrorGraph_v2**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndErrorSize(10). nPoints = 10; # Set ymin and ymax on purpose so that some error bars should be go beyon this range ; ymax = 4; # Set ymin > 0 since here we use log scale ; ymin = 0.1. # Data x, y; data_x = array('d', list(range(nPoints))); data_y = array('d', [2.]*nPoints). # x and y up/down errors ; # Increasing y-error for each points; unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point negative ; data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 ; # observe the difference for the last point ; pad.SetBottomMargin(0.); #pad.SetBottomMargin(0.1); pad.SetLogy(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(3); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""); ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4017,Testability,log,log,4017,"rray('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom ; data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(1.5); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""); ```. **testErrorGraph_v2**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndErrorSize(10). nPoints = 10; # Set ymin and ymax on purpose so that some error bars should be go beyon this range ; ymax = 4; # Set ymin > 0 since here we use log scale ; ymin = 0.1. # Data x, y; data_x = array('d', list(range(nPoints))); data_y = array('d', [2.]*nPoints). # x and y up/down errors ; # Increasing y-error for each points; unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point negative ; data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 ; # observe the difference for the last point ; pad.SetBottomMargin(0.); #pad.SetBottomMargin(0.1); pad.SetLogy(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:5266,Testability,test,tested,5266,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(1.5); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""); ```. **testErrorGraph_v2**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndErrorSize(10). nPoints = 10; # Set ymin and ymax on purpose so that some error bars should be go beyon this range ; ymax = 4; # Set ymin > 0 since here we use log scale ; ymin = 0.1. # Data x, y; data_x = array('d', list(range(nPoints))); data_y = array('d', [2.]*nPoints). # x and y up/down errors ; # Increasing y-error for each points; unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point negative ; data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 ; # observe the difference for the last point ; pad.SetBottomMargin(0.); #pad.SetBottomMargin(0.1); pad.SetLogy(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(3); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""); ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/pull/16071:59,Deployability,patch,patch,59,Backport of recent fixes and improvements for the upcoming patch release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16071
https://github.com/root-project/root/pull/16071:65,Deployability,release,release,65,Backport of recent fixes and improvements for the upcoming patch release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16071
https://github.com/root-project/root/pull/16072:12,Availability,error,error,12,"Fix compile error (happening with `DEV=on` due to missing include):. ```; /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'; TIter next(arr);; ^ ~~~; /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument; TIter(const TCollection *col, Bool_t dir = kIterForward); ^; /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument; TIter(TIterator *it) : fIterator(it) { }; ^; /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument; TIter(const TIter &iter);; ^; /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided; TIter() : fIterator(nullptr) { }; ^; /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]; delete arr;; ^ ~~~; /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'; class TObjArray;; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:138,Availability,error,error,138,"Fix compile error (happening with `DEV=on` due to missing include):. ```; /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'; TIter next(arr);; ^ ~~~; /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument; TIter(const TCollection *col, Bool_t dir = kIterForward); ^; /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument; TIter(TIterator *it) : fIterator(it) { }; ^; /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument; TIter(const TIter &iter);; ^; /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided; TIter() : fIterator(nullptr) { }; ^; /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]; delete arr;; ^ ~~~; /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'; class TObjArray;; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:1143,Availability,error,error,1143,"Fix compile error (happening with `DEV=on` due to missing include):. ```; /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'; TIter next(arr);; ^ ~~~; /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument; TIter(const TCollection *col, Bool_t dir = kIterForward); ^; /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument; TIter(TIterator *it) : fIterator(it) { }; ^; /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument; TIter(const TIter &iter);; ^; /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided; TIter() : fIterator(nullptr) { }; ^; /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]; delete arr;; ^ ~~~; /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'; class TObjArray;; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16073:333,Deployability,update,updated,333,"# This Pull request:; Moves some code out of the parallel tasks in RNTupleMerger (particularly, `ThrowOnError` which is not necessarily happily parallelizable).; It also avoids spawning the parallel tasks if not needed, i.e. if we don't need to change the compression of the pages. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16073
https://github.com/root-project/root/pull/16073:170,Safety,avoid,avoids,170,"# This Pull request:; Moves some code out of the parallel tasks in RNTupleMerger (particularly, `ThrowOnError` which is not necessarily happily parallelizable).; It also avoids spawning the parallel tasks if not needed, i.e. if we don't need to change the compression of the pages. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16073
https://github.com/root-project/root/pull/16073:303,Testability,test,tested,303,"# This Pull request:; Moves some code out of the parallel tasks in RNTupleMerger (particularly, `ThrowOnError` which is not necessarily happily parallelizable).; It also avoids spawning the parallel tasks if not needed, i.e. if we don't need to change the compression of the pages. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16073
https://github.com/root-project/root/pull/16075:341,Deployability,update,updated,341,"# This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of; the generated code in `Rcpp/generated` and `Rcpp/module` when; compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:242,Energy Efficiency,adapt,adapts,242,"# This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of; the generated code in `Rcpp/generated` and `Rcpp/module` when; compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:258,Integrability,interface,interface,258,"# This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of; the generated code in `Rcpp/generated` and `Rcpp/module` when; compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:242,Modifiability,adapt,adapts,242,"# This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of; the generated code in `Rcpp/generated` and `Rcpp/module` when; compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:311,Testability,test,tested,311,"# This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of; the generated code in `Rcpp/generated` and `Rcpp/module` when; compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16076:15,Deployability,configurat,configuration,15,And clean some configuration remnants,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16076
https://github.com/root-project/root/pull/16076:15,Modifiability,config,configuration,15,And clean some configuration remnants,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16076
https://github.com/root-project/root/pull/16078:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16078
https://github.com/root-project/root/pull/16078:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16078
https://github.com/root-project/root/pull/16079:55,Deployability,release,release,55,Backports of recent fixes and improvements to the 6.32 release series.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16079
https://github.com/root-project/root/pull/16080:820,Availability,error,error,820,"# This Pull request:; refactors RNTupleMerger to properly support late model extension.; The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match).; Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure.; By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO; - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:938,Deployability,update,updated,938,"# This Pull request:; refactors RNTupleMerger to properly support late model extension.; The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match).; Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure.; By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO; - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:674,Integrability,message,messages,674,"# This Pull request:; refactors RNTupleMerger to properly support late model extension.; The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match).; Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure.; By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO; - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:22,Modifiability,refactor,refactors,22,"# This Pull request:; refactors RNTupleMerger to properly support late model extension.; The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match).; Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure.; By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO; - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:158,Modifiability,extend,extend,158,"# This Pull request:; refactors RNTupleMerger to properly support late model extension.; The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match).; Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure.; By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO; - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:870,Security,expose,exposed,870,"# This Pull request:; refactors RNTupleMerger to properly support late model extension.; The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match).; Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure.; By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO; - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:520,Testability,log,logic,520,"# This Pull request:; refactors RNTupleMerger to properly support late model extension.; The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match).; Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure.; By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO; - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:908,Testability,test,tested,908,"# This Pull request:; refactors RNTupleMerger to properly support late model extension.; The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match).; Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure.; By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO; - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16081:129,Deployability,update,updated,129,# This Pull request:; Adds all graphs tutorials into Python Language. ## Checklist:. - [ yes ] tested changes locally; - [ yes ] updated the docs (if necessary); - [ yes ] Fork is up to date with master.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16081
https://github.com/root-project/root/pull/16081:95,Testability,test,tested,95,# This Pull request:; Adds all graphs tutorials into Python Language. ## Checklist:. - [ yes ] tested changes locally; - [ yes ] updated the docs (if necessary); - [ yes ] Fork is up to date with master.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16081
https://github.com/root-project/root/pull/16082:374,Deployability,update,updated,374,"Currently hadd is only checking the compression levels to determine whether fast merging should be used or not. This is wrong, as it will incorrectly skip compression change when a file is changed from e.g. 101 to 201. With this commit, hadd (actually, TFileMerger) will check for equality of compression settings instead. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11245",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16082
https://github.com/root-project/root/pull/16082:344,Testability,test,tested,344,"Currently hadd is only checking the compression levels to determine whether fast merging should be used or not. This is wrong, as it will incorrectly skip compression change when a file is changed from e.g. 101 to 201. With this commit, hadd (actually, TFileMerger) will check for equality of compression settings instead. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11245",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16082
https://github.com/root-project/root/pull/16086:109,Deployability,update,updated,109,# This Pull request:. ## Changes or fixes:; README fixes. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/pull/16086:163,Deployability,install,installation,163,# This Pull request:. ## Changes or fixes:; README fixes. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/pull/16086:215,Deployability,install,install,215,# This Pull request:. ## Changes or fixes:; README fixes. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/pull/16086:314,Deployability,install,installed,314,# This Pull request:. ## Changes or fixes:; README fixes. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/pull/16086:350,Deployability,install,install,350,# This Pull request:. ## Changes or fixes:; README fixes. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/pull/16086:79,Testability,test,tested,79,# This Pull request:. ## Changes or fixes:; README fixes. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/issues/16087:1774,Deployability,Update,Update,1774,"nctions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```; /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from; /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a; /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for; /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/); /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/); /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/); /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;; /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;; /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;; /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;; /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from; /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the; ```. ### Reproducer. `grep -n -r DistanceToPrimitive /opt/root_src/*`. ### ROOT version. ```; ROOT v6.32.00; Built for linuxx8664gcc on May 28 2024, 05:02:02; From tags/v6-32-00@v6-32-00; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16087
https://github.com/root-project/root/issues/16087:478,Usability,guid,guide,478,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There are a couple of places in ROOT that use a different case for one of the functions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```; /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from; /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a; /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for; /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/); /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/); /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/); /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;; /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;; /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;; /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;; /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from; /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the; ```. ### Reproducer. `grep -n -r DistanceToPrimitive /opt/root_src/*`. ### ROOT version. ```; ROOT v6.32.00; Built for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16087
https://github.com/root-project/root/issues/16087:609,Usability,guid,guide,609,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There are a couple of places in ROOT that use a different case for one of the functions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```; /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from; /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a; /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for; /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/); /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/); /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/); /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;; /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;; /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;; /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;; /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from; /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the; ```. ### Reproducer. `grep -n -r DistanceToPrimitive /opt/root_src/*`. ### ROOT version. ```; ROOT v6.32.00; Built for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16087
https://github.com/root-project/root/issues/16087:739,Usability,guid,guide,739,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There are a couple of places in ROOT that use a different case for one of the functions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```; /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from; /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a; /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for; /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/); /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/); /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/); /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;; /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;; /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;; /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;; /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from; /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the; ```. ### Reproducer. `grep -n -r DistanceToPrimitive /opt/root_src/*`. ### ROOT version. ```; ROOT v6.32.00; Built for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16087
https://github.com/root-project/root/pull/16090:674,Availability,error,error-reporting,674,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:927,Deployability,update,updated,927,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:577,Integrability,message,message,577,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:8,Modifiability,refactor,refactors,8,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:30,Modifiability,rewrite,rewrites,30,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:333,Performance,cache,cachesize,333,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:502,Safety,abort,abort,502,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:426,Testability,log,logic,426,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:817,Testability,test,tests,817,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:858,Testability,test,tests,858,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:897,Testability,test,tested,897,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:121,Usability,simpl,simpler,121,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:606,Usability,simpl,simplification,606,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16091:86,Testability,test,test,86,Support weighted filling from RDF to RooFit in RooAbsDataHelper and also; implement a test for it. Closes https://github.com/root-project/root/issues/7223.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16091
https://github.com/root-project/root/pull/16092:71,Deployability,configurat,configuration,71,- Use the same flags for `LLVM` than for `ROOT`; - Print out the multi-configuration generator flags; - Fix `root-config.bat` and `compiledata.win32`; - Increase the stack size for `rootcling` and for the `rfield_variant` test,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16092
https://github.com/root-project/root/pull/16092:71,Modifiability,config,configuration,71,- Use the same flags for `LLVM` than for `ROOT`; - Print out the multi-configuration generator flags; - Fix `root-config.bat` and `compiledata.win32`; - Increase the stack size for `rootcling` and for the `rfield_variant` test,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16092
https://github.com/root-project/root/pull/16092:114,Modifiability,config,config,114,- Use the same flags for `LLVM` than for `ROOT`; - Print out the multi-configuration generator flags; - Fix `root-config.bat` and `compiledata.win32`; - Increase the stack size for `rootcling` and for the `rfield_variant` test,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16092
https://github.com/root-project/root/pull/16092:222,Testability,test,test,222,- Use the same flags for `LLVM` than for `ROOT`; - Print out the multi-configuration generator flags; - Fix `root-config.bat` and `compiledata.win32`; - Increase the stack size for `rootcling` and for the `rfield_variant` test,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16092
https://github.com/root-project/root/pull/16093:100,Availability,error,error-bars,100,This PR fixes the 1st issue described here: https://github.com/root-project/root/issues/16070. When error-bars exceed to y range limits the end of error bars are nevertheless displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16093
https://github.com/root-project/root/pull/16093:147,Availability,error,error,147,This PR fixes the 1st issue described here: https://github.com/root-project/root/issues/16070. When error-bars exceed to y range limits the end of error bars are nevertheless displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16093
https://github.com/root-project/root/pull/16093:248,Availability,error,error,248,This PR fixes the 1st issue described here: https://github.com/root-project/root/issues/16070. When error-bars exceed to y range limits the end of error bars are nevertheless displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16093
https://github.com/root-project/root/pull/16094:140,Performance,cache,cache,140,"Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:; * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB; * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB; * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB; * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:438,Performance,cache,caches,438,"Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:; * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB; * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB; * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB; * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:558,Performance,cache,cache,558,"Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:; * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB; * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB; * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB; * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:176,Safety,avoid,avoid,176,"Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:; * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB; * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB; * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB; * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16096:391,Deployability,update,updated,391,"Currently RColumnDescriptorIterable's ctor wants a RFieldDescriptor even though it only uses the field's id internally. One of the overloads of GetColumnIterable accepts a fieldId but it is forced to retrieve back the field descriptor before constructing an Iterable object, only for the object itself to extract back the id, wasting work. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16096
https://github.com/root-project/root/pull/16096:361,Testability,test,tested,361,"Currently RColumnDescriptorIterable's ctor wants a RFieldDescriptor even though it only uses the field's id internally. One of the overloads of GetColumnIterable accepts a fieldId but it is forced to retrieve back the field descriptor before constructing an Iterable object, only for the object itself to extract back the id, wasting work. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16096
https://github.com/root-project/root/pull/16097:101,Deployability,update,updated,101,# This Pull request:. ## Changes or fixes:. typo. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16097
https://github.com/root-project/root/pull/16097:71,Testability,test,tested,71,# This Pull request:. ## Changes or fixes:. typo. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16097
https://github.com/root-project/root/pull/16099:262,Availability,toler,tolerance,262,"When integrating the discretely-sampled RooCurves, the algorithm; implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if; they are away from the interval limits with an arbitrary tolerance,; which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to; the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code; branches, this commit suggests to simply don't do this tolerace check; and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:420,Availability,toler,tolerance,420,"When integrating the discretely-sampled RooCurves, the algorithm; implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if; they are away from the interval limits with an arbitrary tolerance,; which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to; the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code; branches, this commit suggests to simply don't do this tolerace check; and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:625,Availability,toler,tolerace,625,"When integrating the discretely-sampled RooCurves, the algorithm; implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if; they are away from the interval limits with an arbitrary tolerance,; which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to; the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code; branches, this commit suggests to simply don't do this tolerace check; and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:653,Availability,avail,available,653,"When integrating the discretely-sampled RooCurves, the algorithm; implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if; they are away from the interval limits with an arbitrary tolerance,; which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to; the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code; branches, this commit suggests to simply don't do this tolerace check; and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:5,Deployability,integrat,integrating,5,"When integrating the discretely-sampled RooCurves, the algorithm; implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if; they are away from the interval limits with an arbitrary tolerance,; which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to; the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code; branches, this commit suggests to simply don't do this tolerace check; and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:693,Deployability,integrat,integration,693,"When integrating the discretely-sampled RooCurves, the algorithm; implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if; they are away from the interval limits with an arbitrary tolerance,; which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to; the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code; branches, this commit suggests to simply don't do this tolerace check; and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:5,Integrability,integrat,integrating,5,"When integrating the discretely-sampled RooCurves, the algorithm; implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if; they are away from the interval limits with an arbitrary tolerance,; which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to; the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code; branches, this commit suggests to simply don't do this tolerace check; and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:693,Integrability,integrat,integration,693,"When integrating the discretely-sampled RooCurves, the algorithm; implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if; they are away from the interval limits with an arbitrary tolerance,; which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to; the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code; branches, this commit suggests to simply don't do this tolerace check; and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:303,Performance,optimiz,optimization,303,"When integrating the discretely-sampled RooCurves, the algorithm; implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if; they are away from the interval limits with an arbitrary tolerance,; which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to; the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code; branches, this commit suggests to simply don't do this tolerace check; and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:342,Testability,log,logic,342,"When integrating the discretely-sampled RooCurves, the algorithm; implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if; they are away from the interval limits with an arbitrary tolerance,; which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to; the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code; branches, this commit suggests to simply don't do this tolerace check; and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:718,Testability,test,test,718,"When integrating the discretely-sampled RooCurves, the algorithm; implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if; they are away from the interval limits with an arbitrary tolerance,; which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to; the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code; branches, this commit suggests to simply don't do this tolerace check; and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:604,Usability,simpl,simply,604,"When integrating the discretely-sampled RooCurves, the algorithm; implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if; they are away from the interval limits with an arbitrary tolerance,; which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to; the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code; branches, this commit suggests to simply don't do this tolerace check; and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16100:90,Safety,avoid,avoid,90,The difference is only that the return type is casted to the actual; `RooArgSet` type. We avoid a few static casts all over the place like; this. A second commit in this PR applies some general improvements in memory management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16100
https://github.com/root-project/root/pull/16102:105,Security,hash,hash-assisted,105,"# This Pull request:. Setting `useHashMapForFind(true)` is not supported for RooArgLists; anymore, since hash-assisted finding by name hash can be ambiguous: a; RooArgList is allowed to have different elements with the same name. If one wants to use name-lookups on a RooArgList, one can just convert; it to a RooArgSet, which is cheap anyway (copy of a vector of pointers). Also inside RooFit itself, `useHashMapForFind` is only used for; RooArgSets, most notably the RooArgSet that contains all the components; of a RooWorkspace. Closes https://github.com/root-project/root/pull/9425.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16102
https://github.com/root-project/root/pull/16102:135,Security,hash,hash,135,"# This Pull request:. Setting `useHashMapForFind(true)` is not supported for RooArgLists; anymore, since hash-assisted finding by name hash can be ambiguous: a; RooArgList is allowed to have different elements with the same name. If one wants to use name-lookups on a RooArgList, one can just convert; it to a RooArgSet, which is cheap anyway (copy of a vector of pointers). Also inside RooFit itself, `useHashMapForFind` is only used for; RooArgSets, most notably the RooArgSet that contains all the components; of a RooWorkspace. Closes https://github.com/root-project/root/pull/9425.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16102
https://github.com/root-project/root/pull/16105:144,Deployability,update,updated,144,It's not needed anymore since we can now just take the column ids from the field descriptor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16105
https://github.com/root-project/root/pull/16105:114,Testability,test,tested,114,It's not needed anymore since we can now just take the column ids from the field descriptor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16105
https://github.com/root-project/root/pull/16106:55,Energy Efficiency,allocate,allocates,55,"`RPageSinkBuf` internally clones the model, which also allocates the column page buffers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16106
https://github.com/root-project/root/pull/16107:83,Deployability,update,updated,83,"Since we re-organized a few things on the website, the links in doxygen need to be updated accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16107
https://github.com/root-project/root/pull/16111:11,Modifiability,extend,extending,11,Allows for extending not only entire fields and their columns but also only columns for existing fields.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16111
https://github.com/root-project/root/pull/16113:353,Deployability,update,updated,353,"…pector. Currently, irrelevant value is returned if compressed size exceeds the range of int, since std::accumulate is initialized with plain 0. The proposed version uses std::reduce where (implicit) zero-initialization is done with the iterator value type. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #16124",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16113
https://github.com/root-project/root/pull/16113:176,Energy Efficiency,reduce,reduce,176,"…pector. Currently, irrelevant value is returned if compressed size exceeds the range of int, since std::accumulate is initialized with plain 0. The proposed version uses std::reduce where (implicit) zero-initialization is done with the iterator value type. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #16124",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16113
https://github.com/root-project/root/pull/16113:323,Testability,test,tested,323,"…pector. Currently, irrelevant value is returned if compressed size exceeds the range of int, since std::accumulate is initialized with plain 0. The proposed version uses std::reduce where (implicit) zero-initialization is done with the iterator value type. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #16124",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16113
https://github.com/root-project/root/pull/16116:209,Testability,log,logic,209,"For all fields but the nullable field, all the column representations of a given field have the same in-memory type. This is used to create a central helper in `RFieldBase` that implements the column creation logic, given the list of in-memory types.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16116
https://github.com/root-project/root/pull/16118:44,Deployability,Update,Updates,44,# This Pull request:. ## Changes or fixes:; Updates the HistoToWorkspaceFactoryFast code to add an option to disable the per-region WS production. This might be relevant in cases where the WS creation takes a long time as the per-region WS might not be needed in many cases. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16118
https://github.com/root-project/root/pull/16118:326,Deployability,update,updated,326,# This Pull request:. ## Changes or fixes:; Updates the HistoToWorkspaceFactoryFast code to add an option to disable the per-region WS production. This might be relevant in cases where the WS creation takes a long time as the per-region WS might not be needed in many cases. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16118
https://github.com/root-project/root/pull/16118:296,Testability,test,tested,296,# This Pull request:. ## Changes or fixes:; Updates the HistoToWorkspaceFactoryFast code to add an option to disable the per-region WS production. This might be relevant in cases where the WS creation takes a long time as the per-region WS might not be needed in many cases. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16118
https://github.com/root-project/root/issues/16119:145,Availability,error,errors,145,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:219,Availability,Error,Error,219,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:777,Deployability,Install,Installation,777,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:187,Testability,log,log,187,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:727,Usability,simpl,simple,727,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/pull/16120:48,Modifiability,config,configurable,48,In preparation of anticipated column types with configurable bit width. Removes the assumption in the code that the column bit width is determined by the column type.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16120
https://github.com/root-project/root/issues/16121:2623,Deployability,Install,Installation,2623,"ScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02); ==44592== by 0x4AB98C0: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, ...; ```. Are those a real leak (they accumulate and could have been deleted), hoarding (they accumulate, are in use and can not be delete until the end) or one time (they are just not cleaned-up at the end?). ### Reproducer. [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16393458/CreateTreeTestv2.tar.gz). ```; make; valgrind --suppression=$ROOTSYS/etc/valgrind-root.supp createTree; ```. ### ROOT version. Moving from 6.26/06 to 6.28/04 we’ve still a very large increase of mem leaks and it is still present in v6.32.02. ### Installation method. unknown. ### Operating system. Linux. ### Additional context. https://github.com/root-project/root/issues/13130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16121
https://github.com/root-project/root/issues/16121:170,Usability,simpl,simple,170,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330, we just simple executable:; [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz), we get definitively lost report by valgrind:. ```; ==44592== at 0x483A809: malloc (vg_replace_malloc.c:309); ==44592== by 0x898CD15: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x8921B63: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02); ==44592== by 0x4AB98C0: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16121
https://github.com/root-project/root/pull/16122:145,Deployability,Update,Update,145,"to easily get the rootcling invocation that corresponds to the current genreflex invocation, to ease the migration from genrelfex to rootcling.; Update the genreflex usage as well, stating that the tool does not support C++ modules generation.; Memorialise the change to the Release Notes, too. Fixes #13481",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16122
https://github.com/root-project/root/pull/16122:275,Deployability,Release,Release,275,"to easily get the rootcling invocation that corresponds to the current genreflex invocation, to ease the migration from genrelfex to rootcling.; Update the genreflex usage as well, stating that the tool does not support C++ modules generation.; Memorialise the change to the Release Notes, too. Fixes #13481",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16122
https://github.com/root-project/root/issues/16123:8225,Deployability,Install,Installation,8225,"ibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628==; ```. Should this be added to the suppression file or is it a real issue?. ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:265,Integrability,depend,depends,265,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330/16?u=pcanal; A valgrind run of the example given there issues:; ```; ==75628== Conditional jump or move depends on uninitialised value(s); ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x969A787: clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributes(clang::GlobalDecl, clang::CodeGen::CGFunctionInfo const&, llvm::Function*, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96C7EFD: clang::CodeGen::CodeGenModule::SetFunctionAttributes(clang::GlobalDecl, llvm::Function*, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96CA59B: clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction(llvm::StringRef, llvm::Type*, clang::GlobalDecl, bool, bool, bool, llvm::AttributeList, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96CBC9C: clang::CodeGen::CodeGenModule::GetAddrOfFunction(clang::GlobalDecl, llvm::Type*, bool, bool, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96CC257: clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:2732,Integrability,depend,depends,2732,"xport/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96C92BA: clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96D1399: clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96D273F: clang::CodeGen::CodeGenModule::EmitDeclContext(clang::DeclContext const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x958FFD0: clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628==; ==75628== Conditional jump or move depends on uninitialised value(s); ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x99029E8: clang::CodeGen::CodeGenFunction::EmitCall(clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCallee const&, clang::CodeGen::ReturnValueSlot, clang::CodeGen::CallArgList const&, llvm::CallBase**, bool, clang::SourceLocation) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x996CD27: clang::CodeGen::CodeGenFunction::EmitCall(clang::QualType, clang::CodeGen::CGCallee const&, clang::CallExpr const*, clang::CodeGen::ReturnValueSlot, llvm::Value*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02);",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:5329,Integrability,depend,depends,5329,"nStmt(clang::ReturnStmt const&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x961225B: clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&, bool, clang::CodeGen::AggValueSlot) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x9674B79: clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x9683D06: clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96CC352: clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628==; ==75628== Conditional jump or move depends on uninitialised value(s); ==75628== at 0xCE735BC: llvm::getAllocAlignment(llvm::CallBase const*, llvm::TargetLibraryInfo const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xCA0A1EF: llvm::InstCombinerImpl::annotateAnyAllocSite(llvm::CallBase&, llvm::TargetLibraryInfo const*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xCA1277B: llvm::InstCombinerImpl::visitCallBase(llvm::CallBase&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xCA15A53: llvm::InstCombinerImpl::visitCallInst(llvm::CallInst&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xC9BEF7E: llvm::InstCombinerImpl::run() (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xC9C2298: combineInstructionsOverFunction(llvm::Function&, llvm::InstructionWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::Op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:6388,Performance,Optimiz,OptimizationRemarkEmitter,6388,"ialised value(s); ==75628== at 0xCE735BC: llvm::getAllocAlignment(llvm::CallBase const*, llvm::TargetLibraryInfo const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xCA0A1EF: llvm::InstCombinerImpl::annotateAnyAllocSite(llvm::CallBase&, llvm::TargetLibraryInfo const*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xCA1277B: llvm::InstCombinerImpl::visitCallBase(llvm::CallBase&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xCA15A53: llvm::InstCombinerImpl::visitCallInst(llvm::CallInst&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xC9BEF7E: llvm::InstCombinerImpl::run() (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xC9C2298: combineInstructionsOverFunction(llvm::Function&, llvm::InstructionWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16124:1117,Deployability,Install,Installation,1117,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```; $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log; ```; [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt); [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log); [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |; | From heads/master@v6-31-01-2659-gd4c8fa6bab |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:1156,Deployability,install,installation,1156,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```; $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log; ```; [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt); [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log); [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |; | From heads/master@v6-31-01-2659-gd4c8fa6bab |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:1217,Deployability,release,release,1217,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```; $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log; ```; [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt); [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log); [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |; | From heads/master@v6-31-01-2659-gd4c8fa6bab |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:280,Testability,log,log,280,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```; $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log; ```; [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt); [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log); [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |; | From heads/master@v6-31-01-2659-gd4c8fa6bab |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:460,Testability,log,log,460,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```; $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log; ```; [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt); [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log); [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |; | From heads/master@v6-31-01-2659-gd4c8fa6bab |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:550,Testability,log,log,550,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```; $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log; ```; [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt); [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log); [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |; | From heads/master@v6-31-01-2659-gd4c8fa6bab |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/pull/16125:183,Deployability,Update,Update,183,"1. Now PDF can be created on client and just send to server; 2. Also WEBP image standard supported via menu; 3. Print created file size; 4. Use canvas name as file name for image; 5. Update 'haxis.C' tutorial - show TBox and TLatex usage on haxis frame; 6. Update JSROOT with correspondent functionality, plus TProfile2D empty bin fix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16125
https://github.com/root-project/root/pull/16125:257,Deployability,Update,Update,257,"1. Now PDF can be created on client and just send to server; 2. Also WEBP image standard supported via menu; 3. Print created file size; 4. Use canvas name as file name for image; 5. Update 'haxis.C' tutorial - show TBox and TLatex usage on haxis frame; 6. Update JSROOT with correspondent functionality, plus TProfile2D empty bin fix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16125
https://github.com/root-project/root/pull/16129:99,Availability,error,errors,99,"…rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```; [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o; FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o ; <snip>; src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory; 3 | #include <afterrootpngwrite.h>; | ^~~~~~~~~~~~~~~~~~~~~; ```. ```; C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage; \ASImage.vcxproj]; ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16129:341,Availability,error,error,341,"…rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```; [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o; FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o ; <snip>; src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory; 3 | #include <afterrootpngwrite.h>; | ^~~~~~~~~~~~~~~~~~~~~; ```. ```; C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage; \ASImage.vcxproj]; ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16129:533,Availability,error,error,533,"…rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```; [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o; FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o ; <snip>; src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory; 3 | #include <afterrootpngwrite.h>; | ^~~~~~~~~~~~~~~~~~~~~; ```. ```; C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage; \ASImage.vcxproj]; ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16129:644,Deployability,release,release,644,"…rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```; [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o; FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o ; <snip>; src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory; 3 | #include <afterrootpngwrite.h>; | ^~~~~~~~~~~~~~~~~~~~~; ```. ```; C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage; \ASImage.vcxproj]; ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/issues/16134:731,Availability,Error,Error,731,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches?. ### Reproducer. ```; file:; KEY: ROOT::Experimental::RNTuple EventData;1 object title; KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor; At:; void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]; ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:349,Deployability,patch,patches,349,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches?. ### Reproducer. ```; file:; KEY: ROOT::Experimental::RNTuple EventData;1 object title; KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor; At:; void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]; ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:1069,Deployability,patch,patches,1069,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches?. ### Reproducer. ```; file:; KEY: ROOT::Experimental::RNTuple EventData;1 object title; KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor; At:; void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]; ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:1082,Deployability,Install,Installation,1082,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches?. ### Reproducer. ```; file:; KEY: ROOT::Experimental::RNTuple EventData;1 object title; KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor; At:; void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]; ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:1107,Deployability,release,releases,1107,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches?. ### Reproducer. ```; file:; KEY: ROOT::Experimental::RNTuple EventData;1 object title; KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor; At:; void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]; ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:807,Security,checksum,checksum,807,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches?. ### Reproducer. ```; file:; KEY: ROOT::Experimental::RNTuple EventData;1 object title; KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor; At:; void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]; ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16135:242,Availability,error,error,242,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```; Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!); At:; ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:; ```; export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase; source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh; lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive); ```. To reproduce the error:; ```; root [0] using namespace ROOT::Experimental;; root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();; ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:263,Availability,Error,Error,263,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```; Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!); At:; ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:; ```; export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase; source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh; lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive); ```. To reproduce the error:; ```; root [0] using namespace ROOT::Experimental;; root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();; ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1532,Availability,error,error,1532,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```; Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!); At:; ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:; ```; export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase; source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh; lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive); ```. To reproduce the error:; ```; root [0] using namespace ROOT::Experimental;; root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();; ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1724,Deployability,Install,Installation,1724,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```; Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!); At:; ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:; ```; export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase; source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh; lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive); ```. To reproduce the error:; ```; root [0] using namespace ROOT::Experimental;; root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();; ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1801,Deployability,release,release,1801,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```; Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!); At:; ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:; ```; export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase; source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh; lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive); ```. To reproduce the error:; ```; root [0] using namespace ROOT::Experimental;; root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();; ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:248,Integrability,message,message,248,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```; Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!); At:; ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:; ```; export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase; source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh; lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive); ```. To reproduce the error:; ```; root [0] using namespace ROOT::Experimental;; root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();; ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:384,Security,access,access,384,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```; Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!); At:; ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:; ```; export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase; source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh; lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive); ```. To reproduce the error:; ```; root [0] using namespace ROOT::Experimental;; root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();; ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/pull/16139:157,Deployability,update,updates,157,"# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16051. What I did was to copy using the full constructor which updates the list. Another solution could to be change the Streamer so that it interacts with the list of colors directly, but don't know how to. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16139
https://github.com/root-project/root/pull/16139:353,Deployability,update,updated,353,"# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16051. What I did was to copy using the full constructor which updates the list. Another solution could to be change the Streamer so that it interacts with the list of colors directly, but don't know how to. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16139
https://github.com/root-project/root/pull/16139:323,Testability,test,tested,323,"# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16051. What I did was to copy using the full constructor which updates the list. Another solution could to be change the Streamer so that it interacts with the list of colors directly, but don't know how to. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16139
https://github.com/root-project/root/pull/16140:125,Usability,Simpl,Simplify,125,Implement properly the scatter plot palette attributes as requested here: https://github.com/root-project/root/issues/15922; Simplify scatter.C,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16140
https://github.com/root-project/root/pull/16141:999,Availability,error,error,999,"Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:; - using GCC 13.2.0 on Ubuntu 24.04; - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`; - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests.; If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:663,Deployability,patch,patched,663,"Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:; - using GCC 13.2.0 on Ubuntu 24.04; - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`; - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests.; If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:421,Safety,abort,abort,421,"Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:; - using GCC 13.2.0 on Ubuntu 24.04; - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`; - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests.; If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:883,Testability,test,tests,883,"Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:; - using GCC 13.2.0 on Ubuntu 24.04; - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`; - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests.; If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16142:5,Deployability,update,update,5,Plus update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16142
https://github.com/root-project/root/pull/16143:205,Integrability,interface,interface,205,"Completes the support for fields with multiple column representations. For the moment, only the unit tests can change the column representation between clusters on writing. Eventually, we may add a proper interface. Merging will also lead to this situation. In all cases but the nullable field, we can exploit the fact that the number of columns of multiple representations is the same and the corresponding columns have the same number of elements and cluster boundaries. Therefore, when reading we team up the corresponding columns of multiple representations. When we map another page, the column teams can then figure out amongst each other the column that is not suppressed for the given page / element index and forward the call. Follow-up of #16054",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16143
https://github.com/root-project/root/pull/16143:101,Testability,test,tests,101,"Completes the support for fields with multiple column representations. For the moment, only the unit tests can change the column representation between clusters on writing. Eventually, we may add a proper interface. Merging will also lead to this situation. In all cases but the nullable field, we can exploit the fact that the number of columns of multiple representations is the same and the corresponding columns have the same number of elements and cluster boundaries. Therefore, when reading we team up the corresponding columns of multiple representations. When we map another page, the column teams can then figure out amongst each other the column that is not suppressed for the given page / element index and forward the call. Follow-up of #16054",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16143
https://github.com/root-project/root/pull/16144:32,Performance,cache,cache,32,"Direct I/O bypasses the OS page cache and allows to reach much higher bandwidths. However, it introduces strict alignment requirements to the offset and size of all write requests, as well as the userspace pointer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16144
https://github.com/root-project/root/issues/16146:255,Deployability,Install,Installation,255,"### Explain what you would like to see improved and how. In the column overview of the `RNTupleInspector`, it would be nice to show in addition; - The compression ratio per column type; - The number of pages per column type. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16146
https://github.com/root-project/root/pull/16147:411,Deployability,update,updated,411,# This Pull request:. Corrects entries ranges w/ nWorkers>nEntries when using TTreeProcessorMP. When processing trees with less entries than workers with TTreeProcessorMP some entries were processed multiple times because of a mistake in the algorithm calculating the event ranges. Thanks to @hageboeck for the help with the output management of the test 🙏 !. ## Checklist:. - [v] tested changes locally; - [v] updated the docs (if necessary). This PR fixes #15425,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16147
https://github.com/root-project/root/pull/16147:350,Testability,test,test,350,# This Pull request:. Corrects entries ranges w/ nWorkers>nEntries when using TTreeProcessorMP. When processing trees with less entries than workers with TTreeProcessorMP some entries were processed multiple times because of a mistake in the algorithm calculating the event ranges. Thanks to @hageboeck for the help with the output management of the test 🙏 !. ## Checklist:. - [v] tested changes locally; - [v] updated the docs (if necessary). This PR fixes #15425,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16147
https://github.com/root-project/root/pull/16147:381,Testability,test,tested,381,# This Pull request:. Corrects entries ranges w/ nWorkers>nEntries when using TTreeProcessorMP. When processing trees with less entries than workers with TTreeProcessorMP some entries were processed multiple times because of a mistake in the algorithm calculating the event ranges. Thanks to @hageboeck for the help with the output management of the test 🙏 !. ## Checklist:. - [v] tested changes locally; - [v] updated the docs (if necessary). This PR fixes #15425,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16147
https://github.com/root-project/root/pull/16148:151,Deployability,update,updated,151,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/9637. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16148
https://github.com/root-project/root/pull/16148:121,Testability,test,tested,121,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/9637. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16148
https://github.com/root-project/root/issues/16149:324,Availability,Error,Error,324,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:; ```; cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF; cmake .; ```; i.e. without buillding; leads to:; ```; CMake Error:; Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib; ```. ### Reproducer. ```; mkdir build; cd build; cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF; cmake .; ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:466,Availability,error,error,466,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:; ```; cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF; cmake .; ```; i.e. without buillding; leads to:; ```; CMake Error:; Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib; ```. ### Reproducer. ```; mkdir build; cd build; cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF; cmake .; ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:719,Deployability,Install,Installation,719,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:; ```; cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF; cmake .; ```; i.e. without buillding; leads to:; ```; CMake Error:; Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib; ```. ### Reproducer. ```; mkdir build; cd build; cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF; cmake .; ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:421,Testability,test,test,421,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:; ```; cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF; cmake .; ```; i.e. without buillding; leads to:; ```; CMake Error:; Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib; ```. ### Reproducer. ```; mkdir build; cd build; cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF; cmake .; ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/pull/16150:262,Deployability,upgrade,upgrade,262,"Upstream Clang keeps `TemplateIdAnnotation`s around ""if they might still be in the token stream."" See upstream commit for more details: https://github.com/llvm/llvm-project/commit/6163aa96799cbad7f2f58e02c5bebee9647056a5 (included in Clang 11, in ROOT since the upgrade to LLVM 13). This reasoning doesn't apply when we fully reset the `Parser` state in `ParserStateRAII`'s destructor, and we expect the swapped out vector of `TemplateIdAnnotation`s to be empty in order to not leak. Fixes #16121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16150
https://github.com/root-project/root/pull/16156:216,Availability,failure,failures,216,"Introduce an internal elper class to build a map object that only uses `std::vector`, which can be implicitly converted to `std::map` in C++. This avoids using `std::map` in pythonizations, which can cause assertion failures in Windows debug builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16156
https://github.com/root-project/root/pull/16156:147,Safety,avoid,avoids,147,"Introduce an internal elper class to build a map object that only uses `std::vector`, which can be implicitly converted to `std::map` in C++. This avoids using `std::map` in pythonizations, which can cause assertion failures in Windows debug builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16156
https://github.com/root-project/root/pull/16156:206,Testability,assert,assertion,206,"Introduce an internal elper class to build a map object that only uses `std::vector`, which can be implicitly converted to `std::map` in C++. This avoids using `std::map` in pythonizations, which can cause assertion failures in Windows debug builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16156
https://github.com/root-project/root/pull/16158:44,Performance,perform,perform,44,"Since commit 3b623b2cfa (""[DF] Use dtors to perform clean-up tasks in column readers""), the destructor resets the `std::unique_ptr` holding a `TTreaderValue`, which is the default of the pointer's destructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16158
https://github.com/root-project/root/issues/16160:252,Availability,Error,Error,252,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```; Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection.; Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary.; terminate called after throwing an instance of 'std::runtime_error'; what(): An error was encountered while processing the data. TTreeReader status code is: 6; ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>; #include <array>. const static auto filename{""file.root""};; const static auto treename{""tree""};; const static auto branchname{""array""};. void write_ttree(); {; TFile f{filename, ""recreate""};; TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);; t.Fill();; f.WriteObject(&t, treename);; }. void read_rdf(); {; ROOT::RDataFrame df{treename, filename};; df.Describe().Print();; df.Display<std::array<int, 6>>({branchname})->Print();; }. int main(); {; write_ttree();; read_rdf();; }; ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error; ```; Dataframe from TChain tree in file file.root. Property Value; -------- -----; Columns in total 1; Columns from defines 0; Event loops run 0; Processing slots 1. Column Type Origin; ------ ---- ------; array ROOT::VecOps::RVec<Int_t> Dataset; ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:397,Availability,Error,Error,397,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```; Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection.; Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary.; terminate called after throwing an instance of 'std::runtime_error'; what(): An error was encountered while processing the data. TTreeReader status code is: 6; ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>; #include <array>. const static auto filename{""file.root""};; const static auto treename{""tree""};; const static auto branchname{""array""};. void write_ttree(); {; TFile f{filename, ""recreate""};; TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);; t.Fill();; f.WriteObject(&t, treename);; }. void read_rdf(); {; ROOT::RDataFrame df{treename, filename};; df.Describe().Print();; df.Display<std::array<int, 6>>({branchname})->Print();; }. int main(); {; write_ttree();; read_rdf();; }; ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error; ```; Dataframe from TChain tree in file file.root. Property Value; -------- -----; Columns in total 1; Columns from defines 0; Event loops run 0; Processing slots 1. Column Type Origin; ------ ---- ------; array ROOT::VecOps::RVec<Int_t> Dataset; ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:624,Availability,error,error,624,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```; Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection.; Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary.; terminate called after throwing an instance of 'std::runtime_error'; what(): An error was encountered while processing the data. TTreeReader status code is: 6; ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>; #include <array>. const static auto filename{""file.root""};; const static auto treename{""tree""};; const static auto branchname{""array""};. void write_ttree(); {; TFile f{filename, ""recreate""};; TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);; t.Fill();; f.WriteObject(&t, treename);; }. void read_rdf(); {; ROOT::RDataFrame df{treename, filename};; df.Describe().Print();; df.Display<std::array<int, 6>>({branchname})->Print();; }. int main(); {; write_ttree();; read_rdf();; }; ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error; ```; Dataframe from TChain tree in file file.root. Property Value; -------- -----; Columns in total 1; Columns from defines 0; Event loops run 0; Processing slots 1. Column Type Origin; ------ ---- ------; array ROOT::VecOps::RVec<Int_t> Dataset; ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:1633,Availability,error,error,1633,"ues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```; Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection.; Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary.; terminate called after throwing an instance of 'std::runtime_error'; what(): An error was encountered while processing the data. TTreeReader status code is: 6; ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>; #include <array>. const static auto filename{""file.root""};; const static auto treename{""tree""};; const static auto branchname{""array""};. void write_ttree(); {; TFile f{filename, ""recreate""};; TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);; t.Fill();; f.WriteObject(&t, treename);; }. void read_rdf(); {; ROOT::RDataFrame df{treename, filename};; df.Describe().Print();; df.Display<std::array<int, 6>>({branchname})->Print();; }. int main(); {; write_ttree();; read_rdf();; }; ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error; ```; Dataframe from TChain tree in file file.root. Property Value; -------- -----; Columns in total 1; Columns from defines 0; Event loops run 0; Processing slots 1. Column Type Origin; ------ ---- ------; array ROOT::VecOps::RVec<Int_t> Dataset; ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:1919,Deployability,Install,Installation,1919,"ues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```; Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection.; Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary.; terminate called after throwing an instance of 'std::runtime_error'; what(): An error was encountered while processing the data. TTreeReader status code is: 6; ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>; #include <array>. const static auto filename{""file.root""};; const static auto treename{""tree""};; const static auto branchname{""array""};. void write_ttree(); {; TFile f{filename, ""recreate""};; TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);; t.Fill();; f.WriteObject(&t, treename);; }. void read_rdf(); {; ROOT::RDataFrame df{treename, filename};; df.Describe().Print();; df.Display<std::array<int, 6>>({branchname})->Print();; }. int main(); {; write_ttree();; read_rdf();; }; ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error; ```; Dataframe from TChain tree in file file.root. Property Value; -------- -----; Columns in total 1; Columns from defines 0; Event loops run 0; Processing slots 1. Column Type Origin; ------ ---- ------; array ROOT::VecOps::RVec<Int_t> Dataset; ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/pull/16161:153,Security,expose,expose,153,Add a specialization of RTreeColumnReader that reads values from a branch of type std::array. The specialization uses the non-adopting view from RVec to expose the contents of the array to nodes of the graph. Fixes #16160,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16161
https://github.com/root-project/root/issues/16163:551,Deployability,Install,Installation,551,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The logic at . https://github.com/root-project/root/blob/e9fffa9a7c3aeeb17a4e05d5a05a83911c54b5dc/graf2d/gpad/src/TCanvas.cxx#L2261-L2264. Introduced a compiler warning, visible in every PR build, for example at https://github.com/root-project/root/pull/16161/files. <img width=""1183"" alt=""Screenshot 2024-08-03 at 15 28 50"" src=""https://github.com/user-attachments/assets/2880c4ea-fa11-48dc-91df-f3b45f890a7c"">. ### Reproducer. See description. ### ROOT version. Master. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16163
https://github.com/root-project/root/issues/16163:79,Testability,log,logic,79,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The logic at . https://github.com/root-project/root/blob/e9fffa9a7c3aeeb17a4e05d5a05a83911c54b5dc/graf2d/gpad/src/TCanvas.cxx#L2261-L2264. Introduced a compiler warning, visible in every PR build, for example at https://github.com/root-project/root/pull/16161/files. <img width=""1183"" alt=""Screenshot 2024-08-03 at 15 28 50"" src=""https://github.com/user-attachments/assets/2880c4ea-fa11-48dc-91df-f3b45f890a7c"">. ### Reproducer. See description. ### ROOT version. Master. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16163
https://github.com/root-project/root/pull/16164:300,Deployability,release,release,300,"Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer.; - There is currently one concrete implementation, the `RPageAllocatorHeap`; - Pages are movable only and release the page buffer on destruction using the page allocator that created them; - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page; - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction; - Remove the `RPageStorage::ReleasePage()` method; - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:663,Deployability,Release,ReleasePage,663,"Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer.; - There is currently one concrete implementation, the `RPageAllocatorHeap`; - Pages are movable only and release the page buffer on destruction using the page allocator that created them; - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page; - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction; - Remove the `RPageStorage::ReleasePage()` method; - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:133,Integrability,interface,interface,133,"Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer.; - There is currently one concrete implementation, the `RPageAllocatorHeap`; - Pages are movable only and release the page buffer on destruction using the page allocator that created them; - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page; - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction; - Remove the `RPageStorage::ReleasePage()` method; - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:702,Performance,Load,LoadPage,702,"Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer.; - There is currently one concrete implementation, the `RPageAllocatorHeap`; - Pages are movable only and release the page buffer on destruction using the page allocator that created them; - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page; - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction; - Remove the `RPageStorage::ReleasePage()` method; - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16166:260,Deployability,update,updated,260,"# This Pull request:; moves most of the nested classes definitions in RNTupleDescriptor.cxx out of line, for ease of reading.; (Unfortunately, since the types are all public, they cannot be moved to the cxx). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16166
https://github.com/root-project/root/pull/16166:230,Testability,test,tested,230,"# This Pull request:; moves most of the nested classes definitions in RNTupleDescriptor.cxx out of line, for ease of reading.; (Unfortunately, since the types are all public, they cannot be moved to the cxx). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16166
https://github.com/root-project/root/issues/16167:3249,Availability,Error,Error,3249,"side() ) {; TGeoNode * node2 = _tgeoMgr->FindNextBoundaryAndStep( 100, 1) ;; if( !node2 || _tgeoMgr->IsOutside() ) {; break;; }; const double *position = _tgeoMgr->GetCurrentPoint();; const double *previouspos = _tgeoMgr->GetLastPoint();; double length = _tgeoMgr->GetStep();; TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();; std::cout << ""track is "" << track << std::endl;; } // while not outside; return 0;; }. EOF. cat >geopatch.cpp <<EOF; #include <TGeoManager.h>; #include <TEnv.h>; #include <TPluginManager.h>; #include <TROOT.h>; #include <iostream>; TVirtualGeoPainter *TGeoManager::GetGeomPainter(); {; if (!fPainter) {; const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");; if (!kind || !*kind){}; //APS: switching back to root fixes it; kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";; if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {; if (h->LoadPlugin() == -1) {; Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);; return nullptr;; }; fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);; if (!fPainter) {; Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);; return nullptr;; }; } else {; Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);; }; }; return fPainter;; }. EOF; ; mkdir build; cd build; cmake ..; make; repro; reproBroken; ```. #### Output from reproducer. ```; Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created; Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3421,Availability,Error,Error,3421,"side() ) {; TGeoNode * node2 = _tgeoMgr->FindNextBoundaryAndStep( 100, 1) ;; if( !node2 || _tgeoMgr->IsOutside() ) {; break;; }; const double *position = _tgeoMgr->GetCurrentPoint();; const double *previouspos = _tgeoMgr->GetLastPoint();; double length = _tgeoMgr->GetStep();; TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();; std::cout << ""track is "" << track << std::endl;; } // while not outside; return 0;; }. EOF. cat >geopatch.cpp <<EOF; #include <TGeoManager.h>; #include <TEnv.h>; #include <TPluginManager.h>; #include <TROOT.h>; #include <iostream>; TVirtualGeoPainter *TGeoManager::GetGeomPainter(); {; if (!fPainter) {; const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");; if (!kind || !*kind){}; //APS: switching back to root fixes it; kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";; if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {; if (h->LoadPlugin() == -1) {; Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);; return nullptr;; }; fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);; if (!fPainter) {; Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);; return nullptr;; }; } else {; Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);; }; }; return fPainter;; }. EOF; ; mkdir build; cd build; cmake ..; make; repro; reproBroken; ```. #### Output from reproducer. ```; Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created; Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3518,Availability,Error,Error,3518,"side() ) {; TGeoNode * node2 = _tgeoMgr->FindNextBoundaryAndStep( 100, 1) ;; if( !node2 || _tgeoMgr->IsOutside() ) {; break;; }; const double *position = _tgeoMgr->GetCurrentPoint();; const double *previouspos = _tgeoMgr->GetLastPoint();; double length = _tgeoMgr->GetStep();; TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();; std::cout << ""track is "" << track << std::endl;; } // while not outside; return 0;; }. EOF. cat >geopatch.cpp <<EOF; #include <TGeoManager.h>; #include <TEnv.h>; #include <TPluginManager.h>; #include <TROOT.h>; #include <iostream>; TVirtualGeoPainter *TGeoManager::GetGeomPainter(); {; if (!fPainter) {; const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");; if (!kind || !*kind){}; //APS: switching back to root fixes it; kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";; if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {; if (h->LoadPlugin() == -1) {; Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);; return nullptr;; }; fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);; if (!fPainter) {; Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);; return nullptr;; }; } else {; Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);; }; }; return fPainter;; }. EOF; ; mkdir build; cd build; cmake ..; make; repro; reproBroken; ```. #### Output from reproducer. ```; Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created; Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:902,Deployability,Patch,PatchGeo,902,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with; https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f; is breaking tests in DD4hep.; https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash; mkdir repro; cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh; cat > CMakeLists.txt << EOF; cmake_minimum_required( VERSION 3.20 ); project( PatchGeo CXX); set( PROJECT_VERSION_MAJOR 0 ); set( PROJECT_VERSION_MINOR 1 ); set(CMAKE_CXX_STANDARD 20); add_library(geopatch SHARED geopatch.cpp); find_package(ROOT REQUIRED); target_link_libraries(geopatch ROOT::Core ROOT::Geom ); add_executable(repro repro.cpp); target_link_libraries(repro geopatch ); add_executable(reproBroken repro.cpp); target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF; #include ""TGeoManager.h""; #include ""TGeoNode.h""; #include ""TGeoVolume.h""; #include ""TVirtualGeoTrack.h""; #include <iostream>; int main() {; double point1[] = {0.0, 0.0, 0.0};; double point2[] = {0.3, 0.4, 0.5};; auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");; //--- define some materials; TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);; TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);; TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);; TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);; TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., 120.);; _tgeoMgr->SetTopVolume(top);; _tgeoMgr->CloseGeometry();;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5513,Deployability,Install,Installation,5513," }. EOF; ; mkdir build; cd build; cmake ..; make; repro; reproBroken; ```. #### Output from reproducer. ```; Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created; Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0; Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; track is 0x47f4ce0; track is 0x47f4ce0; Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created; Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0; Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; track is 0; track is 0; ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version; ROOT Version: 6.33.01; Built for linuxx8664gcc on Aug 04 2024, 22:30:37; From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3289,Modifiability,plugin,plugin,3289,"side() ) {; TGeoNode * node2 = _tgeoMgr->FindNextBoundaryAndStep( 100, 1) ;; if( !node2 || _tgeoMgr->IsOutside() ) {; break;; }; const double *position = _tgeoMgr->GetCurrentPoint();; const double *previouspos = _tgeoMgr->GetLastPoint();; double length = _tgeoMgr->GetStep();; TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();; std::cout << ""track is "" << track << std::endl;; } // while not outside; return 0;; }. EOF. cat >geopatch.cpp <<EOF; #include <TGeoManager.h>; #include <TEnv.h>; #include <TPluginManager.h>; #include <TROOT.h>; #include <iostream>; TVirtualGeoPainter *TGeoManager::GetGeomPainter(); {; if (!fPainter) {; const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");; if (!kind || !*kind){}; //APS: switching back to root fixes it; kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";; if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {; if (h->LoadPlugin() == -1) {; Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);; return nullptr;; }; fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);; if (!fPainter) {; Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);; return nullptr;; }; } else {; Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);; }; }; return fPainter;; }. EOF; ; mkdir build; cd build; cmake ..; make; repro; reproBroken; ```. #### Output from reproducer. ```; Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created; Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3553,Modifiability,plugin,plugin,3553,"side() ) {; TGeoNode * node2 = _tgeoMgr->FindNextBoundaryAndStep( 100, 1) ;; if( !node2 || _tgeoMgr->IsOutside() ) {; break;; }; const double *position = _tgeoMgr->GetCurrentPoint();; const double *previouspos = _tgeoMgr->GetLastPoint();; double length = _tgeoMgr->GetStep();; TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();; std::cout << ""track is "" << track << std::endl;; } // while not outside; return 0;; }. EOF. cat >geopatch.cpp <<EOF; #include <TGeoManager.h>; #include <TEnv.h>; #include <TPluginManager.h>; #include <TROOT.h>; #include <iostream>; TVirtualGeoPainter *TGeoManager::GetGeomPainter(); {; if (!fPainter) {; const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");; if (!kind || !*kind){}; //APS: switching back to root fixes it; kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";; if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {; if (h->LoadPlugin() == -1) {; Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);; return nullptr;; }; fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);; if (!fPainter) {; Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);; return nullptr;; }; } else {; Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);; }; }; return fPainter;; }. EOF; ; mkdir build; cd build; cmake ..; make; repro; reproBroken; ```. #### Output from reproducer. ```; Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created; Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3226,Performance,Load,LoadPlugin,3226,"side() ) {; TGeoNode * node2 = _tgeoMgr->FindNextBoundaryAndStep( 100, 1) ;; if( !node2 || _tgeoMgr->IsOutside() ) {; break;; }; const double *position = _tgeoMgr->GetCurrentPoint();; const double *previouspos = _tgeoMgr->GetLastPoint();; double length = _tgeoMgr->GetStep();; TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();; std::cout << ""track is "" << track << std::endl;; } // while not outside; return 0;; }. EOF. cat >geopatch.cpp <<EOF; #include <TGeoManager.h>; #include <TEnv.h>; #include <TPluginManager.h>; #include <TROOT.h>; #include <iostream>; TVirtualGeoPainter *TGeoManager::GetGeomPainter(); {; if (!fPainter) {; const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");; if (!kind || !*kind){}; //APS: switching back to root fixes it; kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";; if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {; if (h->LoadPlugin() == -1) {; Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);; return nullptr;; }; fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);; if (!fPainter) {; Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);; return nullptr;; }; } else {; Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);; }; }; return fPainter;; }. EOF; ; mkdir build; cd build; cmake ..; make; repro; reproBroken; ```. #### Output from reproducer. ```; Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created; Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3284,Performance,load,load,3284,"side() ) {; TGeoNode * node2 = _tgeoMgr->FindNextBoundaryAndStep( 100, 1) ;; if( !node2 || _tgeoMgr->IsOutside() ) {; break;; }; const double *position = _tgeoMgr->GetCurrentPoint();; const double *previouspos = _tgeoMgr->GetLastPoint();; double length = _tgeoMgr->GetStep();; TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();; std::cout << ""track is "" << track << std::endl;; } // while not outside; return 0;; }. EOF. cat >geopatch.cpp <<EOF; #include <TGeoManager.h>; #include <TEnv.h>; #include <TPluginManager.h>; #include <TROOT.h>; #include <iostream>; TVirtualGeoPainter *TGeoManager::GetGeomPainter(); {; if (!fPainter) {; const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");; if (!kind || !*kind){}; //APS: switching back to root fixes it; kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";; if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {; if (h->LoadPlugin() == -1) {; Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);; return nullptr;; }; fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);; if (!fPainter) {; Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);; return nullptr;; }; } else {; Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);; }; }; return fPainter;; }. EOF; ; mkdir build; cd build; cmake ..; make; repro; reproBroken; ```. #### Output from reproducer. ```; Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created; Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:4215,Performance,cache,cache,4215,"ualGeoPainter"", kind)) {; if (h->LoadPlugin() == -1) {; Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);; return nullptr;; }; fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);; if (!fPainter) {; Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);; return nullptr;; }; } else {; Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);; }; }; return fPainter;; }. EOF; ; mkdir build; cd build; cmake ..; make; repro; reproBroken; ```. #### Output from reproducer. ```; Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created; Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0; Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; track is 0x47f4ce0; track is 0x47f4ce0; Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created; Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0; Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo; Info in <TGeoManager::CloseGeometry>: ----------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:4987,Performance,cache,cache,4987," }. EOF; ; mkdir build; cd build; cmake ..; make; repro; reproBroken; ```. #### Output from reproducer. ```; Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created; Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0; Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; track is 0x47f4ce0; track is 0x47f4ce0; Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created; Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0; Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; track is 0; track is 0; ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version; ROOT Version: 6.33.01; Built for linuxx8664gcc on Aug 04 2024, 22:30:37; From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:244,Testability,test,tests,244,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with; https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f; is breaking tests in DD4hep.; https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash; mkdir repro; cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh; cat > CMakeLists.txt << EOF; cmake_minimum_required( VERSION 3.20 ); project( PatchGeo CXX); set( PROJECT_VERSION_MAJOR 0 ); set( PROJECT_VERSION_MINOR 1 ); set(CMAKE_CXX_STANDARD 20); add_library(geopatch SHARED geopatch.cpp); find_package(ROOT REQUIRED); target_link_libraries(geopatch ROOT::Core ROOT::Geom ); add_executable(repro repro.cpp); target_link_libraries(repro geopatch ); add_executable(reproBroken repro.cpp); target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF; #include ""TGeoManager.h""; #include ""TGeoNode.h""; #include ""TGeoVolume.h""; #include ""TVirtualGeoTrack.h""; #include <iostream>; int main() {; double point1[] = {0.0, 0.0, 0.0};; double point2[] = {0.3, 0.4, 0.5};; auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");; //--- define some materials; TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);; TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);; TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);; TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);; TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., 120.);; _tgeoMgr->SetTopVolume(top);; _tgeoMgr->CloseGeometry();;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16168:758,Integrability,wrap,wrap,758,"*Ported over from JIRA (https://its.cern.ch/jira/browse/ROOT-7704), where there was already lots of discussion. See also the previous attempt in #5541*. ## Original ticket. Is it possibile to use lambda function created in c++ into python?; ```python; ROOT.gROOT.ProcessLine(""auto l = []{cout << 100 << endl;}""); ROOT.l; ```; I get:; ```txt; /home/turra/root/lib/ROOT.py:436: RuntimeWarning: creating converter for unknown type ""(lambda)""; attr = _root.LookupCppEntity( name, PyConfig.ExposeCppMacros ); ```; I see on the contrary that it is possibile to use std::function; ```python; ROOT.gROOT.ProcessLine(""std::function<void()> f = []{cout << 100 << endl;}""); ROOT.f(); ```; the problem is that each lambda function is a different type. Is it possible to wrap them in a std::function automatically?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16168
https://github.com/root-project/root/issues/16168:485,Security,Expose,ExposeCppMacros,485,"*Ported over from JIRA (https://its.cern.ch/jira/browse/ROOT-7704), where there was already lots of discussion. See also the previous attempt in #5541*. ## Original ticket. Is it possibile to use lambda function created in c++ into python?; ```python; ROOT.gROOT.ProcessLine(""auto l = []{cout << 100 << endl;}""); ROOT.l; ```; I get:; ```txt; /home/turra/root/lib/ROOT.py:436: RuntimeWarning: creating converter for unknown type ""(lambda)""; attr = _root.LookupCppEntity( name, PyConfig.ExposeCppMacros ); ```; I see on the contrary that it is possibile to use std::function; ```python; ROOT.gROOT.ProcessLine(""std::function<void()> f = []{cout << 100 << endl;}""); ROOT.f(); ```; the problem is that each lambda function is a different type. Is it possible to wrap them in a std::function automatically?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16168
https://github.com/root-project/root/pull/16169:352,Availability,down,down,352,"I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```; RooRealVar alpha(""alpha"",""alpha"",-5,5);; RooRealVar nom(""nom"",""nom"",10);; RooRealVar up(""up"",""up"",11);; RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});; pi.setAllInterpCodes(5);; TGraph gr;; alpha = -3;; while (alpha.getVal()<3) {; gr.AddPoint(alpha.getVal(),pi.getVal());; alpha.setVal(alpha.getVal()+0.1);; }; gr.Draw(""ALP"");; ```; ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:358,Availability,down,down,358,"I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```; RooRealVar alpha(""alpha"",""alpha"",-5,5);; RooRealVar nom(""nom"",""nom"",10);; RooRealVar up(""up"",""up"",11);; RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});; pi.setAllInterpCodes(5);; TGraph gr;; alpha = -3;; while (alpha.getVal()<3) {; gr.AddPoint(alpha.getVal(),pi.getVal());; alpha.setVal(alpha.getVal()+0.1);; }; gr.Draw(""ALP"");; ```; ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:365,Availability,down,down,365,"I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```; RooRealVar alpha(""alpha"",""alpha"",-5,5);; RooRealVar nom(""nom"",""nom"",10);; RooRealVar up(""up"",""up"",11);; RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});; pi.setAllInterpCodes(5);; TGraph gr;; alpha = -3;; while (alpha.getVal()<3) {; gr.AddPoint(alpha.getVal(),pi.getVal());; alpha.setVal(alpha.getVal()+0.1);; }; gr.Draw(""ALP"");; ```; ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:417,Availability,down,down,417,"I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```; RooRealVar alpha(""alpha"",""alpha"",-5,5);; RooRealVar nom(""nom"",""nom"",10);; RooRealVar up(""up"",""up"",11);; RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});; pi.setAllInterpCodes(5);; TGraph gr;; alpha = -3;; while (alpha.getVal()<3) {; gr.AddPoint(alpha.getVal(),pi.getVal());; alpha.setVal(alpha.getVal()+0.1);; }; gr.Draw(""ALP"");; ```; ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:961,Deployability,patch,patches,961,"I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```; RooRealVar alpha(""alpha"",""alpha"",-5,5);; RooRealVar nom(""nom"",""nom"",10);; RooRealVar up(""up"",""up"",11);; RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});; pi.setAllInterpCodes(5);; TGraph gr;; alpha = -3;; while (alpha.getVal()<3) {; gr.AddPoint(alpha.getVal(),pi.getVal());; alpha.setVal(alpha.getVal()+0.1);; }; gr.Draw(""ALP"");; ```; ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:132,Modifiability,Flexible,FlexibleInterpVar,132,"I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```; RooRealVar alpha(""alpha"",""alpha"",-5,5);; RooRealVar nom(""nom"",""nom"",10);; RooRealVar up(""up"",""up"",11);; RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});; pi.setAllInterpCodes(5);; TGraph gr;; alpha = -3;; while (alpha.getVal()<3) {; gr.AddPoint(alpha.getVal(),pi.getVal());; alpha.setVal(alpha.getVal()+0.1);; }; gr.Draw(""ALP"");; ```; ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:855,Modifiability,Flexible,FlexibleInterpVar,855,"I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```; RooRealVar alpha(""alpha"",""alpha"",-5,5);; RooRealVar nom(""nom"",""nom"",10);; RooRealVar up(""up"",""up"",11);; RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});; pi.setAllInterpCodes(5);; TGraph gr;; alpha = -3;; while (alpha.getVal()<3) {; gr.AddPoint(alpha.getVal(),pi.getVal());; alpha.setVal(alpha.getVal()+0.1);; }; gr.Draw(""ALP"");; ```; ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16171:1373,Availability,error,error,1373,"Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python; import array; import ROOT. def create():; f = ROOT.TFile(""dummy.root"", 'RECREATE'); t = ROOT.TTree(""tree"", 'A tree'); a = array.array('f', [42]); br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):; a[0] = x; t.Fill(). t.Write(); f.Close(). def test(typecode='f'):; f = ROOT.TFile(""dummy.root"", 'READ'); t = f.Get('tree'); a = array.array(typecode, [0]); status = t.SetBranchAddress('a', a); print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):; t.GetEntry(i); print(""a = %s"" % (a[0], )). create(); test(""f""); test(""d""); ```. Before this commit, the output would be like this:; ```txt; Status = 4; a = 21.0; a = 42.0; a = 1337.0; Status = 4; a = 5.442276803e-315; a = 5.483722033e-315; a = 5.690664868e-315; ```. With this commit, you get a clear error:; ```txt; Status = 0; a = 21.0; a = 42.0; a = 1337.0; Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a; Status = -2; a = 0.0; a = 0.0; a = 0.0; ```. Closes the following JIRA ticket:; https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1433,Availability,Error,Error,1433,"Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python; import array; import ROOT. def create():; f = ROOT.TFile(""dummy.root"", 'RECREATE'); t = ROOT.TTree(""tree"", 'A tree'); a = array.array('f', [42]); br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):; a[0] = x; t.Fill(). t.Write(); f.Close(). def test(typecode='f'):; f = ROOT.TFile(""dummy.root"", 'READ'); t = f.Get('tree'); a = array.array(typecode, [0]); status = t.SetBranchAddress('a', a); print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):; t.GetEntry(i); print(""a = %s"" % (a[0], )). create(); test(""f""); test(""d""); ```. Before this commit, the output would be like this:; ```txt; Status = 4; a = 21.0; a = 42.0; a = 1337.0; Status = 4; a = 5.442276803e-315; a = 5.483722033e-315; a = 5.690664868e-315; ```. With this commit, you get a clear error:; ```txt; Status = 0; a = 21.0; a = 42.0; a = 1337.0; Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a; Status = -2; a = 0.0; a = 0.0; a = 0.0; ```. Closes the following JIRA ticket:; https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:156,Integrability,interface,interface,156,"Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python; import array; import ROOT. def create():; f = ROOT.TFile(""dummy.root"", 'RECREATE'); t = ROOT.TTree(""tree"", 'A tree'); a = array.array('f', [42]); br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):; a[0] = x; t.Fill(). t.Write(); f.Close(). def test(typecode='f'):; f = ROOT.TFile(""dummy.root"", 'READ'); t = f.Get('tree'); a = array.array(typecode, [0]); status = t.SetBranchAddress('a', a); print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):; t.GetEntry(i); print(""a = %s"" % (a[0], )). create(); test(""f""); test(""d""); ```. Before this commit, the output would be like this:; ```txt; Status = 4; a = 21.0; a = 42.0; a = 1337.0; Status = 4; a = 5.442276803e-315; a = 5.483722033e-315; a = 5.690664868e-315; ```. With this commit, you get a clear error:; ```txt; Status = 0; a = 21.0; a = 42.0; a = 1337.0; Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a; Status = -2; a = 0.0; a = 0.0; a = 0.0; ```. Closes the following JIRA ticket:; https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:278,Safety,avoid,avoid,278,"Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python; import array; import ROOT. def create():; f = ROOT.TFile(""dummy.root"", 'RECREATE'); t = ROOT.TTree(""tree"", 'A tree'); a = array.array('f', [42]); br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):; a[0] = x; t.Fill(). t.Write(); f.Close(). def test(typecode='f'):; f = ROOT.TFile(""dummy.root"", 'READ'); t = f.Get('tree'); a = array.array(typecode, [0]); status = t.SetBranchAddress('a', a); print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):; t.GetEntry(i); print(""a = %s"" % (a[0], )). create(); test(""f""); test(""d""); ```. Before this commit, the output would be like this:; ```txt; Status = 4; a = 21.0; a = 42.0; a = 1337.0; Status = 4; a = 5.442276803e-315; a = 5.483722033e-315; a = 5.690664868e-315; ```. With this commit, you get a clear error:; ```txt; Status = 0; a = 21.0; a = 42.0; a = 1337.0; Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a; Status = -2; a = 0.0; a = 0.0; a = 0.0; ```. Closes the following JIRA ticket:; https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:857,Testability,test,test,857,"Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python; import array; import ROOT. def create():; f = ROOT.TFile(""dummy.root"", 'RECREATE'); t = ROOT.TTree(""tree"", 'A tree'); a = array.array('f', [42]); br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):; a[0] = x; t.Fill(). t.Write(); f.Close(). def test(typecode='f'):; f = ROOT.TFile(""dummy.root"", 'READ'); t = f.Get('tree'); a = array.array(typecode, [0]); status = t.SetBranchAddress('a', a); print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):; t.GetEntry(i); print(""a = %s"" % (a[0], )). create(); test(""f""); test(""d""); ```. Before this commit, the output would be like this:; ```txt; Status = 4; a = 21.0; a = 42.0; a = 1337.0; Status = 4; a = 5.442276803e-315; a = 5.483722033e-315; a = 5.690664868e-315; ```. With this commit, you get a clear error:; ```txt; Status = 0; a = 21.0; a = 42.0; a = 1337.0; Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a; Status = -2; a = 0.0; a = 0.0; a = 0.0; ```. Closes the following JIRA ticket:; https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1125,Testability,test,test,1125,"Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python; import array; import ROOT. def create():; f = ROOT.TFile(""dummy.root"", 'RECREATE'); t = ROOT.TTree(""tree"", 'A tree'); a = array.array('f', [42]); br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):; a[0] = x; t.Fill(). t.Write(); f.Close(). def test(typecode='f'):; f = ROOT.TFile(""dummy.root"", 'READ'); t = f.Get('tree'); a = array.array(typecode, [0]); status = t.SetBranchAddress('a', a); print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):; t.GetEntry(i); print(""a = %s"" % (a[0], )). create(); test(""f""); test(""d""); ```. Before this commit, the output would be like this:; ```txt; Status = 4; a = 21.0; a = 42.0; a = 1337.0; Status = 4; a = 5.442276803e-315; a = 5.483722033e-315; a = 5.690664868e-315; ```. With this commit, you get a clear error:; ```txt; Status = 0; a = 21.0; a = 42.0; a = 1337.0; Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a; Status = -2; a = 0.0; a = 0.0; a = 0.0; ```. Closes the following JIRA ticket:; https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1136,Testability,test,test,1136,"Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python; import array; import ROOT. def create():; f = ROOT.TFile(""dummy.root"", 'RECREATE'); t = ROOT.TTree(""tree"", 'A tree'); a = array.array('f', [42]); br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):; a[0] = x; t.Fill(). t.Write(); f.Close(). def test(typecode='f'):; f = ROOT.TFile(""dummy.root"", 'READ'); t = f.Get('tree'); a = array.array(typecode, [0]); status = t.SetBranchAddress('a', a); print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):; t.GetEntry(i); print(""a = %s"" % (a[0], )). create(); test(""f""); test(""d""); ```. Before this commit, the output would be like this:; ```txt; Status = 4; a = 21.0; a = 42.0; a = 1337.0; Status = 4; a = 5.442276803e-315; a = 5.483722033e-315; a = 5.690664868e-315; ```. With this commit, you get a clear error:; ```txt; Status = 0; a = 21.0; a = 42.0; a = 1337.0; Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a; Status = -2; a = 0.0; a = 0.0; a = 0.0; ```. Closes the following JIRA ticket:; https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1367,Usability,clear,clear,1367,"Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python; import array; import ROOT. def create():; f = ROOT.TFile(""dummy.root"", 'RECREATE'); t = ROOT.TTree(""tree"", 'A tree'); a = array.array('f', [42]); br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):; a[0] = x; t.Fill(). t.Write(); f.Close(). def test(typecode='f'):; f = ROOT.TFile(""dummy.root"", 'READ'); t = f.Get('tree'); a = array.array(typecode, [0]); status = t.SetBranchAddress('a', a); print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):; t.GetEntry(i); print(""a = %s"" % (a[0], )). create(); test(""f""); test(""d""); ```. Before this commit, the output would be like this:; ```txt; Status = 4; a = 21.0; a = 42.0; a = 1337.0; Status = 4; a = 5.442276803e-315; a = 5.483722033e-315; a = 5.690664868e-315; ```. With this commit, you get a clear error:; ```txt; Status = 0; a = 21.0; a = 42.0; a = 1337.0; Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a; Status = -2; a = 0.0; a = 0.0; a = 0.0; ```. Closes the following JIRA ticket:; https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16172:145,Availability,avail,available,145,* Removal of members; * Removal of base class; * Reordering of members. Some more tests of cases that we probably want to support eventually are available in a branch: https://github.com/hahnjo/root/tree/ntuple-evolution-tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16172
https://github.com/root-project/root/pull/16172:82,Testability,test,tests,82,* Removal of members; * Removal of base class; * Reordering of members. Some more tests of cases that we probably want to support eventually are available in a branch: https://github.com/hahnjo/root/tree/ntuple-evolution-tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16172
https://github.com/root-project/root/pull/16172:221,Testability,test,tests,221,* Removal of members; * Removal of base class; * Reordering of members. Some more tests of cases that we probably want to support eventually are available in a branch: https://github.com/hahnjo/root/tree/ntuple-evolution-tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16172
https://github.com/root-project/root/pull/16173:280,Safety,avoid,avoid,280,"Sometimes the `getxattr` call returns a valid string, but the string is incomplete. Namely, part of the full URL to the file on EOS is missing (usually the filename itself). Workaround by checking for the presence of the filename in the xurl string and in case it is not present, avoid calling TFile::Open.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16173
https://github.com/root-project/root/pull/16174:152,Deployability,update,updated,152,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16163. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16174
https://github.com/root-project/root/pull/16174:122,Testability,test,tested,122,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16163. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16174
https://github.com/root-project/root/pull/16175:89,Availability,redundant,redundant,89,"The implementation of `TPython::Eval()` is fragile, and the funcitonality it provides is redundant. One can always communicate between Python and C++ using variables known to the ROOT interpreter. To make the output-variable-pattern easy to use in `TPython::Exec()`, a new output parameter of type `std::any` is introduced. Closes #12182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16175
https://github.com/root-project/root/pull/16175:156,Modifiability,variab,variables,156,"The implementation of `TPython::Eval()` is fragile, and the funcitonality it provides is redundant. One can always communicate between Python and C++ using variables known to the ROOT interpreter. To make the output-variable-pattern easy to use in `TPython::Exec()`, a new output parameter of type `std::any` is introduced. Closes #12182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16175
https://github.com/root-project/root/pull/16175:216,Modifiability,variab,variable-pattern,216,"The implementation of `TPython::Eval()` is fragile, and the funcitonality it provides is redundant. One can always communicate between Python and C++ using variables known to the ROOT interpreter. To make the output-variable-pattern easy to use in `TPython::Exec()`, a new output parameter of type `std::any` is introduced. Closes #12182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16175
https://github.com/root-project/root/pull/16175:89,Safety,redund,redundant,89,"The implementation of `TPython::Eval()` is fragile, and the funcitonality it provides is redundant. One can always communicate between Python and C++ using variables known to the ROOT interpreter. To make the output-variable-pattern easy to use in `TPython::Exec()`, a new output parameter of type `std::any` is introduced. Closes #12182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16175
https://github.com/root-project/root/pull/16176:1229,Availability,failure,failure,1229,"Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:; ```; struct A {; template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>; void Member(T p) {}; };. template void A::Member(int);; ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:; * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library.; * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:70,Deployability,release,releases,70,"Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:; ```; struct A {; template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>; void Member(T p) {}; };. template void A::Member(int);; ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:; * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library.; * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:112,Deployability,Release,ReleaseNotes,112,"Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:; ```; struct A {; template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>; void Member(T p) {}; };. template void A::Member(int);; ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:; * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library.; * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1072,Deployability,upgrade,upgrade,1072,"Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:; ```; struct A {; template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>; void Member(T p) {}; };. template void A::Member(int);; ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:; * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library.; * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1468,Deployability,configurat,configuration,1468,"Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:; ```; struct A {; template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>; void Member(T p) {}; };. template void A::Member(int);; ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:; * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library.; * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:249,Integrability,depend,depends,249,"Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:; ```; struct A {; template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>; void Member(T p) {}; };. template void A::Member(int);; ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:; * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library.; * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1435,Integrability,depend,depends,1435,"Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:; ```; struct A {; template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>; void Member(T p) {}; };. template void A::Member(int);; ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:; * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library.; * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1468,Modifiability,config,configuration,1468,"Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:; ```; struct A {; template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>; void Member(T p) {}; };. template void A::Member(int);; ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:; * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library.; * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1372,Safety,detect,detect,1372,"Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:; ```; struct A {; template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>; void Member(T p) {}; };. template void A::Member(int);; ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:; * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library.; * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1543,Security,access,access,1543,"Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:; ```; struct A {; template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>; void Member(T p) {}; };. template void A::Member(int);; ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:; * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library.; * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16177:77,Deployability,update,updated,77,"This PR fixes ; - #15919; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:; https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python; import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())""; ```. Gives:; ```; Warning: failed offset calculation between TList and TViewPubFunctions; Type: TViewPubFunctions; ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()); ```; and the warning disappears:. ```; Type: TList; ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:1520,Deployability,update,update,1520,"This PR fixes ; - #15919; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:; https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python; import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())""; ```. Gives:; ```; Warning: failed offset calculation between TList and TViewPubFunctions; Type: TViewPubFunctions; ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()); ```; and the warning disappears:. ```; Type: TList; ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:1212,Performance,perform,performing,1212,"This PR fixes ; - #15919; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:; https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python; import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())""; ```. Gives:; ```; Warning: failed offset calculation between TList and TViewPubFunctions; Type: TViewPubFunctions; ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()); ```; and the warning disappears:. ```; Type: TList; ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:585,Security,expose,exposes,585,"This PR fixes ; - #15919; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:; https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python; import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())""; ```. Gives:; ```; Warning: failed offset calculation between TList and TViewPubFunctions; Type: TViewPubFunctions; ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()); ```; and the warning disappears:. ```; Type: TList; ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:47,Testability,test,tested,47,"This PR fixes ; - #15919; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:; https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python; import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())""; ```. Gives:; ```; Warning: failed offset calculation between TList and TViewPubFunctions; Type: TViewPubFunctions; ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()); ```; and the warning disappears:. ```; Type: TList; ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/issues/16178:1711,Deployability,Install,Installation,1711,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms); 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration); 3. see the memory increase forever. You can test the bug with the following script:; ```; import resource; import ROOT. def print_memory_usage(message):; print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""); histogram_names = open(""histogram_names.txt"").read().splitlines(); print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1""; with ROOT.TFile.Open(fn) as f:; print_memory_usage(""open ROOT file""); for i, histogram_name in enumerate(sorted(histogram_names)):; h = f.Get(histogram_name); if i % 1000 == 0:; print_memory_usage(f""read {i+1} histograms""); print_memory_usage(""read all histograms""); print_memory_usage(""outside context maneger (closing ROOT file)""); ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:902,Integrability,message,message,902,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms); 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration); 3. see the memory increase forever. You can test the bug with the following script:; ```; import resource; import ROOT. def print_memory_usage(message):; print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""); histogram_names = open(""histogram_names.txt"").read().splitlines(); print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1""; with ROOT.TFile.Open(fn) as f:; print_memory_usage(""open ROOT file""); for i, histogram_name in enumerate(sorted(histogram_names)):; h = f.Get(histogram_name); if i % 1000 == 0:; print_memory_usage(f""read {i+1} histograms""); print_memory_usage(""read all histograms""); print_memory_usage(""outside context maneger (closing ROOT file)""); ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:922,Integrability,message,message,922,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms); 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration); 3. see the memory increase forever. You can test the bug with the following script:; ```; import resource; import ROOT. def print_memory_usage(message):; print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""); histogram_names = open(""histogram_names.txt"").read().splitlines(); print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1""; with ROOT.TFile.Open(fn) as f:; print_memory_usage(""open ROOT file""); for i, histogram_name in enumerate(sorted(histogram_names)):; h = f.Get(histogram_name); if i % 1000 == 0:; print_memory_usage(f""read {i+1} histograms""); print_memory_usage(""read all histograms""); print_memory_usage(""outside context maneger (closing ROOT file)""); ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:463,Testability,test,tests,463,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms); 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration); 3. see the memory increase forever. You can test the bug with the following script:; ```; import resource; import ROOT. def print_memory_usage(message):; print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""); histogram_names = open(""histogram_names.txt"").read().splitlines(); print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1""; with ROOT.TFile.Open(fn) as f:; print_memory_usage(""open ROOT file""); for i, histogram_name in enumerate(sorted(histogram_names)):; h = f.Get(histogram_name); if i % 1000 == 0:; print_memory_usage(f""read {i+1} histograms""); print_memory_usage(""read all histograms""); print_memory_usage(""outside context maneger (closing ROOT file)""); ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:803,Testability,test,test,803,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms); 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration); 3. see the memory increase forever. You can test the bug with the following script:; ```; import resource; import ROOT. def print_memory_usage(message):; print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""); histogram_names = open(""histogram_names.txt"").read().splitlines(); print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1""; with ROOT.TFile.Open(fn) as f:; print_memory_usage(""open ROOT file""); for i, histogram_name in enumerate(sorted(histogram_names)):; h = f.Get(histogram_name); if i % 1000 == 0:; print_memory_usage(f""read {i+1} histograms""); print_memory_usage(""read all histograms""); print_memory_usage(""outside context maneger (closing ROOT file)""); ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:414,Usability,simpl,simple,414,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms); 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration); 3. see the memory increase forever. You can test the bug with the following script:; ```; import resource; import ROOT. def print_memory_usage(message):; print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""); histogram_names = open(""histogram_names.txt"").read().splitlines(); print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1""; with ROOT.TFile.Open(fn) as f:; print_memory_usage(""open ROOT file""); for i, histogram_name in enumerate(sorted(histogram_names)):; h = f.Get(histogram_name); if i % 1000 == 0:; print_memory_usage(f""read {i+1} histograms""); print_memory_usage(""read all histograms""); print_memory_usage(""outside context maneger (closing ROOT file)""); ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16182:860,Deployability,Install,Installation,860,### Check duplicate issues. - [X] Checked for duplicates. ### Description. The file . ```root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx```. is missing a. ```#include <iomanip>```. ### Reproducer. checkout out master on latest archlinux and attempt to compile with. ```; cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droostats=on -Dfortran=off -Dhistfactory=on -Dtmva=on -Droottest=on -Droot7=on -Dtesting=on -Dbuiltin_llvm=on -Dbuiltin_tbb=off -Dbuiltin_nlohmannjson=on -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=$(which python) -Dfail-on-missing=on -Doracle=off -Dpythia6=off -Dpythia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_hs3_yml=ON -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON -DxRooFit=on; #-DCMAKE_PREFIX_PATH=/home/cburgard/Physics/root/zmq ; ```. ### ROOT version. master. ### Installation method. source. ### Operating system. archlinux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16182
https://github.com/root-project/root/issues/16184:1202,Deployability,Install,Installation,1202,"Original title: ""TF1 and TFitResultPtr do not serialise correctly pickle, and this is an issue with Python multiprocessing"". ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TF1 and TFitResultPtr do not serialise correctly with pickle. This causes issues with multiprocessing in python as well as distributed execution, e.g. with DistRDF. ### Reproducer. One can see with the reproducer below that:; - The fit succeeds and the result pointer is sane if nothing is pickled and depickled; - The fit fails if the function is pickled and depickled; - The fit result pointer is not sane any more if pickled and then depickled. ```python; import ROOT; import pickle. def SerialiseDeserialise(obj):; return pickle.loads(pickle.dumps(obj)). h = ROOT.TH1F(""myHist"", ""myTitle"", 64, -4, 4); h.FillRandom(""gaus""); f1 = ROOT.TF1(""f1"", ""gaus""); f1_d = SerialiseDeserialise(f1). res = h.Fit(f1, ""S""); print (""Status is "", res.Status()). # Check fit with de-serialised TF1; res = h.Fit(f1_d, ""S""); print (""Status is "", res.Status()). # Check de-serialised result ptr; res_d = SerialiseDeserialise(res); print (""Status is "", res_d.Status()); ```. ### ROOT version. master (I suspect all). ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16184
https://github.com/root-project/root/issues/16184:733,Performance,load,loads,733,"Original title: ""TF1 and TFitResultPtr do not serialise correctly pickle, and this is an issue with Python multiprocessing"". ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TF1 and TFitResultPtr do not serialise correctly with pickle. This causes issues with multiprocessing in python as well as distributed execution, e.g. with DistRDF. ### Reproducer. One can see with the reproducer below that:; - The fit succeeds and the result pointer is sane if nothing is pickled and depickled; - The fit fails if the function is pickled and depickled; - The fit result pointer is not sane any more if pickled and then depickled. ```python; import ROOT; import pickle. def SerialiseDeserialise(obj):; return pickle.loads(pickle.dumps(obj)). h = ROOT.TH1F(""myHist"", ""myTitle"", 64, -4, 4); h.FillRandom(""gaus""); f1 = ROOT.TF1(""f1"", ""gaus""); f1_d = SerialiseDeserialise(f1). res = h.Fit(f1, ""S""); print (""Status is "", res.Status()). # Check fit with de-serialised TF1; res = h.Fit(f1_d, ""S""); print (""Status is "", res.Status()). # Check de-serialised result ptr; res_d = SerialiseDeserialise(res); print (""Status is "", res_d.Status()); ```. ### ROOT version. master (I suspect all). ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16184
https://github.com/root-project/root/pull/16188:56,Testability,test,test,56,The previous cmake boolean expression was disabling the test on all platforms except on Mac 13+. The issue is that in cmake `NOT MACOSX_VERSION VERSION_LESS 13.00` is false if MACOSX_VERSION is not defined,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16188
https://github.com/root-project/root/issues/16189:347,Deployability,configurat,configuration,347,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When setting `TFile.v630forwardCompatibility` to true in `/etc/root/system.rootrc`, there is still confusing behavior and new files can be written without compability. In particular, *new* files are not opened in compatibility mode (largely limiting the usefulness of the configuration flag). ### Reproducer. ```; gEnv->GetValue(""TFile.v630forwardCompatibility"", 0). TFile file1 = TFile(""file1.root"",""CREATE""); file1.TestBit(TFile::k630forwardCompatibility); file1.Close(). TFile file2 = TFile(""file1.root"",""READ""); file2.TestBit(TFile::k630forwardCompatibility); file2.Close(). TFile* file3 = TFile::Open(""file3.root"",""CREATE""); file3->TestBit(TFile::k630forwardCompatibility); file3->Close(). TFile* file4 = TFile::Open(""file3.root"",""READ""); file4->TestBit(TFile::k630forwardCompatibility); file4->Close(); ```; produces; ```; $ root -l ; root [0] gEnv->GetValue(""TFile.v630forwardCompatibility"", 0); (int) 1; root [1] ; root [1] TFile file1 = TFile(""file1.root"",""CREATE""); (TFile &) Name: file1.root Title: ; root [2] file1.TestBit(TFile::k630forwardCompatibility); (bool) false; root [3] file1.Close(); root [4] ; root [4] TFile file2 = TFile(""file1.root"",""READ""); (TFile &) Name: file1.root Title: ; root [5] file2.TestBit(TFile::k630forwardCompatibility); (bool) true; root [6] file2.Close(); root [7] ; root [7] TFile* file3 = TFile::Open(""file3.root"",""CREATE""); (TFile *) 0x5650bd7edba0; root [8] file3->TestBit(TFile::k630forwardCompatibility); (bool) false; root [9] file3->Close(); root [10] ; root [10] TFile* file4 = TFile::Open(""file3.root"",""READ""); (TFile *) 0x5650bd584570; root [11] file4->TestBit(TFile::k630forwardCompatibility); (bool) true; root [12] file4->Close(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16189
https://github.com/root-project/root/issues/16189:2253,Deployability,Install,Installation,2253,"ation flag). ### Reproducer. ```; gEnv->GetValue(""TFile.v630forwardCompatibility"", 0). TFile file1 = TFile(""file1.root"",""CREATE""); file1.TestBit(TFile::k630forwardCompatibility); file1.Close(). TFile file2 = TFile(""file1.root"",""READ""); file2.TestBit(TFile::k630forwardCompatibility); file2.Close(). TFile* file3 = TFile::Open(""file3.root"",""CREATE""); file3->TestBit(TFile::k630forwardCompatibility); file3->Close(). TFile* file4 = TFile::Open(""file3.root"",""READ""); file4->TestBit(TFile::k630forwardCompatibility); file4->Close(); ```; produces; ```; $ root -l ; root [0] gEnv->GetValue(""TFile.v630forwardCompatibility"", 0); (int) 1; root [1] ; root [1] TFile file1 = TFile(""file1.root"",""CREATE""); (TFile &) Name: file1.root Title: ; root [2] file1.TestBit(TFile::k630forwardCompatibility); (bool) false; root [3] file1.Close(); root [4] ; root [4] TFile file2 = TFile(""file1.root"",""READ""); (TFile &) Name: file1.root Title: ; root [5] file2.TestBit(TFile::k630forwardCompatibility); (bool) true; root [6] file2.Close(); root [7] ; root [7] TFile* file3 = TFile::Open(""file3.root"",""CREATE""); (TFile *) 0x5650bd7edba0; root [8] file3->TestBit(TFile::k630forwardCompatibility); (bool) false; root [9] file3->Close(); root [10] ; root [10] TFile* file4 = TFile::Open(""file3.root"",""READ""); (TFile *) 0x5650bd584570; root [11] file4->TestBit(TFile::k630forwardCompatibility); (bool) true; root [12] file4->Close(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 02 2024, 15:34:40 |; | From heads/master@tags/v6-30-02 |; | With g++ (Debian 12.2.0-14) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Spack. ### Operating system. Linux, debian. ### Additional context. Ref. #15006 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16189
https://github.com/root-project/root/issues/16189:347,Modifiability,config,configuration,347,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When setting `TFile.v630forwardCompatibility` to true in `/etc/root/system.rootrc`, there is still confusing behavior and new files can be written without compability. In particular, *new* files are not opened in compatibility mode (largely limiting the usefulness of the configuration flag). ### Reproducer. ```; gEnv->GetValue(""TFile.v630forwardCompatibility"", 0). TFile file1 = TFile(""file1.root"",""CREATE""); file1.TestBit(TFile::k630forwardCompatibility); file1.Close(). TFile file2 = TFile(""file1.root"",""READ""); file2.TestBit(TFile::k630forwardCompatibility); file2.Close(). TFile* file3 = TFile::Open(""file3.root"",""CREATE""); file3->TestBit(TFile::k630forwardCompatibility); file3->Close(). TFile* file4 = TFile::Open(""file3.root"",""READ""); file4->TestBit(TFile::k630forwardCompatibility); file4->Close(); ```; produces; ```; $ root -l ; root [0] gEnv->GetValue(""TFile.v630forwardCompatibility"", 0); (int) 1; root [1] ; root [1] TFile file1 = TFile(""file1.root"",""CREATE""); (TFile &) Name: file1.root Title: ; root [2] file1.TestBit(TFile::k630forwardCompatibility); (bool) false; root [3] file1.Close(); root [4] ; root [4] TFile file2 = TFile(""file1.root"",""READ""); (TFile &) Name: file1.root Title: ; root [5] file2.TestBit(TFile::k630forwardCompatibility); (bool) true; root [6] file2.Close(); root [7] ; root [7] TFile* file3 = TFile::Open(""file3.root"",""CREATE""); (TFile *) 0x5650bd7edba0; root [8] file3->TestBit(TFile::k630forwardCompatibility); (bool) false; root [9] file3->Close(); root [10] ; root [10] TFile* file4 = TFile::Open(""file3.root"",""READ""); (TFile *) 0x5650bd584570; root [11] file4->TestBit(TFile::k630forwardCompatibility); (bool) true; root [12] file4->Close(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16189
https://github.com/root-project/root/issues/16189:492,Testability,Test,TestBit,492,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When setting `TFile.v630forwardCompatibility` to true in `/etc/root/system.rootrc`, there is still confusing behavior and new files can be written without compability. In particular, *new* files are not opened in compatibility mode (largely limiting the usefulness of the configuration flag). ### Reproducer. ```; gEnv->GetValue(""TFile.v630forwardCompatibility"", 0). TFile file1 = TFile(""file1.root"",""CREATE""); file1.TestBit(TFile::k630forwardCompatibility); file1.Close(). TFile file2 = TFile(""file1.root"",""READ""); file2.TestBit(TFile::k630forwardCompatibility); file2.Close(). TFile* file3 = TFile::Open(""file3.root"",""CREATE""); file3->TestBit(TFile::k630forwardCompatibility); file3->Close(). TFile* file4 = TFile::Open(""file3.root"",""READ""); file4->TestBit(TFile::k630forwardCompatibility); file4->Close(); ```; produces; ```; $ root -l ; root [0] gEnv->GetValue(""TFile.v630forwardCompatibility"", 0); (int) 1; root [1] ; root [1] TFile file1 = TFile(""file1.root"",""CREATE""); (TFile &) Name: file1.root Title: ; root [2] file1.TestBit(TFile::k630forwardCompatibility); (bool) false; root [3] file1.Close(); root [4] ; root [4] TFile file2 = TFile(""file1.root"",""READ""); (TFile &) Name: file1.root Title: ; root [5] file2.TestBit(TFile::k630forwardCompatibility); (bool) true; root [6] file2.Close(); root [7] ; root [7] TFile* file3 = TFile::Open(""file3.root"",""CREATE""); (TFile *) 0x5650bd7edba0; root [8] file3->TestBit(TFile::k630forwardCompatibility); (bool) false; root [9] file3->Close(); root [10] ; root [10] TFile* file4 = TFile::Open(""file3.root"",""READ""); (TFile *) 0x5650bd584570; root [11] file4->TestBit(TFile::k630forwardCompatibility); (bool) true; root [12] file4->Close(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16189
https://github.com/root-project/root/issues/16189:597,Testability,Test,TestBit,597,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When setting `TFile.v630forwardCompatibility` to true in `/etc/root/system.rootrc`, there is still confusing behavior and new files can be written without compability. In particular, *new* files are not opened in compatibility mode (largely limiting the usefulness of the configuration flag). ### Reproducer. ```; gEnv->GetValue(""TFile.v630forwardCompatibility"", 0). TFile file1 = TFile(""file1.root"",""CREATE""); file1.TestBit(TFile::k630forwardCompatibility); file1.Close(). TFile file2 = TFile(""file1.root"",""READ""); file2.TestBit(TFile::k630forwardCompatibility); file2.Close(). TFile* file3 = TFile::Open(""file3.root"",""CREATE""); file3->TestBit(TFile::k630forwardCompatibility); file3->Close(). TFile* file4 = TFile::Open(""file3.root"",""READ""); file4->TestBit(TFile::k630forwardCompatibility); file4->Close(); ```; produces; ```; $ root -l ; root [0] gEnv->GetValue(""TFile.v630forwardCompatibility"", 0); (int) 1; root [1] ; root [1] TFile file1 = TFile(""file1.root"",""CREATE""); (TFile &) Name: file1.root Title: ; root [2] file1.TestBit(TFile::k630forwardCompatibility); (bool) false; root [3] file1.Close(); root [4] ; root [4] TFile file2 = TFile(""file1.root"",""READ""); (TFile &) Name: file1.root Title: ; root [5] file2.TestBit(TFile::k630forwardCompatibility); (bool) true; root [6] file2.Close(); root [7] ; root [7] TFile* file3 = TFile::Open(""file3.root"",""CREATE""); (TFile *) 0x5650bd7edba0; root [8] file3->TestBit(TFile::k630forwardCompatibility); (bool) false; root [9] file3->Close(); root [10] ; root [10] TFile* file4 = TFile::Open(""file3.root"",""READ""); (TFile *) 0x5650bd584570; root [11] file4->TestBit(TFile::k630forwardCompatibility); (bool) true; root [12] file4->Close(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16189
https://github.com/root-project/root/issues/16189:712,Testability,Test,TestBit,712,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When setting `TFile.v630forwardCompatibility` to true in `/etc/root/system.rootrc`, there is still confusing behavior and new files can be written without compability. In particular, *new* files are not opened in compatibility mode (largely limiting the usefulness of the configuration flag). ### Reproducer. ```; gEnv->GetValue(""TFile.v630forwardCompatibility"", 0). TFile file1 = TFile(""file1.root"",""CREATE""); file1.TestBit(TFile::k630forwardCompatibility); file1.Close(). TFile file2 = TFile(""file1.root"",""READ""); file2.TestBit(TFile::k630forwardCompatibility); file2.Close(). TFile* file3 = TFile::Open(""file3.root"",""CREATE""); file3->TestBit(TFile::k630forwardCompatibility); file3->Close(). TFile* file4 = TFile::Open(""file3.root"",""READ""); file4->TestBit(TFile::k630forwardCompatibility); file4->Close(); ```; produces; ```; $ root -l ; root [0] gEnv->GetValue(""TFile.v630forwardCompatibility"", 0); (int) 1; root [1] ; root [1] TFile file1 = TFile(""file1.root"",""CREATE""); (TFile &) Name: file1.root Title: ; root [2] file1.TestBit(TFile::k630forwardCompatibility); (bool) false; root [3] file1.Close(); root [4] ; root [4] TFile file2 = TFile(""file1.root"",""READ""); (TFile &) Name: file1.root Title: ; root [5] file2.TestBit(TFile::k630forwardCompatibility); (bool) true; root [6] file2.Close(); root [7] ; root [7] TFile* file3 = TFile::Open(""file3.root"",""CREATE""); (TFile *) 0x5650bd7edba0; root [8] file3->TestBit(TFile::k630forwardCompatibility); (bool) false; root [9] file3->Close(); root [10] ; root [10] TFile* file4 = TFile::Open(""file3.root"",""READ""); (TFile *) 0x5650bd584570; root [11] file4->TestBit(TFile::k630forwardCompatibility); (bool) true; root [12] file4->Close(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16189
https://github.com/root-project/root/issues/16189:826,Testability,Test,TestBit,826,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When setting `TFile.v630forwardCompatibility` to true in `/etc/root/system.rootrc`, there is still confusing behavior and new files can be written without compability. In particular, *new* files are not opened in compatibility mode (largely limiting the usefulness of the configuration flag). ### Reproducer. ```; gEnv->GetValue(""TFile.v630forwardCompatibility"", 0). TFile file1 = TFile(""file1.root"",""CREATE""); file1.TestBit(TFile::k630forwardCompatibility); file1.Close(). TFile file2 = TFile(""file1.root"",""READ""); file2.TestBit(TFile::k630forwardCompatibility); file2.Close(). TFile* file3 = TFile::Open(""file3.root"",""CREATE""); file3->TestBit(TFile::k630forwardCompatibility); file3->Close(). TFile* file4 = TFile::Open(""file3.root"",""READ""); file4->TestBit(TFile::k630forwardCompatibility); file4->Close(); ```; produces; ```; $ root -l ; root [0] gEnv->GetValue(""TFile.v630forwardCompatibility"", 0); (int) 1; root [1] ; root [1] TFile file1 = TFile(""file1.root"",""CREATE""); (TFile &) Name: file1.root Title: ; root [2] file1.TestBit(TFile::k630forwardCompatibility); (bool) false; root [3] file1.Close(); root [4] ; root [4] TFile file2 = TFile(""file1.root"",""READ""); (TFile &) Name: file1.root Title: ; root [5] file2.TestBit(TFile::k630forwardCompatibility); (bool) true; root [6] file2.Close(); root [7] ; root [7] TFile* file3 = TFile::Open(""file3.root"",""CREATE""); (TFile *) 0x5650bd7edba0; root [8] file3->TestBit(TFile::k630forwardCompatibility); (bool) false; root [9] file3->Close(); root [10] ; root [10] TFile* file4 = TFile::Open(""file3.root"",""READ""); (TFile *) 0x5650bd584570; root [11] file4->TestBit(TFile::k630forwardCompatibility); (bool) true; root [12] file4->Close(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16189
https://github.com/root-project/root/issues/16189:1102,Testability,Test,TestBit,1102,"/root/system.rootrc`, there is still confusing behavior and new files can be written without compability. In particular, *new* files are not opened in compatibility mode (largely limiting the usefulness of the configuration flag). ### Reproducer. ```; gEnv->GetValue(""TFile.v630forwardCompatibility"", 0). TFile file1 = TFile(""file1.root"",""CREATE""); file1.TestBit(TFile::k630forwardCompatibility); file1.Close(). TFile file2 = TFile(""file1.root"",""READ""); file2.TestBit(TFile::k630forwardCompatibility); file2.Close(). TFile* file3 = TFile::Open(""file3.root"",""CREATE""); file3->TestBit(TFile::k630forwardCompatibility); file3->Close(). TFile* file4 = TFile::Open(""file3.root"",""READ""); file4->TestBit(TFile::k630forwardCompatibility); file4->Close(); ```; produces; ```; $ root -l ; root [0] gEnv->GetValue(""TFile.v630forwardCompatibility"", 0); (int) 1; root [1] ; root [1] TFile file1 = TFile(""file1.root"",""CREATE""); (TFile &) Name: file1.root Title: ; root [2] file1.TestBit(TFile::k630forwardCompatibility); (bool) false; root [3] file1.Close(); root [4] ; root [4] TFile file2 = TFile(""file1.root"",""READ""); (TFile &) Name: file1.root Title: ; root [5] file2.TestBit(TFile::k630forwardCompatibility); (bool) true; root [6] file2.Close(); root [7] ; root [7] TFile* file3 = TFile::Open(""file3.root"",""CREATE""); (TFile *) 0x5650bd7edba0; root [8] file3->TestBit(TFile::k630forwardCompatibility); (bool) false; root [9] file3->Close(); root [10] ; root [10] TFile* file4 = TFile::Open(""file3.root"",""READ""); (TFile *) 0x5650bd584570; root [11] file4->TestBit(TFile::k630forwardCompatibility); (bool) true; root [12] file4->Close(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 02 2024, 15:34:40 |; | From heads/master@tags/v6-30-02 |; | With g++ (Debian 12.2.0-14) 12.2.0 |; | Try '.help'/'.?', '.demo', '.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16189
https://github.com/root-project/root/issues/16189:1295,Testability,Test,TestBit,1295,"sefulness of the configuration flag). ### Reproducer. ```; gEnv->GetValue(""TFile.v630forwardCompatibility"", 0). TFile file1 = TFile(""file1.root"",""CREATE""); file1.TestBit(TFile::k630forwardCompatibility); file1.Close(). TFile file2 = TFile(""file1.root"",""READ""); file2.TestBit(TFile::k630forwardCompatibility); file2.Close(). TFile* file3 = TFile::Open(""file3.root"",""CREATE""); file3->TestBit(TFile::k630forwardCompatibility); file3->Close(). TFile* file4 = TFile::Open(""file3.root"",""READ""); file4->TestBit(TFile::k630forwardCompatibility); file4->Close(); ```; produces; ```; $ root -l ; root [0] gEnv->GetValue(""TFile.v630forwardCompatibility"", 0); (int) 1; root [1] ; root [1] TFile file1 = TFile(""file1.root"",""CREATE""); (TFile &) Name: file1.root Title: ; root [2] file1.TestBit(TFile::k630forwardCompatibility); (bool) false; root [3] file1.Close(); root [4] ; root [4] TFile file2 = TFile(""file1.root"",""READ""); (TFile &) Name: file1.root Title: ; root [5] file2.TestBit(TFile::k630forwardCompatibility); (bool) true; root [6] file2.Close(); root [7] ; root [7] TFile* file3 = TFile::Open(""file3.root"",""CREATE""); (TFile *) 0x5650bd7edba0; root [8] file3->TestBit(TFile::k630forwardCompatibility); (bool) false; root [9] file3->Close(); root [10] ; root [10] TFile* file4 = TFile::Open(""file3.root"",""READ""); (TFile *) 0x5650bd584570; root [11] file4->TestBit(TFile::k630forwardCompatibility); (bool) true; root [12] file4->Close(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 02 2024, 15:34:40 |; | From heads/master@tags/v6-30-02 |; | With g++ (Debian 12.2.0-14) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Spack. ### Operating system. Linux, debian. ### Addition",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16189
https://github.com/root-project/root/issues/16189:1487,Testability,Test,TestBit,1487,"ation flag). ### Reproducer. ```; gEnv->GetValue(""TFile.v630forwardCompatibility"", 0). TFile file1 = TFile(""file1.root"",""CREATE""); file1.TestBit(TFile::k630forwardCompatibility); file1.Close(). TFile file2 = TFile(""file1.root"",""READ""); file2.TestBit(TFile::k630forwardCompatibility); file2.Close(). TFile* file3 = TFile::Open(""file3.root"",""CREATE""); file3->TestBit(TFile::k630forwardCompatibility); file3->Close(). TFile* file4 = TFile::Open(""file3.root"",""READ""); file4->TestBit(TFile::k630forwardCompatibility); file4->Close(); ```; produces; ```; $ root -l ; root [0] gEnv->GetValue(""TFile.v630forwardCompatibility"", 0); (int) 1; root [1] ; root [1] TFile file1 = TFile(""file1.root"",""CREATE""); (TFile &) Name: file1.root Title: ; root [2] file1.TestBit(TFile::k630forwardCompatibility); (bool) false; root [3] file1.Close(); root [4] ; root [4] TFile file2 = TFile(""file1.root"",""READ""); (TFile &) Name: file1.root Title: ; root [5] file2.TestBit(TFile::k630forwardCompatibility); (bool) true; root [6] file2.Close(); root [7] ; root [7] TFile* file3 = TFile::Open(""file3.root"",""CREATE""); (TFile *) 0x5650bd7edba0; root [8] file3->TestBit(TFile::k630forwardCompatibility); (bool) false; root [9] file3->Close(); root [10] ; root [10] TFile* file4 = TFile::Open(""file3.root"",""READ""); (TFile *) 0x5650bd584570; root [11] file4->TestBit(TFile::k630forwardCompatibility); (bool) true; root [12] file4->Close(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 02 2024, 15:34:40 |; | From heads/master@tags/v6-30-02 |; | With g++ (Debian 12.2.0-14) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Spack. ### Operating system. Linux, debian. ### Additional context. Ref. #15006 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16189
https://github.com/root-project/root/issues/16189:1682,Testability,Test,TestBit,1682,"ation flag). ### Reproducer. ```; gEnv->GetValue(""TFile.v630forwardCompatibility"", 0). TFile file1 = TFile(""file1.root"",""CREATE""); file1.TestBit(TFile::k630forwardCompatibility); file1.Close(). TFile file2 = TFile(""file1.root"",""READ""); file2.TestBit(TFile::k630forwardCompatibility); file2.Close(). TFile* file3 = TFile::Open(""file3.root"",""CREATE""); file3->TestBit(TFile::k630forwardCompatibility); file3->Close(). TFile* file4 = TFile::Open(""file3.root"",""READ""); file4->TestBit(TFile::k630forwardCompatibility); file4->Close(); ```; produces; ```; $ root -l ; root [0] gEnv->GetValue(""TFile.v630forwardCompatibility"", 0); (int) 1; root [1] ; root [1] TFile file1 = TFile(""file1.root"",""CREATE""); (TFile &) Name: file1.root Title: ; root [2] file1.TestBit(TFile::k630forwardCompatibility); (bool) false; root [3] file1.Close(); root [4] ; root [4] TFile file2 = TFile(""file1.root"",""READ""); (TFile &) Name: file1.root Title: ; root [5] file2.TestBit(TFile::k630forwardCompatibility); (bool) true; root [6] file2.Close(); root [7] ; root [7] TFile* file3 = TFile::Open(""file3.root"",""CREATE""); (TFile *) 0x5650bd7edba0; root [8] file3->TestBit(TFile::k630forwardCompatibility); (bool) false; root [9] file3->Close(); root [10] ; root [10] TFile* file4 = TFile::Open(""file3.root"",""READ""); (TFile *) 0x5650bd584570; root [11] file4->TestBit(TFile::k630forwardCompatibility); (bool) true; root [12] file4->Close(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 02 2024, 15:34:40 |; | From heads/master@tags/v6-30-02 |; | With g++ (Debian 12.2.0-14) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Spack. ### Operating system. Linux, debian. ### Additional context. Ref. #15006 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16189
https://github.com/root-project/root/issues/16190:1918,Deployability,Install,Installation,1918,"ues. - [X] Checked for duplicates. ### Description. For a ROOT file structured with top-level directories A and B, it seems that if B contains a subdirectory also named A the objects in that subdirectory may fail being properly merged when using **_hadd_**; instead the outcome is a simple copy of the object in the first source file... The getDirectory() helper in TFilerMerger::MergeOne() indeed apparently favours a lookup based on the directory name and not the full path, which may not always pick the intended directory:; https://github.com/root-project/root/blob/0aa2b6b8760b78dff2cffd873f955735fa1b0ef3/io/io/src/TFileMerger.cxx#L548. ### Reproducer. Save self-contained script below to mwe.cxx and execute with **_root -l -b -q mwe.cxx++_**; ```; #include ""TFileMerger.h""; #include ""TFile.h""; #include ""TH1D.h""; #include <iostream>. void createSrcFile(const char* name); {; TFile f(name, ""RECREATE"");; f.mkdir(""A"", """");; f.mkdir(""B/A"", """");; f.mkdir(""C/D/A"", """");; f.cd(""A"");; TH1D h1(""H1"", ""H1"", 1, 0., 1.);; h1.SetBinContent(1, 1);; h1.Write();; f.cd(""B/A"");; TH1D h2(""H2"", ""H2"", 1, 0., 1.);; h2.SetBinContent(1, 10);; h2.Write();; f.cd(""C/D/A"");; TH1D h3(""H3"", ""H3"", 1, 0., 1.);; h3.SetBinContent(1, 100);; h3.Write();; f.Close();; }. void check(const char* filename, const char* deco); {; TFile f(filename, ""READ"");; std::cout << deco; 	 << f.Get<TH1D>(""A/H1"")->GetBinContent(1); 	 << "" ""; << f.Get<TH1D>(""B/A/H2"")->GetBinContent(1); 	 << "" ""; 	 << f.Get<TH1D>(""C/D/A/H3"")->GetBinContent(1); 	 << std::endl;; f.Close();; }. void mwe(); {; createSrcFile(""src1.root"");; createSrcFile(""src2.root"");; TFileMerger mg;; mg.AddFile(""src1.root"", kFALSE);; mg.AddFile(""src2.root"", kFALSE);; mg.OutputFile(""dest.root"", kTRUE);; mg.Merge();; check(""src1.root"", "" "");; check(""src2.root"", ""+ "");; std::cout << ""------------\n"";; check(""dest.root"", ""= "");; }; ```. ### ROOT version. 6.32.02. ### Installation method. lxplus native. ### Operating system. RHEL 9.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16190
https://github.com/root-project/root/issues/16190:306,Usability,simpl,simple,306,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. For a ROOT file structured with top-level directories A and B, it seems that if B contains a subdirectory also named A the objects in that subdirectory may fail being properly merged when using **_hadd_**; instead the outcome is a simple copy of the object in the first source file... The getDirectory() helper in TFilerMerger::MergeOne() indeed apparently favours a lookup based on the directory name and not the full path, which may not always pick the intended directory:; https://github.com/root-project/root/blob/0aa2b6b8760b78dff2cffd873f955735fa1b0ef3/io/io/src/TFileMerger.cxx#L548. ### Reproducer. Save self-contained script below to mwe.cxx and execute with **_root -l -b -q mwe.cxx++_**; ```; #include ""TFileMerger.h""; #include ""TFile.h""; #include ""TH1D.h""; #include <iostream>. void createSrcFile(const char* name); {; TFile f(name, ""RECREATE"");; f.mkdir(""A"", """");; f.mkdir(""B/A"", """");; f.mkdir(""C/D/A"", """");; f.cd(""A"");; TH1D h1(""H1"", ""H1"", 1, 0., 1.);; h1.SetBinContent(1, 1);; h1.Write();; f.cd(""B/A"");; TH1D h2(""H2"", ""H2"", 1, 0., 1.);; h2.SetBinContent(1, 10);; h2.Write();; f.cd(""C/D/A"");; TH1D h3(""H3"", ""H3"", 1, 0., 1.);; h3.SetBinContent(1, 100);; h3.Write();; f.Close();; }. void check(const char* filename, const char* deco); {; TFile f(filename, ""READ"");; std::cout << deco; 	 << f.Get<TH1D>(""A/H1"")->GetBinContent(1); 	 << "" ""; << f.Get<TH1D>(""B/A/H2"")->GetBinContent(1); 	 << "" ""; 	 << f.Get<TH1D>(""C/D/A/H3"")->GetBinContent(1); 	 << std::endl;; f.Close();; }. void mwe(); {; createSrcFile(""src1.root"");; createSrcFile(""src2.root"");; TFileMerger mg;; mg.AddFile(""src1.root"", kFALSE);; mg.AddFile(""src2.root"", kFALSE);; mg.OutputFile(""dest.root"", kTRUE);; mg.Merge();; check(""src1.root"", "" "");; check(""src2.root"", ""+ "");; std::cout << ""------------\n"";; check(""dest.root"", ""= "");; }; ```. ### ROOT version. 6.32.02. ### Installation method. lxplus native. ### Operating system. RHEL 9.4. ### Additional ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16190
https://github.com/root-project/root/pull/16191:504,Deployability,upgrade,upgrade,504,"We are relying on this since a while, for example for reemission of template symbols. At the moment, we get the incremental extensions because `Preprocessor::enableIncrementalProcessing()` turns them on internally, but this will change with LLVM 18 where this method only controls incremental processing of a single `Preprocessor` object. ---. This should mean no change in `master` with LLVM 16, but given that we already rely on this we should enable the incremental extensions properly outside of the upgrade to LLVM 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16191
https://github.com/root-project/root/pull/16192:697,Deployability,update,updated,697,"# This Pull request:; adds a new ColumnType `Real32Trunc`, that stores a real value as a tightly-packed, IEEE-754 single precision float using less than 32 bits. The missing bits are simply truncated from the mantissa, causing the value to be rounded towards zero.; The valid range of bit widths is `[10, 31]` inclusive. This is the first ColumnType with a variable bit width, therefore it requires some extra handling on the RColumnElement and RField side, but it uses a single type id on disk (`0x1D`) and a single enum value `EColumnType::kReal32Trunc`. The way to use it is by calling the new `SetTruncated(nBits)` method on `RField<float>`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16192
https://github.com/root-project/root/pull/16192:357,Modifiability,variab,variable,357,"# This Pull request:; adds a new ColumnType `Real32Trunc`, that stores a real value as a tightly-packed, IEEE-754 single precision float using less than 32 bits. The missing bits are simply truncated from the mantissa, causing the value to be rounded towards zero.; The valid range of bit widths is `[10, 31]` inclusive. This is the first ColumnType with a variable bit width, therefore it requires some extra handling on the RColumnElement and RField side, but it uses a single type id on disk (`0x1D`) and a single enum value `EColumnType::kReal32Trunc`. The way to use it is by calling the new `SetTruncated(nBits)` method on `RField<float>`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16192
https://github.com/root-project/root/pull/16192:667,Testability,test,tested,667,"# This Pull request:; adds a new ColumnType `Real32Trunc`, that stores a real value as a tightly-packed, IEEE-754 single precision float using less than 32 bits. The missing bits are simply truncated from the mantissa, causing the value to be rounded towards zero.; The valid range of bit widths is `[10, 31]` inclusive. This is the first ColumnType with a variable bit width, therefore it requires some extra handling on the RColumnElement and RField side, but it uses a single type id on disk (`0x1D`) and a single enum value `EColumnType::kReal32Trunc`. The way to use it is by calling the new `SetTruncated(nBits)` method on `RField<float>`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16192
https://github.com/root-project/root/pull/16192:183,Usability,simpl,simply,183,"# This Pull request:; adds a new ColumnType `Real32Trunc`, that stores a real value as a tightly-packed, IEEE-754 single precision float using less than 32 bits. The missing bits are simply truncated from the mantissa, causing the value to be rounded towards zero.; The valid range of bit widths is `[10, 31]` inclusive. This is the first ColumnType with a variable bit width, therefore it requires some extra handling on the RColumnElement and RField side, but it uses a single type id on disk (`0x1D`) and a single enum value `EColumnType::kReal32Trunc`. The way to use it is by calling the new `SetTruncated(nBits)` method on `RField<float>`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16192
https://github.com/root-project/root/pull/16197:63,Testability,test,tested,63,Fixes https://github.com/root-project/root/issues/15315. - [X] tested changes locally. This enables the failing example in the manual with `ROOT.Math.IMultiGenFunction` that failed due to an invalid zero initialization of an `unsigned int`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16197
https://github.com/root-project/root/pull/16198:143,Deployability,integrat,integration,143,therewith avoiding memory hogging because of the attached TTreeChaches. This code has been written by David Smith and minimally edited for its integration in root.; See sister PR in roottest: https://github.com/root-project/roottest/pull/1161. This PR fixes [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16198
https://github.com/root-project/root/pull/16198:143,Integrability,integrat,integration,143,therewith avoiding memory hogging because of the attached TTreeChaches. This code has been written by David Smith and minimally edited for its integration in root.; See sister PR in roottest: https://github.com/root-project/roottest/pull/1161. This PR fixes [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16198
https://github.com/root-project/root/pull/16198:10,Safety,avoid,avoiding,10,therewith avoiding memory hogging because of the attached TTreeChaches. This code has been written by David Smith and minimally edited for its integration in root.; See sister PR in roottest: https://github.com/root-project/roottest/pull/1161. This PR fixes [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16198
https://github.com/root-project/root/pull/16199:63,Testability,test,tested,63,Fixes https://github.com/root-project/root/issues/15315. - [X] tested changes locally. This enables the failing example in the manual with `ROOT.Math.IMultiGenFunction` that failed due to an invalid zero initialization of an `unsigned int`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16199
https://github.com/root-project/root/pull/16200:45,Deployability,release,release,45,"The `np.float_` was removed in the NumPy 2.0 release. One should use `np.float64` instead, which is already in the same dictionary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16200
https://github.com/root-project/root/issues/16201:571,Availability,error,error-capturing,571,"We currently don't support numba 0.60.0 yet:; https://github.com/root-project/root/blob/master/requirements.txt#L17. One can see the problem when going into `roottest/python/numba` and running the test there:; ```bash; python PyROOT_numbatests.py; ```. Output with ROOT master and numba 0.59, where it's only a warning:; ```txt; PyROOT_numbatests.py::TestClasNumba::test03_inheritance; /home/rembserj/spaces/master/root/src/root/roottest/python/numba/PyROOT_numbatests.py:107: NumbaPendingDeprecationWarning: Code using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors; Exception origin:; File ""/home/rembserj/spaces/master/install/lib/root/cppyy/numba_ext.py"", line 349, in generic_resolve; f = typ._scope.__dict__[attr]; ~~~~~~~~~~~~~~~~~~~^^^^^^. return obj.get_one(). -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html; ```. Supporting numba 0.60.0 would be nice, because 0.59.0 doesn't support NumPy 2 yet. Thus, our current environment falls back to NumPy 1 and we are lacking NumPy 2 test support.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16201
https://github.com/root-project/root/issues/16201:786,Availability,error,errors,786,"We currently don't support numba 0.60.0 yet:; https://github.com/root-project/root/blob/master/requirements.txt#L17. One can see the problem when going into `roottest/python/numba` and running the test there:; ```bash; python PyROOT_numbatests.py; ```. Output with ROOT master and numba 0.59, where it's only a warning:; ```txt; PyROOT_numbatests.py::TestClasNumba::test03_inheritance; /home/rembserj/spaces/master/root/src/root/roottest/python/numba/PyROOT_numbatests.py:107: NumbaPendingDeprecationWarning: Code using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors; Exception origin:; File ""/home/rembserj/spaces/master/install/lib/root/cppyy/numba_ext.py"", line 349, in generic_resolve; f = typ._scope.__dict__[attr]; ~~~~~~~~~~~~~~~~~~~^^^^^^. return obj.get_one(). -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html; ```. Supporting numba 0.60.0 would be nice, because 0.59.0 doesn't support NumPy 2 yet. Thus, our current environment falls back to NumPy 1 and we are lacking NumPy 2 test support.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16201
https://github.com/root-project/root/issues/16201:656,Deployability,release,release,656,"We currently don't support numba 0.60.0 yet:; https://github.com/root-project/root/blob/master/requirements.txt#L17. One can see the problem when going into `roottest/python/numba` and running the test there:; ```bash; python PyROOT_numbatests.py; ```. Output with ROOT master and numba 0.59, where it's only a warning:; ```txt; PyROOT_numbatests.py::TestClasNumba::test03_inheritance; /home/rembserj/spaces/master/root/src/root/roottest/python/numba/PyROOT_numbatests.py:107: NumbaPendingDeprecationWarning: Code using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors; Exception origin:; File ""/home/rembserj/spaces/master/install/lib/root/cppyy/numba_ext.py"", line 349, in generic_resolve; f = typ._scope.__dict__[attr]; ~~~~~~~~~~~~~~~~~~~^^^^^^. return obj.get_one(). -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html; ```. Supporting numba 0.60.0 would be nice, because 0.59.0 doesn't support NumPy 2 yet. Thus, our current environment falls back to NumPy 1 and we are lacking NumPy 2 test support.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16201
https://github.com/root-project/root/issues/16201:848,Deployability,install,install,848,"We currently don't support numba 0.60.0 yet:; https://github.com/root-project/root/blob/master/requirements.txt#L17. One can see the problem when going into `roottest/python/numba` and running the test there:; ```bash; python PyROOT_numbatests.py; ```. Output with ROOT master and numba 0.59, where it's only a warning:; ```txt; PyROOT_numbatests.py::TestClasNumba::test03_inheritance; /home/rembserj/spaces/master/root/src/root/roottest/python/numba/PyROOT_numbatests.py:107: NumbaPendingDeprecationWarning: Code using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors; Exception origin:; File ""/home/rembserj/spaces/master/install/lib/root/cppyy/numba_ext.py"", line 349, in generic_resolve; f = typ._scope.__dict__[attr]; ~~~~~~~~~~~~~~~~~~~^^^^^^. return obj.get_one(). -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html; ```. Supporting numba 0.60.0 would be nice, because 0.59.0 doesn't support NumPy 2 yet. Thus, our current environment falls back to NumPy 1 and we are lacking NumPy 2 test support.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16201
https://github.com/root-project/root/issues/16201:546,Integrability,depend,depending,546,"We currently don't support numba 0.60.0 yet:; https://github.com/root-project/root/blob/master/requirements.txt#L17. One can see the problem when going into `roottest/python/numba` and running the test there:; ```bash; python PyROOT_numbatests.py; ```. Output with ROOT master and numba 0.59, where it's only a warning:; ```txt; PyROOT_numbatests.py::TestClasNumba::test03_inheritance; /home/rembserj/spaces/master/root/src/root/roottest/python/numba/PyROOT_numbatests.py:107: NumbaPendingDeprecationWarning: Code using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors; Exception origin:; File ""/home/rembserj/spaces/master/install/lib/root/cppyy/numba_ext.py"", line 349, in generic_resolve; f = typ._scope.__dict__[attr]; ~~~~~~~~~~~~~~~~~~~^^^^^^. return obj.get_one(). -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html; ```. Supporting numba 0.60.0 would be nice, because 0.59.0 doesn't support NumPy 2 yet. Thus, our current environment falls back to NumPy 1 and we are lacking NumPy 2 test support.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16201
https://github.com/root-project/root/issues/16201:197,Testability,test,test,197,"We currently don't support numba 0.60.0 yet:; https://github.com/root-project/root/blob/master/requirements.txt#L17. One can see the problem when going into `roottest/python/numba` and running the test there:; ```bash; python PyROOT_numbatests.py; ```. Output with ROOT master and numba 0.59, where it's only a warning:; ```txt; PyROOT_numbatests.py::TestClasNumba::test03_inheritance; /home/rembserj/spaces/master/root/src/root/roottest/python/numba/PyROOT_numbatests.py:107: NumbaPendingDeprecationWarning: Code using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors; Exception origin:; File ""/home/rembserj/spaces/master/install/lib/root/cppyy/numba_ext.py"", line 349, in generic_resolve; f = typ._scope.__dict__[attr]; ~~~~~~~~~~~~~~~~~~~^^^^^^. return obj.get_one(). -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html; ```. Supporting numba 0.60.0 would be nice, because 0.59.0 doesn't support NumPy 2 yet. Thus, our current environment falls back to NumPy 1 and we are lacking NumPy 2 test support.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16201
https://github.com/root-project/root/issues/16201:351,Testability,Test,TestClasNumba,351,"We currently don't support numba 0.60.0 yet:; https://github.com/root-project/root/blob/master/requirements.txt#L17. One can see the problem when going into `roottest/python/numba` and running the test there:; ```bash; python PyROOT_numbatests.py; ```. Output with ROOT master and numba 0.59, where it's only a warning:; ```txt; PyROOT_numbatests.py::TestClasNumba::test03_inheritance; /home/rembserj/spaces/master/root/src/root/roottest/python/numba/PyROOT_numbatests.py:107: NumbaPendingDeprecationWarning: Code using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors; Exception origin:; File ""/home/rembserj/spaces/master/install/lib/root/cppyy/numba_ext.py"", line 349, in generic_resolve; f = typ._scope.__dict__[attr]; ~~~~~~~~~~~~~~~~~~~^^^^^^. return obj.get_one(). -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html; ```. Supporting numba 0.60.0 would be nice, because 0.59.0 doesn't support NumPy 2 yet. Thus, our current environment falls back to NumPy 1 and we are lacking NumPy 2 test support.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16201
https://github.com/root-project/root/issues/16201:1236,Testability,test,test,1236,"We currently don't support numba 0.60.0 yet:; https://github.com/root-project/root/blob/master/requirements.txt#L17. One can see the problem when going into `roottest/python/numba` and running the test there:; ```bash; python PyROOT_numbatests.py; ```. Output with ROOT master and numba 0.59, where it's only a warning:; ```txt; PyROOT_numbatests.py::TestClasNumba::test03_inheritance; /home/rembserj/spaces/master/root/src/root/roottest/python/numba/PyROOT_numbatests.py:107: NumbaPendingDeprecationWarning: Code using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors; Exception origin:; File ""/home/rembserj/spaces/master/install/lib/root/cppyy/numba_ext.py"", line 349, in generic_resolve; f = typ._scope.__dict__[attr]; ~~~~~~~~~~~~~~~~~~~^^^^^^. return obj.get_one(). -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html; ```. Supporting numba 0.60.0 would be nice, because 0.59.0 doesn't support NumPy 2 yet. Thus, our current environment falls back to NumPy 1 and we are lacking NumPy 2 test support.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16201
https://github.com/root-project/root/pull/16205:263,Availability,echo,echo,263,"# This Pull request:. ## Changes or fixes:; Currently this is the behaviour; ```; ~> root -b -q -l NotExistingFile.C; Warning in <TApplication::GetOptions>: macro pippo.C not found; root: unrecognized option 'pippo.C'; Try 'root --help' for more information.; ~> echo $?; 0; ```; the root executable simply warns about the file not existing but returns 0, as everything went well. This has several downsides, including not protecting us from our typos when adding tests to the suite (see original JIRA issue). ## Checklist:. - [v] tested changes locally; - [v] updated the docs (if necessary). This PR fixes [ROOT-9365](https://its.cern.ch/jira/browse/ROOT-9395)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16205
https://github.com/root-project/root/pull/16205:398,Availability,down,downsides,398,"# This Pull request:. ## Changes or fixes:; Currently this is the behaviour; ```; ~> root -b -q -l NotExistingFile.C; Warning in <TApplication::GetOptions>: macro pippo.C not found; root: unrecognized option 'pippo.C'; Try 'root --help' for more information.; ~> echo $?; 0; ```; the root executable simply warns about the file not existing but returns 0, as everything went well. This has several downsides, including not protecting us from our typos when adding tests to the suite (see original JIRA issue). ## Checklist:. - [v] tested changes locally; - [v] updated the docs (if necessary). This PR fixes [ROOT-9365](https://its.cern.ch/jira/browse/ROOT-9395)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16205
https://github.com/root-project/root/pull/16205:561,Deployability,update,updated,561,"# This Pull request:. ## Changes or fixes:; Currently this is the behaviour; ```; ~> root -b -q -l NotExistingFile.C; Warning in <TApplication::GetOptions>: macro pippo.C not found; root: unrecognized option 'pippo.C'; Try 'root --help' for more information.; ~> echo $?; 0; ```; the root executable simply warns about the file not existing but returns 0, as everything went well. This has several downsides, including not protecting us from our typos when adding tests to the suite (see original JIRA issue). ## Checklist:. - [v] tested changes locally; - [v] updated the docs (if necessary). This PR fixes [ROOT-9365](https://its.cern.ch/jira/browse/ROOT-9395)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16205
https://github.com/root-project/root/pull/16205:464,Testability,test,tests,464,"# This Pull request:. ## Changes or fixes:; Currently this is the behaviour; ```; ~> root -b -q -l NotExistingFile.C; Warning in <TApplication::GetOptions>: macro pippo.C not found; root: unrecognized option 'pippo.C'; Try 'root --help' for more information.; ~> echo $?; 0; ```; the root executable simply warns about the file not existing but returns 0, as everything went well. This has several downsides, including not protecting us from our typos when adding tests to the suite (see original JIRA issue). ## Checklist:. - [v] tested changes locally; - [v] updated the docs (if necessary). This PR fixes [ROOT-9365](https://its.cern.ch/jira/browse/ROOT-9395)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16205
https://github.com/root-project/root/pull/16205:531,Testability,test,tested,531,"# This Pull request:. ## Changes or fixes:; Currently this is the behaviour; ```; ~> root -b -q -l NotExistingFile.C; Warning in <TApplication::GetOptions>: macro pippo.C not found; root: unrecognized option 'pippo.C'; Try 'root --help' for more information.; ~> echo $?; 0; ```; the root executable simply warns about the file not existing but returns 0, as everything went well. This has several downsides, including not protecting us from our typos when adding tests to the suite (see original JIRA issue). ## Checklist:. - [v] tested changes locally; - [v] updated the docs (if necessary). This PR fixes [ROOT-9365](https://its.cern.ch/jira/browse/ROOT-9395)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16205
https://github.com/root-project/root/pull/16205:300,Usability,simpl,simply,300,"# This Pull request:. ## Changes or fixes:; Currently this is the behaviour; ```; ~> root -b -q -l NotExistingFile.C; Warning in <TApplication::GetOptions>: macro pippo.C not found; root: unrecognized option 'pippo.C'; Try 'root --help' for more information.; ~> echo $?; 0; ```; the root executable simply warns about the file not existing but returns 0, as everything went well. This has several downsides, including not protecting us from our typos when adding tests to the suite (see original JIRA issue). ## Checklist:. - [v] tested changes locally; - [v] updated the docs (if necessary). This PR fixes [ROOT-9365](https://its.cern.ch/jira/browse/ROOT-9395)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16205
https://github.com/root-project/root/pull/16208:159,Availability,error,errors,159,"# This Pull request:. ## Changes or fixes:. Sets the verbosity level of rootcling in ACLiC to the default, therewith printing also warnings and not only fatal errors. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes [ROOT-10975](https://its.cern.ch/jira/browse/ROOT-10975). Linked roottest PR https://github.com/root-project/roottest/pull/1168 and https://github.com/root-project/roottest/pull/1169, that fixes a test which becomes broken once the verbosity is increased because some unused rules start to generate warnings. The rules are unused simply because the name of some template instantiations are not spelled correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16208
https://github.com/root-project/root/pull/16208:218,Deployability,update,updated,218,"# This Pull request:. ## Changes or fixes:. Sets the verbosity level of rootcling in ACLiC to the default, therewith printing also warnings and not only fatal errors. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes [ROOT-10975](https://its.cern.ch/jira/browse/ROOT-10975). Linked roottest PR https://github.com/root-project/roottest/pull/1168 and https://github.com/root-project/roottest/pull/1169, that fixes a test which becomes broken once the verbosity is increased because some unused rules start to generate warnings. The rules are unused simply because the name of some template instantiations are not spelled correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16208
https://github.com/root-project/root/pull/16208:188,Testability,test,tested,188,"# This Pull request:. ## Changes or fixes:. Sets the verbosity level of rootcling in ACLiC to the default, therewith printing also warnings and not only fatal errors. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes [ROOT-10975](https://its.cern.ch/jira/browse/ROOT-10975). Linked roottest PR https://github.com/root-project/roottest/pull/1168 and https://github.com/root-project/roottest/pull/1169, that fixes a test which becomes broken once the verbosity is increased because some unused rules start to generate warnings. The rules are unused simply because the name of some template instantiations are not spelled correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16208
https://github.com/root-project/root/pull/16208:462,Testability,test,test,462,"# This Pull request:. ## Changes or fixes:. Sets the verbosity level of rootcling in ACLiC to the default, therewith printing also warnings and not only fatal errors. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes [ROOT-10975](https://its.cern.ch/jira/browse/ROOT-10975). Linked roottest PR https://github.com/root-project/roottest/pull/1168 and https://github.com/root-project/roottest/pull/1169, that fixes a test which becomes broken once the verbosity is increased because some unused rules start to generate warnings. The rules are unused simply because the name of some template instantiations are not spelled correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16208
https://github.com/root-project/root/pull/16208:595,Usability,simpl,simply,595,"# This Pull request:. ## Changes or fixes:. Sets the verbosity level of rootcling in ACLiC to the default, therewith printing also warnings and not only fatal errors. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes [ROOT-10975](https://its.cern.ch/jira/browse/ROOT-10975). Linked roottest PR https://github.com/root-project/roottest/pull/1168 and https://github.com/root-project/roottest/pull/1169, that fixes a test which becomes broken once the verbosity is increased because some unused rules start to generate warnings. The rules are unused simply because the name of some template instantiations are not spelled correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16208
https://github.com/root-project/root/pull/16209:245,Availability,error,error,245,This reverts commit d6b623fff5a6d47ae66ec6db09dad26e987deb4e to no longer restrict numba versions to <0.6 which also unlocks support for numpy 2.0. The corresponding PR in rootest (https://github.com/root-project/roottest/pull/1162) updates the error style in the numba test to be backwards compatible. The numpy version is temporarily locked to below 2.0 to prevent both upgrades at the same time. - [X] tested changes locally. Fixes https://github.com/root-project/root/issues/16201,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16209
https://github.com/root-project/root/pull/16209:233,Deployability,update,updates,233,This reverts commit d6b623fff5a6d47ae66ec6db09dad26e987deb4e to no longer restrict numba versions to <0.6 which also unlocks support for numpy 2.0. The corresponding PR in rootest (https://github.com/root-project/roottest/pull/1162) updates the error style in the numba test to be backwards compatible. The numpy version is temporarily locked to below 2.0 to prevent both upgrades at the same time. - [X] tested changes locally. Fixes https://github.com/root-project/root/issues/16201,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16209
https://github.com/root-project/root/pull/16209:372,Deployability,upgrade,upgrades,372,This reverts commit d6b623fff5a6d47ae66ec6db09dad26e987deb4e to no longer restrict numba versions to <0.6 which also unlocks support for numpy 2.0. The corresponding PR in rootest (https://github.com/root-project/roottest/pull/1162) updates the error style in the numba test to be backwards compatible. The numpy version is temporarily locked to below 2.0 to prevent both upgrades at the same time. - [X] tested changes locally. Fixes https://github.com/root-project/root/issues/16201,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16209
https://github.com/root-project/root/pull/16209:270,Testability,test,test,270,This reverts commit d6b623fff5a6d47ae66ec6db09dad26e987deb4e to no longer restrict numba versions to <0.6 which also unlocks support for numpy 2.0. The corresponding PR in rootest (https://github.com/root-project/roottest/pull/1162) updates the error style in the numba test to be backwards compatible. The numpy version is temporarily locked to below 2.0 to prevent both upgrades at the same time. - [X] tested changes locally. Fixes https://github.com/root-project/root/issues/16201,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16209
https://github.com/root-project/root/pull/16209:405,Testability,test,tested,405,This reverts commit d6b623fff5a6d47ae66ec6db09dad26e987deb4e to no longer restrict numba versions to <0.6 which also unlocks support for numpy 2.0. The corresponding PR in rootest (https://github.com/root-project/roottest/pull/1162) updates the error style in the numba test to be backwards compatible. The numpy version is temporarily locked to below 2.0 to prevent both upgrades at the same time. - [X] tested changes locally. Fixes https://github.com/root-project/root/issues/16201,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16209
https://github.com/root-project/root/issues/16210:116,Availability,down,downcasting,116,"It would greatly help memory safety if ROOT could use more smart pointers in its interfaces. However, the automatic downcasting of returned values is only working for raw pointers. It should work for smart pointers as well. For example, right now this doesn't work:; ```Python; class ClassA {; public:. ClassDef(ClassA, 0);; };. class ClassB : public ClassA {; public:; void helloB() {}. ClassDef(ClassB, 0);; };. ClassA *fooRawPtr() { return new ClassB{}; }. std::unique_ptr<ClassA> fooUniquePtr() { return std::make_unique<ClassB>(); }; ```; Output:; ```txt; <class cppyy.gbl.ClassB at 0x5e1ddf85ed20>; Traceback (most recent call last):; File ""/home/rembserj/repro.py"", line 30, in <module>; out_2.helloB(); ^^^^^^^^^^^^; AttributeError: 'ClassA' object has no attribute 'helloB'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16210
https://github.com/root-project/root/issues/16210:81,Integrability,interface,interfaces,81,"It would greatly help memory safety if ROOT could use more smart pointers in its interfaces. However, the automatic downcasting of returned values is only working for raw pointers. It should work for smart pointers as well. For example, right now this doesn't work:; ```Python; class ClassA {; public:. ClassDef(ClassA, 0);; };. class ClassB : public ClassA {; public:; void helloB() {}. ClassDef(ClassB, 0);; };. ClassA *fooRawPtr() { return new ClassB{}; }. std::unique_ptr<ClassA> fooUniquePtr() { return std::make_unique<ClassB>(); }; ```; Output:; ```txt; <class cppyy.gbl.ClassB at 0x5e1ddf85ed20>; Traceback (most recent call last):; File ""/home/rembserj/repro.py"", line 30, in <module>; out_2.helloB(); ^^^^^^^^^^^^; AttributeError: 'ClassA' object has no attribute 'helloB'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16210
https://github.com/root-project/root/issues/16210:29,Safety,safe,safety,29,"It would greatly help memory safety if ROOT could use more smart pointers in its interfaces. However, the automatic downcasting of returned values is only working for raw pointers. It should work for smart pointers as well. For example, right now this doesn't work:; ```Python; class ClassA {; public:. ClassDef(ClassA, 0);; };. class ClassB : public ClassA {; public:; void helloB() {}. ClassDef(ClassB, 0);; };. ClassA *fooRawPtr() { return new ClassB{}; }. std::unique_ptr<ClassA> fooUniquePtr() { return std::make_unique<ClassB>(); }; ```; Output:; ```txt; <class cppyy.gbl.ClassB at 0x5e1ddf85ed20>; Traceback (most recent call last):; File ""/home/rembserj/repro.py"", line 30, in <module>; out_2.helloB(); ^^^^^^^^^^^^; AttributeError: 'ClassA' object has no attribute 'helloB'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16210
https://github.com/root-project/root/pull/16211:301,Deployability,update,updated,301,"# This Pull request:. Converts ROOT.modulemap from a single file to a set of files where ROOT.modulemap includes per-component modulemaps, this will allow to implement packaging. ## Changes or fixes:. CMakeLists.txt, cmake/modules/RootMacros.cmake. ## Checklist:. - [ X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16211
https://github.com/root-project/root/pull/16211:271,Testability,test,tested,271,"# This Pull request:. Converts ROOT.modulemap from a single file to a set of files where ROOT.modulemap includes per-component modulemaps, this will allow to implement packaging. ## Changes or fixes:. CMakeLists.txt, cmake/modules/RootMacros.cmake. ## Checklist:. - [ X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16211
https://github.com/root-project/root/pull/16212:17,Testability,test,tests,17,Check which unit tests are actually failing to understand the problem with the string converters in CPyCppyy master.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16212
https://github.com/root-project/root/issues/16219:131,Deployability,upgrade,upgrade,131,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Currently ROOT does not build on macos15 beta due to an upgrade of XCode that changed the module maps. ### Reproducer. Building root on macos15 beta. ### ROOT version. master, 6.32 (the ones that support macos15 beta). ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16219
https://github.com/root-project/root/issues/16219:298,Deployability,Install,Installation,298,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Currently ROOT does not build on macos15 beta due to an upgrade of XCode that changed the module maps. ### Reproducer. Building root on macos15 beta. ### ROOT version. master, 6.32 (the ones that support macos15 beta). ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16219
https://github.com/root-project/root/issues/16227:66,Availability,down,download,66,Is It 'just me' or does the master (intentionally ?) no longer re-download the tar files for the builtins. I.e.:. ```; cmake; ninja; rm -rf *-prefix builtins; ninja; ```; used to work and does not work anymore (and no I don't remember when was the last time I saw it worked).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16227
https://github.com/root-project/root/pull/16228:478,Deployability,update,updated,478,# This Pull request:. ## Changes or fixes:. Python doesn't understand soversions and they don't make sense here anyway since nothing is linked against the bindings. Thus `ROOT_LIBRARY_PROPERTIES` is split into `ROOT_LIBRARY_PROPERTIES_NOVER` that just contains the suffix and prefix and R`OOT_LIBRARY_PROPERTIES` that contains the (so)version if enabled. Additionally `IMPORT_PREFIX` is dropped which doesn't have an effect. ## Checklist:. - [x] tested changes locally; - ~~[ ] updated the docs (if necessary)~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16228
https://github.com/root-project/root/pull/16228:446,Testability,test,tested,446,# This Pull request:. ## Changes or fixes:. Python doesn't understand soversions and they don't make sense here anyway since nothing is linked against the bindings. Thus `ROOT_LIBRARY_PROPERTIES` is split into `ROOT_LIBRARY_PROPERTIES_NOVER` that just contains the suffix and prefix and R`OOT_LIBRARY_PROPERTIES` that contains the (so)version if enabled. Additionally `IMPORT_PREFIX` is dropped which doesn't have an effect. ## Checklist:. - [x] tested changes locally; - ~~[ ] updated the docs (if necessary)~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16228
https://github.com/root-project/root/issues/16229:917,Deployability,patch,patch,917,"### Feature description. Currently, ROOT loads fonts via the `Root.TTFontPath`. This makes a lot of sense from a ROOT maintainer perspective (simply ship all used fonts), but is a roadblock for a distribution maintainer (embedded files are usually not wished if not otherwise possible). Thus, it would be nice if ROOT would _additionally_ support [fontconfig](https://www.freedesktop.org/wiki/Software/fontconfig/), which is the default way to find fonts on Linux. In particular, the font interface should first look into `Root.TTFontPath` and then fallback to fontconfig. This means that the font-finding interface needs two parameters: the font file name and a fontconfig name as fallback. The current font interface is a bit all over the place. There is at least `graf2d/graf/src/TTF.cxx`, `graf3d/gl/src/TGLFontManager.cxx` and `graf3d/gl/src/TGLText.cxx` that handle font names, probably more. Fedora uses [this patch](https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-fontconfig.patch) from @ellert to get rid of the non-free MS fonts (see also https://github.com/root-project/root/issues/8357), which is a good start but the patch is not really feasible upstream due to Windows/OSX support. /cc @Axel-Naumann @dpiparo. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16229
https://github.com/root-project/root/issues/16229:995,Deployability,patch,patch,995,"### Feature description. Currently, ROOT loads fonts via the `Root.TTFontPath`. This makes a lot of sense from a ROOT maintainer perspective (simply ship all used fonts), but is a roadblock for a distribution maintainer (embedded files are usually not wished if not otherwise possible). Thus, it would be nice if ROOT would _additionally_ support [fontconfig](https://www.freedesktop.org/wiki/Software/fontconfig/), which is the default way to find fonts on Linux. In particular, the font interface should first look into `Root.TTFontPath` and then fallback to fontconfig. This means that the font-finding interface needs two parameters: the font file name and a fontconfig name as fallback. The current font interface is a bit all over the place. There is at least `graf2d/graf/src/TTF.cxx`, `graf3d/gl/src/TGLFontManager.cxx` and `graf3d/gl/src/TGLText.cxx` that handle font names, probably more. Fedora uses [this patch](https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-fontconfig.patch) from @ellert to get rid of the non-free MS fonts (see also https://github.com/root-project/root/issues/8357), which is a good start but the patch is not really feasible upstream due to Windows/OSX support. /cc @Axel-Naumann @dpiparo. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16229
https://github.com/root-project/root/issues/16229:1142,Deployability,patch,patch,1142,"### Feature description. Currently, ROOT loads fonts via the `Root.TTFontPath`. This makes a lot of sense from a ROOT maintainer perspective (simply ship all used fonts), but is a roadblock for a distribution maintainer (embedded files are usually not wished if not otherwise possible). Thus, it would be nice if ROOT would _additionally_ support [fontconfig](https://www.freedesktop.org/wiki/Software/fontconfig/), which is the default way to find fonts on Linux. In particular, the font interface should first look into `Root.TTFontPath` and then fallback to fontconfig. This means that the font-finding interface needs two parameters: the font file name and a fontconfig name as fallback. The current font interface is a bit all over the place. There is at least `graf2d/graf/src/TTF.cxx`, `graf3d/gl/src/TGLFontManager.cxx` and `graf3d/gl/src/TGLText.cxx` that handle font names, probably more. Fedora uses [this patch](https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-fontconfig.patch) from @ellert to get rid of the non-free MS fonts (see also https://github.com/root-project/root/issues/8357), which is a good start but the patch is not really feasible upstream due to Windows/OSX support. /cc @Axel-Naumann @dpiparo. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16229
https://github.com/root-project/root/issues/16229:489,Integrability,interface,interface,489,"### Feature description. Currently, ROOT loads fonts via the `Root.TTFontPath`. This makes a lot of sense from a ROOT maintainer perspective (simply ship all used fonts), but is a roadblock for a distribution maintainer (embedded files are usually not wished if not otherwise possible). Thus, it would be nice if ROOT would _additionally_ support [fontconfig](https://www.freedesktop.org/wiki/Software/fontconfig/), which is the default way to find fonts on Linux. In particular, the font interface should first look into `Root.TTFontPath` and then fallback to fontconfig. This means that the font-finding interface needs two parameters: the font file name and a fontconfig name as fallback. The current font interface is a bit all over the place. There is at least `graf2d/graf/src/TTF.cxx`, `graf3d/gl/src/TGLFontManager.cxx` and `graf3d/gl/src/TGLText.cxx` that handle font names, probably more. Fedora uses [this patch](https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-fontconfig.patch) from @ellert to get rid of the non-free MS fonts (see also https://github.com/root-project/root/issues/8357), which is a good start but the patch is not really feasible upstream due to Windows/OSX support. /cc @Axel-Naumann @dpiparo. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16229
https://github.com/root-project/root/issues/16229:606,Integrability,interface,interface,606,"### Feature description. Currently, ROOT loads fonts via the `Root.TTFontPath`. This makes a lot of sense from a ROOT maintainer perspective (simply ship all used fonts), but is a roadblock for a distribution maintainer (embedded files are usually not wished if not otherwise possible). Thus, it would be nice if ROOT would _additionally_ support [fontconfig](https://www.freedesktop.org/wiki/Software/fontconfig/), which is the default way to find fonts on Linux. In particular, the font interface should first look into `Root.TTFontPath` and then fallback to fontconfig. This means that the font-finding interface needs two parameters: the font file name and a fontconfig name as fallback. The current font interface is a bit all over the place. There is at least `graf2d/graf/src/TTF.cxx`, `graf3d/gl/src/TGLFontManager.cxx` and `graf3d/gl/src/TGLText.cxx` that handle font names, probably more. Fedora uses [this patch](https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-fontconfig.patch) from @ellert to get rid of the non-free MS fonts (see also https://github.com/root-project/root/issues/8357), which is a good start but the patch is not really feasible upstream due to Windows/OSX support. /cc @Axel-Naumann @dpiparo. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16229
https://github.com/root-project/root/issues/16229:709,Integrability,interface,interface,709,"### Feature description. Currently, ROOT loads fonts via the `Root.TTFontPath`. This makes a lot of sense from a ROOT maintainer perspective (simply ship all used fonts), but is a roadblock for a distribution maintainer (embedded files are usually not wished if not otherwise possible). Thus, it would be nice if ROOT would _additionally_ support [fontconfig](https://www.freedesktop.org/wiki/Software/fontconfig/), which is the default way to find fonts on Linux. In particular, the font interface should first look into `Root.TTFontPath` and then fallback to fontconfig. This means that the font-finding interface needs two parameters: the font file name and a fontconfig name as fallback. The current font interface is a bit all over the place. There is at least `graf2d/graf/src/TTF.cxx`, `graf3d/gl/src/TGLFontManager.cxx` and `graf3d/gl/src/TGLText.cxx` that handle font names, probably more. Fedora uses [this patch](https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-fontconfig.patch) from @ellert to get rid of the non-free MS fonts (see also https://github.com/root-project/root/issues/8357), which is a good start but the patch is not really feasible upstream due to Windows/OSX support. /cc @Axel-Naumann @dpiparo. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16229
https://github.com/root-project/root/issues/16229:41,Performance,load,loads,41,"### Feature description. Currently, ROOT loads fonts via the `Root.TTFontPath`. This makes a lot of sense from a ROOT maintainer perspective (simply ship all used fonts), but is a roadblock for a distribution maintainer (embedded files are usually not wished if not otherwise possible). Thus, it would be nice if ROOT would _additionally_ support [fontconfig](https://www.freedesktop.org/wiki/Software/fontconfig/), which is the default way to find fonts on Linux. In particular, the font interface should first look into `Root.TTFontPath` and then fallback to fontconfig. This means that the font-finding interface needs two parameters: the font file name and a fontconfig name as fallback. The current font interface is a bit all over the place. There is at least `graf2d/graf/src/TTF.cxx`, `graf3d/gl/src/TGLFontManager.cxx` and `graf3d/gl/src/TGLText.cxx` that handle font names, probably more. Fedora uses [this patch](https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-fontconfig.patch) from @ellert to get rid of the non-free MS fonts (see also https://github.com/root-project/root/issues/8357), which is a good start but the patch is not really feasible upstream due to Windows/OSX support. /cc @Axel-Naumann @dpiparo. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16229
https://github.com/root-project/root/issues/16229:142,Usability,simpl,simply,142,"### Feature description. Currently, ROOT loads fonts via the `Root.TTFontPath`. This makes a lot of sense from a ROOT maintainer perspective (simply ship all used fonts), but is a roadblock for a distribution maintainer (embedded files are usually not wished if not otherwise possible). Thus, it would be nice if ROOT would _additionally_ support [fontconfig](https://www.freedesktop.org/wiki/Software/fontconfig/), which is the default way to find fonts on Linux. In particular, the font interface should first look into `Root.TTFontPath` and then fallback to fontconfig. This means that the font-finding interface needs two parameters: the font file name and a fontconfig name as fallback. The current font interface is a bit all over the place. There is at least `graf2d/graf/src/TTF.cxx`, `graf3d/gl/src/TGLFontManager.cxx` and `graf3d/gl/src/TGLText.cxx` that handle font names, probably more. Fedora uses [this patch](https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-fontconfig.patch) from @ellert to get rid of the non-free MS fonts (see also https://github.com/root-project/root/issues/8357), which is a good start but the patch is not really feasible upstream due to Windows/OSX support. /cc @Axel-Naumann @dpiparo. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16229
https://github.com/root-project/root/pull/16237:68,Energy Efficiency,reduce,reduce,68,clang-format some files + add some typedefs to `ntuple_test.hxx` to reduce namespace noise in the tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16237
https://github.com/root-project/root/pull/16237:98,Testability,test,tests,98,clang-format some files + add some typedefs to `ntuple_test.hxx` to reduce namespace noise in the tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16237
https://github.com/root-project/root/pull/16239:40,Availability,error,error,40,This should fix the following potential error when building clad:; ```; Command failed: 2; ‘/usr/local/bin/cmake’ ‘–build’ ‘.’ ‘–config’ ‘.’; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16239
https://github.com/root-project/root/pull/16239:129,Modifiability,config,config,129,This should fix the following potential error when building clad:; ```; Command failed: 2; ‘/usr/local/bin/cmake’ ‘–build’ ‘.’ ‘–config’ ‘.’; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16239
https://github.com/root-project/root/issues/16241:94,Integrability,synchroniz,synchronization,94,"With `RNTupleWriter::Append` / `RNTupleParallelWriter::Append`, the application must organize synchronization to the underlying `TFile`. To avoid locking for every `Fill`, https://github.com/root-project/root/pull/15239 introduced `FillNoCommit` and gives some guarantees so that locking is only necessary when calling `CommitCluster`. However that's still not ideal because `CommitCluster` will first call `CommitCluster` on every field, which will flush the column write buffers and trigger compression. This can be substantial for many fields or very large page sizes (compared to the cluster size). Ideally a `RNTupleFillContext` had a method to perform this work outside of the critical section, like `PrepareCommitCluster` or `FlushPageBuffers`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16241
https://github.com/root-project/root/issues/16241:650,Performance,perform,perform,650,"With `RNTupleWriter::Append` / `RNTupleParallelWriter::Append`, the application must organize synchronization to the underlying `TFile`. To avoid locking for every `Fill`, https://github.com/root-project/root/pull/15239 introduced `FillNoCommit` and gives some guarantees so that locking is only necessary when calling `CommitCluster`. However that's still not ideal because `CommitCluster` will first call `CommitCluster` on every field, which will flush the column write buffers and trigger compression. This can be substantial for many fields or very large page sizes (compared to the cluster size). Ideally a `RNTupleFillContext` had a method to perform this work outside of the critical section, like `PrepareCommitCluster` or `FlushPageBuffers`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16241
https://github.com/root-project/root/issues/16241:140,Safety,avoid,avoid,140,"With `RNTupleWriter::Append` / `RNTupleParallelWriter::Append`, the application must organize synchronization to the underlying `TFile`. To avoid locking for every `Fill`, https://github.com/root-project/root/pull/15239 introduced `FillNoCommit` and gives some guarantees so that locking is only necessary when calling `CommitCluster`. However that's still not ideal because `CommitCluster` will first call `CommitCluster` on every field, which will flush the column write buffers and trigger compression. This can be substantial for many fields or very large page sizes (compared to the cluster size). Ideally a `RNTupleFillContext` had a method to perform this work outside of the critical section, like `PrepareCommitCluster` or `FlushPageBuffers`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16241
https://github.com/root-project/root/issues/16242:317,Availability,failure,failures,317,"### Description. On a Alma 9.4 node (specifically cmslpc-el9-heavy01.fnal.gov), I used verbatim the instructions from the CI for an arbitrary PR build (see [here](https://github.com/root-project/root/actions/runs/10343508810/job/28658232103?pr=16202#step:9:8064) and a copy/paste in the reproducer. However, I get 23 failures not seen on any of the CI runs (see list below and ; full log of the failures at: [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log). Looking in the log the problem seem to include:; * Missing (py)Torch installation (PyMVA); * Missing ipython3 installation (Jupyter); * Failure to connect to a server (roottest-python-distrdf-backends-test_all ); * Some more unclear failures; * See below for an extraction of the relevant output; * see [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log) for more details. ```; The following tests FAILED:; 385 - PyMVA-RandomForest-Classification (Failed); 386 - PyMVA-RandomForest-Multiclass (Failed); 387 - PyMVA-GTB-Classification (Failed); 388 - PyMVA-GTB-Multiclass (Failed); 389 - PyMVA-AdaBoost-Classification (Failed); 390 - PyMVA-AdaBoost-Multiclass (Failed); 391 - PyMVA-Torch-Classification (Failed); 392 - PyMVA-Torch-Regression (Failed); 393 - PyMVA-Torch-Multiclass (Failed); 394 - gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:395,Availability,failure,failures,395,"### Description. On a Alma 9.4 node (specifically cmslpc-el9-heavy01.fnal.gov), I used verbatim the instructions from the CI for an arbitrary PR build (see [here](https://github.com/root-project/root/actions/runs/10343508810/job/28658232103?pr=16202#step:9:8064) and a copy/paste in the reproducer. However, I get 23 failures not seen on any of the CI runs (see list below and ; full log of the failures at: [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log). Looking in the log the problem seem to include:; * Missing (py)Torch installation (PyMVA); * Missing ipython3 installation (Jupyter); * Failure to connect to a server (roottest-python-distrdf-backends-test_all ); * Some more unclear failures; * See below for an extraction of the relevant output; * see [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log) for more details. ```; The following tests FAILED:; 385 - PyMVA-RandomForest-Classification (Failed); 386 - PyMVA-RandomForest-Multiclass (Failed); 387 - PyMVA-GTB-Classification (Failed); 388 - PyMVA-GTB-Multiclass (Failed); 389 - PyMVA-AdaBoost-Classification (Failed); 390 - PyMVA-AdaBoost-Multiclass (Failed); 391 - PyMVA-Torch-Classification (Failed); 392 - PyMVA-Torch-Regression (Failed); 393 - PyMVA-Torch-Multiclass (Failed); 394 - gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:659,Availability,Failure,Failure,659,"### Description. On a Alma 9.4 node (specifically cmslpc-el9-heavy01.fnal.gov), I used verbatim the instructions from the CI for an arbitrary PR build (see [here](https://github.com/root-project/root/actions/runs/10343508810/job/28658232103?pr=16202#step:9:8064) and a copy/paste in the reproducer. However, I get 23 failures not seen on any of the CI runs (see list below and ; full log of the failures at: [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log). Looking in the log the problem seem to include:; * Missing (py)Torch installation (PyMVA); * Missing ipython3 installation (Jupyter); * Failure to connect to a server (roottest-python-distrdf-backends-test_all ); * Some more unclear failures; * See below for an extraction of the relevant output; * see [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log) for more details. ```; The following tests FAILED:; 385 - PyMVA-RandomForest-Classification (Failed); 386 - PyMVA-RandomForest-Multiclass (Failed); 387 - PyMVA-GTB-Classification (Failed); 388 - PyMVA-GTB-Multiclass (Failed); 389 - PyMVA-AdaBoost-Classification (Failed); 390 - PyMVA-AdaBoost-Multiclass (Failed); 391 - PyMVA-Torch-Classification (Failed); 392 - PyMVA-Torch-Regression (Failed); 393 - PyMVA-Torch-Multiclass (Failed); 394 - gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:756,Availability,failure,failures,756,"### Description. On a Alma 9.4 node (specifically cmslpc-el9-heavy01.fnal.gov), I used verbatim the instructions from the CI for an arbitrary PR build (see [here](https://github.com/root-project/root/actions/runs/10343508810/job/28658232103?pr=16202#step:9:8064) and a copy/paste in the reproducer. However, I get 23 failures not seen on any of the CI runs (see list below and ; full log of the failures at: [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log). Looking in the log the problem seem to include:; * Missing (py)Torch installation (PyMVA); * Missing ipython3 installation (Jupyter); * Failure to connect to a server (roottest-python-distrdf-backends-test_all ); * Some more unclear failures; * See below for an extraction of the relevant output; * see [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log) for more details. ```; The following tests FAILED:; 385 - PyMVA-RandomForest-Classification (Failed); 386 - PyMVA-RandomForest-Multiclass (Failed); 387 - PyMVA-GTB-Classification (Failed); 388 - PyMVA-GTB-Multiclass (Failed); 389 - PyMVA-AdaBoost-Classification (Failed); 390 - PyMVA-AdaBoost-Multiclass (Failed); 391 - PyMVA-Torch-Classification (Failed); 392 - PyMVA-Torch-Regression (Failed); 393 - PyMVA-Torch-Multiclass (Failed); 394 - gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:2322,Availability,failure,failure,2322,"- gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); 1664 - roottest-python-distrdf-backends-test_all (Failed); ```; The specific run I references only failed the `TMapFile` test (which sometimes fails, sometimes succeed). The set of failure types is as follow:; ```; Warning in <TMVA_CNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:3272,Availability,Error,Error,3272," `TMapFile` test (which sometimes fails, sometimes succeed). The set of failure types is as follow:; ```; Warning in <TMVA_CNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; sh: 1: ipython3: not found; Traceback (most recent call last):; File ""/github/home/ROOT-CI/roottest/python/JupyROOT/nbdiff.py"", line 197, in <module>; retCode = canReproduceNotebook(nbFileName, kernelName, needsCompare); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; ```; ```; Exception occurred during processing of request from ('127.0.0.1', 53110); FTraceback (most recent call last):; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:3345,Availability,error,error,3345,"not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; sh: 1: ipython3: not found; Traceback (most recent call last):; File ""/github/home/ROOT-CI/roottest/python/JupyROOT/nbdiff.py"", line 197, in <module>; retCode = canReproduceNotebook(nbFileName, kernelName, needsCompare); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; ```; ```; Exception occurred during processing of request from ('127.0.0.1', 53110); FTraceback (most recent call last):; File ""/usr/lib/python3.12/socketserver.py"", line 318, in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Gr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:3702,Availability,Error,Error,3702," abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; sh: 1: ipython3: not found; Traceback (most recent call last):; File ""/github/home/ROOT-CI/roottest/python/JupyROOT/nbdiff.py"", line 197, in <module>; retCode = canReproduceNotebook(nbFileName, kernelName, needsCompare); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; ```; ```; Exception occurred during processing of request from ('127.0.0.1', 53110); FTraceback (most recent call last):; File ""/usr/lib/python3.12/socketserver.py"", line 318, in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:3775,Availability,error,error,3775," 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; sh: 1: ipython3: not found; Traceback (most recent call last):; File ""/github/home/ROOT-CI/roottest/python/JupyROOT/nbdiff.py"", line 197, in <module>; retCode = canReproduceNotebook(nbFileName, kernelName, needsCompare); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; ```; ```; Exception occurred during processing of request from ('127.0.0.1', 53110); FTraceback (most recent call last):; File ""/usr/lib/python3.12/socketserver.py"", line 318, in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/art",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:3837,Availability,ERROR,ERROR,3837," 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; sh: 1: ipython3: not found; Traceback (most recent call last):; File ""/github/home/ROOT-CI/roottest/python/JupyROOT/nbdiff.py"", line 197, in <module>; retCode = canReproduceNotebook(nbFileName, kernelName, needsCompare); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; ```; ```; Exception occurred during processing of request from ('127.0.0.1', 53110); FTraceback (most recent call last):; File ""/usr/lib/python3.12/socketserver.py"", line 318, in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/art",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:6086,Availability,failure,failure,6086,", in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733; git checkout fix-15733; git rebase 531620f59e898e5ec809043135583d15b0d151a6; ); (; git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest""; ); (; cd '/github/home/ROOT-CI/roottest'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch ; git checkout ; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; ); ```. ### ROOT version. master. ### Installation method. docker copy/pasted from CI. ### Operating system. Alma9 + Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:592,Deployability,install,installation,592,"### Description. On a Alma 9.4 node (specifically cmslpc-el9-heavy01.fnal.gov), I used verbatim the instructions from the CI for an arbitrary PR build (see [here](https://github.com/root-project/root/actions/runs/10343508810/job/28658232103?pr=16202#step:9:8064) and a copy/paste in the reproducer. However, I get 23 failures not seen on any of the CI runs (see list below and ; full log of the failures at: [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log). Looking in the log the problem seem to include:; * Missing (py)Torch installation (PyMVA); * Missing ipython3 installation (Jupyter); * Failure to connect to a server (roottest-python-distrdf-backends-test_all ); * Some more unclear failures; * See below for an extraction of the relevant output; * see [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log) for more details. ```; The following tests FAILED:; 385 - PyMVA-RandomForest-Classification (Failed); 386 - PyMVA-RandomForest-Multiclass (Failed); 387 - PyMVA-GTB-Classification (Failed); 388 - PyMVA-GTB-Multiclass (Failed); 389 - PyMVA-AdaBoost-Classification (Failed); 390 - PyMVA-AdaBoost-Multiclass (Failed); 391 - PyMVA-Torch-Classification (Failed); 392 - PyMVA-Torch-Regression (Failed); 393 - PyMVA-Torch-Multiclass (Failed); 394 - gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:633,Deployability,install,installation,633,"### Description. On a Alma 9.4 node (specifically cmslpc-el9-heavy01.fnal.gov), I used verbatim the instructions from the CI for an arbitrary PR build (see [here](https://github.com/root-project/root/actions/runs/10343508810/job/28658232103?pr=16202#step:9:8064) and a copy/paste in the reproducer. However, I get 23 failures not seen on any of the CI runs (see list below and ; full log of the failures at: [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log). Looking in the log the problem seem to include:; * Missing (py)Torch installation (PyMVA); * Missing ipython3 installation (Jupyter); * Failure to connect to a server (roottest-python-distrdf-backends-test_all ); * Some more unclear failures; * See below for an extraction of the relevant output; * see [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log) for more details. ```; The following tests FAILED:; 385 - PyMVA-RandomForest-Classification (Failed); 386 - PyMVA-RandomForest-Multiclass (Failed); 387 - PyMVA-GTB-Classification (Failed); 388 - PyMVA-GTB-Multiclass (Failed); 389 - PyMVA-AdaBoost-Classification (Failed); 390 - PyMVA-AdaBoost-Multiclass (Failed); 391 - PyMVA-Torch-Classification (Failed); 392 - PyMVA-Torch-Regression (Failed); 393 - PyMVA-Torch-Multiclass (Failed); 394 - gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:5213,Deployability,Integrat,Integration,5213,", in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733; git checkout fix-15733; git rebase 531620f59e898e5ec809043135583d15b0d151a6; ); (; git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest""; ); (; cd '/github/home/ROOT-CI/roottest'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch ; git checkout ; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; ); ```. ### ROOT version. master. ### Installation method. docker copy/pasted from CI. ### Operating system. Alma9 + Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:5624,Deployability,Integrat,Integration,5624,", in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733; git checkout fix-15733; git rebase 531620f59e898e5ec809043135583d15b0d151a6; ); (; git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest""; ); (; cd '/github/home/ROOT-CI/roottest'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch ; git checkout ; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; ); ```. ### ROOT version. master. ### Installation method. docker copy/pasted from CI. ### Operating system. Alma9 + Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:5794,Deployability,release,release,5794,", in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733; git checkout fix-15733; git rebase 531620f59e898e5ec809043135583d15b0d151a6; ); (; git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest""; ); (; cd '/github/home/ROOT-CI/roottest'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch ; git checkout ; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; ); ```. ### ROOT version. master. ### Installation method. docker copy/pasted from CI. ### Operating system. Alma9 + Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:6178,Deployability,Install,Installation,6178,", in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733; git checkout fix-15733; git rebase 531620f59e898e5ec809043135583d15b0d151a6; ); (; git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest""; ); (; cd '/github/home/ROOT-CI/roottest'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch ; git checkout ; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; ); ```. ### ROOT version. master. ### Installation method. docker copy/pasted from CI. ### Operating system. Alma9 + Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:3334,Integrability,message,message,3334,"not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; sh: 1: ipython3: not found; Traceback (most recent call last):; File ""/github/home/ROOT-CI/roottest/python/JupyROOT/nbdiff.py"", line 197, in <module>; retCode = canReproduceNotebook(nbFileName, kernelName, needsCompare); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; ```; ```; Exception occurred during processing of request from ('127.0.0.1', 53110); FTraceback (most recent call last):; File ""/usr/lib/python3.12/socketserver.py"", line 318, in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Gr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:3764,Integrability,message,message,3764," 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; sh: 1: ipython3: not found; Traceback (most recent call last):; File ""/github/home/ROOT-CI/roottest/python/JupyROOT/nbdiff.py"", line 197, in <module>; retCode = canReproduceNotebook(nbFileName, kernelName, needsCompare); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; ```; ```; Exception occurred during processing of request from ('127.0.0.1', 53110); FTraceback (most recent call last):; File ""/usr/lib/python3.12/socketserver.py"", line 318, in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/art",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:5213,Integrability,Integrat,Integration,5213,", in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733; git checkout fix-15733; git rebase 531620f59e898e5ec809043135583d15b0d151a6; ); (; git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest""; ); (; cd '/github/home/ROOT-CI/roottest'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch ; git checkout ; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; ); ```. ### ROOT version. master. ### Installation method. docker copy/pasted from CI. ### Operating system. Alma9 + Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:5624,Integrability,Integrat,Integration,5624,", in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733; git checkout fix-15733; git rebase 531620f59e898e5ec809043135583d15b0d151a6; ); (; git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest""; ); (; cd '/github/home/ROOT-CI/roottest'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch ; git checkout ; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; ); ```. ### ROOT version. master. ### Installation method. docker copy/pasted from CI. ### Operating system. Alma9 + Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:5138,Modifiability,config,config,5138,"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; ```; ```; Exception occurred during processing of request from ('127.0.0.1', 53110); FTraceback (most recent call last):; File ""/usr/lib/python3.12/socketserver.py"", line 318, in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733; git checkout fix-15733; git rebase 531620f59e898e5ec809043135583d15b0d151a6; ); (; git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest""; ); (; cd '/github/home/ROOT-CI/roottest'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch ; git checkout ; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:5180,Modifiability,config,config,5180,"quest from ('127.0.0.1', 53110); FTraceback (most recent call last):; File ""/usr/lib/python3.12/socketserver.py"", line 318, in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733; git checkout fix-15733; git rebase 531620f59e898e5ec809043135583d15b0d151a6; ); (; git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest""; ); (; cd '/github/home/ROOT-CI/roottest'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch ; git checkout ; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; ); ```. ### ROOT version. master. ### Ins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:5549,Modifiability,config,config,5549,", in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733; git checkout fix-15733; git rebase 531620f59e898e5ec809043135583d15b0d151a6; ); (; git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest""; ); (; cd '/github/home/ROOT-CI/roottest'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch ; git checkout ; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; ); ```. ### ROOT version. master. ### Installation method. docker copy/pasted from CI. ### Operating system. Alma9 + Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:5591,Modifiability,config,config,5591,", in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733; git checkout fix-15733; git rebase 531620f59e898e5ec809043135583d15b0d151a6; ); (; git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest""; ); (; cd '/github/home/ROOT-CI/roottest'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch ; git checkout ; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; ); ```. ### ROOT version. master. ### Installation method. docker copy/pasted from CI. ### Operating system. Alma9 + Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:5988,Modifiability,config,config,5988,", in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733; git checkout fix-15733; git rebase 531620f59e898e5ec809043135583d15b0d151a6; ); (; git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest""; ); (; cd '/github/home/ROOT-CI/roottest'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch ; git checkout ; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; ); ```. ### ROOT version. master. ### Installation method. docker copy/pasted from CI. ### Operating system. Alma9 + Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:2428,Performance,multi-thread,multi-thread,2428,"- gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); 1664 - roottest-python-distrdf-backends-test_all (Failed); ```; The specific run I references only failed the `TMapFile` test (which sometimes fails, sometimes succeed). The set of failure types is as follow:; ```; Warning in <TMVA_CNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:2568,Safety,abort,abort,2568,"ication (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); 1664 - roottest-python-distrdf-backends-test_all (Failed); ```; The specific run I references only failed the `TMapFile` test (which sometimes fails, sometimes succeed). The set of failure types is as follow:; ```; Warning in <TMVA_CNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hist",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:2670,Safety,abort,abort,2670,"taframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); 1664 - roottest-python-distrdf-backends-test_all (Failed); ```; The specific run I references only failed the `TMapFile` test (which sometimes fails, sometimes succeed). The set of failure types is as follow:; ```; Warning in <TMVA_CNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:4437,Security,secur,security-opt,4437,"utorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; sh: 1: ipython3: not found; Traceback (most recent call last):; File ""/github/home/ROOT-CI/roottest/python/JupyROOT/nbdiff.py"", line 197, in <module>; retCode = canReproduceNotebook(nbFileName, kernelName, needsCompare); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; ```; ```; Exception occurred during processing of request from ('127.0.0.1', 53110); FTraceback (most recent call last):; File ""/usr/lib/python3.12/socketserver.py"", line 318, in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733; git checkout fix-15733; git rebase 531620f59e898e5ec809043135583d15b0d151a6; ); (; git clone --branch master --single-branch https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:384,Testability,log,log,384,"### Description. On a Alma 9.4 node (specifically cmslpc-el9-heavy01.fnal.gov), I used verbatim the instructions from the CI for an arbitrary PR build (see [here](https://github.com/root-project/root/actions/runs/10343508810/job/28658232103?pr=16202#step:9:8064) and a copy/paste in the reproducer. However, I get 23 failures not seen on any of the CI runs (see list below and ; full log of the failures at: [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log). Looking in the log the problem seem to include:; * Missing (py)Torch installation (PyMVA); * Missing ipython3 installation (Jupyter); * Failure to connect to a server (roottest-python-distrdf-backends-test_all ); * Some more unclear failures; * See below for an extraction of the relevant output; * see [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log) for more details. ```; The following tests FAILED:; 385 - PyMVA-RandomForest-Classification (Failed); 386 - PyMVA-RandomForest-Multiclass (Failed); 387 - PyMVA-GTB-Classification (Failed); 388 - PyMVA-GTB-Multiclass (Failed); 389 - PyMVA-AdaBoost-Classification (Failed); 390 - PyMVA-AdaBoost-Multiclass (Failed); 391 - PyMVA-Torch-Classification (Failed); 392 - PyMVA-Torch-Regression (Failed); 393 - PyMVA-Torch-Multiclass (Failed); 394 - gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:435,Testability,log,log,435,"### Description. On a Alma 9.4 node (specifically cmslpc-el9-heavy01.fnal.gov), I used verbatim the instructions from the CI for an arbitrary PR build (see [here](https://github.com/root-project/root/actions/runs/10343508810/job/28658232103?pr=16202#step:9:8064) and a copy/paste in the reproducer. However, I get 23 failures not seen on any of the CI runs (see list below and ; full log of the failures at: [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log). Looking in the log the problem seem to include:; * Missing (py)Torch installation (PyMVA); * Missing ipython3 installation (Jupyter); * Failure to connect to a server (roottest-python-distrdf-backends-test_all ); * Some more unclear failures; * See below for an extraction of the relevant output; * see [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log) for more details. ```; The following tests FAILED:; 385 - PyMVA-RandomForest-Classification (Failed); 386 - PyMVA-RandomForest-Multiclass (Failed); 387 - PyMVA-GTB-Classification (Failed); 388 - PyMVA-GTB-Multiclass (Failed); 389 - PyMVA-AdaBoost-Classification (Failed); 390 - PyMVA-AdaBoost-Multiclass (Failed); 391 - PyMVA-Torch-Classification (Failed); 392 - PyMVA-Torch-Regression (Failed); 393 - PyMVA-Torch-Multiclass (Failed); 394 - gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:517,Testability,log,log,517,"### Description. On a Alma 9.4 node (specifically cmslpc-el9-heavy01.fnal.gov), I used verbatim the instructions from the CI for an arbitrary PR build (see [here](https://github.com/root-project/root/actions/runs/10343508810/job/28658232103?pr=16202#step:9:8064) and a copy/paste in the reproducer. However, I get 23 failures not seen on any of the CI runs (see list below and ; full log of the failures at: [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log). Looking in the log the problem seem to include:; * Missing (py)Torch installation (PyMVA); * Missing ipython3 installation (Jupyter); * Failure to connect to a server (roottest-python-distrdf-backends-test_all ); * Some more unclear failures; * See below for an extraction of the relevant output; * see [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log) for more details. ```; The following tests FAILED:; 385 - PyMVA-RandomForest-Classification (Failed); 386 - PyMVA-RandomForest-Multiclass (Failed); 387 - PyMVA-GTB-Classification (Failed); 388 - PyMVA-GTB-Multiclass (Failed); 389 - PyMVA-AdaBoost-Classification (Failed); 390 - PyMVA-AdaBoost-Multiclass (Failed); 391 - PyMVA-Torch-Classification (Failed); 392 - PyMVA-Torch-Regression (Failed); 393 - PyMVA-Torch-Multiclass (Failed); 394 - gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:538,Testability,log,log,538,"### Description. On a Alma 9.4 node (specifically cmslpc-el9-heavy01.fnal.gov), I used verbatim the instructions from the CI for an arbitrary PR build (see [here](https://github.com/root-project/root/actions/runs/10343508810/job/28658232103?pr=16202#step:9:8064) and a copy/paste in the reproducer. However, I get 23 failures not seen on any of the CI runs (see list below and ; full log of the failures at: [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log). Looking in the log the problem seem to include:; * Missing (py)Torch installation (PyMVA); * Missing ipython3 installation (Jupyter); * Failure to connect to a server (roottest-python-distrdf-backends-test_all ); * Some more unclear failures; * See below for an extraction of the relevant output; * see [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log) for more details. ```; The following tests FAILED:; 385 - PyMVA-RandomForest-Classification (Failed); 386 - PyMVA-RandomForest-Multiclass (Failed); 387 - PyMVA-GTB-Classification (Failed); 388 - PyMVA-GTB-Multiclass (Failed); 389 - PyMVA-AdaBoost-Classification (Failed); 390 - PyMVA-AdaBoost-Multiclass (Failed); 391 - PyMVA-Torch-Classification (Failed); 392 - PyMVA-Torch-Regression (Failed); 393 - PyMVA-Torch-Multiclass (Failed); 394 - gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:853,Testability,log,log,853,"### Description. On a Alma 9.4 node (specifically cmslpc-el9-heavy01.fnal.gov), I used verbatim the instructions from the CI for an arbitrary PR build (see [here](https://github.com/root-project/root/actions/runs/10343508810/job/28658232103?pr=16202#step:9:8064) and a copy/paste in the reproducer. However, I get 23 failures not seen on any of the CI runs (see list below and ; full log of the failures at: [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log). Looking in the log the problem seem to include:; * Missing (py)Torch installation (PyMVA); * Missing ipython3 installation (Jupyter); * Failure to connect to a server (roottest-python-distrdf-backends-test_all ); * Some more unclear failures; * See below for an extraction of the relevant output; * see [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log) for more details. ```; The following tests FAILED:; 385 - PyMVA-RandomForest-Classification (Failed); 386 - PyMVA-RandomForest-Multiclass (Failed); 387 - PyMVA-GTB-Classification (Failed); 388 - PyMVA-GTB-Multiclass (Failed); 389 - PyMVA-AdaBoost-Classification (Failed); 390 - PyMVA-AdaBoost-Multiclass (Failed); 391 - PyMVA-Torch-Classification (Failed); 392 - PyMVA-Torch-Regression (Failed); 393 - PyMVA-Torch-Multiclass (Failed); 394 - gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:935,Testability,log,log,935,"### Description. On a Alma 9.4 node (specifically cmslpc-el9-heavy01.fnal.gov), I used verbatim the instructions from the CI for an arbitrary PR build (see [here](https://github.com/root-project/root/actions/runs/10343508810/job/28658232103?pr=16202#step:9:8064) and a copy/paste in the reproducer. However, I get 23 failures not seen on any of the CI runs (see list below and ; full log of the failures at: [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log). Looking in the log the problem seem to include:; * Missing (py)Torch installation (PyMVA); * Missing ipython3 installation (Jupyter); * Failure to connect to a server (roottest-python-distrdf-backends-test_all ); * Some more unclear failures; * See below for an extraction of the relevant output; * see [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log) for more details. ```; The following tests FAILED:; 385 - PyMVA-RandomForest-Classification (Failed); 386 - PyMVA-RandomForest-Multiclass (Failed); 387 - PyMVA-GTB-Classification (Failed); 388 - PyMVA-GTB-Multiclass (Failed); 389 - PyMVA-AdaBoost-Classification (Failed); 390 - PyMVA-AdaBoost-Multiclass (Failed); 391 - PyMVA-Torch-Classification (Failed); 392 - PyMVA-Torch-Regression (Failed); 393 - PyMVA-Torch-Multiclass (Failed); 394 - gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:977,Testability,test,tests,977,"installation (Jupyter); * Failure to connect to a server (roottest-python-distrdf-backends-test_all ); * Some more unclear failures; * See below for an extraction of the relevant output; * see [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log) for more details. ```; The following tests FAILED:; 385 - PyMVA-RandomForest-Classification (Failed); 386 - PyMVA-RandomForest-Multiclass (Failed); 387 - PyMVA-GTB-Classification (Failed); 388 - PyMVA-GTB-Multiclass (Failed); 389 - PyMVA-AdaBoost-Classification (Failed); 390 - PyMVA-AdaBoost-Multiclass (Failed); 391 - PyMVA-Torch-Classification (Failed); 392 - PyMVA-Torch-Regression (Failed); 393 - PyMVA-Torch-Multiclass (Failed); 394 - gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); 1664 - roottest-python-distrdf-backends-test_all (Failed); ```; The specific run I references only failed the `TMapFile` test (which sometimes fails, sometimes succeed). The set of failure types is as follow:; ```; Warning in <TMVA_CNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1398,Testability,test,test-TestRModelParserPyTorch,1398,"installation (Jupyter); * Failure to connect to a server (roottest-python-distrdf-backends-test_all ); * Some more unclear failures; * See below for an extraction of the relevant output; * see [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log) for more details. ```; The following tests FAILED:; 385 - PyMVA-RandomForest-Classification (Failed); 386 - PyMVA-RandomForest-Multiclass (Failed); 387 - PyMVA-GTB-Classification (Failed); 388 - PyMVA-GTB-Multiclass (Failed); 389 - PyMVA-AdaBoost-Classification (Failed); 390 - PyMVA-AdaBoost-Multiclass (Failed); 391 - PyMVA-Torch-Classification (Failed); 392 - PyMVA-Torch-Regression (Failed); 393 - PyMVA-Torch-Multiclass (Failed); 394 - gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); 1664 - roottest-python-distrdf-backends-test_all (Failed); ```; The specific run I references only failed the `TMapFile` test (which sometimes fails, sometimes succeed). The set of failure types is as follow:; ```; Warning in <TMVA_CNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:2262,Testability,test,test,2262,"installation (Jupyter); * Failure to connect to a server (roottest-python-distrdf-backends-test_all ); * Some more unclear failures; * See below for an extraction of the relevant output; * see [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log) for more details. ```; The following tests FAILED:; 385 - PyMVA-RandomForest-Classification (Failed); 386 - PyMVA-RandomForest-Multiclass (Failed); 387 - PyMVA-GTB-Classification (Failed); 388 - PyMVA-GTB-Multiclass (Failed); 389 - PyMVA-AdaBoost-Classification (Failed); 390 - PyMVA-AdaBoost-Multiclass (Failed); 391 - PyMVA-Torch-Classification (Failed); 392 - PyMVA-Torch-Regression (Failed); 393 - PyMVA-Torch-Multiclass (Failed); 394 - gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); 1664 - roottest-python-distrdf-backends-test_all (Failed); ```; The specific run I references only failed the `TMapFile` test (which sometimes fails, sometimes succeed). The set of failure types is as follow:; ```; Warning in <TMVA_CNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:2812,Testability,test,test,2812,"tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); 1664 - roottest-python-distrdf-backends-test_all (Failed); ```; The specific run I references only failed the `TMapFile` test (which sometimes fails, sometimes succeed). The set of failure types is as follow:; ```; Warning in <TMVA_CNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:3807,Testability,TEST,TEST,3807," 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; sh: 1: ipython3: not found; Traceback (most recent call last):; File ""/github/home/ROOT-CI/roottest/python/JupyROOT/nbdiff.py"", line 197, in <module>; retCode = canReproduceNotebook(nbFileName, kernelName, needsCompare); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; ```; ```; Exception occurred during processing of request from ('127.0.0.1', 53110); FTraceback (most recent call last):; File ""/usr/lib/python3.12/socketserver.py"", line 318, in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/art",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:3832,Testability,TEST,TEST,3832," 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; sh: 1: ipython3: not found; Traceback (most recent call last):; File ""/github/home/ROOT-CI/roottest/python/JupyROOT/nbdiff.py"", line 197, in <module>; retCode = canReproduceNotebook(nbFileName, kernelName, needsCompare); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; ```; ```; Exception occurred during processing of request from ('127.0.0.1', 53110); FTraceback (most recent call last):; File ""/usr/lib/python3.12/socketserver.py"", line 318, in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/art",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:6123,Testability,Test,TestResults,6123,", in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733; git checkout fix-15733; git rebase 531620f59e898e5ec809043135583d15b0d151a6; ); (; git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest""; ); (; cd '/github/home/ROOT-CI/roottest'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch ; git checkout ; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; ); ```. ### ROOT version. master. ### Installation method. docker copy/pasted from CI. ### Operating system. Alma9 + Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:2471,Usability,Learn,Learning,2471,"ication (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); 1664 - roottest-python-distrdf-backends-test_all (Failed); ```; The specific run I references only failed the `TMapFile` test (which sometimes fails, sometimes succeed). The set of failure types is as follow:; ```; Warning in <TMVA_CNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hist",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/pull/16243:203,Availability,avail,available,203,"The comments in `ROOT_ADD_GTEST` suggest that the macro can also be used; in your own projects based on ROOT, only that when ROOT was configured; with `testing=OFF`, the ROOT::TestSupport library is not available. However, in the case where ROOT::TestSupport is not available, the; ROOT_ADD_GTEST macro is dysfunctional because the linkage against; `gtest` is missing. It is only indirectly picked up via; ROOT::TestSupport. This breaks the compilation of all tests, even if; they don't use the TestSupport library. To make this work again without; the user having to explicitly link against `gtest`, this PR suggests; to always link against `gtest` in the ROOT_ADD_GTEST macro. Also, make the linking against ROOT::TestSupport in RooFit tests explicit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16243
https://github.com/root-project/root/pull/16243:266,Availability,avail,available,266,"The comments in `ROOT_ADD_GTEST` suggest that the macro can also be used; in your own projects based on ROOT, only that when ROOT was configured; with `testing=OFF`, the ROOT::TestSupport library is not available. However, in the case where ROOT::TestSupport is not available, the; ROOT_ADD_GTEST macro is dysfunctional because the linkage against; `gtest` is missing. It is only indirectly picked up via; ROOT::TestSupport. This breaks the compilation of all tests, even if; they don't use the TestSupport library. To make this work again without; the user having to explicitly link against `gtest`, this PR suggests; to always link against `gtest` in the ROOT_ADD_GTEST macro. Also, make the linking against ROOT::TestSupport in RooFit tests explicit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16243
https://github.com/root-project/root/pull/16243:134,Modifiability,config,configured,134,"The comments in `ROOT_ADD_GTEST` suggest that the macro can also be used; in your own projects based on ROOT, only that when ROOT was configured; with `testing=OFF`, the ROOT::TestSupport library is not available. However, in the case where ROOT::TestSupport is not available, the; ROOT_ADD_GTEST macro is dysfunctional because the linkage against; `gtest` is missing. It is only indirectly picked up via; ROOT::TestSupport. This breaks the compilation of all tests, even if; they don't use the TestSupport library. To make this work again without; the user having to explicitly link against `gtest`, this PR suggests; to always link against `gtest` in the ROOT_ADD_GTEST macro. Also, make the linking against ROOT::TestSupport in RooFit tests explicit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16243
https://github.com/root-project/root/pull/16243:152,Testability,test,testing,152,"The comments in `ROOT_ADD_GTEST` suggest that the macro can also be used; in your own projects based on ROOT, only that when ROOT was configured; with `testing=OFF`, the ROOT::TestSupport library is not available. However, in the case where ROOT::TestSupport is not available, the; ROOT_ADD_GTEST macro is dysfunctional because the linkage against; `gtest` is missing. It is only indirectly picked up via; ROOT::TestSupport. This breaks the compilation of all tests, even if; they don't use the TestSupport library. To make this work again without; the user having to explicitly link against `gtest`, this PR suggests; to always link against `gtest` in the ROOT_ADD_GTEST macro. Also, make the linking against ROOT::TestSupport in RooFit tests explicit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16243
https://github.com/root-project/root/pull/16243:176,Testability,Test,TestSupport,176,"The comments in `ROOT_ADD_GTEST` suggest that the macro can also be used; in your own projects based on ROOT, only that when ROOT was configured; with `testing=OFF`, the ROOT::TestSupport library is not available. However, in the case where ROOT::TestSupport is not available, the; ROOT_ADD_GTEST macro is dysfunctional because the linkage against; `gtest` is missing. It is only indirectly picked up via; ROOT::TestSupport. This breaks the compilation of all tests, even if; they don't use the TestSupport library. To make this work again without; the user having to explicitly link against `gtest`, this PR suggests; to always link against `gtest` in the ROOT_ADD_GTEST macro. Also, make the linking against ROOT::TestSupport in RooFit tests explicit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16243
https://github.com/root-project/root/pull/16243:247,Testability,Test,TestSupport,247,"The comments in `ROOT_ADD_GTEST` suggest that the macro can also be used; in your own projects based on ROOT, only that when ROOT was configured; with `testing=OFF`, the ROOT::TestSupport library is not available. However, in the case where ROOT::TestSupport is not available, the; ROOT_ADD_GTEST macro is dysfunctional because the linkage against; `gtest` is missing. It is only indirectly picked up via; ROOT::TestSupport. This breaks the compilation of all tests, even if; they don't use the TestSupport library. To make this work again without; the user having to explicitly link against `gtest`, this PR suggests; to always link against `gtest` in the ROOT_ADD_GTEST macro. Also, make the linking against ROOT::TestSupport in RooFit tests explicit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16243
https://github.com/root-project/root/pull/16243:412,Testability,Test,TestSupport,412,"The comments in `ROOT_ADD_GTEST` suggest that the macro can also be used; in your own projects based on ROOT, only that when ROOT was configured; with `testing=OFF`, the ROOT::TestSupport library is not available. However, in the case where ROOT::TestSupport is not available, the; ROOT_ADD_GTEST macro is dysfunctional because the linkage against; `gtest` is missing. It is only indirectly picked up via; ROOT::TestSupport. This breaks the compilation of all tests, even if; they don't use the TestSupport library. To make this work again without; the user having to explicitly link against `gtest`, this PR suggests; to always link against `gtest` in the ROOT_ADD_GTEST macro. Also, make the linking against ROOT::TestSupport in RooFit tests explicit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16243
https://github.com/root-project/root/pull/16243:460,Testability,test,tests,460,"The comments in `ROOT_ADD_GTEST` suggest that the macro can also be used; in your own projects based on ROOT, only that when ROOT was configured; with `testing=OFF`, the ROOT::TestSupport library is not available. However, in the case where ROOT::TestSupport is not available, the; ROOT_ADD_GTEST macro is dysfunctional because the linkage against; `gtest` is missing. It is only indirectly picked up via; ROOT::TestSupport. This breaks the compilation of all tests, even if; they don't use the TestSupport library. To make this work again without; the user having to explicitly link against `gtest`, this PR suggests; to always link against `gtest` in the ROOT_ADD_GTEST macro. Also, make the linking against ROOT::TestSupport in RooFit tests explicit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16243
https://github.com/root-project/root/pull/16243:495,Testability,Test,TestSupport,495,"The comments in `ROOT_ADD_GTEST` suggest that the macro can also be used; in your own projects based on ROOT, only that when ROOT was configured; with `testing=OFF`, the ROOT::TestSupport library is not available. However, in the case where ROOT::TestSupport is not available, the; ROOT_ADD_GTEST macro is dysfunctional because the linkage against; `gtest` is missing. It is only indirectly picked up via; ROOT::TestSupport. This breaks the compilation of all tests, even if; they don't use the TestSupport library. To make this work again without; the user having to explicitly link against `gtest`, this PR suggests; to always link against `gtest` in the ROOT_ADD_GTEST macro. Also, make the linking against ROOT::TestSupport in RooFit tests explicit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16243
https://github.com/root-project/root/pull/16243:716,Testability,Test,TestSupport,716,"The comments in `ROOT_ADD_GTEST` suggest that the macro can also be used; in your own projects based on ROOT, only that when ROOT was configured; with `testing=OFF`, the ROOT::TestSupport library is not available. However, in the case where ROOT::TestSupport is not available, the; ROOT_ADD_GTEST macro is dysfunctional because the linkage against; `gtest` is missing. It is only indirectly picked up via; ROOT::TestSupport. This breaks the compilation of all tests, even if; they don't use the TestSupport library. To make this work again without; the user having to explicitly link against `gtest`, this PR suggests; to always link against `gtest` in the ROOT_ADD_GTEST macro. Also, make the linking against ROOT::TestSupport in RooFit tests explicit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16243
https://github.com/root-project/root/pull/16243:738,Testability,test,tests,738,"The comments in `ROOT_ADD_GTEST` suggest that the macro can also be used; in your own projects based on ROOT, only that when ROOT was configured; with `testing=OFF`, the ROOT::TestSupport library is not available. However, in the case where ROOT::TestSupport is not available, the; ROOT_ADD_GTEST macro is dysfunctional because the linkage against; `gtest` is missing. It is only indirectly picked up via; ROOT::TestSupport. This breaks the compilation of all tests, even if; they don't use the TestSupport library. To make this work again without; the user having to explicitly link against `gtest`, this PR suggests; to always link against `gtest` in the ROOT_ADD_GTEST macro. Also, make the linking against ROOT::TestSupport in RooFit tests explicit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16243
https://github.com/root-project/root/issues/16244:1103,Deployability,Install,Installation,1103,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. JSROOT isn't drawing the bins of TProfile2D that have a content of 0 but non-zero entries. This is different behaviour to regular ROOT (see reproducer).; I'll also perhaps remark here that it would be good if the tooltip for JSROOT over TProfile2D would show both the 'content' and 'entries' of the bin, at the moment it shows the content, but misleadingly shows it under entries, e.g. shows ""entries=X"" for a bin with content=X. . ### Reproducer. Here's a reproducer:. ```; %jsroot on; import ROOT; p2 = ROOT.TProfile2D(""p2"",""p2"",10,0,10,10,0,10); p2.Fill(4,4,-1);p2.Fill(6,6,0);p2.Fill(3,3,1); p2.Draw(""COL1Z""); ROOT.gPad.GetCanvas().Draw(); ```; vs drawing with jsroot off -- the bin that has a value of 0 in it is drawn in regular ROOT, but not in jsroot. ![Screenshot 2024-08-15 at 14 00 16](https://github.com/user-attachments/assets/6c6d717e-f779-4476-bdc3-43c4b842adf1); ![Screenshot 2024-08-15 at 14 00 23](https://github.com/user-attachments/assets/65c72733-fcc3-4d3c-aee5-18bbb3c4b468). ### ROOT version. latest. ### Installation method. pre-built. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16244
https://github.com/root-project/root/pull/16247:30,Availability,error,error,30,Fixes the following potential error when building clad:; ```; Command failed: 2; ‘/usr/local/bin/cmake’ ‘–build’ ‘.’ ‘–config’ ‘.’; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16247
https://github.com/root-project/root/pull/16247:119,Modifiability,config,config,119,Fixes the following potential error when building clad:; ```; Command failed: 2; ‘/usr/local/bin/cmake’ ‘–build’ ‘.’ ‘–config’ ‘.’; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16247
https://github.com/root-project/root/pull/16248:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16248
https://github.com/root-project/root/pull/16248:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16248
https://github.com/root-project/root/issues/16249:729,Deployability,Install,Installation,729,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. The following code:. ```; void foo() {; std::unique_ptr<TFile> digitfile(TFile::Open(""emcaldigits.root"", ""READ""));; auto treereader = std::make_unique<TTreeReader>(static_cast<TTree*>(digitfile->Get(""o2sim"")));; std::cout << treereader->GetEntries() << std::endl;; TTreeReaderValue<std::vector<o2::emcal::Digit>> digitbranch(*treereader, ""EMCALDigit"");; TTreeReaderValue<std::vector<o2::emcal::TriggerRecord>> triggerbranch(*treereader, ""EMCALDigitTRGR"");; for (auto &d : *treereader) {; std::cout << ""Foo"" << std::endl;; }; }; ```. iterates once on an empty tree (0 entries). Is that expected?. ### Reproducer. See above. ### ROOT version. 6.30.0x. ### Installation method. aliBuild. ### Operating system. Linux on ARM, macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16249
https://github.com/root-project/root/issues/16250:374,Availability,error,error,374,"See also this discussion here:; https://github.com/root-project/root/pull/15812#issuecomment-2252107168. The PR #15812 introduced a direct dependency of `graf3d/gl` on TASImage, which is only built if `asimage=ON`. It would be better if the PNG export would be done via the `TImage` plugin system, so there is no dependency at build time. Or if this can't be done, at least error out at configuration time if one attempts to build with this combination of flags. Here is the culprit:; https://github.com/root-project/root/blob/master/graf3d/gl/src/TGLSdfFontMaker.cxx#L198. @osschar @linev . See also:; * https://root.cern.ch/doc/master/classTASImage.html; * https://root.cern/doc/master/imgconv_8C.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:387,Deployability,configurat,configuration,387,"See also this discussion here:; https://github.com/root-project/root/pull/15812#issuecomment-2252107168. The PR #15812 introduced a direct dependency of `graf3d/gl` on TASImage, which is only built if `asimage=ON`. It would be better if the PNG export would be done via the `TImage` plugin system, so there is no dependency at build time. Or if this can't be done, at least error out at configuration time if one attempts to build with this combination of flags. Here is the culprit:; https://github.com/root-project/root/blob/master/graf3d/gl/src/TGLSdfFontMaker.cxx#L198. @osschar @linev . See also:; * https://root.cern.ch/doc/master/classTASImage.html; * https://root.cern/doc/master/imgconv_8C.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:139,Integrability,depend,dependency,139,"See also this discussion here:; https://github.com/root-project/root/pull/15812#issuecomment-2252107168. The PR #15812 introduced a direct dependency of `graf3d/gl` on TASImage, which is only built if `asimage=ON`. It would be better if the PNG export would be done via the `TImage` plugin system, so there is no dependency at build time. Or if this can't be done, at least error out at configuration time if one attempts to build with this combination of flags. Here is the culprit:; https://github.com/root-project/root/blob/master/graf3d/gl/src/TGLSdfFontMaker.cxx#L198. @osschar @linev . See also:; * https://root.cern.ch/doc/master/classTASImage.html; * https://root.cern/doc/master/imgconv_8C.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:313,Integrability,depend,dependency,313,"See also this discussion here:; https://github.com/root-project/root/pull/15812#issuecomment-2252107168. The PR #15812 introduced a direct dependency of `graf3d/gl` on TASImage, which is only built if `asimage=ON`. It would be better if the PNG export would be done via the `TImage` plugin system, so there is no dependency at build time. Or if this can't be done, at least error out at configuration time if one attempts to build with this combination of flags. Here is the culprit:; https://github.com/root-project/root/blob/master/graf3d/gl/src/TGLSdfFontMaker.cxx#L198. @osschar @linev . See also:; * https://root.cern.ch/doc/master/classTASImage.html; * https://root.cern/doc/master/imgconv_8C.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:283,Modifiability,plugin,plugin,283,"See also this discussion here:; https://github.com/root-project/root/pull/15812#issuecomment-2252107168. The PR #15812 introduced a direct dependency of `graf3d/gl` on TASImage, which is only built if `asimage=ON`. It would be better if the PNG export would be done via the `TImage` plugin system, so there is no dependency at build time. Or if this can't be done, at least error out at configuration time if one attempts to build with this combination of flags. Here is the culprit:; https://github.com/root-project/root/blob/master/graf3d/gl/src/TGLSdfFontMaker.cxx#L198. @osschar @linev . See also:; * https://root.cern.ch/doc/master/classTASImage.html; * https://root.cern/doc/master/imgconv_8C.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:387,Modifiability,config,configuration,387,"See also this discussion here:; https://github.com/root-project/root/pull/15812#issuecomment-2252107168. The PR #15812 introduced a direct dependency of `graf3d/gl` on TASImage, which is only built if `asimage=ON`. It would be better if the PNG export would be done via the `TImage` plugin system, so there is no dependency at build time. Or if this can't be done, at least error out at configuration time if one attempts to build with this combination of flags. Here is the culprit:; https://github.com/root-project/root/blob/master/graf3d/gl/src/TGLSdfFontMaker.cxx#L198. @osschar @linev . See also:; * https://root.cern.ch/doc/master/classTASImage.html; * https://root.cern/doc/master/imgconv_8C.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16252:50,Availability,failure,failure,50,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails.; The error output sometimes contains:; ```; RDataFrame::Run: event loop was interrupted; RDataFrame::Run: event loop was interrupted; RDataFrame::Run: event loop was interrupted; RDataFrame::Run: event loop was interrupted; RDataFrame::Run: event loop was interrupted; ```; and always contains:; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:195,Availability,down,down,195,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails.; The error output sometimes contains:; ```; RDataFrame::Run: event loop was interrupted; RDataFrame::Run: event loop was interrupted; RDataFrame::Run: event loop was interrupted; RDataFrame::Run: event loop was interrupted; RDataFrame::Run: event loop was interrupted; ```; and always contains:; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:277,Availability,error,error,277,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails.; The error output sometimes contains:; ```; RDataFrame::Run: event loop was interrupted; RDataFrame::Run: event loop was interrupted; RDataFrame::Run: event loop was interrupted; RDataFrame::Run: event loop was interrupted; RDataFrame::Run: event loop was interrupted; ```; and always contains:; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:221,Testability,test,test,221,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails.; The error output sometimes contains:; ```; RDataFrame::Run: event loop was interrupted; RDataFrame::Run: event loop was interrupted; RDataFrame::Run: event loop was interrupted; RDataFrame::Run: event loop was interrupted; RDataFrame::Run: event loop was interrupted; ```; and always contains:; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/pull/16253:20,Availability,error,errors,20,This should fix the errors we see in the nighly builds on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16253
https://github.com/root-project/root/pull/16254:20,Availability,error,errors,20,This should fix the errors we see in the nighly builds on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16254
https://github.com/root-project/root/pull/16255:31,Safety,avoid,avoid,31,Following up on 1bd63965cf1 to avoid warnings like these on macOS:; ```; ld: warning: ignoring duplicate libraries: 'googletest-prefix/src/googletest-build/lib//libgtest.a'; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16255
https://github.com/root-project/root/issues/16256:1206,Deployability,Install,Installation,1206,"### Explain what you would like to see improved and how. The CMake function `REFLEX_GENERATE_DICTIONARY` can only be called once for each CMake target as it generates a file based on the target name. . In CMS code, we allow multiple classes_def*.xml files for each library being created. This has sped up compilation and avoids excessing memory use by the compiler. Because of the restriction in `REFLEX_GENERATE_DICTIONARY` , my experiments to use CMake to generate some CMSSW code was unable to use that function. It appears that if `REFLEX_GENERATE_DICTIONARY` used part of the name of the `SELECTION` argument for the generate class name it could be possible to have multiple calls to the function for the same target. . ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 22 2024, 08:52:38 |; | From heads/master@tags/v6-33-01 |; | With g++ (GCC) 12.3.1 20230527 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. from source. ### Operating system. Linux alma 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16256
https://github.com/root-project/root/issues/16256:321,Safety,avoid,avoids,321,"### Explain what you would like to see improved and how. The CMake function `REFLEX_GENERATE_DICTIONARY` can only be called once for each CMake target as it generates a file based on the target name. . In CMS code, we allow multiple classes_def*.xml files for each library being created. This has sped up compilation and avoids excessing memory use by the compiler. Because of the restriction in `REFLEX_GENERATE_DICTIONARY` , my experiments to use CMake to generate some CMSSW code was unable to use that function. It appears that if `REFLEX_GENERATE_DICTIONARY` used part of the name of the `SELECTION` argument for the generate class name it could be possible to have multiple calls to the function for the same target. . ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 22 2024, 08:52:38 |; | From heads/master@tags/v6-33-01 |; | With g++ (GCC) 12.3.1 20230527 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. from source. ### Operating system. Linux alma 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16256
https://github.com/root-project/root/pull/16259:539,Deployability,update,updated,539,"# This Pull request:. ## Changes or fixes:; Fixes an issue in the facet surface area calculation which was mixing vertex indexing at the facet level and at the shape level, resulting in spurious surface area warnings. `surfaceArea += 0.5 * Vertex_t::Cross(e1, e2).Mag()` works when `e1` and `e2` are chords within the same facet. That is only guaranteed when using the direction provided by `facet = fFacets[ifacet]` and `fVertices[facet[i + 1]]`, not by using `GetVertex(i+1)` directly. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16259
https://github.com/root-project/root/pull/16259:509,Testability,test,tested,509,"# This Pull request:. ## Changes or fixes:; Fixes an issue in the facet surface area calculation which was mixing vertex indexing at the facet level and at the shape level, resulting in spurious surface area warnings. `surfaceArea += 0.5 * Vertex_t::Cross(e1, e2).Mag()` works when `e1` and `e2` are chords within the same facet. That is only guaranteed when using the direction provided by `facet = fFacets[ifacet]` and `fVertices[facet[i + 1]]`, not by using `GetVertex(i+1)` directly. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16259
https://github.com/root-project/root/pull/16260:95,Deployability,Update,Update,95,"Now that `builtin_afterimage` is deprecated and always `ON`, it has to build on all platforms. Update `config.guess` to the latest upstream version to auto-detect `riscv64-unknown-linux-gnu` and fix the build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16260
https://github.com/root-project/root/pull/16260:103,Modifiability,config,config,103,"Now that `builtin_afterimage` is deprecated and always `ON`, it has to build on all platforms. Update `config.guess` to the latest upstream version to auto-detect `riscv64-unknown-linux-gnu` and fix the build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16260
https://github.com/root-project/root/pull/16260:156,Safety,detect,detect,156,"Now that `builtin_afterimage` is deprecated and always `ON`, it has to build on all platforms. Update `config.guess` to the latest upstream version to auto-detect `riscv64-unknown-linux-gnu` and fix the build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16260
https://github.com/root-project/root/pull/16261:0,Safety,Avoid,Avoids,0,Avoids the following compiler warning by Clang:; ```; delete called on non-final 'ROOT::Experimental::Internal::RPageAllocatorHeap' that has virtual functions but non-virtual destructor; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16261
https://github.com/root-project/root/pull/16262:134,Deployability,update,updated,134,"to avoid excessive memory usage, which can lead to issues on machines with a low memory per core. - [v] tested changes locally; - [v] updated the docs (if necessary). Fixes #16252",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16262
https://github.com/root-project/root/pull/16262:3,Safety,avoid,avoid,3,"to avoid excessive memory usage, which can lead to issues on machines with a low memory per core. - [v] tested changes locally; - [v] updated the docs (if necessary). Fixes #16252",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16262
https://github.com/root-project/root/pull/16262:104,Testability,test,tested,104,"to avoid excessive memory usage, which can lead to issues on machines with a low memory per core. - [v] tested changes locally; - [v] updated the docs (if necessary). Fixes #16252",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16262
https://github.com/root-project/root/pull/16267:309,Deployability,update,updated,309,"# This Pull request:; adds the `html` build options to allow enabling/disabling building of THtml-related code. ; Setting the flag to **OFF** by default (meaning we won't build html anymore by default), since we intend to deprecate THtml in the near future. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16267
https://github.com/root-project/root/pull/16267:279,Testability,test,tested,279,"# This Pull request:; adds the `html` build options to allow enabling/disabling building of THtml-related code. ; Setting the flag to **OFF** by default (meaning we won't build html anymore by default), since we intend to deprecate THtml in the near future. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16267
https://github.com/root-project/root/pull/16268:160,Deployability,upgrade,upgrade,160,"Commit 785c9df34d (""Restore symbol lookup in child interpreters"") added a `DefinitionGenerator` to allow symbol lookup in the parent `IncrementalJIT` after the upgrade to LLVM 13. It appears that instead of the unmangled name, we need to lookup already linker mangled names. This fixes the tests `CodeUnloading/AtExit.C` and `MultipleInterpreters/MultipleInterpreters.C` on macOS, which adds an underscore during linker mangling. No change on Linux because there is no additional linker name mangling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16268
https://github.com/root-project/root/pull/16268:290,Testability,test,tests,290,"Commit 785c9df34d (""Restore symbol lookup in child interpreters"") added a `DefinitionGenerator` to allow symbol lookup in the parent `IncrementalJIT` after the upgrade to LLVM 13. It appears that instead of the unmangled name, we need to lookup already linker mangled names. This fixes the tests `CodeUnloading/AtExit.C` and `MultipleInterpreters/MultipleInterpreters.C` on macOS, which adds an underscore during linker mangling. No change on Linux because there is no additional linker name mangling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16268
https://github.com/root-project/root/issues/16269:289,Deployability,install,install,289,"### Description. `libstdc++` provides `std::filesystem` symbols in a static archive `libstdc++fs.a`. This causes problems on some platforms because the linker might strip the symbols. See https://github.com/root-project/root/issues/11601 and the note on `devtoolset`s in https://root.cern/install/build_from_source/#caveats for instances of similar problems. If a proper solution is found, the Cling test `test/Prompt/ValuePrinter/FileSystemPath.C` should be re-enabled (it was disabled in https://github.com/root-project/root/pull/16258). ### Reproducer. Try to run in standalone `cling`:; ```; #include <filesystem>; auto p = std::filesystem::path(""/some/path/foo.cpp"");; ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux, with `libstdc++`. ### Additional context. It seems to work in ROOT itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16269
https://github.com/root-project/root/issues/16269:711,Deployability,Install,Installation,711,"### Description. `libstdc++` provides `std::filesystem` symbols in a static archive `libstdc++fs.a`. This causes problems on some platforms because the linker might strip the symbols. See https://github.com/root-project/root/issues/11601 and the note on `devtoolset`s in https://root.cern/install/build_from_source/#caveats for instances of similar problems. If a proper solution is found, the Cling test `test/Prompt/ValuePrinter/FileSystemPath.C` should be re-enabled (it was disabled in https://github.com/root-project/root/pull/16258). ### Reproducer. Try to run in standalone `cling`:; ```; #include <filesystem>; auto p = std::filesystem::path(""/some/path/foo.cpp"");; ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux, with `libstdc++`. ### Additional context. It seems to work in ROOT itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16269
https://github.com/root-project/root/issues/16269:400,Testability,test,test,400,"### Description. `libstdc++` provides `std::filesystem` symbols in a static archive `libstdc++fs.a`. This causes problems on some platforms because the linker might strip the symbols. See https://github.com/root-project/root/issues/11601 and the note on `devtoolset`s in https://root.cern/install/build_from_source/#caveats for instances of similar problems. If a proper solution is found, the Cling test `test/Prompt/ValuePrinter/FileSystemPath.C` should be re-enabled (it was disabled in https://github.com/root-project/root/pull/16258). ### Reproducer. Try to run in standalone `cling`:; ```; #include <filesystem>; auto p = std::filesystem::path(""/some/path/foo.cpp"");; ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux, with `libstdc++`. ### Additional context. It seems to work in ROOT itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16269
https://github.com/root-project/root/issues/16269:406,Testability,test,test,406,"### Description. `libstdc++` provides `std::filesystem` symbols in a static archive `libstdc++fs.a`. This causes problems on some platforms because the linker might strip the symbols. See https://github.com/root-project/root/issues/11601 and the note on `devtoolset`s in https://root.cern/install/build_from_source/#caveats for instances of similar problems. If a proper solution is found, the Cling test `test/Prompt/ValuePrinter/FileSystemPath.C` should be re-enabled (it was disabled in https://github.com/root-project/root/pull/16258). ### Reproducer. Try to run in standalone `cling`:; ```; #include <filesystem>; auto p = std::filesystem::path(""/some/path/foo.cpp"");; ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux, with `libstdc++`. ### Additional context. It seems to work in ROOT itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16269
https://github.com/root-project/root/issues/16270:97,Testability,test,tests,97,"https://github.com/root-project/root/pull/16258 proposes to disable many `DynamicLibraryManager` tests on macOS that never worked on that platform since their introduction (they pass fine on Linux). The tests should be debugged, fixed, and eventually re-enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16270
https://github.com/root-project/root/issues/16270:203,Testability,test,tests,203,"https://github.com/root-project/root/pull/16258 proposes to disable many `DynamicLibraryManager` tests on macOS that never worked on that platform since their introduction (they pass fine on Linux). The tests should be debugged, fixed, and eventually re-enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16270
https://github.com/root-project/root/pull/16273:30,Availability,failure,failures,30,Should decrease the number of failures and retries when running the tests on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16273
https://github.com/root-project/root/pull/16273:68,Testability,test,tests,68,Should decrease the number of failures and retries when running the tests on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16273
https://github.com/root-project/root/pull/16274:147,Integrability,depend,dependencies,147,"Our CMake code modifies `find_package` to ignore any ROOT builtins, such that the builtin LLVM doesn't find and use system versions of the builtin dependencies. This is a bit hacky, but fortunately this needs to be done only when builtins are used. Therefore, this commit suggests to only do this redefinition of `find_package` if any builtins are used. This closes #8633, where it was requested to avoid this hack for the sake of being compatible with the `vcpkg` package manager. Although the hack is not completely removed, it is removed for the case where not builtins are used, which is probably what is done when using a C++ package manager to manage dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16274
https://github.com/root-project/root/pull/16274:657,Integrability,depend,dependencies,657,"Our CMake code modifies `find_package` to ignore any ROOT builtins, such that the builtin LLVM doesn't find and use system versions of the builtin dependencies. This is a bit hacky, but fortunately this needs to be done only when builtins are used. Therefore, this commit suggests to only do this redefinition of `find_package` if any builtins are used. This closes #8633, where it was requested to avoid this hack for the sake of being compatible with the `vcpkg` package manager. Although the hack is not completely removed, it is removed for the case where not builtins are used, which is probably what is done when using a C++ package manager to manage dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16274
https://github.com/root-project/root/pull/16274:399,Safety,avoid,avoid,399,"Our CMake code modifies `find_package` to ignore any ROOT builtins, such that the builtin LLVM doesn't find and use system versions of the builtin dependencies. This is a bit hacky, but fortunately this needs to be done only when builtins are used. Therefore, this commit suggests to only do this redefinition of `find_package` if any builtins are used. This closes #8633, where it was requested to avoid this hack for the sake of being compatible with the `vcpkg` package manager. Although the hack is not completely removed, it is removed for the case where not builtins are used, which is probably what is done when using a C++ package manager to manage dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16274
https://github.com/root-project/root/pull/16275:148,Modifiability,refactor,refactor,148,"This is already done the same way for many other external projects, like; Clad, etc. Closes https://github.com/root-project/root/issues/8815. Also, refactor some CMake code to avoid code duplication.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16275
https://github.com/root-project/root/pull/16275:176,Safety,avoid,avoid,176,"This is already done the same way for many other external projects, like; Clad, etc. Closes https://github.com/root-project/root/issues/8815. Also, refactor some CMake code to avoid code duplication.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16275
https://github.com/root-project/root/pull/16278:43,Availability,failure,failures,43,"This reverts commit 2a265a3a, which caused failures in the nightlies even though the CI in #16274 was green.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16278
https://github.com/root-project/root/pull/16278:102,Energy Efficiency,green,green,102,"This reverts commit 2a265a3a, which caused failures in the nightlies even though the CI in #16274 was green.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16278
https://github.com/root-project/root/pull/16279:80,Testability,test,testing,80,Backport two PRs to fix the usage of the `ROOT_ADD_GTEST` macro in builds with `testing=OFF`. * https://github.com/root-project/root/pull/16243; * https://github.com/root-project/root/pull/16255,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16281:12,Availability,error,error,12,"Improve the error message when you try to build NumPy arrays with types; that the interpreter doesn't know about. Running the reproducer from the JIRA ticket, one now gets this output:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 13, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 243, in RDataFrameAsNumpy; raise RuntimeError(; RuntimeError: The column named ""foo"" is of type ""Foo"", which is not known to the ROOT interpreter. Please load the corresponding header files or dictionaries.; ```. This was the output before:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 5, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 236, in RDataFrameAsNumpy; result_ptrs[column] = df.Take[column_type](column); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: Could not find ""Take<Foo>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""Take<Foo>(std::string)""; ```. Closes the following Jira issue:; https://its.cern.ch/jira/browse/ROOT-10930",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16281
https://github.com/root-project/root/pull/16281:257,Availability,avail,available,257,"Improve the error message when you try to build NumPy arrays with types; that the interpreter doesn't know about. Running the reproducer from the JIRA ticket, one now gets this output:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 13, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 243, in RDataFrameAsNumpy; raise RuntimeError(; RuntimeError: The column named ""foo"" is of type ""Foo"", which is not known to the ROOT interpreter. Please load the corresponding header files or dictionaries.; ```. This was the output before:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 5, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 236, in RDataFrameAsNumpy; result_ptrs[column] = df.Take[column_type](column); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: Could not find ""Take<Foo>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""Take<Foo>(std::string)""; ```. Closes the following Jira issue:; https://its.cern.ch/jira/browse/ROOT-10930",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16281
https://github.com/root-project/root/pull/16281:873,Availability,avail,available,873,"Improve the error message when you try to build NumPy arrays with types; that the interpreter doesn't know about. Running the reproducer from the JIRA ticket, one now gets this output:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 13, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 243, in RDataFrameAsNumpy; raise RuntimeError(; RuntimeError: The column named ""foo"" is of type ""Foo"", which is not known to the ROOT interpreter. Please load the corresponding header files or dictionaries.; ```. This was the output before:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 5, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 236, in RDataFrameAsNumpy; result_ptrs[column] = df.Take[column_type](column); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: Could not find ""Take<Foo>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""Take<Foo>(std::string)""; ```. Closes the following Jira issue:; https://its.cern.ch/jira/browse/ROOT-10930",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16281
https://github.com/root-project/root/pull/16281:1353,Availability,error,errors,1353,"Improve the error message when you try to build NumPy arrays with types; that the interpreter doesn't know about. Running the reproducer from the JIRA ticket, one now gets this output:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 13, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 243, in RDataFrameAsNumpy; raise RuntimeError(; RuntimeError: The column named ""foo"" is of type ""Foo"", which is not known to the ROOT interpreter. Please load the corresponding header files or dictionaries.; ```. This was the output before:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 5, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 236, in RDataFrameAsNumpy; result_ptrs[column] = df.Take[column_type](column); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: Could not find ""Take<Foo>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""Take<Foo>(std::string)""; ```. Closes the following Jira issue:; https://its.cern.ch/jira/browse/ROOT-10930",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16281
https://github.com/root-project/root/pull/16281:501,Deployability,install,install,501,"Improve the error message when you try to build NumPy arrays with types; that the interpreter doesn't know about. Running the reproducer from the JIRA ticket, one now gets this output:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 13, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 243, in RDataFrameAsNumpy; raise RuntimeError(; RuntimeError: The column named ""foo"" is of type ""Foo"", which is not known to the ROOT interpreter. Please load the corresponding header files or dictionaries.; ```. This was the output before:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 5, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 236, in RDataFrameAsNumpy; result_ptrs[column] = df.Take[column_type](column); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: Could not find ""Take<Foo>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""Take<Foo>(std::string)""; ```. Closes the following Jira issue:; https://its.cern.ch/jira/browse/ROOT-10930",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16281
https://github.com/root-project/root/pull/16281:1116,Deployability,install,install,1116,"Improve the error message when you try to build NumPy arrays with types; that the interpreter doesn't know about. Running the reproducer from the JIRA ticket, one now gets this output:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 13, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 243, in RDataFrameAsNumpy; raise RuntimeError(; RuntimeError: The column named ""foo"" is of type ""Foo"", which is not known to the ROOT interpreter. Please load the corresponding header files or dictionaries.; ```. This was the output before:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 5, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 236, in RDataFrameAsNumpy; result_ptrs[column] = df.Take[column_type](column); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: Could not find ""Take<Foo>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""Take<Foo>(std::string)""; ```. Closes the following Jira issue:; https://its.cern.ch/jira/browse/ROOT-10930",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16281
https://github.com/root-project/root/pull/16281:18,Integrability,message,message,18,"Improve the error message when you try to build NumPy arrays with types; that the interpreter doesn't know about. Running the reproducer from the JIRA ticket, one now gets this output:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 13, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 243, in RDataFrameAsNumpy; raise RuntimeError(; RuntimeError: The column named ""foo"" is of type ""Foo"", which is not known to the ROOT interpreter. Please load the corresponding header files or dictionaries.; ```. This was the output before:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 5, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 236, in RDataFrameAsNumpy; result_ptrs[column] = df.Take[column_type](column); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: Could not find ""Take<Foo>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""Take<Foo>(std::string)""; ```. Closes the following Jira issue:; https://its.cern.ch/jira/browse/ROOT-10930",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16281
https://github.com/root-project/root/pull/16281:714,Performance,load,load,714,"Improve the error message when you try to build NumPy arrays with types; that the interpreter doesn't know about. Running the reproducer from the JIRA ticket, one now gets this output:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 13, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 243, in RDataFrameAsNumpy; raise RuntimeError(; RuntimeError: The column named ""foo"" is of type ""Foo"", which is not known to the ROOT interpreter. Please load the corresponding header files or dictionaries.; ```. This was the output before:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 5, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 236, in RDataFrameAsNumpy; result_ptrs[column] = df.Take[column_type](column); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: Could not find ""Take<Foo>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""Take<Foo>(std::string)""; ```. Closes the following Jira issue:; https://its.cern.ch/jira/browse/ROOT-10930",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16281
https://github.com/root-project/root/pull/16282:22,Deployability,Update,Updates,22,"# This Pull request:; Updates the implementation of BatchNormalization Operator to parse input tensors with parametric shapes.; - `x` input tensor can have shapes of form `{dim1, dim2, dim3}`; - `scale`, `B`, `input_mean`, `input_var` tensors need to be initialized tensors. [ONNX Documentation](https://github.com/onnx/onnx/blob/main/docs/Operators.md#BatchNormalization); ## Changes or fixes:; - Updated implementation in the `ROperator_BatchNormalization.hxx` file to handle parametric shapes. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16282
https://github.com/root-project/root/pull/16282:398,Deployability,Update,Updated,398,"# This Pull request:; Updates the implementation of BatchNormalization Operator to parse input tensors with parametric shapes.; - `x` input tensor can have shapes of form `{dim1, dim2, dim3}`; - `scale`, `B`, `input_mean`, `input_var` tensors need to be initialized tensors. [ONNX Documentation](https://github.com/onnx/onnx/blob/main/docs/Operators.md#BatchNormalization); ## Changes or fixes:; - Updated implementation in the `ROperator_BatchNormalization.hxx` file to handle parametric shapes. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16282
https://github.com/root-project/root/pull/16282:548,Deployability,update,updated,548,"# This Pull request:; Updates the implementation of BatchNormalization Operator to parse input tensors with parametric shapes.; - `x` input tensor can have shapes of form `{dim1, dim2, dim3}`; - `scale`, `B`, `input_mean`, `input_var` tensors need to be initialized tensors. [ONNX Documentation](https://github.com/onnx/onnx/blob/main/docs/Operators.md#BatchNormalization); ## Changes or fixes:; - Updated implementation in the `ROperator_BatchNormalization.hxx` file to handle parametric shapes. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16282
https://github.com/root-project/root/pull/16282:518,Testability,test,tested,518,"# This Pull request:; Updates the implementation of BatchNormalization Operator to parse input tensors with parametric shapes.; - `x` input tensor can have shapes of form `{dim1, dim2, dim3}`; - `scale`, `B`, `input_mean`, `input_var` tensors need to be initialized tensors. [ONNX Documentation](https://github.com/onnx/onnx/blob/main/docs/Operators.md#BatchNormalization); ## Changes or fixes:; - Updated implementation in the `ROperator_BatchNormalization.hxx` file to handle parametric shapes. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16282
https://github.com/root-project/root/pull/16284:466,Availability,down,down,466,"With the helpers for column creation introduced by #16116, memory consumption during compilation significantly increases (from ~200MB to ~600MB using clang) due to the fact that templated field types, and therefore all possible column representations are automatically instantiated. This commit prevents this automatic instantiation from happening by `extern`-alizing all `RSimpleField` template specializations and only instantiating them in `RField.cxx`, bringing down memory consumption to ~230MB.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16284
https://github.com/root-project/root/pull/16284:66,Energy Efficiency,consumption,consumption,66,"With the helpers for column creation introduced by #16116, memory consumption during compilation significantly increases (from ~200MB to ~600MB using clang) due to the fact that templated field types, and therefore all possible column representations are automatically instantiated. This commit prevents this automatic instantiation from happening by `extern`-alizing all `RSimpleField` template specializations and only instantiating them in `RField.cxx`, bringing down memory consumption to ~230MB.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16284
https://github.com/root-project/root/pull/16284:478,Energy Efficiency,consumption,consumption,478,"With the helpers for column creation introduced by #16116, memory consumption during compilation significantly increases (from ~200MB to ~600MB using clang) due to the fact that templated field types, and therefore all possible column representations are automatically instantiated. This commit prevents this automatic instantiation from happening by `extern`-alizing all `RSimpleField` template specializations and only instantiating them in `RField.cxx`, bringing down memory consumption to ~230MB.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16284
https://github.com/root-project/root/pull/16285:107,Availability,error,error,107,"**This is a replay of #16274 with the ""clear build"" label for the CI, to see if we can reproduce the build error that were observed after merging said PR**. Our CMake code modifies `find_package` to ignore any ROOT builtins, such that the builtin LLVM doesn't find and use system versions of the builtin dependencies. This is a bit hacky, but fortunately this needs to be done only when builtins are used. Therefore, this commit suggests to only do this redefinition of `find_package` if any builtins are used. This closes #8633, where it was requested to avoid this hack for the sake of being compatible with the `vcpkg` package manager. Although the hack is not completely removed, it is removed for the case where not builtins are used, which is probably what is done when using a C++ package manager to manage dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16285
https://github.com/root-project/root/pull/16285:304,Integrability,depend,dependencies,304,"**This is a replay of #16274 with the ""clear build"" label for the CI, to see if we can reproduce the build error that were observed after merging said PR**. Our CMake code modifies `find_package` to ignore any ROOT builtins, such that the builtin LLVM doesn't find and use system versions of the builtin dependencies. This is a bit hacky, but fortunately this needs to be done only when builtins are used. Therefore, this commit suggests to only do this redefinition of `find_package` if any builtins are used. This closes #8633, where it was requested to avoid this hack for the sake of being compatible with the `vcpkg` package manager. Although the hack is not completely removed, it is removed for the case where not builtins are used, which is probably what is done when using a C++ package manager to manage dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16285
https://github.com/root-project/root/pull/16285:814,Integrability,depend,dependencies,814,"**This is a replay of #16274 with the ""clear build"" label for the CI, to see if we can reproduce the build error that were observed after merging said PR**. Our CMake code modifies `find_package` to ignore any ROOT builtins, such that the builtin LLVM doesn't find and use system versions of the builtin dependencies. This is a bit hacky, but fortunately this needs to be done only when builtins are used. Therefore, this commit suggests to only do this redefinition of `find_package` if any builtins are used. This closes #8633, where it was requested to avoid this hack for the sake of being compatible with the `vcpkg` package manager. Although the hack is not completely removed, it is removed for the case where not builtins are used, which is probably what is done when using a C++ package manager to manage dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16285
https://github.com/root-project/root/pull/16285:556,Safety,avoid,avoid,556,"**This is a replay of #16274 with the ""clear build"" label for the CI, to see if we can reproduce the build error that were observed after merging said PR**. Our CMake code modifies `find_package` to ignore any ROOT builtins, such that the builtin LLVM doesn't find and use system versions of the builtin dependencies. This is a bit hacky, but fortunately this needs to be done only when builtins are used. Therefore, this commit suggests to only do this redefinition of `find_package` if any builtins are used. This closes #8633, where it was requested to avoid this hack for the sake of being compatible with the `vcpkg` package manager. Although the hack is not completely removed, it is removed for the case where not builtins are used, which is probably what is done when using a C++ package manager to manage dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16285
https://github.com/root-project/root/pull/16285:39,Usability,clear,clear,39,"**This is a replay of #16274 with the ""clear build"" label for the CI, to see if we can reproduce the build error that were observed after merging said PR**. Our CMake code modifies `find_package` to ignore any ROOT builtins, such that the builtin LLVM doesn't find and use system versions of the builtin dependencies. This is a bit hacky, but fortunately this needs to be done only when builtins are used. Therefore, this commit suggests to only do this redefinition of `find_package` if any builtins are used. This closes #8633, where it was requested to avoid this hack for the sake of being compatible with the `vcpkg` package manager. Although the hack is not completely removed, it is removed for the case where not builtins are used, which is probably what is done when using a C++ package manager to manage dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16285
https://github.com/root-project/root/issues/16290:762,Energy Efficiency,reduce,reduce,762,"It would be good to provide a tutorial how we (RNTuple developers) envision the APIs to be used by experiment frameworks. Relevant classes and methods that come to mind:; * Creation of (bare) `RNTupleModel` and `RFieldToken`s (for parallel writing, see also https://github.com/root-project/root/issues/16236); * Creation of (multiple) `RNTupleWriter` / `RNTupleParallelWriter` when `Append`ing to a single `TFile`; * For parallel writing, creation of `RNTupleFillContext` per thread or another granularity; * Creation of (potentially multiple) `REntry`s and using `BindRawPtr()` to fill objects; * Using `FillNoFlush()`, `RNTupleFillStatus::ShouldFlushCluster()`, `FlushColumns()` (see https://github.com/root-project/root/issues/16241) and `CommitCluster()` to reduce the time in critical sections",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16290
https://github.com/root-project/root/pull/16292:8,Integrability,depend,dependencies,8,The RDF dependencies were cleaned up in commit 8d7fa5f87c and commit f215692b3d removed the RDF unit test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16292
https://github.com/root-project/root/pull/16292:101,Testability,test,test,101,The RDF dependencies were cleaned up in commit 8d7fa5f87c and commit f215692b3d removed the RDF unit test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16292
https://github.com/root-project/root/pull/16293:77,Deployability,Update,Updated,77,The `src` of `RColumnElement::Pack/Unpack` is not intended to be modifiable. Updated the signatures to reflect that.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16293
https://github.com/root-project/root/pull/16296:146,Availability,down,downstream,146,"[CppInterOp](https://github.com/compiler-research/CppInterOp) exposes API from Clang and LLVM in a mostly backward compatibe way. The API support downstream tools that utilize interactive C++ by using the compiler as a service. Adopting more of CppInterOp in ROOT will help simplify the LLVM migration process and allow us to upstream more patches to either CppInterOp or LLVM. @aaronj0, you can take it from here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16296
https://github.com/root-project/root/pull/16296:340,Deployability,patch,patches,340,"[CppInterOp](https://github.com/compiler-research/CppInterOp) exposes API from Clang and LLVM in a mostly backward compatibe way. The API support downstream tools that utilize interactive C++ by using the compiler as a service. Adopting more of CppInterOp in ROOT will help simplify the LLVM migration process and allow us to upstream more patches to either CppInterOp or LLVM. @aaronj0, you can take it from here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16296
https://github.com/root-project/root/pull/16296:62,Security,expose,exposes,62,"[CppInterOp](https://github.com/compiler-research/CppInterOp) exposes API from Clang and LLVM in a mostly backward compatibe way. The API support downstream tools that utilize interactive C++ by using the compiler as a service. Adopting more of CppInterOp in ROOT will help simplify the LLVM migration process and allow us to upstream more patches to either CppInterOp or LLVM. @aaronj0, you can take it from here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16296
https://github.com/root-project/root/pull/16296:274,Usability,simpl,simplify,274,"[CppInterOp](https://github.com/compiler-research/CppInterOp) exposes API from Clang and LLVM in a mostly backward compatibe way. The API support downstream tools that utilize interactive C++ by using the compiler as a service. Adopting more of CppInterOp in ROOT will help simplify the LLVM migration process and allow us to upstream more patches to either CppInterOp or LLVM. @aaronj0, you can take it from here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16296
https://github.com/root-project/root/pull/16297:283,Deployability,patch,patches,283,"Backport of; * https://github.com/root-project/root/pull/16258 (partial, the change in `CIFactory.cpp` is not needed); * https://github.com/root-project/root/pull/16268 (which fixes two Cling tests on macOS and is not exercised by ROOT). The reason I propose these is that `v6-32-00-patches` is the current release with LLVM 16, which would be good to have in a fully working state before merging the upgrade to LLVM 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16297
https://github.com/root-project/root/pull/16297:307,Deployability,release,release,307,"Backport of; * https://github.com/root-project/root/pull/16258 (partial, the change in `CIFactory.cpp` is not needed); * https://github.com/root-project/root/pull/16268 (which fixes two Cling tests on macOS and is not exercised by ROOT). The reason I propose these is that `v6-32-00-patches` is the current release with LLVM 16, which would be good to have in a fully working state before merging the upgrade to LLVM 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16297
https://github.com/root-project/root/pull/16297:401,Deployability,upgrade,upgrade,401,"Backport of; * https://github.com/root-project/root/pull/16258 (partial, the change in `CIFactory.cpp` is not needed); * https://github.com/root-project/root/pull/16268 (which fixes two Cling tests on macOS and is not exercised by ROOT). The reason I propose these is that `v6-32-00-patches` is the current release with LLVM 16, which would be good to have in a fully working state before merging the upgrade to LLVM 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16297
https://github.com/root-project/root/pull/16297:192,Testability,test,tests,192,"Backport of; * https://github.com/root-project/root/pull/16258 (partial, the change in `CIFactory.cpp` is not needed); * https://github.com/root-project/root/pull/16268 (which fixes two Cling tests on macOS and is not exercised by ROOT). The reason I propose these is that `v6-32-00-patches` is the current release with LLVM 16, which would be good to have in a fully working state before merging the upgrade to LLVM 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16297
https://github.com/root-project/root/issues/16298:683,Deployability,install,install,683,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The following code crashes in ROOT >= 6.32, it was ok in ROOT 6.30. ```python; import ROOT. inputfile = ROOT.TFile.Open(""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""); inputtree=inputfile.Get(""Events""); tmprdf = ROOT.RDataFrame(inputtree); cols=tmprdf.GetColumnNames(). #THIS CRASHES; for col in cols:; print(col); print( tmprdf.GetColumnType(col) ). # THIS WORKS:; #print(cols[0]); #print(tmprdf.GetColumnType(cols[0])); ```. ### Reproducer. ssh lxplus; python3 ~arizzi/public/repro.py. ### ROOT version. ROOT 6.32.02 ; lxplus default install. ### Installation method. lxplus. ### Operating system. lxplus. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16298
https://github.com/root-project/root/issues/16298:696,Deployability,Install,Installation,696,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The following code crashes in ROOT >= 6.32, it was ok in ROOT 6.30. ```python; import ROOT. inputfile = ROOT.TFile.Open(""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""); inputtree=inputfile.Get(""Events""); tmprdf = ROOT.RDataFrame(inputtree); cols=tmprdf.GetColumnNames(). #THIS CRASHES; for col in cols:; print(col); print( tmprdf.GetColumnType(col) ). # THIS WORKS:; #print(cols[0]); #print(tmprdf.GetColumnType(cols[0])); ```. ### Reproducer. ssh lxplus; python3 ~arizzi/public/repro.py. ### ROOT version. ROOT 6.32.02 ; lxplus default install. ### Installation method. lxplus. ### Operating system. lxplus. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16298
https://github.com/root-project/root/pull/16299:1793,Deployability,update,updated,1793,"# This Pull request:; by @hahnjo suggestion, since we are exposing a type-erased virtual interface for `RColumnElement` through `RColumnElementBase`, we can hide all the concrete definitions into a cxx file.; This has the benefit of reducing the compile time of any translation unit that includes `RColumnElementBase.hxx` significantly, as the compiler won't have to instantiate all the combination matrix of `RColumnElement<CppT, ColumnType>` every time.; It also let us have better control on exactly which types of `RColumnElement` we allow to instantiate by explicitly listing them into a proxy enum. ## Changes or fixes:; - renamed `RColumnElement.hxx` to `RColumnElementBase.hxx`; - moved all concrete definitions from `RColumnElementBase.hxx` to `src/RColumnElement.hxx`. This is a private header file that is included by `RColumnElement.cxx` and by `ntuple_endian.cxx`. The reason to separate this from `RColumnElement.cxx` is that `ntuple_endian.cxx` needs to simulate a big-endian machine by defining `R__LITTLE_ENDIAN 0`, which changes the definitions of some `RColumnElement`s. To avoid including the whole `RColumnElement.cxx` in the test, we decided to split the definitions into a file that can be included independently by the test. It's not a perfect solution (the test executable ends up with mismatching instantiations of RColumnElement since it links to libROOTNTuple.so) but it's technically not worse than before. We still might want to think of alternative solutions.; - introduces an enum `EColumnCppType` that lists all the allowed c++ in-memory types for RColumnElement. This is used internally to map the templated `RColumnElementBase::Generate` to a non-templated function that can be implemented in the cxx file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16299
https://github.com/root-project/root/pull/16299:89,Integrability,interface,interface,89,"# This Pull request:; by @hahnjo suggestion, since we are exposing a type-erased virtual interface for `RColumnElement` through `RColumnElementBase`, we can hide all the concrete definitions into a cxx file.; This has the benefit of reducing the compile time of any translation unit that includes `RColumnElementBase.hxx` significantly, as the compiler won't have to instantiate all the combination matrix of `RColumnElement<CppT, ColumnType>` every time.; It also let us have better control on exactly which types of `RColumnElement` we allow to instantiate by explicitly listing them into a proxy enum. ## Changes or fixes:; - renamed `RColumnElement.hxx` to `RColumnElementBase.hxx`; - moved all concrete definitions from `RColumnElementBase.hxx` to `src/RColumnElement.hxx`. This is a private header file that is included by `RColumnElement.cxx` and by `ntuple_endian.cxx`. The reason to separate this from `RColumnElement.cxx` is that `ntuple_endian.cxx` needs to simulate a big-endian machine by defining `R__LITTLE_ENDIAN 0`, which changes the definitions of some `RColumnElement`s. To avoid including the whole `RColumnElement.cxx` in the test, we decided to split the definitions into a file that can be included independently by the test. It's not a perfect solution (the test executable ends up with mismatching instantiations of RColumnElement since it links to libROOTNTuple.so) but it's technically not worse than before. We still might want to think of alternative solutions.; - introduces an enum `EColumnCppType` that lists all the allowed c++ in-memory types for RColumnElement. This is used internally to map the templated `RColumnElementBase::Generate` to a non-templated function that can be implemented in the cxx file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16299
https://github.com/root-project/root/pull/16299:1093,Safety,avoid,avoid,1093,"# This Pull request:; by @hahnjo suggestion, since we are exposing a type-erased virtual interface for `RColumnElement` through `RColumnElementBase`, we can hide all the concrete definitions into a cxx file.; This has the benefit of reducing the compile time of any translation unit that includes `RColumnElementBase.hxx` significantly, as the compiler won't have to instantiate all the combination matrix of `RColumnElement<CppT, ColumnType>` every time.; It also let us have better control on exactly which types of `RColumnElement` we allow to instantiate by explicitly listing them into a proxy enum. ## Changes or fixes:; - renamed `RColumnElement.hxx` to `RColumnElementBase.hxx`; - moved all concrete definitions from `RColumnElementBase.hxx` to `src/RColumnElement.hxx`. This is a private header file that is included by `RColumnElement.cxx` and by `ntuple_endian.cxx`. The reason to separate this from `RColumnElement.cxx` is that `ntuple_endian.cxx` needs to simulate a big-endian machine by defining `R__LITTLE_ENDIAN 0`, which changes the definitions of some `RColumnElement`s. To avoid including the whole `RColumnElement.cxx` in the test, we decided to split the definitions into a file that can be included independently by the test. It's not a perfect solution (the test executable ends up with mismatching instantiations of RColumnElement since it links to libROOTNTuple.so) but it's technically not worse than before. We still might want to think of alternative solutions.; - introduces an enum `EColumnCppType` that lists all the allowed c++ in-memory types for RColumnElement. This is used internally to map the templated `RColumnElementBase::Generate` to a non-templated function that can be implemented in the cxx file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16299
https://github.com/root-project/root/pull/16299:1147,Testability,test,test,1147,"# This Pull request:; by @hahnjo suggestion, since we are exposing a type-erased virtual interface for `RColumnElement` through `RColumnElementBase`, we can hide all the concrete definitions into a cxx file.; This has the benefit of reducing the compile time of any translation unit that includes `RColumnElementBase.hxx` significantly, as the compiler won't have to instantiate all the combination matrix of `RColumnElement<CppT, ColumnType>` every time.; It also let us have better control on exactly which types of `RColumnElement` we allow to instantiate by explicitly listing them into a proxy enum. ## Changes or fixes:; - renamed `RColumnElement.hxx` to `RColumnElementBase.hxx`; - moved all concrete definitions from `RColumnElementBase.hxx` to `src/RColumnElement.hxx`. This is a private header file that is included by `RColumnElement.cxx` and by `ntuple_endian.cxx`. The reason to separate this from `RColumnElement.cxx` is that `ntuple_endian.cxx` needs to simulate a big-endian machine by defining `R__LITTLE_ENDIAN 0`, which changes the definitions of some `RColumnElement`s. To avoid including the whole `RColumnElement.cxx` in the test, we decided to split the definitions into a file that can be included independently by the test. It's not a perfect solution (the test executable ends up with mismatching instantiations of RColumnElement since it links to libROOTNTuple.so) but it's technically not worse than before. We still might want to think of alternative solutions.; - introduces an enum `EColumnCppType` that lists all the allowed c++ in-memory types for RColumnElement. This is used internally to map the templated `RColumnElementBase::Generate` to a non-templated function that can be implemented in the cxx file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16299
https://github.com/root-project/root/pull/16299:1243,Testability,test,test,1243,"# This Pull request:; by @hahnjo suggestion, since we are exposing a type-erased virtual interface for `RColumnElement` through `RColumnElementBase`, we can hide all the concrete definitions into a cxx file.; This has the benefit of reducing the compile time of any translation unit that includes `RColumnElementBase.hxx` significantly, as the compiler won't have to instantiate all the combination matrix of `RColumnElement<CppT, ColumnType>` every time.; It also let us have better control on exactly which types of `RColumnElement` we allow to instantiate by explicitly listing them into a proxy enum. ## Changes or fixes:; - renamed `RColumnElement.hxx` to `RColumnElementBase.hxx`; - moved all concrete definitions from `RColumnElementBase.hxx` to `src/RColumnElement.hxx`. This is a private header file that is included by `RColumnElement.cxx` and by `ntuple_endian.cxx`. The reason to separate this from `RColumnElement.cxx` is that `ntuple_endian.cxx` needs to simulate a big-endian machine by defining `R__LITTLE_ENDIAN 0`, which changes the definitions of some `RColumnElement`s. To avoid including the whole `RColumnElement.cxx` in the test, we decided to split the definitions into a file that can be included independently by the test. It's not a perfect solution (the test executable ends up with mismatching instantiations of RColumnElement since it links to libROOTNTuple.so) but it's technically not worse than before. We still might want to think of alternative solutions.; - introduces an enum `EColumnCppType` that lists all the allowed c++ in-memory types for RColumnElement. This is used internally to map the templated `RColumnElementBase::Generate` to a non-templated function that can be implemented in the cxx file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16299
https://github.com/root-project/root/pull/16299:1282,Testability,test,test,1282,"# This Pull request:; by @hahnjo suggestion, since we are exposing a type-erased virtual interface for `RColumnElement` through `RColumnElementBase`, we can hide all the concrete definitions into a cxx file.; This has the benefit of reducing the compile time of any translation unit that includes `RColumnElementBase.hxx` significantly, as the compiler won't have to instantiate all the combination matrix of `RColumnElement<CppT, ColumnType>` every time.; It also let us have better control on exactly which types of `RColumnElement` we allow to instantiate by explicitly listing them into a proxy enum. ## Changes or fixes:; - renamed `RColumnElement.hxx` to `RColumnElementBase.hxx`; - moved all concrete definitions from `RColumnElementBase.hxx` to `src/RColumnElement.hxx`. This is a private header file that is included by `RColumnElement.cxx` and by `ntuple_endian.cxx`. The reason to separate this from `RColumnElement.cxx` is that `ntuple_endian.cxx` needs to simulate a big-endian machine by defining `R__LITTLE_ENDIAN 0`, which changes the definitions of some `RColumnElement`s. To avoid including the whole `RColumnElement.cxx` in the test, we decided to split the definitions into a file that can be included independently by the test. It's not a perfect solution (the test executable ends up with mismatching instantiations of RColumnElement since it links to libROOTNTuple.so) but it's technically not worse than before. We still might want to think of alternative solutions.; - introduces an enum `EColumnCppType` that lists all the allowed c++ in-memory types for RColumnElement. This is used internally to map the templated `RColumnElementBase::Generate` to a non-templated function that can be implemented in the cxx file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16299
https://github.com/root-project/root/pull/16299:1763,Testability,test,tested,1763,"# This Pull request:; by @hahnjo suggestion, since we are exposing a type-erased virtual interface for `RColumnElement` through `RColumnElementBase`, we can hide all the concrete definitions into a cxx file.; This has the benefit of reducing the compile time of any translation unit that includes `RColumnElementBase.hxx` significantly, as the compiler won't have to instantiate all the combination matrix of `RColumnElement<CppT, ColumnType>` every time.; It also let us have better control on exactly which types of `RColumnElement` we allow to instantiate by explicitly listing them into a proxy enum. ## Changes or fixes:; - renamed `RColumnElement.hxx` to `RColumnElementBase.hxx`; - moved all concrete definitions from `RColumnElementBase.hxx` to `src/RColumnElement.hxx`. This is a private header file that is included by `RColumnElement.cxx` and by `ntuple_endian.cxx`. The reason to separate this from `RColumnElement.cxx` is that `ntuple_endian.cxx` needs to simulate a big-endian machine by defining `R__LITTLE_ENDIAN 0`, which changes the definitions of some `RColumnElement`s. To avoid including the whole `RColumnElement.cxx` in the test, we decided to split the definitions into a file that can be included independently by the test. It's not a perfect solution (the test executable ends up with mismatching instantiations of RColumnElement since it links to libROOTNTuple.so) but it's technically not worse than before. We still might want to think of alternative solutions.; - introduces an enum `EColumnCppType` that lists all the allowed c++ in-memory types for RColumnElement. This is used internally to map the templated `RColumnElementBase::Generate` to a non-templated function that can be implemented in the cxx file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16299
https://github.com/root-project/root/pull/16307:58,Testability,test,test,58,Read only one column from the remote file to speed up the test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16307
https://github.com/root-project/root/pull/16309:194,Availability,error,error,194,"Add a number of functions that could replace the way user interacts with the C++ elements of the distributed, fully pythonic RDF analysis, so that this is more natural and clear as well as less error prone compared to the previous method. ; The new functions are: ; - DeclareHeaders; - DeclareSharedLibs ; - DeclareFiles ; - DeclareCppCode. The functions work with both Spark and Dask backends. . The tests are introduced in roottest PR: https://github.com/root-project/roottest/pull/1177",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:401,Testability,test,tests,401,"Add a number of functions that could replace the way user interacts with the C++ elements of the distributed, fully pythonic RDF analysis, so that this is more natural and clear as well as less error prone compared to the previous method. ; The new functions are: ; - DeclareHeaders; - DeclareSharedLibs ; - DeclareFiles ; - DeclareCppCode. The functions work with both Spark and Dask backends. . The tests are introduced in roottest PR: https://github.com/root-project/roottest/pull/1177",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:172,Usability,clear,clear,172,"Add a number of functions that could replace the way user interacts with the C++ elements of the distributed, fully pythonic RDF analysis, so that this is more natural and clear as well as less error prone compared to the previous method. ; The new functions are: ; - DeclareHeaders; - DeclareSharedLibs ; - DeclareFiles ; - DeclareCppCode. The functions work with both Spark and Dask backends. . The tests are introduced in roottest PR: https://github.com/root-project/roottest/pull/1177",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/issues/16310:283,Deployability,Install,Installation,283,"### Explain what you would like to see improved and how. Implement the RNTuple standard benchmarks using ORC: https://orc.apache.org/; Measure read/write time, memory consumption, and final file size. Moved from https://its.cern.ch/jira/browse/ROOT-10264. ### ROOT version. n/a. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16310
https://github.com/root-project/root/issues/16310:167,Energy Efficiency,consumption,consumption,167,"### Explain what you would like to see improved and how. Implement the RNTuple standard benchmarks using ORC: https://orc.apache.org/; Measure read/write time, memory consumption, and final file size. Moved from https://its.cern.ch/jira/browse/ROOT-10264. ### ROOT version. n/a. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16310
https://github.com/root-project/root/issues/16310:88,Testability,benchmark,benchmarks,88,"### Explain what you would like to see improved and how. Implement the RNTuple standard benchmarks using ORC: https://orc.apache.org/; Measure read/write time, memory consumption, and final file size. Moved from https://its.cern.ch/jira/browse/ROOT-10264. ### ROOT version. n/a. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16310
https://github.com/root-project/root/pull/16311:40,Energy Efficiency,adapt,adaptive,40,"Moves from fixed page sizes on write to adaptive page sizes, following the original idea of @hahnjo . The new mechanism is explained in the tuning.md document in the PR. The PR also bumps the target compressed cluster size to 150MB. We may want to reduce that still. Evaluation of the new method is currently ongoing and the PR description will be amended with the results. EDIT: [Comparison](https://docs.google.com/spreadsheets/d/1maJhgvgVU8RkX7QXd7B3QiTBfKuYbTbvgkoHzBUOurY/edit?usp=sharing) of current write performance vs adaptive page sizes with 50MB, 100MB, 150MB target cluster size. To me it seems that there is not a good argument to go to 150 MB clusters. There may be an argument for 100 MB clusters. For the moment, I'll remove the commit that changes the default settings from the PR. An additional flavor, `adaptive / exp`, is included in the table to test the effect of flushing _foreign columns_. In the experimental mode, columns only flush themselves, which simplifies the `RWritePageMemoryManager` and avoids the upcall from the sink to the column. There is a small positive effect of foreign flushes on the file size in the nanoAOD sample. The effect is more visible for the number of pages. The memory consumption is slightly smaller without foreign column flushes. I'll see if I can construct an example that shows better the advantage of foreign column flushes (or not). As expected, the memory savings become visible for large EDMs (e.g., nanoAOD in this set of samples).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16311
https://github.com/root-project/root/pull/16311:248,Energy Efficiency,reduce,reduce,248,"Moves from fixed page sizes on write to adaptive page sizes, following the original idea of @hahnjo . The new mechanism is explained in the tuning.md document in the PR. The PR also bumps the target compressed cluster size to 150MB. We may want to reduce that still. Evaluation of the new method is currently ongoing and the PR description will be amended with the results. EDIT: [Comparison](https://docs.google.com/spreadsheets/d/1maJhgvgVU8RkX7QXd7B3QiTBfKuYbTbvgkoHzBUOurY/edit?usp=sharing) of current write performance vs adaptive page sizes with 50MB, 100MB, 150MB target cluster size. To me it seems that there is not a good argument to go to 150 MB clusters. There may be an argument for 100 MB clusters. For the moment, I'll remove the commit that changes the default settings from the PR. An additional flavor, `adaptive / exp`, is included in the table to test the effect of flushing _foreign columns_. In the experimental mode, columns only flush themselves, which simplifies the `RWritePageMemoryManager` and avoids the upcall from the sink to the column. There is a small positive effect of foreign flushes on the file size in the nanoAOD sample. The effect is more visible for the number of pages. The memory consumption is slightly smaller without foreign column flushes. I'll see if I can construct an example that shows better the advantage of foreign column flushes (or not). As expected, the memory savings become visible for large EDMs (e.g., nanoAOD in this set of samples).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16311
https://github.com/root-project/root/pull/16311:527,Energy Efficiency,adapt,adaptive,527,"Moves from fixed page sizes on write to adaptive page sizes, following the original idea of @hahnjo . The new mechanism is explained in the tuning.md document in the PR. The PR also bumps the target compressed cluster size to 150MB. We may want to reduce that still. Evaluation of the new method is currently ongoing and the PR description will be amended with the results. EDIT: [Comparison](https://docs.google.com/spreadsheets/d/1maJhgvgVU8RkX7QXd7B3QiTBfKuYbTbvgkoHzBUOurY/edit?usp=sharing) of current write performance vs adaptive page sizes with 50MB, 100MB, 150MB target cluster size. To me it seems that there is not a good argument to go to 150 MB clusters. There may be an argument for 100 MB clusters. For the moment, I'll remove the commit that changes the default settings from the PR. An additional flavor, `adaptive / exp`, is included in the table to test the effect of flushing _foreign columns_. In the experimental mode, columns only flush themselves, which simplifies the `RWritePageMemoryManager` and avoids the upcall from the sink to the column. There is a small positive effect of foreign flushes on the file size in the nanoAOD sample. The effect is more visible for the number of pages. The memory consumption is slightly smaller without foreign column flushes. I'll see if I can construct an example that shows better the advantage of foreign column flushes (or not). As expected, the memory savings become visible for large EDMs (e.g., nanoAOD in this set of samples).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16311
https://github.com/root-project/root/pull/16311:822,Energy Efficiency,adapt,adaptive,822,"Moves from fixed page sizes on write to adaptive page sizes, following the original idea of @hahnjo . The new mechanism is explained in the tuning.md document in the PR. The PR also bumps the target compressed cluster size to 150MB. We may want to reduce that still. Evaluation of the new method is currently ongoing and the PR description will be amended with the results. EDIT: [Comparison](https://docs.google.com/spreadsheets/d/1maJhgvgVU8RkX7QXd7B3QiTBfKuYbTbvgkoHzBUOurY/edit?usp=sharing) of current write performance vs adaptive page sizes with 50MB, 100MB, 150MB target cluster size. To me it seems that there is not a good argument to go to 150 MB clusters. There may be an argument for 100 MB clusters. For the moment, I'll remove the commit that changes the default settings from the PR. An additional flavor, `adaptive / exp`, is included in the table to test the effect of flushing _foreign columns_. In the experimental mode, columns only flush themselves, which simplifies the `RWritePageMemoryManager` and avoids the upcall from the sink to the column. There is a small positive effect of foreign flushes on the file size in the nanoAOD sample. The effect is more visible for the number of pages. The memory consumption is slightly smaller without foreign column flushes. I'll see if I can construct an example that shows better the advantage of foreign column flushes (or not). As expected, the memory savings become visible for large EDMs (e.g., nanoAOD in this set of samples).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16311
https://github.com/root-project/root/pull/16311:1224,Energy Efficiency,consumption,consumption,1224,"Moves from fixed page sizes on write to adaptive page sizes, following the original idea of @hahnjo . The new mechanism is explained in the tuning.md document in the PR. The PR also bumps the target compressed cluster size to 150MB. We may want to reduce that still. Evaluation of the new method is currently ongoing and the PR description will be amended with the results. EDIT: [Comparison](https://docs.google.com/spreadsheets/d/1maJhgvgVU8RkX7QXd7B3QiTBfKuYbTbvgkoHzBUOurY/edit?usp=sharing) of current write performance vs adaptive page sizes with 50MB, 100MB, 150MB target cluster size. To me it seems that there is not a good argument to go to 150 MB clusters. There may be an argument for 100 MB clusters. For the moment, I'll remove the commit that changes the default settings from the PR. An additional flavor, `adaptive / exp`, is included in the table to test the effect of flushing _foreign columns_. In the experimental mode, columns only flush themselves, which simplifies the `RWritePageMemoryManager` and avoids the upcall from the sink to the column. There is a small positive effect of foreign flushes on the file size in the nanoAOD sample. The effect is more visible for the number of pages. The memory consumption is slightly smaller without foreign column flushes. I'll see if I can construct an example that shows better the advantage of foreign column flushes (or not). As expected, the memory savings become visible for large EDMs (e.g., nanoAOD in this set of samples).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16311
https://github.com/root-project/root/pull/16311:40,Modifiability,adapt,adaptive,40,"Moves from fixed page sizes on write to adaptive page sizes, following the original idea of @hahnjo . The new mechanism is explained in the tuning.md document in the PR. The PR also bumps the target compressed cluster size to 150MB. We may want to reduce that still. Evaluation of the new method is currently ongoing and the PR description will be amended with the results. EDIT: [Comparison](https://docs.google.com/spreadsheets/d/1maJhgvgVU8RkX7QXd7B3QiTBfKuYbTbvgkoHzBUOurY/edit?usp=sharing) of current write performance vs adaptive page sizes with 50MB, 100MB, 150MB target cluster size. To me it seems that there is not a good argument to go to 150 MB clusters. There may be an argument for 100 MB clusters. For the moment, I'll remove the commit that changes the default settings from the PR. An additional flavor, `adaptive / exp`, is included in the table to test the effect of flushing _foreign columns_. In the experimental mode, columns only flush themselves, which simplifies the `RWritePageMemoryManager` and avoids the upcall from the sink to the column. There is a small positive effect of foreign flushes on the file size in the nanoAOD sample. The effect is more visible for the number of pages. The memory consumption is slightly smaller without foreign column flushes. I'll see if I can construct an example that shows better the advantage of foreign column flushes (or not). As expected, the memory savings become visible for large EDMs (e.g., nanoAOD in this set of samples).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16311
https://github.com/root-project/root/pull/16311:527,Modifiability,adapt,adaptive,527,"Moves from fixed page sizes on write to adaptive page sizes, following the original idea of @hahnjo . The new mechanism is explained in the tuning.md document in the PR. The PR also bumps the target compressed cluster size to 150MB. We may want to reduce that still. Evaluation of the new method is currently ongoing and the PR description will be amended with the results. EDIT: [Comparison](https://docs.google.com/spreadsheets/d/1maJhgvgVU8RkX7QXd7B3QiTBfKuYbTbvgkoHzBUOurY/edit?usp=sharing) of current write performance vs adaptive page sizes with 50MB, 100MB, 150MB target cluster size. To me it seems that there is not a good argument to go to 150 MB clusters. There may be an argument for 100 MB clusters. For the moment, I'll remove the commit that changes the default settings from the PR. An additional flavor, `adaptive / exp`, is included in the table to test the effect of flushing _foreign columns_. In the experimental mode, columns only flush themselves, which simplifies the `RWritePageMemoryManager` and avoids the upcall from the sink to the column. There is a small positive effect of foreign flushes on the file size in the nanoAOD sample. The effect is more visible for the number of pages. The memory consumption is slightly smaller without foreign column flushes. I'll see if I can construct an example that shows better the advantage of foreign column flushes (or not). As expected, the memory savings become visible for large EDMs (e.g., nanoAOD in this set of samples).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16311
https://github.com/root-project/root/pull/16311:822,Modifiability,adapt,adaptive,822,"Moves from fixed page sizes on write to adaptive page sizes, following the original idea of @hahnjo . The new mechanism is explained in the tuning.md document in the PR. The PR also bumps the target compressed cluster size to 150MB. We may want to reduce that still. Evaluation of the new method is currently ongoing and the PR description will be amended with the results. EDIT: [Comparison](https://docs.google.com/spreadsheets/d/1maJhgvgVU8RkX7QXd7B3QiTBfKuYbTbvgkoHzBUOurY/edit?usp=sharing) of current write performance vs adaptive page sizes with 50MB, 100MB, 150MB target cluster size. To me it seems that there is not a good argument to go to 150 MB clusters. There may be an argument for 100 MB clusters. For the moment, I'll remove the commit that changes the default settings from the PR. An additional flavor, `adaptive / exp`, is included in the table to test the effect of flushing _foreign columns_. In the experimental mode, columns only flush themselves, which simplifies the `RWritePageMemoryManager` and avoids the upcall from the sink to the column. There is a small positive effect of foreign flushes on the file size in the nanoAOD sample. The effect is more visible for the number of pages. The memory consumption is slightly smaller without foreign column flushes. I'll see if I can construct an example that shows better the advantage of foreign column flushes (or not). As expected, the memory savings become visible for large EDMs (e.g., nanoAOD in this set of samples).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16311
https://github.com/root-project/root/pull/16311:512,Performance,perform,performance,512,"Moves from fixed page sizes on write to adaptive page sizes, following the original idea of @hahnjo . The new mechanism is explained in the tuning.md document in the PR. The PR also bumps the target compressed cluster size to 150MB. We may want to reduce that still. Evaluation of the new method is currently ongoing and the PR description will be amended with the results. EDIT: [Comparison](https://docs.google.com/spreadsheets/d/1maJhgvgVU8RkX7QXd7B3QiTBfKuYbTbvgkoHzBUOurY/edit?usp=sharing) of current write performance vs adaptive page sizes with 50MB, 100MB, 150MB target cluster size. To me it seems that there is not a good argument to go to 150 MB clusters. There may be an argument for 100 MB clusters. For the moment, I'll remove the commit that changes the default settings from the PR. An additional flavor, `adaptive / exp`, is included in the table to test the effect of flushing _foreign columns_. In the experimental mode, columns only flush themselves, which simplifies the `RWritePageMemoryManager` and avoids the upcall from the sink to the column. There is a small positive effect of foreign flushes on the file size in the nanoAOD sample. The effect is more visible for the number of pages. The memory consumption is slightly smaller without foreign column flushes. I'll see if I can construct an example that shows better the advantage of foreign column flushes (or not). As expected, the memory savings become visible for large EDMs (e.g., nanoAOD in this set of samples).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16311
https://github.com/root-project/root/pull/16311:1022,Safety,avoid,avoids,1022,"Moves from fixed page sizes on write to adaptive page sizes, following the original idea of @hahnjo . The new mechanism is explained in the tuning.md document in the PR. The PR also bumps the target compressed cluster size to 150MB. We may want to reduce that still. Evaluation of the new method is currently ongoing and the PR description will be amended with the results. EDIT: [Comparison](https://docs.google.com/spreadsheets/d/1maJhgvgVU8RkX7QXd7B3QiTBfKuYbTbvgkoHzBUOurY/edit?usp=sharing) of current write performance vs adaptive page sizes with 50MB, 100MB, 150MB target cluster size. To me it seems that there is not a good argument to go to 150 MB clusters. There may be an argument for 100 MB clusters. For the moment, I'll remove the commit that changes the default settings from the PR. An additional flavor, `adaptive / exp`, is included in the table to test the effect of flushing _foreign columns_. In the experimental mode, columns only flush themselves, which simplifies the `RWritePageMemoryManager` and avoids the upcall from the sink to the column. There is a small positive effect of foreign flushes on the file size in the nanoAOD sample. The effect is more visible for the number of pages. The memory consumption is slightly smaller without foreign column flushes. I'll see if I can construct an example that shows better the advantage of foreign column flushes (or not). As expected, the memory savings become visible for large EDMs (e.g., nanoAOD in this set of samples).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16311
https://github.com/root-project/root/pull/16311:867,Testability,test,test,867,"Moves from fixed page sizes on write to adaptive page sizes, following the original idea of @hahnjo . The new mechanism is explained in the tuning.md document in the PR. The PR also bumps the target compressed cluster size to 150MB. We may want to reduce that still. Evaluation of the new method is currently ongoing and the PR description will be amended with the results. EDIT: [Comparison](https://docs.google.com/spreadsheets/d/1maJhgvgVU8RkX7QXd7B3QiTBfKuYbTbvgkoHzBUOurY/edit?usp=sharing) of current write performance vs adaptive page sizes with 50MB, 100MB, 150MB target cluster size. To me it seems that there is not a good argument to go to 150 MB clusters. There may be an argument for 100 MB clusters. For the moment, I'll remove the commit that changes the default settings from the PR. An additional flavor, `adaptive / exp`, is included in the table to test the effect of flushing _foreign columns_. In the experimental mode, columns only flush themselves, which simplifies the `RWritePageMemoryManager` and avoids the upcall from the sink to the column. There is a small positive effect of foreign flushes on the file size in the nanoAOD sample. The effect is more visible for the number of pages. The memory consumption is slightly smaller without foreign column flushes. I'll see if I can construct an example that shows better the advantage of foreign column flushes (or not). As expected, the memory savings become visible for large EDMs (e.g., nanoAOD in this set of samples).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16311
https://github.com/root-project/root/pull/16311:977,Usability,simpl,simplifies,977,"Moves from fixed page sizes on write to adaptive page sizes, following the original idea of @hahnjo . The new mechanism is explained in the tuning.md document in the PR. The PR also bumps the target compressed cluster size to 150MB. We may want to reduce that still. Evaluation of the new method is currently ongoing and the PR description will be amended with the results. EDIT: [Comparison](https://docs.google.com/spreadsheets/d/1maJhgvgVU8RkX7QXd7B3QiTBfKuYbTbvgkoHzBUOurY/edit?usp=sharing) of current write performance vs adaptive page sizes with 50MB, 100MB, 150MB target cluster size. To me it seems that there is not a good argument to go to 150 MB clusters. There may be an argument for 100 MB clusters. For the moment, I'll remove the commit that changes the default settings from the PR. An additional flavor, `adaptive / exp`, is included in the table to test the effect of flushing _foreign columns_. In the experimental mode, columns only flush themselves, which simplifies the `RWritePageMemoryManager` and avoids the upcall from the sink to the column. There is a small positive effect of foreign flushes on the file size in the nanoAOD sample. The effect is more visible for the number of pages. The memory consumption is slightly smaller without foreign column flushes. I'll see if I can construct an example that shows better the advantage of foreign column flushes (or not). As expected, the memory savings become visible for large EDMs (e.g., nanoAOD in this set of samples).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16311
https://github.com/root-project/root/issues/16312:580,Availability,fault,fault,580,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. I need help to understand an issue which we have when running on Linux on ARM when reading a file which was serialised on x86. Notice that this platform is peculiar, because `char` (without specifier) is unsigned, and not signed (char sign-ess is implementation detail in the standard). This is important because `mPadSubset` that you will see below is an `enum PadSubset : char`. Running in valgrind, the issue appears as dumped below. What puzzles me and what I think is the culprit of the segmentation fault is the line:. ```; [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]; ```. as I would have expected it to be len=1. Can you explain me what is going on?. ```; [1965517:tpc-tracker]: ====>Rebuilding TStreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version: 1; [1965517:tpc-tracker]: Creating StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version: 2; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version=2, checksum=0x93700773; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365, name of the object; [1965517:tpc-tracker]: vector<o2::tpc::CalArray<o2::tpc::PadFlags> > mData offset= 32 type=300 ,stl=1, ctype=61, internal CalArrays; [1965517:tpc-tracker]: o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Pad subset granularity; [1965517:tpc-tracker]: i= 0, mName type=300, offset= 0, len=1, method=0; [1965517:tpc-tracker]: i= 1, mData type=300, offset= 32, len=1, method=0; [1965517:tpc-tracker]: i= 2, mPadSubset type= 3, offset= 56, len=1, method=0; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version=1, checksum=0x93700773; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365, name of the object; [1965517:tpc-tracker]: vector<o2::tpc::CalArray<o2::tpc::PadFlags> > mData o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:13062,Deployability,Install,Installation,13062,"reamerInfoActions.h:123); [1965517:tpc-tracker]: ==1965517== by 0xF36DE4B: ApplySequence (TBufferFile.cxx:3670); [1965517:tpc-tracker]: ==1965517== by 0xF36DE4B: TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) (TBufferFile.cxx:3661); [1965517:tpc-tracker]: ==1965517== by 0xF376CEB: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*) (TBufferFile.cxx:3598); [1965517:tpc-tracker]: ==1965517== by 0xF3F4633: Streamer (TClass.h:614); [1965517:tpc-tracker]: ==1965517== by 0xF3F4633: TKey::ReadObjectAny(TClass const*) (TKey.cxx:1120); [1965517:tpc-tracker]: ==1965517== by 0xF3B82E3: TDirectoryFile::GetObjectChecked(char const*, TClass const*) (TDirectoryFile.cxx:1111); [1965517:tpc-tracker]: ==1965517== Address 0x153fbb81 is 1 bytes after a block of size 1,440 alloc'd; [1965517:tpc-tracker]: ==1965517== at 0x4868908: operator new(unsigned long) (vg_replace_malloc.c:483); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (new_allocator.h:137); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (allocator.h:188); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (alloc_traits.h:464); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: _M_allocate (stl_vector.h:378); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: _M_allocate (stl_vector.h:375); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: std::vector<o2::tpc::PadFlags, std::allocator<o2::tpc::PadFlags> >::_M_default_append(unsigned long) (vector.tcc:650); [1965517:tpc-tracker]: ==1965517== by 0xF3E5797: void TGenCollectionStreamer::ReadBufferVectorPrimitives<int>(TBuffer&, void*, TClass const*) (TGenCollectionStreamer.cxx:1176); [1965517:tpc-tracker]: ==1965517== by 0xF36EC7B: Streamer (TClass.h:614); ```. ### Reproducer. I do not have one which does not involve running ALICE reconstruction on ARM. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. ALMA Linux 9 on ARM64 (Ampere Altra). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:6321,Energy Efficiency,allocate,allocate,6321,"r]: ==1965517== by 0xF36DE4B: operator() (TStreamerInfoActions.h:123); [1965517:tpc-tracker]: ==1965517== by 0xF36DE4B: ApplySequence (TBufferFile.cxx:3670); [1965517:tpc-tracker]: ==1965517== by 0xF36DE4B: TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) (TBufferFile.cxx:3661); [1965517:tpc-tracker]: ==1965517== by 0xF376CEB: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*) (TBufferFile.cxx:3598); [1965517:tpc-tracker]: ==1965517== by 0xF3F4633: Streamer (TClass.h:614); [1965517:tpc-tracker]: ==1965517== by 0xF3F4633: TKey::ReadObjectAny(TClass const*) (TKey.cxx:1120); [1965517:tpc-tracker]: ==1965517== by 0xF3B82E3: TDirectoryFile::GetObjectChecked(char const*, TClass const*) (TDirectoryFile.cxx:1111); [1965517:tpc-tracker]: ==1965517== Address 0x153fbb80 is 0 bytes after a block of size 1,440 alloc'd; [1965517:tpc-tracker]: ==1965517== at 0x4868908: operator new(unsigned long) (vg_replace_malloc.c:483); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (new_allocator.h:137); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (allocator.h:188); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (alloc_traits.h:464); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: _M_allocate (stl_vector.h:378); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: _M_allocate (stl_vector.h:375); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: std::vector<o2::tpc::PadFlags, std::allocator<o2::tpc::PadFlags> >::_M_default_append(unsigned long) (vector.tcc:650); [1965517:tpc-tracker]: ==1965517== by 0xF3E5797: void TGenCollectionStreamer::ReadBufferVectorPrimitives<int>(TBuffer&, void*, TClass const*) (TGenCollectionStreamer.cxx:1176); [1965517:tpc-tracker]: ==1965517== by 0xF36EC7B: Streamer (TClass.h:614); [1965517:tpc-tracker]: ==1965517== by 0xF36EC7B: TBufferFile::ReadFastArray(void*, TClass const*, int, TMemberStreamer*, TClass const*) (TBufferFile.cxx:1616); [1965517:tpc-tracker]: ==1965517== by 0xF58C84B: int T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:6402,Energy Efficiency,allocate,allocate,6402,":tpc-tracker]: ==1965517== by 0xF36DE4B: ApplySequence (TBufferFile.cxx:3670); [1965517:tpc-tracker]: ==1965517== by 0xF36DE4B: TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) (TBufferFile.cxx:3661); [1965517:tpc-tracker]: ==1965517== by 0xF376CEB: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*) (TBufferFile.cxx:3598); [1965517:tpc-tracker]: ==1965517== by 0xF3F4633: Streamer (TClass.h:614); [1965517:tpc-tracker]: ==1965517== by 0xF3F4633: TKey::ReadObjectAny(TClass const*) (TKey.cxx:1120); [1965517:tpc-tracker]: ==1965517== by 0xF3B82E3: TDirectoryFile::GetObjectChecked(char const*, TClass const*) (TDirectoryFile.cxx:1111); [1965517:tpc-tracker]: ==1965517== Address 0x153fbb80 is 0 bytes after a block of size 1,440 alloc'd; [1965517:tpc-tracker]: ==1965517== at 0x4868908: operator new(unsigned long) (vg_replace_malloc.c:483); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (new_allocator.h:137); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (allocator.h:188); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (alloc_traits.h:464); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: _M_allocate (stl_vector.h:378); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: _M_allocate (stl_vector.h:375); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: std::vector<o2::tpc::PadFlags, std::allocator<o2::tpc::PadFlags> >::_M_default_append(unsigned long) (vector.tcc:650); [1965517:tpc-tracker]: ==1965517== by 0xF3E5797: void TGenCollectionStreamer::ReadBufferVectorPrimitives<int>(TBuffer&, void*, TClass const*) (TGenCollectionStreamer.cxx:1176); [1965517:tpc-tracker]: ==1965517== by 0xF36EC7B: Streamer (TClass.h:614); [1965517:tpc-tracker]: ==1965517== by 0xF36EC7B: TBufferFile::ReadFastArray(void*, TClass const*, int, TMemberStreamer*, TClass const*) (TBufferFile.cxx:1616); [1965517:tpc-tracker]: ==1965517== by 0xF58C84B: int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char** const&, TStreamerInfo::TCompI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:6479,Energy Efficiency,allocate,allocate,6479,"[1965517:tpc-tracker]: ==1965517== by 0xF36DE4B: TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) (TBufferFile.cxx:3661); [1965517:tpc-tracker]: ==1965517== by 0xF376CEB: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*) (TBufferFile.cxx:3598); [1965517:tpc-tracker]: ==1965517== by 0xF3F4633: Streamer (TClass.h:614); [1965517:tpc-tracker]: ==1965517== by 0xF3F4633: TKey::ReadObjectAny(TClass const*) (TKey.cxx:1120); [1965517:tpc-tracker]: ==1965517== by 0xF3B82E3: TDirectoryFile::GetObjectChecked(char const*, TClass const*) (TDirectoryFile.cxx:1111); [1965517:tpc-tracker]: ==1965517== Address 0x153fbb80 is 0 bytes after a block of size 1,440 alloc'd; [1965517:tpc-tracker]: ==1965517== at 0x4868908: operator new(unsigned long) (vg_replace_malloc.c:483); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (new_allocator.h:137); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (allocator.h:188); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (alloc_traits.h:464); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: _M_allocate (stl_vector.h:378); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: _M_allocate (stl_vector.h:375); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: std::vector<o2::tpc::PadFlags, std::allocator<o2::tpc::PadFlags> >::_M_default_append(unsigned long) (vector.tcc:650); [1965517:tpc-tracker]: ==1965517== by 0xF3E5797: void TGenCollectionStreamer::ReadBufferVectorPrimitives<int>(TBuffer&, void*, TClass const*) (TGenCollectionStreamer.cxx:1176); [1965517:tpc-tracker]: ==1965517== by 0xF36EC7B: Streamer (TClass.h:614); [1965517:tpc-tracker]: ==1965517== by 0xF36EC7B: TBufferFile::ReadFastArray(void*, TClass const*, int, TMemberStreamer*, TClass const*) (TBufferFile.cxx:1616); [1965517:tpc-tracker]: ==1965517== by 0xF58C84B: int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char** const&, TStreamerInfo::TCompInfo* const*, int, int, int, int, int) (TStreamerInfoReadBuffer.cxx:1297); [196",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:12162,Energy Efficiency,allocate,allocate,12162,"r]: ==1965517== by 0xF36DE4B: operator() (TStreamerInfoActions.h:123); [1965517:tpc-tracker]: ==1965517== by 0xF36DE4B: ApplySequence (TBufferFile.cxx:3670); [1965517:tpc-tracker]: ==1965517== by 0xF36DE4B: TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) (TBufferFile.cxx:3661); [1965517:tpc-tracker]: ==1965517== by 0xF376CEB: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*) (TBufferFile.cxx:3598); [1965517:tpc-tracker]: ==1965517== by 0xF3F4633: Streamer (TClass.h:614); [1965517:tpc-tracker]: ==1965517== by 0xF3F4633: TKey::ReadObjectAny(TClass const*) (TKey.cxx:1120); [1965517:tpc-tracker]: ==1965517== by 0xF3B82E3: TDirectoryFile::GetObjectChecked(char const*, TClass const*) (TDirectoryFile.cxx:1111); [1965517:tpc-tracker]: ==1965517== Address 0x153fbb81 is 1 bytes after a block of size 1,440 alloc'd; [1965517:tpc-tracker]: ==1965517== at 0x4868908: operator new(unsigned long) (vg_replace_malloc.c:483); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (new_allocator.h:137); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (allocator.h:188); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (alloc_traits.h:464); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: _M_allocate (stl_vector.h:378); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: _M_allocate (stl_vector.h:375); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: std::vector<o2::tpc::PadFlags, std::allocator<o2::tpc::PadFlags> >::_M_default_append(unsigned long) (vector.tcc:650); [1965517:tpc-tracker]: ==1965517== by 0xF3E5797: void TGenCollectionStreamer::ReadBufferVectorPrimitives<int>(TBuffer&, void*, TClass const*) (TGenCollectionStreamer.cxx:1176); [1965517:tpc-tracker]: ==1965517== by 0xF36EC7B: Streamer (TClass.h:614); ```. ### Reproducer. I do not have one which does not involve running ALICE reconstruction on ARM. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. ALMA Linux 9 on ARM64 (Ampere A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:12243,Energy Efficiency,allocate,allocate,12243,"reamerInfoActions.h:123); [1965517:tpc-tracker]: ==1965517== by 0xF36DE4B: ApplySequence (TBufferFile.cxx:3670); [1965517:tpc-tracker]: ==1965517== by 0xF36DE4B: TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) (TBufferFile.cxx:3661); [1965517:tpc-tracker]: ==1965517== by 0xF376CEB: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*) (TBufferFile.cxx:3598); [1965517:tpc-tracker]: ==1965517== by 0xF3F4633: Streamer (TClass.h:614); [1965517:tpc-tracker]: ==1965517== by 0xF3F4633: TKey::ReadObjectAny(TClass const*) (TKey.cxx:1120); [1965517:tpc-tracker]: ==1965517== by 0xF3B82E3: TDirectoryFile::GetObjectChecked(char const*, TClass const*) (TDirectoryFile.cxx:1111); [1965517:tpc-tracker]: ==1965517== Address 0x153fbb81 is 1 bytes after a block of size 1,440 alloc'd; [1965517:tpc-tracker]: ==1965517== at 0x4868908: operator new(unsigned long) (vg_replace_malloc.c:483); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (new_allocator.h:137); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (allocator.h:188); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (alloc_traits.h:464); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: _M_allocate (stl_vector.h:378); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: _M_allocate (stl_vector.h:375); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: std::vector<o2::tpc::PadFlags, std::allocator<o2::tpc::PadFlags> >::_M_default_append(unsigned long) (vector.tcc:650); [1965517:tpc-tracker]: ==1965517== by 0xF3E5797: void TGenCollectionStreamer::ReadBufferVectorPrimitives<int>(TBuffer&, void*, TClass const*) (TGenCollectionStreamer.cxx:1176); [1965517:tpc-tracker]: ==1965517== by 0xF36EC7B: Streamer (TClass.h:614); ```. ### Reproducer. I do not have one which does not involve running ALICE reconstruction on ARM. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. ALMA Linux 9 on ARM64 (Ampere Altra). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:12320,Energy Efficiency,allocate,allocate,12320,"reamerInfoActions.h:123); [1965517:tpc-tracker]: ==1965517== by 0xF36DE4B: ApplySequence (TBufferFile.cxx:3670); [1965517:tpc-tracker]: ==1965517== by 0xF36DE4B: TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) (TBufferFile.cxx:3661); [1965517:tpc-tracker]: ==1965517== by 0xF376CEB: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*) (TBufferFile.cxx:3598); [1965517:tpc-tracker]: ==1965517== by 0xF3F4633: Streamer (TClass.h:614); [1965517:tpc-tracker]: ==1965517== by 0xF3F4633: TKey::ReadObjectAny(TClass const*) (TKey.cxx:1120); [1965517:tpc-tracker]: ==1965517== by 0xF3B82E3: TDirectoryFile::GetObjectChecked(char const*, TClass const*) (TDirectoryFile.cxx:1111); [1965517:tpc-tracker]: ==1965517== Address 0x153fbb81 is 1 bytes after a block of size 1,440 alloc'd; [1965517:tpc-tracker]: ==1965517== at 0x4868908: operator new(unsigned long) (vg_replace_malloc.c:483); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (new_allocator.h:137); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (allocator.h:188); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: allocate (alloc_traits.h:464); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: _M_allocate (stl_vector.h:378); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: _M_allocate (stl_vector.h:375); [1965517:tpc-tracker]: ==1965517== by 0x60E5D1F: std::vector<o2::tpc::PadFlags, std::allocator<o2::tpc::PadFlags> >::_M_default_append(unsigned long) (vector.tcc:650); [1965517:tpc-tracker]: ==1965517== by 0xF3E5797: void TGenCollectionStreamer::ReadBufferVectorPrimitives<int>(TBuffer&, void*, TClass const*) (TGenCollectionStreamer.cxx:1176); [1965517:tpc-tracker]: ==1965517== by 0xF36EC7B: Streamer (TClass.h:614); ```. ### Reproducer. I do not have one which does not involve running ALICE reconstruction on ARM. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. ALMA Linux 9 on ARM64 (Ampere Altra). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:684,Performance,optimiz,optimized,684,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. I need help to understand an issue which we have when running on Linux on ARM when reading a file which was serialised on x86. Notice that this platform is peculiar, because `char` (without specifier) is unsigned, and not signed (char sign-ess is implementation detail in the standard). This is important because `mPadSubset` that you will see below is an `enum PadSubset : char`. Running in valgrind, the issue appears as dumped below. What puzzles me and what I think is the culprit of the segmentation fault is the line:. ```; [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]; ```. as I would have expected it to be len=1. Can you explain me what is going on?. ```; [1965517:tpc-tracker]: ====>Rebuilding TStreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version: 1; [1965517:tpc-tracker]: Creating StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version: 2; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version=2, checksum=0x93700773; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365, name of the object; [1965517:tpc-tracker]: vector<o2::tpc::CalArray<o2::tpc::PadFlags> > mData offset= 32 type=300 ,stl=1, ctype=61, internal CalArrays; [1965517:tpc-tracker]: o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Pad subset granularity; [1965517:tpc-tracker]: i= 0, mName type=300, offset= 0, len=1, method=0; [1965517:tpc-tracker]: i= 1, mData type=300, offset= 32, len=1, method=0; [1965517:tpc-tracker]: i= 2, mPadSubset type= 3, offset= 56, len=1, method=0; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version=1, checksum=0x93700773; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365, name of the object; [1965517:tpc-tracker]: vector<o2::tpc::CalArray<o2::tpc::PadFlags> > mData o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3269,Performance,optimiz,optimized,3269,"1, method=0; [1965517:tpc-tracker]: i= 1, mData type=300, offset= 32, len=1, method=0; [1965517:tpc-tracker]: i= 2, mPadSubset type= 3, offset= 56, len=1, method=0; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: ====>Rebuilding TStreamerInfo for class: o2::tpc::CalArray<o2::tpc::PadFlags>, version: 1; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalArray<o2::tpc::PadFlags>, version=1, checksum=0xb03d18c2; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365,; [1965517:tpc-tracker]: vector<o2::tpc::PadFlags> mData offset= 32 type=300 ,stl=1, ctype=3, calibration data; [1965517:tpc-tracker]: o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Subset type; [1965517:tpc-tracker]: int mPadSubsetNumber offset= 60 type= 3 Number of the pad subset, e.g. ROC 0 is IROC A00; [1965517:tpc-tracker]: i= 0, mName type=300, offset= 0, len=1, method=0; [1965517:tpc-tracker]: i= 1, mData type=300, offset= 32, len=1, method=0; [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]; [1965517:tpc-tracker]: ==1965517== Invalid write of size 1; [1965517:tpc-tracker]: ==1965517== at 0xF36E7A0: frombuf (Bytes.h:313); [1965517:tpc-tracker]: ==1965517== by 0xF36E7A0: frombuf (Bytes.h:442); [1965517:tpc-tracker]: ==1965517== by 0xF36E7A0: ReadFastArray (TBufferFile.cxx:1338); [1965517:tpc-tracker]: ==1965517== by 0xF36E7A0: TBufferFile::ReadFastArray(int*, int) (TBufferFile.cxx:1327); [1965517:tpc-tracker]: ==1965517== by 0xF3E580B: void TGenCollectionStreamer::ReadBufferVectorPrimitives<int>(TBuffer&, void*, TClass const*) (TGenCollectionStreamer.cxx:1183); [1965517:tpc-tracker]: ==1965517== by 0xF36EC7B: Streamer (TClass.h:614); [1965517:tpc-tracker]: ==1965517== by 0xF36EC7B: TBufferFile::ReadFastArray(void*, TClass const*, int, TMemberStreamer*, TClass const*) (TBufferFile.cxx:1616); [1965517:tpc-tracker]: ==1965517== by 0xF58C84B: int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char** const&, TStreame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:1119,Security,checksum,checksum,1119," ```; [1965517:tpc-tracker]: ====>Rebuilding TStreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version: 1; [1965517:tpc-tracker]: Creating StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version: 2; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version=2, checksum=0x93700773; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365, name of the object; [1965517:tpc-tracker]: vector<o2::tpc::CalArray<o2::tpc::PadFlags> > mData offset= 32 type=300 ,stl=1, ctype=61, internal CalArrays; [1965517:tpc-tracker]: o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Pad subset granularity; [1965517:tpc-tracker]: i= 0, mName type=300, offset= 0, len=1, method=0; [1965517:tpc-tracker]: i= 1, mData type=300, offset= 32, len=1, method=0; [1965517:tpc-tracker]: i= 2, mPadSubset type= 3, offset= 56, len=1, method=0; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version=1, checksum=0x93700773; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365, name of the object; [1965517:tpc-tracker]: vector<o2::tpc::CalArray<o2::tpc::PadFlags> > mData o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:1808,Security,checksum,checksum,1808,">Rebuilding TStreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version: 1; [1965517:tpc-tracker]: Creating StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version: 2; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version=2, checksum=0x93700773; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365, name of the object; [1965517:tpc-tracker]: vector<o2::tpc::CalArray<o2::tpc::PadFlags> > mData offset= 32 type=300 ,stl=1, ctype=61, internal CalArrays; [1965517:tpc-tracker]: o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Pad subset granularity; [1965517:tpc-tracker]: i= 0, mName type=300, offset= 0, len=1, method=0; [1965517:tpc-tracker]: i= 1, mData type=300, offset= 32, len=1, method=0; [1965517:tpc-tracker]: i= 2, mPadSubset type= 3, offset= 56, len=1, method=0; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version=1, checksum=0x93700773; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365, name of the object; [1965517:tpc-tracker]: vector<o2::tpc::CalArray<o2::tpc::PadFlags> > mData offset= 32 type=300 ,stl=1, ctype=61, internal CalArrays; [1965517:tpc-tracker]: o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Pad subset granularity; [1965517:tpc-tracker]: i= 0, mName type=300, offset= 0, len=1, method=0; [1965517:tpc-tracker]: i= 1, mData type=300, offset= 32, len=1, method=0; [1965517:tpc-tracker]: i= 2, mPadSubset type= 3, offset= 56, len=1, method=0; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: ====>Rebuilding TStreamerInfo for class: o2::tpc::CalArray<o2::tpc::PadFlags>, version: 1; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalArray<o2::tpc::PadFlags>, version=1, checksum=0xb03d18c2; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365,; [1965517:tpc-tracker]: vector<o2::tpc::PadFlags> mData offset= 32 type=300 ,st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2637,Security,checksum,checksum,2637,"r]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version=2, checksum=0x93700773; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365, name of the object; [1965517:tpc-tracker]: vector<o2::tpc::CalArray<o2::tpc::PadFlags> > mData offset= 32 type=300 ,stl=1, ctype=61, internal CalArrays; [1965517:tpc-tracker]: o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Pad subset granularity; [1965517:tpc-tracker]: i= 0, mName type=300, offset= 0, len=1, method=0; [1965517:tpc-tracker]: i= 1, mData type=300, offset= 32, len=1, method=0; [1965517:tpc-tracker]: i= 2, mPadSubset type= 3, offset= 56, len=1, method=0; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version=1, checksum=0x93700773; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365, name of the object; [1965517:tpc-tracker]: vector<o2::tpc::CalArray<o2::tpc::PadFlags> > mData offset= 32 type=300 ,stl=1, ctype=61, internal CalArrays; [1965517:tpc-tracker]: o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Pad subset granularity; [1965517:tpc-tracker]: i= 0, mName type=300, offset= 0, len=1, method=0; [1965517:tpc-tracker]: i= 1, mData type=300, offset= 32, len=1, method=0; [1965517:tpc-tracker]: i= 2, mPadSubset type= 3, offset= 56, len=1, method=0; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: ====>Rebuilding TStreamerInfo for class: o2::tpc::CalArray<o2::tpc::PadFlags>, version: 1; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalArray<o2::tpc::PadFlags>, version=1, checksum=0xb03d18c2; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365,; [1965517:tpc-tracker]: vector<o2::tpc::PadFlags> mData offset= 32 type=300 ,stl=1, ctype=3, calibration data; [1965517:tpc-tracker]: o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Subset type; [1965517:tpc-tracker]: int mPadSubsetNumber offset= 60 type= 3 Number of the pad subset, e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/pull/16313:38,Testability,log,logs,38,"# This Pull request adds (see commits logs for more details). - TopK, Tile and Split operators; - If operator and support for subgraphs by parsing them from ONNX and dealing with subgraphs in RModel; - Add MatMul support for dim=1 tensors ; - Support output of operators as constant tensors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16313
https://github.com/root-project/root/pull/16314:31,Availability,avail,available,31,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16314
https://github.com/root-project/root/pull/16314:352,Availability,down,down,352,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16314
https://github.com/root-project/root/pull/16314:238,Deployability,upgrade,upgrade,238,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16314
https://github.com/root-project/root/pull/16314:429,Deployability,upgrade,upgrade,429,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16314
https://github.com/root-project/root/pull/16314:827,Deployability,patch,patched,827,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16314
https://github.com/root-project/root/pull/16314:276,Modifiability,variab,variables,276,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16314
https://github.com/root-project/root/pull/16314:722,Modifiability,Extend,Extend,722,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16314
https://github.com/root-project/root/pull/16314:477,Testability,test,tests,477,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16314
https://github.com/root-project/root/pull/16315:361,Availability,error,error,361,"Commit 4ee93a229f (""[rootcling] Allow users to specify byproduct modules."") added explicit options to specify expected byproducts, but removed the implicit check for system modules. This worked a bit by accident because the interpreter includes `<new>` upon startup which already triggered building of `std.pcm` and `libc.pcm` before `rootcling` registered its error handler. This model breaks now with Apple splitting their modules, so add a new option that we specify during building of `Core.pcm` to allow implicit building of any system module. ---. This revives https://github.com/root-project/root/pull/14903",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16315
https://github.com/root-project/root/pull/16316:229,Deployability,update,updated,229,"# This Pull request:. Add a getter for the ""arraySize"" memeber function RooDataHist.; The weightArray getters are way more useful when actually being able to loop over the list. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16316
https://github.com/root-project/root/pull/16316:199,Testability,test,tested,199,"# This Pull request:. Add a getter for the ""arraySize"" memeber function RooDataHist.; The weightArray getters are way more useful when actually being able to loop over the list. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16316
https://github.com/root-project/root/pull/16317:188,Deployability,update,updated,188,"# This Pull request:. ## Changes or fixes:. Small extensions on the documentation of RooJSONFactoryWSTool, adding a C++ example as well. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16317
https://github.com/root-project/root/pull/16317:158,Testability,test,tested,158,"# This Pull request:. ## Changes or fixes:. Small extensions on the documentation of RooJSONFactoryWSTool, adding a C++ example as well. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16317
https://github.com/root-project/root/pull/16318:31,Availability,avail,available,31,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. (cherry picked from commit fd97311519a5d64f0110686db46e0d912503751c, backport of https://github.com/root-project/root/pull/16314)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16318
https://github.com/root-project/root/pull/16318:352,Availability,down,down,352,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. (cherry picked from commit fd97311519a5d64f0110686db46e0d912503751c, backport of https://github.com/root-project/root/pull/16314)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16318
https://github.com/root-project/root/pull/16318:238,Deployability,upgrade,upgrade,238,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. (cherry picked from commit fd97311519a5d64f0110686db46e0d912503751c, backport of https://github.com/root-project/root/pull/16314)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16318
https://github.com/root-project/root/pull/16318:429,Deployability,upgrade,upgrade,429,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. (cherry picked from commit fd97311519a5d64f0110686db46e0d912503751c, backport of https://github.com/root-project/root/pull/16314)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16318
https://github.com/root-project/root/pull/16318:827,Deployability,patch,patched,827,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. (cherry picked from commit fd97311519a5d64f0110686db46e0d912503751c, backport of https://github.com/root-project/root/pull/16314)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16318
https://github.com/root-project/root/pull/16318:276,Modifiability,variab,variables,276,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. (cherry picked from commit fd97311519a5d64f0110686db46e0d912503751c, backport of https://github.com/root-project/root/pull/16314)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16318
https://github.com/root-project/root/pull/16318:722,Modifiability,Extend,Extend,722,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. (cherry picked from commit fd97311519a5d64f0110686db46e0d912503751c, backport of https://github.com/root-project/root/pull/16314)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16318
https://github.com/root-project/root/pull/16318:477,Testability,test,tests,477,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. (cherry picked from commit fd97311519a5d64f0110686db46e0d912503751c, backport of https://github.com/root-project/root/pull/16314)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16318
https://github.com/root-project/root/pull/16319:31,Availability,avail,available,31,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. ---. This aims to backport https://github.com/root-project/root/pull/16314, but it's a bit more complicated with LLVM 13. We need to decide if we want this or just leave v6.30 and v6.28 alone.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16319
https://github.com/root-project/root/pull/16319:352,Availability,down,down,352,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. ---. This aims to backport https://github.com/root-project/root/pull/16314, but it's a bit more complicated with LLVM 13. We need to decide if we want this or just leave v6.30 and v6.28 alone.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16319
https://github.com/root-project/root/pull/16319:238,Deployability,upgrade,upgrade,238,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. ---. This aims to backport https://github.com/root-project/root/pull/16314, but it's a bit more complicated with LLVM 13. We need to decide if we want this or just leave v6.30 and v6.28 alone.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16319
https://github.com/root-project/root/pull/16319:429,Deployability,upgrade,upgrade,429,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. ---. This aims to backport https://github.com/root-project/root/pull/16314, but it's a bit more complicated with LLVM 13. We need to decide if we want this or just leave v6.30 and v6.28 alone.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16319
https://github.com/root-project/root/pull/16319:827,Deployability,patch,patched,827,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. ---. This aims to backport https://github.com/root-project/root/pull/16314, but it's a bit more complicated with LLVM 13. We need to decide if we want this or just leave v6.30 and v6.28 alone.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16319
https://github.com/root-project/root/pull/16319:276,Modifiability,variab,variables,276,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. ---. This aims to backport https://github.com/root-project/root/pull/16314, but it's a bit more complicated with LLVM 13. We need to decide if we want this or just leave v6.30 and v6.28 alone.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16319
https://github.com/root-project/root/pull/16319:722,Modifiability,Extend,Extend,722,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. ---. This aims to backport https://github.com/root-project/root/pull/16314, but it's a bit more complicated with LLVM 13. We need to decide if we want this or just leave v6.30 and v6.28 alone.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16319
https://github.com/root-project/root/pull/16319:477,Testability,test,tests,477,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. ---. This aims to backport https://github.com/root-project/root/pull/16314, but it's a bit more complicated with LLVM 13. We need to decide if we want this or just leave v6.30 and v6.28 alone.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16319
https://github.com/root-project/root/pull/16320:26,Energy Efficiency,schedul,scheduled,26,1. Remove deprecaded code scheduled for removal in 6.34; 2. Remove memory pool related code; 3. Remove checks for unsupported compiler versions. More details in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16320
https://github.com/root-project/root/issues/16321:240,Deployability,Install,Installation,240,"### Explain what you would like to see improved and how. The boolean template in `RNTupleView<T, bool>` steers whether or not the view is owned by the user. It would be more clear to use two different classes. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16321
https://github.com/root-project/root/issues/16321:174,Usability,clear,clear,174,"### Explain what you would like to see improved and how. The boolean template in `RNTupleView<T, bool>` steers whether or not the view is owned by the user. It would be more clear to use two different classes. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16321
https://github.com/root-project/root/pull/16322:109,Deployability,install,installation,109,"# This Pull request:; ## Changes or fixes:; DO NOT MERGE!! This PR tests the graphic test suite and includes installation of chrome in ROOT CI. ## Checklist:. - [x] Make old svg, pdf, json, tests run on all platforms except windows; - [x] Install headless chrome browser in ROOT CI (Done for linux); - [x] Enable new svg tests in roottest (Enabled for linux); - [x] updated the references files for new svg (if necessary); - [ ] Deal with hanging web chrome browser (only problem on linux, works for 18 test, maybe try to increase number of tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16322
https://github.com/root-project/root/pull/16322:239,Deployability,Install,Install,239,"# This Pull request:; ## Changes or fixes:; DO NOT MERGE!! This PR tests the graphic test suite and includes installation of chrome in ROOT CI. ## Checklist:. - [x] Make old svg, pdf, json, tests run on all platforms except windows; - [x] Install headless chrome browser in ROOT CI (Done for linux); - [x] Enable new svg tests in roottest (Enabled for linux); - [x] updated the references files for new svg (if necessary); - [ ] Deal with hanging web chrome browser (only problem on linux, works for 18 test, maybe try to increase number of tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16322
https://github.com/root-project/root/pull/16322:366,Deployability,update,updated,366,"# This Pull request:; ## Changes or fixes:; DO NOT MERGE!! This PR tests the graphic test suite and includes installation of chrome in ROOT CI. ## Checklist:. - [x] Make old svg, pdf, json, tests run on all platforms except windows; - [x] Install headless chrome browser in ROOT CI (Done for linux); - [x] Enable new svg tests in roottest (Enabled for linux); - [x] updated the references files for new svg (if necessary); - [ ] Deal with hanging web chrome browser (only problem on linux, works for 18 test, maybe try to increase number of tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16322
https://github.com/root-project/root/pull/16322:67,Testability,test,tests,67,"# This Pull request:; ## Changes or fixes:; DO NOT MERGE!! This PR tests the graphic test suite and includes installation of chrome in ROOT CI. ## Checklist:. - [x] Make old svg, pdf, json, tests run on all platforms except windows; - [x] Install headless chrome browser in ROOT CI (Done for linux); - [x] Enable new svg tests in roottest (Enabled for linux); - [x] updated the references files for new svg (if necessary); - [ ] Deal with hanging web chrome browser (only problem on linux, works for 18 test, maybe try to increase number of tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16322
https://github.com/root-project/root/pull/16322:85,Testability,test,test,85,"# This Pull request:; ## Changes or fixes:; DO NOT MERGE!! This PR tests the graphic test suite and includes installation of chrome in ROOT CI. ## Checklist:. - [x] Make old svg, pdf, json, tests run on all platforms except windows; - [x] Install headless chrome browser in ROOT CI (Done for linux); - [x] Enable new svg tests in roottest (Enabled for linux); - [x] updated the references files for new svg (if necessary); - [ ] Deal with hanging web chrome browser (only problem on linux, works for 18 test, maybe try to increase number of tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16322
https://github.com/root-project/root/pull/16322:190,Testability,test,tests,190,"# This Pull request:; ## Changes or fixes:; DO NOT MERGE!! This PR tests the graphic test suite and includes installation of chrome in ROOT CI. ## Checklist:. - [x] Make old svg, pdf, json, tests run on all platforms except windows; - [x] Install headless chrome browser in ROOT CI (Done for linux); - [x] Enable new svg tests in roottest (Enabled for linux); - [x] updated the references files for new svg (if necessary); - [ ] Deal with hanging web chrome browser (only problem on linux, works for 18 test, maybe try to increase number of tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16322
https://github.com/root-project/root/pull/16322:321,Testability,test,tests,321,"# This Pull request:; ## Changes or fixes:; DO NOT MERGE!! This PR tests the graphic test suite and includes installation of chrome in ROOT CI. ## Checklist:. - [x] Make old svg, pdf, json, tests run on all platforms except windows; - [x] Install headless chrome browser in ROOT CI (Done for linux); - [x] Enable new svg tests in roottest (Enabled for linux); - [x] updated the references files for new svg (if necessary); - [ ] Deal with hanging web chrome browser (only problem on linux, works for 18 test, maybe try to increase number of tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16322
https://github.com/root-project/root/pull/16322:503,Testability,test,test,503,"# This Pull request:; ## Changes or fixes:; DO NOT MERGE!! This PR tests the graphic test suite and includes installation of chrome in ROOT CI. ## Checklist:. - [x] Make old svg, pdf, json, tests run on all platforms except windows; - [x] Install headless chrome browser in ROOT CI (Done for linux); - [x] Enable new svg tests in roottest (Enabled for linux); - [x] updated the references files for new svg (if necessary); - [ ] Deal with hanging web chrome browser (only problem on linux, works for 18 test, maybe try to increase number of tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16322
https://github.com/root-project/root/pull/16322:541,Testability,test,tests,541,"# This Pull request:; ## Changes or fixes:; DO NOT MERGE!! This PR tests the graphic test suite and includes installation of chrome in ROOT CI. ## Checklist:. - [x] Make old svg, pdf, json, tests run on all platforms except windows; - [x] Install headless chrome browser in ROOT CI (Done for linux); - [x] Enable new svg tests in roottest (Enabled for linux); - [x] updated the references files for new svg (if necessary); - [ ] Deal with hanging web chrome browser (only problem on linux, works for 18 test, maybe try to increase number of tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16322
https://github.com/root-project/root/pull/16323:189,Performance,perform,performed,189,"Changes to HistFactory ROOT tutorial. Since people usually use HistFactory to build models and then fit it, it is better to show, how models can be fitted in the same tutorial. Changes are performed both for python and c++ tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16323
https://github.com/root-project/root/issues/16324:244,Deployability,Install,Installation,244,"### Explain what you would like to see improved and how. Currently, `RNTupleDescriptor::CreateModel()` always creates a full model with a default entry. There can be situations in which a bare model is preferable. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16324
https://github.com/root-project/root/issues/16325:259,Deployability,Install,Installation,259,### Explain what you would like to see improved and how. The RClusterPool should be improved; - to work with a memory budget rather than a fixed number of clusters to read-ahead; - allow users to exclude/include specific fields. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16325
https://github.com/root-project/root/issues/16326:424,Deployability,Install,Installation,424,"### Explain what you would like to see improved and how. The RNTupleParallelWriter should be extended to allow to fix the logical order of clusters written to disk. This would allow to better align parallel writing with, e.g., lumi blocks. The physical on-disk order of clusters written by the parallel writer will still be arbitrary, but the meta-data can link them to another, logical order. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16326
https://github.com/root-project/root/issues/16326:93,Modifiability,extend,extended,93,"### Explain what you would like to see improved and how. The RNTupleParallelWriter should be extended to allow to fix the logical order of clusters written to disk. This would allow to better align parallel writing with, e.g., lumi blocks. The physical on-disk order of clusters written by the parallel writer will still be arbitrary, but the meta-data can link them to another, logical order. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16326
https://github.com/root-project/root/issues/16326:122,Testability,log,logical,122,"### Explain what you would like to see improved and how. The RNTupleParallelWriter should be extended to allow to fix the logical order of clusters written to disk. This would allow to better align parallel writing with, e.g., lumi blocks. The physical on-disk order of clusters written by the parallel writer will still be arbitrary, but the meta-data can link them to another, logical order. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16326
https://github.com/root-project/root/issues/16326:379,Testability,log,logical,379,"### Explain what you would like to see improved and how. The RNTupleParallelWriter should be extended to allow to fix the logical order of clusters written to disk. This would allow to better align parallel writing with, e.g., lumi blocks. The physical on-disk order of clusters written by the parallel writer will still be arbitrary, but the meta-data can link them to another, logical order. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16326
https://github.com/root-project/root/issues/16327:633,Deployability,release,releases,633,"### Explain what you would like to see improved and how. We should move all headers from $ROOTSYS/include to $ROOTSYS/ROOT/{component} and we should automatically generate wrapping headers that `#include` the relevant ROOT/ header with a deprecation warning.; Eg. ```bash; mv ROOTSYS/include/TLish.h ROOTSYS/include/ROOT/core/TLish.h; cat ROOTSYS/include/TLish.h; ```. ```cpp; #warn ""This forwarding header will go away in X please include \""ROOT/Base/TLish.h\"" ""; #include ""ROOT/core/TLish.h""; ```. The trampoline header file can be generated by our build system by adding a -DROOT_COMPATIBILITY switch that's on by default for few releases and then off. ### ROOT version. master. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:686,Deployability,Install,Installation,686,"### Explain what you would like to see improved and how. We should move all headers from $ROOTSYS/include to $ROOTSYS/ROOT/{component} and we should automatically generate wrapping headers that `#include` the relevant ROOT/ header with a deprecation warning.; Eg. ```bash; mv ROOTSYS/include/TLish.h ROOTSYS/include/ROOT/core/TLish.h; cat ROOTSYS/include/TLish.h; ```. ```cpp; #warn ""This forwarding header will go away in X please include \""ROOT/Base/TLish.h\"" ""; #include ""ROOT/core/TLish.h""; ```. The trampoline header file can be generated by our build system by adding a -DROOT_COMPATIBILITY switch that's on by default for few releases and then off. ### ROOT version. master. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:172,Integrability,wrap,wrapping,172,"### Explain what you would like to see improved and how. We should move all headers from $ROOTSYS/include to $ROOTSYS/ROOT/{component} and we should automatically generate wrapping headers that `#include` the relevant ROOT/ header with a deprecation warning.; Eg. ```bash; mv ROOTSYS/include/TLish.h ROOTSYS/include/ROOT/core/TLish.h; cat ROOTSYS/include/TLish.h; ```. ```cpp; #warn ""This forwarding header will go away in X please include \""ROOT/Base/TLish.h\"" ""; #include ""ROOT/core/TLish.h""; ```. The trampoline header file can be generated by our build system by adding a -DROOT_COMPATIBILITY switch that's on by default for few releases and then off. ### ROOT version. master. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/pull/16328:131,Deployability,update,updated,131,"and assign it to the dataframe/df027_SQliteDependencyOverVersion.C, as a start. ## Checklist:. - [v] tested changes locally; - [v] updated the docs (if necessary). This PR fixes; - [ROOT-9705](https://its.cern.ch/jira/browse/ROOT-9705); - [ROOT-10539](https://its.cern.ch/jira/browse/ROOT-10539)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16328
https://github.com/root-project/root/pull/16328:101,Testability,test,tested,101,"and assign it to the dataframe/df027_SQliteDependencyOverVersion.C, as a start. ## Checklist:. - [v] tested changes locally; - [v] updated the docs (if necessary). This PR fixes; - [ROOT-9705](https://its.cern.ch/jira/browse/ROOT-9705); - [ROOT-10539](https://its.cern.ch/jira/browse/ROOT-10539)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16328
https://github.com/root-project/root/pull/16330:319,Deployability,update,updated,319,"This PR adds support for `std::multiset` and `std::unordered_multiset` fields. The on-disk representation is exactly the same as `std::(unordered)_set`, so the only addition is the type name resolution for type-erased fields and the `RField` template specializations. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16330
https://github.com/root-project/root/pull/16330:289,Testability,test,tested,289,"This PR adds support for `std::multiset` and `std::unordered_multiset` fields. The on-disk representation is exactly the same as `std::(unordered)_set`, so the only addition is the type name resolution for type-erased fields and the `RField` template specializations. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16330
https://github.com/root-project/root/pull/16331:319,Deployability,update,updated,319,"This PR adds support for `std::multimap` and `std::unordered_multimap` fields. The on-disk representation is exactly the same as `std::(unordered)_map`, so the only addition is the type name resolution for type-erased fields and the `RField` template specializations. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16331
https://github.com/root-project/root/pull/16331:289,Testability,test,tested,289,"This PR adds support for `std::multimap` and `std::unordered_multimap` fields. The on-disk representation is exactly the same as `std::(unordered)_map`, so the only addition is the type name resolution for type-erased fields and the `RField` template specializations. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16331
https://github.com/root-project/root/pull/16332:104,Availability,avail,available,104,- Adds a locator type that can reference blocks >4GB on disk; - The new locator replaces the previously available but unused string locator; - Makes that DAOS locator support >4GB blocks; - Adds some fixes for pages >2GB,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16332
https://github.com/root-project/root/pull/16333:220,Modifiability,config,configuring,220,Adds pythonizations for the `RooStats::SPlot` class. The constructor(which automatically calls `AddSWeight()`) and the `AddSWeight` method follows command argument pythonization ( `**kwargs` -> `RooCmdArgs`) which makes configuring options more pythonic. Also adds a translated RooStats tutorial which uses the added pythonisations,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16333
https://github.com/root-project/root/pull/16334:246,Deployability,Update,Updates,246,Removes MarkovChain interfaces that are one-time used in `MCMCInterval` . Now obtain the reduced markov chain data (also as Hist ) by calling `reduce` on the RooDataSet (which can be directly accessed through `MarkovChain::GetAsConstDataSet`). . Updates all `reduce` and `reduceEng`methods to const across `RooAbsData` and other RooFit classes with overrides.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16334
https://github.com/root-project/root/pull/16334:89,Energy Efficiency,reduce,reduced,89,Removes MarkovChain interfaces that are one-time used in `MCMCInterval` . Now obtain the reduced markov chain data (also as Hist ) by calling `reduce` on the RooDataSet (which can be directly accessed through `MarkovChain::GetAsConstDataSet`). . Updates all `reduce` and `reduceEng`methods to const across `RooAbsData` and other RooFit classes with overrides.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16334
https://github.com/root-project/root/pull/16334:143,Energy Efficiency,reduce,reduce,143,Removes MarkovChain interfaces that are one-time used in `MCMCInterval` . Now obtain the reduced markov chain data (also as Hist ) by calling `reduce` on the RooDataSet (which can be directly accessed through `MarkovChain::GetAsConstDataSet`). . Updates all `reduce` and `reduceEng`methods to const across `RooAbsData` and other RooFit classes with overrides.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16334
https://github.com/root-project/root/pull/16334:259,Energy Efficiency,reduce,reduce,259,Removes MarkovChain interfaces that are one-time used in `MCMCInterval` . Now obtain the reduced markov chain data (also as Hist ) by calling `reduce` on the RooDataSet (which can be directly accessed through `MarkovChain::GetAsConstDataSet`). . Updates all `reduce` and `reduceEng`methods to const across `RooAbsData` and other RooFit classes with overrides.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16334
https://github.com/root-project/root/pull/16334:272,Energy Efficiency,reduce,reduceEng,272,Removes MarkovChain interfaces that are one-time used in `MCMCInterval` . Now obtain the reduced markov chain data (also as Hist ) by calling `reduce` on the RooDataSet (which can be directly accessed through `MarkovChain::GetAsConstDataSet`). . Updates all `reduce` and `reduceEng`methods to const across `RooAbsData` and other RooFit classes with overrides.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16334
https://github.com/root-project/root/pull/16334:20,Integrability,interface,interfaces,20,Removes MarkovChain interfaces that are one-time used in `MCMCInterval` . Now obtain the reduced markov chain data (also as Hist ) by calling `reduce` on the RooDataSet (which can be directly accessed through `MarkovChain::GetAsConstDataSet`). . Updates all `reduce` and `reduceEng`methods to const across `RooAbsData` and other RooFit classes with overrides.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16334
https://github.com/root-project/root/pull/16334:192,Security,access,accessed,192,Removes MarkovChain interfaces that are one-time used in `MCMCInterval` . Now obtain the reduced markov chain data (also as Hist ) by calling `reduce` on the RooDataSet (which can be directly accessed through `MarkovChain::GetAsConstDataSet`). . Updates all `reduce` and `reduceEng`methods to const across `RooAbsData` and other RooFit classes with overrides.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16334
https://github.com/root-project/root/pull/16335:36,Testability,test,test,36,This PR fixes #12108 by providing a test. We want to make sure that on Windows the test passes as well.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16335
https://github.com/root-project/root/pull/16335:83,Testability,test,test,83,This PR fixes #12108 by providing a test. We want to make sure that on Windows the test passes as well.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16335
https://github.com/root-project/root/pull/16337:195,Deployability,install,install,195,"The TPython library has one big caveat: it requires linking against `libpython`, which is not allowed in some context like the Python package manager. To avoid this problem that is blocking `pip install root`, this commit suggests to make TPython optional at build time. This makes also sense considering how TPython and PyROOT are used: if you intend to use ROOT via PyROOT from pip install ROOT, you probably won't need the functionality to run Python code from C++ that TPython provides. Possibly supersedes #15891, @vepadulano.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16337
https://github.com/root-project/root/pull/16337:384,Deployability,install,install,384,"The TPython library has one big caveat: it requires linking against `libpython`, which is not allowed in some context like the Python package manager. To avoid this problem that is blocking `pip install root`, this commit suggests to make TPython optional at build time. This makes also sense considering how TPython and PyROOT are used: if you intend to use ROOT via PyROOT from pip install ROOT, you probably won't need the functionality to run Python code from C++ that TPython provides. Possibly supersedes #15891, @vepadulano.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16337
https://github.com/root-project/root/pull/16337:154,Safety,avoid,avoid,154,"The TPython library has one big caveat: it requires linking against `libpython`, which is not allowed in some context like the Python package manager. To avoid this problem that is blocking `pip install root`, this commit suggests to make TPython optional at build time. This makes also sense considering how TPython and PyROOT are used: if you intend to use ROOT via PyROOT from pip install ROOT, you probably won't need the functionality to run Python code from C++ that TPython provides. Possibly supersedes #15891, @vepadulano.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16337
https://github.com/root-project/root/pull/16338:4,Deployability,patch,patch,4,"The patch that disables the initializer list pythonization should in principle not be necessary. @aaronj0, let's see which tests were actually failing because of this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:123,Testability,test,tests,123,"The patch that disables the initializer list pythonization should in principle not be necessary. @aaronj0, let's see which tests were actually failing because of this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16339:199,Usability,clear,clear,199,"* The `RooStatsUtils::MakeCleanWorkspace` function was implemented by ATLAS framework developers, who remain its only users until now. * They requested changing the function in #7823 and there is no clear reason to deny this request. Closes #7823.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16339
https://github.com/root-project/root/pull/16340:7,Integrability,bridg,bridge,7,"Using ""bridge with numpy"" between batch data from RBatchGenerator to torch.tensor(); Using std::resize() and direct copy in rchunkloader.hxx AssignVector() function",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16340
https://github.com/root-project/root/pull/16341:7,Integrability,bridg,bridge,7,"Using ""bridge with numpy"" between batch data from RBatchGenerator to torch.tensor(); Padding and Truncate ROOT::RVec temp adopted from &vec depends on vec_size and direct copy in rchunkloader.hxx AssignVector() function",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16341
https://github.com/root-project/root/pull/16341:140,Integrability,depend,depends,140,"Using ""bridge with numpy"" between batch data from RBatchGenerator to torch.tensor(); Padding and Truncate ROOT::RVec temp adopted from &vec depends on vec_size and direct copy in rchunkloader.hxx AssignVector() function",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16341
https://github.com/root-project/root/pull/16342:7,Integrability,bridg,bridge,7,"Using ""bridge with numpy"" between batch data from RBatchGenerator to torch.tensor(); Padding with std::fill() or Truncate &vec depends on vec_size and direct copy in rchunkloader.hxx AssignVector() function",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16342
https://github.com/root-project/root/pull/16342:127,Integrability,depend,depends,127,"Using ""bridge with numpy"" between batch data from RBatchGenerator to torch.tensor(); Padding with std::fill() or Truncate &vec depends on vec_size and direct copy in rchunkloader.hxx AssignVector() function",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16342
https://github.com/root-project/root/pull/16343:1370,Deployability,update,updates,1370,"With multiple concurrent `RNTupleFillContext`s, the order of clusters is generally indeterminate and entries are only partially ordered. With staged cluster committing, this restriction can be partially lifted by splitting a cluster commit into two phases:; 1. Once full, or when manually triggered, all fields are committed which triggers flushing of all columns. All pages are compressed and staged via the page sink. The result is a `RStagedCluster` that records all information for the second phase. This step can be repeated multiple times as entries are filled into the context.; 2. When appropriate for the application, all staged clusters can be committed, which logically appends them to the RNTuple. This is implemented in a single critical section, which guarantees that the clusters and their entries are consecutive. Moreover, by synchronizing the second phase between multiple contexts, the application can enforce a total ordering of all contained entries at reasonable resource consumption: During the first phase, all write buffers are flushed and will be reused for the following cluster. The metadata stored in `RStagedCluster` should require only minimal memory, which will accumulate while staging more clusters. Staged cluster committing is expected to be slightly slower than the default mode, but should still scale well as the second phase only updates the metadata which is a lightweight operation compared to preparing and filling entries, compressing pages, and writing them to disk. A noteworthy disadvantage is that staged cluster committing will lead to non-linear files, where sequentially iterating over clusters may require seeking to distant file offsets. The impact resulting from this will depend on the storage technology and the read pattern. Closes #16326",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:994,Energy Efficiency,consumption,consumption,994,"With multiple concurrent `RNTupleFillContext`s, the order of clusters is generally indeterminate and entries are only partially ordered. With staged cluster committing, this restriction can be partially lifted by splitting a cluster commit into two phases:; 1. Once full, or when manually triggered, all fields are committed which triggers flushing of all columns. All pages are compressed and staged via the page sink. The result is a `RStagedCluster` that records all information for the second phase. This step can be repeated multiple times as entries are filled into the context.; 2. When appropriate for the application, all staged clusters can be committed, which logically appends them to the RNTuple. This is implemented in a single critical section, which guarantees that the clusters and their entries are consecutive. Moreover, by synchronizing the second phase between multiple contexts, the application can enforce a total ordering of all contained entries at reasonable resource consumption: During the first phase, all write buffers are flushed and will be reused for the following cluster. The metadata stored in `RStagedCluster` should require only minimal memory, which will accumulate while staging more clusters. Staged cluster committing is expected to be slightly slower than the default mode, but should still scale well as the second phase only updates the metadata which is a lightweight operation compared to preparing and filling entries, compressing pages, and writing them to disk. A noteworthy disadvantage is that staged cluster committing will lead to non-linear files, where sequentially iterating over clusters may require seeking to distant file offsets. The impact resulting from this will depend on the storage technology and the read pattern. Closes #16326",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:843,Integrability,synchroniz,synchronizing,843,"With multiple concurrent `RNTupleFillContext`s, the order of clusters is generally indeterminate and entries are only partially ordered. With staged cluster committing, this restriction can be partially lifted by splitting a cluster commit into two phases:; 1. Once full, or when manually triggered, all fields are committed which triggers flushing of all columns. All pages are compressed and staged via the page sink. The result is a `RStagedCluster` that records all information for the second phase. This step can be repeated multiple times as entries are filled into the context.; 2. When appropriate for the application, all staged clusters can be committed, which logically appends them to the RNTuple. This is implemented in a single critical section, which guarantees that the clusters and their entries are consecutive. Moreover, by synchronizing the second phase between multiple contexts, the application can enforce a total ordering of all contained entries at reasonable resource consumption: During the first phase, all write buffers are flushed and will be reused for the following cluster. The metadata stored in `RStagedCluster` should require only minimal memory, which will accumulate while staging more clusters. Staged cluster committing is expected to be slightly slower than the default mode, but should still scale well as the second phase only updates the metadata which is a lightweight operation compared to preparing and filling entries, compressing pages, and writing them to disk. A noteworthy disadvantage is that staged cluster committing will lead to non-linear files, where sequentially iterating over clusters may require seeking to distant file offsets. The impact resulting from this will depend on the storage technology and the read pattern. Closes #16326",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:1727,Integrability,depend,depend,1727,"With multiple concurrent `RNTupleFillContext`s, the order of clusters is generally indeterminate and entries are only partially ordered. With staged cluster committing, this restriction can be partially lifted by splitting a cluster commit into two phases:; 1. Once full, or when manually triggered, all fields are committed which triggers flushing of all columns. All pages are compressed and staged via the page sink. The result is a `RStagedCluster` that records all information for the second phase. This step can be repeated multiple times as entries are filled into the context.; 2. When appropriate for the application, all staged clusters can be committed, which logically appends them to the RNTuple. This is implemented in a single critical section, which guarantees that the clusters and their entries are consecutive. Moreover, by synchronizing the second phase between multiple contexts, the application can enforce a total ordering of all contained entries at reasonable resource consumption: During the first phase, all write buffers are flushed and will be reused for the following cluster. The metadata stored in `RStagedCluster` should require only minimal memory, which will accumulate while staging more clusters. Staged cluster committing is expected to be slightly slower than the default mode, but should still scale well as the second phase only updates the metadata which is a lightweight operation compared to preparing and filling entries, compressing pages, and writing them to disk. A noteworthy disadvantage is that staged cluster committing will lead to non-linear files, where sequentially iterating over clusters may require seeking to distant file offsets. The impact resulting from this will depend on the storage technology and the read pattern. Closes #16326",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:14,Performance,concurren,concurrent,14,"With multiple concurrent `RNTupleFillContext`s, the order of clusters is generally indeterminate and entries are only partially ordered. With staged cluster committing, this restriction can be partially lifted by splitting a cluster commit into two phases:; 1. Once full, or when manually triggered, all fields are committed which triggers flushing of all columns. All pages are compressed and staged via the page sink. The result is a `RStagedCluster` that records all information for the second phase. This step can be repeated multiple times as entries are filled into the context.; 2. When appropriate for the application, all staged clusters can be committed, which logically appends them to the RNTuple. This is implemented in a single critical section, which guarantees that the clusters and their entries are consecutive. Moreover, by synchronizing the second phase between multiple contexts, the application can enforce a total ordering of all contained entries at reasonable resource consumption: During the first phase, all write buffers are flushed and will be reused for the following cluster. The metadata stored in `RStagedCluster` should require only minimal memory, which will accumulate while staging more clusters. Staged cluster committing is expected to be slightly slower than the default mode, but should still scale well as the second phase only updates the metadata which is a lightweight operation compared to preparing and filling entries, compressing pages, and writing them to disk. A noteworthy disadvantage is that staged cluster committing will lead to non-linear files, where sequentially iterating over clusters may require seeking to distant file offsets. The impact resulting from this will depend on the storage technology and the read pattern. Closes #16326",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:671,Testability,log,logically,671,"With multiple concurrent `RNTupleFillContext`s, the order of clusters is generally indeterminate and entries are only partially ordered. With staged cluster committing, this restriction can be partially lifted by splitting a cluster commit into two phases:; 1. Once full, or when manually triggered, all fields are committed which triggers flushing of all columns. All pages are compressed and staged via the page sink. The result is a `RStagedCluster` that records all information for the second phase. This step can be repeated multiple times as entries are filled into the context.; 2. When appropriate for the application, all staged clusters can be committed, which logically appends them to the RNTuple. This is implemented in a single critical section, which guarantees that the clusters and their entries are consecutive. Moreover, by synchronizing the second phase between multiple contexts, the application can enforce a total ordering of all contained entries at reasonable resource consumption: During the first phase, all write buffers are flushed and will be reused for the following cluster. The metadata stored in `RStagedCluster` should require only minimal memory, which will accumulate while staging more clusters. Staged cluster committing is expected to be slightly slower than the default mode, but should still scale well as the second phase only updates the metadata which is a lightweight operation compared to preparing and filling entries, compressing pages, and writing them to disk. A noteworthy disadvantage is that staged cluster committing will lead to non-linear files, where sequentially iterating over clusters may require seeking to distant file offsets. The impact resulting from this will depend on the storage technology and the read pattern. Closes #16326",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16345:111,Deployability,update,update,111,The meta-data envelope will not be part of the v1.0 specification. It will likely come later as a minor format update. Note that this change breaks forward compatibility.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16345
https://github.com/root-project/root/pull/16346:121,Integrability,interface,interface,121,"The RooRealMPFE class is an implementation detail of the old RooFit multiprocessing. It should not be part of the public interface, and also not have a `ClassDef` that allows you to do IO with it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16346
https://github.com/root-project/root/pull/16347:0,Usability,Simpl,Simple,0,Simple addition of the GetColumnType function to distributed RDF. . This PR fixes #15039,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16347
https://github.com/root-project/root/pull/16348:413,Availability,avail,available,413,"# This Pull request:; Choosing an appropriate color scheme is essential for making results easy to understand and; interpret. Factors like colorblindness and converting colors to grayscale for publications; can impact accessibility. Furthermore, results should be aesthetically pleasing. The following; three color schemes, recommended by M. Petroff in [arXiv:2107.02270v2](https://arxiv.org/pdf/2107.02270); and available on [GitHub](https://github.com/mpetroff/accessible-color-cycles); under the MIT License, meet these criteria. ## Changes or fixes:; - Implement the new three colors scheme in TColor.cxx et RTypes.h; - Add 3 missing colors (kBrown, kGrape and kAsh); - Automaticallically set the name of a new color to its hexadecimal value; - Implement two new tutorials illustrating these new color schemes; - Update the doc; - Improve the dark and bright colors management. Modify the documentation accordingly. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:817,Deployability,Update,Update,817,"# This Pull request:; Choosing an appropriate color scheme is essential for making results easy to understand and; interpret. Factors like colorblindness and converting colors to grayscale for publications; can impact accessibility. Furthermore, results should be aesthetically pleasing. The following; three color schemes, recommended by M. Petroff in [arXiv:2107.02270v2](https://arxiv.org/pdf/2107.02270); and available on [GitHub](https://github.com/mpetroff/accessible-color-cycles); under the MIT License, meet these criteria. ## Changes or fixes:; - Implement the new three colors scheme in TColor.cxx et RTypes.h; - Add 3 missing colors (kBrown, kGrape and kAsh); - Automaticallically set the name of a new color to its hexadecimal value; - Implement two new tutorials illustrating these new color schemes; - Update the doc; - Improve the dark and bright colors management. Modify the documentation accordingly. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:971,Deployability,update,updated,971,"# This Pull request:; Choosing an appropriate color scheme is essential for making results easy to understand and; interpret. Factors like colorblindness and converting colors to grayscale for publications; can impact accessibility. Furthermore, results should be aesthetically pleasing. The following; three color schemes, recommended by M. Petroff in [arXiv:2107.02270v2](https://arxiv.org/pdf/2107.02270); and available on [GitHub](https://github.com/mpetroff/accessible-color-cycles); under the MIT License, meet these criteria. ## Changes or fixes:; - Implement the new three colors scheme in TColor.cxx et RTypes.h; - Add 3 missing colors (kBrown, kGrape and kAsh); - Automaticallically set the name of a new color to its hexadecimal value; - Implement two new tutorials illustrating these new color schemes; - Update the doc; - Improve the dark and bright colors management. Modify the documentation accordingly. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:218,Security,access,accessibility,218,"# This Pull request:; Choosing an appropriate color scheme is essential for making results easy to understand and; interpret. Factors like colorblindness and converting colors to grayscale for publications; can impact accessibility. Furthermore, results should be aesthetically pleasing. The following; three color schemes, recommended by M. Petroff in [arXiv:2107.02270v2](https://arxiv.org/pdf/2107.02270); and available on [GitHub](https://github.com/mpetroff/accessible-color-cycles); under the MIT License, meet these criteria. ## Changes or fixes:; - Implement the new three colors scheme in TColor.cxx et RTypes.h; - Add 3 missing colors (kBrown, kGrape and kAsh); - Automaticallically set the name of a new color to its hexadecimal value; - Implement two new tutorials illustrating these new color schemes; - Update the doc; - Improve the dark and bright colors management. Modify the documentation accordingly. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:463,Security,access,accessible-color-cycles,463,"# This Pull request:; Choosing an appropriate color scheme is essential for making results easy to understand and; interpret. Factors like colorblindness and converting colors to grayscale for publications; can impact accessibility. Furthermore, results should be aesthetically pleasing. The following; three color schemes, recommended by M. Petroff in [arXiv:2107.02270v2](https://arxiv.org/pdf/2107.02270); and available on [GitHub](https://github.com/mpetroff/accessible-color-cycles); under the MIT License, meet these criteria. ## Changes or fixes:; - Implement the new three colors scheme in TColor.cxx et RTypes.h; - Add 3 missing colors (kBrown, kGrape and kAsh); - Automaticallically set the name of a new color to its hexadecimal value; - Implement two new tutorials illustrating these new color schemes; - Update the doc; - Improve the dark and bright colors management. Modify the documentation accordingly. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:941,Testability,test,tested,941,"# This Pull request:; Choosing an appropriate color scheme is essential for making results easy to understand and; interpret. Factors like colorblindness and converting colors to grayscale for publications; can impact accessibility. Furthermore, results should be aesthetically pleasing. The following; three color schemes, recommended by M. Petroff in [arXiv:2107.02270v2](https://arxiv.org/pdf/2107.02270); and available on [GitHub](https://github.com/mpetroff/accessible-color-cycles); under the MIT License, meet these criteria. ## Changes or fixes:; - Implement the new three colors scheme in TColor.cxx et RTypes.h; - Add 3 missing colors (kBrown, kGrape and kAsh); - Automaticallically set the name of a new color to its hexadecimal value; - Implement two new tutorials illustrating these new color schemes; - Update the doc; - Improve the dark and bright colors management. Modify the documentation accordingly. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16349:733,Deployability,update,updated,733,"# This Pull request:. - Adds new Constructor interfaces to RooCmdArg; - Adds new printouts to RooCmdArg. ## Changes or fixes:. RooCmdArg is a bit of an old-style piece of code that doesn't really work well with python.; Also, when talking among statistics code developers, it's commonplace to have to ""exchange"" fit arguments between codes (""what arguments to you pass to make it converge?"").; For this purpose, it's very convenient to:; - be able to print the command arguments in a human-readable format, and; - directly use these printouts to copy&paste them into some other piece of code to make comparison studies. The changes in this PR make this possible with little effort. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16349
https://github.com/root-project/root/pull/16349:45,Integrability,interface,interfaces,45,"# This Pull request:. - Adds new Constructor interfaces to RooCmdArg; - Adds new printouts to RooCmdArg. ## Changes or fixes:. RooCmdArg is a bit of an old-style piece of code that doesn't really work well with python.; Also, when talking among statistics code developers, it's commonplace to have to ""exchange"" fit arguments between codes (""what arguments to you pass to make it converge?"").; For this purpose, it's very convenient to:; - be able to print the command arguments in a human-readable format, and; - directly use these printouts to copy&paste them into some other piece of code to make comparison studies. The changes in this PR make this possible with little effort. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16349
https://github.com/root-project/root/pull/16349:703,Testability,test,tested,703,"# This Pull request:. - Adds new Constructor interfaces to RooCmdArg; - Adds new printouts to RooCmdArg. ## Changes or fixes:. RooCmdArg is a bit of an old-style piece of code that doesn't really work well with python.; Also, when talking among statistics code developers, it's commonplace to have to ""exchange"" fit arguments between codes (""what arguments to you pass to make it converge?"").; For this purpose, it's very convenient to:; - be able to print the command arguments in a human-readable format, and; - directly use these printouts to copy&paste them into some other piece of code to make comparison studies. The changes in this PR make this possible with little effort. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16349
https://github.com/root-project/root/pull/16353:184,Testability,test,test,184,"The data resetting should work seamlessly with the new NLL evaluation backend, so as far as I can tell there is nothing to be done to address #15763. However, it is good to add a unit test for it, so that we can also easily add tests for potentially problematic corner cases in the future. Possibly closes #15763, if there are no corner cases where data resetting doesn't work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16353
https://github.com/root-project/root/pull/16353:228,Testability,test,tests,228,"The data resetting should work seamlessly with the new NLL evaluation backend, so as far as I can tell there is nothing to be done to address #15763. However, it is good to add a unit test for it, so that we can also easily add tests for potentially problematic corner cases in the future. Possibly closes #15763, if there are no corner cases where data resetting doesn't work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16353
https://github.com/root-project/root/pull/16355:38,Safety,timeout,timeouts,38,"for all builds since it is subject to timeouts when the build happens from scratch. This is of course a temporary measure, until we find a future proof solution for this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16355
https://github.com/root-project/root/pull/16358:72,Integrability,depend,depend,72,"Last argument in strncpy is length of destination buffer and should not depend from length of source string. Fixes warning from gcc14:; ```; git/webgui/core/meta/src/TClass.cxx:701:20: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-truncation]; 701 | strncpy(line + kvalue, *ppointer, std::min( i, kline - kvalue));; | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; git/webgui/core/meta/src/TClass.cxx:691:20: note: length computed here; 691 | i = strlen(*ppointer);; | ~~~~~~^~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16358
https://github.com/root-project/root/pull/16358:254,Integrability,depend,depends,254,"Last argument in strncpy is length of destination buffer and should not depend from length of source string. Fixes warning from gcc14:; ```; git/webgui/core/meta/src/TClass.cxx:701:20: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-truncation]; 701 | strncpy(line + kvalue, *ppointer, std::min( i, kline - kvalue));; | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; git/webgui/core/meta/src/TClass.cxx:691:20: note: length computed here; 691 | i = strlen(*ppointer);; | ~~~~~~^~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16358
https://github.com/root-project/root/pull/16359:2177,Energy Efficiency,allocate,allocate,2177,"oc_append(_Args&& ...) [with _Args = {char}; _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/vector.tcc:688:7,; inlined from ‘constexpr std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {char}; _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/vector.tcc:123:21,; inlined from ‘constexpr void std::vector<_Tp, _Alloc>::push_back(value_type&&) [with _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/stl_vector.h:1301:21,; inlined from ‘void ROOT::Minuit2::MnPlot::operator()(double, double, const std::vector<std::pair<double, double> >&) const’ at git/webgui/math/minuit2/src/MnPlot.cxx:51:18:; /usr/include/c++/14/bits/new_allocator.h:172:33: warning: ‘void operator delete(void*, std::size_t)’ called on pointer ‘<unknown>’ with nonzero offset [1, 576460752303423489] [-Wfree-nonheap-object]; 172 | _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));; | ^; In member function ‘_Tp* std::__new_allocator<_Tp>::allocate(size_type, const void*) [with _Tp = char]’,; inlined from ‘constexpr _Tp* std::allocator< <template-parameter-1-1> >::allocate(std::size_t) [with _Tp = char]’ at /usr/include/c++/14/bits/allocator.h:196:40,; inlined from ‘static constexpr _Tp* std::allocator_traits<std::allocator<_Up> >::allocate(allocator_type&, size_type) [with _Tp = char]’ at /usr/include/c++/14/bits/alloc_traits.h:478:28,; inlined from ‘constexpr std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/stl_vector.h:380:33,; inlined from ‘constexpr void std::vector<_Tp, _Alloc>::reserve(size_type) [with _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/vector.tcc:79:33,; inlined from ‘void ROOT::Minuit2::MnPlot::operator()(double, double, const std::vector<std::pair<double, double> >&) const’ at git/webgui/math/minuit2/src/MnPlot.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16359
https://github.com/root-project/root/pull/16359:2304,Energy Efficiency,allocate,allocate,2304,"oc_append(_Args&& ...) [with _Args = {char}; _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/vector.tcc:688:7,; inlined from ‘constexpr std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {char}; _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/vector.tcc:123:21,; inlined from ‘constexpr void std::vector<_Tp, _Alloc>::push_back(value_type&&) [with _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/stl_vector.h:1301:21,; inlined from ‘void ROOT::Minuit2::MnPlot::operator()(double, double, const std::vector<std::pair<double, double> >&) const’ at git/webgui/math/minuit2/src/MnPlot.cxx:51:18:; /usr/include/c++/14/bits/new_allocator.h:172:33: warning: ‘void operator delete(void*, std::size_t)’ called on pointer ‘<unknown>’ with nonzero offset [1, 576460752303423489] [-Wfree-nonheap-object]; 172 | _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));; | ^; In member function ‘_Tp* std::__new_allocator<_Tp>::allocate(size_type, const void*) [with _Tp = char]’,; inlined from ‘constexpr _Tp* std::allocator< <template-parameter-1-1> >::allocate(std::size_t) [with _Tp = char]’ at /usr/include/c++/14/bits/allocator.h:196:40,; inlined from ‘static constexpr _Tp* std::allocator_traits<std::allocator<_Up> >::allocate(allocator_type&, size_type) [with _Tp = char]’ at /usr/include/c++/14/bits/alloc_traits.h:478:28,; inlined from ‘constexpr std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/stl_vector.h:380:33,; inlined from ‘constexpr void std::vector<_Tp, _Alloc>::reserve(size_type) [with _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/vector.tcc:79:33,; inlined from ‘void ROOT::Minuit2::MnPlot::operator()(double, double, const std::vector<std::pair<double, double> >&) const’ at git/webgui/math/minuit2/src/MnPlot.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16359
https://github.com/root-project/root/pull/16359:2475,Energy Efficiency,allocate,allocate,2475,"::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {char}; _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/vector.tcc:123:21,; inlined from ‘constexpr void std::vector<_Tp, _Alloc>::push_back(value_type&&) [with _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/stl_vector.h:1301:21,; inlined from ‘void ROOT::Minuit2::MnPlot::operator()(double, double, const std::vector<std::pair<double, double> >&) const’ at git/webgui/math/minuit2/src/MnPlot.cxx:51:18:; /usr/include/c++/14/bits/new_allocator.h:172:33: warning: ‘void operator delete(void*, std::size_t)’ called on pointer ‘<unknown>’ with nonzero offset [1, 576460752303423489] [-Wfree-nonheap-object]; 172 | _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));; | ^; In member function ‘_Tp* std::__new_allocator<_Tp>::allocate(size_type, const void*) [with _Tp = char]’,; inlined from ‘constexpr _Tp* std::allocator< <template-parameter-1-1> >::allocate(std::size_t) [with _Tp = char]’ at /usr/include/c++/14/bits/allocator.h:196:40,; inlined from ‘static constexpr _Tp* std::allocator_traits<std::allocator<_Up> >::allocate(allocator_type&, size_type) [with _Tp = char]’ at /usr/include/c++/14/bits/alloc_traits.h:478:28,; inlined from ‘constexpr std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/stl_vector.h:380:33,; inlined from ‘constexpr void std::vector<_Tp, _Alloc>::reserve(size_type) [with _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/vector.tcc:79:33,; inlined from ‘void ROOT::Minuit2::MnPlot::operator()(double, double, const std::vector<std::pair<double, double> >&) const’ at git/webgui/math/minuit2/src/MnPlot.cxx:50:16:; /usr/include/c++/14/bits/new_allocator.h:151:55: note: returned from ‘void* operator new(std::size_t)’; 151 | return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));; | ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16359
https://github.com/root-project/root/pull/16359:59,Usability,simpl,simplify,59,"gcc14 issue warning when `std::vector<char>` is used. Also simplify loop over points. ```; In file included from /usr/include/c++/14/x86_64-suse-linux/bits/c++allocator.h:33,; from /usr/include/c++/14/bits/allocator.h:46,; from /usr/include/c++/14/vector:63,; from /home/linev/git/webgui/math/minuit2/inc/Minuit2/MnPlot.h:14,; from /home/linev/git/webgui/math/minuit2/src/MnPlot.cxx:10:; In member function ‘void std::__new_allocator<_Tp>::deallocate(_Tp*, size_type) [with _Tp = char]’,; inlined from ‘constexpr void std::allocator< <template-parameter-1-1> >::deallocate(_Tp*, std::size_t) [with _Tp = char]’ at /usr/include/c++/14/bits/allocator.h:208:35,; inlined from ‘static constexpr void std::allocator_traits<std::allocator<_Up> >::deallocate(allocator_type&, pointer, size_type) [with _Tp = char]’ at /usr/include/c++/14/bits/alloc_traits.h:513:23,; inlined from ‘constexpr std::vector<_Tp, _Alloc>::_M_realloc_append(_Args&& ...)::_Guard::~_Guard() [with _Args = {char}; _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/vector.tcc:616:18,; inlined from ‘constexpr void std::vector<_Tp, _Alloc>::_M_realloc_append(_Args&& ...) [with _Args = {char}; _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/vector.tcc:688:7,; inlined from ‘constexpr std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {char}; _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/vector.tcc:123:21,; inlined from ‘constexpr void std::vector<_Tp, _Alloc>::push_back(value_type&&) [with _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/stl_vector.h:1301:21,; inlined from ‘void ROOT::Minuit2::MnPlot::operator()(double, double, const std::vector<std::pair<double, double> >&) const’ at git/webgui/math/minuit2/src/MnPlot.cxx:51:18:; /usr/include/c++/14/bits/new_allocator.h:172:33: warning: ‘void operator delete(void*, std::size_t)’ called on pointer ‘<unknown>’ with nonzero offs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16359
https://github.com/root-project/root/issues/16360:3197,Deployability,Install,Installation,3197,"I, _OI) [with bool _IsMove = false; _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:548:42,; inlined from ‘constexpr _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:555:31,; inlined from ‘constexpr _OI std::copy(_II, _II, _OI) [with _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:651:7,; inlined from ‘constexpr std::vector<bool, _Alloc>::iterator std::vector<bool, _Alloc>::_M_copy_aligned(const_iterator, const_iterator, iterator) [with _Alloc = std::allocator<bool>]’ at /usr/include/c++/14/bits/stl_bvector.h:1342:28,; inlined from ‘constexpr void std::vector<bool, _Alloc>::_M_reallocate(size_type) [with _Alloc = std::allocator<bool>]’ at /usr/include/c++/14/bits/vector.tcc:1059:40,; inlined from ‘constexpr void std::vector<bool, _Alloc>::reserve(size_type) [with _Alloc = std::allocator<bool>]’ at /usr/include/c++/14/bits/stl_bvector.h:1130:17,; inlined from ‘ROOT::Internal::RDF::BuildAction<char, unsigned char, int, unsigned int, short int, short unsigned int, double, float, long long int, long long unsigned int, bool, ROOT::Detail::RDF::RLoopManager>(const ROOT::RDF::ColumnNames_t&, const ; std::shared_ptr<SnapshotHelperArgs>&, unsigned int, std::shared_ptr<ROOT::Detail::RDF::RLoopManager>, ActionTags::Snapshot, const RColumnRegister&)::<lambda()>’ at tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:270:20:; /usr/include/c++/14/bits/stl_algobase.h:452:30: warning: ‘void* __builtin_memmove(void*, const void*, long unsigned int)’ forming offset 8 is out of the bounds [0, 8] [-Warray-bounds=]; 452 | __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);; | ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ```. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16360
https://github.com/root-project/root/issues/16360:195,Integrability,Interface,InterfaceUtils,195,"### Explain what you would like to see improved and how. One should fix following warning. Appears in following line: https://github.com/root-project/root/blob/master/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx#L270. ```; In file included from /usr/include/c++/14/string:51,; from /home/linev/git/webgui/core/meta/inc/TSchemaHelper.h:17,; from /home/linev/git/webgui/core/meta/inc/TGenericClassInfo.h:21,; from /home/linev/git/webgui/core/base/inc/Rtypes.h:193,; from /home/linev/git/webgui/core/base/inc/TObject.h:17,; from /home/linev/git/webgui/core/base/inc/TNamed.h:25,; from /home/linev/git/webgui/core/base/inc/TDirectory.h:24,; from /home/linev/git/webgui/core/base/inc/TROOT.h:28,; from /home/linev/git/webgui/tree/dataframe/inc/ROOT/RDataFrame.hxx:19,; from /home/linev/git/webgui/tree/dataframe/test/dataframe_utils.cxx:1:; In static member function ‘static constexpr _Up* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(_Tp*, _Tp*, _Up*) [with _Tp = long unsigned int; _Up = long unsigned int; bool _IsMove = false]’,; inlined from ‘constexpr _OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:521:30,; inlined from ‘constexpr _OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:548:42,; inlined from ‘constexpr _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:555:31,; inlined from ‘constexpr _OI std::copy(_II, _II, _OI) [with _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:651:7,; inlined from ‘constexpr std::vector<bool, _Alloc>::iterator std::vector<bool, _Alloc>::_M_copy_aligned(const_iterator, const_iterator, iterator) [with _Alloc = std::allocator<bool>]’ at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16360
https://github.com/root-project/root/issues/16360:2823,Integrability,Interface,InterfaceUtils,2823,"I, _OI) [with bool _IsMove = false; _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:548:42,; inlined from ‘constexpr _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:555:31,; inlined from ‘constexpr _OI std::copy(_II, _II, _OI) [with _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:651:7,; inlined from ‘constexpr std::vector<bool, _Alloc>::iterator std::vector<bool, _Alloc>::_M_copy_aligned(const_iterator, const_iterator, iterator) [with _Alloc = std::allocator<bool>]’ at /usr/include/c++/14/bits/stl_bvector.h:1342:28,; inlined from ‘constexpr void std::vector<bool, _Alloc>::_M_reallocate(size_type) [with _Alloc = std::allocator<bool>]’ at /usr/include/c++/14/bits/vector.tcc:1059:40,; inlined from ‘constexpr void std::vector<bool, _Alloc>::reserve(size_type) [with _Alloc = std::allocator<bool>]’ at /usr/include/c++/14/bits/stl_bvector.h:1130:17,; inlined from ‘ROOT::Internal::RDF::BuildAction<char, unsigned char, int, unsigned int, short int, short unsigned int, double, float, long long int, long long unsigned int, bool, ROOT::Detail::RDF::RLoopManager>(const ROOT::RDF::ColumnNames_t&, const ; std::shared_ptr<SnapshotHelperArgs>&, unsigned int, std::shared_ptr<ROOT::Detail::RDF::RLoopManager>, ActionTags::Snapshot, const RColumnRegister&)::<lambda()>’ at tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:270:20:; /usr/include/c++/14/bits/stl_algobase.h:452:30: warning: ‘void* __builtin_memmove(void*, const void*, long unsigned int)’ forming offset 8 is out of the bounds [0, 8] [-Warray-bounds=]; 452 | __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);; | ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ```. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16360
https://github.com/root-project/root/issues/16360:809,Testability,test,test,809,"### Explain what you would like to see improved and how. One should fix following warning. Appears in following line: https://github.com/root-project/root/blob/master/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx#L270. ```; In file included from /usr/include/c++/14/string:51,; from /home/linev/git/webgui/core/meta/inc/TSchemaHelper.h:17,; from /home/linev/git/webgui/core/meta/inc/TGenericClassInfo.h:21,; from /home/linev/git/webgui/core/base/inc/Rtypes.h:193,; from /home/linev/git/webgui/core/base/inc/TObject.h:17,; from /home/linev/git/webgui/core/base/inc/TNamed.h:25,; from /home/linev/git/webgui/core/base/inc/TDirectory.h:24,; from /home/linev/git/webgui/core/base/inc/TROOT.h:28,; from /home/linev/git/webgui/tree/dataframe/inc/ROOT/RDataFrame.hxx:19,; from /home/linev/git/webgui/tree/dataframe/test/dataframe_utils.cxx:1:; In static member function ‘static constexpr _Up* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(_Tp*, _Tp*, _Up*) [with _Tp = long unsigned int; _Up = long unsigned int; bool _IsMove = false]’,; inlined from ‘constexpr _OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:521:30,; inlined from ‘constexpr _OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:548:42,; inlined from ‘constexpr _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:555:31,; inlined from ‘constexpr _OI std::copy(_II, _II, _OI) [with _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:651:7,; inlined from ‘constexpr std::vector<bool, _Alloc>::iterator std::vector<bool, _Alloc>::_M_copy_aligned(const_iterator, const_iterator, iterator) [with _Alloc = std::allocator<bool>]’ at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16360
https://github.com/root-project/root/pull/16363:916,Deployability,update,updated,916,"# This Pull request:; splits `RNTupleView<T, bool>` into `RNTupleUnownedView` and `RNTupleOwnedView`. `RNTupleView` is renamed to `Internal::RNTupleViewBase` and used as the base class for the new public classes. # Notes; - I'm conflicted about the naming of the classes. For me it's ambiguous whether the `Unowned` and `Owned` labels should be changed to, respectively, `Owning` and `Unowning` (note the swap). On one hand you could say `RNTupleView<T, false>` is ""Unowned"" *by the user*; on the other, you could say it is ""Owning"" its memory. Thoughts about this?; - I made `RNTupleViewBase` not constructible (aside from friend classes) by giving it a protected destructor. Maybe we don't want to exclude this possibility (e.g. to allow users to use the base class in template metaprogramming), but in this case maybe we don't want to make it `Internal` either. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #16321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:886,Testability,test,tested,886,"# This Pull request:; splits `RNTupleView<T, bool>` into `RNTupleUnownedView` and `RNTupleOwnedView`. `RNTupleView` is renamed to `Internal::RNTupleViewBase` and used as the base class for the new public classes. # Notes; - I'm conflicted about the naming of the classes. For me it's ambiguous whether the `Unowned` and `Owned` labels should be changed to, respectively, `Owning` and `Unowning` (note the swap). On one hand you could say `RNTupleView<T, false>` is ""Unowned"" *by the user*; on the other, you could say it is ""Owning"" its memory. Thoughts about this?; - I made `RNTupleViewBase` not constructible (aside from friend classes) by giving it a protected destructor. Maybe we don't want to exclude this possibility (e.g. to allow users to use the base class in template metaprogramming), but in this case maybe we don't want to make it `Internal` either. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #16321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/issues/16366:1039,Deployability,Install,Installation,1039,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. /root/root/include/Bytes.h: In function ‘void tobuf(char*&, ULong_t)’:; /root/root/include/Bytes.h:109:15: warning: cast from type ‘const ULong_t*’ {aka ‘const long unsigned int*’} to type ‘char*’ casts away qualifiers [-Wcast-qual]; 109 | char *sw = (char *)intermediary;; | ^~~~~~~~~~~~~~~~~~~~; /root/root/include/Bytes.h: In function ‘void tobuf(char*&, Long_t)’:; /root/root/include/Bytes.h:148:15: warning: cast from type ‘const Long_t*’ {aka ‘const long int*’} to type ‘char*’ casts away qualifiers [-Wcast-qual]; 148 | char *sw = (char *)intermediary;; | ^~~~~~~~~~~~~~~~~~~~. In both cases, ""intermediary"" is defined as ""const"", which is indeed cast away by the C-style cast. As far as I can see, ""sw"" isn't written to, so that probably should be ""const"" as well? Otherwise, a const_cast could be an option. ### Reproducer. If you try to compile anything that (indirectly) includes include/Bytes.h with -Wcast-qual enabled. ### ROOT version. 6.32.04. ### Installation method. Pre-built binary. ### Operating system. AlmaLinux 9.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16366
https://github.com/root-project/root/pull/16368:0,Safety,Avoid,Avoid,0,Avoid expansion of JSROOT drawing on full HTML page. Like this one: https://root.cern/doc/master/rbox_8cxx.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16368
https://github.com/root-project/root/pull/16370:309,Deployability,update,updated,309,# This Pull request:. This pull request fixes a segfault when calling `GetNumberOfBins()` on an empty TH2Poly by first checking whether `fBins` is null. To reproduce the original segfault:; ```c++; TH2Poly h; h.GetNumberOfBins();; ```. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16370
https://github.com/root-project/root/pull/16370:279,Testability,test,tested,279,# This Pull request:. This pull request fixes a segfault when calling `GetNumberOfBins()` on an empty TH2Poly by first checking whether `fBins` is null. To reproduce the original segfault:; ```c++; TH2Poly h; h.GetNumberOfBins();; ```. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16370
https://github.com/root-project/root/pull/16372:60,Availability,error,error,60,"In TGrpahErrors TGraphAsymmErrors and TGraphBentErrors, the error bars were drawn inside the marker when the marker was bigger than the error bars. This was reported in this forum post: https://root-forum.cern.ch/t/error-bars-inside-markers-with-draw-same/60631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:136,Availability,error,error,136,"In TGrpahErrors TGraphAsymmErrors and TGraphBentErrors, the error bars were drawn inside the marker when the marker was bigger than the error bars. This was reported in this forum post: https://root-forum.cern.ch/t/error-bars-inside-markers-with-draw-same/60631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:215,Availability,error,error-bars-inside-markers-with-draw-same,215,"In TGrpahErrors TGraphAsymmErrors and TGraphBentErrors, the error bars were drawn inside the marker when the marker was bigger than the error bars. This was reported in this forum post: https://root-forum.cern.ch/t/error-bars-inside-markers-with-draw-same/60631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/issues/16374:131,Availability,Error,Error,131,"Doing in a empty build directory; ```; cmake -Dminimal=ON $ROOT_SRC_DIR; cmake -Dbuiltin_xrootd=ON .; ```; fails with:; ```; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:924 (target_link_libraries):; The link interface of target ""XRootD"" contains:. OpenSSL::SSL. but the target was not found. Possible reasons include:. * There is a typo in the target name.; * A find_package call is missing for an IMPORTED target.; * An ALIAS target is missing. Call Stack (most recent call first):; CMakeLists.txt:305 (include); ```; while on the same machine and in another empty directory doing just:; ```; cmake -Dbuiltin_xrootd=ON .; ```. The difference between the two case is that the `ssl` variable usually default to `ON` but in the minimal case it default to `OFF` and turning on `builtin_xrootd` does not turn `ssl` back on. The reason why this matters is that `find_package` defaults to declaring its results only inside the parent_scope. In practice we see `find_package` works properly in the top level `CMakeList.txt` and in one level of indirection (typically `cmake/modules/SearchInstalledSoftware.cmake`) but a second level of direction (i.e. inside the `add_subdirectory(builtins/xrootd)` inside `SearchInstalledSoftware.cmake`), it does not work. From https://cmake.org/cmake/help/latest/command/find_package.html we read:. > New in version 3.24: Specifying the GLOBAL keyword will promote all imported targets to a global scope in the importing project. Alternatively, this functionality can be enabled by setting the [CMAKE_FIND_PACKAGE_TARGETS_GLOBAL](https://cmake.org/cmake/help/latest/variable/CMAKE_FIND_PACKAGE_TARGETS_GLOBAL.html#variable:CMAKE_FIND_PACKAGE_TARGETS_GLOBAL) variable. So there is 3 possible solution. 1. Require `CMake` version `3.24` and add the `GLOBAL` keyword where needed (or set the variable); 2. Make sure that `builtin_xrootd` (and any other similar components) to turn `ssl` ON when turned ON; 3. Move the `find_package(OpenSSL) from inside `builti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16374
https://github.com/root-project/root/issues/16374:2095,Availability,error,error,2095,"modules/SearchInstalledSoftware.cmake:924 (target_link_libraries):; The link interface of target ""XRootD"" contains:. OpenSSL::SSL. but the target was not found. Possible reasons include:. * There is a typo in the target name.; * A find_package call is missing for an IMPORTED target.; * An ALIAS target is missing. Call Stack (most recent call first):; CMakeLists.txt:305 (include); ```; while on the same machine and in another empty directory doing just:; ```; cmake -Dbuiltin_xrootd=ON .; ```. The difference between the two case is that the `ssl` variable usually default to `ON` but in the minimal case it default to `OFF` and turning on `builtin_xrootd` does not turn `ssl` back on. The reason why this matters is that `find_package` defaults to declaring its results only inside the parent_scope. In practice we see `find_package` works properly in the top level `CMakeList.txt` and in one level of indirection (typically `cmake/modules/SearchInstalledSoftware.cmake`) but a second level of direction (i.e. inside the `add_subdirectory(builtins/xrootd)` inside `SearchInstalledSoftware.cmake`), it does not work. From https://cmake.org/cmake/help/latest/command/find_package.html we read:. > New in version 3.24: Specifying the GLOBAL keyword will promote all imported targets to a global scope in the importing project. Alternatively, this functionality can be enabled by setting the [CMAKE_FIND_PACKAGE_TARGETS_GLOBAL](https://cmake.org/cmake/help/latest/variable/CMAKE_FIND_PACKAGE_TARGETS_GLOBAL.html#variable:CMAKE_FIND_PACKAGE_TARGETS_GLOBAL) variable. So there is 3 possible solution. 1. Require `CMake` version `3.24` and add the `GLOBAL` keyword where needed (or set the variable); 2. Make sure that `builtin_xrootd` (and any other similar components) to turn `ssl` ON when turned ON; 3. Move the `find_package(OpenSSL) from inside `builtins/xrootd/CMakeLists.txt` to it inclusion point in `SearchInstalledSoftware.cmake`; 4. Add an error if `builtin_xrootd` is ON while `ssl` is OFF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16374
https://github.com/root-project/root/issues/16374:223,Integrability,interface,interface,223,"Doing in a empty build directory; ```; cmake -Dminimal=ON $ROOT_SRC_DIR; cmake -Dbuiltin_xrootd=ON .; ```; fails with:; ```; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:924 (target_link_libraries):; The link interface of target ""XRootD"" contains:. OpenSSL::SSL. but the target was not found. Possible reasons include:. * There is a typo in the target name.; * A find_package call is missing for an IMPORTED target.; * An ALIAS target is missing. Call Stack (most recent call first):; CMakeLists.txt:305 (include); ```; while on the same machine and in another empty directory doing just:; ```; cmake -Dbuiltin_xrootd=ON .; ```. The difference between the two case is that the `ssl` variable usually default to `ON` but in the minimal case it default to `OFF` and turning on `builtin_xrootd` does not turn `ssl` back on. The reason why this matters is that `find_package` defaults to declaring its results only inside the parent_scope. In practice we see `find_package` works properly in the top level `CMakeList.txt` and in one level of indirection (typically `cmake/modules/SearchInstalledSoftware.cmake`) but a second level of direction (i.e. inside the `add_subdirectory(builtins/xrootd)` inside `SearchInstalledSoftware.cmake`), it does not work. From https://cmake.org/cmake/help/latest/command/find_package.html we read:. > New in version 3.24: Specifying the GLOBAL keyword will promote all imported targets to a global scope in the importing project. Alternatively, this functionality can be enabled by setting the [CMAKE_FIND_PACKAGE_TARGETS_GLOBAL](https://cmake.org/cmake/help/latest/variable/CMAKE_FIND_PACKAGE_TARGETS_GLOBAL.html#variable:CMAKE_FIND_PACKAGE_TARGETS_GLOBAL) variable. So there is 3 possible solution. 1. Require `CMake` version `3.24` and add the `GLOBAL` keyword where needed (or set the variable); 2. Make sure that `builtin_xrootd` (and any other similar components) to turn `ssl` ON when turned ON; 3. Move the `find_package(OpenSSL) from inside `builti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16374
https://github.com/root-project/root/issues/16374:697,Modifiability,variab,variable,697,"Doing in a empty build directory; ```; cmake -Dminimal=ON $ROOT_SRC_DIR; cmake -Dbuiltin_xrootd=ON .; ```; fails with:; ```; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:924 (target_link_libraries):; The link interface of target ""XRootD"" contains:. OpenSSL::SSL. but the target was not found. Possible reasons include:. * There is a typo in the target name.; * A find_package call is missing for an IMPORTED target.; * An ALIAS target is missing. Call Stack (most recent call first):; CMakeLists.txt:305 (include); ```; while on the same machine and in another empty directory doing just:; ```; cmake -Dbuiltin_xrootd=ON .; ```. The difference between the two case is that the `ssl` variable usually default to `ON` but in the minimal case it default to `OFF` and turning on `builtin_xrootd` does not turn `ssl` back on. The reason why this matters is that `find_package` defaults to declaring its results only inside the parent_scope. In practice we see `find_package` works properly in the top level `CMakeList.txt` and in one level of indirection (typically `cmake/modules/SearchInstalledSoftware.cmake`) but a second level of direction (i.e. inside the `add_subdirectory(builtins/xrootd)` inside `SearchInstalledSoftware.cmake`), it does not work. From https://cmake.org/cmake/help/latest/command/find_package.html we read:. > New in version 3.24: Specifying the GLOBAL keyword will promote all imported targets to a global scope in the importing project. Alternatively, this functionality can be enabled by setting the [CMAKE_FIND_PACKAGE_TARGETS_GLOBAL](https://cmake.org/cmake/help/latest/variable/CMAKE_FIND_PACKAGE_TARGETS_GLOBAL.html#variable:CMAKE_FIND_PACKAGE_TARGETS_GLOBAL) variable. So there is 3 possible solution. 1. Require `CMake` version `3.24` and add the `GLOBAL` keyword where needed (or set the variable); 2. Make sure that `builtin_xrootd` (and any other similar components) to turn `ssl` ON when turned ON; 3. Move the `find_package(OpenSSL) from inside `builti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16374
https://github.com/root-project/root/issues/16374:1610,Modifiability,variab,variable,1610,"modules/SearchInstalledSoftware.cmake:924 (target_link_libraries):; The link interface of target ""XRootD"" contains:. OpenSSL::SSL. but the target was not found. Possible reasons include:. * There is a typo in the target name.; * A find_package call is missing for an IMPORTED target.; * An ALIAS target is missing. Call Stack (most recent call first):; CMakeLists.txt:305 (include); ```; while on the same machine and in another empty directory doing just:; ```; cmake -Dbuiltin_xrootd=ON .; ```. The difference between the two case is that the `ssl` variable usually default to `ON` but in the minimal case it default to `OFF` and turning on `builtin_xrootd` does not turn `ssl` back on. The reason why this matters is that `find_package` defaults to declaring its results only inside the parent_scope. In practice we see `find_package` works properly in the top level `CMakeList.txt` and in one level of indirection (typically `cmake/modules/SearchInstalledSoftware.cmake`) but a second level of direction (i.e. inside the `add_subdirectory(builtins/xrootd)` inside `SearchInstalledSoftware.cmake`), it does not work. From https://cmake.org/cmake/help/latest/command/find_package.html we read:. > New in version 3.24: Specifying the GLOBAL keyword will promote all imported targets to a global scope in the importing project. Alternatively, this functionality can be enabled by setting the [CMAKE_FIND_PACKAGE_TARGETS_GLOBAL](https://cmake.org/cmake/help/latest/variable/CMAKE_FIND_PACKAGE_TARGETS_GLOBAL.html#variable:CMAKE_FIND_PACKAGE_TARGETS_GLOBAL) variable. So there is 3 possible solution. 1. Require `CMake` version `3.24` and add the `GLOBAL` keyword where needed (or set the variable); 2. Make sure that `builtin_xrootd` (and any other similar components) to turn `ssl` ON when turned ON; 3. Move the `find_package(OpenSSL) from inside `builtins/xrootd/CMakeLists.txt` to it inclusion point in `SearchInstalledSoftware.cmake`; 4. Add an error if `builtin_xrootd` is ON while `ssl` is OFF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16374
https://github.com/root-project/root/issues/16374:1658,Modifiability,variab,variable,1658,"modules/SearchInstalledSoftware.cmake:924 (target_link_libraries):; The link interface of target ""XRootD"" contains:. OpenSSL::SSL. but the target was not found. Possible reasons include:. * There is a typo in the target name.; * A find_package call is missing for an IMPORTED target.; * An ALIAS target is missing. Call Stack (most recent call first):; CMakeLists.txt:305 (include); ```; while on the same machine and in another empty directory doing just:; ```; cmake -Dbuiltin_xrootd=ON .; ```. The difference between the two case is that the `ssl` variable usually default to `ON` but in the minimal case it default to `OFF` and turning on `builtin_xrootd` does not turn `ssl` back on. The reason why this matters is that `find_package` defaults to declaring its results only inside the parent_scope. In practice we see `find_package` works properly in the top level `CMakeList.txt` and in one level of indirection (typically `cmake/modules/SearchInstalledSoftware.cmake`) but a second level of direction (i.e. inside the `add_subdirectory(builtins/xrootd)` inside `SearchInstalledSoftware.cmake`), it does not work. From https://cmake.org/cmake/help/latest/command/find_package.html we read:. > New in version 3.24: Specifying the GLOBAL keyword will promote all imported targets to a global scope in the importing project. Alternatively, this functionality can be enabled by setting the [CMAKE_FIND_PACKAGE_TARGETS_GLOBAL](https://cmake.org/cmake/help/latest/variable/CMAKE_FIND_PACKAGE_TARGETS_GLOBAL.html#variable:CMAKE_FIND_PACKAGE_TARGETS_GLOBAL) variable. So there is 3 possible solution. 1. Require `CMake` version `3.24` and add the `GLOBAL` keyword where needed (or set the variable); 2. Make sure that `builtin_xrootd` (and any other similar components) to turn `ssl` ON when turned ON; 3. Move the `find_package(OpenSSL) from inside `builtins/xrootd/CMakeLists.txt` to it inclusion point in `SearchInstalledSoftware.cmake`; 4. Add an error if `builtin_xrootd` is ON while `ssl` is OFF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16374
https://github.com/root-project/root/issues/16374:1702,Modifiability,variab,variable,1702,"modules/SearchInstalledSoftware.cmake:924 (target_link_libraries):; The link interface of target ""XRootD"" contains:. OpenSSL::SSL. but the target was not found. Possible reasons include:. * There is a typo in the target name.; * A find_package call is missing for an IMPORTED target.; * An ALIAS target is missing. Call Stack (most recent call first):; CMakeLists.txt:305 (include); ```; while on the same machine and in another empty directory doing just:; ```; cmake -Dbuiltin_xrootd=ON .; ```. The difference between the two case is that the `ssl` variable usually default to `ON` but in the minimal case it default to `OFF` and turning on `builtin_xrootd` does not turn `ssl` back on. The reason why this matters is that `find_package` defaults to declaring its results only inside the parent_scope. In practice we see `find_package` works properly in the top level `CMakeList.txt` and in one level of indirection (typically `cmake/modules/SearchInstalledSoftware.cmake`) but a second level of direction (i.e. inside the `add_subdirectory(builtins/xrootd)` inside `SearchInstalledSoftware.cmake`), it does not work. From https://cmake.org/cmake/help/latest/command/find_package.html we read:. > New in version 3.24: Specifying the GLOBAL keyword will promote all imported targets to a global scope in the importing project. Alternatively, this functionality can be enabled by setting the [CMAKE_FIND_PACKAGE_TARGETS_GLOBAL](https://cmake.org/cmake/help/latest/variable/CMAKE_FIND_PACKAGE_TARGETS_GLOBAL.html#variable:CMAKE_FIND_PACKAGE_TARGETS_GLOBAL) variable. So there is 3 possible solution. 1. Require `CMake` version `3.24` and add the `GLOBAL` keyword where needed (or set the variable); 2. Make sure that `builtin_xrootd` (and any other similar components) to turn `ssl` ON when turned ON; 3. Move the `find_package(OpenSSL) from inside `builtins/xrootd/CMakeLists.txt` to it inclusion point in `SearchInstalledSoftware.cmake`; 4. Add an error if `builtin_xrootd` is ON while `ssl` is OFF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16374
https://github.com/root-project/root/issues/16374:1833,Modifiability,variab,variable,1833,"modules/SearchInstalledSoftware.cmake:924 (target_link_libraries):; The link interface of target ""XRootD"" contains:. OpenSSL::SSL. but the target was not found. Possible reasons include:. * There is a typo in the target name.; * A find_package call is missing for an IMPORTED target.; * An ALIAS target is missing. Call Stack (most recent call first):; CMakeLists.txt:305 (include); ```; while on the same machine and in another empty directory doing just:; ```; cmake -Dbuiltin_xrootd=ON .; ```. The difference between the two case is that the `ssl` variable usually default to `ON` but in the minimal case it default to `OFF` and turning on `builtin_xrootd` does not turn `ssl` back on. The reason why this matters is that `find_package` defaults to declaring its results only inside the parent_scope. In practice we see `find_package` works properly in the top level `CMakeList.txt` and in one level of indirection (typically `cmake/modules/SearchInstalledSoftware.cmake`) but a second level of direction (i.e. inside the `add_subdirectory(builtins/xrootd)` inside `SearchInstalledSoftware.cmake`), it does not work. From https://cmake.org/cmake/help/latest/command/find_package.html we read:. > New in version 3.24: Specifying the GLOBAL keyword will promote all imported targets to a global scope in the importing project. Alternatively, this functionality can be enabled by setting the [CMAKE_FIND_PACKAGE_TARGETS_GLOBAL](https://cmake.org/cmake/help/latest/variable/CMAKE_FIND_PACKAGE_TARGETS_GLOBAL.html#variable:CMAKE_FIND_PACKAGE_TARGETS_GLOBAL) variable. So there is 3 possible solution. 1. Require `CMake` version `3.24` and add the `GLOBAL` keyword where needed (or set the variable); 2. Make sure that `builtin_xrootd` (and any other similar components) to turn `ssl` ON when turned ON; 3. Move the `find_package(OpenSSL) from inside `builtins/xrootd/CMakeLists.txt` to it inclusion point in `SearchInstalledSoftware.cmake`; 4. Add an error if `builtin_xrootd` is ON while `ssl` is OFF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16374
https://github.com/root-project/root/issues/16375:1289,Deployability,Install,Installation,1289,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a class allocates memory in its ctor (and deallocates in dtor). And included in `LinkDef.h` without `+` after class name. During I/O, the ctor will be called but not the dtor. ### Reproducer. Please refer to this code: https://github.com/karuboniru/root_memory_leak_report. It compiles to `gen`, `read{,_old}`. `gen` produces a `.root` file containing a tree of user defined class `TestData`. And `read` `read_old` read the tree to do something. `read` uses RDataFrame language and `read_old` uses old `SetBranchAddress` way. In the constructor of TestData, it will allocate memory for class `a_member`. And deallocate it in its destructor. Any call to the constructor or destructor of class `a_member` will be logged. If `#pragma link C++ class TestData;`, instead of `#pragma link C++ class TestData+;` is in the `LinkDef.h`, the read program will contain multiple call to `a_member::a_member` but only single or none call to `a_member::~a_member`, potenially causing memory leak per entry processed. ### ROOT version. ```; ROOT v6.32.04; Built for linuxx8664gcc on Aug 21 2024, 00:00:00; From heads/master@tags/v6-32-04; With clang version 18.1.8 (Fedora 18.1.8-3.fc41); Binary directory: /usr/bin; ```. ### Installation method. reproducable from self build (from copr), from fedora repo (official version) and ROOT from `/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh`. ### Operating system. Linux Fedora 41 and CentOS9. ### Additional context. This issue seems to be causing massive memory leak with [GENIE](https://github.com/GENIE-MC/Generator/blob/37ed4484091904ab614b6dbc179d1b676b11a2e1/src/Framework/Ntuple/NtpMCEventRecord.h#L37). The GENIE related tools [manually cleans](https://github.com/GENIE-MC/Generator/blob/37ed4484091904ab614b6dbc179d1b676b11a2e1/src/Apps/gNtpConv.cxx#L1282) the resources but it seems I can't do the same with RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:86,Energy Efficiency,allocate,allocates,86,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a class allocates memory in its ctor (and deallocates in dtor). And included in `LinkDef.h` without `+` after class name. During I/O, the ctor will be called but not the dtor. ### Reproducer. Please refer to this code: https://github.com/karuboniru/root_memory_leak_report. It compiles to `gen`, `read{,_old}`. `gen` produces a `.root` file containing a tree of user defined class `TestData`. And `read` `read_old` read the tree to do something. `read` uses RDataFrame language and `read_old` uses old `SetBranchAddress` way. In the constructor of TestData, it will allocate memory for class `a_member`. And deallocate it in its destructor. Any call to the constructor or destructor of class `a_member` will be logged. If `#pragma link C++ class TestData;`, instead of `#pragma link C++ class TestData+;` is in the `LinkDef.h`, the read program will contain multiple call to `a_member::a_member` but only single or none call to `a_member::~a_member`, potenially causing memory leak per entry processed. ### ROOT version. ```; ROOT v6.32.04; Built for linuxx8664gcc on Aug 21 2024, 00:00:00; From heads/master@tags/v6-32-04; With clang version 18.1.8 (Fedora 18.1.8-3.fc41); Binary directory: /usr/bin; ```. ### Installation method. reproducable from self build (from copr), from fedora repo (official version) and ROOT from `/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh`. ### Operating system. Linux Fedora 41 and CentOS9. ### Additional context. This issue seems to be causing massive memory leak with [GENIE](https://github.com/GENIE-MC/Generator/blob/37ed4484091904ab614b6dbc179d1b676b11a2e1/src/Framework/Ntuple/NtpMCEventRecord.h#L37). The GENIE related tools [manually cleans](https://github.com/GENIE-MC/Generator/blob/37ed4484091904ab614b6dbc179d1b676b11a2e1/src/Apps/gNtpConv.cxx#L1282) the resources but it seems I can't do the same with RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:644,Energy Efficiency,allocate,allocate,644,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a class allocates memory in its ctor (and deallocates in dtor). And included in `LinkDef.h` without `+` after class name. During I/O, the ctor will be called but not the dtor. ### Reproducer. Please refer to this code: https://github.com/karuboniru/root_memory_leak_report. It compiles to `gen`, `read{,_old}`. `gen` produces a `.root` file containing a tree of user defined class `TestData`. And `read` `read_old` read the tree to do something. `read` uses RDataFrame language and `read_old` uses old `SetBranchAddress` way. In the constructor of TestData, it will allocate memory for class `a_member`. And deallocate it in its destructor. Any call to the constructor or destructor of class `a_member` will be logged. If `#pragma link C++ class TestData;`, instead of `#pragma link C++ class TestData+;` is in the `LinkDef.h`, the read program will contain multiple call to `a_member::a_member` but only single or none call to `a_member::~a_member`, potenially causing memory leak per entry processed. ### ROOT version. ```; ROOT v6.32.04; Built for linuxx8664gcc on Aug 21 2024, 00:00:00; From heads/master@tags/v6-32-04; With clang version 18.1.8 (Fedora 18.1.8-3.fc41); Binary directory: /usr/bin; ```. ### Installation method. reproducable from self build (from copr), from fedora repo (official version) and ROOT from `/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh`. ### Operating system. Linux Fedora 41 and CentOS9. ### Additional context. This issue seems to be causing massive memory leak with [GENIE](https://github.com/GENIE-MC/Generator/blob/37ed4484091904ab614b6dbc179d1b676b11a2e1/src/Framework/Ntuple/NtpMCEventRecord.h#L37). The GENIE related tools [manually cleans](https://github.com/GENIE-MC/Generator/blob/37ed4484091904ab614b6dbc179d1b676b11a2e1/src/Apps/gNtpConv.cxx#L1282) the resources but it seems I can't do the same with RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:460,Testability,Test,TestData,460,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a class allocates memory in its ctor (and deallocates in dtor). And included in `LinkDef.h` without `+` after class name. During I/O, the ctor will be called but not the dtor. ### Reproducer. Please refer to this code: https://github.com/karuboniru/root_memory_leak_report. It compiles to `gen`, `read{,_old}`. `gen` produces a `.root` file containing a tree of user defined class `TestData`. And `read` `read_old` read the tree to do something. `read` uses RDataFrame language and `read_old` uses old `SetBranchAddress` way. In the constructor of TestData, it will allocate memory for class `a_member`. And deallocate it in its destructor. Any call to the constructor or destructor of class `a_member` will be logged. If `#pragma link C++ class TestData;`, instead of `#pragma link C++ class TestData+;` is in the `LinkDef.h`, the read program will contain multiple call to `a_member::a_member` but only single or none call to `a_member::~a_member`, potenially causing memory leak per entry processed. ### ROOT version. ```; ROOT v6.32.04; Built for linuxx8664gcc on Aug 21 2024, 00:00:00; From heads/master@tags/v6-32-04; With clang version 18.1.8 (Fedora 18.1.8-3.fc41); Binary directory: /usr/bin; ```. ### Installation method. reproducable from self build (from copr), from fedora repo (official version) and ROOT from `/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh`. ### Operating system. Linux Fedora 41 and CentOS9. ### Additional context. This issue seems to be causing massive memory leak with [GENIE](https://github.com/GENIE-MC/Generator/blob/37ed4484091904ab614b6dbc179d1b676b11a2e1/src/Framework/Ntuple/NtpMCEventRecord.h#L37). The GENIE related tools [manually cleans](https://github.com/GENIE-MC/Generator/blob/37ed4484091904ab614b6dbc179d1b676b11a2e1/src/Apps/gNtpConv.cxx#L1282) the resources but it seems I can't do the same with RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:626,Testability,Test,TestData,626,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a class allocates memory in its ctor (and deallocates in dtor). And included in `LinkDef.h` without `+` after class name. During I/O, the ctor will be called but not the dtor. ### Reproducer. Please refer to this code: https://github.com/karuboniru/root_memory_leak_report. It compiles to `gen`, `read{,_old}`. `gen` produces a `.root` file containing a tree of user defined class `TestData`. And `read` `read_old` read the tree to do something. `read` uses RDataFrame language and `read_old` uses old `SetBranchAddress` way. In the constructor of TestData, it will allocate memory for class `a_member`. And deallocate it in its destructor. Any call to the constructor or destructor of class `a_member` will be logged. If `#pragma link C++ class TestData;`, instead of `#pragma link C++ class TestData+;` is in the `LinkDef.h`, the read program will contain multiple call to `a_member::a_member` but only single or none call to `a_member::~a_member`, potenially causing memory leak per entry processed. ### ROOT version. ```; ROOT v6.32.04; Built for linuxx8664gcc on Aug 21 2024, 00:00:00; From heads/master@tags/v6-32-04; With clang version 18.1.8 (Fedora 18.1.8-3.fc41); Binary directory: /usr/bin; ```. ### Installation method. reproducable from self build (from copr), from fedora repo (official version) and ROOT from `/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh`. ### Operating system. Linux Fedora 41 and CentOS9. ### Additional context. This issue seems to be causing massive memory leak with [GENIE](https://github.com/GENIE-MC/Generator/blob/37ed4484091904ab614b6dbc179d1b676b11a2e1/src/Framework/Ntuple/NtpMCEventRecord.h#L37). The GENIE related tools [manually cleans](https://github.com/GENIE-MC/Generator/blob/37ed4484091904ab614b6dbc179d1b676b11a2e1/src/Apps/gNtpConv.cxx#L1282) the resources but it seems I can't do the same with RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:789,Testability,log,logged,789,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a class allocates memory in its ctor (and deallocates in dtor). And included in `LinkDef.h` without `+` after class name. During I/O, the ctor will be called but not the dtor. ### Reproducer. Please refer to this code: https://github.com/karuboniru/root_memory_leak_report. It compiles to `gen`, `read{,_old}`. `gen` produces a `.root` file containing a tree of user defined class `TestData`. And `read` `read_old` read the tree to do something. `read` uses RDataFrame language and `read_old` uses old `SetBranchAddress` way. In the constructor of TestData, it will allocate memory for class `a_member`. And deallocate it in its destructor. Any call to the constructor or destructor of class `a_member` will be logged. If `#pragma link C++ class TestData;`, instead of `#pragma link C++ class TestData+;` is in the `LinkDef.h`, the read program will contain multiple call to `a_member::a_member` but only single or none call to `a_member::~a_member`, potenially causing memory leak per entry processed. ### ROOT version. ```; ROOT v6.32.04; Built for linuxx8664gcc on Aug 21 2024, 00:00:00; From heads/master@tags/v6-32-04; With clang version 18.1.8 (Fedora 18.1.8-3.fc41); Binary directory: /usr/bin; ```. ### Installation method. reproducable from self build (from copr), from fedora repo (official version) and ROOT from `/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh`. ### Operating system. Linux Fedora 41 and CentOS9. ### Additional context. This issue seems to be causing massive memory leak with [GENIE](https://github.com/GENIE-MC/Generator/blob/37ed4484091904ab614b6dbc179d1b676b11a2e1/src/Framework/Ntuple/NtpMCEventRecord.h#L37). The GENIE related tools [manually cleans](https://github.com/GENIE-MC/Generator/blob/37ed4484091904ab614b6dbc179d1b676b11a2e1/src/Apps/gNtpConv.cxx#L1282) the resources but it seems I can't do the same with RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:824,Testability,Test,TestData,824,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a class allocates memory in its ctor (and deallocates in dtor). And included in `LinkDef.h` without `+` after class name. During I/O, the ctor will be called but not the dtor. ### Reproducer. Please refer to this code: https://github.com/karuboniru/root_memory_leak_report. It compiles to `gen`, `read{,_old}`. `gen` produces a `.root` file containing a tree of user defined class `TestData`. And `read` `read_old` read the tree to do something. `read` uses RDataFrame language and `read_old` uses old `SetBranchAddress` way. In the constructor of TestData, it will allocate memory for class `a_member`. And deallocate it in its destructor. Any call to the constructor or destructor of class `a_member` will be logged. If `#pragma link C++ class TestData;`, instead of `#pragma link C++ class TestData+;` is in the `LinkDef.h`, the read program will contain multiple call to `a_member::a_member` but only single or none call to `a_member::~a_member`, potenially causing memory leak per entry processed. ### ROOT version. ```; ROOT v6.32.04; Built for linuxx8664gcc on Aug 21 2024, 00:00:00; From heads/master@tags/v6-32-04; With clang version 18.1.8 (Fedora 18.1.8-3.fc41); Binary directory: /usr/bin; ```. ### Installation method. reproducable from self build (from copr), from fedora repo (official version) and ROOT from `/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh`. ### Operating system. Linux Fedora 41 and CentOS9. ### Additional context. This issue seems to be causing massive memory leak with [GENIE](https://github.com/GENIE-MC/Generator/blob/37ed4484091904ab614b6dbc179d1b676b11a2e1/src/Framework/Ntuple/NtpMCEventRecord.h#L37). The GENIE related tools [manually cleans](https://github.com/GENIE-MC/Generator/blob/37ed4484091904ab614b6dbc179d1b676b11a2e1/src/Apps/gNtpConv.cxx#L1282) the resources but it seems I can't do the same with RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:871,Testability,Test,TestData,871,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a class allocates memory in its ctor (and deallocates in dtor). And included in `LinkDef.h` without `+` after class name. During I/O, the ctor will be called but not the dtor. ### Reproducer. Please refer to this code: https://github.com/karuboniru/root_memory_leak_report. It compiles to `gen`, `read{,_old}`. `gen` produces a `.root` file containing a tree of user defined class `TestData`. And `read` `read_old` read the tree to do something. `read` uses RDataFrame language and `read_old` uses old `SetBranchAddress` way. In the constructor of TestData, it will allocate memory for class `a_member`. And deallocate it in its destructor. Any call to the constructor or destructor of class `a_member` will be logged. If `#pragma link C++ class TestData;`, instead of `#pragma link C++ class TestData+;` is in the `LinkDef.h`, the read program will contain multiple call to `a_member::a_member` but only single or none call to `a_member::~a_member`, potenially causing memory leak per entry processed. ### ROOT version. ```; ROOT v6.32.04; Built for linuxx8664gcc on Aug 21 2024, 00:00:00; From heads/master@tags/v6-32-04; With clang version 18.1.8 (Fedora 18.1.8-3.fc41); Binary directory: /usr/bin; ```. ### Installation method. reproducable from self build (from copr), from fedora repo (official version) and ROOT from `/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh`. ### Operating system. Linux Fedora 41 and CentOS9. ### Additional context. This issue seems to be causing massive memory leak with [GENIE](https://github.com/GENIE-MC/Generator/blob/37ed4484091904ab614b6dbc179d1b676b11a2e1/src/Framework/Ntuple/NtpMCEventRecord.h#L37). The GENIE related tools [manually cleans](https://github.com/GENIE-MC/Generator/blob/37ed4484091904ab614b6dbc179d1b676b11a2e1/src/Apps/gNtpConv.cxx#L1282) the resources but it seems I can't do the same with RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/pull/16377:117,Availability,error,error,117,"When setting the branch proxy, report info about a missing branch to the user. This is done in the form of a printed error. The logic is only triggered if there are no other branch names in the list of available branches that begin with the current branch name being searched. This situation could arise for example with a skeleton analysis produced by TTree::MakeProxy and a TTree with a split object. In that case the generated code will try to create a TBranchProxy for the top-level branch, even though that branch is not available from the TTree, only the sub-branches are. See for more details the discussion at https://github.com/root-project/root/pull/3746",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:202,Availability,avail,available,202,"When setting the branch proxy, report info about a missing branch to the user. This is done in the form of a printed error. The logic is only triggered if there are no other branch names in the list of available branches that begin with the current branch name being searched. This situation could arise for example with a skeleton analysis produced by TTree::MakeProxy and a TTree with a split object. In that case the generated code will try to create a TBranchProxy for the top-level branch, even though that branch is not available from the TTree, only the sub-branches are. See for more details the discussion at https://github.com/root-project/root/pull/3746",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:526,Availability,avail,available,526,"When setting the branch proxy, report info about a missing branch to the user. This is done in the form of a printed error. The logic is only triggered if there are no other branch names in the list of available branches that begin with the current branch name being searched. This situation could arise for example with a skeleton analysis produced by TTree::MakeProxy and a TTree with a split object. In that case the generated code will try to create a TBranchProxy for the top-level branch, even though that branch is not available from the TTree, only the sub-branches are. See for more details the discussion at https://github.com/root-project/root/pull/3746",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:128,Testability,log,logic,128,"When setting the branch proxy, report info about a missing branch to the user. This is done in the form of a printed error. The logic is only triggered if there are no other branch names in the list of available branches that begin with the current branch name being searched. This situation could arise for example with a skeleton analysis produced by TTree::MakeProxy and a TTree with a split object. In that case the generated code will try to create a TBranchProxy for the top-level branch, even though that branch is not available from the TTree, only the sub-branches are. See for more details the discussion at https://github.com/root-project/root/pull/3746",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/issues/16380:1002,Deployability,Install,Installation,1002,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Reporting on behalf of Fermilab SBN collaboration and SciSoft group. ---. We have some ROOT data files containing `RooInt` objects (we used then for storing ""metadata"").; That class was removed from ROOT (ca29ccf1) and we can't read that data any more.; This is not exactly a bug, since ROOT works as intended — but that intention breaks our data. Twofold question:; 1. how to work around the problem for existing data using newer ROOT; 2. are there other recommended ways to simply store an integer with a name in a ROOT file?; `TNamed` comes to mind, but it needs explicit conversions, and that is why `RooInt` was preferred. For people with Fermilab access, there is a [related Redmine ticket #28974](https://cdcvs.fnal.gov/redmine/issues/28974). ### Reproducer. 1. Write a `RooInt` object in a new `TFile` with ROOT 6.28; 2. Try to read that object from that `TFile` with the latest ROOT. ### ROOT version. `v6-32-00`. ### Installation method. Build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:728,Security,access,access,728,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Reporting on behalf of Fermilab SBN collaboration and SciSoft group. ---. We have some ROOT data files containing `RooInt` objects (we used then for storing ""metadata"").; That class was removed from ROOT (ca29ccf1) and we can't read that data any more.; This is not exactly a bug, since ROOT works as intended — but that intention breaks our data. Twofold question:; 1. how to work around the problem for existing data using newer ROOT; 2. are there other recommended ways to simply store an integer with a name in a ROOT file?; `TNamed` comes to mind, but it needs explicit conversions, and that is why `RooInt` was preferred. For people with Fermilab access, there is a [related Redmine ticket #28974](https://cdcvs.fnal.gov/redmine/issues/28974). ### Reproducer. 1. Write a `RooInt` object in a new `TFile` with ROOT 6.28; 2. Try to read that object from that `TFile` with the latest ROOT. ### ROOT version. `v6-32-00`. ### Installation method. Build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:551,Usability,simpl,simply,551,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Reporting on behalf of Fermilab SBN collaboration and SciSoft group. ---. We have some ROOT data files containing `RooInt` objects (we used then for storing ""metadata"").; That class was removed from ROOT (ca29ccf1) and we can't read that data any more.; This is not exactly a bug, since ROOT works as intended — but that intention breaks our data. Twofold question:; 1. how to work around the problem for existing data using newer ROOT; 2. are there other recommended ways to simply store an integer with a name in a ROOT file?; `TNamed` comes to mind, but it needs explicit conversions, and that is why `RooInt` was preferred. For people with Fermilab access, there is a [related Redmine ticket #28974](https://cdcvs.fnal.gov/redmine/issues/28974). ### Reproducer. 1. Write a `RooInt` object in a new `TFile` with ROOT 6.28; 2. Try to read that object from that `TFile` with the latest ROOT. ### ROOT version. `v6-32-00`. ### Installation method. Build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16384:970,Deployability,Install,Installation,970,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. /tmp/user/spack-stage/spack-stage-root-6.32.04-2rp3usgipgbdq7rwb7pcpfc2iut72ltg/spack-src/core/meta/src/TClass.cxx: In member function 'virtual void TDumpMembers::Inspect(TClass*, const char*, const char*, const void*, Bool_t)': ; /tmp/user/spack-stage/spack-stage-root-6.32.04-2rp3usgipgbdq7rwb7pcpfc2iut72ltg/spack-src/core/meta/src/TClass.cxx:701:20: warning: 'char* strncpy(char*, const char*, size_t)' specified bound depends on the length of the source argument [-Wstringop-truncation] ; 701 | strncpy(line + kvalue, *ppointer, std::min( i, kline - kvalue)); ; | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; /tmp/user/spack-stage/spack-stage-root-6.32.04-2rp3usgipgbdq7rwb7pcpfc2iut72ltg/spack-src/core/meta/src/TClass.cxx:691:20: note: length computed here ; 691 | i = strlen(*ppointer); . ### Reproducer. compile 6.32.04 using GCC 14. ### ROOT version. 6.32.04. ### Installation method. spack build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16384
https://github.com/root-project/root/issues/16384:498,Integrability,depend,depends,498,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. /tmp/user/spack-stage/spack-stage-root-6.32.04-2rp3usgipgbdq7rwb7pcpfc2iut72ltg/spack-src/core/meta/src/TClass.cxx: In member function 'virtual void TDumpMembers::Inspect(TClass*, const char*, const char*, const void*, Bool_t)': ; /tmp/user/spack-stage/spack-stage-root-6.32.04-2rp3usgipgbdq7rwb7pcpfc2iut72ltg/spack-src/core/meta/src/TClass.cxx:701:20: warning: 'char* strncpy(char*, const char*, size_t)' specified bound depends on the length of the source argument [-Wstringop-truncation] ; 701 | strncpy(line + kvalue, *ppointer, std::min( i, kline - kvalue)); ; | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; /tmp/user/spack-stage/spack-stage-root-6.32.04-2rp3usgipgbdq7rwb7pcpfc2iut72ltg/spack-src/core/meta/src/TClass.cxx:691:20: note: length computed here ; 691 | i = strlen(*ppointer); . ### Reproducer. compile 6.32.04 using GCC 14. ### ROOT version. 6.32.04. ### Installation method. spack build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16384
https://github.com/root-project/root/pull/16385:179,Performance,perform,performance,179,"This improves thread safety in RooFit, as inspired by a recent forum; post where someone wanted to do multiple fits in parallel. It was checked that this has no visible impact on performance. Also, a small bugfix and general code improvements in separate commits.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16385
https://github.com/root-project/root/pull/16385:21,Safety,safe,safety,21,"This improves thread safety in RooFit, as inspired by a recent forum; post where someone wanted to do multiple fits in parallel. It was checked that this has no visible impact on performance. Also, a small bugfix and general code improvements in separate commits.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16385
https://github.com/root-project/root/pull/16386:106,Deployability,update,updated,106,"It produces false positives on memcpy ""out of bounds"". ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16386
https://github.com/root-project/root/pull/16386:76,Testability,test,tested,76,"It produces false positives on memcpy ""out of bounds"". ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16386
https://github.com/root-project/root/pull/16387:31,Availability,avail,available,31,"The `ClingMMapper` must remain available until all `ClingMemoryManagers` are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. (cherry picked from commit 41cbd5bafaf5037f52dec9864fc01d500d54578f, backport of https://github.com/root-project/root/pull/16314 / https://github.com/root-project/root/pull/16319)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16387
https://github.com/root-project/root/pull/16387:352,Availability,down,down,352,"The `ClingMMapper` must remain available until all `ClingMemoryManagers` are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. (cherry picked from commit 41cbd5bafaf5037f52dec9864fc01d500d54578f, backport of https://github.com/root-project/root/pull/16314 / https://github.com/root-project/root/pull/16319)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16387
https://github.com/root-project/root/pull/16387:238,Deployability,upgrade,upgrade,238,"The `ClingMMapper` must remain available until all `ClingMemoryManagers` are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. (cherry picked from commit 41cbd5bafaf5037f52dec9864fc01d500d54578f, backport of https://github.com/root-project/root/pull/16314 / https://github.com/root-project/root/pull/16319)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16387
https://github.com/root-project/root/pull/16387:429,Deployability,upgrade,upgrade,429,"The `ClingMMapper` must remain available until all `ClingMemoryManagers` are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. (cherry picked from commit 41cbd5bafaf5037f52dec9864fc01d500d54578f, backport of https://github.com/root-project/root/pull/16314 / https://github.com/root-project/root/pull/16319)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16387
https://github.com/root-project/root/pull/16387:827,Deployability,patch,patched,827,"The `ClingMMapper` must remain available until all `ClingMemoryManagers` are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. (cherry picked from commit 41cbd5bafaf5037f52dec9864fc01d500d54578f, backport of https://github.com/root-project/root/pull/16314 / https://github.com/root-project/root/pull/16319)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16387
https://github.com/root-project/root/pull/16387:276,Modifiability,variab,variables,276,"The `ClingMMapper` must remain available until all `ClingMemoryManagers` are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. (cherry picked from commit 41cbd5bafaf5037f52dec9864fc01d500d54578f, backport of https://github.com/root-project/root/pull/16314 / https://github.com/root-project/root/pull/16319)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16387
https://github.com/root-project/root/pull/16387:722,Modifiability,Extend,Extend,722,"The `ClingMMapper` must remain available until all `ClingMemoryManagers` are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. (cherry picked from commit 41cbd5bafaf5037f52dec9864fc01d500d54578f, backport of https://github.com/root-project/root/pull/16314 / https://github.com/root-project/root/pull/16319)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16387
https://github.com/root-project/root/pull/16387:477,Testability,test,tests,477,"The `ClingMMapper` must remain available until all `ClingMemoryManagers` are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. (cherry picked from commit 41cbd5bafaf5037f52dec9864fc01d500d54578f, backport of https://github.com/root-project/root/pull/16314 / https://github.com/root-project/root/pull/16319)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16387
https://github.com/root-project/root/pull/16389:138,Deployability,update,updated,138,# This Pull request:; Adds a translation of the legacy spectrum tutorials into Python. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary); - [ ] fork up-to-date,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16389
https://github.com/root-project/root/pull/16389:108,Testability,test,tested,108,# This Pull request:; Adds a translation of the legacy spectrum tutorials into Python. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary); - [ ] fork up-to-date,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16389
https://github.com/root-project/root/pull/16390:810,Deployability,update,updated,810,"# This Pull request:; adds the `Real32Quant` column type to RNTuple. This column type stores floating point values on disk as integers with a user-defined precision (from 3 to 32 bits) and a user-defined value range. This allows to reduce the storage space required to save floats with a well-defined range with more precision than a simple truncation. The conversion is defined as (pseudocode): ; ```; def quantize(value, min, max, n_precision_bits); {; quantized_max = (1 << n_precision_bits) - 1;; scale = quantized_max / (max - min);; quantized = round((value - min) * scale);; return quantized;; }; ```. This change requires adding metadata to the on-disk information, more specifically in the Field Description (see specifications.md for more details). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:232,Energy Efficiency,reduce,reduce,232,"# This Pull request:; adds the `Real32Quant` column type to RNTuple. This column type stores floating point values on disk as integers with a user-defined precision (from 3 to 32 bits) and a user-defined value range. This allows to reduce the storage space required to save floats with a well-defined range with more precision than a simple truncation. The conversion is defined as (pseudocode): ; ```; def quantize(value, min, max, n_precision_bits); {; quantized_max = (1 << n_precision_bits) - 1;; scale = quantized_max / (max - min);; quantized = round((value - min) * scale);; return quantized;; }; ```. This change requires adding metadata to the on-disk information, more specifically in the Field Description (see specifications.md for more details). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:780,Testability,test,tested,780,"# This Pull request:; adds the `Real32Quant` column type to RNTuple. This column type stores floating point values on disk as integers with a user-defined precision (from 3 to 32 bits) and a user-defined value range. This allows to reduce the storage space required to save floats with a well-defined range with more precision than a simple truncation. The conversion is defined as (pseudocode): ; ```; def quantize(value, min, max, n_precision_bits); {; quantized_max = (1 << n_precision_bits) - 1;; scale = quantized_max / (max - min);; quantized = round((value - min) * scale);; return quantized;; }; ```. This change requires adding metadata to the on-disk information, more specifically in the Field Description (see specifications.md for more details). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:334,Usability,simpl,simple,334,"# This Pull request:; adds the `Real32Quant` column type to RNTuple. This column type stores floating point values on disk as integers with a user-defined precision (from 3 to 32 bits) and a user-defined value range. This allows to reduce the storage space required to save floats with a well-defined range with more precision than a simple truncation. The conversion is defined as (pseudocode): ; ```; def quantize(value, min, max, n_precision_bits); {; quantized_max = (1 << n_precision_bits) - 1;; scale = quantized_max / (max - min);; quantized = round((value - min) * scale);; return quantized;; }; ```. This change requires adding metadata to the on-disk information, more specifically in the Field Description (see specifications.md for more details). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16391:122,Integrability,synchroniz,synchronize,122,"This is useful to flush all write buffers and trigger compression outside of a critical section, which might be needed to synchronize writing to a shared `TFile`. Closes #16241",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16391
https://github.com/root-project/root/pull/16393:98,Integrability,interface,interface,98,"By introducing a virtual `FCNBase::HasGradient()` method and moving the; former `FCNGradientBase` interface to the base class, we don't need to; repeat lots of code just for dealing with both the `FCNBase` and; `FCNGradientBase` types. This is a completely backwards compatible change that makes the Minuit 2; code more maintainable. Another commit in this PR removed the unused `FCNGradientBase::CheckGradient()` member function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16393
https://github.com/root-project/root/pull/16393:320,Modifiability,maintainab,maintainable,320,"By introducing a virtual `FCNBase::HasGradient()` method and moving the; former `FCNGradientBase` interface to the base class, we don't need to; repeat lots of code just for dealing with both the `FCNBase` and; `FCNGradientBase` types. This is a completely backwards compatible change that makes the Minuit 2; code more maintainable. Another commit in this PR removed the unused `FCNGradientBase::CheckGradient()` member function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16393
https://github.com/root-project/root/pull/16394:5,Energy Efficiency,reduce,reduces,5,"This reduces the time to run Hesse in the ATLAS Higgs benchmark from; 123 s to 92 seconds. Given that some models take hours for this, this is a significant; improvement for the user experience. Further improvement is possible by analyzing the computation graph a bit; more to find more independent parameters (e.g., the different gammas for; stat uncertainties from different bins).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16394:54,Testability,benchmark,benchmark,54,"This reduces the time to run Hesse in the ATLAS Higgs benchmark from; 123 s to 92 seconds. Given that some models take hours for this, this is a significant; improvement for the user experience. Further improvement is possible by analyzing the computation graph a bit; more to find more independent parameters (e.g., the different gammas for; stat uncertainties from different bins).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16394:178,Usability,user experience,user experience,178,"This reduces the time to run Hesse in the ATLAS Higgs benchmark from; 123 s to 92 seconds. Given that some models take hours for this, this is a significant; improvement for the user experience. Further improvement is possible by analyzing the computation graph a bit; more to find more independent parameters (e.g., the different gammas for; stat uncertainties from different bins).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16396:116,Deployability,release,releases,116,This is required to build LLVM18.; This version of CMake was eleased in March 2021 https://github.com/Kitware/CMake/releases/tag/v3.20.0. Associated PR in roottest https://github.com/root-project/roottest/pull/1184,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16396
https://github.com/root-project/root/pull/16397:117,Deployability,release,releases,117,This is required to build LLVM18.; This version of CMake was eleased in March 2021; https://github.com/Kitware/CMake/releases/tag/v3.20.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16397
https://github.com/root-project/root/issues/16402:1145,Deployability,Install,Installation,1145,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In ATLAS we noticed a strange behavior of some of our python scripts after switching to the latest ROOT version. Importing ROOT seems to prevent proper garbage collection in Python, i.e. the class destructor `__del__` is not being called before the process exits. Reproducible with ROOT 6.32.00 to 6.32.04, i.e. the problem was introduced at some point after 6.30.08. Internal Jira issues: [ADHI-4985](https://its.cern.ch/jira/browse/ADHI-4985) [ATR-29707](https://its.cern.ch/jira/browse/ATR-29707) . ### Reproducer. On lxplus9 with ROOT 6.32.04 consider this python script (thanks to Wainer Vandelli):; ```python; import ROOT. class Test(object):; def __init__(self):; print('Init'); def __del__(self):; print('Del'). obj = Test(); ```; ```sh; > python3 --version; Python 3.9.18; > python3 test.py ; Init; > ; ```; Remove the `import ROOT` and the result is as expected:; ```sh; > python3 test.py; Init; Del; ```; Explicitly calling `del obj` can be used as a workaround but that's certainly not what the user expects having to do. ### ROOT version. ROOT 6.32.04. ### Installation method. cvmfs. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:710,Testability,Test,Test,710,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In ATLAS we noticed a strange behavior of some of our python scripts after switching to the latest ROOT version. Importing ROOT seems to prevent proper garbage collection in Python, i.e. the class destructor `__del__` is not being called before the process exits. Reproducible with ROOT 6.32.00 to 6.32.04, i.e. the problem was introduced at some point after 6.30.08. Internal Jira issues: [ADHI-4985](https://its.cern.ch/jira/browse/ADHI-4985) [ATR-29707](https://its.cern.ch/jira/browse/ATR-29707) . ### Reproducer. On lxplus9 with ROOT 6.32.04 consider this python script (thanks to Wainer Vandelli):; ```python; import ROOT. class Test(object):; def __init__(self):; print('Init'); def __del__(self):; print('Del'). obj = Test(); ```; ```sh; > python3 --version; Python 3.9.18; > python3 test.py ; Init; > ; ```; Remove the `import ROOT` and the result is as expected:; ```sh; > python3 test.py; Init; Del; ```; Explicitly calling `del obj` can be used as a workaround but that's certainly not what the user expects having to do. ### ROOT version. ROOT 6.32.04. ### Installation method. cvmfs. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:801,Testability,Test,Test,801,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In ATLAS we noticed a strange behavior of some of our python scripts after switching to the latest ROOT version. Importing ROOT seems to prevent proper garbage collection in Python, i.e. the class destructor `__del__` is not being called before the process exits. Reproducible with ROOT 6.32.00 to 6.32.04, i.e. the problem was introduced at some point after 6.30.08. Internal Jira issues: [ADHI-4985](https://its.cern.ch/jira/browse/ADHI-4985) [ATR-29707](https://its.cern.ch/jira/browse/ATR-29707) . ### Reproducer. On lxplus9 with ROOT 6.32.04 consider this python script (thanks to Wainer Vandelli):; ```python; import ROOT. class Test(object):; def __init__(self):; print('Init'); def __del__(self):; print('Del'). obj = Test(); ```; ```sh; > python3 --version; Python 3.9.18; > python3 test.py ; Init; > ; ```; Remove the `import ROOT` and the result is as expected:; ```sh; > python3 test.py; Init; Del; ```; Explicitly calling `del obj` can be used as a workaround but that's certainly not what the user expects having to do. ### ROOT version. ROOT 6.32.04. ### Installation method. cvmfs. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:867,Testability,test,test,867,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In ATLAS we noticed a strange behavior of some of our python scripts after switching to the latest ROOT version. Importing ROOT seems to prevent proper garbage collection in Python, i.e. the class destructor `__del__` is not being called before the process exits. Reproducible with ROOT 6.32.00 to 6.32.04, i.e. the problem was introduced at some point after 6.30.08. Internal Jira issues: [ADHI-4985](https://its.cern.ch/jira/browse/ADHI-4985) [ATR-29707](https://its.cern.ch/jira/browse/ATR-29707) . ### Reproducer. On lxplus9 with ROOT 6.32.04 consider this python script (thanks to Wainer Vandelli):; ```python; import ROOT. class Test(object):; def __init__(self):; print('Init'); def __del__(self):; print('Del'). obj = Test(); ```; ```sh; > python3 --version; Python 3.9.18; > python3 test.py ; Init; > ; ```; Remove the `import ROOT` and the result is as expected:; ```sh; > python3 test.py; Init; Del; ```; Explicitly calling `del obj` can be used as a workaround but that's certainly not what the user expects having to do. ### ROOT version. ROOT 6.32.04. ### Installation method. cvmfs. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:966,Testability,test,test,966,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In ATLAS we noticed a strange behavior of some of our python scripts after switching to the latest ROOT version. Importing ROOT seems to prevent proper garbage collection in Python, i.e. the class destructor `__del__` is not being called before the process exits. Reproducible with ROOT 6.32.00 to 6.32.04, i.e. the problem was introduced at some point after 6.30.08. Internal Jira issues: [ADHI-4985](https://its.cern.ch/jira/browse/ADHI-4985) [ATR-29707](https://its.cern.ch/jira/browse/ATR-29707) . ### Reproducer. On lxplus9 with ROOT 6.32.04 consider this python script (thanks to Wainer Vandelli):; ```python; import ROOT. class Test(object):; def __init__(self):; print('Init'); def __del__(self):; print('Del'). obj = Test(); ```; ```sh; > python3 --version; Python 3.9.18; > python3 test.py ; Init; > ; ```; Remove the `import ROOT` and the result is as expected:; ```sh; > python3 test.py; Init; Del; ```; Explicitly calling `del obj` can be used as a workaround but that's certainly not what the user expects having to do. ### ROOT version. ROOT 6.32.04. ### Installation method. cvmfs. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/pull/16403:153,Availability,alive,alive,153,"The `gMainDict` should be borrowed, i.e. we are not calling Py_INCREF(gMainDict). Like this, we avoid unexpectedly affecting how long `__main__` is kept alive. The `gMainDict` is only used in `Exec()`, `ExecScript()`, and `Eval()`, which should not be called after `__main__` is garbage collected anyway. Closes #16402. Needs to be backported to 6.32. Equivalent CPyCppyy PR:; https://github.com/wlav/CPyCppyy/pull/37",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16403
https://github.com/root-project/root/pull/16403:96,Safety,avoid,avoid,96,"The `gMainDict` should be borrowed, i.e. we are not calling Py_INCREF(gMainDict). Like this, we avoid unexpectedly affecting how long `__main__` is kept alive. The `gMainDict` is only used in `Exec()`, `ExecScript()`, and `Eval()`, which should not be called after `__main__` is garbage collected anyway. Closes #16402. Needs to be backported to 6.32. Equivalent CPyCppyy PR:; https://github.com/wlav/CPyCppyy/pull/37",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16403
https://github.com/root-project/root/issues/16405:336,Availability,failure,failure,336,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I have a class with some overloaded methods that are designed to throw exceptions if the user messes up. In non-overloaded methods this exception is passed back to the user, exactly as expected. But when the method is overloaded, cppyy seems to assume that the failure was a TypeError issue rather than returning the underlying exception. Below is a reproducer. ### Reproducer. ```; import ROOT. ROOT.gInterpreter.ProcessLine(""""""; class MyClass {; public:; class MyObj {; public:; MyObj(const char*) { }; };; void MyMethod(const MyObj& x = """") {; throw std::runtime_error(""My exception"");; }; void MyMethod(const MyObj& x, bool another) {; throw std::runtime_error(""My second exception"");; }. };; """"""); MyClass().MyMethod(""hi""); ```; Produces:. ```; TypeError: none of the 2 overloaded methods succeeded. Full details:; void MyClass::MyMethod(const MyClass::MyObj& x, bool another) =>; TypeError: takes at least 2 arguments (1 given); void MyClass::MyMethod(const MyClass::MyObj& x = """") =>; TypeError: could not convert argument 1; ```; The issue is the second exception, since there isn't a conversion error here. Pyroot should report the exception (runtime_error(""My Exception"")) here instead. ### ROOT version. 6.32. ### Installation method. source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:1179,Availability,error,error,1179,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I have a class with some overloaded methods that are designed to throw exceptions if the user messes up. In non-overloaded methods this exception is passed back to the user, exactly as expected. But when the method is overloaded, cppyy seems to assume that the failure was a TypeError issue rather than returning the underlying exception. Below is a reproducer. ### Reproducer. ```; import ROOT. ROOT.gInterpreter.ProcessLine(""""""; class MyClass {; public:; class MyObj {; public:; MyObj(const char*) { }; };; void MyMethod(const MyObj& x = """") {; throw std::runtime_error(""My exception"");; }; void MyMethod(const MyObj& x, bool another) {; throw std::runtime_error(""My second exception"");; }. };; """"""); MyClass().MyMethod(""hi""); ```; Produces:. ```; TypeError: none of the 2 overloaded methods succeeded. Full details:; void MyClass::MyMethod(const MyClass::MyObj& x, bool another) =>; TypeError: takes at least 2 arguments (1 given); void MyClass::MyMethod(const MyClass::MyObj& x = """") =>; TypeError: could not convert argument 1; ```; The issue is the second exception, since there isn't a conversion error here. Pyroot should report the exception (runtime_error(""My Exception"")) here instead. ### ROOT version. 6.32. ### Installation method. source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:1300,Deployability,Install,Installation,1300,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I have a class with some overloaded methods that are designed to throw exceptions if the user messes up. In non-overloaded methods this exception is passed back to the user, exactly as expected. But when the method is overloaded, cppyy seems to assume that the failure was a TypeError issue rather than returning the underlying exception. Below is a reproducer. ### Reproducer. ```; import ROOT. ROOT.gInterpreter.ProcessLine(""""""; class MyClass {; public:; class MyObj {; public:; MyObj(const char*) { }; };; void MyMethod(const MyObj& x = """") {; throw std::runtime_error(""My exception"");; }; void MyMethod(const MyObj& x, bool another) {; throw std::runtime_error(""My second exception"");; }. };; """"""); MyClass().MyMethod(""hi""); ```; Produces:. ```; TypeError: none of the 2 overloaded methods succeeded. Full details:; void MyClass::MyMethod(const MyClass::MyObj& x, bool another) =>; TypeError: takes at least 2 arguments (1 given); void MyClass::MyMethod(const MyClass::MyObj& x = """") =>; TypeError: could not convert argument 1; ```; The issue is the second exception, since there isn't a conversion error here. Pyroot should report the exception (runtime_error(""My Exception"")) here instead. ### ROOT version. 6.32. ### Installation method. source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/pull/16408:195,Deployability,update,updated,195,Fix deprecation warnings when compiling cling standalone. # This Pull request:. Fix warnings in a standalone Cling build. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16408
https://github.com/root-project/root/pull/16408:165,Testability,test,tested,165,Fix deprecation warnings when compiling cling standalone. # This Pull request:. Fix warnings in a standalone Cling build. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16408
https://github.com/root-project/root/pull/16409:128,Deployability,update,updated,128,# This Pull request:. [WIP] Looking at other `FIXME`s. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; https://github.com/root-project/root/issues/14210,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16409
https://github.com/root-project/root/pull/16409:98,Testability,test,tested,98,# This Pull request:. [WIP] Looking at other `FIXME`s. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; https://github.com/root-project/root/issues/14210,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16409
https://github.com/root-project/root/pull/16410:359,Deployability,update,update,359,# This Pull request:; Removes the implicit `auto` keyword support added in: https://github.com/root-project/root/commit/071d08487ceea4f8f28231ea182ba350e6836e30 and https://github.com/root-project/root/commit/1f4a6dc0539acfc0ec58cea7443fe08a0a4479d4; ## Changes or fixes:; This feature was deprecated in: https://github.com/root-project/root/pull/14645. Will update LLVM and squash the commits here before the final merge/decision. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16410:483,Deployability,update,updated,483,# This Pull request:; Removes the implicit `auto` keyword support added in: https://github.com/root-project/root/commit/071d08487ceea4f8f28231ea182ba350e6836e30 and https://github.com/root-project/root/commit/1f4a6dc0539acfc0ec58cea7443fe08a0a4479d4; ## Changes or fixes:; This feature was deprecated in: https://github.com/root-project/root/pull/14645. Will update LLVM and squash the commits here before the final merge/decision. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16410:453,Testability,test,tested,453,# This Pull request:; Removes the implicit `auto` keyword support added in: https://github.com/root-project/root/commit/071d08487ceea4f8f28231ea182ba350e6836e30 and https://github.com/root-project/root/commit/1f4a6dc0539acfc0ec58cea7443fe08a0a4479d4; ## Changes or fixes:; This feature was deprecated in: https://github.com/root-project/root/pull/14645. Will update LLVM and squash the commits here before the final merge/decision. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16412:109,Availability,failure,failures,109,"See in-code comment for more details. Note: this bug is routinely seen on the CI, where it causes occasional failures to the tests in question. Despite this solution being very suboptimal (the bug is most likely still present in many places of our codebase and can be encountered by users in the wild) we should at least be able to remove the random CI failures on our side. A proper solution would be nice, but it seems hard to come up with one that doesn't have big performance implications. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16412
https://github.com/root-project/root/pull/16412:353,Availability,failure,failures,353,"See in-code comment for more details. Note: this bug is routinely seen on the CI, where it causes occasional failures to the tests in question. Despite this solution being very suboptimal (the bug is most likely still present in many places of our codebase and can be encountered by users in the wild) we should at least be able to remove the random CI failures on our side. A proper solution would be nice, but it seems hard to come up with one that doesn't have big performance implications. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16412
https://github.com/root-project/root/pull/16412:545,Deployability,update,updated,545,"See in-code comment for more details. Note: this bug is routinely seen on the CI, where it causes occasional failures to the tests in question. Despite this solution being very suboptimal (the bug is most likely still present in many places of our codebase and can be encountered by users in the wild) we should at least be able to remove the random CI failures on our side. A proper solution would be nice, but it seems hard to come up with one that doesn't have big performance implications. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16412
https://github.com/root-project/root/pull/16412:56,Integrability,rout,routinely,56,"See in-code comment for more details. Note: this bug is routinely seen on the CI, where it causes occasional failures to the tests in question. Despite this solution being very suboptimal (the bug is most likely still present in many places of our codebase and can be encountered by users in the wild) we should at least be able to remove the random CI failures on our side. A proper solution would be nice, but it seems hard to come up with one that doesn't have big performance implications. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16412
https://github.com/root-project/root/pull/16412:468,Performance,perform,performance,468,"See in-code comment for more details. Note: this bug is routinely seen on the CI, where it causes occasional failures to the tests in question. Despite this solution being very suboptimal (the bug is most likely still present in many places of our codebase and can be encountered by users in the wild) we should at least be able to remove the random CI failures on our side. A proper solution would be nice, but it seems hard to come up with one that doesn't have big performance implications. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16412
https://github.com/root-project/root/pull/16412:125,Testability,test,tests,125,"See in-code comment for more details. Note: this bug is routinely seen on the CI, where it causes occasional failures to the tests in question. Despite this solution being very suboptimal (the bug is most likely still present in many places of our codebase and can be encountered by users in the wild) we should at least be able to remove the random CI failures on our side. A proper solution would be nice, but it seems hard to come up with one that doesn't have big performance implications. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16412
https://github.com/root-project/root/pull/16412:515,Testability,test,tested,515,"See in-code comment for more details. Note: this bug is routinely seen on the CI, where it causes occasional failures to the tests in question. Despite this solution being very suboptimal (the bug is most likely still present in many places of our codebase and can be encountered by users in the wild) we should at least be able to remove the random CI failures on our side. A proper solution would be nice, but it seems hard to come up with one that doesn't have big performance implications. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16412
https://github.com/root-project/root/pull/16413:69,Deployability,pipeline,pipeline,69,This mapping should be fixed before shipping the RDF Numba execution pipeline to users,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16413
https://github.com/root-project/root/pull/16414:143,Performance,perform,performance,143,"Enabled with `TWebCanvas::BatchImageMode()` static method. Allows to process many images with single headless browser invocation and; increase performance of image production - without change of user code. . When many canvases are stored as image in difference places, ; they first collected in batch as JSON and then processed; when at least `n` images are there. Only then headless browser invoked; and create all these images at once. . Provide macro demonstrating this functionality.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16414
https://github.com/root-project/root/pull/16416:722,Deployability,Upgrade,Upgrade,722,"1. Support `TBox`, `TLatex`, `TLine`, `TMarker` drawing on ""frame"", support drawing on swapped axes; 2. Improve performance of TH3/RH3 drawing by using THREE.InstancedMesh; 3. Implement batch mode with '&batch' URL parameter to create SVG/PNG images with default GUI; 4. Adjust node.js implementation to produce identical output with normal browser; 5. Create necessary infrastructure for testing with 'puppeteer'; 6. Support inject of ES6 modules via '&inject=path.mjs'; 7. Using importmap for 'jsroot' in all major HTML files and in demos; 8. Implement `settings.CutAxisLabels` flag to remove labels which may exceed graphical range; 9. Let save canvas as JSON file from context menu, object as JSON from inspector; 10. Upgrade three.js r162 -> r168, use r162 only in node.js because of ""gl"" module; 11. Create unified svg2pdf/jspdf ES6 module, works both in browsers and node.js; 12. Internals - upgrade to eslint 9; 13. Fix - correctly handle in I/O empty std::map; 14. Fix - reading of small (<1KB) ROOT files; 15. Fix - race condition in zstd initialization [#318](https://github.com/root-project/jsroot/issues/318); 16. Fix - deployment with zstd [#317](https://github.com/root-project/jsroot/issues/317); 17. Remove unused md5.mjs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16416
https://github.com/root-project/root/pull/16416:899,Deployability,upgrade,upgrade,899,"1. Support `TBox`, `TLatex`, `TLine`, `TMarker` drawing on ""frame"", support drawing on swapped axes; 2. Improve performance of TH3/RH3 drawing by using THREE.InstancedMesh; 3. Implement batch mode with '&batch' URL parameter to create SVG/PNG images with default GUI; 4. Adjust node.js implementation to produce identical output with normal browser; 5. Create necessary infrastructure for testing with 'puppeteer'; 6. Support inject of ES6 modules via '&inject=path.mjs'; 7. Using importmap for 'jsroot' in all major HTML files and in demos; 8. Implement `settings.CutAxisLabels` flag to remove labels which may exceed graphical range; 9. Let save canvas as JSON file from context menu, object as JSON from inspector; 10. Upgrade three.js r162 -> r168, use r162 only in node.js because of ""gl"" module; 11. Create unified svg2pdf/jspdf ES6 module, works both in browsers and node.js; 12. Internals - upgrade to eslint 9; 13. Fix - correctly handle in I/O empty std::map; 14. Fix - reading of small (<1KB) ROOT files; 15. Fix - race condition in zstd initialization [#318](https://github.com/root-project/jsroot/issues/318); 16. Fix - deployment with zstd [#317](https://github.com/root-project/jsroot/issues/317); 17. Remove unused md5.mjs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16416
https://github.com/root-project/root/pull/16416:1133,Deployability,deploy,deployment,1133,"1. Support `TBox`, `TLatex`, `TLine`, `TMarker` drawing on ""frame"", support drawing on swapped axes; 2. Improve performance of TH3/RH3 drawing by using THREE.InstancedMesh; 3. Implement batch mode with '&batch' URL parameter to create SVG/PNG images with default GUI; 4. Adjust node.js implementation to produce identical output with normal browser; 5. Create necessary infrastructure for testing with 'puppeteer'; 6. Support inject of ES6 modules via '&inject=path.mjs'; 7. Using importmap for 'jsroot' in all major HTML files and in demos; 8. Implement `settings.CutAxisLabels` flag to remove labels which may exceed graphical range; 9. Let save canvas as JSON file from context menu, object as JSON from inspector; 10. Upgrade three.js r162 -> r168, use r162 only in node.js because of ""gl"" module; 11. Create unified svg2pdf/jspdf ES6 module, works both in browsers and node.js; 12. Internals - upgrade to eslint 9; 13. Fix - correctly handle in I/O empty std::map; 14. Fix - reading of small (<1KB) ROOT files; 15. Fix - race condition in zstd initialization [#318](https://github.com/root-project/jsroot/issues/318); 16. Fix - deployment with zstd [#317](https://github.com/root-project/jsroot/issues/317); 17. Remove unused md5.mjs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16416
https://github.com/root-project/root/pull/16416:426,Integrability,inject,inject,426,"1. Support `TBox`, `TLatex`, `TLine`, `TMarker` drawing on ""frame"", support drawing on swapped axes; 2. Improve performance of TH3/RH3 drawing by using THREE.InstancedMesh; 3. Implement batch mode with '&batch' URL parameter to create SVG/PNG images with default GUI; 4. Adjust node.js implementation to produce identical output with normal browser; 5. Create necessary infrastructure for testing with 'puppeteer'; 6. Support inject of ES6 modules via '&inject=path.mjs'; 7. Using importmap for 'jsroot' in all major HTML files and in demos; 8. Implement `settings.CutAxisLabels` flag to remove labels which may exceed graphical range; 9. Let save canvas as JSON file from context menu, object as JSON from inspector; 10. Upgrade three.js r162 -> r168, use r162 only in node.js because of ""gl"" module; 11. Create unified svg2pdf/jspdf ES6 module, works both in browsers and node.js; 12. Internals - upgrade to eslint 9; 13. Fix - correctly handle in I/O empty std::map; 14. Fix - reading of small (<1KB) ROOT files; 15. Fix - race condition in zstd initialization [#318](https://github.com/root-project/jsroot/issues/318); 16. Fix - deployment with zstd [#317](https://github.com/root-project/jsroot/issues/317); 17. Remove unused md5.mjs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16416
https://github.com/root-project/root/pull/16416:454,Integrability,inject,inject,454,"1. Support `TBox`, `TLatex`, `TLine`, `TMarker` drawing on ""frame"", support drawing on swapped axes; 2. Improve performance of TH3/RH3 drawing by using THREE.InstancedMesh; 3. Implement batch mode with '&batch' URL parameter to create SVG/PNG images with default GUI; 4. Adjust node.js implementation to produce identical output with normal browser; 5. Create necessary infrastructure for testing with 'puppeteer'; 6. Support inject of ES6 modules via '&inject=path.mjs'; 7. Using importmap for 'jsroot' in all major HTML files and in demos; 8. Implement `settings.CutAxisLabels` flag to remove labels which may exceed graphical range; 9. Let save canvas as JSON file from context menu, object as JSON from inspector; 10. Upgrade three.js r162 -> r168, use r162 only in node.js because of ""gl"" module; 11. Create unified svg2pdf/jspdf ES6 module, works both in browsers and node.js; 12. Internals - upgrade to eslint 9; 13. Fix - correctly handle in I/O empty std::map; 14. Fix - reading of small (<1KB) ROOT files; 15. Fix - race condition in zstd initialization [#318](https://github.com/root-project/jsroot/issues/318); 16. Fix - deployment with zstd [#317](https://github.com/root-project/jsroot/issues/317); 17. Remove unused md5.mjs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16416
https://github.com/root-project/root/pull/16416:112,Performance,perform,performance,112,"1. Support `TBox`, `TLatex`, `TLine`, `TMarker` drawing on ""frame"", support drawing on swapped axes; 2. Improve performance of TH3/RH3 drawing by using THREE.InstancedMesh; 3. Implement batch mode with '&batch' URL parameter to create SVG/PNG images with default GUI; 4. Adjust node.js implementation to produce identical output with normal browser; 5. Create necessary infrastructure for testing with 'puppeteer'; 6. Support inject of ES6 modules via '&inject=path.mjs'; 7. Using importmap for 'jsroot' in all major HTML files and in demos; 8. Implement `settings.CutAxisLabels` flag to remove labels which may exceed graphical range; 9. Let save canvas as JSON file from context menu, object as JSON from inspector; 10. Upgrade three.js r162 -> r168, use r162 only in node.js because of ""gl"" module; 11. Create unified svg2pdf/jspdf ES6 module, works both in browsers and node.js; 12. Internals - upgrade to eslint 9; 13. Fix - correctly handle in I/O empty std::map; 14. Fix - reading of small (<1KB) ROOT files; 15. Fix - race condition in zstd initialization [#318](https://github.com/root-project/jsroot/issues/318); 16. Fix - deployment with zstd [#317](https://github.com/root-project/jsroot/issues/317); 17. Remove unused md5.mjs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16416
https://github.com/root-project/root/pull/16416:1026,Performance,race condition,race condition,1026,"1. Support `TBox`, `TLatex`, `TLine`, `TMarker` drawing on ""frame"", support drawing on swapped axes; 2. Improve performance of TH3/RH3 drawing by using THREE.InstancedMesh; 3. Implement batch mode with '&batch' URL parameter to create SVG/PNG images with default GUI; 4. Adjust node.js implementation to produce identical output with normal browser; 5. Create necessary infrastructure for testing with 'puppeteer'; 6. Support inject of ES6 modules via '&inject=path.mjs'; 7. Using importmap for 'jsroot' in all major HTML files and in demos; 8. Implement `settings.CutAxisLabels` flag to remove labels which may exceed graphical range; 9. Let save canvas as JSON file from context menu, object as JSON from inspector; 10. Upgrade three.js r162 -> r168, use r162 only in node.js because of ""gl"" module; 11. Create unified svg2pdf/jspdf ES6 module, works both in browsers and node.js; 12. Internals - upgrade to eslint 9; 13. Fix - correctly handle in I/O empty std::map; 14. Fix - reading of small (<1KB) ROOT files; 15. Fix - race condition in zstd initialization [#318](https://github.com/root-project/jsroot/issues/318); 16. Fix - deployment with zstd [#317](https://github.com/root-project/jsroot/issues/317); 17. Remove unused md5.mjs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16416
https://github.com/root-project/root/pull/16416:426,Security,inject,inject,426,"1. Support `TBox`, `TLatex`, `TLine`, `TMarker` drawing on ""frame"", support drawing on swapped axes; 2. Improve performance of TH3/RH3 drawing by using THREE.InstancedMesh; 3. Implement batch mode with '&batch' URL parameter to create SVG/PNG images with default GUI; 4. Adjust node.js implementation to produce identical output with normal browser; 5. Create necessary infrastructure for testing with 'puppeteer'; 6. Support inject of ES6 modules via '&inject=path.mjs'; 7. Using importmap for 'jsroot' in all major HTML files and in demos; 8. Implement `settings.CutAxisLabels` flag to remove labels which may exceed graphical range; 9. Let save canvas as JSON file from context menu, object as JSON from inspector; 10. Upgrade three.js r162 -> r168, use r162 only in node.js because of ""gl"" module; 11. Create unified svg2pdf/jspdf ES6 module, works both in browsers and node.js; 12. Internals - upgrade to eslint 9; 13. Fix - correctly handle in I/O empty std::map; 14. Fix - reading of small (<1KB) ROOT files; 15. Fix - race condition in zstd initialization [#318](https://github.com/root-project/jsroot/issues/318); 16. Fix - deployment with zstd [#317](https://github.com/root-project/jsroot/issues/317); 17. Remove unused md5.mjs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16416
https://github.com/root-project/root/pull/16416:454,Security,inject,inject,454,"1. Support `TBox`, `TLatex`, `TLine`, `TMarker` drawing on ""frame"", support drawing on swapped axes; 2. Improve performance of TH3/RH3 drawing by using THREE.InstancedMesh; 3. Implement batch mode with '&batch' URL parameter to create SVG/PNG images with default GUI; 4. Adjust node.js implementation to produce identical output with normal browser; 5. Create necessary infrastructure for testing with 'puppeteer'; 6. Support inject of ES6 modules via '&inject=path.mjs'; 7. Using importmap for 'jsroot' in all major HTML files and in demos; 8. Implement `settings.CutAxisLabels` flag to remove labels which may exceed graphical range; 9. Let save canvas as JSON file from context menu, object as JSON from inspector; 10. Upgrade three.js r162 -> r168, use r162 only in node.js because of ""gl"" module; 11. Create unified svg2pdf/jspdf ES6 module, works both in browsers and node.js; 12. Internals - upgrade to eslint 9; 13. Fix - correctly handle in I/O empty std::map; 14. Fix - reading of small (<1KB) ROOT files; 15. Fix - race condition in zstd initialization [#318](https://github.com/root-project/jsroot/issues/318); 16. Fix - deployment with zstd [#317](https://github.com/root-project/jsroot/issues/317); 17. Remove unused md5.mjs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16416
https://github.com/root-project/root/pull/16416:389,Testability,test,testing,389,"1. Support `TBox`, `TLatex`, `TLine`, `TMarker` drawing on ""frame"", support drawing on swapped axes; 2. Improve performance of TH3/RH3 drawing by using THREE.InstancedMesh; 3. Implement batch mode with '&batch' URL parameter to create SVG/PNG images with default GUI; 4. Adjust node.js implementation to produce identical output with normal browser; 5. Create necessary infrastructure for testing with 'puppeteer'; 6. Support inject of ES6 modules via '&inject=path.mjs'; 7. Using importmap for 'jsroot' in all major HTML files and in demos; 8. Implement `settings.CutAxisLabels` flag to remove labels which may exceed graphical range; 9. Let save canvas as JSON file from context menu, object as JSON from inspector; 10. Upgrade three.js r162 -> r168, use r162 only in node.js because of ""gl"" module; 11. Create unified svg2pdf/jspdf ES6 module, works both in browsers and node.js; 12. Internals - upgrade to eslint 9; 13. Fix - correctly handle in I/O empty std::map; 14. Fix - reading of small (<1KB) ROOT files; 15. Fix - race condition in zstd initialization [#318](https://github.com/root-project/jsroot/issues/318); 16. Fix - deployment with zstd [#317](https://github.com/root-project/jsroot/issues/317); 17. Remove unused md5.mjs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16416
https://github.com/root-project/root/issues/16419:281,Availability,error,error,281,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The code crashes once I use the `RooUnblindOffset` as it is in the snippet below. This seems to be working just fine when I use I use an older version of ROOT, e.g, 6.26/04 . I also attach the segmentation error if helps ; [segfault.txt](https://github.com/user-attachments/files/16984068/segfault.txt). ### Reproducer. ```c++; RooRealVar* tauB = new RooRealVar(""tau"",""tau"",1.6, 1.4 ,1.8 );; std::string blindname = ""blindTau"";; std::string blindString = ""McFluff"";; RooUnblindOffset* blind = new RooUnblindOffset(blindname.c_str(), blindname.c_str(), blindString.c_str(), 0.02, *tauB );; RooFormulaVar* Gamma = new RooFormulaVar(""Gamma"",""Gamma"",""-1/@0"" ,RooArgSet(*blind));; ```. ### ROOT version. ROOT 6.32.04. ### Installation method. installed from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:792,Deployability,Install,Installation,792,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The code crashes once I use the `RooUnblindOffset` as it is in the snippet below. This seems to be working just fine when I use I use an older version of ROOT, e.g, 6.26/04 . I also attach the segmentation error if helps ; [segfault.txt](https://github.com/user-attachments/files/16984068/segfault.txt). ### Reproducer. ```c++; RooRealVar* tauB = new RooRealVar(""tau"",""tau"",1.6, 1.4 ,1.8 );; std::string blindname = ""blindTau"";; std::string blindString = ""McFluff"";; RooUnblindOffset* blind = new RooUnblindOffset(blindname.c_str(), blindname.c_str(), blindString.c_str(), 0.02, *tauB );; RooFormulaVar* Gamma = new RooFormulaVar(""Gamma"",""Gamma"",""-1/@0"" ,RooArgSet(*blind));; ```. ### ROOT version. ROOT 6.32.04. ### Installation method. installed from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:813,Deployability,install,installed,813,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The code crashes once I use the `RooUnblindOffset` as it is in the snippet below. This seems to be working just fine when I use I use an older version of ROOT, e.g, 6.26/04 . I also attach the segmentation error if helps ; [segfault.txt](https://github.com/user-attachments/files/16984068/segfault.txt). ### Reproducer. ```c++; RooRealVar* tauB = new RooRealVar(""tau"",""tau"",1.6, 1.4 ,1.8 );; std::string blindname = ""blindTau"";; std::string blindString = ""McFluff"";; RooUnblindOffset* blind = new RooUnblindOffset(blindname.c_str(), blindname.c_str(), blindString.c_str(), 0.02, *tauB );; RooFormulaVar* Gamma = new RooFormulaVar(""Gamma"",""Gamma"",""-1/@0"" ,RooArgSet(*blind));; ```. ### ROOT version. ROOT 6.32.04. ### Installation method. installed from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/pull/16420:479,Deployability,release,releases,479,"LLVM had a bug where constructors with the same priority would not be stably sorted. This has been fixed upstream by https://github.com/llvm/llvm-project/pull/95532, but to avoid relying on a backport this commit works around the issue: The idea is that we lower the default priority of concerned constructors to make them sort correctly. ---. As discussed, this provides a bit of magic :magic_wand: to work around the bug if we don't have the backport, for example in the Conda releases. I propose we still leave the backport in our copy of LLVM though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16420
https://github.com/root-project/root/pull/16420:173,Safety,avoid,avoid,173,"LLVM had a bug where constructors with the same priority would not be stably sorted. This has been fixed upstream by https://github.com/llvm/llvm-project/pull/95532, but to avoid relying on a backport this commit works around the issue: The idea is that we lower the default priority of concerned constructors to make them sort correctly. ---. As discussed, this provides a bit of magic :magic_wand: to work around the bug if we don't have the backport, for example in the Conda releases. I propose we still leave the backport in our copy of LLVM though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16420
https://github.com/root-project/root/pull/16421:221,Deployability,update,updated,221,"# This Pull request:; fixes the order of declaration of TTree/TFile in a test function of RDF, that was mistakenly changed in 5f56b95832d0f31d0d85dc0a6cc93aa9cb375159. . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16421
https://github.com/root-project/root/pull/16421:73,Testability,test,test,73,"# This Pull request:; fixes the order of declaration of TTree/TFile in a test function of RDF, that was mistakenly changed in 5f56b95832d0f31d0d85dc0a6cc93aa9cb375159. . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16421
https://github.com/root-project/root/pull/16421:191,Testability,test,tested,191,"# This Pull request:; fixes the order of declaration of TTree/TFile in a test function of RDF, that was mistakenly changed in 5f56b95832d0f31d0d85dc0a6cc93aa9cb375159. . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16421
https://github.com/root-project/root/pull/16424:101,Integrability,message,message,101,In case of exception in JavaScript painting code show warning sign and let easily see associated log message. Before some printout was done in browser console which is not easily accessible by users.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16424
https://github.com/root-project/root/pull/16424:179,Security,access,accessible,179,In case of exception in JavaScript painting code show warning sign and let easily see associated log message. Before some printout was done in browser console which is not easily accessible by users.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16424
https://github.com/root-project/root/pull/16424:97,Testability,log,log,97,In case of exception in JavaScript painting code show warning sign and let easily see associated log message. Before some printout was done in browser console which is not easily accessible by users.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16424
https://github.com/root-project/root/pull/16425:216,Performance,optimiz,optimizations,216,This pull request provides a bug fix:. - fixing wrong safety in TGeoParallelWorld due to double application of coordinate transformation) ; - fix a crash in VoxelFinder when we have only 1 primitive. as well as some optimizations for TGeoPallelWorld usage:. - call TGeoParallelWorld::Safety with existing limit from normal safety to speedup search; - make TGeoPhysicalNode::IsMatchingState faster,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16425
https://github.com/root-project/root/pull/16425:54,Safety,safe,safety,54,This pull request provides a bug fix:. - fixing wrong safety in TGeoParallelWorld due to double application of coordinate transformation) ; - fix a crash in VoxelFinder when we have only 1 primitive. as well as some optimizations for TGeoPallelWorld usage:. - call TGeoParallelWorld::Safety with existing limit from normal safety to speedup search; - make TGeoPhysicalNode::IsMatchingState faster,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16425
https://github.com/root-project/root/pull/16425:284,Safety,Safe,Safety,284,This pull request provides a bug fix:. - fixing wrong safety in TGeoParallelWorld due to double application of coordinate transformation) ; - fix a crash in VoxelFinder when we have only 1 primitive. as well as some optimizations for TGeoPallelWorld usage:. - call TGeoParallelWorld::Safety with existing limit from normal safety to speedup search; - make TGeoPhysicalNode::IsMatchingState faster,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16425
https://github.com/root-project/root/pull/16425:323,Safety,safe,safety,323,This pull request provides a bug fix:. - fixing wrong safety in TGeoParallelWorld due to double application of coordinate transformation) ; - fix a crash in VoxelFinder when we have only 1 primitive. as well as some optimizations for TGeoPallelWorld usage:. - call TGeoParallelWorld::Safety with existing limit from normal safety to speedup search; - make TGeoPhysicalNode::IsMatchingState faster,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16425
https://github.com/root-project/root/issues/16428:239,Availability,error,error,239,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. On MacOS Sequoia 15, I compiled using branch v6.32.00-patches using the following cmake commands :. ```; $ root -l ; new TBroot [0] new TBrowser. *** Break *** bus error; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info); [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info); [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info); [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info); [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithConte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:6324,Availability,error,error,6324,"240914/lib/libRint.so] TRint::ProcessLineNr(char const*, char const*, int*) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libRint.so] TRint::HandleTermInput() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TSystem::InnerLoop() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TSystem::Run() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TApplication::Run(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libRint.so] TRint::Run(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/bin/root.exe] main (no debug info); [/usr/lib/dyld] start (no debug info); ```. I can't get any graphics due to issue with cocoa. So I also tried to disable cocoa, but then it loads x11 and compilation crash due to `char*` assigned with `unsigned char*`.; ```; [ 54%] Built target ClangAttrHasAttributeImpl; /Users/marcomeyer/Software/root/20240710-src/graf3d/ftgl/src/FTVectoriser.cxx:143:15: error: cannot initialize a variable of type 'char *' with an rvalue of type 'unsigned char *'; 143 | char* tagList = &outline.tags[startIndex];; | ^ ~~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated.; ```. Would you have any idea how to fix that ?. ### Reproducer. ```; cmake ../20240914-src -Dmathmore=ON -Dbuiltin_vdt=ON -Dbuiltin_glew=ON -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -Dccache=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8; ```. or . ```; cmake ../20240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 && make -j8; ```. ### ROOT version. v6.32.00-patches. ### Installation method. build from source. ### Operating system. MacOSX Sequoia 15.0 Beta (24A5320a). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:6502,Availability,error,error,6502,"240914/lib/libRint.so] TRint::ProcessLineNr(char const*, char const*, int*) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libRint.so] TRint::HandleTermInput() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TSystem::InnerLoop() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TSystem::Run() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TApplication::Run(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libRint.so] TRint::Run(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/bin/root.exe] main (no debug info); [/usr/lib/dyld] start (no debug info); ```. I can't get any graphics due to issue with cocoa. So I also tried to disable cocoa, but then it loads x11 and compilation crash due to `char*` assigned with `unsigned char*`.; ```; [ 54%] Built target ClangAttrHasAttributeImpl; /Users/marcomeyer/Software/root/20240710-src/graf3d/ftgl/src/FTVectoriser.cxx:143:15: error: cannot initialize a variable of type 'char *' with an rvalue of type 'unsigned char *'; 143 | char* tagList = &outline.tags[startIndex];; | ^ ~~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated.; ```. Would you have any idea how to fix that ?. ### Reproducer. ```; cmake ../20240914-src -Dmathmore=ON -Dbuiltin_vdt=ON -Dbuiltin_glew=ON -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -Dccache=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8; ```. or . ```; cmake ../20240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 && make -j8; ```. ### ROOT version. v6.32.00-patches. ### Installation method. build from source. ### Operating system. MacOSX Sequoia 15.0 Beta (24A5320a). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:129,Deployability,patch,patches,129,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. On MacOS Sequoia 15, I compiled using branch v6.32.00-patches using the following cmake commands :. ```; $ root -l ; new TBroot [0] new TBrowser. *** Break *** bus error; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info); [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info); [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info); [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info); [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithConte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:6949,Deployability,patch,patches,6949,"240914/lib/libRint.so] TRint::ProcessLineNr(char const*, char const*, int*) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libRint.so] TRint::HandleTermInput() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TSystem::InnerLoop() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TSystem::Run() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TApplication::Run(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libRint.so] TRint::Run(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/bin/root.exe] main (no debug info); [/usr/lib/dyld] start (no debug info); ```. I can't get any graphics due to issue with cocoa. So I also tried to disable cocoa, but then it loads x11 and compilation crash due to `char*` assigned with `unsigned char*`.; ```; [ 54%] Built target ClangAttrHasAttributeImpl; /Users/marcomeyer/Software/root/20240710-src/graf3d/ftgl/src/FTVectoriser.cxx:143:15: error: cannot initialize a variable of type 'char *' with an rvalue of type 'unsigned char *'; 143 | char* tagList = &outline.tags[startIndex];; | ^ ~~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated.; ```. Would you have any idea how to fix that ?. ### Reproducer. ```; cmake ../20240914-src -Dmathmore=ON -Dbuiltin_vdt=ON -Dbuiltin_glew=ON -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -Dccache=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8; ```. or . ```; cmake ../20240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 && make -j8; ```. ### ROOT version. v6.32.00-patches. ### Installation method. build from source. ### Operating system. MacOSX Sequoia 15.0 Beta (24A5320a). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:6962,Deployability,Install,Installation,6962,"240914/lib/libRint.so] TRint::ProcessLineNr(char const*, char const*, int*) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libRint.so] TRint::HandleTermInput() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TSystem::InnerLoop() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TSystem::Run() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TApplication::Run(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libRint.so] TRint::Run(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/bin/root.exe] main (no debug info); [/usr/lib/dyld] start (no debug info); ```. I can't get any graphics due to issue with cocoa. So I also tried to disable cocoa, but then it loads x11 and compilation crash due to `char*` assigned with `unsigned char*`.; ```; [ 54%] Built target ClangAttrHasAttributeImpl; /Users/marcomeyer/Software/root/20240710-src/graf3d/ftgl/src/FTVectoriser.cxx:143:15: error: cannot initialize a variable of type 'char *' with an rvalue of type 'unsigned char *'; 143 | char* tagList = &outline.tags[startIndex];; | ^ ~~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated.; ```. Would you have any idea how to fix that ?. ### Reproducer. ```; cmake ../20240914-src -Dmathmore=ON -Dbuiltin_vdt=ON -Dbuiltin_glew=ON -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -Dccache=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8; ```. or . ```; cmake ../20240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 && make -j8; ```. ### ROOT version. v6.32.00-patches. ### Installation method. build from source. ### Operating system. MacOSX Sequoia 15.0 Beta (24A5320a). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:6351,Modifiability,variab,variable,6351,"240914/lib/libRint.so] TRint::ProcessLineNr(char const*, char const*, int*) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libRint.so] TRint::HandleTermInput() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TSystem::InnerLoop() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TSystem::Run() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TApplication::Run(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libRint.so] TRint::Run(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/bin/root.exe] main (no debug info); [/usr/lib/dyld] start (no debug info); ```. I can't get any graphics due to issue with cocoa. So I also tried to disable cocoa, but then it loads x11 and compilation crash due to `char*` assigned with `unsigned char*`.; ```; [ 54%] Built target ClangAttrHasAttributeImpl; /Users/marcomeyer/Software/root/20240710-src/graf3d/ftgl/src/FTVectoriser.cxx:143:15: error: cannot initialize a variable of type 'char *' with an rvalue of type 'unsigned char *'; 143 | char* tagList = &outline.tags[startIndex];; | ^ ~~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated.; ```. Would you have any idea how to fix that ?. ### Reproducer. ```; cmake ../20240914-src -Dmathmore=ON -Dbuiltin_vdt=ON -Dbuiltin_glew=ON -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -Dccache=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8; ```. or . ```; cmake ../20240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 && make -j8; ```. ### ROOT version. v6.32.00-patches. ### Installation method. build from source. ### Operating system. MacOSX Sequoia 15.0 Beta (24A5320a). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:6106,Performance,load,loads,6106,"240914/lib/libRint.so] TRint::ProcessLineNr(char const*, char const*, int*) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libRint.so] TRint::HandleTermInput() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TSystem::InnerLoop() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TSystem::Run() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TApplication::Run(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libRint.so] TRint::Run(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/bin/root.exe] main (no debug info); [/usr/lib/dyld] start (no debug info); ```. I can't get any graphics due to issue with cocoa. So I also tried to disable cocoa, but then it loads x11 and compilation crash due to `char*` assigned with `unsigned char*`.; ```; [ 54%] Built target ClangAttrHasAttributeImpl; /Users/marcomeyer/Software/root/20240710-src/graf3d/ftgl/src/FTVectoriser.cxx:143:15: error: cannot initialize a variable of type 'char *' with an rvalue of type 'unsigned char *'; 143 | char* tagList = &outline.tags[startIndex];; | ^ ~~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated.; ```. Would you have any idea how to fix that ?. ### Reproducer. ```; cmake ../20240914-src -Dmathmore=ON -Dbuiltin_vdt=ON -Dbuiltin_glew=ON -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -Dccache=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8; ```. or . ```; cmake ../20240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 && make -j8; ```. ### ROOT version. v6.32.00-patches. ### Installation method. build from source. ### Operating system. MacOSX Sequoia 15.0 Beta (24A5320a). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/pull/16430:184,Availability,down,down,184,Some RooAbsArg member functions were replaced a long time ago with drop-in alternatives that everyone uses since forever. We might as well deprecate these member functions now to slim down the interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16430
https://github.com/root-project/root/pull/16430:193,Integrability,interface,interface,193,Some RooAbsArg member functions were replaced a long time ago with drop-in alternatives that everyone uses since forever. We might as well deprecate these member functions now to slim down the interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16430
https://github.com/root-project/root/pull/16432:159,Deployability,release,releases,159,"Follows up on c58e551, updating the minor version number that is expected. Since LLVM 17, the minor version number is hardcoded to ""1"" instead of ""0"": https://releases.llvm.org/. This will also be the case for the upcoming LLVM 19 release. This PR is needed to make ROOT configure with `builtin_llvm=OFF`. I was just trying this out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16432
https://github.com/root-project/root/pull/16432:231,Deployability,release,release,231,"Follows up on c58e551, updating the minor version number that is expected. Since LLVM 17, the minor version number is hardcoded to ""1"" instead of ""0"": https://releases.llvm.org/. This will also be the case for the upcoming LLVM 19 release. This PR is needed to make ROOT configure with `builtin_llvm=OFF`. I was just trying this out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16432
https://github.com/root-project/root/pull/16432:271,Modifiability,config,configure,271,"Follows up on c58e551, updating the minor version number that is expected. Since LLVM 17, the minor version number is hardcoded to ""1"" instead of ""0"": https://releases.llvm.org/. This will also be the case for the upcoming LLVM 19 release. This PR is needed to make ROOT configure with `builtin_llvm=OFF`. I was just trying this out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16432
https://github.com/root-project/root/pull/16433:180,Availability,avail,available,180,"On macOS, we rely on the `textutil` executable to set some packaging metadata. However, we can't assume that it's always present. For example, in the nix packages build, it is not available, and there is a hack that disables setting the package metadata:; https://github.com/nixos/nixpkgs/blob/848699d4c1f669af01918b7cfdb438329667ddc2/pkgs/applications/science/misc/root/default.nix#L145. However, the `CPACK_PACKAGE_DESCRIPTION_FILE` and; `CPACK_RESOURCE_FILE_README` metadata that depends on `textutil` is optional and not crucial. It's used only in rare situations, like creating Windows installers automatically. See also the description here:; https://cmake.org/cmake/help/latest/module/CPack.html. It would be more appropriate to not fail the configuration if `textutil` is not found, but instead just to skip setting this metadata.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16433
https://github.com/root-project/root/pull/16433:591,Deployability,install,installers,591,"On macOS, we rely on the `textutil` executable to set some packaging metadata. However, we can't assume that it's always present. For example, in the nix packages build, it is not available, and there is a hack that disables setting the package metadata:; https://github.com/nixos/nixpkgs/blob/848699d4c1f669af01918b7cfdb438329667ddc2/pkgs/applications/science/misc/root/default.nix#L145. However, the `CPACK_PACKAGE_DESCRIPTION_FILE` and; `CPACK_RESOURCE_FILE_README` metadata that depends on `textutil` is optional and not crucial. It's used only in rare situations, like creating Windows installers automatically. See also the description here:; https://cmake.org/cmake/help/latest/module/CPack.html. It would be more appropriate to not fail the configuration if `textutil` is not found, but instead just to skip setting this metadata.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16433
https://github.com/root-project/root/pull/16433:749,Deployability,configurat,configuration,749,"On macOS, we rely on the `textutil` executable to set some packaging metadata. However, we can't assume that it's always present. For example, in the nix packages build, it is not available, and there is a hack that disables setting the package metadata:; https://github.com/nixos/nixpkgs/blob/848699d4c1f669af01918b7cfdb438329667ddc2/pkgs/applications/science/misc/root/default.nix#L145. However, the `CPACK_PACKAGE_DESCRIPTION_FILE` and; `CPACK_RESOURCE_FILE_README` metadata that depends on `textutil` is optional and not crucial. It's used only in rare situations, like creating Windows installers automatically. See also the description here:; https://cmake.org/cmake/help/latest/module/CPack.html. It would be more appropriate to not fail the configuration if `textutil` is not found, but instead just to skip setting this metadata.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16433
https://github.com/root-project/root/pull/16433:483,Integrability,depend,depends,483,"On macOS, we rely on the `textutil` executable to set some packaging metadata. However, we can't assume that it's always present. For example, in the nix packages build, it is not available, and there is a hack that disables setting the package metadata:; https://github.com/nixos/nixpkgs/blob/848699d4c1f669af01918b7cfdb438329667ddc2/pkgs/applications/science/misc/root/default.nix#L145. However, the `CPACK_PACKAGE_DESCRIPTION_FILE` and; `CPACK_RESOURCE_FILE_README` metadata that depends on `textutil` is optional and not crucial. It's used only in rare situations, like creating Windows installers automatically. See also the description here:; https://cmake.org/cmake/help/latest/module/CPack.html. It would be more appropriate to not fail the configuration if `textutil` is not found, but instead just to skip setting this metadata.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16433
https://github.com/root-project/root/pull/16433:749,Modifiability,config,configuration,749,"On macOS, we rely on the `textutil` executable to set some packaging metadata. However, we can't assume that it's always present. For example, in the nix packages build, it is not available, and there is a hack that disables setting the package metadata:; https://github.com/nixos/nixpkgs/blob/848699d4c1f669af01918b7cfdb438329667ddc2/pkgs/applications/science/misc/root/default.nix#L145. However, the `CPACK_PACKAGE_DESCRIPTION_FILE` and; `CPACK_RESOURCE_FILE_README` metadata that depends on `textutil` is optional and not crucial. It's used only in rare situations, like creating Windows installers automatically. See also the description here:; https://cmake.org/cmake/help/latest/module/CPack.html. It would be more appropriate to not fail the configuration if `textutil` is not found, but instead just to skip setting this metadata.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16433
https://github.com/root-project/root/pull/16437:65,Availability,error,error,65,"# This Pull request:. Modifies Minuit2 interface to pass initial error/covariance matrix or second derivatives (G2) vector. ## Changes or fixes:. This PR exploits existing code in `MnSeedGenerator` and introduces some improvements, namely:; 1. Check whether provided matrix has positive diagonal (G2 must be positive) and larger than working precision `Eps`; if it is not the case, numerical computation is carried out.; 2. Disable `NegativeG2LineSearch` whenever point 1 is satisfied. Furthermore, this PR provides an interface to pass the error/covariance matrix or second derivatives (G2) vector via `ROOT::Math::Minimizer`. The user can provide either the error/covariance matrix in compressed format (column-major upper triangular part), OR the g2 vector, see the code snippet below. The matrix or second derivatives must take into account only variable parameters, implying that all fixed parameters must be declared before providing initial values. ```; ROOT::Math::Minimizer* minimum = ROOT::Math::Factory::CreateMinimizer(minName, algoName);. minimum->SetVariable(0,""x"",0.,0.);; minimum->SetVariable(1,""y"",0.,0.);. int nrow = 2;; std::vector<double> cov(nrow*(nrow+1)/2);; std::vector<double> d2(nrow);. for(int i = 0; i < nrow; i++) {; d2[i] = 0.1*(i+1);; for(int j = i;j< nrow;j++); cov[i + j * (j + 1) / 2] = (i==j) ? 0.1*(i+1) : 0.;; }. minimum->SetCovariance(cov,nrow);; // OR; //minimum->SetCovarianceDiag(d2,nrow);; ```. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16437
https://github.com/root-project/root/pull/16437:541,Availability,error,error,541,"# This Pull request:. Modifies Minuit2 interface to pass initial error/covariance matrix or second derivatives (G2) vector. ## Changes or fixes:. This PR exploits existing code in `MnSeedGenerator` and introduces some improvements, namely:; 1. Check whether provided matrix has positive diagonal (G2 must be positive) and larger than working precision `Eps`; if it is not the case, numerical computation is carried out.; 2. Disable `NegativeG2LineSearch` whenever point 1 is satisfied. Furthermore, this PR provides an interface to pass the error/covariance matrix or second derivatives (G2) vector via `ROOT::Math::Minimizer`. The user can provide either the error/covariance matrix in compressed format (column-major upper triangular part), OR the g2 vector, see the code snippet below. The matrix or second derivatives must take into account only variable parameters, implying that all fixed parameters must be declared before providing initial values. ```; ROOT::Math::Minimizer* minimum = ROOT::Math::Factory::CreateMinimizer(minName, algoName);. minimum->SetVariable(0,""x"",0.,0.);; minimum->SetVariable(1,""y"",0.,0.);. int nrow = 2;; std::vector<double> cov(nrow*(nrow+1)/2);; std::vector<double> d2(nrow);. for(int i = 0; i < nrow; i++) {; d2[i] = 0.1*(i+1);; for(int j = i;j< nrow;j++); cov[i + j * (j + 1) / 2] = (i==j) ? 0.1*(i+1) : 0.;; }. minimum->SetCovariance(cov,nrow);; // OR; //minimum->SetCovarianceDiag(d2,nrow);; ```. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16437
https://github.com/root-project/root/pull/16437:660,Availability,error,error,660,"# This Pull request:. Modifies Minuit2 interface to pass initial error/covariance matrix or second derivatives (G2) vector. ## Changes or fixes:. This PR exploits existing code in `MnSeedGenerator` and introduces some improvements, namely:; 1. Check whether provided matrix has positive diagonal (G2 must be positive) and larger than working precision `Eps`; if it is not the case, numerical computation is carried out.; 2. Disable `NegativeG2LineSearch` whenever point 1 is satisfied. Furthermore, this PR provides an interface to pass the error/covariance matrix or second derivatives (G2) vector via `ROOT::Math::Minimizer`. The user can provide either the error/covariance matrix in compressed format (column-major upper triangular part), OR the g2 vector, see the code snippet below. The matrix or second derivatives must take into account only variable parameters, implying that all fixed parameters must be declared before providing initial values. ```; ROOT::Math::Minimizer* minimum = ROOT::Math::Factory::CreateMinimizer(minName, algoName);. minimum->SetVariable(0,""x"",0.,0.);; minimum->SetVariable(1,""y"",0.,0.);. int nrow = 2;; std::vector<double> cov(nrow*(nrow+1)/2);; std::vector<double> d2(nrow);. for(int i = 0; i < nrow; i++) {; d2[i] = 0.1*(i+1);; for(int j = i;j< nrow;j++); cov[i + j * (j + 1) / 2] = (i==j) ? 0.1*(i+1) : 0.;; }. minimum->SetCovariance(cov,nrow);; // OR; //minimum->SetCovarianceDiag(d2,nrow);; ```. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16437
https://github.com/root-project/root/pull/16437:1488,Deployability,update,updated,1488,"# This Pull request:. Modifies Minuit2 interface to pass initial error/covariance matrix or second derivatives (G2) vector. ## Changes or fixes:. This PR exploits existing code in `MnSeedGenerator` and introduces some improvements, namely:; 1. Check whether provided matrix has positive diagonal (G2 must be positive) and larger than working precision `Eps`; if it is not the case, numerical computation is carried out.; 2. Disable `NegativeG2LineSearch` whenever point 1 is satisfied. Furthermore, this PR provides an interface to pass the error/covariance matrix or second derivatives (G2) vector via `ROOT::Math::Minimizer`. The user can provide either the error/covariance matrix in compressed format (column-major upper triangular part), OR the g2 vector, see the code snippet below. The matrix or second derivatives must take into account only variable parameters, implying that all fixed parameters must be declared before providing initial values. ```; ROOT::Math::Minimizer* minimum = ROOT::Math::Factory::CreateMinimizer(minName, algoName);. minimum->SetVariable(0,""x"",0.,0.);; minimum->SetVariable(1,""y"",0.,0.);. int nrow = 2;; std::vector<double> cov(nrow*(nrow+1)/2);; std::vector<double> d2(nrow);. for(int i = 0; i < nrow; i++) {; d2[i] = 0.1*(i+1);; for(int j = i;j< nrow;j++); cov[i + j * (j + 1) / 2] = (i==j) ? 0.1*(i+1) : 0.;; }. minimum->SetCovariance(cov,nrow);; // OR; //minimum->SetCovarianceDiag(d2,nrow);; ```. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16437
https://github.com/root-project/root/pull/16437:39,Integrability,interface,interface,39,"# This Pull request:. Modifies Minuit2 interface to pass initial error/covariance matrix or second derivatives (G2) vector. ## Changes or fixes:. This PR exploits existing code in `MnSeedGenerator` and introduces some improvements, namely:; 1. Check whether provided matrix has positive diagonal (G2 must be positive) and larger than working precision `Eps`; if it is not the case, numerical computation is carried out.; 2. Disable `NegativeG2LineSearch` whenever point 1 is satisfied. Furthermore, this PR provides an interface to pass the error/covariance matrix or second derivatives (G2) vector via `ROOT::Math::Minimizer`. The user can provide either the error/covariance matrix in compressed format (column-major upper triangular part), OR the g2 vector, see the code snippet below. The matrix or second derivatives must take into account only variable parameters, implying that all fixed parameters must be declared before providing initial values. ```; ROOT::Math::Minimizer* minimum = ROOT::Math::Factory::CreateMinimizer(minName, algoName);. minimum->SetVariable(0,""x"",0.,0.);; minimum->SetVariable(1,""y"",0.,0.);. int nrow = 2;; std::vector<double> cov(nrow*(nrow+1)/2);; std::vector<double> d2(nrow);. for(int i = 0; i < nrow; i++) {; d2[i] = 0.1*(i+1);; for(int j = i;j< nrow;j++); cov[i + j * (j + 1) / 2] = (i==j) ? 0.1*(i+1) : 0.;; }. minimum->SetCovariance(cov,nrow);; // OR; //minimum->SetCovarianceDiag(d2,nrow);; ```. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16437
https://github.com/root-project/root/pull/16437:519,Integrability,interface,interface,519,"# This Pull request:. Modifies Minuit2 interface to pass initial error/covariance matrix or second derivatives (G2) vector. ## Changes or fixes:. This PR exploits existing code in `MnSeedGenerator` and introduces some improvements, namely:; 1. Check whether provided matrix has positive diagonal (G2 must be positive) and larger than working precision `Eps`; if it is not the case, numerical computation is carried out.; 2. Disable `NegativeG2LineSearch` whenever point 1 is satisfied. Furthermore, this PR provides an interface to pass the error/covariance matrix or second derivatives (G2) vector via `ROOT::Math::Minimizer`. The user can provide either the error/covariance matrix in compressed format (column-major upper triangular part), OR the g2 vector, see the code snippet below. The matrix or second derivatives must take into account only variable parameters, implying that all fixed parameters must be declared before providing initial values. ```; ROOT::Math::Minimizer* minimum = ROOT::Math::Factory::CreateMinimizer(minName, algoName);. minimum->SetVariable(0,""x"",0.,0.);; minimum->SetVariable(1,""y"",0.,0.);. int nrow = 2;; std::vector<double> cov(nrow*(nrow+1)/2);; std::vector<double> d2(nrow);. for(int i = 0; i < nrow; i++) {; d2[i] = 0.1*(i+1);; for(int j = i;j< nrow;j++); cov[i + j * (j + 1) / 2] = (i==j) ? 0.1*(i+1) : 0.;; }. minimum->SetCovariance(cov,nrow);; // OR; //minimum->SetCovarianceDiag(d2,nrow);; ```. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16437
https://github.com/root-project/root/pull/16437:850,Modifiability,variab,variable,850,"# This Pull request:. Modifies Minuit2 interface to pass initial error/covariance matrix or second derivatives (G2) vector. ## Changes or fixes:. This PR exploits existing code in `MnSeedGenerator` and introduces some improvements, namely:; 1. Check whether provided matrix has positive diagonal (G2 must be positive) and larger than working precision `Eps`; if it is not the case, numerical computation is carried out.; 2. Disable `NegativeG2LineSearch` whenever point 1 is satisfied. Furthermore, this PR provides an interface to pass the error/covariance matrix or second derivatives (G2) vector via `ROOT::Math::Minimizer`. The user can provide either the error/covariance matrix in compressed format (column-major upper triangular part), OR the g2 vector, see the code snippet below. The matrix or second derivatives must take into account only variable parameters, implying that all fixed parameters must be declared before providing initial values. ```; ROOT::Math::Minimizer* minimum = ROOT::Math::Factory::CreateMinimizer(minName, algoName);. minimum->SetVariable(0,""x"",0.,0.);; minimum->SetVariable(1,""y"",0.,0.);. int nrow = 2;; std::vector<double> cov(nrow*(nrow+1)/2);; std::vector<double> d2(nrow);. for(int i = 0; i < nrow; i++) {; d2[i] = 0.1*(i+1);; for(int j = i;j< nrow;j++); cov[i + j * (j + 1) / 2] = (i==j) ? 0.1*(i+1) : 0.;; }. minimum->SetCovariance(cov,nrow);; // OR; //minimum->SetCovarianceDiag(d2,nrow);; ```. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16437
https://github.com/root-project/root/pull/16437:1458,Testability,test,tested,1458,"# This Pull request:. Modifies Minuit2 interface to pass initial error/covariance matrix or second derivatives (G2) vector. ## Changes or fixes:. This PR exploits existing code in `MnSeedGenerator` and introduces some improvements, namely:; 1. Check whether provided matrix has positive diagonal (G2 must be positive) and larger than working precision `Eps`; if it is not the case, numerical computation is carried out.; 2. Disable `NegativeG2LineSearch` whenever point 1 is satisfied. Furthermore, this PR provides an interface to pass the error/covariance matrix or second derivatives (G2) vector via `ROOT::Math::Minimizer`. The user can provide either the error/covariance matrix in compressed format (column-major upper triangular part), OR the g2 vector, see the code snippet below. The matrix or second derivatives must take into account only variable parameters, implying that all fixed parameters must be declared before providing initial values. ```; ROOT::Math::Minimizer* minimum = ROOT::Math::Factory::CreateMinimizer(minName, algoName);. minimum->SetVariable(0,""x"",0.,0.);; minimum->SetVariable(1,""y"",0.,0.);. int nrow = 2;; std::vector<double> cov(nrow*(nrow+1)/2);; std::vector<double> d2(nrow);. for(int i = 0; i < nrow; i++) {; d2[i] = 0.1*(i+1);; for(int j = i;j< nrow;j++); cov[i + j * (j + 1) / 2] = (i==j) ? 0.1*(i+1) : 0.;; }. minimum->SetCovariance(cov,nrow);; // OR; //minimum->SetCovarianceDiag(d2,nrow);; ```. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16437
https://github.com/root-project/root/pull/16438:1094,Deployability,update,updated,1094,"# This Pull request:. - Replace all occurrences of TextInput with LLVM's LineEditor library in `CLING`. This moves the codebase closer to clang-repl and might help in future changes. This will help in removing this whole folder from `CLING` - https://github.com/root-project/cling/tree/master/lib/UserInterface/textinput, but this doesn't exist in the `ROOT` repository.; - Corresponding replacement should also be made in `ROOT` for complete removal of TextInput, working on it. Will not be as straightforward as this.; - LineEditor does not support setting history size manually (with `CLING_HISTSIZE`). For now added this functionality in LLVM; Can later upstream or deprecate this functionality (clang-repl does not have this feature, AFAIK). But ROOT might be relying on this feature - need to look into it. Diff LLVM will fail due to this.; - A couple of tests were adjusted to make the tests pass.; - I tried to keep the changes minimal, so we get a proper diff. It can be made more similar to `clang-repl` later. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16438
https://github.com/root-project/root/pull/16438:861,Testability,test,tests,861,"# This Pull request:. - Replace all occurrences of TextInput with LLVM's LineEditor library in `CLING`. This moves the codebase closer to clang-repl and might help in future changes. This will help in removing this whole folder from `CLING` - https://github.com/root-project/cling/tree/master/lib/UserInterface/textinput, but this doesn't exist in the `ROOT` repository.; - Corresponding replacement should also be made in `ROOT` for complete removal of TextInput, working on it. Will not be as straightforward as this.; - LineEditor does not support setting history size manually (with `CLING_HISTSIZE`). For now added this functionality in LLVM; Can later upstream or deprecate this functionality (clang-repl does not have this feature, AFAIK). But ROOT might be relying on this feature - need to look into it. Diff LLVM will fail due to this.; - A couple of tests were adjusted to make the tests pass.; - I tried to keep the changes minimal, so we get a proper diff. It can be made more similar to `clang-repl` later. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16438
https://github.com/root-project/root/pull/16438:893,Testability,test,tests,893,"# This Pull request:. - Replace all occurrences of TextInput with LLVM's LineEditor library in `CLING`. This moves the codebase closer to clang-repl and might help in future changes. This will help in removing this whole folder from `CLING` - https://github.com/root-project/cling/tree/master/lib/UserInterface/textinput, but this doesn't exist in the `ROOT` repository.; - Corresponding replacement should also be made in `ROOT` for complete removal of TextInput, working on it. Will not be as straightforward as this.; - LineEditor does not support setting history size manually (with `CLING_HISTSIZE`). For now added this functionality in LLVM; Can later upstream or deprecate this functionality (clang-repl does not have this feature, AFAIK). But ROOT might be relying on this feature - need to look into it. Diff LLVM will fail due to this.; - A couple of tests were adjusted to make the tests pass.; - I tried to keep the changes minimal, so we get a proper diff. It can be made more similar to `clang-repl` later. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16438
https://github.com/root-project/root/pull/16438:1064,Testability,test,tested,1064,"# This Pull request:. - Replace all occurrences of TextInput with LLVM's LineEditor library in `CLING`. This moves the codebase closer to clang-repl and might help in future changes. This will help in removing this whole folder from `CLING` - https://github.com/root-project/cling/tree/master/lib/UserInterface/textinput, but this doesn't exist in the `ROOT` repository.; - Corresponding replacement should also be made in `ROOT` for complete removal of TextInput, working on it. Will not be as straightforward as this.; - LineEditor does not support setting history size manually (with `CLING_HISTSIZE`). For now added this functionality in LLVM; Can later upstream or deprecate this functionality (clang-repl does not have this feature, AFAIK). But ROOT might be relying on this feature - need to look into it. Diff LLVM will fail due to this.; - A couple of tests were adjusted to make the tests pass.; - I tried to keep the changes minimal, so we get a proper diff. It can be made more similar to `clang-repl` later. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16438
https://github.com/root-project/root/pull/16439:110,Deployability,update,update,110,It is most probable place where new canvases are created or existing are modified. ; Therefore need check for update. Simple workaround for some macros execution,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16439
https://github.com/root-project/root/pull/16439:118,Usability,Simpl,Simple,118,It is most probable place where new canvases are created or existing are modified. ; Therefore need check for update. Simple workaround for some macros execution,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16439
https://github.com/root-project/root/pull/16441:101,Deployability,update,update,101,It is most probable place where new canvases are created or existing are modified. Therefore need to update.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16441
https://github.com/root-project/root/pull/16442:271,Energy Efficiency,consumption,consumption,271,"This commit provides a rewrite of key functions of TGeoParallelWorld, achieving: . (a) faster initialization; (b) faster execution of the Safety function (from ~O(N) to ~O(1)) ; (c) faster or equal execution of FindNode/FindBoundary functions (~log(N)) ; (d) less memory consumption (better memory scalability). The development for this commit was motivated from a use case in ALICE, in which the parallel world ""scene"" can be very large (~100K volumes). In this case, TGeoVoxelFinder takes very long; to construct and consumes a very large amount of memory (GBs). In addition, the evaluation of the Safety function dominates the Geant simulation time. The improvements in this commit are mainly achieved through:. * The use of a boundary volume hierarchy (BVH) as the base acceleration entity, replacing TGeoVoxelFinder.; BVH are the standard in industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16442
https://github.com/root-project/root/pull/16442:1201,Energy Efficiency,reduce,reduce,1201," ; (d) less memory consumption (better memory scalability). The development for this commit was motivated from a use case in ALICE, in which the parallel world ""scene"" can be very large (~100K volumes). In this case, TGeoVoxelFinder takes very long; to construct and consumes a very large amount of memory (GBs). In addition, the evaluation of the Safety function dominates the Geant simulation time. The improvements in this commit are mainly achieved through:. * The use of a boundary volume hierarchy (BVH) as the base acceleration entity, replacing TGeoVoxelFinder.; BVH are the standard in industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16442
https://github.com/root-project/root/pull/16442:2954,Integrability,rout,routines,2954,"Boundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid container. ----. Performance examples:. In a test with the ALICE simulation framework including the ITS + TPC detectors with 48240 volumes on the parallel world, we see. * initialization time goes from TGeoVoxelFinder: 10s ---> BVH: 40ms; * Geant simulation time: 10s --> 2s; * memory usage: 3GB --> 1GB. Hence, this PR will make a big difference for the ALICE simulation program. It was verified, that identical results (number of hits, steps, etc) are obtained when going from TGeoVoxelFinder --> BVH+GRID. ----. Outlook:. Similar techniques could be applied to ordinary TGeoNavigator routines. Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16442
https://github.com/root-project/root/pull/16442:23,Modifiability,rewrite,rewrite,23,"This commit provides a rewrite of key functions of TGeoParallelWorld, achieving: . (a) faster initialization; (b) faster execution of the Safety function (from ~O(N) to ~O(1)) ; (c) faster or equal execution of FindNode/FindBoundary functions (~log(N)) ; (d) less memory consumption (better memory scalability). The development for this commit was motivated from a use case in ALICE, in which the parallel world ""scene"" can be very large (~100K volumes). In this case, TGeoVoxelFinder takes very long; to construct and consumes a very large amount of memory (GBs). In addition, the evaluation of the Safety function dominates the Geant simulation time. The improvements in this commit are mainly achieved through:. * The use of a boundary volume hierarchy (BVH) as the base acceleration entity, replacing TGeoVoxelFinder.; BVH are the standard in industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16442
https://github.com/root-project/root/pull/16442:1863,Modifiability,variab,variable,1863," industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid container. ----. Performance examples:. In a test with the ALICE simulation framework including the ITS + TPC detectors with 48240 volumes on the parallel world, we see. * initialization time goes from TGeoVoxelFinder: 10s ---> BVH: 40ms; * Geant simulation time: 10s --> 2s; * memory usage: 3GB --> 1GB. Hence, this PR will make a big difference for the ALICE simulation program. It was verified, that identical results (number of hits, steps, etc) are obtained when going from T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16442
https://github.com/root-project/root/pull/16442:298,Performance,scalab,scalability,298,"This commit provides a rewrite of key functions of TGeoParallelWorld, achieving: . (a) faster initialization; (b) faster execution of the Safety function (from ~O(N) to ~O(1)) ; (c) faster or equal execution of FindNode/FindBoundary functions (~log(N)) ; (d) less memory consumption (better memory scalability). The development for this commit was motivated from a use case in ALICE, in which the parallel world ""scene"" can be very large (~100K volumes). In this case, TGeoVoxelFinder takes very long; to construct and consumes a very large amount of memory (GBs). In addition, the evaluation of the Safety function dominates the Geant simulation time. The improvements in this commit are mainly achieved through:. * The use of a boundary volume hierarchy (BVH) as the base acceleration entity, replacing TGeoVoxelFinder.; BVH are the standard in industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16442
https://github.com/root-project/root/pull/16442:1359,Performance,cache,cache,1359,"e in ALICE, in which the parallel world ""scene"" can be very large (~100K volumes). In this case, TGeoVoxelFinder takes very long; to construct and consumes a very large amount of memory (GBs). In addition, the evaluation of the Safety function dominates the Geant simulation time. The improvements in this commit are mainly achieved through:. * The use of a boundary volume hierarchy (BVH) as the base acceleration entity, replacing TGeoVoxelFinder.; BVH are the standard in industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid contai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16442
https://github.com/root-project/root/pull/16442:2384,Performance,Perform,Performance,2384,"Boundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid container. ----. Performance examples:. In a test with the ALICE simulation framework including the ITS + TPC detectors with 48240 volumes on the parallel world, we see. * initialization time goes from TGeoVoxelFinder: 10s ---> BVH: 40ms; * Geant simulation time: 10s --> 2s; * memory usage: 3GB --> 1GB. Hence, this PR will make a big difference for the ALICE simulation program. It was verified, that identical results (number of hits, steps, etc) are obtained when going from TGeoVoxelFinder --> BVH+GRID. ----. Outlook:. Similar techniques could be applied to ordinary TGeoNavigator routines. Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16442
https://github.com/root-project/root/pull/16442:138,Safety,Safe,Safety,138,"This commit provides a rewrite of key functions of TGeoParallelWorld, achieving: . (a) faster initialization; (b) faster execution of the Safety function (from ~O(N) to ~O(1)) ; (c) faster or equal execution of FindNode/FindBoundary functions (~log(N)) ; (d) less memory consumption (better memory scalability). The development for this commit was motivated from a use case in ALICE, in which the parallel world ""scene"" can be very large (~100K volumes). In this case, TGeoVoxelFinder takes very long; to construct and consumes a very large amount of memory (GBs). In addition, the evaluation of the Safety function dominates the Geant simulation time. The improvements in this commit are mainly achieved through:. * The use of a boundary volume hierarchy (BVH) as the base acceleration entity, replacing TGeoVoxelFinder.; BVH are the standard in industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16442
https://github.com/root-project/root/pull/16442:600,Safety,Safe,Safety,600,"This commit provides a rewrite of key functions of TGeoParallelWorld, achieving: . (a) faster initialization; (b) faster execution of the Safety function (from ~O(N) to ~O(1)) ; (c) faster or equal execution of FindNode/FindBoundary functions (~log(N)) ; (d) less memory consumption (better memory scalability). The development for this commit was motivated from a use case in ALICE, in which the parallel world ""scene"" can be very large (~100K volumes). In this case, TGeoVoxelFinder takes very long; to construct and consumes a very large amount of memory (GBs). In addition, the evaluation of the Safety function dominates the Geant simulation time. The improvements in this commit are mainly achieved through:. * The use of a boundary volume hierarchy (BVH) as the base acceleration entity, replacing TGeoVoxelFinder.; BVH are the standard in industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16442
https://github.com/root-project/root/pull/16442:1250,Safety,Safe,Safety,1250," ; (d) less memory consumption (better memory scalability). The development for this commit was motivated from a use case in ALICE, in which the parallel world ""scene"" can be very large (~100K volumes). In this case, TGeoVoxelFinder takes very long; to construct and consumes a very large amount of memory (GBs). In addition, the evaluation of the Safety function dominates the Geant simulation time. The improvements in this commit are mainly achieved through:. * The use of a boundary volume hierarchy (BVH) as the base acceleration entity, replacing TGeoVoxelFinder.; BVH are the standard in industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16442
https://github.com/root-project/root/pull/16442:1369,Safety,Safe,Safety,1369,"e in ALICE, in which the parallel world ""scene"" can be very large (~100K volumes). In this case, TGeoVoxelFinder takes very long; to construct and consumes a very large amount of memory (GBs). In addition, the evaluation of the Safety function dominates the Geant simulation time. The improvements in this commit are mainly achieved through:. * The use of a boundary volume hierarchy (BVH) as the base acceleration entity, replacing TGeoVoxelFinder.; BVH are the standard in industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid contai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16442
https://github.com/root-project/root/pull/16442:1464,Safety,safe,safety,1464,"er takes very long; to construct and consumes a very large amount of memory (GBs). In addition, the evaluation of the Safety function dominates the Geant simulation time. The improvements in this commit are mainly achieved through:. * The use of a boundary volume hierarchy (BVH) as the base acceleration entity, replacing TGeoVoxelFinder.; BVH are the standard in industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid container. ----. Performance examples:. In a test with the ALICE simulation framework including the ITS + TPC detect",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16442
https://github.com/root-project/root/pull/16442:1943,Safety,Safe,Safety,1943,"ing boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid container. ----. Performance examples:. In a test with the ALICE simulation framework including the ITS + TPC detectors with 48240 volumes on the parallel world, we see. * initialization time goes from TGeoVoxelFinder: 10s ---> BVH: 40ms; * Geant simulation time: 10s --> 2s; * memory usage: 3GB --> 1GB. Hence, this PR will make a big difference for the ALICE simulation program. It was verified, that identical results (number of hits, steps, etc) are obtained when going from TGeoVoxelFinder --> BVH+GRID. ----. Outlook:. Similar techniques could be applied to ordinary TGeoNavigator routines. Checkli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16442
https://github.com/root-project/root/pull/16442:2477,Safety,detect,detectors,2477,"Boundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid container. ----. Performance examples:. In a test with the ALICE simulation framework including the ITS + TPC detectors with 48240 volumes on the parallel world, we see. * initialization time goes from TGeoVoxelFinder: 10s ---> BVH: 40ms; * Geant simulation time: 10s --> 2s; * memory usage: 3GB --> 1GB. Hence, this PR will make a big difference for the ALICE simulation program. It was verified, that identical results (number of hits, steps, etc) are obtained when going from TGeoVoxelFinder --> BVH+GRID. ----. Outlook:. Similar techniques could be applied to ordinary TGeoNavigator routines. Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16442
https://github.com/root-project/root/pull/16442:2089,Security,validat,validated,2089,"Boundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid container. ----. Performance examples:. In a test with the ALICE simulation framework including the ITS + TPC detectors with 48240 volumes on the parallel world, we see. * initialization time goes from TGeoVoxelFinder: 10s ---> BVH: 40ms; * Geant simulation time: 10s --> 2s; * memory usage: 3GB --> 1GB. Hence, this PR will make a big difference for the ALICE simulation program. It was verified, that identical results (number of hits, steps, etc) are obtained when going from TGeoVoxelFinder --> BVH+GRID. ----. Outlook:. Similar techniques could be applied to ordinary TGeoNavigator routines. Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16442
https://github.com/root-project/root/pull/16442:245,Testability,log,log,245,"This commit provides a rewrite of key functions of TGeoParallelWorld, achieving: . (a) faster initialization; (b) faster execution of the Safety function (from ~O(N) to ~O(1)) ; (c) faster or equal execution of FindNode/FindBoundary functions (~log(N)) ; (d) less memory consumption (better memory scalability). The development for this commit was motivated from a use case in ALICE, in which the parallel world ""scene"" can be very large (~100K volumes). In this case, TGeoVoxelFinder takes very long; to construct and consumes a very large amount of memory (GBs). In addition, the evaluation of the Safety function dominates the Geant simulation time. The improvements in this commit are mainly achieved through:. * The use of a boundary volume hierarchy (BVH) as the base acceleration entity, replacing TGeoVoxelFinder.; BVH are the standard in industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16442
https://github.com/root-project/root/pull/16442:1716,Testability,test,tested,1716,"he use of a boundary volume hierarchy (BVH) as the base acceleration entity, replacing TGeoVoxelFinder.; BVH are the standard in industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid container. ----. Performance examples:. In a test with the ALICE simulation framework including the ITS + TPC detectors with 48240 volumes on the parallel world, we see. * initialization time goes from TGeoVoxelFinder: 10s ---> BVH: 40ms; * Geant simulation time: 10s --> 2s; * memory usage: 3GB --> 1GB. Hence, this PR will make a big difference for ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16442
https://github.com/root-project/root/pull/16442:2412,Testability,test,test,2412,"Boundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid container. ----. Performance examples:. In a test with the ALICE simulation framework including the ITS + TPC detectors with 48240 volumes on the parallel world, we see. * initialization time goes from TGeoVoxelFinder: 10s ---> BVH: 40ms; * Geant simulation time: 10s --> 2s; * memory usage: 3GB --> 1GB. Hence, this PR will make a big difference for the ALICE simulation program. It was verified, that identical results (number of hits, steps, etc) are obtained when going from TGeoVoxelFinder --> BVH+GRID. ----. Outlook:. Similar techniques could be applied to ordinary TGeoNavigator routines. Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16442
https://github.com/root-project/root/pull/16442:2982,Testability,test,tested,2982,"Boundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid container. ----. Performance examples:. In a test with the ALICE simulation framework including the ITS + TPC detectors with 48240 volumes on the parallel world, we see. * initialization time goes from TGeoVoxelFinder: 10s ---> BVH: 40ms; * Geant simulation time: 10s --> 2s; * memory usage: 3GB --> 1GB. Hence, this PR will make a big difference for the ALICE simulation program. It was verified, that identical results (number of hits, steps, etc) are obtained when going from TGeoVoxelFinder --> BVH+GRID. ----. Outlook:. Similar techniques could be applied to ordinary TGeoNavigator routines. Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16442
https://github.com/root-project/root/pull/16444:486,Deployability,Update,Update,486,"When ROOT macros running, they typically create canvas ""c1"".; If run macro again and again - new canvas will be created but old will be deleted.; This was not handled before in RBrowser.; Now widget is closed if correspondent RWebWindow is destroyed. Also change logic how TCanvas widget handle canvas pointer.; While ROOT manage canvas itself one cannot use `std::unique_ptr<TCanvas>` to hold pointer.; Instead canvas always searched by name and if gone - widget automatically closed. Update slightly client part",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16444
https://github.com/root-project/root/pull/16444:263,Testability,log,logic,263,"When ROOT macros running, they typically create canvas ""c1"".; If run macro again and again - new canvas will be created but old will be deleted.; This was not handled before in RBrowser.; Now widget is closed if correspondent RWebWindow is destroyed. Also change logic how TCanvas widget handle canvas pointer.; While ROOT manage canvas itself one cannot use `std::unique_ptr<TCanvas>` to hold pointer.; Instead canvas always searched by name and if gone - widget automatically closed. Update slightly client part",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16444
https://github.com/root-project/root/pull/16445:161,Availability,error,error,161,Seen while building latest master with -Dasan=ON. ```; /home/vpadulan/Programs/rootproject/rootbuild/master-2024-09-16-testing-asan/include/ROOT/RVec.hxx:515:4: error: non-stati; c data member cannot be constexpr; did you intend to make it static?; constexpr std::size_t cacheLineSize = std::hardware_destructive_interference_size;; ^; static; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16445
https://github.com/root-project/root/pull/16445:271,Performance,cache,cacheLineSize,271,Seen while building latest master with -Dasan=ON. ```; /home/vpadulan/Programs/rootproject/rootbuild/master-2024-09-16-testing-asan/include/ROOT/RVec.hxx:515:4: error: non-stati; c data member cannot be constexpr; did you intend to make it static?; constexpr std::size_t cacheLineSize = std::hardware_destructive_interference_size;; ^; static; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16445
https://github.com/root-project/root/pull/16445:119,Testability,test,testing-asan,119,Seen while building latest master with -Dasan=ON. ```; /home/vpadulan/Programs/rootproject/rootbuild/master-2024-09-16-testing-asan/include/ROOT/RVec.hxx:515:4: error: non-stati; c data member cannot be constexpr; did you intend to make it static?; constexpr std::size_t cacheLineSize = std::hardware_destructive_interference_size;; ^; static; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16445
https://github.com/root-project/root/issues/16449:95,Availability,error,error,95,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I get the following error while building ROOT from scratch on macOS Sequoia **and** XCode 16:. ```; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: [7737/10283] Generating G__Core.cxx, ../lib/Core.pcm; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: FAILED: core/G__Core.cxx lib/Core.pcm /Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/core/G__Core.cxx /Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/lib/Core.pcm; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: cd /Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/core && /opt/homebrew/Cellar/cmake/3.30.3/bin/cmake -E env LD_LIBRARY_PATH=/Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/lib:/Users/ktf/src/sw/osx_arm64/pythia/v8311-local1/lib:/Users/ktf/src/sw/osx_arm64/HepMC/HEPMC_02_06_10-local1/lib:/Users/ktf/src/sw/osx_arm64/lhapdf/v6.5.2-local1/lib:/Users/ktf/src/sw/osx_arm64/Vc/1.4.1-local1/lib:/Users/ktf/src/sw/osx_arm64/FFTW3/v3.3.9-local1/lib:/Users/ktf/src/sw/osx_arm64/TBB/v2021.5.0-local1/lib:/Users/ktf/src/sw/osx_arm64/XRootD/v5.7.0-local1/lib:/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local1/lib:/Users/ktf/src/sw/osx_arm64/Python-modules-list/1.0-local1/lib:/Users/ktf/src/sw/osx_arm64/hdf5/1.10.9-local1/lib:/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local1/lib:/Users/ktf/src/sw/osx_arm64/UUID/v2.27.1-local1/lib:/Users/ktf/src/sw/osx_arm64/ApMon-CPP/master-local1/lib:/Users/ktf/src/sw/osx_arm64/AliEn-CAs/v1-local1/lib:/Users/ktf/src/sw/osx_arm64/arrow/v17.0.0-alice6-local1/lib:/Users/ktf/src/sw/osx_arm64/re2/2019-09-01-local1/lib:/Users/ktf/src/sw/osx_arm64/double-conversion/v3.1.5-local1/lib:/Users/ktf/src/sw/osx_arm64/RapidJSON/v1.1.0-alice2-local1/lib:/Users/ktf/src/sw/osx_arm64/flatbuffers/v24.3.25-local1/lib:/Users/ktf/src/sw/osx_arm64/ninja/fortran-v1.11.1.g9-local1/lib:/Users/ktf/src/sw/osx_arm64/xsimd/8.1.0-local1/lib:/Users/ktf/src/sw/osx_arm64/utf8proc/v2.6.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16449
https://github.com/root-project/root/issues/16449:9756,Availability,error,error,9756,SXSystem.h TUnixSystem.h /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/core/base/inc/LinkDef.h; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <ctype.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <_types/_wctrans_t.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/algorithm:1804:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Develope,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16449
https://github.com/root-project/root/issues/16449:10107,Availability,error,error,10107,orted from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <ctype.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <_types/_wctrans_t.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/algorithm:1804:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/find.h:31:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cwchar:112:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file include,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16449
https://github.com/root-project/root/issues/16449:11645,Availability,error,error,11645,de/c++/v1/algorithm:1804:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/find.h:31:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cwchar:112:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cwctype:56:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/wctype.h:68:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <_wctype.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '_wchar' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wchar.h:67:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wchar.h:76:10: fatal error: could not build module '__wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <sys/_types/_mbstate_t.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: input_line_1:1:10: fatal error: could not build module 's,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16449
https://github.com/root-project/root/issues/16449:12424,Availability,error,error,12424,"8:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <_wctype.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '_wchar' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wchar.h:67:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wchar.h:76:10: fatal error: could not build module '__wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <sys/_types/_mbstate_t.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: input_line_1:1:10: fatal error: could not build module 'std'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <new>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Warning in cling::IncrementalParser::CheckABICompatibility():; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Failed to extract C++ standard library version.; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Warning in cling::IncrementalParser::CheckABICompatibility():; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Extraction of runtime standard library version was: ''; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Cling_Runtime' imported from input_line",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16449
https://github.com/root-project/root/issues/16449:12655,Availability,error,error,12655,"13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '_wchar' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wchar.h:67:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wchar.h:76:10: fatal error: could not build module '__wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <sys/_types/_mbstate_t.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: input_line_1:1:10: fatal error: could not build module 'std'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <new>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Warning in cling::IncrementalParser::CheckABICompatibility():; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Failed to extract C++ standard library version.; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Warning in cling::IncrementalParser::CheckABICompatibility():; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Extraction of runtime standard library version was: ''; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Cling_Runtime' imported from input_line_2:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Cling_Runtime_Extra' imported from /Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/etc/cling/Interpreter/RuntimeUniverse.h:27:; ```. ### Reproducer. Simply compiling ROOT is enough. ### ROOT versio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16449
https://github.com/root-project/root/issues/16449:2282,Deployability,release,release,2282,rc/sw/osx_arm64/AliEn-Runtime/v2-19-le-local1/lib:/Users/ktf/src/sw/osx_arm64/UUID/v2.27.1-local1/lib:/Users/ktf/src/sw/osx_arm64/ApMon-CPP/master-local1/lib:/Users/ktf/src/sw/osx_arm64/AliEn-CAs/v1-local1/lib:/Users/ktf/src/sw/osx_arm64/arrow/v17.0.0-alice6-local1/lib:/Users/ktf/src/sw/osx_arm64/re2/2019-09-01-local1/lib:/Users/ktf/src/sw/osx_arm64/double-conversion/v3.1.5-local1/lib:/Users/ktf/src/sw/osx_arm64/RapidJSON/v1.1.0-alice2-local1/lib:/Users/ktf/src/sw/osx_arm64/flatbuffers/v24.3.25-local1/lib:/Users/ktf/src/sw/osx_arm64/ninja/fortran-v1.11.1.g9-local1/lib:/Users/ktf/src/sw/osx_arm64/xsimd/8.1.0-local1/lib:/Users/ktf/src/sw/osx_arm64/utf8proc/v2.6.1-local1/lib:/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1/lib:/Users/ktf/src/sw/osx_arm64/boost/v1.83.0-alice2-local1/lib:/Users/ktf/src/sw/osx_arm64/alibuild-recipe-tools/0.2.5-local1/lib:/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1/lib:/Users/ktf/src/sw/osx_arm64/defaults-release/v1-local1/lib /Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/lib/libCore.so -excludePath /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0 -excludePath /Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/ginclude -excludePath /Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/externals -excludePath /Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -DR__ARC4_STDLIB -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1 -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16449
https://github.com/root-project/root/issues/16449:13789,Deployability,Install,Installation,13789,"OOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '_wchar' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wchar.h:67:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wchar.h:76:10: fatal error: could not build module '__wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <sys/_types/_mbstate_t.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: input_line_1:1:10: fatal error: could not build module 'std'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <new>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Warning in cling::IncrementalParser::CheckABICompatibility():; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Failed to extract C++ standard library version.; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Warning in cling::IncrementalParser::CheckABICompatibility():; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Extraction of runtime standard library version was: ''; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Cling_Runtime' imported from input_line_2:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Cling_Runtime_Extra' imported from /Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/etc/cling/Interpreter/RuntimeUniverse.h:27:; ```. ### Reproducer. Simply compiling ROOT is enough. ### ROOT version. 6.32.00 and 6.32.04. ### Installation method. aliBuild. ### Operating system. macOS Sequoia. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16449
https://github.com/root-project/root/issues/16449:6155,Integrability,Message,MessageTypes,6155,-04/0/core/thread/inc -I/Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/core/zip/inc -I/Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/core/lzma/inc -I/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1/include -I/Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/core/lz4/inc -I/Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/core/zstd/inc -I/opt/homebrew/include -I/Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/core/macosx/inc -I/Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/core/unix/inc -I/Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/core/unix/../clib/res -I/Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include -I/Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/builtins/xxhash ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMapFile.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16449
https://github.com/root-project/root/issues/16449:9770,Integrability,depend,dependency,9770,SXSystem.h TUnixSystem.h /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/core/base/inc/LinkDef.h; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <ctype.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <_types/_wctrans_t.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/algorithm:1804:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Develope,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16449
https://github.com/root-project/root/issues/16449:13713,Usability,Simpl,Simply,13713,"OOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '_wchar' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wchar.h:67:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wchar.h:76:10: fatal error: could not build module '__wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <sys/_types/_mbstate_t.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: input_line_1:1:10: fatal error: could not build module 'std'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <new>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Warning in cling::IncrementalParser::CheckABICompatibility():; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Failed to extract C++ standard library version.; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Warning in cling::IncrementalParser::CheckABICompatibility():; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Extraction of runtime standard library version was: ''; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Cling_Runtime' imported from input_line_2:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Cling_Runtime_Extra' imported from /Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/etc/cling/Interpreter/RuntimeUniverse.h:27:; ```. ### Reproducer. Simply compiling ROOT is enough. ### ROOT version. 6.32.00 and 6.32.04. ### Installation method. aliBuild. ### Operating system. macOS Sequoia. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16449
https://github.com/root-project/root/issues/16451:263,Availability,error,errors,263,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. I did the following:; ```; git clone https://github.com/root-project/root.git ; mkdir root-build; cd root-build; cmake ../root; make -j8; ```; And I get the following while building cling errors:; ```; [ 76%] Generating G__Core.cxx, ../lib/Core.pcm; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; input_line_1:1:10: note: submodule of top-level module 'std' implicitly imported here; #include <new>; ^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:389,Availability,error,error,389,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. I did the following:; ```; git clone https://github.com/root-project/root.git ; mkdir root-build; cd root-build; cmake ../root; make -j8; ```; And I get the following while building cling errors:; ```; [ 76%] Generating G__Core.cxx, ../lib/Core.pcm; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; input_line_1:1:10: note: submodule of top-level module 'std' implicitly imported here; #include <new>; ^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:1158,Availability,error,error,1158,"; ```; And I get the following while building cling errors:; ```; [ 76%] Generating G__Core.cxx, ../lib/Core.pcm; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; input_line_1:1:10: note: submodule of top-level module 'std' implicitly imported here; #include <new>; ^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:1453,Availability,error,error,1453,"eckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Int",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:1815,Availability,error,error,1815,"ding module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:15:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint> // for uintptr_t; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:152:23: error: use of undeclared identifier 'uintptr_t'; return (T) (uintptr_t) V.getAs<void",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:2136,Availability,error,error,2136,"rInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:15:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint> // for uintptr_t; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:152:23: error: use of undeclared identifier 'uintptr_t'; return (T) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:166:24: error: use of undeclared identifier 'uintptr_t'; return (T*) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:313:25: error: use of undeclared identifier 'uintptr_t'; return (void*)getAs<uintptr_t>();; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:2496,Availability,error,error,2496,"'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:15:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint> // for uintptr_t; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:152:23: error: use of undeclared identifier 'uintptr_t'; return (T) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:166:24: error: use of undeclared identifier 'uintptr_t'; return (T*) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:313:25: error: use of undeclared identifier 'uintptr_t'; return (void*)getAs<uintptr_t>();; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:2791,Availability,error,error,2791,"eader 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:15:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint> // for uintptr_t; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:152:23: error: use of undeclared identifier 'uintptr_t'; return (T) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:166:24: error: use of undeclared identifier 'uintptr_t'; return (T*) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:313:25: error: use of undeclared identifier 'uintptr_t'; return (void*)getAs<uintptr_t>();; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/couet/git/root-bin/include/Rtypes.h:23:; /Users/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:2949,Availability,error,error,2949,"op-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:15:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint> // for uintptr_t; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:152:23: error: use of undeclared identifier 'uintptr_t'; return (T) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:166:24: error: use of undeclared identifier 'uintptr_t'; return (T*) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:313:25: error: use of undeclared identifier 'uintptr_t'; return (void*)getAs<uintptr_t>();; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/couet/git/root-bin/include/Rtypes.h:23:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/RtypesCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:3108,Availability,error,error,3108,"odule 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:15:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint> // for uintptr_t; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:152:23: error: use of undeclared identifier 'uintptr_t'; return (T) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:166:24: error: use of undeclared identifier 'uintptr_t'; return (T*) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:313:25: error: use of undeclared identifier 'uintptr_t'; return (void*)getAs<uintptr_t>();; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/couet/git/root-bin/include/Rtypes.h:23:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; In file included from input_line_3:2:; /Users/couet/git/root-bin/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include """,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:3418,Availability,error,error,3418,"n/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:15:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint> // for uintptr_t; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:152:23: error: use of undeclared identifier 'uintptr_t'; return (T) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:166:24: error: use of undeclared identifier 'uintptr_t'; return (T*) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:313:25: error: use of undeclared identifier 'uintptr_t'; return (void*)getAs<uintptr_t>();; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/couet/git/root-bin/include/Rtypes.h:23:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; In file included from input_line_3:2:; /Users/couet/git/root-bin/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /Users/couet/git/root-bin/include/Rtypes.h:29:; In file included from <module-in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:3581,Availability,error,error,3581,"/Interpreter/Value.h:15:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint> // for uintptr_t; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:152:23: error: use of undeclared identifier 'uintptr_t'; return (T) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:166:24: error: use of undeclared identifier 'uintptr_t'; return (T*) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:313:25: error: use of undeclared identifier 'uintptr_t'; return (void*)getAs<uintptr_t>();; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/couet/git/root-bin/include/Rtypes.h:23:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; In file included from input_line_3:2:; /Users/couet/git/root-bin/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /Users/couet/git/root-bin/include/Rtypes.h:29:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:3880,Availability,error,error,3880,"erpreter/Value.h:166:24: error: use of undeclared identifier 'uintptr_t'; return (T*) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:313:25: error: use of undeclared identifier 'uintptr_t'; return (void*)getAs<uintptr_t>();; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/couet/git/root-bin/include/Rtypes.h:23:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; In file included from input_line_3:2:; /Users/couet/git/root-bin/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /Users/couet/git/root-bin/include/Rtypes.h:29:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:4196,Availability,error,error,4196,"e':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/couet/git/root-bin/include/Rtypes.h:23:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; In file included from input_line_3:2:; /Users/couet/git/root-bin/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /Users/couet/git/root-bin/include/Rtypes.h:29:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:31:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:4537,Availability,error,error,4537,"line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/couet/git/root-bin/include/Rtypes.h:23:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; In file included from input_line_3:2:; /Users/couet/git/root-bin/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /Users/couet/git/root-bin/include/Rtypes.h:29:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:31:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:32:10: note: submodule of top-level module 'std' implicitly imported here; #include <vector>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:4843,Availability,error,error,4843,"header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; In file included from input_line_3:2:; /Users/couet/git/root-bin/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /Users/couet/git/root-bin/include/Rtypes.h:29:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:31:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:32:10: note: submodule of top-level module 'std' implicitly imported here; #include <vector>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:33:10: note: submodule of top-level module 'std' implicitly imported here; #include <array>; ^; While bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:5259,Availability,error,error,5259,"g module 'Core':; While building module 'ROOT_Foundation_C' imported from /Users/couet/git/root-bin/include/Rtypes.h:29:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:31:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:32:10: note: submodule of top-level module 'std' implicitly imported here; #include <vector>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:33:10: note: submodule of top-level module 'std' implicitly imported here; #include <array>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:34:10: note: submodule of top-level module 'std' implicitly imported here; #include <typeinfo>; ^; While b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:5675,Availability,error,error,5675,"orted from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:31:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:32:10: note: submodule of top-level module 'std' implicitly imported here; #include <vector>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:33:10: note: submodule of top-level module 'std' implicitly imported here; #include <array>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:34:10: note: submodule of top-level module 'std' implicitly imported here; #include <typeinfo>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string_view>; ^; /U",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:6090,Availability,error,error,6090,"ported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:32:10: note: submodule of top-level module 'std' implicitly imported here; #include <vector>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:33:10: note: submodule of top-level module 'std' implicitly imported here; #include <array>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:34:10: note: submodule of top-level module 'std' implicitly imported here; #include <typeinfo>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string_view>; ^; /Users/couet/git/root-bin/include/TClassEdit.h:126:49: error: no type named 'string' in namespace 'std'; virtual bool ExistingTypeCheck(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:127:43: error: no type named 'string' in namespace 'std'; std::string & /*result*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:128:51: error: no type named 'string' in namespac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:6508,Availability,error,error,6508,"rted from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:33:10: note: submodule of top-level module 'std' implicitly imported here; #include <array>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:34:10: note: submodule of top-level module 'std' implicitly imported here; #include <typeinfo>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string_view>; ^; /Users/couet/git/root-bin/include/TClassEdit.h:126:49: error: no type named 'string' in namespace 'std'; virtual bool ExistingTypeCheck(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:127:43: error: no type named 'string' in namespace 'std'; std::string & /*result*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:128:51: error: no type named 'string' in namespace 'std'; virtual void GetPartiallyDesugaredName(std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:129:63: error: no type named 'string' in namespace 'std'; virtual bool IsAlreadyPartiallyDesugaredName(const std::string & /*nondef*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:130:63: error: no type named 'string' in namespace 'std'; const std::string & /*nameLong*/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:6772,Availability,error,error,6772," here; #include <array>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:34:10: note: submodule of top-level module 'std' implicitly imported here; #include <typeinfo>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string_view>; ^; /Users/couet/git/root-bin/include/TClassEdit.h:126:49: error: no type named 'string' in namespace 'std'; virtual bool ExistingTypeCheck(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:127:43: error: no type named 'string' in namespace 'std'; std::string & /*result*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:128:51: error: no type named 'string' in namespace 'std'; virtual void GetPartiallyDesugaredName(std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:129:63: error: no type named 'string' in namespace 'std'; virtual bool IsAlreadyPartiallyDesugaredName(const std::string & /*nondef*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:130:63: error: no type named 'string' in namespace 'std'; const std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:131:47: error: no type named 'string' in namespace 'std'; virtual bool IsDeclaredScope(const std::string & /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'strin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:6948,Availability,error,error,6948,"/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:34:10: note: submodule of top-level module 'std' implicitly imported here; #include <typeinfo>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string_view>; ^; /Users/couet/git/root-bin/include/TClassEdit.h:126:49: error: no type named 'string' in namespace 'std'; virtual bool ExistingTypeCheck(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:127:43: error: no type named 'string' in namespace 'std'; std::string & /*result*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:128:51: error: no type named 'string' in namespace 'std'; virtual void GetPartiallyDesugaredName(std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:129:63: error: no type named 'string' in namespace 'std'; virtual bool IsAlreadyPartiallyDesugaredName(const std::string & /*nondef*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:130:63: error: no type named 'string' in namespace 'std'; const std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:131:47: error: no type named 'string' in namespace 'std'; virtual bool IsDeclaredScope(const std::string & /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:7093,Availability,error,error,7093,"include/TClassEdit.h:34:10: note: submodule of top-level module 'std' implicitly imported here; #include <typeinfo>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string_view>; ^; /Users/couet/git/root-bin/include/TClassEdit.h:126:49: error: no type named 'string' in namespace 'std'; virtual bool ExistingTypeCheck(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:127:43: error: no type named 'string' in namespace 'std'; std::string & /*result*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:128:51: error: no type named 'string' in namespace 'std'; virtual void GetPartiallyDesugaredName(std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:129:63: error: no type named 'string' in namespace 'std'; virtual bool IsAlreadyPartiallyDesugaredName(const std::string & /*nondef*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:130:63: error: no type named 'string' in namespace 'std'; const std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:131:47: error: no type named 'string' in namespace 'std'; virtual bool IsDeclaredScope(const std::string & /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:7279,Availability,error,error,7279,"n_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string_view>; ^; /Users/couet/git/root-bin/include/TClassEdit.h:126:49: error: no type named 'string' in namespace 'std'; virtual bool ExistingTypeCheck(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:127:43: error: no type named 'string' in namespace 'std'; std::string & /*result*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:128:51: error: no type named 'string' in namespace 'std'; virtual void GetPartiallyDesugaredName(std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:129:63: error: no type named 'string' in namespace 'std'; virtual bool IsAlreadyPartiallyDesugaredName(const std::string & /*nondef*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:130:63: error: no type named 'string' in namespace 'std'; const std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:131:47: error: no type named 'string' in namespace 'std'; virtual bool IsDeclaredScope(const std::string & /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 's",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:7470,Availability,error,error,7470,"t found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string_view>; ^; /Users/couet/git/root-bin/include/TClassEdit.h:126:49: error: no type named 'string' in namespace 'std'; virtual bool ExistingTypeCheck(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:127:43: error: no type named 'string' in namespace 'std'; std::string & /*result*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:128:51: error: no type named 'string' in namespace 'std'; virtual void GetPartiallyDesugaredName(std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:129:63: error: no type named 'string' in namespace 'std'; virtual bool IsAlreadyPartiallyDesugaredName(const std::string & /*nondef*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:130:63: error: no type named 'string' in namespace 'std'; const std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:131:47: error: no type named 'string' in namespace 'std'; virtual bool IsDeclaredScope(const std::string & /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:7623,Availability,error,error,7623," ^; /Users/couet/git/root-bin/include/TClassEdit.h:126:49: error: no type named 'string' in namespace 'std'; virtual bool ExistingTypeCheck(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:127:43: error: no type named 'string' in namespace 'std'; std::string & /*result*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:128:51: error: no type named 'string' in namespace 'std'; virtual void GetPartiallyDesugaredName(std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:129:63: error: no type named 'string' in namespace 'std'; virtual bool IsAlreadyPartiallyDesugaredName(const std::string & /*nondef*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:130:63: error: no type named 'string' in namespace 'std'; const std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:131:47: error: no type named 'string' in namespace 'std'; virtual bool IsDeclaredScope(const std::string & /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:7823,Availability,error,error,7823,"t-bin/include/TClassEdit.h:127:43: error: no type named 'string' in namespace 'std'; std::string & /*result*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:128:51: error: no type named 'string' in namespace 'std'; virtual void GetPartiallyDesugaredName(std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:129:63: error: no type named 'string' in namespace 'std'; virtual bool IsAlreadyPartiallyDesugaredName(const std::string & /*nondef*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:130:63: error: no type named 'string' in namespace 'std'; const std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:131:47: error: no type named 'string' in namespace 'std'; virtual bool IsDeclaredScope(const std::string & /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:8024,Availability,error,error,8024,":128:51: error: no type named 'string' in namespace 'std'; virtual void GetPartiallyDesugaredName(std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:129:63: error: no type named 'string' in namespace 'std'; virtual bool IsAlreadyPartiallyDesugaredName(const std::string & /*nondef*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:130:63: error: no type named 'string' in namespace 'std'; const std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:131:47: error: no type named 'string' in namespace 'std'; virtual bool IsDeclaredScope(const std::string & /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:8164,Availability,error,error,8164,"couet/git/root-bin/include/TClassEdit.h:129:63: error: no type named 'string' in namespace 'std'; virtual bool IsAlreadyPartiallyDesugaredName(const std::string & /*nondef*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:130:63: error: no type named 'string' in namespace 'std'; const std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:131:47: error: no type named 'string' in namespace 'std'; virtual bool IsDeclaredScope(const std::string & /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespace 'std'; ROOT::ESTLType UnderlyingIsSTLCont(std::string_view type);; ~~~~~^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; E",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:8318,Availability,error,error,8318,":string & /*nondef*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:130:63: error: no type named 'string' in namespace 'std'; const std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:131:47: error: no type named 'string' in namespace 'std'; virtual bool IsDeclaredScope(const std::string & /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespace 'std'; ROOT::ESTLType UnderlyingIsSTLCont(std::string_view type);; ~~~~~^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:8470,Availability,error,error,8470,"/*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:131:47: error: no type named 'string' in namespace 'std'; virtual bool IsDeclaredScope(const std::string & /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespace 'std'; ROOT::ESTLType UnderlyingIsSTLCont(std::string_view type);; ~~~~~^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 76%] Built target MetaCling. ```; I have no problems on ARM. ### Reproducer. ```; git clone https://github.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:8630,Availability,error,error,8630," /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespace 'std'; ROOT::ESTLType UnderlyingIsSTLCont(std::string_view type);; ~~~~~^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 76%] Built target MetaCling. ```; I have no problems on ARM. ### Reproducer. ```; git clone https://github.com/root-project/root.git ; mkdir root-build; cd root-build; cmake ../root; make -j8; ```. ### ROOT version. master. ### Installation method. cmake / make. ### Operating system. Mac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:8831,Availability,error,error,8831,"include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespace 'std'; ROOT::ESTLType UnderlyingIsSTLCont(std::string_view type);; ~~~~~^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 76%] Built target MetaCling. ```; I have no problems on ARM. ### Reproducer. ```; git clone https://github.com/root-project/root.git ; mkdir root-build; cd root-build; cmake ../root; make -j8; ```. ### ROOT version. master. ### Installation method. cmake / make. ### Operating system. MacOS 15 (Sequoia) on Intel processor. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:9038,Availability,error,error,9038,"include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespace 'std'; ROOT::ESTLType UnderlyingIsSTLCont(std::string_view type);; ~~~~~^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 76%] Built target MetaCling. ```; I have no problems on ARM. ### Reproducer. ```; git clone https://github.com/root-project/root.git ; mkdir root-build; cd root-build; cmake ../root; make -j8; ```. ### ROOT version. master. ### Installation method. cmake / make. ### Operating system. MacOS 15 (Sequoia) on Intel processor. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:9167,Availability,error,error,9167,"include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespace 'std'; ROOT::ESTLType UnderlyingIsSTLCont(std::string_view type);; ~~~~~^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 76%] Built target MetaCling. ```; I have no problems on ARM. ### Reproducer. ```; git clone https://github.com/root-project/root.git ; mkdir root-build; cd root-build; cmake ../root; make -j8; ```. ### ROOT version. master. ### Installation method. cmake / make. ### Operating system. MacOS 15 (Sequoia) on Intel processor. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:9183,Availability,error,errors,9183,"include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespace 'std'; ROOT::ESTLType UnderlyingIsSTLCont(std::string_view type);; ~~~~~^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 76%] Built target MetaCling. ```; I have no problems on ARM. ### Reproducer. ```; git clone https://github.com/root-project/root.git ; mkdir root-build; cd root-build; cmake ../root; make -j8; ```. ### ROOT version. master. ### Installation method. cmake / make. ### Operating system. MacOS 15 (Sequoia) on Intel processor. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:9230,Availability,Error,Error,9230,"include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespace 'std'; ROOT::ESTLType UnderlyingIsSTLCont(std::string_view type);; ~~~~~^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 76%] Built target MetaCling. ```; I have no problems on ARM. ### Reproducer. ```; git clone https://github.com/root-project/root.git ; mkdir root-build; cd root-build; cmake ../root; make -j8; ```. ### ROOT version. master. ### Installation method. cmake / make. ### Operating system. MacOS 15 (Sequoia) on Intel processor. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:9237,Availability,Error,Error,9237,"include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespace 'std'; ROOT::ESTLType UnderlyingIsSTLCont(std::string_view type);; ~~~~~^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 76%] Built target MetaCling. ```; I have no problems on ARM. ### Reproducer. ```; git clone https://github.com/root-project/root.git ; mkdir root-build; cd root-build; cmake ../root; make -j8; ```. ### ROOT version. master. ### Installation method. cmake / make. ### Operating system. MacOS 15 (Sequoia) on Intel processor. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:9320,Availability,Error,Error,9320,"include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespace 'std'; ROOT::ESTLType UnderlyingIsSTLCont(std::string_view type);; ~~~~~^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 76%] Built target MetaCling. ```; I have no problems on ARM. ### Reproducer. ```; git clone https://github.com/root-project/root.git ; mkdir root-build; cd root-build; cmake ../root; make -j8; ```. ### ROOT version. master. ### Installation method. cmake / make. ### Operating system. MacOS 15 (Sequoia) on Intel processor. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:9376,Availability,Error,Error,9376,"include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespace 'std'; ROOT::ESTLType UnderlyingIsSTLCont(std::string_view type);; ~~~~~^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 76%] Built target MetaCling. ```; I have no problems on ARM. ### Reproducer. ```; git clone https://github.com/root-project/root.git ; mkdir root-build; cd root-build; cmake ../root; make -j8; ```. ### ROOT version. master. ### Installation method. cmake / make. ### Operating system. MacOS 15 (Sequoia) on Intel processor. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:9661,Deployability,Install,Installation,9661,"include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespace 'std'; ROOT::ESTLType UnderlyingIsSTLCont(std::string_view type);; ~~~~~^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 76%] Built target MetaCling. ```; I have no problems on ARM. ### Reproducer. ```; git clone https://github.com/root-project/root.git ; mkdir root-build; cd root-build; cmake ../root; make -j8; ```. ### ROOT version. master. ### Installation method. cmake / make. ### Operating system. MacOS 15 (Sequoia) on Intel processor. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/issues/16451:9243,Performance,load,loading,9243,"include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespace 'std'; ROOT::ESTLType UnderlyingIsSTLCont(std::string_view type);; ~~~~~^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 76%] Built target MetaCling. ```; I have no problems on ARM. ### Reproducer. ```; git clone https://github.com/root-project/root.git ; mkdir root-build; cd root-build; cmake ../root; make -j8; ```. ### ROOT version. master. ### Installation method. cmake / make. ### Operating system. MacOS 15 (Sequoia) on Intel processor. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16451
https://github.com/root-project/root/pull/16453:169,Energy Efficiency,Reduce,Reduce,169,Measurements with the parallel writer show a regression of compression bandwidth with large page sizes of up to 1 MiB because they do not fit into the L2 cache anymore. Reduce the default to be more cache friendly and restore scaling when fully using all cores of a machine.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16453
https://github.com/root-project/root/pull/16453:154,Performance,cache,cache,154,Measurements with the parallel writer show a regression of compression bandwidth with large page sizes of up to 1 MiB because they do not fit into the L2 cache anymore. Reduce the default to be more cache friendly and restore scaling when fully using all cores of a machine.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16453
https://github.com/root-project/root/pull/16453:199,Performance,cache,cache,199,Measurements with the parallel writer show a regression of compression bandwidth with large page sizes of up to 1 MiB because they do not fit into the L2 cache anymore. Reduce the default to be more cache friendly and restore scaling when fully using all cores of a machine.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16453
https://github.com/root-project/root/pull/16454:40,Testability,test,tests,40,"Except for Windows, but doing these new tests on some platforms is; better than on no platform. Otherwise we have no test coverage for using; TPython from different threads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16454
https://github.com/root-project/root/pull/16454:117,Testability,test,test,117,"Except for Windows, but doing these new tests on some platforms is; better than on no platform. Otherwise we have no test coverage for using; TPython from different threads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16454
https://github.com/root-project/root/pull/16459:29,Integrability,depend,depends,29,"Several browsable components depends from libraries, which only build when -Droot7=ON specified. These; are RCanvas and RNtuple. Therefore check root7; before building them. Fixes #16449",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16459
https://github.com/root-project/root/pull/16461:29,Integrability,depend,depends,29,"Several browsable components depends from libraries, which only build when -Droot7=ON specified. These; are RCanvas and RNtuple. Therefore check root7; before building them. Solves #16449",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16461
https://github.com/root-project/root/pull/16462:174,Safety,avoid,avoid,174,"LLVM had a bug where constructors with the same priority would not be stably sorted. This has been fixed upstream by; https://github.com/llvm/llvm-project/pull/95532, but to avoid relying on a backport this commit works around the issue: The idea is that we lower the default priority of concerned constructors to make them sort correctly. (cherry picked from commit https://github.com/root-project/root/commit/7db43f776d191807c1e4893312fabce7c60160bd, backport of https://github.com/root-project/root/pull/16420)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16462
https://github.com/root-project/root/pull/16463:79,Availability,error,errors,79,"Differently from `Evaluate()`, `ProcessLine()` returns a `Longptr_t` value and errors must be checked by passing a second argument. The old check would fail when assigning 0 to a member.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16463
https://github.com/root-project/root/pull/16464:238,Deployability,update,updated,238,# This Pull request:. ## Changes or fixes:. A bug of dupe quotes that was introduced by this commit: https://github.com/root-project/root/commit/73039d1ab4e3487c71c45270f5c8129c6871170d. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16464
https://github.com/root-project/root/pull/16464:208,Testability,test,tested,208,# This Pull request:. ## Changes or fixes:. A bug of dupe quotes that was introduced by this commit: https://github.com/root-project/root/commit/73039d1ab4e3487c71c45270f5c8129c6871170d. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16464
https://github.com/root-project/root/pull/16465:12,Availability,error,error,12,"- The first error fixed is an unquoted variable that creates an error in the case that the remote repos of roottest are not called origin. It's relatively common to give the remotes useful names, and those users shouldn't be punished with weird errors.; - Re-enable FindGLEW. ROOT claims that the latest version of CMake has an error in FindGLEW. In fact, the error was fixed after cmake 3.25, so we can use system GLEW again starting from 3.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16465
https://github.com/root-project/root/pull/16465:64,Availability,error,error,64,"- The first error fixed is an unquoted variable that creates an error in the case that the remote repos of roottest are not called origin. It's relatively common to give the remotes useful names, and those users shouldn't be punished with weird errors.; - Re-enable FindGLEW. ROOT claims that the latest version of CMake has an error in FindGLEW. In fact, the error was fixed after cmake 3.25, so we can use system GLEW again starting from 3.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16465
https://github.com/root-project/root/pull/16465:245,Availability,error,errors,245,"- The first error fixed is an unquoted variable that creates an error in the case that the remote repos of roottest are not called origin. It's relatively common to give the remotes useful names, and those users shouldn't be punished with weird errors.; - Re-enable FindGLEW. ROOT claims that the latest version of CMake has an error in FindGLEW. In fact, the error was fixed after cmake 3.25, so we can use system GLEW again starting from 3.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16465
https://github.com/root-project/root/pull/16465:328,Availability,error,error,328,"- The first error fixed is an unquoted variable that creates an error in the case that the remote repos of roottest are not called origin. It's relatively common to give the remotes useful names, and those users shouldn't be punished with weird errors.; - Re-enable FindGLEW. ROOT claims that the latest version of CMake has an error in FindGLEW. In fact, the error was fixed after cmake 3.25, so we can use system GLEW again starting from 3.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16465
https://github.com/root-project/root/pull/16465:360,Availability,error,error,360,"- The first error fixed is an unquoted variable that creates an error in the case that the remote repos of roottest are not called origin. It's relatively common to give the remotes useful names, and those users shouldn't be punished with weird errors.; - Re-enable FindGLEW. ROOT claims that the latest version of CMake has an error in FindGLEW. In fact, the error was fixed after cmake 3.25, so we can use system GLEW again starting from 3.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16465
https://github.com/root-project/root/pull/16465:39,Modifiability,variab,variable,39,"- The first error fixed is an unquoted variable that creates an error in the case that the remote repos of roottest are not called origin. It's relatively common to give the remotes useful names, and those users shouldn't be punished with weird errors.; - Re-enable FindGLEW. ROOT claims that the latest version of CMake has an error in FindGLEW. In fact, the error was fixed after cmake 3.25, so we can use system GLEW again starting from 3.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16465
https://github.com/root-project/root/issues/16469:724,Availability,error,errors,724,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Python bindings done with ROOT's cppyy lack the aggregate initialization constructor; ```python; >>> import ROOT; >>> ROOT.gInterpreter.ProcessLine(""struct Foo {float x,y,z;};""); 0; >>> ROOT.Foo(1,2,3); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: none of the 3 overloaded methods succeeded. Full details:; Foo::Foo(Foo&&) =>; TypeError: takes at most 1 arguments (3 given); Foo::Foo() =>; TypeError: takes at most 0 arguments (3 given); Foo::Foo(const Foo&) =>; TypeError: takes at most 1 arguments (3 given); >>> print(ROOT.Foo.__init__.__doc__); Foo::Foo(Foo&&); Foo::Foo(); Foo::Foo(const Foo&); ```; same errors when directly using cppyy shipped with ROOT. But the same code run with the stock cppyy taken from pip works fine; ```python; >>> import cppyy; >>> cppyy.__version__; '3.1.2'; >>> cppyy.cppdef(""struct Foo {float x,y,z;};""); True; >>> cppyy.gbl.Foo(1,2,3); <cppyy.gbl.Foo object at 0x59dc0cbddc50>; >>> print(cppyy.gbl.Foo.__init__.__doc__); Foo::Foo(Foo&&); Foo::Foo(); Foo::Foo(const Foo&); void __cppyy_internal::init_Foo(Foo*& self, const float& x = 0, const float& y = 0, const float& z = 0); ```. ### Reproducer. ```python; import ROOT; ROOT.gInterpreter.ProcessLine(""struct Foo {float x,y,z;};""); ROOT.Foo(1,2,3); print(ROOT.Foo.__init__.__doc__); ```. ### ROOT version. Built for linuxx8664gcc on Sep 09 2024, 22:50:44 ; From heads/master@tags/v6-32-04 . ### Installation method. LCG dev4 nightly. ### Operating system. almalinux9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16469
https://github.com/root-project/root/issues/16469:1497,Deployability,Install,Installation,1497,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Python bindings done with ROOT's cppyy lack the aggregate initialization constructor; ```python; >>> import ROOT; >>> ROOT.gInterpreter.ProcessLine(""struct Foo {float x,y,z;};""); 0; >>> ROOT.Foo(1,2,3); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: none of the 3 overloaded methods succeeded. Full details:; Foo::Foo(Foo&&) =>; TypeError: takes at most 1 arguments (3 given); Foo::Foo() =>; TypeError: takes at most 0 arguments (3 given); Foo::Foo(const Foo&) =>; TypeError: takes at most 1 arguments (3 given); >>> print(ROOT.Foo.__init__.__doc__); Foo::Foo(Foo&&); Foo::Foo(); Foo::Foo(const Foo&); ```; same errors when directly using cppyy shipped with ROOT. But the same code run with the stock cppyy taken from pip works fine; ```python; >>> import cppyy; >>> cppyy.__version__; '3.1.2'; >>> cppyy.cppdef(""struct Foo {float x,y,z;};""); True; >>> cppyy.gbl.Foo(1,2,3); <cppyy.gbl.Foo object at 0x59dc0cbddc50>; >>> print(cppyy.gbl.Foo.__init__.__doc__); Foo::Foo(Foo&&); Foo::Foo(); Foo::Foo(const Foo&); void __cppyy_internal::init_Foo(Foo*& self, const float& x = 0, const float& y = 0, const float& z = 0); ```. ### Reproducer. ```python; import ROOT; ROOT.gInterpreter.ProcessLine(""struct Foo {float x,y,z;};""); ROOT.Foo(1,2,3); print(ROOT.Foo.__init__.__doc__); ```. ### ROOT version. Built for linuxx8664gcc on Sep 09 2024, 22:50:44 ; From heads/master@tags/v6-32-04 . ### Installation method. LCG dev4 nightly. ### Operating system. almalinux9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16469
https://github.com/root-project/root/pull/16470:51,Energy Efficiency,reduce,reduce,51,"This commit provides an (optional) optimization to reduce the cost of safety evaluations associated with TGeoParallelWorld. The approach consists in the introduction of additional cache-state in TGeoNavigator. This state remembers the last location for which TGeoParallelWorld::Safety was evaluated, together with the corresponding value returned. Since TGeoNavigator follows the evolution of tracks step-by-step, we have some sort of history-locality. This means that the cache-state has a high-probability of being relevant for multiple track locations in a row. The optimization proposed here is orthogonal to other improvements. It adds on top of algorithmic improvements within TGeoParallelWorld (bounding volume hierarchies, see separate PR), gaining a few extra percent in speed. By default, the new feature is not enabled by default for backward compatibility. Once fully verified, we can make it the default mode. That said, in ALICE simulations, the caching did not modify stepping behaviour and yielded identical results compared to not doing the caching. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16470
https://github.com/root-project/root/pull/16470:35,Performance,optimiz,optimization,35,"This commit provides an (optional) optimization to reduce the cost of safety evaluations associated with TGeoParallelWorld. The approach consists in the introduction of additional cache-state in TGeoNavigator. This state remembers the last location for which TGeoParallelWorld::Safety was evaluated, together with the corresponding value returned. Since TGeoNavigator follows the evolution of tracks step-by-step, we have some sort of history-locality. This means that the cache-state has a high-probability of being relevant for multiple track locations in a row. The optimization proposed here is orthogonal to other improvements. It adds on top of algorithmic improvements within TGeoParallelWorld (bounding volume hierarchies, see separate PR), gaining a few extra percent in speed. By default, the new feature is not enabled by default for backward compatibility. Once fully verified, we can make it the default mode. That said, in ALICE simulations, the caching did not modify stepping behaviour and yielded identical results compared to not doing the caching. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16470
https://github.com/root-project/root/pull/16470:180,Performance,cache,cache-state,180,"This commit provides an (optional) optimization to reduce the cost of safety evaluations associated with TGeoParallelWorld. The approach consists in the introduction of additional cache-state in TGeoNavigator. This state remembers the last location for which TGeoParallelWorld::Safety was evaluated, together with the corresponding value returned. Since TGeoNavigator follows the evolution of tracks step-by-step, we have some sort of history-locality. This means that the cache-state has a high-probability of being relevant for multiple track locations in a row. The optimization proposed here is orthogonal to other improvements. It adds on top of algorithmic improvements within TGeoParallelWorld (bounding volume hierarchies, see separate PR), gaining a few extra percent in speed. By default, the new feature is not enabled by default for backward compatibility. Once fully verified, we can make it the default mode. That said, in ALICE simulations, the caching did not modify stepping behaviour and yielded identical results compared to not doing the caching. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16470
https://github.com/root-project/root/pull/16470:473,Performance,cache,cache-state,473,"This commit provides an (optional) optimization to reduce the cost of safety evaluations associated with TGeoParallelWorld. The approach consists in the introduction of additional cache-state in TGeoNavigator. This state remembers the last location for which TGeoParallelWorld::Safety was evaluated, together with the corresponding value returned. Since TGeoNavigator follows the evolution of tracks step-by-step, we have some sort of history-locality. This means that the cache-state has a high-probability of being relevant for multiple track locations in a row. The optimization proposed here is orthogonal to other improvements. It adds on top of algorithmic improvements within TGeoParallelWorld (bounding volume hierarchies, see separate PR), gaining a few extra percent in speed. By default, the new feature is not enabled by default for backward compatibility. Once fully verified, we can make it the default mode. That said, in ALICE simulations, the caching did not modify stepping behaviour and yielded identical results compared to not doing the caching. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16470
https://github.com/root-project/root/pull/16470:569,Performance,optimiz,optimization,569,"This commit provides an (optional) optimization to reduce the cost of safety evaluations associated with TGeoParallelWorld. The approach consists in the introduction of additional cache-state in TGeoNavigator. This state remembers the last location for which TGeoParallelWorld::Safety was evaluated, together with the corresponding value returned. Since TGeoNavigator follows the evolution of tracks step-by-step, we have some sort of history-locality. This means that the cache-state has a high-probability of being relevant for multiple track locations in a row. The optimization proposed here is orthogonal to other improvements. It adds on top of algorithmic improvements within TGeoParallelWorld (bounding volume hierarchies, see separate PR), gaining a few extra percent in speed. By default, the new feature is not enabled by default for backward compatibility. Once fully verified, we can make it the default mode. That said, in ALICE simulations, the caching did not modify stepping behaviour and yielded identical results compared to not doing the caching. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16470
https://github.com/root-project/root/pull/16470:70,Safety,safe,safety,70,"This commit provides an (optional) optimization to reduce the cost of safety evaluations associated with TGeoParallelWorld. The approach consists in the introduction of additional cache-state in TGeoNavigator. This state remembers the last location for which TGeoParallelWorld::Safety was evaluated, together with the corresponding value returned. Since TGeoNavigator follows the evolution of tracks step-by-step, we have some sort of history-locality. This means that the cache-state has a high-probability of being relevant for multiple track locations in a row. The optimization proposed here is orthogonal to other improvements. It adds on top of algorithmic improvements within TGeoParallelWorld (bounding volume hierarchies, see separate PR), gaining a few extra percent in speed. By default, the new feature is not enabled by default for backward compatibility. Once fully verified, we can make it the default mode. That said, in ALICE simulations, the caching did not modify stepping behaviour and yielded identical results compared to not doing the caching. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16470
https://github.com/root-project/root/pull/16470:278,Safety,Safe,Safety,278,"This commit provides an (optional) optimization to reduce the cost of safety evaluations associated with TGeoParallelWorld. The approach consists in the introduction of additional cache-state in TGeoNavigator. This state remembers the last location for which TGeoParallelWorld::Safety was evaluated, together with the corresponding value returned. Since TGeoNavigator follows the evolution of tracks step-by-step, we have some sort of history-locality. This means that the cache-state has a high-probability of being relevant for multiple track locations in a row. The optimization proposed here is orthogonal to other improvements. It adds on top of algorithmic improvements within TGeoParallelWorld (bounding volume hierarchies, see separate PR), gaining a few extra percent in speed. By default, the new feature is not enabled by default for backward compatibility. Once fully verified, we can make it the default mode. That said, in ALICE simulations, the caching did not modify stepping behaviour and yielded identical results compared to not doing the caching. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16470
https://github.com/root-project/root/pull/16470:1088,Testability,test,tested,1088,"This commit provides an (optional) optimization to reduce the cost of safety evaluations associated with TGeoParallelWorld. The approach consists in the introduction of additional cache-state in TGeoNavigator. This state remembers the last location for which TGeoParallelWorld::Safety was evaluated, together with the corresponding value returned. Since TGeoNavigator follows the evolution of tracks step-by-step, we have some sort of history-locality. This means that the cache-state has a high-probability of being relevant for multiple track locations in a row. The optimization proposed here is orthogonal to other improvements. It adds on top of algorithmic improvements within TGeoParallelWorld (bounding volume hierarchies, see separate PR), gaining a few extra percent in speed. By default, the new feature is not enabled by default for backward compatibility. Once fully verified, we can make it the default mode. That said, in ALICE simulations, the caching did not modify stepping behaviour and yielded identical results compared to not doing the caching. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16470
https://github.com/root-project/root/issues/16474:8196,Deployability,Install,Installation,8196,"58 Wrong Sum: 479 FileOut: 479; Bin: 73 Expected: 426 Wrong Sum: 454 FileOut: 454; Bin: 74 Expected: 421 Wrong Sum: 440 FileOut: 440; Bin: 75 Expected: 436 Wrong Sum: 457 FileOut: 457; Bin: 76 Expected: 452 Wrong Sum: 482 FileOut: 482; Bin: 77 Expected: 452 Wrong Sum: 468 FileOut: 468; Bin: 78 Expected: 427 Wrong Sum: 444 FileOut: 444; Bin: 79 Expected: 370 Wrong Sum: 388 FileOut: 388; Bin: 80 Expected: 448 Wrong Sum: 464 FileOut: 464; Bin: 81 Expected: 395 Wrong Sum: 416 FileOut: 416; Bin: 82 Expected: 429 Wrong Sum: 447 FileOut: 447; Bin: 83 Expected: 414 Wrong Sum: 428 FileOut: 428; Bin: 84 Expected: 430 Wrong Sum: 448 FileOut: 448; Bin: 85 Expected: 416 Wrong Sum: 424 FileOut: 424; Bin: 86 Expected: 409 Wrong Sum: 426 FileOut: 426; Bin: 87 Expected: 407 Wrong Sum: 425 FileOut: 425; Bin: 88 Expected: 424 Wrong Sum: 439 FileOut: 439; Bin: 89 Expected: 388 Wrong Sum: 415 FileOut: 415; Bin: 90 Expected: 415 Wrong Sum: 428 FileOut: 428; Bin: 91 Expected: 466 Wrong Sum: 484 FileOut: 484; Bin: 92 Expected: 391 Wrong Sum: 407 FileOut: 407; Bin: 93 Expected: 453 Wrong Sum: 470 FileOut: 470; Bin: 94 Expected: 410 Wrong Sum: 427 FileOut: 427; Bin: 95 Expected: 380 Wrong Sum: 402 FileOut: 402; Bin: 96 Expected: 460 Wrong Sum: 478 FileOut: 478; Bin: 97 Expected: 464 Wrong Sum: 490 FileOut: 490; Bin: 98 Expected: 435 Wrong Sum: 448 FileOut: 448; Bin: 99 Expected: 478 Wrong Sum: 494 FileOut: 494; ```. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2024, 19:16:07 |; | From heads/master@tags/v6-32-04 |; | With c++ (GCC) 14.2.1 20240805 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16474
https://github.com/root-project/root/issues/16475:2149,Availability,Error,Error,2149,"oken.txt"").read().strip(); >>> ROOT.TFile.Open(url).ls(); TNetXNGFile**		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; TNetXNGFile*		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; KEY: TH1F	hpx;1	This is the px distribution; KEY: TH2F	hpxpy;1	py vs px; KEY: TProfile	hprof;1	Profile of pz versus px; KEY: TNtuple	ntuple;1	Demo ntuple; >>> df = ROOT.RDataFrame(""ntuple"", url); >>>; ```. ### Reproducer. On lxplus:. ```bash; $ source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.04/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh; $ cp /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.04/x86_64-almalinux9.4-gcc114-opt/tutorials/hsimple.root /eos/user/c/cburr/hsimple.root; $ EOS_MGM_URL=root://eoshome-c.cern.ch eos token --path /eos/user/c/cburr/hsimple.root --permission=rx --expires=$(date +%s -d ""30 minutes"") > token.txt; $ kdestroy; $ python3; ```. ```python; Python 3.9.18 (main, Aug 23 2024, 00:00:00); [GCC 11.4.1 20231218 (Red Hat 11.4.1-3)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> url = 'root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root?xrd.wantprot=unix&authz=' + open(""token.txt"").read().strip(); >>> ROOT.TFile.Open(url).ls(); TNetXNGFile**		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; TNetXNGFile*		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; KEY: TH1F	hpx;1	This is the px distribution; KEY: TH2F	hpxpy;1	py vs px; KEY: TProfile	hprof;1	Profile of pz versus px; KEY: TNtuple	ntuple;1	Demo ntuple; >>> df = ROOT.RDataFrame(""ntuple"", url); Error in <TNetXNGSystem::GetDirEntry>: Unable to give access - user access restricted - unauthorized identity used ; Permission denied; *** Break *** segmentation violation; ```. ### ROOT version. 6.32.04. ### Installation method. sft.cern.ch. ### Operating system. Linux (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16475
https://github.com/root-project/root/issues/16475:1006,Deployability,release,releases,1006,"k duplicate issues. - [X] Checked for duplicates. ### Description. EOS tokens no longer work with RDataFrame in 6.32.04. In 6.30.08 everything is fine:. ```python; $ python3; Python 3.9.18 (main, Aug 23 2024, 00:00:00); [GCC 11.4.1 20231218 (Red Hat 11.4.1-3)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> url = 'root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root?xrd.wantprot=unix&authz=' + open(""token.txt"").read().strip(); >>> ROOT.TFile.Open(url).ls(); TNetXNGFile**		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; TNetXNGFile*		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; KEY: TH1F	hpx;1	This is the px distribution; KEY: TH2F	hpxpy;1	py vs px; KEY: TProfile	hprof;1	Profile of pz versus px; KEY: TNtuple	ntuple;1	Demo ntuple; >>> df = ROOT.RDataFrame(""ntuple"", url); >>>; ```. ### Reproducer. On lxplus:. ```bash; $ source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.04/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh; $ cp /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.04/x86_64-almalinux9.4-gcc114-opt/tutorials/hsimple.root /eos/user/c/cburr/hsimple.root; $ EOS_MGM_URL=root://eoshome-c.cern.ch eos token --path /eos/user/c/cburr/hsimple.root --permission=rx --expires=$(date +%s -d ""30 minutes"") > token.txt; $ kdestroy; $ python3; ```. ```python; Python 3.9.18 (main, Aug 23 2024, 00:00:00); [GCC 11.4.1 20231218 (Red Hat 11.4.1-3)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> url = 'root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root?xrd.wantprot=unix&authz=' + open(""token.txt"").read().strip(); >>> ROOT.TFile.Open(url).ls(); TNetXNGFile**		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; TNetXNGFile*		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; KEY: TH1F	hpx;1	This is the px distribution; KEY: TH2F	h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16475
https://github.com/root-project/root/issues/16475:1108,Deployability,release,releases,1108,"aFrame in 6.32.04. In 6.30.08 everything is fine:. ```python; $ python3; Python 3.9.18 (main, Aug 23 2024, 00:00:00); [GCC 11.4.1 20231218 (Red Hat 11.4.1-3)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> url = 'root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root?xrd.wantprot=unix&authz=' + open(""token.txt"").read().strip(); >>> ROOT.TFile.Open(url).ls(); TNetXNGFile**		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; TNetXNGFile*		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; KEY: TH1F	hpx;1	This is the px distribution; KEY: TH2F	hpxpy;1	py vs px; KEY: TProfile	hprof;1	Profile of pz versus px; KEY: TNtuple	ntuple;1	Demo ntuple; >>> df = ROOT.RDataFrame(""ntuple"", url); >>>; ```. ### Reproducer. On lxplus:. ```bash; $ source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.04/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh; $ cp /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.04/x86_64-almalinux9.4-gcc114-opt/tutorials/hsimple.root /eos/user/c/cburr/hsimple.root; $ EOS_MGM_URL=root://eoshome-c.cern.ch eos token --path /eos/user/c/cburr/hsimple.root --permission=rx --expires=$(date +%s -d ""30 minutes"") > token.txt; $ kdestroy; $ python3; ```. ```python; Python 3.9.18 (main, Aug 23 2024, 00:00:00); [GCC 11.4.1 20231218 (Red Hat 11.4.1-3)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> url = 'root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root?xrd.wantprot=unix&authz=' + open(""token.txt"").read().strip(); >>> ROOT.TFile.Open(url).ls(); TNetXNGFile**		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; TNetXNGFile*		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; KEY: TH1F	hpx;1	This is the px distribution; KEY: TH2F	hpxpy;1	py vs px; KEY: TProfile	hprof;1	Profile of pz versus px; KEY: TNtuple	ntuple;1	Demo ntuple; >>>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16475
https://github.com/root-project/root/issues/16475:2359,Deployability,Install,Installation,2359,"oken.txt"").read().strip(); >>> ROOT.TFile.Open(url).ls(); TNetXNGFile**		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; TNetXNGFile*		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; KEY: TH1F	hpx;1	This is the px distribution; KEY: TH2F	hpxpy;1	py vs px; KEY: TProfile	hprof;1	Profile of pz versus px; KEY: TNtuple	ntuple;1	Demo ntuple; >>> df = ROOT.RDataFrame(""ntuple"", url); >>>; ```. ### Reproducer. On lxplus:. ```bash; $ source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.04/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh; $ cp /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.04/x86_64-almalinux9.4-gcc114-opt/tutorials/hsimple.root /eos/user/c/cburr/hsimple.root; $ EOS_MGM_URL=root://eoshome-c.cern.ch eos token --path /eos/user/c/cburr/hsimple.root --permission=rx --expires=$(date +%s -d ""30 minutes"") > token.txt; $ kdestroy; $ python3; ```. ```python; Python 3.9.18 (main, Aug 23 2024, 00:00:00); [GCC 11.4.1 20231218 (Red Hat 11.4.1-3)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> url = 'root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root?xrd.wantprot=unix&authz=' + open(""token.txt"").read().strip(); >>> ROOT.TFile.Open(url).ls(); TNetXNGFile**		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; TNetXNGFile*		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; KEY: TH1F	hpx;1	This is the px distribution; KEY: TH2F	hpxpy;1	py vs px; KEY: TProfile	hprof;1	Profile of pz versus px; KEY: TNtuple	ntuple;1	Demo ntuple; >>> df = ROOT.RDataFrame(""ntuple"", url); Error in <TNetXNGSystem::GetDirEntry>: Unable to give access - user access restricted - unauthorized identity used ; Permission denied; *** Break *** segmentation violation; ```. ### ROOT version. 6.32.04. ### Installation method. sft.cern.ch. ### Operating system. Linux (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16475
https://github.com/root-project/root/issues/16475:2203,Security,access,access,2203,"oken.txt"").read().strip(); >>> ROOT.TFile.Open(url).ls(); TNetXNGFile**		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; TNetXNGFile*		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; KEY: TH1F	hpx;1	This is the px distribution; KEY: TH2F	hpxpy;1	py vs px; KEY: TProfile	hprof;1	Profile of pz versus px; KEY: TNtuple	ntuple;1	Demo ntuple; >>> df = ROOT.RDataFrame(""ntuple"", url); >>>; ```. ### Reproducer. On lxplus:. ```bash; $ source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.04/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh; $ cp /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.04/x86_64-almalinux9.4-gcc114-opt/tutorials/hsimple.root /eos/user/c/cburr/hsimple.root; $ EOS_MGM_URL=root://eoshome-c.cern.ch eos token --path /eos/user/c/cburr/hsimple.root --permission=rx --expires=$(date +%s -d ""30 minutes"") > token.txt; $ kdestroy; $ python3; ```. ```python; Python 3.9.18 (main, Aug 23 2024, 00:00:00); [GCC 11.4.1 20231218 (Red Hat 11.4.1-3)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> url = 'root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root?xrd.wantprot=unix&authz=' + open(""token.txt"").read().strip(); >>> ROOT.TFile.Open(url).ls(); TNetXNGFile**		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; TNetXNGFile*		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; KEY: TH1F	hpx;1	This is the px distribution; KEY: TH2F	hpxpy;1	py vs px; KEY: TProfile	hprof;1	Profile of pz versus px; KEY: TNtuple	ntuple;1	Demo ntuple; >>> df = ROOT.RDataFrame(""ntuple"", url); Error in <TNetXNGSystem::GetDirEntry>: Unable to give access - user access restricted - unauthorized identity used ; Permission denied; *** Break *** segmentation violation; ```. ### ROOT version. 6.32.04. ### Installation method. sft.cern.ch. ### Operating system. Linux (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16475
https://github.com/root-project/root/issues/16475:2217,Security,access,access,2217,"oken.txt"").read().strip(); >>> ROOT.TFile.Open(url).ls(); TNetXNGFile**		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; TNetXNGFile*		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; KEY: TH1F	hpx;1	This is the px distribution; KEY: TH2F	hpxpy;1	py vs px; KEY: TProfile	hprof;1	Profile of pz versus px; KEY: TNtuple	ntuple;1	Demo ntuple; >>> df = ROOT.RDataFrame(""ntuple"", url); >>>; ```. ### Reproducer. On lxplus:. ```bash; $ source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.04/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh; $ cp /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.04/x86_64-almalinux9.4-gcc114-opt/tutorials/hsimple.root /eos/user/c/cburr/hsimple.root; $ EOS_MGM_URL=root://eoshome-c.cern.ch eos token --path /eos/user/c/cburr/hsimple.root --permission=rx --expires=$(date +%s -d ""30 minutes"") > token.txt; $ kdestroy; $ python3; ```. ```python; Python 3.9.18 (main, Aug 23 2024, 00:00:00); [GCC 11.4.1 20231218 (Red Hat 11.4.1-3)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> url = 'root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root?xrd.wantprot=unix&authz=' + open(""token.txt"").read().strip(); >>> ROOT.TFile.Open(url).ls(); TNetXNGFile**		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; TNetXNGFile*		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; KEY: TH1F	hpx;1	This is the px distribution; KEY: TH2F	hpxpy;1	py vs px; KEY: TProfile	hprof;1	Profile of pz versus px; KEY: TNtuple	ntuple;1	Demo ntuple; >>> df = ROOT.RDataFrame(""ntuple"", url); Error in <TNetXNGSystem::GetDirEntry>: Unable to give access - user access restricted - unauthorized identity used ; Permission denied; *** Break *** segmentation violation; ```. ### ROOT version. 6.32.04. ### Installation method. sft.cern.ch. ### Operating system. Linux (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16475
https://github.com/root-project/root/pull/16476:181,Energy Efficiency,allocate,allocates,181,"The current code goes through different codepaths depending on the platform. One of the codepaths relies on a non-standard extension (variable-length arrays) and the other manually allocates and frees a char array.; Using a std::string, while losing a bit of performance on Linux/Mac, simplifies and unifies the codepaths and avoids using non-standard C++ (which in turns enable building with -Werror).; The perf hit is most likely negligible, especially given the use of dynamic_cast in the same block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16476
https://github.com/root-project/root/pull/16476:50,Integrability,depend,depending,50,"The current code goes through different codepaths depending on the platform. One of the codepaths relies on a non-standard extension (variable-length arrays) and the other manually allocates and frees a char array.; Using a std::string, while losing a bit of performance on Linux/Mac, simplifies and unifies the codepaths and avoids using non-standard C++ (which in turns enable building with -Werror).; The perf hit is most likely negligible, especially given the use of dynamic_cast in the same block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16476
https://github.com/root-project/root/pull/16476:134,Modifiability,variab,variable-length,134,"The current code goes through different codepaths depending on the platform. One of the codepaths relies on a non-standard extension (variable-length arrays) and the other manually allocates and frees a char array.; Using a std::string, while losing a bit of performance on Linux/Mac, simplifies and unifies the codepaths and avoids using non-standard C++ (which in turns enable building with -Werror).; The perf hit is most likely negligible, especially given the use of dynamic_cast in the same block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16476
https://github.com/root-project/root/pull/16476:259,Performance,perform,performance,259,"The current code goes through different codepaths depending on the platform. One of the codepaths relies on a non-standard extension (variable-length arrays) and the other manually allocates and frees a char array.; Using a std::string, while losing a bit of performance on Linux/Mac, simplifies and unifies the codepaths and avoids using non-standard C++ (which in turns enable building with -Werror).; The perf hit is most likely negligible, especially given the use of dynamic_cast in the same block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16476
https://github.com/root-project/root/pull/16476:326,Safety,avoid,avoids,326,"The current code goes through different codepaths depending on the platform. One of the codepaths relies on a non-standard extension (variable-length arrays) and the other manually allocates and frees a char array.; Using a std::string, while losing a bit of performance on Linux/Mac, simplifies and unifies the codepaths and avoids using non-standard C++ (which in turns enable building with -Werror).; The perf hit is most likely negligible, especially given the use of dynamic_cast in the same block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16476
https://github.com/root-project/root/pull/16476:285,Usability,simpl,simplifies,285,"The current code goes through different codepaths depending on the platform. One of the codepaths relies on a non-standard extension (variable-length arrays) and the other manually allocates and frees a char array.; Using a std::string, while losing a bit of performance on Linux/Mac, simplifies and unifies the codepaths and avoids using non-standard C++ (which in turns enable building with -Werror).; The perf hit is most likely negligible, especially given the use of dynamic_cast in the same block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16476
https://github.com/root-project/root/pull/16477:221,Testability,test,test-check-nullptr,221,Use `/Ob2` (Inline Function Expansion 2) with `RelWithDebInfo`.; This is the default value under `/O1` and `/O2`. Allows the compiler to expand any function not explicitly marked for no inlining.; This fixes the failing `test-check-nullptr` and `roottest-cling-exception-nullderef-e` tests with ROOT built in `RelWithDebInfo`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16477
https://github.com/root-project/root/pull/16477:284,Testability,test,tests,284,Use `/Ob2` (Inline Function Expansion 2) with `RelWithDebInfo`.; This is the default value under `/O1` and `/O2`. Allows the compiler to expand any function not explicitly marked for no inlining.; This fixes the failing `test-check-nullptr` and `roottest-cling-exception-nullderef-e` tests with ROOT built in `RelWithDebInfo`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16477
https://github.com/root-project/root/pull/16484:212,Deployability,Update,Update,212,"Major point was finding fix for RBrowser list binding.; While this was done in #16481, now latest openui5 can be applied. Required minimal adjustments in the ui5-related code.; Fix several tiny problems in eve7; Update JSROOT and documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16484
https://github.com/root-project/root/issues/16486:208,Availability,error,error,208,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. I updated my mac system to 15 yesterday. My Mac is M1. The root did not work and I rebuilt it. However, I couldn't build and got the error; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Devel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16486
https://github.com/root-project/root/issues/16486:825,Availability,error,error,825,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. I updated my mac system to 15 yesterday. My Mac is M1. The root did not work and I rebuilt it. However, I couldn't build and got the error; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Devel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16486
https://github.com/root-project/root/issues/16486:1059,Availability,error,error,1059,"y mac system to 15 yesterday. My Mac is M1. The root did not work and I rebuilt it. However, I couldn't build and got the error; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/wctype.h:68:; /Applications/Xcode.app/Cont",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16486
https://github.com/root-project/root/issues/16486:2188,Availability,error,error,2188,d from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/wctype.h:68:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; #include <_wctype.h>; ~~~~~~~~^. ### Reproducer. While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; Whi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16486
https://github.com/root-project/root/issues/16486:2888,Availability,error,error,2888,/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/wctype.h:68:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; #include <_wctype.h>; ~~~~~~~~^. ### Reproducer. While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16486
https://github.com/root-project/root/issues/16486:3122,Availability,error,error,3122,.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; #include <_wctype.h>; ~~~~~~~~^. ### Reproducer. While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/wctype.h:68:; /Applications/Xcode.app/Cont,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16486
https://github.com/root-project/root/issues/16486:4251,Availability,error,error,4251,ms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/wctype.h:68:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; #include <_wctype.h>; ~~~~~~~~^. ### ROOT version. v6.32.04. ### Installation method. build from source. ### Operating system. Mac OS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16486
https://github.com/root-project/root/issues/16486:77,Deployability,update,updated,77,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. I updated my mac system to 15 yesterday. My Mac is M1. The root did not work and I rebuilt it. However, I couldn't build and got the error; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Devel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16486
https://github.com/root-project/root/issues/16486:4357,Deployability,Install,Installation,4357,ms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/wctype.h:68:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; #include <_wctype.h>; ~~~~~~~~^. ### ROOT version. v6.32.04. ### Installation method. build from source. ### Operating system. Mac OS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16486
https://github.com/root-project/root/issues/16486:839,Integrability,depend,dependency,839,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. I updated my mac system to 15 yesterday. My Mac is M1. The root did not work and I rebuilt it. However, I couldn't build and got the error; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Devel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16486
https://github.com/root-project/root/issues/16486:2902,Integrability,depend,dependency,2902,/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/wctype.h:68:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; #include <_wctype.h>; ~~~~~~~~^. ### Reproducer. While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16486
https://github.com/root-project/root/issues/16487:365,Deployability,Install,Installation,365,"### Explain what you would like to see improved and how. https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#aa571f08b8e4d9300cacdea039a379a22. `column` has a default value, but the doc doesn't say what it will do if I don't pass a value. Is that totally obvious and I'm just missing this, or is it documented elsewhere?. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16487
https://github.com/root-project/root/issues/16488:902,Deployability,Install,Installation,902,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hi,. starting the webgui (`new TBrowser`) opens a chromium window which complains:; ```; Your file couldn’t be accessed; It may have been moved, edited, or deleted.; ERR_FILE_NOT_FOUND; ```; I guess this corresponds to the following process:; ```; axel 17508 3604 4 15:51 pts/0 00:00:01 /snap/chromium/2950/usr/lib/chromium-browser/chrome --password-store --disable-features=TFLiteLanguageDetectionEnabled --window-size=1200,700 --new-window --app=file:///tmp/root_start_t9pNYd.html; ```. Note that this is a snap package; the browser might not be allowed to access files in `/tmp` as per https://forum.snapcraft.io/t/can-browsers-open-local-files/3016. (*I* can work around this, but I thought it'd still be worthwhile to report this.). Cheers, Axel. ### Reproducer. `new TBrowser` with web gui. ### ROOT version. master. ### Installation method. source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16488
https://github.com/root-project/root/issues/16488:186,Security,access,accessed,186,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hi,. starting the webgui (`new TBrowser`) opens a chromium window which complains:; ```; Your file couldn’t be accessed; It may have been moved, edited, or deleted.; ERR_FILE_NOT_FOUND; ```; I guess this corresponds to the following process:; ```; axel 17508 3604 4 15:51 pts/0 00:00:01 /snap/chromium/2950/usr/lib/chromium-browser/chrome --password-store --disable-features=TFLiteLanguageDetectionEnabled --window-size=1200,700 --new-window --app=file:///tmp/root_start_t9pNYd.html; ```. Note that this is a snap package; the browser might not be allowed to access files in `/tmp` as per https://forum.snapcraft.io/t/can-browsers-open-local-files/3016. (*I* can work around this, but I thought it'd still be worthwhile to report this.). Cheers, Axel. ### Reproducer. `new TBrowser` with web gui. ### ROOT version. master. ### Installation method. source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16488
https://github.com/root-project/root/issues/16488:416,Security,password,password-store,416,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hi,. starting the webgui (`new TBrowser`) opens a chromium window which complains:; ```; Your file couldn’t be accessed; It may have been moved, edited, or deleted.; ERR_FILE_NOT_FOUND; ```; I guess this corresponds to the following process:; ```; axel 17508 3604 4 15:51 pts/0 00:00:01 /snap/chromium/2950/usr/lib/chromium-browser/chrome --password-store --disable-features=TFLiteLanguageDetectionEnabled --window-size=1200,700 --new-window --app=file:///tmp/root_start_t9pNYd.html; ```. Note that this is a snap package; the browser might not be allowed to access files in `/tmp` as per https://forum.snapcraft.io/t/can-browsers-open-local-files/3016. (*I* can work around this, but I thought it'd still be worthwhile to report this.). Cheers, Axel. ### Reproducer. `new TBrowser` with web gui. ### ROOT version. master. ### Installation method. source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16488
https://github.com/root-project/root/issues/16488:634,Security,access,access,634,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hi,. starting the webgui (`new TBrowser`) opens a chromium window which complains:; ```; Your file couldn’t be accessed; It may have been moved, edited, or deleted.; ERR_FILE_NOT_FOUND; ```; I guess this corresponds to the following process:; ```; axel 17508 3604 4 15:51 pts/0 00:00:01 /snap/chromium/2950/usr/lib/chromium-browser/chrome --password-store --disable-features=TFLiteLanguageDetectionEnabled --window-size=1200,700 --new-window --app=file:///tmp/root_start_t9pNYd.html; ```. Note that this is a snap package; the browser might not be allowed to access files in `/tmp` as per https://forum.snapcraft.io/t/can-browsers-open-local-files/3016. (*I* can work around this, but I thought it'd still be worthwhile to report this.). Cheers, Axel. ### Reproducer. `new TBrowser` with web gui. ### ROOT version. master. ### Installation method. source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16488
https://github.com/root-project/root/issues/16489:748,Deployability,Install,Installation,748,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When accessed after the generating RNTupleReader is gone, the RNTupleView segfaults. It should fail more gracefully. ### Reproducer. ```; TEST(RNTuple, ViewPastLifetime); {; FileRaii fileGuard(""test_ntuple_view_pastlifetime.root"");. auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; {; auto writer = RNTupleWriter::Recreate(std::move(model), ""ntpl"", fileGuard.GetPath());; writer->Fill();; }. auto reader = RNTupleReader::Open(""ntpl"", fileGuard.GetPath());; EXPECT_EQ(1u, reader->GetNEntries());; auto viewPt = reader->GetView<float>(""pt"");; reader.reset();; EXPECT_FLOAT_EQ(42.0, viewPt(0));; }; ```. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16489
https://github.com/root-project/root/issues/16489:80,Security,access,accessed,80,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When accessed after the generating RNTupleReader is gone, the RNTupleView segfaults. It should fail more gracefully. ### Reproducer. ```; TEST(RNTuple, ViewPastLifetime); {; FileRaii fileGuard(""test_ntuple_view_pastlifetime.root"");. auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; {; auto writer = RNTupleWriter::Recreate(std::move(model), ""ntpl"", fileGuard.GetPath());; writer->Fill();; }. auto reader = RNTupleReader::Open(""ntpl"", fileGuard.GetPath());; EXPECT_EQ(1u, reader->GetNEntries());; auto viewPt = reader->GetView<float>(""pt"");; reader.reset();; EXPECT_FLOAT_EQ(42.0, viewPt(0));; }; ```. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16489
https://github.com/root-project/root/issues/16489:213,Testability,TEST,TEST,213,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When accessed after the generating RNTupleReader is gone, the RNTupleView segfaults. It should fail more gracefully. ### Reproducer. ```; TEST(RNTuple, ViewPastLifetime); {; FileRaii fileGuard(""test_ntuple_view_pastlifetime.root"");. auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; {; auto writer = RNTupleWriter::Recreate(std::move(model), ""ntpl"", fileGuard.GetPath());; writer->Fill();; }. auto reader = RNTupleReader::Open(""ntpl"", fileGuard.GetPath());; EXPECT_EQ(1u, reader->GetNEntries());; auto viewPt = reader->GetView<float>(""pt"");; reader.reset();; EXPECT_FLOAT_EQ(42.0, viewPt(0));; }; ```. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16489
https://github.com/root-project/root/pull/16491:77,Integrability,interface,interface,77,"This reverts part of 63636f6aeb3 from a few days ago, which also changed the interface of virtual functions, which was not the intention and breaks user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16491
https://github.com/root-project/root/pull/16492:1168,Availability,Error,Error,1168,On el9 with the following config (and package from uscms cvmfs for non-builtin dependencies):; ```; cxx17 asimage builtin_clang builtin_cling builtin_gl2ps builtin_gtest builtin_llvm builtin_lz4 ; builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_xxhash builtin_zlib builtin_zstd clad; dataframe davix fitsio gdml http imt mysql opengl pyroot roofit root7 rpath runtime_cxxmodules; shared sqlite ssl tmva tmva-cpu tmva-pymva tpython spectrum vdt x11 xml xrootd; ```; In particular the following for compressions:; ```; builtin_lz4 builtin_lzma builtin_zlib builtin_zstd; ```; ```; cmslpc-el9-heavy01:src (master) pcanal$ uname -a; Linux cmslpc-el9-heavy01.fnal.gov 5.14.0-427.28.1.el9_4.x86_64 #1 SMP; PREEMPT_DYNAMIC Fri Aug 2 03:44:10 EDT 2024 x86_64 x86_64 x86_64; GNU/Linux; ```; The test 18 and 43 produced a PNG file that slight smaller that expected:; ```; Test 18: TGaxis 2.................................................. OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 18 FAILED; Result = 15655; Reference = 16076; Error = 421 (was 350); C file result............................................. OK; ```; ```; Test 43: Divided pads and TLatex................................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 43 FAILED; Result = 24855; Reference = 25421; Error = 566 (was 300); C file result............................................. OK; ```. Visual inspection of the png files showed no differences.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16492
https://github.com/root-project/root/pull/16492:1560,Availability,Error,Error,1560,On el9 with the following config (and package from uscms cvmfs for non-builtin dependencies):; ```; cxx17 asimage builtin_clang builtin_cling builtin_gl2ps builtin_gtest builtin_llvm builtin_lz4 ; builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_xxhash builtin_zlib builtin_zstd clad; dataframe davix fitsio gdml http imt mysql opengl pyroot roofit root7 rpath runtime_cxxmodules; shared sqlite ssl tmva tmva-cpu tmva-pymva tpython spectrum vdt x11 xml xrootd; ```; In particular the following for compressions:; ```; builtin_lz4 builtin_lzma builtin_zlib builtin_zstd; ```; ```; cmslpc-el9-heavy01:src (master) pcanal$ uname -a; Linux cmslpc-el9-heavy01.fnal.gov 5.14.0-427.28.1.el9_4.x86_64 #1 SMP; PREEMPT_DYNAMIC Fri Aug 2 03:44:10 EDT 2024 x86_64 x86_64 x86_64; GNU/Linux; ```; The test 18 and 43 produced a PNG file that slight smaller that expected:; ```; Test 18: TGaxis 2.................................................. OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 18 FAILED; Result = 15655; Reference = 16076; Error = 421 (was 350); C file result............................................. OK; ```; ```; Test 43: Divided pads and TLatex................................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 43 FAILED; Result = 24855; Reference = 25421; Error = 566 (was 300); C file result............................................. OK; ```. Visual inspection of the png files showed no differences.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16492
https://github.com/root-project/root/pull/16492:79,Integrability,depend,dependencies,79,On el9 with the following config (and package from uscms cvmfs for non-builtin dependencies):; ```; cxx17 asimage builtin_clang builtin_cling builtin_gl2ps builtin_gtest builtin_llvm builtin_lz4 ; builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_xxhash builtin_zlib builtin_zstd clad; dataframe davix fitsio gdml http imt mysql opengl pyroot roofit root7 rpath runtime_cxxmodules; shared sqlite ssl tmva tmva-cpu tmva-pymva tpython spectrum vdt x11 xml xrootd; ```; In particular the following for compressions:; ```; builtin_lz4 builtin_lzma builtin_zlib builtin_zstd; ```; ```; cmslpc-el9-heavy01:src (master) pcanal$ uname -a; Linux cmslpc-el9-heavy01.fnal.gov 5.14.0-427.28.1.el9_4.x86_64 #1 SMP; PREEMPT_DYNAMIC Fri Aug 2 03:44:10 EDT 2024 x86_64 x86_64 x86_64; GNU/Linux; ```; The test 18 and 43 produced a PNG file that slight smaller that expected:; ```; Test 18: TGaxis 2.................................................. OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 18 FAILED; Result = 15655; Reference = 16076; Error = 421 (was 350); C file result............................................. OK; ```; ```; Test 43: Divided pads and TLatex................................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 43 FAILED; Result = 24855; Reference = 25421; Error = 566 (was 300); C file result............................................. OK; ```. Visual inspection of the png files showed no differences.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16492
https://github.com/root-project/root/pull/16492:26,Modifiability,config,config,26,On el9 with the following config (and package from uscms cvmfs for non-builtin dependencies):; ```; cxx17 asimage builtin_clang builtin_cling builtin_gl2ps builtin_gtest builtin_llvm builtin_lz4 ; builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_xxhash builtin_zlib builtin_zstd clad; dataframe davix fitsio gdml http imt mysql opengl pyroot roofit root7 rpath runtime_cxxmodules; shared sqlite ssl tmva tmva-cpu tmva-pymva tpython spectrum vdt x11 xml xrootd; ```; In particular the following for compressions:; ```; builtin_lz4 builtin_lzma builtin_zlib builtin_zstd; ```; ```; cmslpc-el9-heavy01:src (master) pcanal$ uname -a; Linux cmslpc-el9-heavy01.fnal.gov 5.14.0-427.28.1.el9_4.x86_64 #1 SMP; PREEMPT_DYNAMIC Fri Aug 2 03:44:10 EDT 2024 x86_64 x86_64 x86_64; GNU/Linux; ```; The test 18 and 43 produced a PNG file that slight smaller that expected:; ```; Test 18: TGaxis 2.................................................. OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 18 FAILED; Result = 15655; Reference = 16076; Error = 421 (was 350); C file result............................................. OK; ```; ```; Test 43: Divided pads and TLatex................................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 43 FAILED; Result = 24855; Reference = 25421; Error = 566 (was 300); C file result............................................. OK; ```. Visual inspection of the png files showed no differences.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16492
https://github.com/root-project/root/pull/16492:796,Testability,test,test,796,On el9 with the following config (and package from uscms cvmfs for non-builtin dependencies):; ```; cxx17 asimage builtin_clang builtin_cling builtin_gl2ps builtin_gtest builtin_llvm builtin_lz4 ; builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_xxhash builtin_zlib builtin_zstd clad; dataframe davix fitsio gdml http imt mysql opengl pyroot roofit root7 rpath runtime_cxxmodules; shared sqlite ssl tmva tmva-cpu tmva-pymva tpython spectrum vdt x11 xml xrootd; ```; In particular the following for compressions:; ```; builtin_lz4 builtin_lzma builtin_zlib builtin_zstd; ```; ```; cmslpc-el9-heavy01:src (master) pcanal$ uname -a; Linux cmslpc-el9-heavy01.fnal.gov 5.14.0-427.28.1.el9_4.x86_64 #1 SMP; PREEMPT_DYNAMIC Fri Aug 2 03:44:10 EDT 2024 x86_64 x86_64 x86_64; GNU/Linux; ```; The test 18 and 43 produced a PNG file that slight smaller that expected:; ```; Test 18: TGaxis 2.................................................. OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 18 FAILED; Result = 15655; Reference = 16076; Error = 421 (was 350); C file result............................................. OK; ```; ```; Test 43: Divided pads and TLatex................................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 43 FAILED; Result = 24855; Reference = 25421; Error = 566 (was 300); C file result............................................. OK; ```. Visual inspection of the png files showed no differences.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16492
https://github.com/root-project/root/pull/16492:872,Testability,Test,Test,872,On el9 with the following config (and package from uscms cvmfs for non-builtin dependencies):; ```; cxx17 asimage builtin_clang builtin_cling builtin_gl2ps builtin_gtest builtin_llvm builtin_lz4 ; builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_xxhash builtin_zlib builtin_zstd clad; dataframe davix fitsio gdml http imt mysql opengl pyroot roofit root7 rpath runtime_cxxmodules; shared sqlite ssl tmva tmva-cpu tmva-pymva tpython spectrum vdt x11 xml xrootd; ```; In particular the following for compressions:; ```; builtin_lz4 builtin_lzma builtin_zlib builtin_zstd; ```; ```; cmslpc-el9-heavy01:src (master) pcanal$ uname -a; Linux cmslpc-el9-heavy01.fnal.gov 5.14.0-427.28.1.el9_4.x86_64 #1 SMP; PREEMPT_DYNAMIC Fri Aug 2 03:44:10 EDT 2024 x86_64 x86_64 x86_64; GNU/Linux; ```; The test 18 and 43 produced a PNG file that slight smaller that expected:; ```; Test 18: TGaxis 2.................................................. OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 18 FAILED; Result = 15655; Reference = 16076; Error = 421 (was 350); C file result............................................. OK; ```; ```; Test 43: Divided pads and TLatex................................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 43 FAILED; Result = 24855; Reference = 25421; Error = 566 (was 300); C file result............................................. OK; ```. Visual inspection of the png files showed no differences.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16492
https://github.com/root-project/root/pull/16492:1264,Testability,Test,Test,1264,On el9 with the following config (and package from uscms cvmfs for non-builtin dependencies):; ```; cxx17 asimage builtin_clang builtin_cling builtin_gl2ps builtin_gtest builtin_llvm builtin_lz4 ; builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_xxhash builtin_zlib builtin_zstd clad; dataframe davix fitsio gdml http imt mysql opengl pyroot roofit root7 rpath runtime_cxxmodules; shared sqlite ssl tmva tmva-cpu tmva-pymva tpython spectrum vdt x11 xml xrootd; ```; In particular the following for compressions:; ```; builtin_lz4 builtin_lzma builtin_zlib builtin_zstd; ```; ```; cmslpc-el9-heavy01:src (master) pcanal$ uname -a; Linux cmslpc-el9-heavy01.fnal.gov 5.14.0-427.28.1.el9_4.x86_64 #1 SMP; PREEMPT_DYNAMIC Fri Aug 2 03:44:10 EDT 2024 x86_64 x86_64 x86_64; GNU/Linux; ```; The test 18 and 43 produced a PNG file that slight smaller that expected:; ```; Test 18: TGaxis 2.................................................. OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 18 FAILED; Result = 15655; Reference = 16076; Error = 421 (was 350); C file result............................................. OK; ```; ```; Test 43: Divided pads and TLatex................................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 43 FAILED; Result = 24855; Reference = 25421; Error = 566 (was 300); C file result............................................. OK; ```. Visual inspection of the png files showed no differences.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16492
https://github.com/root-project/root/pull/16494:547,Availability,error,error,547,"On one installation of MacOS with Sonoma 14.6.1 and XCode 15.4 and clang-1500.3.9.4; (not sure about the xcode command line tool version), the generation of; G__Core.cxx failed until we applied the change in this commit. On another installation of MacOS with the same version numbers the; change was not needed but the change did not hurt either. ```; In module 'std' imported from input_line_1:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/c++/v1/__chrono/time_point.h:34:52:; error: missing '#include <__chrono/file_clock.h>'; '_FilesystemClock'; must be defined before it is used; template <class _Clock, class _Duration = typename _Clock::duration>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/c++/v1/__chrono/time_point.h:34:1:; note: in instantiation of default argument for; 'time_point<std::filesystem::_FilesystemClock>' required here; template <class _Clock, class _Duration = typename _Clock::duration>; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/c++/v1/__chrono/file_clock.h:51:8:; note: definition here is not reachable; struct _FilesystemClock {; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16494
https://github.com/root-project/root/pull/16494:7,Deployability,install,installation,7,"On one installation of MacOS with Sonoma 14.6.1 and XCode 15.4 and clang-1500.3.9.4; (not sure about the xcode command line tool version), the generation of; G__Core.cxx failed until we applied the change in this commit. On another installation of MacOS with the same version numbers the; change was not needed but the change did not hurt either. ```; In module 'std' imported from input_line_1:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/c++/v1/__chrono/time_point.h:34:52:; error: missing '#include <__chrono/file_clock.h>'; '_FilesystemClock'; must be defined before it is used; template <class _Clock, class _Duration = typename _Clock::duration>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/c++/v1/__chrono/time_point.h:34:1:; note: in instantiation of default argument for; 'time_point<std::filesystem::_FilesystemClock>' required here; template <class _Clock, class _Duration = typename _Clock::duration>; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/c++/v1/__chrono/file_clock.h:51:8:; note: definition here is not reachable; struct _FilesystemClock {; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16494
https://github.com/root-project/root/pull/16494:232,Deployability,install,installation,232,"On one installation of MacOS with Sonoma 14.6.1 and XCode 15.4 and clang-1500.3.9.4; (not sure about the xcode command line tool version), the generation of; G__Core.cxx failed until we applied the change in this commit. On another installation of MacOS with the same version numbers the; change was not needed but the change did not hurt either. ```; In module 'std' imported from input_line_1:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/c++/v1/__chrono/time_point.h:34:52:; error: missing '#include <__chrono/file_clock.h>'; '_FilesystemClock'; must be defined before it is used; template <class _Clock, class _Duration = typename _Clock::duration>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/c++/v1/__chrono/time_point.h:34:1:; note: in instantiation of default argument for; 'time_point<std::filesystem::_FilesystemClock>' required here; template <class _Clock, class _Duration = typename _Clock::duration>; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/c++/v1/__chrono/file_clock.h:51:8:; note: definition here is not reachable; struct _FilesystemClock {; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16494
https://github.com/root-project/root/pull/16495:63,Integrability,wrap,wrapper,63,"No actual behavior change is expected. CollectionProxy's `next wrapper/implementation` for Bitset is seemingly currently unused (hence the problem was not seen), however it will be used start in the next set of PRs introducing more Writing StreamerInfoActions (hence the existing bitset test will serve as tests). Related roottest PR: https://github.com/root-project/roottest/pull/1189",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16495
https://github.com/root-project/root/pull/16495:287,Testability,test,test,287,"No actual behavior change is expected. CollectionProxy's `next wrapper/implementation` for Bitset is seemingly currently unused (hence the problem was not seen), however it will be used start in the next set of PRs introducing more Writing StreamerInfoActions (hence the existing bitset test will serve as tests). Related roottest PR: https://github.com/root-project/roottest/pull/1189",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16495
https://github.com/root-project/root/pull/16495:306,Testability,test,tests,306,"No actual behavior change is expected. CollectionProxy's `next wrapper/implementation` for Bitset is seemingly currently unused (hence the problem was not seen), however it will be used start in the next set of PRs introducing more Writing StreamerInfoActions (hence the existing bitset test will serve as tests). Related roottest PR: https://github.com/root-project/roottest/pull/1189",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16495
https://github.com/root-project/root/issues/16496:240,Availability,error,error,240,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I have defined an enum class type, such that I can switch between mathematical representations easily. Considering the reproducer below, I get the following error message:; ```; Forward declarations from [..]/install/lib/libXXX.rootmap:3:11: error: unknown type name 'MyEnum'; template <MyEnum> class MyClass;; ^; ```. Here is an overview of the rootmap, MyEnum is not declared ; ``` #Rootmap; { decls }; [..]; template <MyEnum> class MyClass;; [..]; [ libXXX.dylib ]; [...]; ```. How can I fix the root map ? ; It seem `enum class` is missing in root map so MyEnum is not defined. ### Reproducer. Here are some abstractions:; ```; # LinkDef.h; #pragma link C++ enum class MyEnum;. #pragma link C++ class MyClass<MyEnum::E0>+;; #pragma link C++ class MyClass <MyEnum::E1>+;; #pragma link C++ class MyClass <MyEnum::E2>+;. # Header.h; enum class MyEnum { E0, E1, E2 };; template <MyEnum T = MyEnum::E0>; class MyClass : public MyClassAbstract; {; // [...]; }; ```. ### ROOT version. v6.32.04. ### Installation method. build from source. ### Operating system. macOS 15.0. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16496
https://github.com/root-project/root/issues/16496:325,Availability,error,error,325,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I have defined an enum class type, such that I can switch between mathematical representations easily. Considering the reproducer below, I get the following error message:; ```; Forward declarations from [..]/install/lib/libXXX.rootmap:3:11: error: unknown type name 'MyEnum'; template <MyEnum> class MyClass;; ^; ```. Here is an overview of the rootmap, MyEnum is not declared ; ``` #Rootmap; { decls }; [..]; template <MyEnum> class MyClass;; [..]; [ libXXX.dylib ]; [...]; ```. How can I fix the root map ? ; It seem `enum class` is missing in root map so MyEnum is not defined. ### Reproducer. Here are some abstractions:; ```; # LinkDef.h; #pragma link C++ enum class MyEnum;. #pragma link C++ class MyClass<MyEnum::E0>+;; #pragma link C++ class MyClass <MyEnum::E1>+;; #pragma link C++ class MyClass <MyEnum::E2>+;. # Header.h; enum class MyEnum { E0, E1, E2 };; template <MyEnum T = MyEnum::E0>; class MyClass : public MyClassAbstract; {; // [...]; }; ```. ### ROOT version. v6.32.04. ### Installation method. build from source. ### Operating system. macOS 15.0. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16496
https://github.com/root-project/root/issues/16496:292,Deployability,install,install,292,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I have defined an enum class type, such that I can switch between mathematical representations easily. Considering the reproducer below, I get the following error message:; ```; Forward declarations from [..]/install/lib/libXXX.rootmap:3:11: error: unknown type name 'MyEnum'; template <MyEnum> class MyClass;; ^; ```. Here is an overview of the rootmap, MyEnum is not declared ; ``` #Rootmap; { decls }; [..]; template <MyEnum> class MyClass;; [..]; [ libXXX.dylib ]; [...]; ```. How can I fix the root map ? ; It seem `enum class` is missing in root map so MyEnum is not defined. ### Reproducer. Here are some abstractions:; ```; # LinkDef.h; #pragma link C++ enum class MyEnum;. #pragma link C++ class MyClass<MyEnum::E0>+;; #pragma link C++ class MyClass <MyEnum::E1>+;; #pragma link C++ class MyClass <MyEnum::E2>+;. # Header.h; enum class MyEnum { E0, E1, E2 };; template <MyEnum T = MyEnum::E0>; class MyClass : public MyClassAbstract; {; // [...]; }; ```. ### ROOT version. v6.32.04. ### Installation method. build from source. ### Operating system. macOS 15.0. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16496
https://github.com/root-project/root/issues/16496:1079,Deployability,Install,Installation,1079,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I have defined an enum class type, such that I can switch between mathematical representations easily. Considering the reproducer below, I get the following error message:; ```; Forward declarations from [..]/install/lib/libXXX.rootmap:3:11: error: unknown type name 'MyEnum'; template <MyEnum> class MyClass;; ^; ```. Here is an overview of the rootmap, MyEnum is not declared ; ``` #Rootmap; { decls }; [..]; template <MyEnum> class MyClass;; [..]; [ libXXX.dylib ]; [...]; ```. How can I fix the root map ? ; It seem `enum class` is missing in root map so MyEnum is not defined. ### Reproducer. Here are some abstractions:; ```; # LinkDef.h; #pragma link C++ enum class MyEnum;. #pragma link C++ class MyClass<MyEnum::E0>+;; #pragma link C++ class MyClass <MyEnum::E1>+;; #pragma link C++ class MyClass <MyEnum::E2>+;. # Header.h; enum class MyEnum { E0, E1, E2 };; template <MyEnum T = MyEnum::E0>; class MyClass : public MyClassAbstract; {; // [...]; }; ```. ### ROOT version. v6.32.04. ### Installation method. build from source. ### Operating system. macOS 15.0. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16496
https://github.com/root-project/root/issues/16496:246,Integrability,message,message,246,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I have defined an enum class type, such that I can switch between mathematical representations easily. Considering the reproducer below, I get the following error message:; ```; Forward declarations from [..]/install/lib/libXXX.rootmap:3:11: error: unknown type name 'MyEnum'; template <MyEnum> class MyClass;; ^; ```. Here is an overview of the rootmap, MyEnum is not declared ; ``` #Rootmap; { decls }; [..]; template <MyEnum> class MyClass;; [..]; [ libXXX.dylib ]; [...]; ```. How can I fix the root map ? ; It seem `enum class` is missing in root map so MyEnum is not defined. ### Reproducer. Here are some abstractions:; ```; # LinkDef.h; #pragma link C++ enum class MyEnum;. #pragma link C++ class MyClass<MyEnum::E0>+;; #pragma link C++ class MyClass <MyEnum::E1>+;; #pragma link C++ class MyClass <MyEnum::E2>+;. # Header.h; enum class MyEnum { E0, E1, E2 };; template <MyEnum T = MyEnum::E0>; class MyClass : public MyClassAbstract; {; // [...]; }; ```. ### ROOT version. v6.32.04. ### Installation method. build from source. ### Operating system. macOS 15.0. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16496
https://github.com/root-project/root/issues/16498:114,Availability,error,errors,114,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. on MacOS 15, m1 pro, see the compiling errors below:. [ 77%] Built target clingMetaProcessor; [ 77%] Built target CLING; [ 77%] Built target LLVMRES; [ 77%] Built target ClingUtils; [ 77%] Built target Dictgen; [ 77%] Built target rootcling_stage1; [ 77%] Built target MetaCling; [ 77%] Generating G__Core.cxx, ../lib/Core.pcm; [ 77%] Linking CXX shared library ../../../lib/libCling.so; [ 77%] Built target Cling; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16498
https://github.com/root-project/root/issues/16498:1092,Availability,error,error,1092,"77%] Built target clingMetaProcessor; [ 77%] Built target CLING; [ 77%] Built target LLVMRES; [ 77%] Built target ClingUtils; [ 77%] Built target Dictgen; [ 77%] Built target rootcling_stage1; [ 77%] Built target MetaCling; [ 77%] Generating G__Core.cxx, ../lib/Core.pcm; [ 77%] Linking CXX shared library ../../../lib/libCling.so; [ 77%] Built target Cling; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16498
https://github.com/root-project/root/issues/16498:1322,Availability,error,error,1322,"ling; [ 77%] Generating G__Core.cxx, ../lib/Core.pcm; [ 77%] Linking CXX shared library ../../../lib/libCling.so; [ 77%] Built target Cling; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/wctype.h:68:; /Applications/Xcode.app/Cont",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16498
https://github.com/root-project/root/issues/16498:2451,Availability,error,error,2451,"d from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/wctype.h:68:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; #include <_wctype.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wchar' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wchar.h:67:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wchar.h:76:10: fatal error: could not build module '__wctype'; #include <sys/_types/_mbstate_t.h>; ~~~~~~~~^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; W",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16498
https://github.com/root-project/root/issues/16498:2953,Availability,error,error,2953,"/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/wctype.h:68:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; #include <_wctype.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wchar' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wchar.h:67:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wchar.h:76:10: fatal error: could not build module '__wctype'; #include <sys/_types/_mbstate_t.h>; ~~~~~~~~^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimeUnive",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16498
https://github.com/root-project/root/issues/16498:3067,Availability,error,error,3067,"k/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/wctype.h:68:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; #include <_wctype.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wchar' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wchar.h:67:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wchar.h:76:10: fatal error: could not build module '__wctype'; #include <sys/_types/_mbstate_t.h>; ~~~~~~~~^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16498
https://github.com/root-project/root/issues/16498:3835,Availability,error,error,3835,"SDKs/MacOSX.sdk/usr/include/_wchar.h:76:10: fatal error: could not build module '__wctype'; #include <sys/_types/_mbstate_t.h>; ~~~~~~~~^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):; 0 rootcling_stage1 0x0000000107881888 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56; 1 rootcling_stage1 0x00000001078807fc llvm::sys::RunSignalHandlers() + 64; 2 rootcling_stage1 0x0000000107881ea4 SignalHandler(int) + 292; 3 libsystem_platform.dylib 0x0000000187a44184 _sigtramp + 56; 4 rootcling_stage1 0x00000001050ba940 clang::Parser::ParseCompoundStatementBody(bool) + 316; 5 rootcling_stage1 0x00000001050ba940 clang::Parser::ParseCompoundStatementBody(bool) + 316; 6 rootcling_stage1 0x00000001050b30e4 clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16498
https://github.com/root-project/root/issues/16498:4002,Availability,error,error,4002,"; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):; 0 rootcling_stage1 0x0000000107881888 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56; 1 rootcling_stage1 0x00000001078807fc llvm::sys::RunSignalHandlers() + 64; 2 rootcling_stage1 0x0000000107881ea4 SignalHandler(int) + 292; 3 libsystem_platform.dylib 0x0000000187a44184 _sigtramp + 56; 4 rootcling_stage1 0x00000001050ba940 clang::Parser::ParseCompoundStatementBody(bool) + 316; 5 rootcling_stage1 0x00000001050ba940 clang::Parser::ParseCompoundStatementBody(bool) + 316; 6 rootcling_stage1 0x00000001050b30e4 clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributes&, clang::ParsedAttributes&) + 2072; 7 rootcling_stage1 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16498
https://github.com/root-project/root/issues/16498:17439,Availability,fault,fault,17439,ectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TMacOSXSystem.h TUnixSystem.h /Users/josiahlee/WORK/Tools/root-6.32.04/core/base/inc/LinkDef.h; 1.	/Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimePrintValue.h:319:5: current parser token 'using'; 2.	/Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimePrintValue.h:33:1: parsing namespace 'cling'; 3.	/Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimePrintValue.h:318:3: in compound statement ('{}'); Segmentation fault; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make: *** [all] Error 2. ### Reproducer. build from source. ### ROOT version. 6.32.04. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16498
https://github.com/root-project/root/issues/16498:17478,Availability,Error,Error,17478,ectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TMacOSXSystem.h TUnixSystem.h /Users/josiahlee/WORK/Tools/root-6.32.04/core/base/inc/LinkDef.h; 1.	/Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimePrintValue.h:319:5: current parser token 'using'; 2.	/Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimePrintValue.h:33:1: parsing namespace 'cling'; 3.	/Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimePrintValue.h:318:3: in compound statement ('{}'); Segmentation fault; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make: *** [all] Error 2. ### Reproducer. build from source. ### ROOT version. 6.32.04. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16498
https://github.com/root-project/root/issues/16498:17534,Availability,Error,Error,17534,ectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TMacOSXSystem.h TUnixSystem.h /Users/josiahlee/WORK/Tools/root-6.32.04/core/base/inc/LinkDef.h; 1.	/Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimePrintValue.h:319:5: current parser token 'using'; 2.	/Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimePrintValue.h:33:1: parsing namespace 'cling'; 3.	/Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimePrintValue.h:318:3: in compound statement ('{}'); Segmentation fault; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make: *** [all] Error 2. ### Reproducer. build from source. ### ROOT version. 6.32.04. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16498
https://github.com/root-project/root/issues/16498:17559,Availability,Error,Error,17559,ectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TMacOSXSystem.h TUnixSystem.h /Users/josiahlee/WORK/Tools/root-6.32.04/core/base/inc/LinkDef.h; 1.	/Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimePrintValue.h:319:5: current parser token 'using'; 2.	/Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimePrintValue.h:33:1: parsing namespace 'cling'; 3.	/Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimePrintValue.h:318:3: in compound statement ('{}'); Segmentation fault; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make: *** [all] Error 2. ### Reproducer. build from source. ### ROOT version. 6.32.04. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16498
https://github.com/root-project/root/issues/16498:11025,Deployability,install,install,11025,"const*) + 2528; 36 rootcling_stage1 0x0000000104920bd4 RootClingMain(int, char**, bool) + 13976; 37 rootcling_stage1 0x000000010492fc04 ROOT_rootcling_Driver + 868; 38 rootcling_stage1 0x00000001048c8308 main + 64; 39 dyld 0x000000018768c274 start + 2840; PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.; Stack dump:; 0.	Program arguments: /Users/josiahlee/WORK/Tools/root_build_release/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /Users/josiahlee/WORK/Tools/root_build_release/lib/libCore.so -excludePath /Users/josiahlee/WORK/Tools/root-6.32.04 -excludePath /Users/josiahlee/WORK/Tools/root_build_release/ginclude -excludePath /Users/josiahlee/WORK/Tools/root_build_release/externals -excludePath /Users/josiahlee/WORK/Tools/root_build_release/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -DR__ARC4_STDLIB -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Users/josiahlee/WORK/Tools/GEANT/install/include -compilerI/Users/josiahlee/WORK/Tools/clhep_install/include -compilerI/opt/homebrew/opt/libomp/include -compilerI/opt/homebrew/opt/open-mpi/include -compilerI/Users/josiahlee/WORK/Tools/xerces-c-3.2.4-install/include -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1 -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -compilerI/Users/josiahlee/WORK/Tools/GEANT/install/include -compilerI/Users/josiahlee/WORK/Tools/clhep_install/include -compilerI/opt/homebrew/opt/libo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16498
https://github.com/root-project/root/issues/16498:11242,Deployability,install,install,11242,rguments: /Users/josiahlee/WORK/Tools/root_build_release/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /Users/josiahlee/WORK/Tools/root_build_release/lib/libCore.so -excludePath /Users/josiahlee/WORK/Tools/root-6.32.04 -excludePath /Users/josiahlee/WORK/Tools/root_build_release/ginclude -excludePath /Users/josiahlee/WORK/Tools/root_build_release/externals -excludePath /Users/josiahlee/WORK/Tools/root_build_release/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -DR__ARC4_STDLIB -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Users/josiahlee/WORK/Tools/GEANT/install/include -compilerI/Users/josiahlee/WORK/Tools/clhep_install/include -compilerI/opt/homebrew/opt/libomp/include -compilerI/opt/homebrew/opt/open-mpi/include -compilerI/Users/josiahlee/WORK/Tools/xerces-c-3.2.4-install/include -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1 -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -compilerI/Users/josiahlee/WORK/Tools/GEANT/install/include -compilerI/Users/josiahlee/WORK/Tools/clhep_install/include -compilerI/opt/homebrew/opt/libomp/include -compilerI/opt/homebrew/opt/open-mpi/include -compilerI/Users/josiahlee/WORK/Tools/xerces-c-3.2.4-install/include -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include -compilerI/Applications/Xcode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16498
https://github.com/root-project/root/issues/16498:11766,Deployability,install,install,11766,mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -DR__ARC4_STDLIB -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Users/josiahlee/WORK/Tools/GEANT/install/include -compilerI/Users/josiahlee/WORK/Tools/clhep_install/include -compilerI/opt/homebrew/opt/libomp/include -compilerI/opt/homebrew/opt/open-mpi/include -compilerI/Users/josiahlee/WORK/Tools/xerces-c-3.2.4-install/include -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1 -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -compilerI/Users/josiahlee/WORK/Tools/GEANT/install/include -compilerI/Users/josiahlee/WORK/Tools/clhep_install/include -compilerI/opt/homebrew/opt/libomp/include -compilerI/opt/homebrew/opt/open-mpi/include -compilerI/Users/josiahlee/WORK/Tools/xerces-c-3.2.4-install/include -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -I/Users/josiahlee/WORK/Tools/root_build_release/include -I/opt/homebrew/include -I/Users/josiahlee/WORK/Tools/root_build_release/ginclude -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/base/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/base/v7/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/clib/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/clingutils/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/clingutils/res -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/cont/inc -I/Users,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16498
https://github.com/root-project/root/issues/16498:11983,Deployability,install,install,11983,ee/WORK/Tools/GEANT/install/include -compilerI/Users/josiahlee/WORK/Tools/clhep_install/include -compilerI/opt/homebrew/opt/libomp/include -compilerI/opt/homebrew/opt/open-mpi/include -compilerI/Users/josiahlee/WORK/Tools/xerces-c-3.2.4-install/include -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1 -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -compilerI/Users/josiahlee/WORK/Tools/GEANT/install/include -compilerI/Users/josiahlee/WORK/Tools/clhep_install/include -compilerI/opt/homebrew/opt/libomp/include -compilerI/opt/homebrew/opt/open-mpi/include -compilerI/Users/josiahlee/WORK/Tools/xerces-c-3.2.4-install/include -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -I/Users/josiahlee/WORK/Tools/root_build_release/include -I/opt/homebrew/include -I/Users/josiahlee/WORK/Tools/root_build_release/ginclude -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/base/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/base/v7/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/clib/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/clingutils/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/clingutils/res -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/cont/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/foundation/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/foundation/v7/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/co,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16498
https://github.com/root-project/root/issues/16498:17634,Deployability,Install,Installation,17634,ectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TMacOSXSystem.h TUnixSystem.h /Users/josiahlee/WORK/Tools/root-6.32.04/core/base/inc/LinkDef.h; 1.	/Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimePrintValue.h:319:5: current parser token 'using'; 2.	/Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimePrintValue.h:33:1: parsing namespace 'cling'; 3.	/Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimePrintValue.h:318:3: in compound statement ('{}'); Segmentation fault; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make: *** [all] Error 2. ### Reproducer. build from source. ### ROOT version. 6.32.04. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16498
https://github.com/root-project/root/issues/16498:1106,Integrability,depend,dependency,1106,"77%] Built target clingMetaProcessor; [ 77%] Built target CLING; [ 77%] Built target LLVMRES; [ 77%] Built target ClingUtils; [ 77%] Built target Dictgen; [ 77%] Built target rootcling_stage1; [ 77%] Built target MetaCling; [ 77%] Generating G__Core.cxx, ../lib/Core.pcm; [ 77%] Linking CXX shared library ../../../lib/libCling.so; [ 77%] Built target Cling; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16498
https://github.com/root-project/root/issues/16498:14214,Integrability,Message,MessageTypes,14214,ols/root-6.32.04/core/textinput/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/textinput/src -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/thread/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/zip/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/lzma/inc -I/opt/homebrew/include -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/lz4/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/zstd/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/builtins/zstd -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/macosx/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/unix/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/unix/../clib/res -I/Users/josiahlee/WORK/Tools/root_build_release/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Users/josiahlee/WORK/Tools/root-6.32.04/builtins/zlib -I/Users/josiahlee/WORK/Tools/root-6.32.04/builtins/xxhash ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMapFile.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16498
https://github.com/root-project/root/issues/16498:7998,Performance,load,loadModule,7998,"tcling_stage1 0x00000001077c389c llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 140; 20 rootcling_stage1 0x0000000104e0948c compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>) + 2848; 21 rootcling_stage1 0x0000000104e0a6d0 compileModuleAndReadASTImpl(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) + 1860; 22 rootcling_stage1 0x0000000104e06378 compileModuleAndReadAST(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) + 1284; 23 rootcling_stage1 0x0000000104e05b54 clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) + 2112; 24 rootcling_stage1 0x0000000104e065c8 clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation>>, clang::Module::NameVisibilityKind, bool) + 516; 25 rootcling_stage1 0x0000000105db3628 clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) + 3988; 26 rootcling_stage1 0x0000000105dadc08 clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) + 144; 27 rootcling_stage1 0x0000000105dae410 clang::Preprocessor::HandleDirective(clang::Token&) + 1604; 28 rootcling_stage1 0x0000000105d85814 clang::Lexer::LexTokenInternal(clang::Token&, bool) + 5604; 29 rootcling_stage1 0x0000000105de0c28 clang::Preprocessor::Lex(clang::Token&) + 104; 30 rootcling_stage1 0x00000001050cfd08 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16498
https://github.com/root-project/root/pull/16499:235,Availability,Error,Error,235,"The `c++ --print-file-name` command now seems to work, and it is indeed the more appropriate way to get the location of the asan shared library on MacOS. Also fix the following problems occurring when building on MacOS with -Dasan=ON. Error:; ```; CMake Error at cmake/modules/CheckAtomic.cmake:59 (message):; Host compiler appears to require libatomic, but cannot find it.; ```; Fix: fix typos in asan symbols (extra `_`) and specify correct linker flag (-U). Error:; ```; error: static AddressSanitizer runtime is not supported on darwin; ```; Fix: remove `-static-libsan` flag. This is required by latest MacOS Xcode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16499
https://github.com/root-project/root/pull/16499:254,Availability,Error,Error,254,"The `c++ --print-file-name` command now seems to work, and it is indeed the more appropriate way to get the location of the asan shared library on MacOS. Also fix the following problems occurring when building on MacOS with -Dasan=ON. Error:; ```; CMake Error at cmake/modules/CheckAtomic.cmake:59 (message):; Host compiler appears to require libatomic, but cannot find it.; ```; Fix: fix typos in asan symbols (extra `_`) and specify correct linker flag (-U). Error:; ```; error: static AddressSanitizer runtime is not supported on darwin; ```; Fix: remove `-static-libsan` flag. This is required by latest MacOS Xcode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16499
https://github.com/root-project/root/pull/16499:461,Availability,Error,Error,461,"The `c++ --print-file-name` command now seems to work, and it is indeed the more appropriate way to get the location of the asan shared library on MacOS. Also fix the following problems occurring when building on MacOS with -Dasan=ON. Error:; ```; CMake Error at cmake/modules/CheckAtomic.cmake:59 (message):; Host compiler appears to require libatomic, but cannot find it.; ```; Fix: fix typos in asan symbols (extra `_`) and specify correct linker flag (-U). Error:; ```; error: static AddressSanitizer runtime is not supported on darwin; ```; Fix: remove `-static-libsan` flag. This is required by latest MacOS Xcode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16499
https://github.com/root-project/root/pull/16499:474,Availability,error,error,474,"The `c++ --print-file-name` command now seems to work, and it is indeed the more appropriate way to get the location of the asan shared library on MacOS. Also fix the following problems occurring when building on MacOS with -Dasan=ON. Error:; ```; CMake Error at cmake/modules/CheckAtomic.cmake:59 (message):; Host compiler appears to require libatomic, but cannot find it.; ```; Fix: fix typos in asan symbols (extra `_`) and specify correct linker flag (-U). Error:; ```; error: static AddressSanitizer runtime is not supported on darwin; ```; Fix: remove `-static-libsan` flag. This is required by latest MacOS Xcode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16499
https://github.com/root-project/root/pull/16499:299,Integrability,message,message,299,"The `c++ --print-file-name` command now seems to work, and it is indeed the more appropriate way to get the location of the asan shared library on MacOS. Also fix the following problems occurring when building on MacOS with -Dasan=ON. Error:; ```; CMake Error at cmake/modules/CheckAtomic.cmake:59 (message):; Host compiler appears to require libatomic, but cannot find it.; ```; Fix: fix typos in asan symbols (extra `_`) and specify correct linker flag (-U). Error:; ```; error: static AddressSanitizer runtime is not supported on darwin; ```; Fix: remove `-static-libsan` flag. This is required by latest MacOS Xcode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16499
https://github.com/root-project/root/pull/16501:32,Availability,failure,failures,32,"This should fix the recent test failures seen in `gtest-tree-treeplayer-test-treetreeplayertestUnit`. Full lldb stack traces at https://codimd.web.cern.ch/s/QKEMHg5H1. # PR description. The test was dynamically allocating the array data members of the `Data` struct, but never deallocating them. This commit polishes the `Data` struct definition and ensures proper management of the data members. The previous way of writing data to the TTree was leading to a bad memory access in the ReadBasicPointer inlined function in TStreamerInfoReadBuffer.cxx while reading the `double*` array. In particular, the issue arises when accessing and then deallocating the array at the current index provided by the `TCompInfo` object. ```; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x00000001044cf140 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; 920 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong: ReadBasicPointer(Long_t); continue;; 921 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong64: ReadBasicPointer(Long64_t); continue;; 922 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kFloat: ReadBasicPointer(Float_t); continue;; -> 923 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kDouble: ReadBasicPointer(Double_t); continue;; 924 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUChar: ReadBasicPointer(UChar_t); continue;; 925 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUInt: ReadBasicPointer(UInt_t); continue;; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x000000010",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16501
https://github.com/root-project/root/pull/16501:5246,Modifiability,config,config,5246,"76>: casalb w8, w9, [x22]; 0x107bac678 <+80>: cmp w8, #0x2; 0x107bac67c <+84>: b.ne 0x107bac6f4 ; <+204>; 0x107bac680 <+88>: mov x8, #-0x100000000 ; =-4294967296; Target 0: (repro.out) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0xbebebebebebebeae); * frame #0: 0x0000000107bac674 libclang_rt.asan_osx_dynamic.dylib`__asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) + 76; frame #1: 0x0000000107c0c444 libclang_rt.asan_osx_dynamic.dylib`wrap__ZdaPv + 232; frame #2: 0x00000001044d4a60 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; frame #3: 0x0000000103ffc888 libRIO.so`TStreamerInfoActions::GenericReadAction(buf=0x000060e00010ef00, addr=0x0000602000056bd0, config=0x0000604000149910) at TStreamerInfoActions.cxx:195:45; frame #4: 0x0000000103caa5ec libRIO.so`TStreamerInfoActions::TConfiguredAction::operator()(this=0x00006030001693f0, buffer=0x000060e00010ef00, object=0x0000602000056bd0) const at TStreamerInfoActions.h:123:17; frame #5: 0x0000000103ca9ef8 libRIO.so`TBufferFile::ApplySequence(this=0x000060e00010ef00, sequence=0x000060600011ac20, obj=0x0000602000056bd0) at TBufferFile.cxx:3702:10; frame #6: 0x00000001064bc570 libTree.so`TBranchElement::ReadLeavesMemberBranchCount(this=0x0000619000566380, b=0x000060e00010ef00) at TBranchElement.cxx:4603:6; frame #7: 0x0000000106455ce4 libTree.so`TBranch::GetEntry(this=0x0000619000566380, entry=0, getall=0) at TBranch.cxx:1753:4; frame #8: 0x00000001064a1764 libTree.so`TBranchElement::GetEntry(this=0x0000619000566380, entry=0, getall=0) at TBranchElement.cxx:2783:27; frame #9: 0x000000010739915c libTreePlayer.so`ROOT::Detail::TBranchProxy::Read(this=0x00006110000c9580) at TB",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16501
https://github.com/root-project/root/pull/16501:802,Performance,queue,queue,802,"This should fix the recent test failures seen in `gtest-tree-treeplayer-test-treetreeplayertestUnit`. Full lldb stack traces at https://codimd.web.cern.ch/s/QKEMHg5H1. # PR description. The test was dynamically allocating the array data members of the `Data` struct, but never deallocating them. This commit polishes the `Data` struct definition and ensures proper management of the data members. The previous way of writing data to the TTree was leading to a bad memory access in the ReadBasicPointer inlined function in TStreamerInfoReadBuffer.cxx while reading the `double*` array. In particular, the issue arises when accessing and then deallocating the array at the current index provided by the `TCompInfo` object. ```; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x00000001044cf140 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; 920 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong: ReadBasicPointer(Long_t); continue;; 921 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong64: ReadBasicPointer(Long64_t); continue;; 922 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kFloat: ReadBasicPointer(Float_t); continue;; -> 923 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kDouble: ReadBasicPointer(Double_t); continue;; 924 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUChar: ReadBasicPointer(UChar_t); continue;; 925 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUInt: ReadBasicPointer(UInt_t); continue;; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x000000010",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16501
https://github.com/root-project/root/pull/16501:1924,Performance,queue,queue,1924,"merInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; 920 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong: ReadBasicPointer(Long_t); continue;; 921 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong64: ReadBasicPointer(Long64_t); continue;; 922 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kFloat: ReadBasicPointer(Float_t); continue;; -> 923 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kDouble: ReadBasicPointer(Double_t); continue;; 924 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUChar: ReadBasicPointer(UChar_t); continue;; 925 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUInt: ReadBasicPointer(UInt_t); continue;; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x00000001044cf184 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char** const&, TStreamerInfo::TCompInfo* const*, int, int, int, int, int) [inlined] TBuffer::BufferSize(this=0x000060e00010ef00) const at TBuffer.h:98:41 [opt]; 95 	 TObject *GetParent() const;; 96 	 char *Buffer() const { return fBuffer; }; 97 	 char *GetCurrent() const { return fBufCur; }; -> 98 	 Int_t BufferSize() const { return fBufSize; }; 99 	 void DetachBuffer() { fBuffer = nullptr; }; 100 	 Int_t Length() const { return (Int_t)(fBufCur - fBuffer); }; 101 	 void Expand(Int_t newsize, Bool_t copy = kTRUE); // expand buffer to newsize; Target 0: (repro.out) stopped.; (lldb) p fBufSize; (Int_t) 32008; (lldb) s; Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x00000001044cf194 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16501
https://github.com/root-project/root/pull/16501:2727,Performance,queue,queue,2727,"reamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUInt: ReadBasicPointer(UInt_t); continue;; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x00000001044cf184 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char** const&, TStreamerInfo::TCompInfo* const*, int, int, int, int, int) [inlined] TBuffer::BufferSize(this=0x000060e00010ef00) const at TBuffer.h:98:41 [opt]; 95 	 TObject *GetParent() const;; 96 	 char *Buffer() const { return fBuffer; }; 97 	 char *GetCurrent() const { return fBufCur; }; -> 98 	 Int_t BufferSize() const { return fBufSize; }; 99 	 void DetachBuffer() { fBuffer = nullptr; }; 100 	 Int_t Length() const { return (Int_t)(fBufCur - fBuffer); }; 101 	 void Expand(Int_t newsize, Bool_t copy = kTRUE); // expand buffer to newsize; Target 0: (repro.out) stopped.; (lldb) p fBufSize; (Int_t) 32008; (lldb) s; Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x00000001044cf194 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; 920 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong: ReadBasicPointer(Long_t); continue;; 921 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong64: ReadBasicPointer(Long64_t); continue;; 922 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kFloat: ReadBasicPointer(Float_t); continue;; -> 923 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kDouble: ReadBasicPointer(Double_t); continue;; 924 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUChar: ReadBasicPointer(UChar_t); continue;; 925 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16501
https://github.com/root-project/root/pull/16501:3851,Performance,queue,queue,3851,"erInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; 920 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong: ReadBasicPointer(Long_t); continue;; 921 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong64: ReadBasicPointer(Long64_t); continue;; 922 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kFloat: ReadBasicPointer(Float_t); continue;; -> 923 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kDouble: ReadBasicPointer(Double_t); continue;; 924 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUChar: ReadBasicPointer(UChar_t); continue;; 925 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUInt: ReadBasicPointer(UInt_t); continue;; Target 0: (repro.out) stopped.; (lldb) s; Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0xbebebebebebebeae); frame #0: 0x0000000107bac674 libclang_rt.asan_osx_dynamic.dylib`__asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) + 76; libclang_rt.asan_osx_dynamic.dylib`__asan::Allocator::Deallocate:; -> 0x107bac674 <+76>: casalb w8, w9, [x22]; 0x107bac678 <+80>: cmp w8, #0x2; 0x107bac67c <+84>: b.ne 0x107bac6f4 ; <+204>; 0x107bac680 <+88>: mov x8, #-0x100000000 ; =-4294967296; Target 0: (repro.out) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0xbebebebebebebeae); * frame #0: 0x0000000107bac674 libclang_rt.asan_osx_dynamic.dylib`__asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) + 76; frame #1: 0x0000000107c0c444 libclang_rt.asan_osx_dynamic.dylib`wrap__ZdaPv + 232; frame #2: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16501
https://github.com/root-project/root/pull/16501:4444,Performance,queue,queue,4444,"e: ReadBasicPointer(Double_t); continue;; 924 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUChar: ReadBasicPointer(UChar_t); continue;; 925 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUInt: ReadBasicPointer(UInt_t); continue;; Target 0: (repro.out) stopped.; (lldb) s; Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0xbebebebebebebeae); frame #0: 0x0000000107bac674 libclang_rt.asan_osx_dynamic.dylib`__asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) + 76; libclang_rt.asan_osx_dynamic.dylib`__asan::Allocator::Deallocate:; -> 0x107bac674 <+76>: casalb w8, w9, [x22]; 0x107bac678 <+80>: cmp w8, #0x2; 0x107bac67c <+84>: b.ne 0x107bac6f4 ; <+204>; 0x107bac680 <+88>: mov x8, #-0x100000000 ; =-4294967296; Target 0: (repro.out) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0xbebebebebebebeae); * frame #0: 0x0000000107bac674 libclang_rt.asan_osx_dynamic.dylib`__asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) + 76; frame #1: 0x0000000107c0c444 libclang_rt.asan_osx_dynamic.dylib`wrap__ZdaPv + 232; frame #2: 0x00000001044d4a60 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; frame #3: 0x0000000103ffc888 libRIO.so`TStreamerInfoActions::GenericReadAction(buf=0x000060e00010ef00, addr=0x0000602000056bd0, config=0x0000604000149910) at TStreamerInfoActions.cxx:195:45; frame #4: 0x0000000103caa5ec libRIO.so`TStreamerInfoActions::TConfiguredAction::operator()(this=0x00006030001693f0, buffer=0x0000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16501
https://github.com/root-project/root/pull/16501:471,Security,access,access,471,"This should fix the recent test failures seen in `gtest-tree-treeplayer-test-treetreeplayertestUnit`. Full lldb stack traces at https://codimd.web.cern.ch/s/QKEMHg5H1. # PR description. The test was dynamically allocating the array data members of the `Data` struct, but never deallocating them. This commit polishes the `Data` struct definition and ensures proper management of the data members. The previous way of writing data to the TTree was leading to a bad memory access in the ReadBasicPointer inlined function in TStreamerInfoReadBuffer.cxx while reading the `double*` array. In particular, the issue arises when accessing and then deallocating the array at the current index provided by the `TCompInfo` object. ```; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x00000001044cf140 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; 920 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong: ReadBasicPointer(Long_t); continue;; 921 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong64: ReadBasicPointer(Long64_t); continue;; 922 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kFloat: ReadBasicPointer(Float_t); continue;; -> 923 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kDouble: ReadBasicPointer(Double_t); continue;; 924 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUChar: ReadBasicPointer(UChar_t); continue;; 925 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUInt: ReadBasicPointer(UInt_t); continue;; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x000000010",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16501
https://github.com/root-project/root/pull/16501:622,Security,access,accessing,622,"This should fix the recent test failures seen in `gtest-tree-treeplayer-test-treetreeplayertestUnit`. Full lldb stack traces at https://codimd.web.cern.ch/s/QKEMHg5H1. # PR description. The test was dynamically allocating the array data members of the `Data` struct, but never deallocating them. This commit polishes the `Data` struct definition and ensures proper management of the data members. The previous way of writing data to the TTree was leading to a bad memory access in the ReadBasicPointer inlined function in TStreamerInfoReadBuffer.cxx while reading the `double*` array. In particular, the issue arises when accessing and then deallocating the array at the current index provided by the `TCompInfo` object. ```; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x00000001044cf140 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; 920 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong: ReadBasicPointer(Long_t); continue;; 921 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong64: ReadBasicPointer(Long64_t); continue;; 922 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kFloat: ReadBasicPointer(Float_t); continue;; -> 923 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kDouble: ReadBasicPointer(Double_t); continue;; 924 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUChar: ReadBasicPointer(UChar_t); continue;; 925 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUInt: ReadBasicPointer(UInt_t); continue;; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x000000010",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16501
https://github.com/root-project/root/pull/16501:27,Testability,test,test,27,"This should fix the recent test failures seen in `gtest-tree-treeplayer-test-treetreeplayertestUnit`. Full lldb stack traces at https://codimd.web.cern.ch/s/QKEMHg5H1. # PR description. The test was dynamically allocating the array data members of the `Data` struct, but never deallocating them. This commit polishes the `Data` struct definition and ensures proper management of the data members. The previous way of writing data to the TTree was leading to a bad memory access in the ReadBasicPointer inlined function in TStreamerInfoReadBuffer.cxx while reading the `double*` array. In particular, the issue arises when accessing and then deallocating the array at the current index provided by the `TCompInfo` object. ```; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x00000001044cf140 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; 920 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong: ReadBasicPointer(Long_t); continue;; 921 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong64: ReadBasicPointer(Long64_t); continue;; 922 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kFloat: ReadBasicPointer(Float_t); continue;; -> 923 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kDouble: ReadBasicPointer(Double_t); continue;; 924 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUChar: ReadBasicPointer(UChar_t); continue;; 925 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUInt: ReadBasicPointer(UInt_t); continue;; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x000000010",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16501
https://github.com/root-project/root/pull/16501:72,Testability,test,test-treetreeplayertestUnit,72,"This should fix the recent test failures seen in `gtest-tree-treeplayer-test-treetreeplayertestUnit`. Full lldb stack traces at https://codimd.web.cern.ch/s/QKEMHg5H1. # PR description. The test was dynamically allocating the array data members of the `Data` struct, but never deallocating them. This commit polishes the `Data` struct definition and ensures proper management of the data members. The previous way of writing data to the TTree was leading to a bad memory access in the ReadBasicPointer inlined function in TStreamerInfoReadBuffer.cxx while reading the `double*` array. In particular, the issue arises when accessing and then deallocating the array at the current index provided by the `TCompInfo` object. ```; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x00000001044cf140 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; 920 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong: ReadBasicPointer(Long_t); continue;; 921 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong64: ReadBasicPointer(Long64_t); continue;; 922 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kFloat: ReadBasicPointer(Float_t); continue;; -> 923 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kDouble: ReadBasicPointer(Double_t); continue;; 924 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUChar: ReadBasicPointer(UChar_t); continue;; 925 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUInt: ReadBasicPointer(UInt_t); continue;; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x000000010",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16501
https://github.com/root-project/root/pull/16501:190,Testability,test,test,190,"This should fix the recent test failures seen in `gtest-tree-treeplayer-test-treetreeplayertestUnit`. Full lldb stack traces at https://codimd.web.cern.ch/s/QKEMHg5H1. # PR description. The test was dynamically allocating the array data members of the `Data` struct, but never deallocating them. This commit polishes the `Data` struct definition and ensures proper management of the data members. The previous way of writing data to the TTree was leading to a bad memory access in the ReadBasicPointer inlined function in TStreamerInfoReadBuffer.cxx while reading the `double*` array. In particular, the issue arises when accessing and then deallocating the array at the current index provided by the `TCompInfo` object. ```; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x00000001044cf140 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; 920 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong: ReadBasicPointer(Long_t); continue;; 921 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong64: ReadBasicPointer(Long64_t); continue;; 922 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kFloat: ReadBasicPointer(Float_t); continue;; -> 923 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kDouble: ReadBasicPointer(Double_t); continue;; 924 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUChar: ReadBasicPointer(UChar_t); continue;; 925 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUInt: ReadBasicPointer(UInt_t); continue;; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x000000010",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16501
https://github.com/root-project/root/pull/16501:6895,Usability,simpl,simpleTest,6895,"unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; frame #3: 0x0000000103ffc888 libRIO.so`TStreamerInfoActions::GenericReadAction(buf=0x000060e00010ef00, addr=0x0000602000056bd0, config=0x0000604000149910) at TStreamerInfoActions.cxx:195:45; frame #4: 0x0000000103caa5ec libRIO.so`TStreamerInfoActions::TConfiguredAction::operator()(this=0x00006030001693f0, buffer=0x000060e00010ef00, object=0x0000602000056bd0) const at TStreamerInfoActions.h:123:17; frame #5: 0x0000000103ca9ef8 libRIO.so`TBufferFile::ApplySequence(this=0x000060e00010ef00, sequence=0x000060600011ac20, obj=0x0000602000056bd0) at TBufferFile.cxx:3702:10; frame #6: 0x00000001064bc570 libTree.so`TBranchElement::ReadLeavesMemberBranchCount(this=0x0000619000566380, b=0x000060e00010ef00) at TBranchElement.cxx:4603:6; frame #7: 0x0000000106455ce4 libTree.so`TBranch::GetEntry(this=0x0000619000566380, entry=0, getall=0) at TBranch.cxx:1753:4; frame #8: 0x00000001064a1764 libTree.so`TBranchElement::GetEntry(this=0x0000619000566380, entry=0, getall=0) at TBranchElement.cxx:2783:27; frame #9: 0x000000010739915c libTreePlayer.so`ROOT::Detail::TBranchProxy::Read(this=0x00006110000c9580) at TBranchProxy.h:163:42; frame #10: 0x0000000107649ba8 libTreePlayer.so`(anonymous namespace)::TObjectArrayReader::At(this=0x0000603000169900, proxy=0x00006110000c9580, idx=1) at TTreeReaderArray.cxx:176:22; frame #11: 0x000000010000c2e4 repro.out`ROOT::Internal::TTreeReaderArrayBase::UntypedAt(this=0x000000016fdfe740, idx=1) const at TTreeReaderArray.h:41:62; frame #12: 0x000000010000c200 repro.out`TTreeReaderArray<double>::At(this=0x000000016fdfe740, idx=1) at TTreeReaderArray.h:205:54; frame #13: 0x00000001000065e0 repro.out`TTreeReaderArray<double>::operator[](this=0x000000016fdfe740, idx=1) at TTreeReaderArray.h:207:44; frame #14: 0x0000000100007b48 repro.out`simpleTest() at repro.cpp:123:26; frame #15: 0x0000000100007e10 repro.out`main at repro.cpp:128:5; frame #16: 0x000000018c718274 dyld`start + 2840; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16501
https://github.com/root-project/root/issues/16502:108,Availability,Error,Error,108,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When RDataFrame encouters:. ```; Error in <TNetXNGSystem::GetDirEntry>: Unable to give access - user access restricted - unauthorized identity used ; Permission denied; ```. Python exits due to the segfault when I would expect it to raise an exception. ### Reproducer. See: https://github.com/root-project/root/issues/16475. ### ROOT version. 6.32.2. ### Installation method. sft.cern.ch. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16502
https://github.com/root-project/root/issues/16502:430,Deployability,Install,Installation,430,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When RDataFrame encouters:. ```; Error in <TNetXNGSystem::GetDirEntry>: Unable to give access - user access restricted - unauthorized identity used ; Permission denied; ```. Python exits due to the segfault when I would expect it to raise an exception. ### Reproducer. See: https://github.com/root-project/root/issues/16475. ### ROOT version. 6.32.2. ### Installation method. sft.cern.ch. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16502
https://github.com/root-project/root/issues/16502:162,Security,access,access,162,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When RDataFrame encouters:. ```; Error in <TNetXNGSystem::GetDirEntry>: Unable to give access - user access restricted - unauthorized identity used ; Permission denied; ```. Python exits due to the segfault when I would expect it to raise an exception. ### Reproducer. See: https://github.com/root-project/root/issues/16475. ### ROOT version. 6.32.2. ### Installation method. sft.cern.ch. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16502
https://github.com/root-project/root/issues/16502:176,Security,access,access,176,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When RDataFrame encouters:. ```; Error in <TNetXNGSystem::GetDirEntry>: Unable to give access - user access restricted - unauthorized identity used ; Permission denied; ```. Python exits due to the segfault when I would expect it to raise an exception. ### Reproducer. See: https://github.com/root-project/root/issues/16475. ### ROOT version. 6.32.2. ### Installation method. sft.cern.ch. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16502
https://github.com/root-project/root/issues/16506:342,Availability,error,error,342,"fund(); input_line_40:3:14: error: no matching constructor for initialization of 'tuple<vector<int>, vector<string> >' (aka 'tuple<vector<int>,; vector<basic_string<char> > >'); self = new tuple<vector<int>,vector<string> >{_1, _0};; ^ ~~~~~~~~; /usr/include/c++/13/tuple:1460:2: note: candidate constructor template not viable: no known conversion from 'const std::vector<string>' (aka; 'const vector<basic_string<char> >') to 'allocator_arg_t' for 1st argument; tuple(allocator_arg_t __tag, const _Alloc& __a); ^ ~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/13/tuple:1331:2: note: candidate constructor template not viable: no known conversion from 'const vector<string,; allocator<std::basic_string<char>>>' to 'const vector<int, allocator<int>>' for 1st argument; tuple(const _T1& __a1, const _T2& __a2); ^ ~~~~~~~~~~~~~~~; /usr/include/c++/13/tuple:1338:2: note: candidate template ignored: requirement '_TupleConstraints<true, std::vector<int, std::allocator<int> >,; std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >,; std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >; >::__is_explicitly_constructible()' was not satisfied [with _Dummy = true]; tuple(const _T1& __a1, const _T2& __a2); ^; /usr/include/c++/13/tuple:1345:2: note: candidate template ignored: requirement '_TupleConstraints<true, std::vector<int, std::allocator<int> >,; std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >,; std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >; >::__is_implicitly_constructible()' was not satisfied [with _U1 = const std::vector<string> &, _U2 =",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16506
https://github.com/root-project/root/issues/16506:9121,Deployability,Install,Installation,9121,"13/tuple:1593:2: note: candidate constructor template not viable: requires 3 arguments, but 2 were provided; tuple(allocator_arg_t __tag, const _Alloc& __a, pair<_U1, _U2>&& __in); ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/13/tuple:1317:2: note: candidate constructor template not viable: requires 0 arguments, but 2 were provided; tuple(); ^; /usr/include/c++/13/tuple:1324:2: note: candidate constructor template not viable: requires 0 arguments, but 2 were provided; tuple(); ^; /usr/include/c++/13/tuple:1473:2: note: candidate constructor template not viable: requires 4 arguments, but 2 were provided; tuple(allocator_arg_t __tag, const _Alloc& __a,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/13/tuple:1481:2: note: candidate constructor template not viable: requires 4 arguments, but 2 were provided; tuple(allocator_arg_t __tag, const _Alloc& __a,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/13/tuple:1488:2: note: candidate constructor template not viable: requires 4 arguments, but 2 were provided; tuple(allocator_arg_t __tag, const _Alloc& __a, _U1&& __a1, _U2&& __a2); ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/13/tuple:1496:2: note: candidate constructor template not viable: requires 4 arguments, but 2 were provided; tuple(allocator_arg_t __tag, const _Alloc& __a,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; <cppyy.gbl.tuple<vector<int>,vector<string> > object at 0x71d97e0>; >>> ; ```. ### Reproducer. ```c++; // tpl.cxx; #include <string>; #include <tuple>; #include <vector>. std::tuple<std::vector<int>, std::vector<std::string>>; fund() {; std::vector<int> a = {1, 2, 3};; std::vector<std::string> b = {""a"", ""b"", ""c""};; return std::tuple<std::vector<int>, std::vector<std::string>>(std::move(a), std::move(b));; }; ```. ### ROOT version. master. ### Installation method. source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16506
https://github.com/root-project/root/pull/16507:191,Deployability,update,updated,191,# This Pull request:. ## Changes or fixes:; Set the default LikelihoodJob tasks to be component-wise splits rather than event-wise splits. ## Checklist:. - [x] tested changes locally; - [x] ~updated the docs~ (not necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16507
https://github.com/root-project/root/pull/16507:160,Testability,test,tested,160,# This Pull request:. ## Changes or fixes:; Set the default LikelihoodJob tasks to be component-wise splits rather than event-wise splits. ## Checklist:. - [x] tested changes locally; - [x] ~updated the docs~ (not necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16507
https://github.com/root-project/root/pull/16510:149,Deployability,update,updated,149,# This Pull request:; moves various definitions outside of `RFieldBase` for improved readability. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16510
https://github.com/root-project/root/pull/16510:119,Testability,test,tested,119,# This Pull request:; moves various definitions outside of `RFieldBase` for improved readability. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16510
https://github.com/root-project/root/pull/16511:98,Modifiability,Extend,Extends,98,"Reserves the ""sharded cluster"" flag in the cluster summary but removes any additional s11n logic. Extends the cluster summary flags field to 8bits so that it can be handled with a standard C++ type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16511
https://github.com/root-project/root/pull/16511:91,Testability,log,logic,91,"Reserves the ""sharded cluster"" flag in the cluster summary but removes any additional s11n logic. Extends the cluster summary flags field to 8bits so that it can be handled with a standard C++ type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16511
https://github.com/root-project/root/issues/16512:1048,Deployability,Install,Installation,1048,"### Explain what you would like to see improved and how. I have a simple snippet which produces a plot (in PDF or SVG) where the text items in the legend are clickable hyperlinks:; ```python; from matplotlib import pyplot as plt; plt.rcParams['svg.fonttype'] = 'none'; fig = plt.figure(); plt.scatter([1], [2], label=""CERN""); plt.scatter([1], [2.25], label=""ROOT""); leg = plt.legend(); for ta in leg.texts:; t = ta.get_text(); if t == ""CERN"":; url = 'https://home.cern'; ta.set_url(url); elif t == ""ROOT"":; url = 'https://root.cern'; ta.set_url(url). fig.savefig('scatter.svg'); fig.savefig('scatter.pdf'); ```. Can be run with `python repro.py` and saves both SVG and PDF files with the clickable links in the legend. It would be nice to have the same feature also for TLegend. I have taken a look at [TLink](https://root.cern.ch/doc/master/classTLink.html) but despite what the docs hint at, that cannot be used to show hyperlinks, rather only links between different graphical components of the same canvas/browser. . ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16512
https://github.com/root-project/root/issues/16512:66,Usability,simpl,simple,66,"### Explain what you would like to see improved and how. I have a simple snippet which produces a plot (in PDF or SVG) where the text items in the legend are clickable hyperlinks:; ```python; from matplotlib import pyplot as plt; plt.rcParams['svg.fonttype'] = 'none'; fig = plt.figure(); plt.scatter([1], [2], label=""CERN""); plt.scatter([1], [2.25], label=""ROOT""); leg = plt.legend(); for ta in leg.texts:; t = ta.get_text(); if t == ""CERN"":; url = 'https://home.cern'; ta.set_url(url); elif t == ""ROOT"":; url = 'https://root.cern'; ta.set_url(url). fig.savefig('scatter.svg'); fig.savefig('scatter.pdf'); ```. Can be run with `python repro.py` and saves both SVG and PDF files with the clickable links in the legend. It would be nice to have the same feature also for TLegend. I have taken a look at [TLink](https://root.cern.ch/doc/master/classTLink.html) but despite what the docs hint at, that cannot be used to show hyperlinks, rather only links between different graphical components of the same canvas/browser. . ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16512
https://github.com/root-project/root/pull/16514:181,Integrability,depend,dependant,181,"This PR is a new attempt on #1166. It adds the `geom` and `geombuilder` modules, with:; - geombuilder set OFF by default; - geom set ON by default. Disabling geom also disables its dependant modules, i.e. Eve and gviz3d. Related roottest PR: https://github.com/root-project/roottest/pull/1190. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16514
https://github.com/root-project/root/pull/16514:315,Testability,test,tested,315,"This PR is a new attempt on #1166. It adds the `geom` and `geombuilder` modules, with:; - geombuilder set OFF by default; - geom set ON by default. Disabling geom also disables its dependant modules, i.e. Eve and gviz3d. Related roottest PR: https://github.com/root-project/roottest/pull/1190. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16514
https://github.com/root-project/root/pull/16515:67,Availability,error,error,67,"Implicit casts of buffers to contiguous memory pointers are rather error prone. It would be better to follow the example of the STL containers and implement a `data()` member function. Like this, we can also use `std::data()` to get a pointer to the contiguous data in the RTensor implementation, which closes #13498. The new `data()` method is now used everywhere inside TMVA, but implicit casting is also kept for backwards compatibility. Alternative to https://github.com/root-project/root/pull/13322, notably implementing the suggestion of @lmoneta:; https://github.com/root-project/root/pull/13322#discussion_r1286002161",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16515
https://github.com/root-project/root/pull/16516:672,Deployability,update,updated,672,"# This Pull request:; avoids throwing an exception when creating the descriptor for an RNTuple containing an unknown column type. We want to support this case for forward compatibility. Also adds a unit test testing this specific case.; Some dedicated code needs to be added to the internals of RNTuple to support this kind of test case, but it's not exposed to the user. ## Remarks; Currently the test just checks that we can read back the descriptor. A future PR will add a ""fwd compatibility mode"" to the read options that'll allow a user to reconstruct the model skipping over fields containing unknown column types. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16516
https://github.com/root-project/root/pull/16516:22,Safety,avoid,avoids,22,"# This Pull request:; avoids throwing an exception when creating the descriptor for an RNTuple containing an unknown column type. We want to support this case for forward compatibility. Also adds a unit test testing this specific case.; Some dedicated code needs to be added to the internals of RNTuple to support this kind of test case, but it's not exposed to the user. ## Remarks; Currently the test just checks that we can read back the descriptor. A future PR will add a ""fwd compatibility mode"" to the read options that'll allow a user to reconstruct the model skipping over fields containing unknown column types. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16516
https://github.com/root-project/root/pull/16516:351,Security,expose,exposed,351,"# This Pull request:; avoids throwing an exception when creating the descriptor for an RNTuple containing an unknown column type. We want to support this case for forward compatibility. Also adds a unit test testing this specific case.; Some dedicated code needs to be added to the internals of RNTuple to support this kind of test case, but it's not exposed to the user. ## Remarks; Currently the test just checks that we can read back the descriptor. A future PR will add a ""fwd compatibility mode"" to the read options that'll allow a user to reconstruct the model skipping over fields containing unknown column types. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16516
https://github.com/root-project/root/pull/16516:203,Testability,test,test,203,"# This Pull request:; avoids throwing an exception when creating the descriptor for an RNTuple containing an unknown column type. We want to support this case for forward compatibility. Also adds a unit test testing this specific case.; Some dedicated code needs to be added to the internals of RNTuple to support this kind of test case, but it's not exposed to the user. ## Remarks; Currently the test just checks that we can read back the descriptor. A future PR will add a ""fwd compatibility mode"" to the read options that'll allow a user to reconstruct the model skipping over fields containing unknown column types. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16516
https://github.com/root-project/root/pull/16516:208,Testability,test,testing,208,"# This Pull request:; avoids throwing an exception when creating the descriptor for an RNTuple containing an unknown column type. We want to support this case for forward compatibility. Also adds a unit test testing this specific case.; Some dedicated code needs to be added to the internals of RNTuple to support this kind of test case, but it's not exposed to the user. ## Remarks; Currently the test just checks that we can read back the descriptor. A future PR will add a ""fwd compatibility mode"" to the read options that'll allow a user to reconstruct the model skipping over fields containing unknown column types. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16516
https://github.com/root-project/root/pull/16516:327,Testability,test,test,327,"# This Pull request:; avoids throwing an exception when creating the descriptor for an RNTuple containing an unknown column type. We want to support this case for forward compatibility. Also adds a unit test testing this specific case.; Some dedicated code needs to be added to the internals of RNTuple to support this kind of test case, but it's not exposed to the user. ## Remarks; Currently the test just checks that we can read back the descriptor. A future PR will add a ""fwd compatibility mode"" to the read options that'll allow a user to reconstruct the model skipping over fields containing unknown column types. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16516
https://github.com/root-project/root/pull/16516:398,Testability,test,test,398,"# This Pull request:; avoids throwing an exception when creating the descriptor for an RNTuple containing an unknown column type. We want to support this case for forward compatibility. Also adds a unit test testing this specific case.; Some dedicated code needs to be added to the internals of RNTuple to support this kind of test case, but it's not exposed to the user. ## Remarks; Currently the test just checks that we can read back the descriptor. A future PR will add a ""fwd compatibility mode"" to the read options that'll allow a user to reconstruct the model skipping over fields containing unknown column types. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16516
https://github.com/root-project/root/pull/16516:642,Testability,test,tested,642,"# This Pull request:; avoids throwing an exception when creating the descriptor for an RNTuple containing an unknown column type. We want to support this case for forward compatibility. Also adds a unit test testing this specific case.; Some dedicated code needs to be added to the internals of RNTuple to support this kind of test case, but it's not exposed to the user. ## Remarks; Currently the test just checks that we can read back the descriptor. A future PR will add a ""fwd compatibility mode"" to the read options that'll allow a user to reconstruct the model skipping over fields containing unknown column types. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16516
https://github.com/root-project/root/pull/16518:256,Deployability,update,updated,256,# This Pull request:; fixes `getDirectory` inside `TFileMerger.cxx` which is looking up objects by name rather than by full path. Added regression test: https://github.com/root-project/roottest/pull/1191. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #16190 and #16474,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16518
https://github.com/root-project/root/pull/16518:147,Testability,test,test,147,# This Pull request:; fixes `getDirectory` inside `TFileMerger.cxx` which is looking up objects by name rather than by full path. Added regression test: https://github.com/root-project/roottest/pull/1191. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #16190 and #16474,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16518
https://github.com/root-project/root/pull/16518:226,Testability,test,tested,226,# This Pull request:; fixes `getDirectory` inside `TFileMerger.cxx` which is looking up objects by name rather than by full path. Added regression test: https://github.com/root-project/roottest/pull/1191. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #16190 and #16474,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16518
https://github.com/root-project/root/pull/16519:60,Energy Efficiency,allocate,allocated,60,Replacing the use of non-standard variable arrays with heap-allocated arrays in TDavixFile.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16519
https://github.com/root-project/root/pull/16519:34,Modifiability,variab,variable,34,Replacing the use of non-standard variable arrays with heap-allocated arrays in TDavixFile.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16519
https://github.com/root-project/root/issues/16520:138,Availability,error,error,138,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Inherit whatever ROOT parent class in a python class generates error ; on the TObject::DoError method. ; Python raises an error on `TypeError`. Which is categorical wrong, it should be `NotImplemented`. At the root-forum it is being suggested that `RDataFrame` is not a class to be inherited in PyRoot;; due to ""composition over inheritance"" idiom and warnings on bad data type manipulation internally; leading to wrong numerical results. ; Is this going to be for all ROOT classes? No ROOT class should be inherited in a Python class from now on ?. It only affects the last release 6.32.04 and 6.32.06; Release 6.30.02 works fine.; ; Similar issues:; https://github.com/root-project/root/issues/12391; https://root-forum.cern.ch/t/rdataframe-has-no-virtual-destructor/53605; https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198/14; . ### Reproducer. ```python; from ROOT import TObject. class C(TObject):; def __init__(self):; super().__init__() # Initialize the base class. def some_method(self):; print(""This is a method in class C.""); ```. ```; In [1]: from ROOT import TObject; ...: ; ...: class C(TObject):; ...: def __init__(self):; ...: super().__init__() # Call the constructor of TObject; ...: ; Installed ROOT event loop hook.; input_line_35:10:62: error: unknown type name '__va_list_tag'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:79: error: expected ')'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:15: note: to match this '('; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:11:47: error: use of undeclared identifier 'arg3'; return TObject::DoError(arg0, arg1, arg2, arg3);; ^; -----------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16520
https://github.com/root-project/root/issues/16520:197,Availability,error,error,197,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Inherit whatever ROOT parent class in a python class generates error ; on the TObject::DoError method. ; Python raises an error on `TypeError`. Which is categorical wrong, it should be `NotImplemented`. At the root-forum it is being suggested that `RDataFrame` is not a class to be inherited in PyRoot;; due to ""composition over inheritance"" idiom and warnings on bad data type manipulation internally; leading to wrong numerical results. ; Is this going to be for all ROOT classes? No ROOT class should be inherited in a Python class from now on ?. It only affects the last release 6.32.04 and 6.32.06; Release 6.30.02 works fine.; ; Similar issues:; https://github.com/root-project/root/issues/12391; https://root-forum.cern.ch/t/rdataframe-has-no-virtual-destructor/53605; https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198/14; . ### Reproducer. ```python; from ROOT import TObject. class C(TObject):; def __init__(self):; super().__init__() # Initialize the base class. def some_method(self):; print(""This is a method in class C.""); ```. ```; In [1]: from ROOT import TObject; ...: ; ...: class C(TObject):; ...: def __init__(self):; ...: super().__init__() # Call the constructor of TObject; ...: ; Installed ROOT event loop hook.; input_line_35:10:62: error: unknown type name '__va_list_tag'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:79: error: expected ')'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:15: note: to match this '('; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:11:47: error: use of undeclared identifier 'arg3'; return TObject::DoError(arg0, arg1, arg2, arg3);; ^; -----------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16520
https://github.com/root-project/root/issues/16520:1400,Availability,error,error,1400," the last release 6.32.04 and 6.32.06; Release 6.30.02 works fine.; ; Similar issues:; https://github.com/root-project/root/issues/12391; https://root-forum.cern.ch/t/rdataframe-has-no-virtual-destructor/53605; https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198/14; . ### Reproducer. ```python; from ROOT import TObject. class C(TObject):; def __init__(self):; super().__init__() # Initialize the base class. def some_method(self):; print(""This is a method in class C.""); ```. ```; In [1]: from ROOT import TObject; ...: ; ...: class C(TObject):; ...: def __init__(self):; ...: super().__init__() # Call the constructor of TObject; ...: ; Installed ROOT event loop hook.; input_line_35:10:62: error: unknown type name '__va_list_tag'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:79: error: expected ')'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:15: note: to match this '('; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:11:47: error: use of undeclared identifier 'arg3'; return TObject::DoError(arg0, arg1, arg2, arg3);; ^; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[1], line 3; 1 from ROOT import TObject; ----> 3 class C(TObject):; 4 def __init__(self):; 5 super().__init__() # Call the constructor of TObject. TypeError: no python-side overrides supported (failed to compile the dispatcher code); ```. ### ROOT version. ROOT Version: 6.32.02; Built for linuxx8664gcc on Jun 18 2024, 04:46:14; From tags/v6-32-02@v6-32-02. ROOT Version: 6.32.06; Built for linuxx8664gcc on Sep 21 2024, 19:19:59; From tags/v6-32-06@v6-32-06. ### Installation method. pre-built binary. ### Operating system. Linux, Ubuntu 23. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16520
https://github.com/root-project/root/issues/16520:1557,Availability,error,error,1557," the last release 6.32.04 and 6.32.06; Release 6.30.02 works fine.; ; Similar issues:; https://github.com/root-project/root/issues/12391; https://root-forum.cern.ch/t/rdataframe-has-no-virtual-destructor/53605; https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198/14; . ### Reproducer. ```python; from ROOT import TObject. class C(TObject):; def __init__(self):; super().__init__() # Initialize the base class. def some_method(self):; print(""This is a method in class C.""); ```. ```; In [1]: from ROOT import TObject; ...: ; ...: class C(TObject):; ...: def __init__(self):; ...: super().__init__() # Call the constructor of TObject; ...: ; Installed ROOT event loop hook.; input_line_35:10:62: error: unknown type name '__va_list_tag'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:79: error: expected ')'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:15: note: to match this '('; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:11:47: error: use of undeclared identifier 'arg3'; return TObject::DoError(arg0, arg1, arg2, arg3);; ^; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[1], line 3; 1 from ROOT import TObject; ----> 3 class C(TObject):; 4 def __init__(self):; 5 super().__init__() # Call the constructor of TObject. TypeError: no python-side overrides supported (failed to compile the dispatcher code); ```. ### ROOT version. ROOT Version: 6.32.02; Built for linuxx8664gcc on Jun 18 2024, 04:46:14; From tags/v6-32-02@v6-32-02. ROOT Version: 6.32.06; Built for linuxx8664gcc on Sep 21 2024, 19:19:59; From tags/v6-32-06@v6-32-06. ### Installation method. pre-built binary. ### Operating system. Linux, Ubuntu 23. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16520
https://github.com/root-project/root/issues/16520:1833,Availability,error,error,1833," the last release 6.32.04 and 6.32.06; Release 6.30.02 works fine.; ; Similar issues:; https://github.com/root-project/root/issues/12391; https://root-forum.cern.ch/t/rdataframe-has-no-virtual-destructor/53605; https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198/14; . ### Reproducer. ```python; from ROOT import TObject. class C(TObject):; def __init__(self):; super().__init__() # Initialize the base class. def some_method(self):; print(""This is a method in class C.""); ```. ```; In [1]: from ROOT import TObject; ...: ; ...: class C(TObject):; ...: def __init__(self):; ...: super().__init__() # Call the constructor of TObject; ...: ; Installed ROOT event loop hook.; input_line_35:10:62: error: unknown type name '__va_list_tag'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:79: error: expected ')'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:15: note: to match this '('; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:11:47: error: use of undeclared identifier 'arg3'; return TObject::DoError(arg0, arg1, arg2, arg3);; ^; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[1], line 3; 1 from ROOT import TObject; ----> 3 class C(TObject):; 4 def __init__(self):; 5 super().__init__() # Call the constructor of TObject. TypeError: no python-side overrides supported (failed to compile the dispatcher code); ```. ### ROOT version. ROOT Version: 6.32.02; Built for linuxx8664gcc on Jun 18 2024, 04:46:14; From tags/v6-32-02@v6-32-02. ROOT Version: 6.32.06; Built for linuxx8664gcc on Sep 21 2024, 19:19:59; From tags/v6-32-06@v6-32-06. ### Installation method. pre-built binary. ### Operating system. Linux, Ubuntu 23. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16520
https://github.com/root-project/root/issues/16520:650,Deployability,release,release,650,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Inherit whatever ROOT parent class in a python class generates error ; on the TObject::DoError method. ; Python raises an error on `TypeError`. Which is categorical wrong, it should be `NotImplemented`. At the root-forum it is being suggested that `RDataFrame` is not a class to be inherited in PyRoot;; due to ""composition over inheritance"" idiom and warnings on bad data type manipulation internally; leading to wrong numerical results. ; Is this going to be for all ROOT classes? No ROOT class should be inherited in a Python class from now on ?. It only affects the last release 6.32.04 and 6.32.06; Release 6.30.02 works fine.; ; Similar issues:; https://github.com/root-project/root/issues/12391; https://root-forum.cern.ch/t/rdataframe-has-no-virtual-destructor/53605; https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198/14; . ### Reproducer. ```python; from ROOT import TObject. class C(TObject):; def __init__(self):; super().__init__() # Initialize the base class. def some_method(self):; print(""This is a method in class C.""); ```. ```; In [1]: from ROOT import TObject; ...: ; ...: class C(TObject):; ...: def __init__(self):; ...: super().__init__() # Call the constructor of TObject; ...: ; Installed ROOT event loop hook.; input_line_35:10:62: error: unknown type name '__va_list_tag'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:79: error: expected ')'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:15: note: to match this '('; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:11:47: error: use of undeclared identifier 'arg3'; return TObject::DoError(arg0, arg1, arg2, arg3);; ^; -----------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16520
https://github.com/root-project/root/issues/16520:679,Deployability,Release,Release,679,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Inherit whatever ROOT parent class in a python class generates error ; on the TObject::DoError method. ; Python raises an error on `TypeError`. Which is categorical wrong, it should be `NotImplemented`. At the root-forum it is being suggested that `RDataFrame` is not a class to be inherited in PyRoot;; due to ""composition over inheritance"" idiom and warnings on bad data type manipulation internally; leading to wrong numerical results. ; Is this going to be for all ROOT classes? No ROOT class should be inherited in a Python class from now on ?. It only affects the last release 6.32.04 and 6.32.06; Release 6.30.02 works fine.; ; Similar issues:; https://github.com/root-project/root/issues/12391; https://root-forum.cern.ch/t/rdataframe-has-no-virtual-destructor/53605; https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198/14; . ### Reproducer. ```python; from ROOT import TObject. class C(TObject):; def __init__(self):; super().__init__() # Initialize the base class. def some_method(self):; print(""This is a method in class C.""); ```. ```; In [1]: from ROOT import TObject; ...: ; ...: class C(TObject):; ...: def __init__(self):; ...: super().__init__() # Call the constructor of TObject; ...: ; Installed ROOT event loop hook.; input_line_35:10:62: error: unknown type name '__va_list_tag'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:79: error: expected ')'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:15: note: to match this '('; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:11:47: error: use of undeclared identifier 'arg3'; return TObject::DoError(arg0, arg1, arg2, arg3);; ^; -----------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16520
https://github.com/root-project/root/issues/16520:1346,Deployability,Install,Installed,1346,"herited in PyRoot;; due to ""composition over inheritance"" idiom and warnings on bad data type manipulation internally; leading to wrong numerical results. ; Is this going to be for all ROOT classes? No ROOT class should be inherited in a Python class from now on ?. It only affects the last release 6.32.04 and 6.32.06; Release 6.30.02 works fine.; ; Similar issues:; https://github.com/root-project/root/issues/12391; https://root-forum.cern.ch/t/rdataframe-has-no-virtual-destructor/53605; https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198/14; . ### Reproducer. ```python; from ROOT import TObject. class C(TObject):; def __init__(self):; super().__init__() # Initialize the base class. def some_method(self):; print(""This is a method in class C.""); ```. ```; In [1]: from ROOT import TObject; ...: ; ...: class C(TObject):; ...: def __init__(self):; ...: super().__init__() # Call the constructor of TObject; ...: ; Installed ROOT event loop hook.; input_line_35:10:62: error: unknown type name '__va_list_tag'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:79: error: expected ')'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:15: note: to match this '('; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:11:47: error: use of undeclared identifier 'arg3'; return TObject::DoError(arg0, arg1, arg2, arg3);; ^; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[1], line 3; 1 from ROOT import TObject; ----> 3 class C(TObject):; 4 def __init__(self):; 5 super().__init__() # Call the constructor of TObject. TypeError: no python-side overrides supported (failed to compile the dispatcher code); ```. ### ROOT version. ROOT Version: 6.32.02; Built for linuxx8664g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16520
https://github.com/root-project/root/issues/16520:2524,Deployability,Install,Installation,2524," the last release 6.32.04 and 6.32.06; Release 6.30.02 works fine.; ; Similar issues:; https://github.com/root-project/root/issues/12391; https://root-forum.cern.ch/t/rdataframe-has-no-virtual-destructor/53605; https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198/14; . ### Reproducer. ```python; from ROOT import TObject. class C(TObject):; def __init__(self):; super().__init__() # Initialize the base class. def some_method(self):; print(""This is a method in class C.""); ```. ```; In [1]: from ROOT import TObject; ...: ; ...: class C(TObject):; ...: def __init__(self):; ...: super().__init__() # Call the constructor of TObject; ...: ; Installed ROOT event loop hook.; input_line_35:10:62: error: unknown type name '__va_list_tag'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:79: error: expected ')'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:15: note: to match this '('; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:11:47: error: use of undeclared identifier 'arg3'; return TObject::DoError(arg0, arg1, arg2, arg3);; ^; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[1], line 3; 1 from ROOT import TObject; ----> 3 class C(TObject):; 4 def __init__(self):; 5 super().__init__() # Call the constructor of TObject. TypeError: no python-side overrides supported (failed to compile the dispatcher code); ```. ### ROOT version. ROOT Version: 6.32.02; Built for linuxx8664gcc on Jun 18 2024, 04:46:14; From tags/v6-32-02@v6-32-02. ROOT Version: 6.32.06; Built for linuxx8664gcc on Sep 21 2024, 19:19:59; From tags/v6-32-06@v6-32-06. ### Installation method. pre-built binary. ### Operating system. Linux, Ubuntu 23. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16520
https://github.com/root-project/root/issues/16520:75,Modifiability,Inherit,Inherit,75,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Inherit whatever ROOT parent class in a python class generates error ; on the TObject::DoError method. ; Python raises an error on `TypeError`. Which is categorical wrong, it should be `NotImplemented`. At the root-forum it is being suggested that `RDataFrame` is not a class to be inherited in PyRoot;; due to ""composition over inheritance"" idiom and warnings on bad data type manipulation internally; leading to wrong numerical results. ; Is this going to be for all ROOT classes? No ROOT class should be inherited in a Python class from now on ?. It only affects the last release 6.32.04 and 6.32.06; Release 6.30.02 works fine.; ; Similar issues:; https://github.com/root-project/root/issues/12391; https://root-forum.cern.ch/t/rdataframe-has-no-virtual-destructor/53605; https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198/14; . ### Reproducer. ```python; from ROOT import TObject. class C(TObject):; def __init__(self):; super().__init__() # Initialize the base class. def some_method(self):; print(""This is a method in class C.""); ```. ```; In [1]: from ROOT import TObject; ...: ; ...: class C(TObject):; ...: def __init__(self):; ...: super().__init__() # Call the constructor of TObject; ...: ; Installed ROOT event loop hook.; input_line_35:10:62: error: unknown type name '__va_list_tag'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:79: error: expected ')'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:15: note: to match this '('; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:11:47: error: use of undeclared identifier 'arg3'; return TObject::DoError(arg0, arg1, arg2, arg3);; ^; -----------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16520
https://github.com/root-project/root/issues/16520:357,Modifiability,inherit,inherited,357,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Inherit whatever ROOT parent class in a python class generates error ; on the TObject::DoError method. ; Python raises an error on `TypeError`. Which is categorical wrong, it should be `NotImplemented`. At the root-forum it is being suggested that `RDataFrame` is not a class to be inherited in PyRoot;; due to ""composition over inheritance"" idiom and warnings on bad data type manipulation internally; leading to wrong numerical results. ; Is this going to be for all ROOT classes? No ROOT class should be inherited in a Python class from now on ?. It only affects the last release 6.32.04 and 6.32.06; Release 6.30.02 works fine.; ; Similar issues:; https://github.com/root-project/root/issues/12391; https://root-forum.cern.ch/t/rdataframe-has-no-virtual-destructor/53605; https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198/14; . ### Reproducer. ```python; from ROOT import TObject. class C(TObject):; def __init__(self):; super().__init__() # Initialize the base class. def some_method(self):; print(""This is a method in class C.""); ```. ```; In [1]: from ROOT import TObject; ...: ; ...: class C(TObject):; ...: def __init__(self):; ...: super().__init__() # Call the constructor of TObject; ...: ; Installed ROOT event loop hook.; input_line_35:10:62: error: unknown type name '__va_list_tag'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:79: error: expected ')'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:15: note: to match this '('; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:11:47: error: use of undeclared identifier 'arg3'; return TObject::DoError(arg0, arg1, arg2, arg3);; ^; -----------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16520
https://github.com/root-project/root/issues/16520:404,Modifiability,inherit,inheritance,404,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Inherit whatever ROOT parent class in a python class generates error ; on the TObject::DoError method. ; Python raises an error on `TypeError`. Which is categorical wrong, it should be `NotImplemented`. At the root-forum it is being suggested that `RDataFrame` is not a class to be inherited in PyRoot;; due to ""composition over inheritance"" idiom and warnings on bad data type manipulation internally; leading to wrong numerical results. ; Is this going to be for all ROOT classes? No ROOT class should be inherited in a Python class from now on ?. It only affects the last release 6.32.04 and 6.32.06; Release 6.30.02 works fine.; ; Similar issues:; https://github.com/root-project/root/issues/12391; https://root-forum.cern.ch/t/rdataframe-has-no-virtual-destructor/53605; https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198/14; . ### Reproducer. ```python; from ROOT import TObject. class C(TObject):; def __init__(self):; super().__init__() # Initialize the base class. def some_method(self):; print(""This is a method in class C.""); ```. ```; In [1]: from ROOT import TObject; ...: ; ...: class C(TObject):; ...: def __init__(self):; ...: super().__init__() # Call the constructor of TObject; ...: ; Installed ROOT event loop hook.; input_line_35:10:62: error: unknown type name '__va_list_tag'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:79: error: expected ')'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:15: note: to match this '('; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:11:47: error: use of undeclared identifier 'arg3'; return TObject::DoError(arg0, arg1, arg2, arg3);; ^; -----------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16520
https://github.com/root-project/root/issues/16520:582,Modifiability,inherit,inherited,582,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Inherit whatever ROOT parent class in a python class generates error ; on the TObject::DoError method. ; Python raises an error on `TypeError`. Which is categorical wrong, it should be `NotImplemented`. At the root-forum it is being suggested that `RDataFrame` is not a class to be inherited in PyRoot;; due to ""composition over inheritance"" idiom and warnings on bad data type manipulation internally; leading to wrong numerical results. ; Is this going to be for all ROOT classes? No ROOT class should be inherited in a Python class from now on ?. It only affects the last release 6.32.04 and 6.32.06; Release 6.30.02 works fine.; ; Similar issues:; https://github.com/root-project/root/issues/12391; https://root-forum.cern.ch/t/rdataframe-has-no-virtual-destructor/53605; https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198/14; . ### Reproducer. ```python; from ROOT import TObject. class C(TObject):; def __init__(self):; super().__init__() # Initialize the base class. def some_method(self):; print(""This is a method in class C.""); ```. ```; In [1]: from ROOT import TObject; ...: ; ...: class C(TObject):; ...: def __init__(self):; ...: super().__init__() # Call the constructor of TObject; ...: ; Installed ROOT event loop hook.; input_line_35:10:62: error: unknown type name '__va_list_tag'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:79: error: expected ')'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:15: note: to match this '('; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:11:47: error: use of undeclared identifier 'arg3'; return TObject::DoError(arg0, arg1, arg2, arg3);; ^; -----------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16520
https://github.com/root-project/root/pull/16521:6,Deployability,upgrade,upgrade,6,After upgrade to openui5 1.128.0 web widgets do not work with QWebEngine from qt5. Therefore do not select this engine by default - only when --web=qt5 specified. Keep it in the root while it still can be used without openui5 like in external widgets embeding TWebCanvas. In following PRs JSROOT will include patch to let qt5 work by using older openui5,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16521
https://github.com/root-project/root/pull/16521:309,Deployability,patch,patch,309,After upgrade to openui5 1.128.0 web widgets do not work with QWebEngine from qt5. Therefore do not select this engine by default - only when --web=qt5 specified. Keep it in the root while it still can be used without openui5 like in external widgets embeding TWebCanvas. In following PRs JSROOT will include patch to let qt5 work by using older openui5,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16521
https://github.com/root-project/root/issues/16523:660,Deployability,install,installation,660,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. OpenGL isn't working at least for the following versions of macosx and command line tools when compiled from source.; The issue was also seen for some older macosx versions and for me it is not clear if this is problem of the macosx or XCode version and with which version it was introduced. The problem is seen with ROOT 6.30.08 as well as the latests 6.32.06. macosx | CLT; 14.6.1 (x86) | 15.3; 14.6.1 (arm) | 15.3; 13.6.7 (x86) | 15.1; 14.3 (x86) | 15.1; 14.3. (arm) | 15.1. The problem is for example visible when executing the tutorial share/doc/root/tutorials/eve/box.C from the installation directory. The expected behaviour is that a shape is displayed in the viewer. The seen behaviour is that only a blavk screen is displayed and the following warning is printed . `Warning in <TGLLogicalShape::Draw>: display-list registration failed.`. When installing root using brew the problem is gone and the expected behaviour is seen when running the above mentioned macro. Unfortunately when using brew to compile root from the sources the problem appears again. On only gets a black screen and the warning. So obviously there must be some difference between the machine used to generate the brew bottles and the machines used by me and my colleagues. Do you have any idea what the problem could be and how to fix it. . ### Reproducer. Install root from sources using brew. `brew install -s root`. Execute the following macro. `$HOMEBREW_PREFIX/Cellar/root/6.32.06/bin/root ; $HOMEBREW_PREFIX/Cellar/root/6.32.06/share/doc/root/tutorials/eve/box.C `. The command should open a viewer where only a black screen is displayed with the warning . `Warning in <TGLLogicalShape::Draw>: display-list registration failed.`. in the terminal. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:928,Deployability,install,installing,928,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. OpenGL isn't working at least for the following versions of macosx and command line tools when compiled from source.; The issue was also seen for some older macosx versions and for me it is not clear if this is problem of the macosx or XCode version and with which version it was introduced. The problem is seen with ROOT 6.30.08 as well as the latests 6.32.06. macosx | CLT; 14.6.1 (x86) | 15.3; 14.6.1 (arm) | 15.3; 13.6.7 (x86) | 15.1; 14.3 (x86) | 15.1; 14.3. (arm) | 15.1. The problem is for example visible when executing the tutorial share/doc/root/tutorials/eve/box.C from the installation directory. The expected behaviour is that a shape is displayed in the viewer. The seen behaviour is that only a blavk screen is displayed and the following warning is printed . `Warning in <TGLLogicalShape::Draw>: display-list registration failed.`. When installing root using brew the problem is gone and the expected behaviour is seen when running the above mentioned macro. Unfortunately when using brew to compile root from the sources the problem appears again. On only gets a black screen and the warning. So obviously there must be some difference between the machine used to generate the brew bottles and the machines used by me and my colleagues. Do you have any idea what the problem could be and how to fix it. . ### Reproducer. Install root from sources using brew. `brew install -s root`. Execute the following macro. `$HOMEBREW_PREFIX/Cellar/root/6.32.06/bin/root ; $HOMEBREW_PREFIX/Cellar/root/6.32.06/share/doc/root/tutorials/eve/box.C `. The command should open a viewer where only a black screen is displayed with the warning . `Warning in <TGLLogicalShape::Draw>: display-list registration failed.`. in the terminal. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:1413,Deployability,Install,Install,1413,"2.06. macosx | CLT; 14.6.1 (x86) | 15.3; 14.6.1 (arm) | 15.3; 13.6.7 (x86) | 15.1; 14.3 (x86) | 15.1; 14.3. (arm) | 15.1. The problem is for example visible when executing the tutorial share/doc/root/tutorials/eve/box.C from the installation directory. The expected behaviour is that a shape is displayed in the viewer. The seen behaviour is that only a blavk screen is displayed and the following warning is printed . `Warning in <TGLLogicalShape::Draw>: display-list registration failed.`. When installing root using brew the problem is gone and the expected behaviour is seen when running the above mentioned macro. Unfortunately when using brew to compile root from the sources the problem appears again. On only gets a black screen and the warning. So obviously there must be some difference between the machine used to generate the brew bottles and the machines used by me and my colleagues. Do you have any idea what the problem could be and how to fix it. . ### Reproducer. Install root from sources using brew. `brew install -s root`. Execute the following macro. `$HOMEBREW_PREFIX/Cellar/root/6.32.06/bin/root ; $HOMEBREW_PREFIX/Cellar/root/6.32.06/share/doc/root/tutorials/eve/box.C `. The command should open a viewer where only a black screen is displayed with the warning . `Warning in <TGLLogicalShape::Draw>: display-list registration failed.`. in the terminal. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Sep 21 2024, 18:21:53 |; | From tags/6-32-06@6-32-06 |; | With Apple clang version 16.0.0 (clang-1600.0.26.3) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source or brew. ### Operating system. macosx (several versions mentioned above). ### Additional con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:1457,Deployability,install,install,1457," 14.6.1 (x86) | 15.3; 14.6.1 (arm) | 15.3; 13.6.7 (x86) | 15.1; 14.3 (x86) | 15.1; 14.3. (arm) | 15.1. The problem is for example visible when executing the tutorial share/doc/root/tutorials/eve/box.C from the installation directory. The expected behaviour is that a shape is displayed in the viewer. The seen behaviour is that only a blavk screen is displayed and the following warning is printed . `Warning in <TGLLogicalShape::Draw>: display-list registration failed.`. When installing root using brew the problem is gone and the expected behaviour is seen when running the above mentioned macro. Unfortunately when using brew to compile root from the sources the problem appears again. On only gets a black screen and the warning. So obviously there must be some difference between the machine used to generate the brew bottles and the machines used by me and my colleagues. Do you have any idea what the problem could be and how to fix it. . ### Reproducer. Install root from sources using brew. `brew install -s root`. Execute the following macro. `$HOMEBREW_PREFIX/Cellar/root/6.32.06/bin/root ; $HOMEBREW_PREFIX/Cellar/root/6.32.06/share/doc/root/tutorials/eve/box.C `. The command should open a viewer where only a black screen is displayed with the warning . `Warning in <TGLLogicalShape::Draw>: display-list registration failed.`. in the terminal. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Sep 21 2024, 18:21:53 |; | From tags/6-32-06@6-32-06 |; | With Apple clang version 16.0.0 (clang-1600.0.26.3) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source or brew. ### Operating system. macosx (several versions mentioned above). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:2300,Deployability,Install,Installation,2300," 14.6.1 (x86) | 15.3; 14.6.1 (arm) | 15.3; 13.6.7 (x86) | 15.1; 14.3 (x86) | 15.1; 14.3. (arm) | 15.1. The problem is for example visible when executing the tutorial share/doc/root/tutorials/eve/box.C from the installation directory. The expected behaviour is that a shape is displayed in the viewer. The seen behaviour is that only a blavk screen is displayed and the following warning is printed . `Warning in <TGLLogicalShape::Draw>: display-list registration failed.`. When installing root using brew the problem is gone and the expected behaviour is seen when running the above mentioned macro. Unfortunately when using brew to compile root from the sources the problem appears again. On only gets a black screen and the warning. So obviously there must be some difference between the machine used to generate the brew bottles and the machines used by me and my colleagues. Do you have any idea what the problem could be and how to fix it. . ### Reproducer. Install root from sources using brew. `brew install -s root`. Execute the following macro. `$HOMEBREW_PREFIX/Cellar/root/6.32.06/bin/root ; $HOMEBREW_PREFIX/Cellar/root/6.32.06/share/doc/root/tutorials/eve/box.C `. The command should open a viewer where only a black screen is displayed with the warning . `Warning in <TGLLogicalShape::Draw>: display-list registration failed.`. in the terminal. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Sep 21 2024, 18:21:53 |; | From tags/6-32-06@6-32-06 |; | With Apple clang version 16.0.0 (clang-1600.0.26.3) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source or brew. ### Operating system. macosx (several versions mentioned above). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/issues/16523:269,Usability,clear,clear,269,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. OpenGL isn't working at least for the following versions of macosx and command line tools when compiled from source.; The issue was also seen for some older macosx versions and for me it is not clear if this is problem of the macosx or XCode version and with which version it was introduced. The problem is seen with ROOT 6.30.08 as well as the latests 6.32.06. macosx | CLT; 14.6.1 (x86) | 15.3; 14.6.1 (arm) | 15.3; 13.6.7 (x86) | 15.1; 14.3 (x86) | 15.1; 14.3. (arm) | 15.1. The problem is for example visible when executing the tutorial share/doc/root/tutorials/eve/box.C from the installation directory. The expected behaviour is that a shape is displayed in the viewer. The seen behaviour is that only a blavk screen is displayed and the following warning is printed . `Warning in <TGLLogicalShape::Draw>: display-list registration failed.`. When installing root using brew the problem is gone and the expected behaviour is seen when running the above mentioned macro. Unfortunately when using brew to compile root from the sources the problem appears again. On only gets a black screen and the warning. So obviously there must be some difference between the machine used to generate the brew bottles and the machines used by me and my colleagues. Do you have any idea what the problem could be and how to fix it. . ### Reproducer. Install root from sources using brew. `brew install -s root`. Execute the following macro. `$HOMEBREW_PREFIX/Cellar/root/6.32.06/bin/root ; $HOMEBREW_PREFIX/Cellar/root/6.32.06/share/doc/root/tutorials/eve/box.C `. The command should open a viewer where only a black screen is displayed with the warning . `Warning in <TGLLogicalShape::Draw>: display-list registration failed.`. in the terminal. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16523
https://github.com/root-project/root/pull/16524:155,Deployability,update,updated,155,# This Pull request:; deletes file `BasicMinimumError.cxx` containing unused class `BasicMinimumError`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16524
https://github.com/root-project/root/pull/16524:125,Testability,test,tested,125,# This Pull request:; deletes file `BasicMinimumError.cxx` containing unused class `BasicMinimumError`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16524
https://github.com/root-project/root/issues/16527:567,Deployability,Install,Installation,567,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Simple latex `g^{*}` with symbol font is not correctly stored in the PDF file.; ```; auto l = new TLatex(0.5, 0.5, ""g^{*}"");; l->SetTextFont(122);; l->SetTextAlign(22);; l->SetTextSize(0.2);; ```. ### Reproducer. [latex1.cxx.txt](https://github.com/user-attachments/files/17132728/latex1.cxx.txt). ![c1](https://github.com/user-attachments/assets/79403060-5242-41ea-81b5-545df114afa8). [c1.pdf](https://github.com/user-attachments/files/17132733/c1.pdf). ### ROOT version. Master branch. ### Installation method. build from source. ### Operating system. OpenSUSE linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16527
https://github.com/root-project/root/issues/16527:75,Usability,Simpl,Simple,75,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Simple latex `g^{*}` with symbol font is not correctly stored in the PDF file.; ```; auto l = new TLatex(0.5, 0.5, ""g^{*}"");; l->SetTextFont(122);; l->SetTextAlign(22);; l->SetTextSize(0.2);; ```. ### Reproducer. [latex1.cxx.txt](https://github.com/user-attachments/files/17132728/latex1.cxx.txt). ![c1](https://github.com/user-attachments/assets/79403060-5242-41ea-81b5-545df114afa8). [c1.pdf](https://github.com/user-attachments/files/17132733/c1.pdf). ### ROOT version. Master branch. ### Installation method. build from source. ### Operating system. OpenSUSE linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16527
https://github.com/root-project/root/pull/16528:488,Performance,perform,performance,488,"The TypeID2TypeName function looks for generic types via TClass::GetClass, thus taking a lock. If we only need to check for simple types such as bool or unsigned char, we should not need that. This change decreases contention in heavily multithreaded runs. In a test run of the AGC with 1 file and 128 threads, these are the results:. Before:; Executing the computation graphs took 23.37 seconds After:; Executing the computation graphs took 5.55 seconds. ## Notes. I was investigating a performance degradation of the AGC signalled on the forum https://root-forum.cern.ch/t/rootdataframe-and-multithreading-in-6-32/61752 . git bisect brought me to [this commit](https://github.com/root-project/root/commit/4cac104e75d15c6744144b1f0e43dcf87c35bc8a) which seems to be at least contributing to the degradation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16528
https://github.com/root-project/root/pull/16528:262,Testability,test,test,262,"The TypeID2TypeName function looks for generic types via TClass::GetClass, thus taking a lock. If we only need to check for simple types such as bool or unsigned char, we should not need that. This change decreases contention in heavily multithreaded runs. In a test run of the AGC with 1 file and 128 threads, these are the results:. Before:; Executing the computation graphs took 23.37 seconds After:; Executing the computation graphs took 5.55 seconds. ## Notes. I was investigating a performance degradation of the AGC signalled on the forum https://root-forum.cern.ch/t/rootdataframe-and-multithreading-in-6-32/61752 . git bisect brought me to [this commit](https://github.com/root-project/root/commit/4cac104e75d15c6744144b1f0e43dcf87c35bc8a) which seems to be at least contributing to the degradation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16528
https://github.com/root-project/root/pull/16528:124,Usability,simpl,simple,124,"The TypeID2TypeName function looks for generic types via TClass::GetClass, thus taking a lock. If we only need to check for simple types such as bool or unsigned char, we should not need that. This change decreases contention in heavily multithreaded runs. In a test run of the AGC with 1 file and 128 threads, these are the results:. Before:; Executing the computation graphs took 23.37 seconds After:; Executing the computation graphs took 5.55 seconds. ## Notes. I was investigating a performance degradation of the AGC signalled on the forum https://root-forum.cern.ch/t/rootdataframe-and-multithreading-in-6-32/61752 . git bisect brought me to [this commit](https://github.com/root-project/root/commit/4cac104e75d15c6744144b1f0e43dcf87c35bc8a) which seems to be at least contributing to the degradation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16528
https://github.com/root-project/root/pull/16529:145,Safety,avoid,avoid,145,Put float and int first as they might be more common column types. Also move call to TClass::GetClass last as it takes a lock and it's better to avoid it when possible. Following suggestion from https://github.com/root-project/root/pull/16528#issuecomment-2375899434,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16529
https://github.com/root-project/root/pull/16532:14,Usability,simpl,simple,14,Adding a very simple example (as we were showing in the student course) to showcase the difference between running the event loop vs running it multiple times. . This PR fixes #13440.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16532
https://github.com/root-project/root/pull/16533:254,Deployability,update,updated,254,# This Pull request:; moves the dtor of RNTupleInspector to the cxx to avoid including (or having the user include) RPageStorage.hxx (otherwise ~unique_ptr<RPageSource> complains about incomplete type). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16533
https://github.com/root-project/root/pull/16533:71,Safety,avoid,avoid,71,# This Pull request:; moves the dtor of RNTupleInspector to the cxx to avoid including (or having the user include) RPageStorage.hxx (otherwise ~unique_ptr<RPageSource> complains about incomplete type). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16533
https://github.com/root-project/root/pull/16533:224,Testability,test,tested,224,# This Pull request:; moves the dtor of RNTupleInspector to the cxx to avoid including (or having the user include) RPageStorage.hxx (otherwise ~unique_ptr<RPageSource> complains about incomplete type). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16533
https://github.com/root-project/root/pull/16534:208,Deployability,update,updated,208,"# This Pull request:; adds UInts to `RField::AutoAdjustColumnTypes` to make sure we don't split them when compression is 0, similarly to Int and Real types. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16534
https://github.com/root-project/root/pull/16534:178,Testability,test,tested,178,"# This Pull request:; adds UInts to `RField::AutoAdjustColumnTypes` to make sure we don't split them when compression is 0, similarly to Int and Real types. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16534
https://github.com/root-project/root/pull/16535:181,Deployability,update,updated,181,# This Pull request:; A draft PR to test the change in: https://github.com/root-project/roottest/pull/1194; ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16535
https://github.com/root-project/root/pull/16535:36,Testability,test,test,36,# This Pull request:; A draft PR to test the change in: https://github.com/root-project/roottest/pull/1194; ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16535
https://github.com/root-project/root/pull/16535:151,Testability,test,tested,151,# This Pull request:; A draft PR to test the change in: https://github.com/root-project/roottest/pull/1194; ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16535
https://github.com/root-project/root/pull/16537:84,Integrability,interface,interface,84,This allows us to access the `llvm::orc::LLJIT` similar to the `getExecutionEngine` interface in clang-repl which is required for the functioning of libInterOp starting from LLVM 16. cc: @vgvassilev @devajithvs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16537
https://github.com/root-project/root/pull/16537:18,Security,access,access,18,This allows us to access the `llvm::orc::LLJIT` similar to the `getExecutionEngine` interface in clang-repl which is required for the functioning of libInterOp starting from LLVM 16. cc: @vgvassilev @devajithvs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16537
https://github.com/root-project/root/pull/16540:166,Availability,Error,Error,166,"Fixes #8828; ```; root [0] namespace std { namespace Detail {} }; root [1] auto c = TClass::GetClass(""Detail""); (TClass *) 0x12ef3d7b0; root [2] namespace Detail {}; Error in <TInterpreter::RefreshClassInfo>: Should not need to update the classInfo a non type decl: Detail; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16540
https://github.com/root-project/root/pull/16540:228,Deployability,update,update,228,"Fixes #8828; ```; root [0] namespace std { namespace Detail {} }; root [1] auto c = TClass::GetClass(""Detail""); (TClass *) 0x12ef3d7b0; root [2] namespace Detail {}; Error in <TInterpreter::RefreshClassInfo>: Should not need to update the classInfo a non type decl: Detail; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16540
https://github.com/root-project/root/pull/16543:311,Deployability,install,installing,311,"[This issue](https://github.com/root-project/root/issues/16523) noted that the GL component of ROOT is not functioning correctly on Mac. It appears that the problem is related to the use of an incorrect OpenGL library for rendering GL images. This additional library, which comes with XQuartz, is required when installing glew. This pull request aims to ensure that the system's OpenGL library is given priority.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16543
https://github.com/root-project/root/pull/16545:0,Testability,Test,Test,0,Test test in roottest PR https://github.com/root-project/roottest/pull/1197,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16545
https://github.com/root-project/root/pull/16545:5,Testability,test,test,5,Test test in roottest PR https://github.com/root-project/roottest/pull/1197,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16545
https://github.com/root-project/root/pull/16546:374,Deployability,update,updated,374,"Introducing the intermediate class RFloatField<T> that is inherited by RField<float> and RField<double> which exposes the SetHalfPrecision(), SetTruncated() and SetQuantized() methods for both classes. This also adds the previously-missing but advertised `double -> Real16` mapping and the `double -> Real32Trunc` mapping. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16546
https://github.com/root-project/root/pull/16546:58,Modifiability,inherit,inherited,58,"Introducing the intermediate class RFloatField<T> that is inherited by RField<float> and RField<double> which exposes the SetHalfPrecision(), SetTruncated() and SetQuantized() methods for both classes. This also adds the previously-missing but advertised `double -> Real16` mapping and the `double -> Real32Trunc` mapping. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16546
https://github.com/root-project/root/pull/16546:110,Security,expose,exposes,110,"Introducing the intermediate class RFloatField<T> that is inherited by RField<float> and RField<double> which exposes the SetHalfPrecision(), SetTruncated() and SetQuantized() methods for both classes. This also adds the previously-missing but advertised `double -> Real16` mapping and the `double -> Real32Trunc` mapping. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16546
https://github.com/root-project/root/pull/16546:344,Testability,test,tested,344,"Introducing the intermediate class RFloatField<T> that is inherited by RField<float> and RField<double> which exposes the SetHalfPrecision(), SetTruncated() and SetQuantized() methods for both classes. This also adds the previously-missing but advertised `double -> Real16` mapping and the `double -> Real32Trunc` mapping. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16546
https://github.com/root-project/root/pull/16547:11,Energy Efficiency,allocate,allocate,11,Also don't allocate them when using `RProperFile`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16547
https://github.com/root-project/root/pull/16548:9,Availability,failure,failures,9,Prevents failures induced by #16338 for python3.8,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16550:226,Deployability,update,updated,226,"Fixes #14132. # This Pull request:. ## Changes or fixes:; Also check if `fOutputFiles` is empty before giving warning ""A lazy Snapshot action was booked but never triggered"". ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #14132 (the other issue with broken `gDirectory` seems to have gone in latest ROOT (6.32.06), so can consider as this bug is fixed)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16550
https://github.com/root-project/root/pull/16550:196,Testability,test,tested,196,"Fixes #14132. # This Pull request:. ## Changes or fixes:; Also check if `fOutputFiles` is empty before giving warning ""A lazy Snapshot action was booked but never triggered"". ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #14132 (the other issue with broken `gDirectory` seems to have gone in latest ROOT (6.32.06), so can consider as this bug is fixed)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16550
https://github.com/root-project/root/pull/16551:581,Performance,load,loaded,581,"With jsPDF and svg2pdf scripts one can convert drawings into the PDF.; Supported also images which are created by 3D drawings.; Also multi-page PDF files can be created. Functionality works with both Firefox and Chrome browsers running in headless mode. Also improve image generations in batch. ; Now data for any image format can be collected together before processed in single browser invocation - using `canv_batch.htm` file. While jsPDF is used, one has control how fonts are embed into PDF. By default ""symbol"" font used for greek symbols.; If necessary, ""symbol.ttf"" can be loaded and used instead. Also checked that `TWebCanvas::AddFont` is working. One probably can add some demos. Performance.; Creating 100 images in `tutorials/graphics/saveall.C` macro takes approx 3 sec - both with Chrome and Firefox. Keep support of `.screenshot.png` and `.screenshot.pdf`. This is special capability of Chrome browser to produce image or PDF file from existing HTML page. While it provides less control about fonts usage - it only can be used for debug purposes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16551
https://github.com/root-project/root/pull/16551:691,Performance,Perform,Performance,691,"With jsPDF and svg2pdf scripts one can convert drawings into the PDF.; Supported also images which are created by 3D drawings.; Also multi-page PDF files can be created. Functionality works with both Firefox and Chrome browsers running in headless mode. Also improve image generations in batch. ; Now data for any image format can be collected together before processed in single browser invocation - using `canv_batch.htm` file. While jsPDF is used, one has control how fonts are embed into PDF. By default ""symbol"" font used for greek symbols.; If necessary, ""symbol.ttf"" can be loaded and used instead. Also checked that `TWebCanvas::AddFont` is working. One probably can add some demos. Performance.; Creating 100 images in `tutorials/graphics/saveall.C` macro takes approx 3 sec - both with Chrome and Firefox. Keep support of `.screenshot.png` and `.screenshot.pdf`. This is special capability of Chrome browser to produce image or PDF file from existing HTML page. While it provides less control about fonts usage - it only can be used for debug purposes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16551
https://github.com/root-project/root/issues/16552:186,Availability,failure,failures,186,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:; ```; 47:PyMVA-Keras-Classification ; 348:PyMVA-Keras-Regression ; 349:PyMVA-Keras-Multiclass ; 985:tutorial-tmva-TMVA_SOFIE_Keras; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py ; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py ; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py ; 1252:tutorial-tmva-keras-GenerateModel-py ; 1253:tutorial-tmva-keras-MulticlassKeras-py ; 1584:roottest-root-io-evolution-make ; 1641:roottest-root-io-newstl-make; ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```; 347/2278 Testing: PyMVA-Keras-Classification; 347/2278 Test: PyMVA-Keras-Classification; Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake""; Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test; ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC; Output:; ----------------------------------------------------------; Get test data...; Generate keras model...; 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered; 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered; 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Att",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2209,Availability,avail,available,2209," /home/pcanal/root_working/build/quick-devel/tmva/pymva/test; ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC; Output:; ----------------------------------------------------------; Get test data...; Generate keras model...; 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered; 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered; 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered; 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.; 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT; /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; return self._float_to_str(self.smallest_subnormal); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3584,Availability,ERROR,ERROR,3584," for <class 'numpy.float32'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; return self._float_to_str(self.smallest_subnormal); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; return self._float_to_str(self.smallest_subnormal); 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed.; [ERROR] Failed to generate model using python; CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1. <end of output>; Test time = 54.61 sec; ----------------------------------------------------------; Test Failed.; ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC; ""PyMVA-Keras-Classification"" time elapsed: 00:00:54; ```. Other errors:. ```; 14323: system_error: Resource temporarily unavailable; 614356:/bin/sh: fork: retry: Resource temporarily unavailable; 614357:/bin/sh: fork: retry: Resource temporarily unavailable; 614358:/bin/sh: fork: retry: Resource temporarily unavailable; 614359:/bin/sh: fork: retry: Resource temporarily unavailable; 614360:/bin/sh: fork: Resource temporarily unavailable; 614444:/bin/sh: fork: retry: Resource temporarily unavailable; 614445:/bin/sh: fork: retry: Resource temporarily unavailable; 614446:/bin/sh: fork: retry: Resource temporarily unavailable; 614447:/bin/sh: fork: retry: Resource temporarily unavailable; 616571:LLVM ERROR: pthread_crea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3636,Availability,Error,Error,3636," for <class 'numpy.float32'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; return self._float_to_str(self.smallest_subnormal); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; return self._float_to_str(self.smallest_subnormal); 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed.; [ERROR] Failed to generate model using python; CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1. <end of output>; Test time = 54.61 sec; ----------------------------------------------------------; Test Failed.; ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC; ""PyMVA-Keras-Classification"" time elapsed: 00:00:54; ```. Other errors:. ```; 14323: system_error: Resource temporarily unavailable; 614356:/bin/sh: fork: retry: Resource temporarily unavailable; 614357:/bin/sh: fork: retry: Resource temporarily unavailable; 614358:/bin/sh: fork: retry: Resource temporarily unavailable; 614359:/bin/sh: fork: retry: Resource temporarily unavailable; 614360:/bin/sh: fork: Resource temporarily unavailable; 614444:/bin/sh: fork: retry: Resource temporarily unavailable; 614445:/bin/sh: fork: retry: Resource temporarily unavailable; 614446:/bin/sh: fork: retry: Resource temporarily unavailable; 614447:/bin/sh: fork: retry: Resource temporarily unavailable; 616571:LLVM ERROR: pthread_crea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3739,Availability,error,error,3739,"flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; return self._float_to_str(self.smallest_subnormal); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; return self._float_to_str(self.smallest_subnormal); 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed.; [ERROR] Failed to generate model using python; CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1. <end of output>; Test time = 54.61 sec; ----------------------------------------------------------; Test Failed.; ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC; ""PyMVA-Keras-Classification"" time elapsed: 00:00:54; ```. Other errors:. ```; 14323: system_error: Resource temporarily unavailable; 614356:/bin/sh: fork: retry: Resource temporarily unavailable; 614357:/bin/sh: fork: retry: Resource temporarily unavailable; 614358:/bin/sh: fork: retry: Resource temporarily unavailable; 614359:/bin/sh: fork: retry: Resource temporarily unavailable; 614360:/bin/sh: fork: Resource temporarily unavailable; 614444:/bin/sh: fork: retry: Resource temporarily unavailable; 614445:/bin/sh: fork: retry: Resource temporarily unavailable; 614446:/bin/sh: fork: retry: Resource temporarily unavailable; 614447:/bin/sh: fork: retry: Resource temporarily unavailable; 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable; 616573:sh: fork: retry: Resource temporar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3989,Availability,error,errors,3989,"python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; return self._float_to_str(self.smallest_subnormal); 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed.; [ERROR] Failed to generate model using python; CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1. <end of output>; Test time = 54.61 sec; ----------------------------------------------------------; Test Failed.; ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC; ""PyMVA-Keras-Classification"" time elapsed: 00:00:54; ```. Other errors:. ```; 14323: system_error: Resource temporarily unavailable; 614356:/bin/sh: fork: retry: Resource temporarily unavailable; 614357:/bin/sh: fork: retry: Resource temporarily unavailable; 614358:/bin/sh: fork: retry: Resource temporarily unavailable; 614359:/bin/sh: fork: retry: Resource temporarily unavailable; 614360:/bin/sh: fork: Resource temporarily unavailable; 614444:/bin/sh: fork: retry: Resource temporarily unavailable; 614445:/bin/sh: fork: retry: Resource temporarily unavailable; 614446:/bin/sh: fork: retry: Resource temporarily unavailable; 614447:/bin/sh: fork: retry: Resource temporarily unavailable; 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable; 616573:sh: fork: retry: Resource temporarily unavailable; 616574:sh: fork: retry: Resource temporarily unavailable; 616575:sh: fork: retry: Resource temporarily unavailable; 616576:sh: fork: retry: Resource temporarily unavailable; 616577:sh: fork: Resource temporarily unavailable; ```. ### ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4630,Availability,ERROR,ERROR,4630,"eck failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed.; [ERROR] Failed to generate model using python; CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1. <end of output>; Test time = 54.61 sec; ----------------------------------------------------------; Test Failed.; ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC; ""PyMVA-Keras-Classification"" time elapsed: 00:00:54; ```. Other errors:. ```; 14323: system_error: Resource temporarily unavailable; 614356:/bin/sh: fork: retry: Resource temporarily unavailable; 614357:/bin/sh: fork: retry: Resource temporarily unavailable; 614358:/bin/sh: fork: retry: Resource temporarily unavailable; 614359:/bin/sh: fork: retry: Resource temporarily unavailable; 614360:/bin/sh: fork: Resource temporarily unavailable; 614444:/bin/sh: fork: retry: Resource temporarily unavailable; 614445:/bin/sh: fork: retry: Resource temporarily unavailable; 614446:/bin/sh: fork: retry: Resource temporarily unavailable; 614447:/bin/sh: fork: retry: Resource temporarily unavailable; 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable; 616573:sh: fork: retry: Resource temporarily unavailable; 616574:sh: fork: retry: Resource temporarily unavailable; 616575:sh: fork: retry: Resource temporarily unavailable; 616576:sh: fork: retry: Resource temporarily unavailable; 616577:sh: fork: Resource temporarily unavailable; ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook.; ```; jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a; Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; CPU(s): 127; On-line CPU(s) list: 0-126; Vendor ID: AuthenticAMD; Model name: AMD EPYC 7543 32-Core Processor; CPU fa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5012,Deployability,Install,Installation,5012,"thread_create() failed.; [ERROR] Failed to generate model using python; CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1. <end of output>; Test time = 54.61 sec; ----------------------------------------------------------; Test Failed.; ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC; ""PyMVA-Keras-Classification"" time elapsed: 00:00:54; ```. Other errors:. ```; 14323: system_error: Resource temporarily unavailable; 614356:/bin/sh: fork: retry: Resource temporarily unavailable; 614357:/bin/sh: fork: retry: Resource temporarily unavailable; 614358:/bin/sh: fork: retry: Resource temporarily unavailable; 614359:/bin/sh: fork: retry: Resource temporarily unavailable; 614360:/bin/sh: fork: Resource temporarily unavailable; 614444:/bin/sh: fork: retry: Resource temporarily unavailable; 614445:/bin/sh: fork: retry: Resource temporarily unavailable; 614446:/bin/sh: fork: retry: Resource temporarily unavailable; 614447:/bin/sh: fork: retry: Resource temporarily unavailable; 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable; 616573:sh: fork: retry: Resource temporarily unavailable; 616574:sh: fork: retry: Resource temporarily unavailable; 616575:sh: fork: retry: Resource temporarily unavailable; 616576:sh: fork: retry: Resource temporarily unavailable; 616577:sh: fork: Resource temporarily unavailable; ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook.; ```; jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a; Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; CPU(s): 127; On-line CPU(s) list: 0-126; Vendor ID: AuthenticAMD; Model name: AMD EPYC 7543 32-Core Processor; CPU family: 25; Model: 1; Thread(s) per core: 1; Core(s) per socket: 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3728,Integrability,message,message,3728,"flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; return self._float_to_str(self.smallest_subnormal); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; return self._float_to_str(self.smallest_subnormal); 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed.; [ERROR] Failed to generate model using python; CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1. <end of output>; Test time = 54.61 sec; ----------------------------------------------------------; Test Failed.; ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC; ""PyMVA-Keras-Classification"" time elapsed: 00:00:54; ```. Other errors:. ```; 14323: system_error: Resource temporarily unavailable; 614356:/bin/sh: fork: retry: Resource temporarily unavailable; 614357:/bin/sh: fork: retry: Resource temporarily unavailable; 614358:/bin/sh: fork: retry: Resource temporarily unavailable; 614359:/bin/sh: fork: retry: Resource temporarily unavailable; 614360:/bin/sh: fork: Resource temporarily unavailable; 614444:/bin/sh: fork: retry: Resource temporarily unavailable; 614445:/bin/sh: fork: retry: Resource temporarily unavailable; 614446:/bin/sh: fork: retry: Resource temporarily unavailable; 614447:/bin/sh: fork: retry: Resource temporarily unavailable; 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable; 616573:sh: fork: retry: Resource temporar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1608,Modifiability,plugin,plugin,1608,"l-tmva-keras-MulticlassKeras-py ; 1584:roottest-root-io-evolution-make ; 1641:roottest-root-io-newstl-make; ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```; 347/2278 Testing: PyMVA-Keras-Classification; 347/2278 Test: PyMVA-Keras-Classification; Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake""; Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test; ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC; Output:; ----------------------------------------------------------; Get test data...; Generate keras model...; 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered; 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered; 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered; 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.; 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT; /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: User",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1819,Modifiability,plugin,plugin,1819,"the previous test). ### Reproducer. ```; 347/2278 Testing: PyMVA-Keras-Classification; 347/2278 Test: PyMVA-Keras-Classification; Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake""; Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test; ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC; Output:; ----------------------------------------------------------; Get test data...; Generate keras model...; 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered; 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered; 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered; 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.; 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT; /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2033,Modifiability,plugin,plugin,2033,"ymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake""; Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test; ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC; Output:; ----------------------------------------------------------; Get test data...; Generate keras model...; 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered; 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered; 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered; 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.; 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT; /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; return self._float_to_str(self.smallest_subnormal); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2192,Performance,optimiz,optimized,2192," /home/pcanal/root_working/build/quick-devel/tmva/pymva/test; ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC; Output:; ----------------------------------------------------------; Get test data...; Generate keras model...; 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered; 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered; 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered; 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.; 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT; /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; return self._float_to_str(self.smallest_subnormal); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2239,Performance,perform,performance-critical,2239," /home/pcanal/root_working/build/quick-devel/tmva/pymva/test; ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC; Output:; ----------------------------------------------------------; Get test data...; Generate keras model...; 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered; 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered; 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered; 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.; 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT; /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; return self._float_to_str(self.smallest_subnormal); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5135,Security,access,access,5135,"thread_create() failed.; [ERROR] Failed to generate model using python; CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1. <end of output>; Test time = 54.61 sec; ----------------------------------------------------------; Test Failed.; ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC; ""PyMVA-Keras-Classification"" time elapsed: 00:00:54; ```. Other errors:. ```; 14323: system_error: Resource temporarily unavailable; 614356:/bin/sh: fork: retry: Resource temporarily unavailable; 614357:/bin/sh: fork: retry: Resource temporarily unavailable; 614358:/bin/sh: fork: retry: Resource temporarily unavailable; 614359:/bin/sh: fork: retry: Resource temporarily unavailable; 614360:/bin/sh: fork: Resource temporarily unavailable; 614444:/bin/sh: fork: retry: Resource temporarily unavailable; 614445:/bin/sh: fork: retry: Resource temporarily unavailable; 614446:/bin/sh: fork: retry: Resource temporarily unavailable; 614447:/bin/sh: fork: retry: Resource temporarily unavailable; 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable; 616573:sh: fork: retry: Resource temporarily unavailable; 616574:sh: fork: retry: Resource temporarily unavailable; 616575:sh: fork: retry: Resource temporarily unavailable; 616576:sh: fork: retry: Resource temporarily unavailable; 616577:sh: fork: Resource temporarily unavailable; ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook.; ```; jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a; Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; CPU(s): 127; On-line CPU(s) list: 0-126; Vendor ID: AuthenticAMD; Model name: AMD EPYC 7543 32-Core Processor; CPU family: 25; Model: 1; Thread(s) per core: 1; Core(s) per socket: 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:256,Testability,test,test,256,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:; ```; 47:PyMVA-Keras-Classification ; 348:PyMVA-Keras-Regression ; 349:PyMVA-Keras-Multiclass ; 985:tutorial-tmva-TMVA_SOFIE_Keras; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py ; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py ; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py ; 1252:tutorial-tmva-keras-GenerateModel-py ; 1253:tutorial-tmva-keras-MulticlassKeras-py ; 1584:roottest-root-io-evolution-make ; 1641:roottest-root-io-newstl-make; ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```; 347/2278 Testing: PyMVA-Keras-Classification; 347/2278 Test: PyMVA-Keras-Classification; Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake""; Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test; ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC; Output:; ----------------------------------------------------------; Get test data...; Generate keras model...; 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered; 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered; 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Att",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:829,Testability,test,test,829,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:; ```; 47:PyMVA-Keras-Classification ; 348:PyMVA-Keras-Regression ; 349:PyMVA-Keras-Multiclass ; 985:tutorial-tmva-TMVA_SOFIE_Keras; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py ; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py ; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py ; 1252:tutorial-tmva-keras-GenerateModel-py ; 1253:tutorial-tmva-keras-MulticlassKeras-py ; 1584:roottest-root-io-evolution-make ; 1641:roottest-root-io-newstl-make; ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```; 347/2278 Testing: PyMVA-Keras-Classification; 347/2278 Test: PyMVA-Keras-Classification; Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake""; Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test; ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC; Output:; ----------------------------------------------------------; Get test data...; Generate keras model...; 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered; 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered; 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Att",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:866,Testability,Test,Testing,866,"ues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:; ```; 47:PyMVA-Keras-Classification ; 348:PyMVA-Keras-Regression ; 349:PyMVA-Keras-Multiclass ; 985:tutorial-tmva-TMVA_SOFIE_Keras; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py ; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py ; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py ; 1252:tutorial-tmva-keras-GenerateModel-py ; 1253:tutorial-tmva-keras-MulticlassKeras-py ; 1584:roottest-root-io-evolution-make ; 1641:roottest-root-io-newstl-make; ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```; 347/2278 Testing: PyMVA-Keras-Classification; 347/2278 Test: PyMVA-Keras-Classification; Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake""; Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test; ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC; Output:; ----------------------------------------------------------; Get test data...; Generate keras model...; 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered; 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered; 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register fac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:912,Testability,Test,Test,912,"ues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:; ```; 47:PyMVA-Keras-Classification ; 348:PyMVA-Keras-Regression ; 349:PyMVA-Keras-Multiclass ; 985:tutorial-tmva-TMVA_SOFIE_Keras; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py ; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py ; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py ; 1252:tutorial-tmva-keras-GenerateModel-py ; 1253:tutorial-tmva-keras-MulticlassKeras-py ; 1584:roottest-root-io-evolution-make ; 1641:roottest-root-io-newstl-make; ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```; 347/2278 Testing: PyMVA-Keras-Classification; 347/2278 Test: PyMVA-Keras-Classification; Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake""; Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test; ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC; Output:; ----------------------------------------------------------; Get test data...; Generate keras model...; 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered; 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered; 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register fac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1034,Testability,test,test,1034,"ues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:; ```; 47:PyMVA-Keras-Classification ; 348:PyMVA-Keras-Regression ; 349:PyMVA-Keras-Multiclass ; 985:tutorial-tmva-TMVA_SOFIE_Keras; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py ; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py ; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py ; 1252:tutorial-tmva-keras-GenerateModel-py ; 1253:tutorial-tmva-keras-MulticlassKeras-py ; 1584:roottest-root-io-evolution-make ; 1641:roottest-root-io-newstl-make; ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```; 347/2278 Testing: PyMVA-Keras-Classification; 347/2278 Test: PyMVA-Keras-Classification; Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake""; Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test; ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC; Output:; ----------------------------------------------------------; Get test data...; Generate keras model...; 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered; 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered; 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register fac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1039,Testability,test,testPyKerasClassification,1039,"ues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:; ```; 47:PyMVA-Keras-Classification ; 348:PyMVA-Keras-Regression ; 349:PyMVA-Keras-Multiclass ; 985:tutorial-tmva-TMVA_SOFIE_Keras; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py ; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py ; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py ; 1252:tutorial-tmva-keras-GenerateModel-py ; 1253:tutorial-tmva-keras-MulticlassKeras-py ; 1584:roottest-root-io-evolution-make ; 1641:roottest-root-io-newstl-make; ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```; 347/2278 Testing: PyMVA-Keras-Classification; 347/2278 Test: PyMVA-Keras-Classification; Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake""; Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test; ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC; Output:; ----------------------------------------------------------; Get test data...; Generate keras model...; 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered; 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered; 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register fac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1270,Testability,test,test,1270,"; 348:PyMVA-Keras-Regression ; 349:PyMVA-Keras-Multiclass ; 985:tutorial-tmva-TMVA_SOFIE_Keras; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py ; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py ; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py ; 1252:tutorial-tmva-keras-GenerateModel-py ; 1253:tutorial-tmva-keras-MulticlassKeras-py ; 1584:roottest-root-io-evolution-make ; 1641:roottest-root-io-newstl-make; ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```; 347/2278 Testing: PyMVA-Keras-Classification; 347/2278 Test: PyMVA-Keras-Classification; Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake""; Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test; ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC; Output:; ----------------------------------------------------------; Get test data...; Generate keras model...; 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered; 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered; 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered; 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1408,Testability,test,test,1408,"; 348:PyMVA-Keras-Regression ; 349:PyMVA-Keras-Multiclass ; 985:tutorial-tmva-TMVA_SOFIE_Keras; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py ; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py ; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py ; 1252:tutorial-tmva-keras-GenerateModel-py ; 1253:tutorial-tmva-keras-MulticlassKeras-py ; 1584:roottest-root-io-evolution-make ; 1641:roottest-root-io-newstl-make; ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```; 347/2278 Testing: PyMVA-Keras-Classification; 347/2278 Test: PyMVA-Keras-Classification; Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake""; Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test; ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC; Output:; ----------------------------------------------------------; Get test data...; Generate keras model...; 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered; 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered; 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered; 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3771,Testability,Test,Test,3771,"python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; return self._float_to_str(self.smallest_subnormal); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; return self._float_to_str(self.smallest_subnormal); 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed.; [ERROR] Failed to generate model using python; CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1. <end of output>; Test time = 54.61 sec; ----------------------------------------------------------; Test Failed.; ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC; ""PyMVA-Keras-Classification"" time elapsed: 00:00:54; ```. Other errors:. ```; 14323: system_error: Resource temporarily unavailable; 614356:/bin/sh: fork: retry: Resource temporarily unavailable; 614357:/bin/sh: fork: retry: Resource temporarily unavailable; 614358:/bin/sh: fork: retry: Resource temporarily unavailable; 614359:/bin/sh: fork: retry: Resource temporarily unavailable; 614360:/bin/sh: fork: Resource temporarily unavailable; 614444:/bin/sh: fork: retry: Resource temporarily unavailable; 614445:/bin/sh: fork: retry: Resource temporarily unavailable; 614446:/bin/sh: fork: retry: Resource temporarily unavailable; 614447:/bin/sh: fork: retry: Resource temporarily unavailable; 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable; 616573:sh: fork: retry: Resource temporarily unavailable; 616574:sh: fork: r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3854,Testability,Test,Test,3854,"arning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; return self._float_to_str(self.smallest_subnormal); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; return self._float_to_str(self.smallest_subnormal); 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed.; [ERROR] Failed to generate model using python; CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1. <end of output>; Test time = 54.61 sec; ----------------------------------------------------------; Test Failed.; ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC; ""PyMVA-Keras-Classification"" time elapsed: 00:00:54; ```. Other errors:. ```; 14323: system_error: Resource temporarily unavailable; 614356:/bin/sh: fork: retry: Resource temporarily unavailable; 614357:/bin/sh: fork: retry: Resource temporarily unavailable; 614358:/bin/sh: fork: retry: Resource temporarily unavailable; 614359:/bin/sh: fork: retry: Resource temporarily unavailable; 614360:/bin/sh: fork: Resource temporarily unavailable; 614444:/bin/sh: fork: retry: Resource temporarily unavailable; 614445:/bin/sh: fork: retry: Resource temporarily unavailable; 614446:/bin/sh: fork: retry: Resource temporarily unavailable; 614447:/bin/sh: fork: retry: Resource temporarily unavailable; 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable; 616573:sh: fork: retry: Resource temporarily unavailable; 616574:sh: fork: retry: Resource temporarily unavailable; 616575:sh: fork:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16553:1275,Availability,error,errors,1275,"out of threads, see #16552 ):; ```; 47:PyMVA-Keras-Classification; 348:PyMVA-Keras-Regression; 349:PyMVA-Keras-Multiclass; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 985:tutorial-tmva-TMVA_SOFIE_Keras; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py; 1246:tutorial-tmva-TMVA_SOFIE_Models-py; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; 1252:tutorial-tmva-keras-GenerateModel-py; 1253:tutorial-tmva-keras-MulticlassKeras-py; ```; However in 2., several tests still failed (even-though resources where no longer an issue):; ```; 50:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1579,Availability,error,error,1579,"torial-tmva-TMVA_SOFIE_RSofieReader; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py; 1246:tutorial-tmva-TMVA_SOFIE_Models-py; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; 1252:tutorial-tmva-keras-GenerateModel-py; 1253:tutorial-tmva-keras-MulticlassKeras-py; ```; However in 2., several tests still failed (even-though resources where no longer an issue):; ```; 50:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1686,Availability,error,error,1686,"a-RBatchGenerator_TensorFlow-py; 1246:tutorial-tmva-TMVA_SOFIE_Models-py; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; 1252:tutorial-tmva-keras-GenerateModel-py; 1253:tutorial-tmva-keras-MulticlassKeras-py; ```; However in 2., several tests still failed (even-though resources where no longer an issue):; ```; 50:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunctio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2352,Availability,failure,failures,2352," not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; or both; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number?. ### Reproducer. ```; ctest -j 32 # and get lots of out of resource failures; ctest --rerun-failed; ctest -j 32; ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```; jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features; cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2383,Availability,failure,failures,2383," not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; or both; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number?. ### Reproducer. ```; ctest -j 32 # and get lots of out of resource failures; ctest --rerun-failed; ctest -j 32; ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```; jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features; cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3217,Availability,failure,failures,3217,"tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; or both; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number?. ### Reproducer. ```; ctest -j 32 # and get lots of out of resource failures; ctest --rerun-failed; ctest -j 32; ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```; jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features; cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3298,Deployability,Install,Installation,3298,"tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; or both; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number?. ### Reproducer. ```; ctest -j 32 # and get lots of out of resource failures; ctest --rerun-failed; ctest -j 32; ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```; jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features; cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1397,Integrability,interface,interface,1397,"out of threads, see #16552 ):; ```; 47:PyMVA-Keras-Classification; 348:PyMVA-Keras-Regression; 349:PyMVA-Keras-Multiclass; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 985:tutorial-tmva-TMVA_SOFIE_Keras; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py; 1246:tutorial-tmva-TMVA_SOFIE_Models-py; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; 1252:tutorial-tmva-keras-GenerateModel-py; 1253:tutorial-tmva-keras-MulticlassKeras-py; ```; However in 2., several tests still failed (even-though resources where no longer an issue):; ```; 50:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1505,Integrability,interface,interface,1505,"out of threads, see #16552 ):; ```; 47:PyMVA-Keras-Classification; 348:PyMVA-Keras-Regression; 349:PyMVA-Keras-Multiclass; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 985:tutorial-tmva-TMVA_SOFIE_Keras; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py; 1246:tutorial-tmva-TMVA_SOFIE_Models-py; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; 1252:tutorial-tmva-keras-GenerateModel-py; 1253:tutorial-tmva-keras-MulticlassKeras-py; ```; However in 2., several tests still failed (even-though resources where no longer an issue):; ```; 50:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1872,Integrability,depend,dependencies,1872,"eras-py; ```; However in 2., several tests still failed (even-though resources where no longer an issue):; ```; 50:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; or both; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2738,Integrability,interface,interface,2738," not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; or both; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number?. ### Reproducer. ```; ctest -j 32 # and get lots of out of resource failures; ctest --rerun-failed; ctest -j 32; ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```; jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features; cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2865,Integrability,interface,interface,2865," not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; or both; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number?. ### Reproducer. ```; ctest -j 32 # and get lots of out of resource failures; ctest --rerun-failed; ctest -j 32; ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```; jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features; cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2973,Integrability,interface,interface,2973," not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; or both; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number?. ### Reproducer. ```; ctest -j 32 # and get lots of out of resource failures; ctest --rerun-failed; ctest -j 32; ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```; jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features; cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3443,Modifiability,config,config,3443,"tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; or both; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number?. ### Reproducer. ```; ctest -j 32 # and get lots of out of resource failures; ctest --rerun-failed; ctest -j 32; ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```; jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features; cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:191,Testability,test,test,191,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:; 1. ctest -j 32; 2. ctest --rerun-failed; 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):; ```; 47:PyMVA-Keras-Classification; 348:PyMVA-Keras-Regression; 349:PyMVA-Keras-Multiclass; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 985:tutorial-tmva-TMVA_SOFIE_Keras; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py; 1246:tutorial-tmva-TMVA_SOFIE_Models-py; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; 1252:tutorial-tmva-keras-GenerateModel-py; 1253:tutorial-tmva-keras-MulticlassKeras-py; ```; However in 2., several tests still failed (even-though resources where no longer an issue):; ```; 50:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:381,Testability,test,test-TestRModelParserKeras,381,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:; 1. ctest -j 32; 2. ctest --rerun-failed; 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):; ```; 47:PyMVA-Keras-Classification; 348:PyMVA-Keras-Regression; 349:PyMVA-Keras-Multiclass; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 985:tutorial-tmva-TMVA_SOFIE_Keras; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py; 1246:tutorial-tmva-TMVA_SOFIE_Models-py; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; 1252:tutorial-tmva-keras-GenerateModel-py; 1253:tutorial-tmva-keras-MulticlassKeras-py; ```; However in 2., several tests still failed (even-though resources where no longer an issue):; ```; 50:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:921,Testability,test,tests,921,"out of threads, see #16552 ):; ```; 47:PyMVA-Keras-Classification; 348:PyMVA-Keras-Regression; 349:PyMVA-Keras-Multiclass; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 985:tutorial-tmva-TMVA_SOFIE_Keras; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py; 1246:tutorial-tmva-TMVA_SOFIE_Models-py; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; 1252:tutorial-tmva-keras-GenerateModel-py; 1253:tutorial-tmva-keras-MulticlassKeras-py; ```; However in 2., several tests still failed (even-though resources where no longer an issue):; ```; 50:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1016,Testability,test,test-TestRModelParserKeras,1016,"out of threads, see #16552 ):; ```; 47:PyMVA-Keras-Classification; 348:PyMVA-Keras-Regression; 349:PyMVA-Keras-Multiclass; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 985:tutorial-tmva-TMVA_SOFIE_Keras; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py; 1246:tutorial-tmva-TMVA_SOFIE_Models-py; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; 1252:tutorial-tmva-keras-GenerateModel-py; 1253:tutorial-tmva-keras-MulticlassKeras-py; ```; However in 2., several tests still failed (even-though resources where no longer an issue):; ```; 50:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1760,Testability,test,tests,1760,"tutorial-tmva-TMVA_SOFIE_RDataFrame-py; 1252:tutorial-tmva-keras-GenerateModel-py; 1253:tutorial-tmva-keras-MulticlassKeras-py; ```; However in 2., several tests still failed (even-though resources where no longer an issue):; ```; 50:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2202,Testability,test,test-TestRModelParserKeras,2202,"torial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; or both; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number?. ### Reproducer. ```; ctest -j 32 # and get lots of out of resource failures; c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2420,Testability,test,test-TestRModelParserPyTorch,2420," not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; or both; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number?. ### Reproducer. ```; ctest -j 32 # and get lots of out of resource failures; ctest --rerun-failed; ctest -j 32; ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```; jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features; cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2471,Testability,test,test-TestRModelParserKeras,2471," not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; or both; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number?. ### Reproducer. ```; ctest -j 32 # and get lots of out of resource failures; ctest --rerun-failed; ctest -j 32; ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```; jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features; cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/pull/16554:237,Availability,avail,available,237,"**TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that; supported 32 bit CPUs was 10.14 Mojave, end-of-life since three; years: https://en.wikipedia.org/wiki/MacOS_version_history; This effectively sets our oldest supported macOS version to 10.15; from the perspective of CMake (although, I think in practice the; minimum supported version is probably newer because of LLVM; constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,; which I believe is not needed anymore. It is also patched out in; nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:68,Deployability,patch,patches,68,"**TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that; supported 32 bit CPUs was 10.14 Mojave, end-of-life since three; years: https://en.wikipedia.org/wiki/MacOS_version_history; This effectively sets our oldest supported macOS version to 10.15; from the perspective of CMake (although, I think in practice the; minimum supported version is probably newer because of LLVM; constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,; which I believe is not needed anymore. It is also patched out in; nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:1143,Deployability,patch,patched,1143,"**TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that; supported 32 bit CPUs was 10.14 Mojave, end-of-life since three; years: https://en.wikipedia.org/wiki/MacOS_version_history; This effectively sets our oldest supported macOS version to 10.15; from the perspective of CMake (although, I think in practice the; minimum supported version is probably newer because of LLVM; constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,; which I believe is not needed anymore. It is also patched out in; nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:1431,Deployability,patch,patch,1431,"**TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that; supported 32 bit CPUs was 10.14 Mojave, end-of-life since three; years: https://en.wikipedia.org/wiki/MacOS_version_history; This effectively sets our oldest supported macOS version to 10.15; from the perspective of CMake (although, I think in practice the; minimum supported version is probably newer because of LLVM; constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,; which I believe is not needed anymore. It is also patched out in; nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:597,Usability,simpl,simplifications,597,"**TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that; supported 32 bit CPUs was 10.14 Mojave, end-of-life since three; years: https://en.wikipedia.org/wiki/MacOS_version_history; This effectively sets our oldest supported macOS version to 10.15; from the perspective of CMake (although, I think in practice the; minimum supported version is probably newer because of LLVM; constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,; which I believe is not needed anymore. It is also patched out in; nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16555:23,Integrability,depend,dependencies,23,fixes the issues about dependencies mentioned in #16553,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16555
https://github.com/root-project/root/pull/16557:37,Integrability,interface,interface,37,Addresses point 9 in the HEP-CCE/SOP interface review.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16557
https://github.com/root-project/root/issues/16560:1369,Deployability,Install,Installation,1369,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:; ```C++; {; TRandom3 r;; TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);; for (int i=0;i<=1000;++i) {; h.Fill(r.Rndm());; }. TCanvas c = TCanvas();; c.Draw();. h.SetFillStyle(1001);; h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);; h.Draw(""HIST"");. c.SaveAs(""c.root"");; c.SaveAs(""c.png"");; }; ```; and a load.C macro:; ``` C++; {; TFile *f = new TFile(""c.root"");; TH1F *h1 = (TH1F*)f->Get(""c1"");; h1->Draw();; h1->SaveAs(""loaded_c.png""); }; ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:301,Performance,load,load,301,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:; ```C++; {; TRandom3 r;; TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);; for (int i=0;i<=1000;++i) {; h.Fill(r.Rndm());; }. TCanvas c = TCanvas();; c.Draw();. h.SetFillStyle(1001);; h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);; h.Draw(""HIST"");. c.SaveAs(""c.root"");; c.SaveAs(""c.png"");; }; ```; and a load.C macro:; ``` C++; {; TFile *f = new TFile(""c.root"");; TH1F *h1 = (TH1F*)f->Get(""c1"");; h1->Draw();; h1->SaveAs(""loaded_c.png""); }; ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:829,Performance,load,load,829,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:; ```C++; {; TRandom3 r;; TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);; for (int i=0;i<=1000;++i) {; h.Fill(r.Rndm());; }. TCanvas c = TCanvas();; c.Draw();. h.SetFillStyle(1001);; h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);; h.Draw(""HIST"");. c.SaveAs(""c.root"");; c.SaveAs(""c.png"");; }; ```; and a load.C macro:; ``` C++; {; TFile *f = new TFile(""c.root"");; TH1F *h1 = (TH1F*)f->Get(""c1"");; h1->Draw();; h1->SaveAs(""loaded_c.png""); }; ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:548,Testability,test,test,548,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:; ```C++; {; TRandom3 r;; TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);; for (int i=0;i<=1000;++i) {; h.Fill(r.Rndm());; }. TCanvas c = TCanvas();; c.Draw();. h.SetFillStyle(1001);; h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);; h.Draw(""HIST"");. c.SaveAs(""c.root"");; c.SaveAs(""c.png"");; }; ```; and a load.C macro:; ``` C++; {; TFile *f = new TFile(""c.root"");; TH1F *h1 = (TH1F*)f->Get(""c1"");; h1->Draw();; h1->SaveAs(""loaded_c.png""); }; ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:555,Testability,Test,Test,555,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:; ```C++; {; TRandom3 r;; TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);; for (int i=0;i<=1000;++i) {; h.Fill(r.Rndm());; }. TCanvas c = TCanvas();; c.Draw();. h.SetFillStyle(1001);; h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);; h.Draw(""HIST"");. c.SaveAs(""c.root"");; c.SaveAs(""c.png"");; }; ```; and a load.C macro:; ``` C++; {; TFile *f = new TFile(""c.root"");; TH1F *h1 = (TH1F*)f->Get(""c1"");; h1->Draw();; h1->SaveAs(""loaded_c.png""); }; ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/pull/16561:159,Deployability,upgrade,upgrade,159,"1. Fix - TGraph Y range selection, do not cross 0; 2. Fix - correctly handle `#font[id]` in latex; 3. Fix - store canvas with embed geometry drawing; 4. Fix - upgrade rollup and exclude import.meta polyfill; 5. Fix - correctly handle in I/O empty std::map; 6. Fix - reading of small (<1KB) ROOT files; 7. Fix - race condition in zstd initialization #318",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16561
https://github.com/root-project/root/pull/16561:311,Performance,race condition,race condition,311,"1. Fix - TGraph Y range selection, do not cross 0; 2. Fix - correctly handle `#font[id]` in latex; 3. Fix - store canvas with embed geometry drawing; 4. Fix - upgrade rollup and exclude import.meta polyfill; 5. Fix - correctly handle in I/O empty std::map; 6. Fix - reading of small (<1KB) ROOT files; 7. Fix - race condition in zstd initialization #318",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16561
https://github.com/root-project/root/issues/16562:257,Availability,error,error,257,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error.; Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/issues/16562:482,Deployability,Install,Installation,482,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error.; Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/issues/16562:210,Performance,load,load,210,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error.; Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/pull/16568:12,Availability,down,downstream,12,This allows downstream packages to also use the `ROOT_ADD_GTEST` macro in CMake with all its convenience.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16569:0,Testability,test,testing,0,testing github ... this commit should already be in the repository,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16569
https://github.com/root-project/root/pull/16572:395,Deployability,Update,Update,395,"1. `haxis.cxx` - horizontal Y axis and TH1 drawing; 2. `logN.cxx` - different log scales; 3. `twoscales.cxx` - fully interactive two Y and two X scales ; 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping; 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support); 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:56,Testability,log,logN,56,"1. `haxis.cxx` - horizontal Y axis and TH1 drawing; 2. `logN.cxx` - different log scales; 3. `twoscales.cxx` - fully interactive two Y and two X scales ; 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping; 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support); 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:78,Testability,log,log,78,"1. `haxis.cxx` - horizontal Y axis and TH1 drawing; 2. `logN.cxx` - different log scales; 3. `twoscales.cxx` - fully interactive two Y and two X scales ; 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping; 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support); 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:491,Testability,test,testing,491,"1. `haxis.cxx` - horizontal Y axis and TH1 drawing; 2. `logN.cxx` - different log scales; 3. `twoscales.cxx` - fully interactive two Y and two X scales ; 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping; 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support); 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/issues/16573:880,Availability,fault,faulty,880,"Reproducer:. ```; python; >>> import ROOT; >>> ROOT.RooFit.Minos(1).getSet(0).Print(""v""); 1) 0x6535abd27b70 RooConstVar:: 1 = 1 ""1""; ```. Should be like in C++:; ```c++; root [1] RooFit::Minos(1).getSet(0); (const RooArgSet *) nullptr; ```. The function has overloads like this:; ```; RooCmdArg Minos(bool);; RooCmdArg Minos(RooArgSet const&);; ```; The RooArgSet has a constructor `RooArgSet(double)` which is accidentally taken by PyROOT here, even though the call to `Minos(bool)` would be correct. This caused some bad experience for users who tried to enable Minos for all parameters with `Minos(1)`, resulting in nothing happening (Minos was only attempted for this constant ""1"" parameter, which of course does nothing). Not a high priority in this case because the workaround is easy: `Minos(True)`. But it's very possible that users are also bitten in other cases by this faulty overload resolution, so we need to fix it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16573
https://github.com/root-project/root/issues/16577:307,Availability,error,error,307,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Ra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:427,Availability,error,errors,427,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Ra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1341,Availability,error,error,1341," it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |; | From heads/master@v6-31-01-3406-g2dc2e0f126 |; | With g++ (GCC) 14.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:2289,Deployability,Install,Installation,2289,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |; | From heads/master@v6-31-01-3406-g2dc2e0f126 |; | With g++ (GCC) 14.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:313,Integrability,message,messages,313,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Ra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1365,Modifiability,variab,variable,1365," it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |; | From heads/master@v6-31-01-3406-g2dc2e0f126 |; | With g++ (GCC) 14.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1669,Modifiability,variab,variable,1669,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |; | From heads/master@v6-31-01-3406-g2dc2e0f126 |; | With g++ (GCC) 14.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:219,Testability,test,test,219,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Ra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:500,Testability,test,test,500,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Ra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:773,Testability,test,testdeclare,773,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Ra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:850,Testability,test,test,850,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Ra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1328,Testability,test,test,1328,"irst attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |; | From heads/master@v6-31-01-3406-g2dc2e0f126 |; | With g++ (GCC) 14.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. lcg nightlies. ### O",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1487,Testability,test,test,1487,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |; | From heads/master@v6-31-01-3406-g2dc2e0f126 |; | With g++ (GCC) 14.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1650,Testability,test,test,1650,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |; | From heads/master@v6-31-01-3406-g2dc2e0f126 |; | With g++ (GCC) 14.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16578:98,Availability,error,errors,98,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h; ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h; #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h""; #include ""TH2D.h""; #include ""TH3D.h""; #include ""TFile.h""; #include ""TMath.h"". #include <eigen3/Eigen/Dense>; // #include <eigen3/Eigen/Eigenvalues>; //#include <stdlib.h>; //#include <stdio.h>; #include <cstdlib> ; #include <cstdio>; #include <cmath>; #include <iostream>; #include <string>; #include <fstream>; #include <cassert>. namespace wrem {. // ================================================; // Some functions to be used for EtaPtCorrelatedEfficiency; // ================================================; // TODO:; // put functions in another header file; // write a base class to make all functions derive from, at least for polynomials; // write a generic class for polynomials; class pol3_custom {; public:; pol3_custom() {};; pol3_custom(const double& xMin, const double& xRange) {; xMinNorm_ = xMin;; xRangeNorm_ = xRange;; };; double operator() (std::vector<double> &x, std::vector<double> &p) {; double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;; return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);; }; void setPolynomialArgument(const double& xMin, const double& xRange) {; xMinNorm_ = xMin;; xRangeNorm_ = xRange;; }; int getNparams() { return nparams_; }; protected:; // to normalize polynomial argument; int nparams_ = 4;; double xMinNorm_ = 0.0;; double xRangeNorm_ = 1.0;; };. class pol4_custom {; public:; pol4_custom() {};; pol4_custom(const double& xMin, const double& xRange) {; xMinNorm_ = xMin;; xRangeNorm_ = xRange;; };; double ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:124,Availability,failure,failure,124,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h; ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h; #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h""; #include ""TH2D.h""; #include ""TH3D.h""; #include ""TFile.h""; #include ""TMath.h"". #include <eigen3/Eigen/Dense>; // #include <eigen3/Eigen/Eigenvalues>; //#include <stdlib.h>; //#include <stdio.h>; #include <cstdlib> ; #include <cstdio>; #include <cmath>; #include <iostream>; #include <string>; #include <fstream>; #include <cassert>. namespace wrem {. // ================================================; // Some functions to be used for EtaPtCorrelatedEfficiency; // ================================================; // TODO:; // put functions in another header file; // write a base class to make all functions derive from, at least for polynomials; // write a generic class for polynomials; class pol3_custom {; public:; pol3_custom() {};; pol3_custom(const double& xMin, const double& xRange) {; xMinNorm_ = xMin;; xRangeNorm_ = xRange;; };; double operator() (std::vector<double> &x, std::vector<double> &p) {; double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;; return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);; }; void setPolynomialArgument(const double& xMin, const double& xRange) {; xMinNorm_ = xMin;; xRangeNorm_ = xRange;; }; int getNparams() { return nparams_; }; protected:; // to normalize polynomial argument; int nparams_ = 4;; double xMinNorm_ = 0.0;; double xRangeNorm_ = 1.0;; };. class pol4_custom {; public:; pol4_custom() {};; pol4_custom(const double& xMin, const double& xRange) {; xMinNorm_ = xMin;; xRangeNorm_ = xRange;; };; double ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:10806,Availability,error,error,10806,", 0.0);; for (int jpar = 0; jpar < ndim_; ++jpar) {; ret[jpar] = outpars[jpar];; }; return ret;; }. // method to return all parameters in a single vector; std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);; std::vector<double> outpars(ndim_);; ; for (int jpar = 0; jpar < ndim_; ++jpar) {; inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);; }. std::vector<double> ret(ndim_*ndim_, 0.0);; for (int ipar = 0; ipar < ndim_; ++ipar) {; DoHessianShifts(etabin, ipar, inpars, outpars);; for (int jpar = 0; jpar < ndim_; ++jpar) {; ret[ipar * ndim_ + jpar] = outpars[jpar];; }; }; return ret;; }; ; }; ; #endif; ```. test.py; ```; import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:; ```; In module 'Hist':; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'; using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here; ROOT::Internal::TF1Builder<Func>::Build(this, f);; ^; ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here; tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());; ^; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:207:12: note: candidate template ignored: could not match 'const T *' against 'std::vector<double> &'; auto GetTheRightOp(T(F::*opPtr)(const T *, const double *)) -> decltype(opPtr); ^; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:213:12: note: candidate template i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:28560,Deployability,Install,Installation,28560,".ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #20 0x00007f7f0802301b in ?? (); #21 0x00007ffda9ea3b0f in ?? (); #22 0x0000000000000000 in ?? (); ===========================================================. ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |; | From heads/master@v6-31-01-3406-g2dc2e0f126 |; | With g++ (GCC) 14.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:272,Integrability,depend,dependency,272,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h; ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h; #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h""; #include ""TH2D.h""; #include ""TH3D.h""; #include ""TFile.h""; #include ""TMath.h"". #include <eigen3/Eigen/Dense>; // #include <eigen3/Eigen/Eigenvalues>; //#include <stdlib.h>; //#include <stdio.h>; #include <cstdlib> ; #include <cstdio>; #include <cmath>; #include <iostream>; #include <string>; #include <fstream>; #include <cassert>. namespace wrem {. // ================================================; // Some functions to be used for EtaPtCorrelatedEfficiency; // ================================================; // TODO:; // put functions in another header file; // write a base class to make all functions derive from, at least for polynomials; // write a generic class for polynomials; class pol3_custom {; public:; pol3_custom() {};; pol3_custom(const double& xMin, const double& xRange) {; xMinNorm_ = xMin;; xRangeNorm_ = xRange;; };; double operator() (std::vector<double> &x, std::vector<double> &p) {; double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;; return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);; }; void setPolynomialArgument(const double& xMin, const double& xRange) {; xMinNorm_ = xMin;; xRangeNorm_ = xRange;; }; int getNparams() { return nparams_; }; protected:; // to normalize polynomial argument; int nparams_ = 4;; double xMinNorm_ = 0.0;; double xRangeNorm_ = 1.0;; };. class pol4_custom {; public:; pol4_custom() {};; pol4_custom(const double& xMin, const double& xRange) {; xMinNorm_ = xMin;; xRangeNorm_ = xRange;; };; double ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:16829,Modifiability,variab,variable,16829,"StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #20 0x00007f7f0802301b in ?? (); #21 0x00007ffda9ea3b0f in ?? (); #22 0x0000000000000000 in ?? (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:24504,Modifiability,variab,variable,24504,"StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #20 0x00007f7f0802301b in ?? (); #21 0x00007ffda9ea3b0f in ?? (); #22 0x0000000000000000 in ?? (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:16199,Performance,Load,LoadText,16199,"mfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #20 0x00007f7f0802301b in ?? (); #21 0x00007ffda9ea3b0f in ?? (); #22 0x0000000000000000 in ?? (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:19965,Performance,Load,LoadText,19965,"mfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #20 0x00007f7f0802301b in ?? (); #21 0x00007ffda9ea3b0f in ?? (); #22 0x0000000000000000 in ?? (); ===========================================================. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f7f16f182ca in wait4 () from /lib64/libc.so.6; #1 0x00007f7f16e61953 in do_system () from /lib64/libc.so.6; #2 0x00007f7f08f197d3 in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCore.so; #3 0x00007f7f170293bf in (anonymous namespace)::TExceptionHandlerImp::HandleException(int",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:23874,Performance,Load,LoadText,23874,"mfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #20 0x00007f7f0802301b in ?? (); #21 0x00007ffda9ea3b0f in ?? (); #22 0x0000000000000000 in ?? (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:27640,Performance,Load,LoadText,27640,"mfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #20 0x00007f7f0802301b in ?? (); #21 0x00007ffda9ea3b0f in ?? (); #22 0x0000000000000000 in ?? (); ===========================================================. ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |; | From heads/master@v6-31-01-3406-g2dc2e0f126 |; | With g++ (GCC) 14.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:6677,Safety,Abort,Abort,6677,") != std::string::npos) { ; tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());; function_ = tf1_pol3_tf_;; ndim_ = tf1_pol3_tf_->GetNpar();; } else if (name.find(""pol4_tf"") != std::string::npos) {; tf1_pol4_tf_ = new TF1(""tf1_pol4_tf_"", pol4_tf_, ptmin_, ptmax_, pol4_tf_.getNparams());; function_ = tf1_pol4_tf_;; ndim_ = tf1_pol4_tf_->GetNpar();; // } else if (name.find(""erfPol2_tf"") != std::string::npos) {; // tf1_erfPol2_tf_ = new TF1(""tf1_erfPol2_tf_"", erfPol2_tf_, ptmin_, ptmax_, erfPol2_tf_.getNparams());; // function_ = tf1_erfPol2_tf_;; // ndim_ = tf1_erfPol2_tf_->GetNpar();; } else if (name.find(""pol3"") != std::string::npos) {; function_ = tf1_pol3_;; ndim_ = 4; ; } else if (name.find(""pol2"") != std::string::npos) {; function_ = tf1_pol2_;; ndim_ = 3;; } else if (name.find(""erf"") != std::string::npos) {; function_ = tf1_erf_;; ndim_ = 3;; } else {; std::cout << ""Smoothing function "" << name << "" not implemented. Abort"" << std::endl;; exit(EXIT_FAILURE);; }; return;; }. // Eigen::MatrixXd EtaPtCorrelatedEfficiency::covariance(int etabin) {; // Eigen::MatrixXd covMat(ndim_, ndim_);; // for (int i = 0; i < ndim_; ++i) {; // for (int j = 0; j < ndim_; ++j) {; // covMat(i,j) = covhist_->GetBinContent(etabin, i+1, j+1);; // }; // }; // // std::cout << ""covariance matrix = "" << std::endl << covMat << std::endl;; // return covMat;; // }. // void EtaPtCorrelatedEfficiency::DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars) {; //; // // diagonalize the covariance matrix; // Eigen::MatrixXd covMat = covariance(etabin);; // Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(covMat);; // Eigen::VectorXd eigenv = es.eigenvalues();; // Eigen::MatrixXd transformation = es.eigenvectors();; // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;; //; // // transform the pars in the diagonal basis; // const unsigned int npars = transformation.rows();; // const u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:385,Testability,test,test,385,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h; ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h; #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h""; #include ""TH2D.h""; #include ""TH3D.h""; #include ""TFile.h""; #include ""TMath.h"". #include <eigen3/Eigen/Dense>; // #include <eigen3/Eigen/Eigenvalues>; //#include <stdlib.h>; //#include <stdio.h>; #include <cstdlib> ; #include <cstdio>; #include <cmath>; #include <iostream>; #include <string>; #include <fstream>; #include <cassert>. namespace wrem {. // ================================================; // Some functions to be used for EtaPtCorrelatedEfficiency; // ================================================; // TODO:; // put functions in another header file; // write a base class to make all functions derive from, at least for polynomials; // write a generic class for polynomials; class pol3_custom {; public:; pol3_custom() {};; pol3_custom(const double& xMin, const double& xRange) {; xMinNorm_ = xMin;; xRangeNorm_ = xRange;; };; double operator() (std::vector<double> &x, std::vector<double> &p) {; double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;; return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);; }; void setPolynomialArgument(const double& xMin, const double& xRange) {; xMinNorm_ = xMin;; xRangeNorm_ = xRange;; }; int getNparams() { return nparams_; }; protected:; // to normalize polynomial argument; int nparams_ = 4;; double xMinNorm_ = 0.0;; double xRangeNorm_ = 1.0;; };. class pol4_custom {; public:; pol4_custom() {};; pol4_custom(const double& xMin, const double& xRange) {; xMinNorm_ = xMin;; xRangeNorm_ = xRange;; };; double ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:5131,Testability,assert,assert,5131,"<double> &inpars, std::vector<double> &outpars);. std::string smoothFunctionName_ = ""cheb3"";; TH3D *covhist_;; TH2D *parhist_;; int ndim_ = 4;; double ptmin_ = 0.0;; double ptmax_ = 100.0;; double eigenShift_ = 1.0;; TF1* function_ = nullptr;; // list of predefined functions; TF1* tf1_pol3_ = new TF1(""tf1_pol3_"", ""pol3"", ptmin_, ptmax_);; TF1* tf1_pol2_ = new TF1(""tf1_pol2_"", ""pol2"", ptmin_, ptmax_);; TF1* tf1_erf_ = new TF1(""tf1_erf_"", ""[0] * (1.0 + TMath::Erf((x-[1])/[2]))"", ptmin_, ptmax_);; pol3_custom pol3_tf_;; TF1* tf1_pol3_tf_ = nullptr;; pol4_custom pol4_tf_;; TF1* tf1_pol4_tf_ = nullptr;; // erfPol2_custom erfPol2_tf_;; // TF1* tf1_erfPol2_tf_ = nullptr;; };. EtaPtCorrelatedEfficiency::EtaPtCorrelatedEfficiency(TH3D* histocov, TH2D* histoerf, double ptmin, double ptmax):; pol3_tf_(ptmin, ptmax),; pol4_tf_(ptmin, ptmax); // erfPol2_tf_(ptmin, ptmax); {; covhist_ = histocov;; int ny = covhist_->GetNbinsY();; int nz = covhist_->GetNbinsZ();; assert(ny==nz);; ndim_ = ny;; parhist_ = histoerf;; ptmin_ = ptmin;; ptmax_ = ptmax;; setSmoothingFunction(""pol3_tf"");; }; // EtaPtCorrelatedEfficiency::~EtaPtCorrelatedEfficiency() {; // function_ = nullptr;; // delete tf1_pol3_;; // delete tf1_pol2_;; // delete tf1_erf_;; // delete tf1_pol3_tf_;; // delete tf1_pol4_tf_;; // // delete tf1_erfPol2_tf_;; // }. void EtaPtCorrelatedEfficiency::setSmoothingFunction(const std::string& name) {; // TODO: if case I add more functions, find a smarte way to find the good one; smoothFunctionName_ = name;; if (name.find(""pol3_tf"") != std::string::npos) { ; tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());; function_ = tf1_pol3_tf_;; ndim_ = tf1_pol3_tf_->GetNpar();; } else if (name.find(""pol4_tf"") != std::string::npos) {; tf1_pol4_tf_ = new TF1(""tf1_pol4_tf_"", pol4_tf_, ptmin_, ptmax_, pol4_tf_.getNparams());; function_ = tf1_pol4_tf_;; ndim_ = tf1_pol4_tf_->GetNpar();; // } else if (name.find(""erfPol2_tf"") != std::string::npos) {; // tf1_erfPol2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:10588,Testability,test,test,10588," ndim_ << "" ("" << ipar << "")"" << std::endl;; exit(EXIT_FAILURE);; }; std::vector<double> inpars(ndim_);; std::vector<double> outpars(ndim_);; ; for (int jpar = 0; jpar < ndim_; ++jpar) {; inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);; }; DoHessianShifts(etabin, ipar, inpars, outpars);; std::vector<double> ret(ndim_, 0.0);; for (int jpar = 0; jpar < ndim_; ++jpar) {; ret[jpar] = outpars[jpar];; }; return ret;; }. // method to return all parameters in a single vector; std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);; std::vector<double> outpars(ndim_);; ; for (int jpar = 0; jpar < ndim_; ++jpar) {; inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);; }. std::vector<double> ret(ndim_*ndim_, 0.0);; for (int ipar = 0; ipar < ndim_; ++ipar) {; DoHessianShifts(etabin, ipar, inpars, outpars);; for (int jpar = 0; jpar < ndim_; ++jpar) {; ret[ipar * ndim_ + jpar] = outpars[jpar];; }; }; return ret;; }; ; }; ; #endif; ```. test.py; ```; import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:; ```; In module 'Hist':; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'; using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here; ROOT::Internal::TF1Builder<Func>::Build(this, f);; ^; ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here; tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());; ^; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/incl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:10652,Testability,test,test,10652,"FAILURE);; }; std::vector<double> inpars(ndim_);; std::vector<double> outpars(ndim_);; ; for (int jpar = 0; jpar < ndim_; ++jpar) {; inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);; }; DoHessianShifts(etabin, ipar, inpars, outpars);; std::vector<double> ret(ndim_, 0.0);; for (int jpar = 0; jpar < ndim_; ++jpar) {; ret[jpar] = outpars[jpar];; }; return ret;; }. // method to return all parameters in a single vector; std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);; std::vector<double> outpars(ndim_);; ; for (int jpar = 0; jpar < ndim_; ++jpar) {; inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);; }. std::vector<double> ret(ndim_*ndim_, 0.0);; for (int ipar = 0; ipar < ndim_; ++ipar) {; DoHessianShifts(etabin, ipar, inpars, outpars);; for (int jpar = 0; jpar < ndim_; ++jpar) {; ret[ipar * ndim_ + jpar] = outpars[jpar];; }; }; return ret;; }; ; }; ; #endif; ```. test.py; ```; import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:; ```; In module 'Hist':; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'; using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here; ROOT::Internal::TF1Builder<Func>::Build(this, f);; ^; ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here; tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());; ^; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:207:12: note: candidate template ignored: cou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:11290,Testability,test,test,11290,"nContent(etabin, jpar+1);; }. std::vector<double> ret(ndim_*ndim_, 0.0);; for (int ipar = 0; ipar < ndim_; ++ipar) {; DoHessianShifts(etabin, ipar, inpars, outpars);; for (int jpar = 0; jpar < ndim_; ++jpar) {; ret[ipar * ndim_ + jpar] = outpars[jpar];; }; }; return ret;; }; ; }; ; #endif; ```. test.py; ```; import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:; ```; In module 'Hist':; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'; using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here; ROOT::Internal::TF1Builder<Func>::Build(this, f);; ^; ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here; tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());; ^; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:207:12: note: candidate template ignored: could not match 'const T *' against 'std::vector<double> &'; auto GetTheRightOp(T(F::*opPtr)(const T *, const double *)) -> decltype(opPtr); ^; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:213:12: note: candidate template ignored: could not match 'T (const T *, const double *) const' against 'double (std::vector<double> &, std::vector<double> &)'; auto GetTheRightOp(T(F::*opPtr)(const T *, const double *) const) -> decltype(opPtr); ^; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:219:12: note: candidate template ignored: could not match 'T *",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/pull/16579:178,Safety,avoid,avoid,178,"* Make central function `TestReport()` which executes all planned tests for the canvas. ; * Print report when all images and scripts are generated. ; * Resort function orders to avoid need of forward declarations; * Use `TString::Format()` instead of `snprintf`; * Use `TFile::Open()` instead of `new TFile`; * Improve handling of command line args like `-k` or `-v`; * Create SVG instead of PS files when running in web mode, provide correspondent ref file; * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```; ./stressGraphics --web=chrome; ... **********************************************************************; * All the tests passed. :-); **********************************************************************; * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S; **********************************************************************; * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds; **********************************************************************; * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0; **********************************************************************; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:25,Testability,Test,TestReport,25,"* Make central function `TestReport()` which executes all planned tests for the canvas. ; * Print report when all images and scripts are generated. ; * Resort function orders to avoid need of forward declarations; * Use `TString::Format()` instead of `snprintf`; * Use `TFile::Open()` instead of `new TFile`; * Improve handling of command line args like `-k` or `-v`; * Create SVG instead of PS files when running in web mode, provide correspondent ref file; * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```; ./stressGraphics --web=chrome; ... **********************************************************************; * All the tests passed. :-); **********************************************************************; * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S; **********************************************************************; * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds; **********************************************************************; * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0; **********************************************************************; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:66,Testability,test,tests,66,"* Make central function `TestReport()` which executes all planned tests for the canvas. ; * Print report when all images and scripts are generated. ; * Resort function orders to avoid need of forward declarations; * Use `TString::Format()` instead of `snprintf`; * Use `TFile::Open()` instead of `new TFile`; * Improve handling of command line args like `-k` or `-v`; * Create SVG instead of PS files when running in web mode, provide correspondent ref file; * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```; ./stressGraphics --web=chrome; ... **********************************************************************; * All the tests passed. :-); **********************************************************************; * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S; **********************************************************************; * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds; **********************************************************************; * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0; **********************************************************************; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:738,Testability,test,tests,738,"* Make central function `TestReport()` which executes all planned tests for the canvas. ; * Print report when all images and scripts are generated. ; * Resort function orders to avoid need of forward declarations; * Use `TString::Format()` instead of `snprintf`; * Use `TFile::Open()` instead of `new TFile`; * Improve handling of command line args like `-k` or `-v`; * Create SVG instead of PS files when running in web mode, provide correspondent ref file; * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```; ./stressGraphics --web=chrome; ... **********************************************************************; * All the tests passed. :-); **********************************************************************; * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S; **********************************************************************; * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds; **********************************************************************; * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0; **********************************************************************; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:521,Usability,simpl,simplify,521,"* Make central function `TestReport()` which executes all planned tests for the canvas. ; * Print report when all images and scripts are generated. ; * Resort function orders to avoid need of forward declarations; * Use `TString::Format()` instead of `snprintf`; * Use `TFile::Open()` instead of `new TFile`; * Improve handling of command line args like `-k` or `-v`; * Create SVG instead of PS files when running in web mode, provide correspondent ref file; * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```; ./stressGraphics --web=chrome; ... **********************************************************************; * All the tests passed. :-); **********************************************************************; * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S; **********************************************************************; * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds; **********************************************************************; * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0; **********************************************************************; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/issues/16582:188,Deployability,Install,Installation,188,### Explain what you would like to see improved and how. Relabel linux runners into something like `cpu` `gpu` instead of `root-ci` and `root-ci-gpu`. ### ROOT version. Doesn't apply. ### Installation method. Doesn't apply. ### Operating system. Doesn't apply. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16582
https://github.com/root-project/root/issues/16583:898,Deployability,Install,Installation,898,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As discussed in #16478, the TTree feature of using a count leaf inside a leaf list is currently unsupported by the importer. ### Reproducer. The following file cannot be imported:; ```; std::unique_ptr<TFile> file(TFile::Open(""tree.root"", ""RECREATE""));; auto tree = std::make_unique<TTree>(""tree"", """");; int count = 1;; struct {; float foo = 2.0;; Int_t values[20]; // is controled by [count]; } leafList;; leafList.values = new Int_t[1];; leafList.values[0] = 1;; tree->Branch(""count"", &count);; tree->Branch(""leaflist"", &leafList, ""foo/F:values[count]/I"");; tree->Fill();; tree->Write();; ```. As well as having the count leaf inside the leaf list as well as ""manually"" encoding the leaf count arrays (see [comments](https://github.com/root-project/root/pull/16478#discussion_r1784714941)). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16583
https://github.com/root-project/root/pull/16584:239,Modifiability,config,configure,239,"This would address two annoyances I have at the same time:. 1. One can now clone both `root` and `clad`, linking the source directories together. This makes it much easier to try out changes in clad in the context of ROOT. 2. ROOT can now configure and build without an internet connection, even with `Dclad=ON`. This partially addresses #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16584
https://github.com/root-project/root/pull/16585:29,Security,access,accessed,29,Similar functionality can be accessed through the RRecordField (untyped records) and RVectorField::CreateUntyped() (untyped collections). Fixes #14642,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16585
https://github.com/root-project/root/pull/16586:94,Availability,error,errors,94,"On Windows, even `__declspec(no_sanitize_address)` does not prevent the `heap-use-after-free` errors when using the `/fsanitize=address` compiler flag, so don't even try. Fixes https://github.com/root-project/root/issues/9445",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16586
https://github.com/root-project/root/issues/16588:480,Deployability,Install,Installation,480,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. For all but record and class fields, the number of elements of that field is given by the number of elements of the principle columns. Records/classes don't have columns of their own. The information must be retrieved from one of the subfields. ### Reproducer. The problem arises, e.g., when trying to iterate over the field range of a view of a record item of a collection. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16588
https://github.com/root-project/root/pull/16589:17,Modifiability,variab,variable,17,Remove an unused variable and fix some clang warnings (suggest-braces) that make ROOT not compile with -Werror,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16589
https://github.com/root-project/root/pull/16590:266,Deployability,update,updated,266,"The GPU runner was attracting CPU-only jobs, since all runner labels in use so far were automatic github labels. Here, a unique label is added to steer the jobs correctly. Furthermore, the upload-artifact action starts warning about an imminent deprecation, so it's updated to v4 here.; This uncovered a name clash, where two builds on the same image would race to upload artifacts. This seems to be OK in v3, but not in v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16590
https://github.com/root-project/root/pull/16592:663,Energy Efficiency,schedul,scheduling,663,"This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16592
https://github.com/root-project/root/pull/16592:175,Integrability,interface,interfaces,175,"This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16592
https://github.com/root-project/root/pull/16592:22,Modifiability,refactor,refactoring,22,"This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16592
https://github.com/root-project/root/pull/16592:352,Modifiability,refactor,refactoring,352,"This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16592
https://github.com/root-project/root/pull/16594:284,Availability,error,error,284,"Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the; internet connection has to be disabled. This is not allowed when; `fail-on-missing=ON`. Therefore, we can raise the fatal error already in; the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint; to the user on what option to set if he wants to avoid the configuration; code branch that requires the connection check. Also, move all connection check related things in; `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:488,Deployability,configurat,configuration,488,"Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the; internet connection has to be disabled. This is not allowed when; `fail-on-missing=ON`. Therefore, we can raise the fatal error already in; the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint; to the user on what option to set if he wants to avoid the configuration; code branch that requires the connection check. Also, move all connection check related things in; `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:488,Modifiability,config,configuration,488,"Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the; internet connection has to be disabled. This is not allowed when; `fail-on-missing=ON`. Therefore, we can raise the fatal error already in; the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint; to the user on what option to set if he wants to avoid the configuration; code branch that requires the connection check. Also, move all connection check related things in; `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:335,Safety,avoid,avoid,335,"Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the; internet connection has to be disabled. This is not allowed when; `fail-on-missing=ON`. Therefore, we can raise the fatal error already in; the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint; to the user on what option to set if he wants to avoid the configuration; code branch that requires the connection check. Also, move all connection check related things in; `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:478,Safety,avoid,avoid,478,"Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the; internet connection has to be disabled. This is not allowed when; `fail-on-missing=ON`. Therefore, we can raise the fatal error already in; the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint; to the user on what option to set if he wants to avoid the configuration; code branch that requires the connection check. Also, move all connection check related things in; `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:643,Usability,simpl,simpler,643,"Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the; internet connection has to be disabled. This is not allowed when; `fail-on-missing=ON`. Therefore, we can raise the fatal error already in; the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint; to the user on what option to set if he wants to avoid the configuration; code branch that requires the connection check. Also, move all connection check related things in; `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16596:90,Testability,test,test,90,"Even if this only happens via the interpreter, it can cause trouble. This is also why the test was disable on Windows. The point of the unit test is to cover the case of a Gaussian constraint, so we can just constrain another parameter and don't do the interpolation with the `PiecewiseInterpolation` class from HistFactory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16596
https://github.com/root-project/root/pull/16596:141,Testability,test,test,141,"Even if this only happens via the interpreter, it can cause trouble. This is also why the test was disable on Windows. The point of the unit test is to cover the case of a Gaussian constraint, so we can just constrain another parameter and don't do the interpolation with the `PiecewiseInterpolation` class from HistFactory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16596
https://github.com/root-project/root/pull/16597:197,Deployability,install,install,197,"This makes it unnecessary to veto these files in case RooFit is not enabled, and also makes it easier to consider the `man` and `etc` files when building RooFit standalone. I checked the build and install directories that everything is still where it should be.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16597
https://github.com/root-project/root/issues/16600:259,Availability,down,down,259,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:645,Deployability,Install,Installation,645,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:129,Integrability,message,message,129,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:411,Modifiability,variab,variables,411,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:111,Safety,safe,safe,111,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:219,Safety,safe,safe,219,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:583,Safety,safe,safe,583,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16601:191,Availability,error,error,191,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```; cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }; ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106); ```; [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh; [vpadulan@lxplus951 ~]$root --version; ROOT Version: 6.32.02; Built for linuxx8664gcc on Jun 19 2024, 05:05:49; From heads/master@tags/v6-32-02; [vpadulan@lxplus951 ~]$python repro_libphysics.py; cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOption",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:837,Availability,error,error,837,"in. ```; cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }; ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106); ```; [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh; [vpadulan@lxplus951 ~]$root --version; ROOT Version: 6.32.02; Built for linuxx8664gcc on Jun 19 2024, 05:05:49; From heads/master@tags/v6-32-02; [vpadulan@lxplus951 ~]$python repro_libphysics.py; cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }; cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2028,Availability,error,error,2028,"lete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }; cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }; Traceback (most recent call last):; File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>; raise SystemExit(main()); ^^^^^^; File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main; print(ROOT.myvec); ^^^^^^^^^^; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr; raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); AttributeError: Failed to get attribute myvec from ROOT; ```. ### ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:3457,Availability,error,error,3457,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }; cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }; Traceback (most recent call last):; File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>; raise SystemExit(main()); ^^^^^^; File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main; print(ROOT.myvec); ^^^^^^^^^^; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr; raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); AttributeError: Failed to get attribute myvec from ROOT; ```. ### ROOT 6.30.02 (LCG105); ```; [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh; [vpadulan@lxplus959 ~]$root --version; ROOT Version: 6.30/02; Built for linuxx8664gcc on Dec 20 2023, 18:59:44; From heads/master@tags/v6-30-02; [vpadulan@lxplus959 ~]$python repro_libphysics.py; Name: TVectorT<float> Title:; ```. ### Reproducer. ```python; import ROOT. def main():; ROOT.gInterpreter.Declare('''; #include <TVectorT.h>; //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear; const auto myvec = TVectorT<float>();; '''); print(ROOT.myvec). if __name__ == ""__main__"":; raise SystemExit(main()); ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:3627,Deployability,Install,Installation,3627,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }; cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }; Traceback (most recent call last):; File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>; raise SystemExit(main()); ^^^^^^; File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main; print(ROOT.myvec); ^^^^^^^^^^; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr; raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); AttributeError: Failed to get attribute myvec from ROOT; ```. ### ROOT 6.30.02 (LCG105); ```; [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh; [vpadulan@lxplus959 ~]$root --version; ROOT Version: 6.30/02; Built for linuxx8664gcc on Dec 20 2023, 18:59:44; From heads/master@tags/v6-30-02; [vpadulan@lxplus959 ~]$python repro_libphysics.py; Name: TVectorT<float> Title:; ```. ### Reproducer. ```python; import ROOT. def main():; ROOT.gInterpreter.Declare('''; #include <TVectorT.h>; //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear; const auto myvec = TVectorT<float>();; '''); print(ROOT.myvec). if __name__ == ""__main__"":; raise SystemExit(main()); ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:404,Usability,simpl,simple,404,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```; cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }; ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106); ```; [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh; [vpadulan@lxplus951 ~]$root --version; ROOT Version: 6.32.02; Built for linuxx8664gcc on Jun 19 2024, 05:05:49; From heads/master@tags/v6-32-02; [vpadulan@lxplus951 ~]$python repro_libphysics.py; cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOption",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/pull/16602:564,Deployability,update,updated,564,"Instead of throwing when deserializing a field with an unknown structural role, we assign to it structure == ENTupleStructure::kUnknown. ; FieldDescriptors with Unknown structural role will generate RInvalidFields upon calling CreateField(). ; This allows getting the descriptor for a future RNTuple from an old ROOT version. A `fForwardCompatible` option is added to RCreateModelOptions to tell RNTuple to not throw when reconstructing the model for an RNTuple containing fields with an unknown structural role. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16602
https://github.com/root-project/root/pull/16602:534,Testability,test,tested,534,"Instead of throwing when deserializing a field with an unknown structural role, we assign to it structure == ENTupleStructure::kUnknown. ; FieldDescriptors with Unknown structural role will generate RInvalidFields upon calling CreateField(). ; This allows getting the descriptor for a future RNTuple from an old ROOT version. A `fForwardCompatible` option is added to RCreateModelOptions to tell RNTuple to not throw when reconstructing the model for an RNTuple containing fields with an unknown structural role. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16602
https://github.com/root-project/root/pull/16604:38,Deployability,configurat,configurations,38,"I checked that the following chain of configurations works now, and; failed before:; ```; cmake -Dminimial=ON -Dssl=OFF ..; cmake -Dbuiltin_xrootd=ON .; ```. Closes https://github.com/root-project/root/issues/16374.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16604
https://github.com/root-project/root/pull/16604:38,Modifiability,config,configurations,38,"I checked that the following chain of configurations works now, and; failed before:; ```; cmake -Dminimial=ON -Dssl=OFF ..; cmake -Dbuiltin_xrootd=ON .; ```. Closes https://github.com/root-project/root/issues/16374.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16604
https://github.com/root-project/root/pull/16605:157,Testability,test,tested,157,1) Don't force user to build graf3d OpenGL features if `cocoa=ON`. 2) Require asimage=ON in case of opengl=ON. More detail in the commit description. I have tested on macOS that the first commit does what it should. Closes #16250.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16606:118,Integrability,depend,depend,118,"For better modularity in the future, the major end-user ROOT components; like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the; RooAbsDataHelper, but it is actually easy to avoid this with forward; declarations. This should have no impact on the user, because if they use RDF, they; probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:152,Integrability,depend,dependency,152,"For better modularity in the future, the major end-user ROOT components; like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the; RooAbsDataHelper, but it is actually easy to avoid this with forward; declarations. This should have no impact on the user, because if they use RDF, they; probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:248,Safety,avoid,avoid,248,"For better modularity in the future, the major end-user ROOT components; like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the; RooAbsDataHelper, but it is actually easy to avoid this with forward; declarations. This should have no impact on the user, because if they use RDF, they; probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16607:100,Testability,test,tests,100,Allows for reading integers from other integer types. Includes bounds checking where necessary. The tests are a little mechanical but I'm not sure if the code would improve with more templates.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16607
https://github.com/root-project/root/pull/16608:503,Deployability,install,installed,503,"**This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step; towards making the RooFit developer experience for the pythonizations; more pleasant. The goal is that people can contribute to the RooFit pythonizations; without having to interact with any CMake or C++ compilation, which was; requested by our power users. Testing changes to the pythonizations is easy now, because they can be; installed easily with pip on top of an existing ROOT install, in which; case this install will override the RooFit pythonizations shipped with; ROOT. This makes developing the pythonizations *much* easier!. A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system; 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory; 3. Install with `pip install -e .` for an editable install (virtual environment recommended); 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything!; 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:556,Deployability,install,install,556,"**This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step; towards making the RooFit developer experience for the pythonizations; more pleasant. The goal is that people can contribute to the RooFit pythonizations; without having to interact with any CMake or C++ compilation, which was; requested by our power users. Testing changes to the pythonizations is easy now, because they can be; installed easily with pip on top of an existing ROOT install, in which; case this install will override the RooFit pythonizations shipped with; ROOT. This makes developing the pythonizations *much* easier!. A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system; 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory; 3. Install with `pip install -e .` for an editable install (virtual environment recommended); 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything!; 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:585,Deployability,install,install,585,"**This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step; towards making the RooFit developer experience for the pythonizations; more pleasant. The goal is that people can contribute to the RooFit pythonizations; without having to interact with any CMake or C++ compilation, which was; requested by our power users. Testing changes to the pythonizations is easy now, because they can be; installed easily with pip on top of an existing ROOT install, in which; case this install will override the RooFit pythonizations shipped with; ROOT. This makes developing the pythonizations *much* easier!. A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system; 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory; 3. Install with `pip install -e .` for an editable install (virtual environment recommended); 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything!; 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:917,Deployability,install,installed,917,"**This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step; towards making the RooFit developer experience for the pythonizations; more pleasant. The goal is that people can contribute to the RooFit pythonizations; without having to interact with any CMake or C++ compilation, which was; requested by our power users. Testing changes to the pythonizations is easy now, because they can be; installed easily with pip on top of an existing ROOT install, in which; case this install will override the RooFit pythonizations shipped with; ROOT. This makes developing the pythonizations *much* easier!. A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system; 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory; 3. Install with `pip install -e .` for an editable install (virtual environment recommended); 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything!; 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:1028,Deployability,Install,Install,1028,"**This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step; towards making the RooFit developer experience for the pythonizations; more pleasant. The goal is that people can contribute to the RooFit pythonizations; without having to interact with any CMake or C++ compilation, which was; requested by our power users. Testing changes to the pythonizations is easy now, because they can be; installed easily with pip on top of an existing ROOT install, in which; case this install will override the RooFit pythonizations shipped with; ROOT. This makes developing the pythonizations *much* easier!. A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system; 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory; 3. Install with `pip install -e .` for an editable install (virtual environment recommended); 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything!; 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:1046,Deployability,install,install,1046,"**This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step; towards making the RooFit developer experience for the pythonizations; more pleasant. The goal is that people can contribute to the RooFit pythonizations; without having to interact with any CMake or C++ compilation, which was; requested by our power users. Testing changes to the pythonizations is easy now, because they can be; installed easily with pip on top of an existing ROOT install, in which; case this install will override the RooFit pythonizations shipped with; ROOT. This makes developing the pythonizations *much* easier!. A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system; 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory; 3. Install with `pip install -e .` for an editable install (virtual environment recommended); 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything!; 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:1076,Deployability,install,install,1076,"**This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step; towards making the RooFit developer experience for the pythonizations; more pleasant. The goal is that people can contribute to the RooFit pythonizations; without having to interact with any CMake or C++ compilation, which was; requested by our power users. Testing changes to the pythonizations is easy now, because they can be; installed easily with pip on top of an existing ROOT install, in which; case this install will override the RooFit pythonizations shipped with; ROOT. This makes developing the pythonizations *much* easier!. A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system; 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory; 3. Install with `pip install -e .` for an editable install (virtual environment recommended); 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything!; 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:1216,Deployability,install,installing,1216,"**This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step; towards making the RooFit developer experience for the pythonizations; more pleasant. The goal is that people can contribute to the RooFit pythonizations; without having to interact with any CMake or C++ compilation, which was; requested by our power users. Testing changes to the pythonizations is easy now, because they can be; installed easily with pip on top of an existing ROOT install, in which; case this install will override the RooFit pythonizations shipped with; ROOT. This makes developing the pythonizations *much* easier!. A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system; 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory; 3. Install with `pip install -e .` for an editable install (virtual environment recommended); 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything!; 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:418,Energy Efficiency,power,power,418,"**This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step; towards making the RooFit developer experience for the pythonizations; more pleasant. The goal is that people can contribute to the RooFit pythonizations; without having to interact with any CMake or C++ compilation, which was; requested by our power users. Testing changes to the pythonizations is easy now, because they can be; installed easily with pip on top of an existing ROOT install, in which; case this install will override the RooFit pythonizations shipped with; ROOT. This makes developing the pythonizations *much* easier!. A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system; 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory; 3. Install with `pip install -e .` for an editable install (virtual environment recommended); 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything!; 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:431,Testability,Test,Testing,431,"**This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step; towards making the RooFit developer experience for the pythonizations; more pleasant. The goal is that people can contribute to the RooFit pythonizations; without having to interact with any CMake or C++ compilation, which was; requested by our power users. Testing changes to the pythonizations is easy now, because they can be; installed easily with pip on top of an existing ROOT install, in which; case this install will override the RooFit pythonizations shipped with; ROOT. This makes developing the pythonizations *much* easier!. A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system; 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory; 3. Install with `pip install -e .` for an editable install (virtual environment recommended); 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything!; 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16610:314,Energy Efficiency,reduce,reduce,314,"If browser executable were detected by cmake,; add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes.; In web mode this allows to really use batch mode when up to 80 images produced with single browser call.; This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:27,Safety,detect,detected,27,"If browser executable were detected by cmake,; add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes.; In web mode this allows to really use batch mode when up to 80 images produced with single browser call.; This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:52,Testability,test,test-stressgraphics-chrome,52,"If browser executable were detected by cmake,; add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes.; In web mode this allows to really use batch mode when up to 80 images produced with single browser call.; This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:85,Testability,test,test-stressgraphics-firefox,85,"If browser executable were detected by cmake,; add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes.; In web mode this allows to really use batch mode when up to 80 images produced with single browser call.; This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:114,Testability,test,test,114,"If browser executable were detected by cmake,; add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes.; In web mode this allows to really use batch mode when up to 80 images produced with single browser call.; This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:168,Testability,test,tests,168,"If browser executable were detected by cmake,; add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes.; In web mode this allows to really use batch mode when up to 80 images produced with single browser call.; This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:321,Testability,test,test,321,"If browser executable were detected by cmake,; add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes.; In web mode this allows to really use batch mode when up to 80 images produced with single browser call.; This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/issues/16612:599,Availability,error,error,599,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See; https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```; In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory; 28 | #include ""gtest/gtest.h""; | ^~~~~~~~~~~~~~~; compilation terminated.; ```; Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:224,Deployability,Release,Release,224,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See; https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```; In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory; 28 | #include ""gtest/gtest.h""; | ^~~~~~~~~~~~~~~; compilation terminated.; ```; Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:842,Deployability,Install,Installation,842,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See; https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```; In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory; 28 | #include ""gtest/gtest.h""; | ^~~~~~~~~~~~~~~; compilation terminated.; ```; Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:192,Modifiability,config,config,192,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See; https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```; In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory; 28 | #include ""gtest/gtest.h""; | ^~~~~~~~~~~~~~~; compilation terminated.; ```; Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:762,Modifiability,config,configure,762,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See; https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```; In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory; 28 | #include ""gtest/gtest.h""; | ^~~~~~~~~~~~~~~; compilation terminated.; ```; Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:422,Testability,test,testsupport,422,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See; https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```; In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory; 28 | #include ""gtest/gtest.h""; | ^~~~~~~~~~~~~~~; compilation terminated.; ```; Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:438,Testability,Test,TestSupport,438,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See; https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```; In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory; 28 | #include ""gtest/gtest.h""; | ^~~~~~~~~~~~~~~; compilation terminated.; ```; Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:549,Testability,test,testsupport,549,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See; https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```; In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory; 28 | #include ""gtest/gtest.h""; | ^~~~~~~~~~~~~~~; compilation terminated.; ```; Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:570,Testability,Test,TestSupport,570,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See; https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```; In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory; 28 | #include ""gtest/gtest.h""; | ^~~~~~~~~~~~~~~; compilation terminated.; ```; Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16613:174,Availability,error,error,174,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to use the `RNTupleImporter::SetFieldModifier` feature, I stumbled upon the following error:. ```; input_line_71:2:19: error: unknown type name 'RFieldBase'; void fptr_wrap1(RFieldBase& arg0) {; ^; Traceback (most recent call last):; File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>; raise SystemExit(main()); ^^^^^^; File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main; importer.SetFieldModifier(low_precision_modifier); TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>; TypeError: could not convert argument 1; ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python; import ROOT; import numpy; import os. class DatasetContext:. input_file = ""input_ttree.root""; dataset_name = ""Events""; output_file = ""output_rntuple.root"". def __init__(self):; with ROOT.TFile(self.input_file, ""RECREATE"") as f:; main_tree = ROOT.TTree(self.dataset_name, self.dataset_name); x = numpy.array([0], dtype=numpy.double); y = numpy.array([0], dtype=numpy.double); main_tree.Branch(""x"", x, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:207,Availability,error,error,207,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to use the `RNTupleImporter::SetFieldModifier` feature, I stumbled upon the following error:. ```; input_line_71:2:19: error: unknown type name 'RFieldBase'; void fptr_wrap1(RFieldBase& arg0) {; ^; Traceback (most recent call last):; File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>; raise SystemExit(main()); ^^^^^^; File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main; importer.SetFieldModifier(low_precision_modifier); TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>; TypeError: could not convert argument 1; ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python; import ROOT; import numpy; import os. class DatasetContext:. input_file = ""input_ttree.root""; dataset_name = ""Events""; output_file = ""output_rntuple.root"". def __init__(self):; with ROOT.TFile(self.input_file, ""RECREATE"") as f:; main_tree = ROOT.TTree(self.dataset_name, self.dataset_name); x = numpy.array([0], dtype=numpy.double); y = numpy.array([0], dtype=numpy.double); main_tree.Branch(""x"", x, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:1427,Availability,down,down,1427,"sers/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>; raise SystemExit(main()); ^^^^^^; File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main; importer.SetFieldModifier(low_precision_modifier); TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>; TypeError: could not convert argument 1; ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python; import ROOT; import numpy; import os. class DatasetContext:. input_file = ""input_ttree.root""; dataset_name = ""Events""; output_file = ""output_rntuple.root"". def __init__(self):; with ROOT.TFile(self.input_file, ""RECREATE"") as f:; main_tree = ROOT.TTree(self.dataset_name, self.dataset_name); x = numpy.array([0], dtype=numpy.double); y = numpy.array([0], dtype=numpy.double); main_tree.Branch(""x"", x, ""x/D""); main_tree.Branch(""y"", y, ""y/D""). x[0] = 11.; y[0] = 22.; main_tree.Fill(); x[0] = 33.; y[0] = 44.; main_tree.Fill(); x[0] = 55.; y[0] = 66.; main_tree.Fill(). main_tree.Write(). def __enter__(self):; return self. def __exit__(self, *_):; os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:1546,Availability,error,error,1546,"cts/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main; importer.SetFieldModifier(low_precision_modifier); TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>; TypeError: could not convert argument 1; ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python; import ROOT; import numpy; import os. class DatasetContext:. input_file = ""input_ttree.root""; dataset_name = ""Events""; output_file = ""output_rntuple.root"". def __init__(self):; with ROOT.TFile(self.input_file, ""RECREATE"") as f:; main_tree = ROOT.TTree(self.dataset_name, self.dataset_name); x = numpy.array([0], dtype=numpy.double); y = numpy.array([0], dtype=numpy.double); main_tree.Branch(""x"", x, ""x/D""); main_tree.Branch(""y"", y, ""y/D""). x[0] = 11.; y[0] = 22.; main_tree.Fill(); x[0] = 33.; y[0] = 44.; main_tree.Fill(); x[0] = 55.; y[0] = 66.; main_tree.Fill(). main_tree.Write(). def __enter__(self):; return self. def __exit__(self, *_):; os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFieldBase) -> None:; if field.GetFieldName() == ""x"":; field.SetColumnRepresentatives(; [[ROOT.Experimental.EColumnType.kReal16]]). def main() -> None:; with DatasetContext() as dataset:;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:2789,Deployability,Install,Installation,2789,"/github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python; import ROOT; import numpy; import os. class DatasetContext:. input_file = ""input_ttree.root""; dataset_name = ""Events""; output_file = ""output_rntuple.root"". def __init__(self):; with ROOT.TFile(self.input_file, ""RECREATE"") as f:; main_tree = ROOT.TTree(self.dataset_name, self.dataset_name); x = numpy.array([0], dtype=numpy.double); y = numpy.array([0], dtype=numpy.double); main_tree.Branch(""x"", x, ""x/D""); main_tree.Branch(""y"", y, ""y/D""). x[0] = 11.; y[0] = 22.; main_tree.Fill(); x[0] = 33.; y[0] = 44.; main_tree.Fill(); x[0] = 55.; y[0] = 66.; main_tree.Fill(). main_tree.Write(). def __enter__(self):; return self. def __exit__(self, *_):; os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFieldBase) -> None:; if field.GetFieldName() == ""x"":; field.SetColumnRepresentatives(; [[ROOT.Experimental.EColumnType.kReal16]]). def main() -> None:; with DatasetContext() as dataset:; importer = ROOT.Experimental.RNTupleImporter.Create(; dataset.input_file, dataset.dataset_name, dataset.output_file). importer.SetFieldModifier(low_precision_modifier); importer.Import(). if __name__ == ""__main__"":; raise SystemExit(main()). ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:1478,Usability,simpl,simplified,1478,"cts/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main; importer.SetFieldModifier(low_precision_modifier); TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>; TypeError: could not convert argument 1; ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python; import ROOT; import numpy; import os. class DatasetContext:. input_file = ""input_ttree.root""; dataset_name = ""Events""; output_file = ""output_rntuple.root"". def __init__(self):; with ROOT.TFile(self.input_file, ""RECREATE"") as f:; main_tree = ROOT.TTree(self.dataset_name, self.dataset_name); x = numpy.array([0], dtype=numpy.double); y = numpy.array([0], dtype=numpy.double); main_tree.Branch(""x"", x, ""x/D""); main_tree.Branch(""y"", y, ""y/D""). x[0] = 11.; y[0] = 22.; main_tree.Fill(); x[0] = 33.; y[0] = 44.; main_tree.Fill(); x[0] = 55.; y[0] = 66.; main_tree.Fill(). main_tree.Write(). def __enter__(self):; return self. def __exit__(self, *_):; os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFieldBase) -> None:; if field.GetFieldName() == ""x"":; field.SetColumnRepresentatives(; [[ROOT.Experimental.EColumnType.kReal16]]). def main() -> None:; with DatasetContext() as dataset:;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/pull/16614:7,Deployability,Update,Update,7,- [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon.; - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16614
https://github.com/root-project/root/pull/16615:7,Deployability,Update,Update,7,- [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon.; - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16615
https://github.com/root-project/root/pull/16616:142,Modifiability,variab,variables,142,To make the RReader usable in multi-thread we ned to move the loch to all the COmpute funcitions in order to protect the setting of the input variables. This fixes #16600 as suggested in https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16616
https://github.com/root-project/root/pull/16616:30,Performance,multi-thread,multi-thread,30,To make the RReader usable in multi-thread we ned to move the loch to all the COmpute funcitions in order to protect the setting of the input variables. This fixes #16600 as suggested in https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16616
https://github.com/root-project/root/pull/16616:245,Safety,safe,safe,245,To make the RReader usable in multi-thread we ned to move the loch to all the COmpute funcitions in order to protect the setting of the input variables. This fixes #16600 as suggested in https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16616
https://github.com/root-project/root/pull/16616:20,Usability,usab,usable,20,To make the RReader usable in multi-thread we ned to move the loch to all the COmpute funcitions in order to protect the setting of the input variables. This fixes #16600 as suggested in https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16616
https://github.com/root-project/root/pull/16617:133,Deployability,update,updated,133,# This Pull request corrects two minor typos in the documentation inside TH2.cxx. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16617
https://github.com/root-project/root/pull/16617:103,Testability,test,tested,103,# This Pull request corrects two minor typos in the documentation inside TH2.cxx. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16617
https://github.com/root-project/root/pull/16620:177,Deployability,update,updated,177,"# This Pull request:; Adds to the `root/tutorials/*.C` macros their respective python scripts.; Enjoy this ""pyroothonic"" syntax style. . - [yes] tested changes locally; - [yes] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16620
https://github.com/root-project/root/pull/16620:145,Testability,test,tested,145,"# This Pull request:; Adds to the `root/tutorials/*.C` macros their respective python scripts.; Enjoy this ""pyroothonic"" syntax style. . - [yes] tested changes locally; - [yes] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16620
https://github.com/root-project/root/pull/16621:74,Modifiability,extend,extended,74,Fixes the situation where the regular header uses projections and is then extended.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16621
https://github.com/root-project/root/pull/16623:0,Modifiability,Extend,Extend,0,Extend `THStack::BuildPrimitives()` method and let rebuild list of stacked histograms. Fixes problem when `THStack::GetXaxis()` called in web mode - internal redrawing of the current pad lead to creation but then deletion of `fHistogram`. . Behavior of normal graphics not changed,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16623
https://github.com/root-project/root/pull/16625:221,Integrability,depend,dependency,221,"Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:30,Testability,test,test,30,"Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:156,Testability,test,tests,156,"Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:171,Testability,test,testing,171,"Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16627:55,Integrability,message,message,55,Also adjust `rfield_check` that was checking the wrong message.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16627
https://github.com/root-project/root/pull/16631:378,Deployability,update,updated,378,"# This Pull request:; adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:; Depends on #16627; #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16631
https://github.com/root-project/root/pull/16631:276,Integrability,Depend,Depends,276,"# This Pull request:; adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:; Depends on #16627; #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16631
https://github.com/root-project/root/pull/16631:348,Testability,test,tested,348,"# This Pull request:; adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:; Depends on #16627; #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16631
https://github.com/root-project/root/pull/16635:314,Energy Efficiency,reduce,reduce,314,"If browser executable were detected by cmake,; add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes.; In web mode this allows to really use batch mode when up to 80 images produced with single browser call.; This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:27,Safety,detect,detected,27,"If browser executable were detected by cmake,; add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes.; In web mode this allows to really use batch mode when up to 80 images produced with single browser call.; This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:52,Testability,test,test-stressgraphics-chrome,52,"If browser executable were detected by cmake,; add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes.; In web mode this allows to really use batch mode when up to 80 images produced with single browser call.; This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:85,Testability,test,test-stressgraphics-firefox,85,"If browser executable were detected by cmake,; add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes.; In web mode this allows to really use batch mode when up to 80 images produced with single browser call.; This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:114,Testability,test,test,114,"If browser executable were detected by cmake,; add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes.; In web mode this allows to really use batch mode when up to 80 images produced with single browser call.; This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:168,Testability,test,tests,168,"If browser executable were detected by cmake,; add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes.; In web mode this allows to really use batch mode when up to 80 images produced with single browser call.; This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:321,Testability,test,test,321,"If browser executable were detected by cmake,; add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes.; In web mode this allows to really use batch mode when up to 80 images produced with single browser call.; This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/issues/16638:790,Availability,error,error,790,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------; 1>RootGrapher.cpp; 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):; 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'; 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TTree.h(229,64):; 1> failure was caused by a read of an uninitialized symbol; 1> E:\dev\root_build\include\TTree.h(229,64):; 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>; #include <gsl\gsl>; #include ""TF1.h""; #include ""TH1F.h""; #include ""TApplication.h""; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:947,Availability,error,error,947,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------; 1>RootGrapher.cpp; 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):; 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'; 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TTree.h(229,64):; 1> failure was caused by a read of an uninitialized symbol; 1> E:\dev\root_build\include\TTree.h(229,64):; 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>; #include <gsl\gsl>; #include ""TF1.h""; #include ""TH1F.h""; #include ""TApplication.h""; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1094,Availability,error,error,1094,"nt precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------; 1>RootGrapher.cpp; 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):; 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'; 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TTree.h(229,64):; 1> failure was caused by a read of an uninitialized symbol; 1> E:\dev\root_build\include\TTree.h(229,64):; 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>; #include <gsl\gsl>; #include ""TF1.h""; #include ""TH1F.h""; #include ""TApplication.h""; #include <TAxis.h>; #include ""TCanvas.h""; #include ""TDatime.h""; #include ""TFrame.h""; #include ""TGraph.h""; #include ""TMultiGraph.h""; #include ""TRootCanvas.h"". #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1415,Availability,error,error,1415,"nversion from 'Long64_t' to 'Double_t', possible loss of data; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):; 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'; 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TTree.h(229,64):; 1> failure was caused by a read of an uninitialized symbol; 1> E:\dev\root_build\include\TTree.h(229,64):; 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>; #include <gsl\gsl>; #include ""TF1.h""; #include ""TH1F.h""; #include ""TApplication.h""; #include <TAxis.h>; #include ""TCanvas.h""; #include ""TDatime.h""; #include ""TFrame.h""; #include ""TGraph.h""; #include ""TMultiGraph.h""; #include ""TRootCanvas.h"". #include ""TODBCServer.h""; // TMVA seems to compile only when before TODBCServer.h; #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1435,Availability,error,error,1435,"nversion from 'Long64_t' to 'Double_t', possible loss of data; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):; 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'; 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TTree.h(229,64):; 1> failure was caused by a read of an uninitialized symbol; 1> E:\dev\root_build\include\TTree.h(229,64):; 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>; #include <gsl\gsl>; #include ""TF1.h""; #include ""TH1F.h""; #include ""TApplication.h""; #include <TAxis.h>; #include ""TCanvas.h""; #include ""TDatime.h""; #include ""TFrame.h""; #include ""TGraph.h""; #include ""TMultiGraph.h""; #include ""TRootCanvas.h"". #include ""TODBCServer.h""; // TMVA seems to compile only when before TODBCServer.h; #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1537,Availability,error,error,1537,"de\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):; 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'; 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TTree.h(229,64):; 1> failure was caused by a read of an uninitialized symbol; 1> E:\dev\root_build\include\TTree.h(229,64):; 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>; #include <gsl\gsl>; #include ""TF1.h""; #include ""TH1F.h""; #include ""TApplication.h""; #include <TAxis.h>; #include ""TCanvas.h""; #include ""TDatime.h""; #include ""TFrame.h""; #include ""TGraph.h""; #include ""TMultiGraph.h""; #include ""TRootCanvas.h"". #include ""TODBCServer.h""; // TMVA seems to compile only when before TODBCServer.h; #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for win64 on Oct 07 2024, 17:23:18 |; | From tags/6-32-06@6-32-06 |; | With MSVC 19.41.34120.0 |; |",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1688,Availability,failure,failure,1688,"cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):; 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'; 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TTree.h(229,64):; 1> failure was caused by a read of an uninitialized symbol; 1> E:\dev\root_build\include\TTree.h(229,64):; 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>; #include <gsl\gsl>; #include ""TF1.h""; #include ""TH1F.h""; #include ""TApplication.h""; #include <TAxis.h>; #include ""TCanvas.h""; #include ""TDatime.h""; #include ""TFrame.h""; #include ""TGraph.h""; #include ""TMultiGraph.h""; #include ""TRootCanvas.h"". #include ""TODBCServer.h""; // TMVA seems to compile only when before TODBCServer.h; #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for win64 on Oct 07 2024, 17:23:18 |; | From tags/6-32-06@6-32-06 |; | With MSVC 19.41.34120.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. Welcome to t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1888,Availability,error,error,1888,"ile 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):; 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'; 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TTree.h(229,64):; 1> failure was caused by a read of an uninitialized symbol; 1> E:\dev\root_build\include\TTree.h(229,64):; 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>; #include <gsl\gsl>; #include ""TF1.h""; #include ""TH1F.h""; #include ""TApplication.h""; #include <TAxis.h>; #include ""TCanvas.h""; #include ""TDatime.h""; #include ""TFrame.h""; #include ""TGraph.h""; #include ""TMultiGraph.h""; #include ""TRootCanvas.h"". #include ""TODBCServer.h""; // TMVA seems to compile only when before TODBCServer.h; #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for win64 on Oct 07 2024, 17:23:18 |; | From tags/6-32-06@6-32-06 |; | With MSVC 19.41.34120.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. Welcome to the ROOT tutorials. Type "".x demos.C"" to get a toolbar from which to execute the demos. Type "".x demoshelp.C"" to see the help window. ==> Man",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:318,Deployability,Configurat,Configuration,318,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------; 1>RootGrapher.cpp; 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):; 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'; 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TTree.h(229,64):; 1> failure was caused by a read of an uninitialized symbol; 1> E:\dev\root_build\include\TTree.h(229,64):; 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>; #include <gsl\gsl>; #include ""TF1.h""; #include ""TH1F.h""; #include ""TApplication.h""; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:3049,Deployability,Install,Installation,3049,"bject of const-qualified type must be initialized; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):; 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'; 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TTree.h(229,64):; 1> failure was caused by a read of an uninitialized symbol; 1> E:\dev\root_build\include\TTree.h(229,64):; 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>; #include <gsl\gsl>; #include ""TF1.h""; #include ""TH1F.h""; #include ""TApplication.h""; #include <TAxis.h>; #include ""TCanvas.h""; #include ""TDatime.h""; #include ""TFrame.h""; #include ""TGraph.h""; #include ""TMultiGraph.h""; #include ""TRootCanvas.h"". #include ""TODBCServer.h""; // TMVA seems to compile only when before TODBCServer.h; #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for win64 on Oct 07 2024, 17:23:18 |; | From tags/6-32-06@6-32-06 |; | With MSVC 19.41.34120.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. Welcome to the ROOT tutorials. Type "".x demos.C"" to get a toolbar from which to execute the demos. Type "".x demoshelp.C"" to see the help window. ==> Many tutorials use the file hsimple.root produced by hsimple.C; ==> It is recommended to execute hsimple.C before any other script. Taking a break from ROOT? Hope to see you back!. ### Installation method. N/A. ### Operating system. Windows 11. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:318,Modifiability,Config,Configuration,318,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------; 1>RootGrapher.cpp; 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):; 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'; 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TTree.h(229,64):; 1> failure was caused by a read of an uninitialized symbol; 1> E:\dev\root_build\include\TTree.h(229,64):; 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>; #include <gsl\gsl>; #include ""TF1.h""; #include ""TH1F.h""; #include ""TApplication.h""; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/pull/16641:46,Testability,test,tested,46,Seems to be headless usage of Firefox not yet tested there,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16641
https://github.com/root-project/root/pull/16643:122,Availability,robust,robust,122,Browser will read all data and all scripts from HTML file directly - ; no need to manage access to file system. Make more robust batch mode of web canvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16643
https://github.com/root-project/root/pull/16643:89,Security,access,access,89,Browser will read all data and all scripts from HTML file directly - ; no need to manage access to file system. Make more robust batch mode of web canvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16643
https://github.com/root-project/root/issues/16646:118,Testability,log,login,118,### Feature description. It would become familiar and user-friendly for the users and developers if they would have a login and signup option which they can use for more future works in the website. I would like to make this new feature. Please assign this work to me. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16646
https://github.com/root-project/root/issues/16646:54,Usability,user-friendly,user-friendly,54,### Feature description. It would become familiar and user-friendly for the users and developers if they would have a login and signup option which they can use for more future works in the website. I would like to make this new feature. Please assign this work to me. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16646
https://github.com/root-project/root/issues/16647:918,Deployability,Install,Installation,918,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:; ```; Start 424: pyunittests-dataframe-datasetspec; Start 401: gtest-tree-dataframe-test-dataframe-datasetspec; 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec; 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec; ```; Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:; * Names of `pyunittests` must be across all test directories.; * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:; ```; gtest-tree-dataframe-dataframe-datasetspec; pyunittests-tree-dataframe-dataframe-datasetspec; ```. ### Reproducer. ```; ctest -R dataframe-datasetspec; ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:218,Testability,test,test-dataframe-datasetspec,218,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:; ```; Start 424: pyunittests-dataframe-datasetspec; Start 401: gtest-tree-dataframe-test-dataframe-datasetspec; 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec; 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec; ```; Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:; * Names of `pyunittests` must be across all test directories.; * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:; ```; gtest-tree-dataframe-dataframe-datasetspec; pyunittests-tree-dataframe-dataframe-datasetspec; ```. ### Reproducer. ```; ctest -R dataframe-datasetspec; ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:250,Testability,Test,Test,250,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:; ```; Start 424: pyunittests-dataframe-datasetspec; Start 401: gtest-tree-dataframe-test-dataframe-datasetspec; 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec; 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec; ```; Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:; * Names of `pyunittests` must be across all test directories.; * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:; ```; gtest-tree-dataframe-dataframe-datasetspec; pyunittests-tree-dataframe-dataframe-datasetspec; ```. ### Reproducer. ```; ctest -R dataframe-datasetspec; ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:282,Testability,test,test-dataframe-datasetspec,282,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:; ```; Start 424: pyunittests-dataframe-datasetspec; Start 401: gtest-tree-dataframe-test-dataframe-datasetspec; 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec; 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec; ```; Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:; * Names of `pyunittests` must be across all test directories.; * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:; ```; gtest-tree-dataframe-dataframe-datasetspec; pyunittests-tree-dataframe-dataframe-datasetspec; ```. ### Reproducer. ```; ctest -R dataframe-datasetspec; ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:334,Testability,Test,Test,334,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:; ```; Start 424: pyunittests-dataframe-datasetspec; Start 401: gtest-tree-dataframe-test-dataframe-datasetspec; 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec; 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec; ```; Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:; * Names of `pyunittests` must be across all test directories.; * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:; ```; gtest-tree-dataframe-dataframe-datasetspec; pyunittests-tree-dataframe-dataframe-datasetspec; ```. ### Reproducer. ```; ctest -R dataframe-datasetspec; ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:594,Testability,test,test,594,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:; ```; Start 424: pyunittests-dataframe-datasetspec; Start 401: gtest-tree-dataframe-test-dataframe-datasetspec; 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec; 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec; ```; Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:; * Names of `pyunittests` must be across all test directories.; * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:; ```; gtest-tree-dataframe-dataframe-datasetspec; pyunittests-tree-dataframe-dataframe-datasetspec; ```. ### Reproducer. ```; ctest -R dataframe-datasetspec; ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:627,Testability,test,test,627,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:; ```; Start 424: pyunittests-dataframe-datasetspec; Start 401: gtest-tree-dataframe-test-dataframe-datasetspec; 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec; 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec; ```; Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:; * Names of `pyunittests` must be across all test directories.; * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:; ```; gtest-tree-dataframe-dataframe-datasetspec; pyunittests-tree-dataframe-dataframe-datasetspec; ```. ### Reproducer. ```; ctest -R dataframe-datasetspec; ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:712,Testability,test,test,712,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:; ```; Start 424: pyunittests-dataframe-datasetspec; Start 401: gtest-tree-dataframe-test-dataframe-datasetspec; 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec; 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec; ```; Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:; * Names of `pyunittests` must be across all test directories.; * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:; ```; gtest-tree-dataframe-dataframe-datasetspec; pyunittests-tree-dataframe-dataframe-datasetspec; ```. ### Reproducer. ```; ctest -R dataframe-datasetspec; ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/pull/16651:46,Availability,error,errors,46,"xRooFit wants all floating parameters to have errors defined on them, so this PR gives them some default values (0 for normFactors, and the correct uncert for gamma factors)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16651
https://github.com/root-project/root/issues/16654:259,Availability,Error,Error,259,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:; ```; cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/; cmake --build . --target install -j6; ```. Results in; ```; CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):; Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:; [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:; gmake[4]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[4]: *** Waiting for unfinished jobs....; gmake[5]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[5]: *** Waiting for unfinished jobs....; In file included from /usr/include/c++/14/atomic:50,; from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,; from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:; In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,; inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,; inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2560,Availability,Error,Error,2560,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,; from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:; In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,; inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,; inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:; /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]; 477 | __atomic_store_n(&_M_i, __i, int(__m));; | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~; In function ‘void tbb::detail::r1::clear_address_waiter_table()’:; cc1plus: note: destination object is likely at address zero; gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2; gmake[3]: *** [Makefile:156: all] Error 2; ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2603,Availability,Error,Error,2603,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,; from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:; In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,; inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,; inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:; /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]; 477 | __atomic_store_n(&_M_i, __i, int(__m));; | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~; In function ‘void tbb::detail::r1::clear_address_waiter_table()’:; cc1plus: note: destination object is likely at address zero; gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2; gmake[3]: *** [Makefile:156: all] Error 2; ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:218,Deployability,install,install,218,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:; ```; cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/; cmake --build . --target install -j6; ```. Results in; ```; CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):; Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:; [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:; gmake[4]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[4]: *** Waiting for unfinished jobs....; gmake[5]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[5]: *** Waiting for unfinished jobs....; In file included from /usr/include/c++/14/atomic:50,; from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,; from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:; In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,; inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,; inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:326,Deployability,Release,Release,326,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:; ```; cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/; cmake --build . --target install -j6; ```. Results in; ```; CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):; Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:; [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:; gmake[4]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[4]: *** Waiting for unfinished jobs....; gmake[5]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[5]: *** Waiting for unfinished jobs....; In file included from /usr/include/c++/14/atomic:50,; from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,; from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:; In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,; inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,; inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2763,Deployability,Install,Installation,2763,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,; from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:; In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,; inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,; inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:; /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]; 477 | __atomic_store_n(&_M_i, __i, int(__m));; | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~; In function ‘void tbb::detail::r1::clear_address_waiter_table()’:; cc1plus: note: destination object is likely at address zero; gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2; gmake[3]: *** [Makefile:156: all] Error 2; ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:344,Integrability,message,message,344,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:; ```; cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/; cmake --build . --target install -j6; ```. Results in; ```; CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):; Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:; [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:; gmake[4]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[4]: *** Waiting for unfinished jobs....; gmake[5]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[5]: *** Waiting for unfinished jobs....; In file included from /usr/include/c++/14/atomic:50,; from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,; from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:; In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,; inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,; inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2711,Security,hash,hash,2711,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,; from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:; In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,; inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,; inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:; /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]; 477 | __atomic_store_n(&_M_i, __i, int(__m));; | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~; In function ‘void tbb::detail::r1::clear_address_waiter_table()’:; cc1plus: note: destination object is likely at address zero; gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2; gmake[3]: *** [Makefile:156: all] Error 2; ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:476,Testability,log,log,476,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:; ```; cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/; cmake --build . --target install -j6; ```. Results in; ```; CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):; Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:; [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:; gmake[4]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[4]: *** Waiting for unfinished jobs....; gmake[5]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[5]: *** Waiting for unfinished jobs....; In file included from /usr/include/c++/14/atomic:50,; from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,; from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:; In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,; inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,; inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/pull/16657:418,Deployability,update,updated,418,"# This Pull request:; Translates the tutorials of the `root/tutorials/v7` into Python language.; Some of them have C++ wrappers(simple extension module) to achieve their functionality and match ; the behavior of its corresponding C++ version.; As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:; - [yes] tested changes locally; - [yes] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:119,Integrability,wrap,wrappers,119,"# This Pull request:; Translates the tutorials of the `root/tutorials/v7` into Python language.; Some of them have C++ wrappers(simple extension module) to achieve their functionality and match ; the behavior of its corresponding C++ version.; As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:; - [yes] tested changes locally; - [yes] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:296,Integrability,wrap,wrappers,296,"# This Pull request:; Translates the tutorials of the `root/tutorials/v7` into Python language.; Some of them have C++ wrappers(simple extension module) to achieve their functionality and match ; the behavior of its corresponding C++ version.; As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:; - [yes] tested changes locally; - [yes] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:334,Performance,load,loaded,334,"# This Pull request:; Translates the tutorials of the `root/tutorials/v7` into Python language.; Some of them have C++ wrappers(simple extension module) to achieve their functionality and match ; the behavior of its corresponding C++ version.; As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:; - [yes] tested changes locally; - [yes] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:386,Testability,test,tested,386,"# This Pull request:; Translates the tutorials of the `root/tutorials/v7` into Python language.; Some of them have C++ wrappers(simple extension module) to achieve their functionality and match ; the behavior of its corresponding C++ version.; As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:; - [yes] tested changes locally; - [yes] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:128,Usability,simpl,simple,128,"# This Pull request:; Translates the tutorials of the `root/tutorials/v7` into Python language.; Some of them have C++ wrappers(simple extension module) to achieve their functionality and match ; the behavior of its corresponding C++ version.; As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:; - [yes] tested changes locally; - [yes] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16660:33,Deployability,install,install,33,This means that we won't have to install any headers from xrootd when using `builtin_xrootd=ON`. This makes systems that have both XRootD standalone and ROOT with builtin XRootD installed more stable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16660
https://github.com/root-project/root/pull/16660:178,Deployability,install,installed,178,This means that we won't have to install any headers from xrootd when using `builtin_xrootd=ON`. This makes systems that have both XRootD standalone and ROOT with builtin XRootD installed more stable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16660
https://github.com/root-project/root/pull/16661:610,Modifiability,config,configured,610,"These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:726,Safety,Avoid,Avoid,726,"These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:13,Testability,test,tests,13,"These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:74,Testability,test,test,74,"These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:345,Testability,test,tests,345,"These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:397,Testability,test,tests,397,"These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:569,Testability,test,tests,569,"These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:805,Testability,test,tests,805,"These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:910,Testability,test,tests,910,"These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16663:186,Deployability,deploy,deployedge,186,"1. Detect and support Edge as recognized browser `--web=edge`; 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled; 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work; 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows; 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox; 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:3,Safety,Detect,Detect,3,"1. Detect and support Edge as recognized browser `--web=edge`; 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled; 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work; 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows; 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox; 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:475,Testability,test,test,475,"1. Detect and support Edge as recognized browser `--web=edge`; 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled; 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work; 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows; 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox; 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:546,Testability,test,tests,546,"1. Detect and support Edge as recognized browser `--web=edge`; 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled; 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work; 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows; 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox; 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:572,Testability,test,tests,572,"1. Detect and support Edge as recognized browser `--web=edge`; 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled; 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work; 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows; 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox; 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:160,Usability,learn,learn,160,"1. Detect and support Edge as recognized browser `--web=edge`; 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled; 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work; 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows; 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox; 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/issues/16668:132,Availability,error,error,132,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:; ```; && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :; /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'; ```; and indeed:; ```; ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCX",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3682,Deployability,update,updated,3682,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ```; and; ```; rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a; -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o; -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a; -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so; ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3902,Deployability,Install,Installation,3902,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ```; and; ```; rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a; -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o; -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a; -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so; ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:1625,Modifiability,plugin,plugins,1625,"xceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :; /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'; ```; and indeed:; ```; ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:1800,Modifiability,plugin,plugins,1800,"eTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :; /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'; ```; and indeed:; ```; ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ```; and; ```; rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:2155,Modifiability,plugin,plugins,2155,"prefix/src/googletest-build/lib//libgtest.a && :; /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'; ```; and indeed:; ```; ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ```; and; ```; rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:2355,Modifiability,plugin,plugins,2355,"64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'; ```; and indeed:; ```; ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ```; and; ```; rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a; -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMak",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:2825,Modifiability,plugin,plugins,2825,"entiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ```; and; ```; rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a; -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o; -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a; -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so; ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3017,Modifiability,plugin,plugins,3017,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ```; and; ```; rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a; -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o; -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a; -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so; ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3214,Modifiability,plugin,plugins,3214,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ```; and; ```; rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a; -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o; -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a; -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so; ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:412,Testability,test,testsupport,412,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:; ```; && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :; /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'; ```; and indeed:; ```; ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCX",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:435,Testability,Test,TestSupport,435,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:; ```; && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :; /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'; ```; and indeed:; ```; ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCX",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:455,Testability,Test,TestSupport,455,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:; ```; && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :; /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'; ```; and indeed:; ```; ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCX",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:483,Testability,test,test,483,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:; ```; && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :; /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'; ```; and indeed:; ```; ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCX",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:545,Testability,test,test,545,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:; ```; && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :; /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'; ```; and indeed:; ```; ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCX",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:609,Testability,test,test,609,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:; ```; && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :; /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'; ```; and indeed:; ```; ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCX",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:682,Testability,test,test,682,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:; ```; && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :; /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'; ```; and indeed:; ```; ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCX",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:744,Testability,test,test,744,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:; ```; && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :; /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'; ```; and indeed:; ```; ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCX",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:808,Testability,test,test,808,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:; ```; && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :; /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'; ```; and indeed:; ```; ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCX",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/pull/16669:64,Deployability,install,install,64,Minimal set of changes required to enable pip build backends to install ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16669
https://github.com/root-project/root/pull/16671:242,Availability,redundant,redundant,242,"The old PyROOT (pre 2019) had a slightly different `atexit` handler than the new one. The hard shutdown mode is different: `ClearProxiedObjects()` is called before the final `gROOT->EndOfProcessCleanups()`. I had the impresstion that this is redundant, and indeed the old PyROOT didn't do it. This commit suggests to only call `ClearProxiedObjects()` in soft shutdown mode, in an attempt to avoid the frequent crashes seen at the end of PyROOT tutorials, especially on Ubuntu 24.10. See also the original PRs where this functionality was introduced:. * https://github.com/root-project/root/pull/4687; * https://github.com/root-project/root/pull/4753",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16671
https://github.com/root-project/root/pull/16671:242,Safety,redund,redundant,242,"The old PyROOT (pre 2019) had a slightly different `atexit` handler than the new one. The hard shutdown mode is different: `ClearProxiedObjects()` is called before the final `gROOT->EndOfProcessCleanups()`. I had the impresstion that this is redundant, and indeed the old PyROOT didn't do it. This commit suggests to only call `ClearProxiedObjects()` in soft shutdown mode, in an attempt to avoid the frequent crashes seen at the end of PyROOT tutorials, especially on Ubuntu 24.10. See also the original PRs where this functionality was introduced:. * https://github.com/root-project/root/pull/4687; * https://github.com/root-project/root/pull/4753",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16671
https://github.com/root-project/root/pull/16671:391,Safety,avoid,avoid,391,"The old PyROOT (pre 2019) had a slightly different `atexit` handler than the new one. The hard shutdown mode is different: `ClearProxiedObjects()` is called before the final `gROOT->EndOfProcessCleanups()`. I had the impresstion that this is redundant, and indeed the old PyROOT didn't do it. This commit suggests to only call `ClearProxiedObjects()` in soft shutdown mode, in an attempt to avoid the frequent crashes seen at the end of PyROOT tutorials, especially on Ubuntu 24.10. See also the original PRs where this functionality was introduced:. * https://github.com/root-project/root/pull/4687; * https://github.com/root-project/root/pull/4753",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16671
https://github.com/root-project/root/pull/16671:124,Usability,Clear,ClearProxiedObjects,124,"The old PyROOT (pre 2019) had a slightly different `atexit` handler than the new one. The hard shutdown mode is different: `ClearProxiedObjects()` is called before the final `gROOT->EndOfProcessCleanups()`. I had the impresstion that this is redundant, and indeed the old PyROOT didn't do it. This commit suggests to only call `ClearProxiedObjects()` in soft shutdown mode, in an attempt to avoid the frequent crashes seen at the end of PyROOT tutorials, especially on Ubuntu 24.10. See also the original PRs where this functionality was introduced:. * https://github.com/root-project/root/pull/4687; * https://github.com/root-project/root/pull/4753",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16671
https://github.com/root-project/root/pull/16671:328,Usability,Clear,ClearProxiedObjects,328,"The old PyROOT (pre 2019) had a slightly different `atexit` handler than the new one. The hard shutdown mode is different: `ClearProxiedObjects()` is called before the final `gROOT->EndOfProcessCleanups()`. I had the impresstion that this is redundant, and indeed the old PyROOT didn't do it. This commit suggests to only call `ClearProxiedObjects()` in soft shutdown mode, in an attempt to avoid the frequent crashes seen at the end of PyROOT tutorials, especially on Ubuntu 24.10. See also the original PRs where this functionality was introduced:. * https://github.com/root-project/root/pull/4687; * https://github.com/root-project/root/pull/4753",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16671
https://github.com/root-project/root/issues/16673:3721,Deployability,Install,Installation,3721,"00);; ; RooRealVar mean(""mean"", ""Mean of signal model"", 40.);; RooRealVar width(""width"", ""Width of signal model"", 5.);; RooGaussian sig(""sig"", ""Signal model"", x, mean, width);; ; // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});; RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});; RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));; ; pdfadd.Print();; pdfprod.Print();; ; TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);; c->Divide(2,2);; ; c->cd(1);; RooPlot* frame1 = x.frame();; pdfadd.plotOn(frame1);; pdfadd.paramOn(frame1,Label(""RooAddPdf""));; frame1->Draw();; ; c->cd(2);; RooPlot* frame2 = x.frame();; pdfprod.plotOn(frame2);; pdfprod.paramOn(frame2,Label(""RooProdPdf""));; frame2->Draw();; ; c->cd(3);; RooPlot* frame3 = x.frame();; RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());; status3->Print();; data->plotOn(frame3);; pdfadd.plotOn(frame3);; pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));; frame3->Draw();; ; c->cd(4);; RooPlot* frame4 = x.frame();; RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LEFT,RIGHT""),Save());; status4->Print();; data->plotOn(frame4);; pdfprod.plotOn(frame4);; pdfprod.paramOn(frame4,Label(""RooProdPdf_fitted""));; frame4->Draw();; ; c->Draw();; c->SaveAs(""RooFitMacro.png"");; ; pdfadd.Print();; status3->Print();; pdfprod.Print();; status4->Print();; ; return 0;; }; [RooFitMacroA.cpp.zip](https://github.com/user-attachments/files/17362710/RooFitMacroA.cpp.zip). just unzip and run as ""root RooFitMacroA.cpp"". ### ROOT version. on lxplus; ROOT v6.26.04-x86_64-centos7-gcc11-opt - no observed (same result); ROOT v6.26.08-x86_64-centos7-gcc11-opt - no observed (same result); ROOT v6.28.00-x86_64-centos7-gcc11-opt - observed (different result); ROOT v6.32.02-x86_64-el9-gcc13-opt - observed (different result). ### Installation method. on lxplus, 'setupATLAS', lsetup ""root ..."" . ### Operating system. Linux centos7 and EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/pull/16675:18,Testability,test,test,18,"If `xml=OFF`, the test can still be compiled, which is always good for coverage. But it can't be run: the `hist2workspace` executable is missing. This was discovered in this PR:; * https://github.com/root-project/root/pull/16674",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16675
https://github.com/root-project/root/pull/16677:18,Modifiability,variab,variable,18,"Clang warns that ""variable 'px' may be uninitialized when used here"" because it does not understand the interplay with `RNTupleView`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16677
https://github.com/root-project/root/pull/16678:185,Deployability,update,updated,185,# This Pull request:; adds a `fCreateBare` option to `RCreateModelOptions that allows reconstructing a model without a default entry. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #16324,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16678
https://github.com/root-project/root/pull/16678:155,Testability,test,tested,155,# This Pull request:; adds a `fCreateBare` option to `RCreateModelOptions that allows reconstructing a model without a default entry. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #16324,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16678
https://github.com/root-project/root/pull/16679:350,Testability,benchmark,benchmarking,350,"This PR introduces the first steps towards MT support for the `RNTupleIndex`, by enabling mulithreaded building of the index. To enable this, the index itself now manages multiple _index partitions_, which are essentially sub-indices for a particular entry range. These entry ranges are currently set according to the cluster boundaries, but further benchmarking and evaluation will be required to determine the optimal partitioning scheme.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16679
https://github.com/root-project/root/issues/16680:179,Availability,failure,failures,179,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I see (for example in https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971): failures like:. ```; /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; #include ""encoder.hxx""; ^~~~~~~~~~~~~; ```; or ; ```; Traceback (most recent call last):; File ""/home/pcanal/root_working/code/quick-devel/tutorials/tmva/TMVA_SOFIE_GNN.py"", line 226, in <module>; gnn = SofieGNN(); File ""/home/pcanal/root_working/code/quick-devel/tutorials/tmva/TMVA_SOFIE_GNN.py"", line 150, in __init__; self.encoder_session = ROOT.TMVA_SOFIE_encoder.Session(); TypeError: none of the 4 overloaded methods succeeded. Full details:; Session::Session(TMVA_SOFIE_encoder::Session&&) =>; TypeError: takes at least 1 arguments (0 given); Session::Session(const TMVA_SOFIE_encoder::Session&) =>; TypeError: takes at least 1 arguments (0 given); Session::Session() =>; runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_EncodeProcessDecodeMLPGraphIndependentgraph_independentedge_modelmlplinear_3w0 , read ; 0.00669210032; void __cppyy_internal::init_TMVA_SOFIE_encoder__Session(TMVA_SOFIE_encoder::Session*& self, const TMVA_SOFIE_encoder::Edge_Update::Session& edge_update = TMVA_SOFIE_encoder::Edge; _Update::Session{}, const vector<float>& fEdgeInputs = vector<float>{}, const TMVA_SOFIE_encoder::Node_Update::Session& node_update = TMVA_SOFIE_encoder::Node_Update::Session{}, co; nst vector<float>& fNodeInputs = vector<float>{}, const TMVA_SOFIE_encoder::Global_Update::Session& global_update = TMVA_SOFIE_encoder::Global_Update::Session{}) =>; runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_EncodeProcessDecodeMLPGraphIndependentgraph_independentedge_modelmlplinear_3w0 , read ; 0.00669210032; ```. I also see from grepping:. ```; ./src/./tutorials/tmva/TMVA_SOFIE_GNN_Application.C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16680
https://github.com/root-project/root/issues/16680:282,Availability,error,error,282,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I see (for example in https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971): failures like:. ```; /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; #include ""encoder.hxx""; ^~~~~~~~~~~~~; ```; or ; ```; Traceback (most recent call last):; File ""/home/pcanal/root_working/code/quick-devel/tutorials/tmva/TMVA_SOFIE_GNN.py"", line 226, in <module>; gnn = SofieGNN(); File ""/home/pcanal/root_working/code/quick-devel/tutorials/tmva/TMVA_SOFIE_GNN.py"", line 150, in __init__; self.encoder_session = ROOT.TMVA_SOFIE_encoder.Session(); TypeError: none of the 4 overloaded methods succeeded. Full details:; Session::Session(TMVA_SOFIE_encoder::Session&&) =>; TypeError: takes at least 1 arguments (0 given); Session::Session(const TMVA_SOFIE_encoder::Session&) =>; TypeError: takes at least 1 arguments (0 given); Session::Session() =>; runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_EncodeProcessDecodeMLPGraphIndependentgraph_independentedge_modelmlplinear_3w0 , read ; 0.00669210032; void __cppyy_internal::init_TMVA_SOFIE_encoder__Session(TMVA_SOFIE_encoder::Session*& self, const TMVA_SOFIE_encoder::Edge_Update::Session& edge_update = TMVA_SOFIE_encoder::Edge; _Update::Session{}, const vector<float>& fEdgeInputs = vector<float>{}, const TMVA_SOFIE_encoder::Node_Update::Session& node_update = TMVA_SOFIE_encoder::Node_Update::Session{}, co; nst vector<float>& fNodeInputs = vector<float>{}, const TMVA_SOFIE_encoder::Global_Update::Session& global_update = TMVA_SOFIE_encoder::Global_Update::Session{}) =>; runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_EncodeProcessDecodeMLPGraphIndependentgraph_independentedge_modelmlplinear_3w0 , read ; 0.00669210032; ```. I also see from grepping:. ```; ./src/./tutorials/tmva/TMVA_SOFIE_GNN_Application.C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16680
https://github.com/root-project/root/issues/16680:2459,Deployability,Install,Installation,2459,"ick-devel/tutorials/tmva/TMVA_SOFIE_GNN.py"", line 150, in __init__; self.encoder_session = ROOT.TMVA_SOFIE_encoder.Session(); TypeError: none of the 4 overloaded methods succeeded. Full details:; Session::Session(TMVA_SOFIE_encoder::Session&&) =>; TypeError: takes at least 1 arguments (0 given); Session::Session(const TMVA_SOFIE_encoder::Session&) =>; TypeError: takes at least 1 arguments (0 given); Session::Session() =>; runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_EncodeProcessDecodeMLPGraphIndependentgraph_independentedge_modelmlplinear_3w0 , read ; 0.00669210032; void __cppyy_internal::init_TMVA_SOFIE_encoder__Session(TMVA_SOFIE_encoder::Session*& self, const TMVA_SOFIE_encoder::Edge_Update::Session& edge_update = TMVA_SOFIE_encoder::Edge; _Update::Session{}, const vector<float>& fEdgeInputs = vector<float>{}, const TMVA_SOFIE_encoder::Node_Update::Session& node_update = TMVA_SOFIE_encoder::Node_Update::Session{}, co; nst vector<float>& fNodeInputs = vector<float>{}, const TMVA_SOFIE_encoder::Global_Update::Session& global_update = TMVA_SOFIE_encoder::Global_Update::Session{}) =>; runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_EncodeProcessDecodeMLPGraphIndependentgraph_independentedge_modelmlplinear_3w0 , read ; 0.00669210032; ```. I also see from grepping:. ```; ./src/./tutorials/tmva/TMVA_SOFIE_GNN_Application.C; 10:#include ""encoder.hxx"". ./src/./tutorials/tmva/TMVA_SOFIE_GNN.py; 127:ROOT.gInterpreter.Declare('#include ""encoder.hxx""'); ```. So at least both of those test are uses the same generated file name (I can't find it in the repository) `encoder.hxx` and are still allowed to run in parallel ... leading to unstable result. ### Reproducer. Rerun https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971. ### ROOT version. master. ### Installation method. both local install and CI. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16680
https://github.com/root-project/root/issues/16680:2491,Deployability,install,install,2491,"ick-devel/tutorials/tmva/TMVA_SOFIE_GNN.py"", line 150, in __init__; self.encoder_session = ROOT.TMVA_SOFIE_encoder.Session(); TypeError: none of the 4 overloaded methods succeeded. Full details:; Session::Session(TMVA_SOFIE_encoder::Session&&) =>; TypeError: takes at least 1 arguments (0 given); Session::Session(const TMVA_SOFIE_encoder::Session&) =>; TypeError: takes at least 1 arguments (0 given); Session::Session() =>; runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_EncodeProcessDecodeMLPGraphIndependentgraph_independentedge_modelmlplinear_3w0 , read ; 0.00669210032; void __cppyy_internal::init_TMVA_SOFIE_encoder__Session(TMVA_SOFIE_encoder::Session*& self, const TMVA_SOFIE_encoder::Edge_Update::Session& edge_update = TMVA_SOFIE_encoder::Edge; _Update::Session{}, const vector<float>& fEdgeInputs = vector<float>{}, const TMVA_SOFIE_encoder::Node_Update::Session& node_update = TMVA_SOFIE_encoder::Node_Update::Session{}, co; nst vector<float>& fNodeInputs = vector<float>{}, const TMVA_SOFIE_encoder::Global_Update::Session& global_update = TMVA_SOFIE_encoder::Global_Update::Session{}) =>; runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_EncodeProcessDecodeMLPGraphIndependentgraph_independentedge_modelmlplinear_3w0 , read ; 0.00669210032; ```. I also see from grepping:. ```; ./src/./tutorials/tmva/TMVA_SOFIE_GNN_Application.C; 10:#include ""encoder.hxx"". ./src/./tutorials/tmva/TMVA_SOFIE_GNN.py; 127:ROOT.gInterpreter.Declare('#include ""encoder.hxx""'); ```. So at least both of those test are uses the same generated file name (I can't find it in the repository) `encoder.hxx` and are still allowed to run in parallel ... leading to unstable result. ### Reproducer. Rerun https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971. ### ROOT version. master. ### Installation method. both local install and CI. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16680
https://github.com/root-project/root/issues/16680:2160,Testability,test,test,2160,"ick-devel/tutorials/tmva/TMVA_SOFIE_GNN.py"", line 150, in __init__; self.encoder_session = ROOT.TMVA_SOFIE_encoder.Session(); TypeError: none of the 4 overloaded methods succeeded. Full details:; Session::Session(TMVA_SOFIE_encoder::Session&&) =>; TypeError: takes at least 1 arguments (0 given); Session::Session(const TMVA_SOFIE_encoder::Session&) =>; TypeError: takes at least 1 arguments (0 given); Session::Session() =>; runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_EncodeProcessDecodeMLPGraphIndependentgraph_independentedge_modelmlplinear_3w0 , read ; 0.00669210032; void __cppyy_internal::init_TMVA_SOFIE_encoder__Session(TMVA_SOFIE_encoder::Session*& self, const TMVA_SOFIE_encoder::Edge_Update::Session& edge_update = TMVA_SOFIE_encoder::Edge; _Update::Session{}, const vector<float>& fEdgeInputs = vector<float>{}, const TMVA_SOFIE_encoder::Node_Update::Session& node_update = TMVA_SOFIE_encoder::Node_Update::Session{}, co; nst vector<float>& fNodeInputs = vector<float>{}, const TMVA_SOFIE_encoder::Global_Update::Session& global_update = TMVA_SOFIE_encoder::Global_Update::Session{}) =>; runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_EncodeProcessDecodeMLPGraphIndependentgraph_independentedge_modelmlplinear_3w0 , read ; 0.00669210032; ```. I also see from grepping:. ```; ./src/./tutorials/tmva/TMVA_SOFIE_GNN_Application.C; 10:#include ""encoder.hxx"". ./src/./tutorials/tmva/TMVA_SOFIE_GNN.py; 127:ROOT.gInterpreter.Declare('#include ""encoder.hxx""'); ```. So at least both of those test are uses the same generated file name (I can't find it in the repository) `encoder.hxx` and are still allowed to run in parallel ... leading to unstable result. ### Reproducer. Rerun https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971. ### ROOT version. master. ### Installation method. both local install and CI. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16680
https://github.com/root-project/root/pull/16681:308,Integrability,depend,depending,308,"Unify the main common entry points between local and distributed RDataFrame API. Currently these changes:. - The ROOT.RDataFrame constructor; - ROOT.RDF.RunGraphs; - ROOT.RDF.Experimental.VariationsFor. Anytime one of the above is called, a pythonization will dispatch to the appropriate RDataFrame flavour, depending on the arguments. Previous usage of the distributed module with fully qualified names of functions still works, although usage of the unified API is preferrable and advisable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16681
https://github.com/root-project/root/pull/16684:6,Availability,failure,failures,6,Until failures on Linux Fedora 39 are understood. This PR is marked as emergency since all fedora39 builds are failing because of this test failure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16684
https://github.com/root-project/root/pull/16684:140,Availability,failure,failure,140,Until failures on Linux Fedora 39 are understood. This PR is marked as emergency since all fedora39 builds are failing because of this test failure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16684
https://github.com/root-project/root/pull/16684:135,Testability,test,test,135,Until failures on Linux Fedora 39 are understood. This PR is marked as emergency since all fedora39 builds are failing because of this test failure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16684
https://github.com/root-project/root/issues/16687:730,Availability,error,error,730,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Floating point precision should be preserved when saving plots as ROOT macros with `TCanvas::SaveAs()`. This can probably be achieved with not too much effort using `std::setprecision`:; https://en.cppreference.com/w/cpp/io/manip/setprecision. ### Reproducer. Run this code, which works fine:. ```c++; TCanvas *c = new TCanvas(""c"", ""c"");; TH1D *histo = new TH1D(""histo"", ""histo"", 1, 595780500.110732, 595780531.878908);; histo->Draw();; c->SaveAs(""plot.C"");; ```. The resulting macro will not preserve the precision on the floating point numbers:; ```c++; TH1D *histo__1 = new TH1D(""histo__1"",""histo"",1,5.957805e+08,5.957805e+08);; ```; And you'll get an error when running it:; ```txt; Processing plot.C...; Error in <TCanvas::Range>: illegal world coordinates range: x1=595780500.000000, y1=-0.131250, x2=595780500.000000, y2=1.181250; Error in <TCanvas::RangeAxis>: illegal axis coordinates range: xmin=595780500.000000, ymin=0.000000, xmax=595780500.000000, ymax=1.050000; root [1] Error in <TCanvas::Range>: illegal world coordinates range: x1=595780500.000000, y1=-0.131250, x2=595780500.000000, y2=1.181250; Error in <TCanvas::RangeAxis>: illegal axis coordinates range: xmin=595780500.000000, ymin=0.000000, xmax=595780500.000000, ymax=1.050000; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Sep 21 2024, 18:21:53 |; | From tags/6-32-06@6-32-06 |; | With g++ (GCC) 13.3.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Nix. ### Operating system. NixOS (Linux). ### Additional context. Can easily happen in the analysis of timeseries, where one often has large axis values because they represent time",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16687
https://github.com/root-project/root/issues/16687:784,Availability,Error,Error,784,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Floating point precision should be preserved when saving plots as ROOT macros with `TCanvas::SaveAs()`. This can probably be achieved with not too much effort using `std::setprecision`:; https://en.cppreference.com/w/cpp/io/manip/setprecision. ### Reproducer. Run this code, which works fine:. ```c++; TCanvas *c = new TCanvas(""c"", ""c"");; TH1D *histo = new TH1D(""histo"", ""histo"", 1, 595780500.110732, 595780531.878908);; histo->Draw();; c->SaveAs(""plot.C"");; ```. The resulting macro will not preserve the precision on the floating point numbers:; ```c++; TH1D *histo__1 = new TH1D(""histo__1"",""histo"",1,5.957805e+08,5.957805e+08);; ```; And you'll get an error when running it:; ```txt; Processing plot.C...; Error in <TCanvas::Range>: illegal world coordinates range: x1=595780500.000000, y1=-0.131250, x2=595780500.000000, y2=1.181250; Error in <TCanvas::RangeAxis>: illegal axis coordinates range: xmin=595780500.000000, ymin=0.000000, xmax=595780500.000000, ymax=1.050000; root [1] Error in <TCanvas::Range>: illegal world coordinates range: x1=595780500.000000, y1=-0.131250, x2=595780500.000000, y2=1.181250; Error in <TCanvas::RangeAxis>: illegal axis coordinates range: xmin=595780500.000000, ymin=0.000000, xmax=595780500.000000, ymax=1.050000; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Sep 21 2024, 18:21:53 |; | From tags/6-32-06@6-32-06 |; | With g++ (GCC) 13.3.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Nix. ### Operating system. NixOS (Linux). ### Additional context. Can easily happen in the analysis of timeseries, where one often has large axis values because they represent time",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16687
https://github.com/root-project/root/issues/16687:913,Availability,Error,Error,913,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Floating point precision should be preserved when saving plots as ROOT macros with `TCanvas::SaveAs()`. This can probably be achieved with not too much effort using `std::setprecision`:; https://en.cppreference.com/w/cpp/io/manip/setprecision. ### Reproducer. Run this code, which works fine:. ```c++; TCanvas *c = new TCanvas(""c"", ""c"");; TH1D *histo = new TH1D(""histo"", ""histo"", 1, 595780500.110732, 595780531.878908);; histo->Draw();; c->SaveAs(""plot.C"");; ```. The resulting macro will not preserve the precision on the floating point numbers:; ```c++; TH1D *histo__1 = new TH1D(""histo__1"",""histo"",1,5.957805e+08,5.957805e+08);; ```; And you'll get an error when running it:; ```txt; Processing plot.C...; Error in <TCanvas::Range>: illegal world coordinates range: x1=595780500.000000, y1=-0.131250, x2=595780500.000000, y2=1.181250; Error in <TCanvas::RangeAxis>: illegal axis coordinates range: xmin=595780500.000000, ymin=0.000000, xmax=595780500.000000, ymax=1.050000; root [1] Error in <TCanvas::Range>: illegal world coordinates range: x1=595780500.000000, y1=-0.131250, x2=595780500.000000, y2=1.181250; Error in <TCanvas::RangeAxis>: illegal axis coordinates range: xmin=595780500.000000, ymin=0.000000, xmax=595780500.000000, ymax=1.050000; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Sep 21 2024, 18:21:53 |; | From tags/6-32-06@6-32-06 |; | With g++ (GCC) 13.3.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Nix. ### Operating system. NixOS (Linux). ### Additional context. Can easily happen in the analysis of timeseries, where one often has large axis values because they represent time",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16687
https://github.com/root-project/root/issues/16687:1061,Availability,Error,Error,1061," precision should be preserved when saving plots as ROOT macros with `TCanvas::SaveAs()`. This can probably be achieved with not too much effort using `std::setprecision`:; https://en.cppreference.com/w/cpp/io/manip/setprecision. ### Reproducer. Run this code, which works fine:. ```c++; TCanvas *c = new TCanvas(""c"", ""c"");; TH1D *histo = new TH1D(""histo"", ""histo"", 1, 595780500.110732, 595780531.878908);; histo->Draw();; c->SaveAs(""plot.C"");; ```. The resulting macro will not preserve the precision on the floating point numbers:; ```c++; TH1D *histo__1 = new TH1D(""histo__1"",""histo"",1,5.957805e+08,5.957805e+08);; ```; And you'll get an error when running it:; ```txt; Processing plot.C...; Error in <TCanvas::Range>: illegal world coordinates range: x1=595780500.000000, y1=-0.131250, x2=595780500.000000, y2=1.181250; Error in <TCanvas::RangeAxis>: illegal axis coordinates range: xmin=595780500.000000, ymin=0.000000, xmax=595780500.000000, ymax=1.050000; root [1] Error in <TCanvas::Range>: illegal world coordinates range: x1=595780500.000000, y1=-0.131250, x2=595780500.000000, y2=1.181250; Error in <TCanvas::RangeAxis>: illegal axis coordinates range: xmin=595780500.000000, ymin=0.000000, xmax=595780500.000000, ymax=1.050000; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Sep 21 2024, 18:21:53 |; | From tags/6-32-06@6-32-06 |; | With g++ (GCC) 13.3.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Nix. ### Operating system. NixOS (Linux). ### Additional context. Can easily happen in the analysis of timeseries, where one often has large axis values because they represent time with respect to some reference point far back in time (e.g. astrophysics, finance, ...)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16687
https://github.com/root-project/root/issues/16687:1190,Availability,Error,Error,1190,"precision should be preserved when saving plots as ROOT macros with `TCanvas::SaveAs()`. This can probably be achieved with not too much effort using `std::setprecision`:; https://en.cppreference.com/w/cpp/io/manip/setprecision. ### Reproducer. Run this code, which works fine:. ```c++; TCanvas *c = new TCanvas(""c"", ""c"");; TH1D *histo = new TH1D(""histo"", ""histo"", 1, 595780500.110732, 595780531.878908);; histo->Draw();; c->SaveAs(""plot.C"");; ```. The resulting macro will not preserve the precision on the floating point numbers:; ```c++; TH1D *histo__1 = new TH1D(""histo__1"",""histo"",1,5.957805e+08,5.957805e+08);; ```; And you'll get an error when running it:; ```txt; Processing plot.C...; Error in <TCanvas::Range>: illegal world coordinates range: x1=595780500.000000, y1=-0.131250, x2=595780500.000000, y2=1.181250; Error in <TCanvas::RangeAxis>: illegal axis coordinates range: xmin=595780500.000000, ymin=0.000000, xmax=595780500.000000, ymax=1.050000; root [1] Error in <TCanvas::Range>: illegal world coordinates range: x1=595780500.000000, y1=-0.131250, x2=595780500.000000, y2=1.181250; Error in <TCanvas::RangeAxis>: illegal axis coordinates range: xmin=595780500.000000, ymin=0.000000, xmax=595780500.000000, ymax=1.050000; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Sep 21 2024, 18:21:53 |; | From tags/6-32-06@6-32-06 |; | With g++ (GCC) 13.3.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Nix. ### Operating system. NixOS (Linux). ### Additional context. Can easily happen in the analysis of timeseries, where one often has large axis values because they represent time with respect to some reference point far back in time (e.g. astrophysics, finance, ...).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16687
https://github.com/root-project/root/issues/16687:1800,Deployability,Install,Installation,1800,"precision should be preserved when saving plots as ROOT macros with `TCanvas::SaveAs()`. This can probably be achieved with not too much effort using `std::setprecision`:; https://en.cppreference.com/w/cpp/io/manip/setprecision. ### Reproducer. Run this code, which works fine:. ```c++; TCanvas *c = new TCanvas(""c"", ""c"");; TH1D *histo = new TH1D(""histo"", ""histo"", 1, 595780500.110732, 595780531.878908);; histo->Draw();; c->SaveAs(""plot.C"");; ```. The resulting macro will not preserve the precision on the floating point numbers:; ```c++; TH1D *histo__1 = new TH1D(""histo__1"",""histo"",1,5.957805e+08,5.957805e+08);; ```; And you'll get an error when running it:; ```txt; Processing plot.C...; Error in <TCanvas::Range>: illegal world coordinates range: x1=595780500.000000, y1=-0.131250, x2=595780500.000000, y2=1.181250; Error in <TCanvas::RangeAxis>: illegal axis coordinates range: xmin=595780500.000000, ymin=0.000000, xmax=595780500.000000, ymax=1.050000; root [1] Error in <TCanvas::Range>: illegal world coordinates range: x1=595780500.000000, y1=-0.131250, x2=595780500.000000, y2=1.181250; Error in <TCanvas::RangeAxis>: illegal axis coordinates range: xmin=595780500.000000, ymin=0.000000, xmax=595780500.000000, ymax=1.050000; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Sep 21 2024, 18:21:53 |; | From tags/6-32-06@6-32-06 |; | With g++ (GCC) 13.3.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Nix. ### Operating system. NixOS (Linux). ### Additional context. Can easily happen in the analysis of timeseries, where one often has large axis values because they represent time with respect to some reference point far back in time (e.g. astrophysics, finance, ...).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16687
https://github.com/root-project/root/issues/16689:271,Availability,FAILURE,FAILURES,271,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In the GPU-PR #16580, @dpiparo suggested to disable a few components to speed up the non-GPU-related parts. After disabling the webgui, the following test started to hang and time out:; ```; TEST FAILURES:; 1521:roottest-python-JupyROOT-Cpp_IMT_Canvas_notebook; ```. ### Reproducer. This is the full config:; ```; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -DCMAKE_BUILD_TYPE=RelWithDebInfo ""-DCMAKE_BUILD_TYPE=RelWithDebInfo"" ""-Dalien=off"" ""-Dall=off"" ""-Darrow=off"" ""-Dasan=off"" ""-Dasimage=on"" ""-Dasserts=off"" ""-Dbuiltin_cfitsio=off"" ""-Dbuiltin_clang=on"" ""-Dbuiltin_cling=on"" ""-Dbuiltin_cppzmq=on"" ""-Dbuiltin_davix=off"" ""-Dbuiltin_fftw3=off"" ""-Dbuiltin_freetype=off"" ""-Dbuiltin_ftgl=off"" ""-Dbuiltin_gl2ps=off"" ""-Dbuiltin_glew=off"" ""-Dbuiltin_gsl=off"" ""-Dbuiltin_llvm=on"" ""-Dbuiltin_lz4=off"" ""-Dbuiltin_lzma=off"" ""-Dbuiltin_nlohmannjson=off"" ""-Dbuiltin_openssl=off"" ""-Dbuiltin_openui5=on"" ""-Dbuiltin_pcre=off"" ""-Dbuiltin_tbb=off"" ""-Dbuiltin_unuran=on"" ""-Dbuiltin_vc=off"" ""-Dbuiltin_vdt=off"" ""-Dbuiltin_veccore=off"" ""-Dbuiltin_xrootd=off"" ""-Dbuiltin_xxhash=off"" ""-Dbuiltin_zeromq=on"" ""-Dbuiltin_zlib=off"" ""-Dbuiltin_zstd=off"" ""-Dccache=on"" ""-Dcefweb=off"" ""-Dclad=on"" ""-Dclingtest=off"" ""-Dcocoa=off"" ""-Dcoverage=off"" ""-Dcuda=on"" ""-Dcudnn=off"" ""-Dcxxmodules=off"" ""-Ddaos=off"" ""-Ddataframe=on"" ""-Ddavix=on"" ""-Ddcache=off"" ""-Ddev=off"" ""-Ddistcc=off"" ""-Dfail-on-missing=on"" ""-Dfcgi=off"" ""-Dfftw3=on"" ""-Dfitsio=on"" ""-Dfortran=off"" ""-Dgdml=off"" ""-Dgminimal=off"" ""-Dgnuinstall=off"" ""-Dgsl_shared=off"" ""-Dgviz=off"" ""-Dhttp=on"" ""-Dimt=on"" ""-Djemalloc=off"" ""-Dlibcxx=off"" ""-Dmacos_native=off"" ""-Dmathmore=on"" ""-Dmemory_termination=off"" ""-Dminimal=off"" ""-Dmpi=off"" ""-Dmysql=off"" ""-Dodbc=off"" ""-Dopengl=on"" ""-Dpgsql=on"" ""-Dpyroot=on"" ""-Dpythia8=off"" ""-Dqt5web=off"" ""-Dqt6web=off"" ""-Dr=off"" ""-Droofit=on"" ""-Droofit_multiprocess=on"" ""-Droot7=on"" ""-Drootbench=off"" ""-Droottest=on"" ""-Droottest_force_checkout=off"" ""-Drp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16689
https://github.com/root-project/root/issues/16689:3410,Deployability,Install,Installation,3410,"mal=off"" ""-Dgnuinstall=off"" ""-Dgsl_shared=off"" ""-Dgviz=off"" ""-Dhttp=on"" ""-Dimt=on"" ""-Djemalloc=off"" ""-Dlibcxx=off"" ""-Dmacos_native=off"" ""-Dmathmore=on"" ""-Dmemory_termination=off"" ""-Dminimal=off"" ""-Dmpi=off"" ""-Dmysql=off"" ""-Dodbc=off"" ""-Dopengl=on"" ""-Dpgsql=on"" ""-Dpyroot=on"" ""-Dpythia8=off"" ""-Dqt5web=off"" ""-Dqt6web=off"" ""-Dr=off"" ""-Droofit=on"" ""-Droofit_multiprocess=on"" ""-Droot7=on"" ""-Drootbench=off"" ""-Droottest=on"" ""-Droottest_force_checkout=off"" ""-Drpath=on"" ""-Druntime_cxxmodules=on"" ""-Dshadowpw=off"" ""-Dshared=on"" ""-Dsoversion=off"" ""-Dspectrum=off"" ""-Dsqlite=off"" ""-Dssl=on"" ""-Dtcmalloc=off"" ""-Dtest_distrdf_dask=off"" ""-Dtest_distrdf_pyspark=off"" ""-Dtesting=on"" ""-Dtmva-cpu=on"" ""-Dtmva-gpu=off"" ""-Dtmva-pymva=on"" ""-Dtmva-rmva=off"" ""-Dtmva-sofie=off"" ""-Dtmva=on"" ""-Dunfold=off"" ""-Dunuran=on"" ""-During=off"" ""-Dvc=off"" ""-Dvdt=on"" ""-Dveccore=off"" ""-Dvecgeom=off"" ""-Dwebgui=off"" ""-Dwin_broken_tests=off"" ""-Dwinrtdebug=off"" ""-Dx11=on"" ""-Dxml=on"" ""-Dxrootd=on""; ```. This is the notebook it tries to run:; https://github.com/root-project/roottest/blob/master/python/JupyROOT/Cpp_IMT_Canvas.ipynb. And this is a minimal reproducer if you reverse engineer what the test does:; ```; root@bbb56c35bcff:~/build# jupyter nbconvert --debug --to notebook --ExecutePreprocessor.enabled=True ../roottest/python/JupyROOT/Cpp_IMT_Canvas.ipynb; [...]; [NbConvertApp] Executing cell:; ROOT::EnableImplicitMT();; TCanvas c(""c"", ""c"");; c.Draw();; [NbConvertApp] msg_type: status; [NbConvertApp] content: {'execution_state': 'busy'}; [NbConvertApp] msg_type: execute_input; [NbConvertApp] content: {'code': 'ROOT::EnableImplicitMT();\nTCanvas c(""c"", ""c"");\nc.Draw();', 'execution_count': 1}; ```. You can make it pass by:; - Enabling webgui (it seems to create an image based on the output); - Or by running with `--ExecutePreprocessor.enabled=False`. ### ROOT version. Master. ### Installation method. From source. ### Operating system. registry.cern.ch/root-ci/ubuntu2404-cuda. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16689
https://github.com/root-project/root/issues/16689:375,Modifiability,config,config,375," This is the full config:; ```; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -DCMAKE_BUILD_TYPE=RelWithDebInfo ""-DCMAKE_BUILD_TYPE=RelWithDebInfo"" ""-Dalien=off"" ""-Dall=off"" ""-Darrow=off"" ""-Dasan=off"" ""-Dasimage=on"" ""-Dasserts=off"" ""-Dbuiltin_cfitsio=off"" ""-Dbuiltin_clang=on"" ""-Dbuiltin_cling=on"" ""-Dbuiltin_cppzmq=on"" ""-Dbuiltin_davix=off"" ""-Dbuiltin_fftw3=off"" ""-Dbuiltin_freetype=off"" ""-Dbuiltin_ftgl=off"" ""-Dbuiltin_gl2ps=off"" ""-Dbuiltin_glew=off"" ""-Dbuiltin_gsl=off"" ""-Dbuiltin_llvm=on"" ""-Dbuiltin_lz4=off"" ""-Dbuiltin_lzma=off"" ""-Dbuiltin_nlohmannjson=off"" ""-Dbuiltin_openssl=off"" ""-Dbuiltin_openui5=on"" ""-Dbuiltin_pcre=off"" ""-Dbuiltin_tbb=off"" ""-Dbuiltin_unuran=on"" ""-Dbuiltin_vc=off"" ""-Dbuiltin_vdt=off"" ""-Dbuiltin_veccore=off"" ""-Dbuiltin_xrootd=off"" ""-Dbuiltin_xxhash=off"" ""-Dbuiltin_zeromq=on"" ""-Dbuiltin_zlib=off"" ""-Dbuiltin_zstd=off"" ""-Dccache=on"" ""-Dcefweb=off"" ""-Dclad=on"" ""-Dclingtest=off"" ""-Dcocoa=off"" ""-Dcoverage=off"" ""-Dcuda=on"" ""-Dcudnn=off"" ""-Dcxxmodules=off"" ""-Ddaos=off"" ""-Ddataframe=on"" ""-Ddavix=on"" ""-Ddcache=off"" ""-Ddev=off"" ""-Ddistcc=off"" ""-Dfail-on-missing=on"" ""-Dfcgi=off"" ""-Dfftw3=on"" ""-Dfitsio=on"" ""-Dfortran=off"" ""-Dgdml=off"" ""-Dgminimal=off"" ""-Dgnuinstall=off"" ""-Dgsl_shared=off"" ""-Dgviz=off"" ""-Dhttp=on"" ""-Dimt=on"" ""-Djemalloc=off"" ""-Dlibcxx=off"" ""-Dmacos_native=off"" ""-Dmathmore=on"" ""-Dmemory_termination=off"" ""-Dminimal=off"" ""-Dmpi=off"" ""-Dmysql=off"" ""-Dodbc=off"" ""-Dopengl=on"" ""-Dpgsql=on"" ""-Dpyroot=on"" ""-Dpythia8=off"" ""-Dqt5web=off"" ""-Dqt6web=off"" ""-Dr=off"" ""-Droofit=on"" ""-Droofit_multiprocess=on"" ""-Droot7=on"" ""-Drootbench=off"" ""-Droottest=on"" ""-Droottest_force_checkout=off"" ""-Drp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16689
https://github.com/root-project/root/issues/16689:225,Testability,test,test,225,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In the GPU-PR #16580, @dpiparo suggested to disable a few components to speed up the non-GPU-related parts. After disabling the webgui, the following test started to hang and time out:; ```; TEST FAILURES:; 1521:roottest-python-JupyROOT-Cpp_IMT_Canvas_notebook; ```. ### Reproducer. This is the full config:; ```; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -DCMAKE_BUILD_TYPE=RelWithDebInfo ""-DCMAKE_BUILD_TYPE=RelWithDebInfo"" ""-Dalien=off"" ""-Dall=off"" ""-Darrow=off"" ""-Dasan=off"" ""-Dasimage=on"" ""-Dasserts=off"" ""-Dbuiltin_cfitsio=off"" ""-Dbuiltin_clang=on"" ""-Dbuiltin_cling=on"" ""-Dbuiltin_cppzmq=on"" ""-Dbuiltin_davix=off"" ""-Dbuiltin_fftw3=off"" ""-Dbuiltin_freetype=off"" ""-Dbuiltin_ftgl=off"" ""-Dbuiltin_gl2ps=off"" ""-Dbuiltin_glew=off"" ""-Dbuiltin_gsl=off"" ""-Dbuiltin_llvm=on"" ""-Dbuiltin_lz4=off"" ""-Dbuiltin_lzma=off"" ""-Dbuiltin_nlohmannjson=off"" ""-Dbuiltin_openssl=off"" ""-Dbuiltin_openui5=on"" ""-Dbuiltin_pcre=off"" ""-Dbuiltin_tbb=off"" ""-Dbuiltin_unuran=on"" ""-Dbuiltin_vc=off"" ""-Dbuiltin_vdt=off"" ""-Dbuiltin_veccore=off"" ""-Dbuiltin_xrootd=off"" ""-Dbuiltin_xxhash=off"" ""-Dbuiltin_zeromq=on"" ""-Dbuiltin_zlib=off"" ""-Dbuiltin_zstd=off"" ""-Dccache=on"" ""-Dcefweb=off"" ""-Dclad=on"" ""-Dclingtest=off"" ""-Dcocoa=off"" ""-Dcoverage=off"" ""-Dcuda=on"" ""-Dcudnn=off"" ""-Dcxxmodules=off"" ""-Ddaos=off"" ""-Ddataframe=on"" ""-Ddavix=on"" ""-Ddcache=off"" ""-Ddev=off"" ""-Ddistcc=off"" ""-Dfail-on-missing=on"" ""-Dfcgi=off"" ""-Dfftw3=on"" ""-Dfitsio=on"" ""-Dfortran=off"" ""-Dgdml=off"" ""-Dgminimal=off"" ""-Dgnuinstall=off"" ""-Dgsl_shared=off"" ""-Dgviz=off"" ""-Dhttp=on"" ""-Dimt=on"" ""-Djemalloc=off"" ""-Dlibcxx=off"" ""-Dmacos_native=off"" ""-Dmathmore=on"" ""-Dmemory_termination=off"" ""-Dminimal=off"" ""-Dmpi=off"" ""-Dmysql=off"" ""-Dodbc=off"" ""-Dopengl=on"" ""-Dpgsql=on"" ""-Dpyroot=on"" ""-Dpythia8=off"" ""-Dqt5web=off"" ""-Dqt6web=off"" ""-Dr=off"" ""-Droofit=on"" ""-Droofit_multiprocess=on"" ""-Droot7=on"" ""-Drootbench=off"" ""-Droottest=on"" ""-Droottest_force_checkout=off"" ""-Drp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16689
https://github.com/root-project/root/issues/16689:266,Testability,TEST,TEST,266,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In the GPU-PR #16580, @dpiparo suggested to disable a few components to speed up the non-GPU-related parts. After disabling the webgui, the following test started to hang and time out:; ```; TEST FAILURES:; 1521:roottest-python-JupyROOT-Cpp_IMT_Canvas_notebook; ```. ### Reproducer. This is the full config:; ```; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -DCMAKE_BUILD_TYPE=RelWithDebInfo ""-DCMAKE_BUILD_TYPE=RelWithDebInfo"" ""-Dalien=off"" ""-Dall=off"" ""-Darrow=off"" ""-Dasan=off"" ""-Dasimage=on"" ""-Dasserts=off"" ""-Dbuiltin_cfitsio=off"" ""-Dbuiltin_clang=on"" ""-Dbuiltin_cling=on"" ""-Dbuiltin_cppzmq=on"" ""-Dbuiltin_davix=off"" ""-Dbuiltin_fftw3=off"" ""-Dbuiltin_freetype=off"" ""-Dbuiltin_ftgl=off"" ""-Dbuiltin_gl2ps=off"" ""-Dbuiltin_glew=off"" ""-Dbuiltin_gsl=off"" ""-Dbuiltin_llvm=on"" ""-Dbuiltin_lz4=off"" ""-Dbuiltin_lzma=off"" ""-Dbuiltin_nlohmannjson=off"" ""-Dbuiltin_openssl=off"" ""-Dbuiltin_openui5=on"" ""-Dbuiltin_pcre=off"" ""-Dbuiltin_tbb=off"" ""-Dbuiltin_unuran=on"" ""-Dbuiltin_vc=off"" ""-Dbuiltin_vdt=off"" ""-Dbuiltin_veccore=off"" ""-Dbuiltin_xrootd=off"" ""-Dbuiltin_xxhash=off"" ""-Dbuiltin_zeromq=on"" ""-Dbuiltin_zlib=off"" ""-Dbuiltin_zstd=off"" ""-Dccache=on"" ""-Dcefweb=off"" ""-Dclad=on"" ""-Dclingtest=off"" ""-Dcocoa=off"" ""-Dcoverage=off"" ""-Dcuda=on"" ""-Dcudnn=off"" ""-Dcxxmodules=off"" ""-Ddaos=off"" ""-Ddataframe=on"" ""-Ddavix=on"" ""-Ddcache=off"" ""-Ddev=off"" ""-Ddistcc=off"" ""-Dfail-on-missing=on"" ""-Dfcgi=off"" ""-Dfftw3=on"" ""-Dfitsio=on"" ""-Dfortran=off"" ""-Dgdml=off"" ""-Dgminimal=off"" ""-Dgnuinstall=off"" ""-Dgsl_shared=off"" ""-Dgviz=off"" ""-Dhttp=on"" ""-Dimt=on"" ""-Djemalloc=off"" ""-Dlibcxx=off"" ""-Dmacos_native=off"" ""-Dmathmore=on"" ""-Dmemory_termination=off"" ""-Dminimal=off"" ""-Dmpi=off"" ""-Dmysql=off"" ""-Dodbc=off"" ""-Dopengl=on"" ""-Dpgsql=on"" ""-Dpyroot=on"" ""-Dpythia8=off"" ""-Dqt5web=off"" ""-Dqt6web=off"" ""-Dr=off"" ""-Droofit=on"" ""-Droofit_multiprocess=on"" ""-Droot7=on"" ""-Drootbench=off"" ""-Droottest=on"" ""-Droottest_force_checkout=off"" ""-Drp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16689
https://github.com/root-project/root/issues/16689:2708,Testability,test,test,2708,"mal=off"" ""-Dgnuinstall=off"" ""-Dgsl_shared=off"" ""-Dgviz=off"" ""-Dhttp=on"" ""-Dimt=on"" ""-Djemalloc=off"" ""-Dlibcxx=off"" ""-Dmacos_native=off"" ""-Dmathmore=on"" ""-Dmemory_termination=off"" ""-Dminimal=off"" ""-Dmpi=off"" ""-Dmysql=off"" ""-Dodbc=off"" ""-Dopengl=on"" ""-Dpgsql=on"" ""-Dpyroot=on"" ""-Dpythia8=off"" ""-Dqt5web=off"" ""-Dqt6web=off"" ""-Dr=off"" ""-Droofit=on"" ""-Droofit_multiprocess=on"" ""-Droot7=on"" ""-Drootbench=off"" ""-Droottest=on"" ""-Droottest_force_checkout=off"" ""-Drpath=on"" ""-Druntime_cxxmodules=on"" ""-Dshadowpw=off"" ""-Dshared=on"" ""-Dsoversion=off"" ""-Dspectrum=off"" ""-Dsqlite=off"" ""-Dssl=on"" ""-Dtcmalloc=off"" ""-Dtest_distrdf_dask=off"" ""-Dtest_distrdf_pyspark=off"" ""-Dtesting=on"" ""-Dtmva-cpu=on"" ""-Dtmva-gpu=off"" ""-Dtmva-pymva=on"" ""-Dtmva-rmva=off"" ""-Dtmva-sofie=off"" ""-Dtmva=on"" ""-Dunfold=off"" ""-Dunuran=on"" ""-During=off"" ""-Dvc=off"" ""-Dvdt=on"" ""-Dveccore=off"" ""-Dvecgeom=off"" ""-Dwebgui=off"" ""-Dwin_broken_tests=off"" ""-Dwinrtdebug=off"" ""-Dx11=on"" ""-Dxml=on"" ""-Dxrootd=on""; ```. This is the notebook it tries to run:; https://github.com/root-project/roottest/blob/master/python/JupyROOT/Cpp_IMT_Canvas.ipynb. And this is a minimal reproducer if you reverse engineer what the test does:; ```; root@bbb56c35bcff:~/build# jupyter nbconvert --debug --to notebook --ExecutePreprocessor.enabled=True ../roottest/python/JupyROOT/Cpp_IMT_Canvas.ipynb; [...]; [NbConvertApp] Executing cell:; ROOT::EnableImplicitMT();; TCanvas c(""c"", ""c"");; c.Draw();; [NbConvertApp] msg_type: status; [NbConvertApp] content: {'execution_state': 'busy'}; [NbConvertApp] msg_type: execute_input; [NbConvertApp] content: {'code': 'ROOT::EnableImplicitMT();\nTCanvas c(""c"", ""c"");\nc.Draw();', 'execution_count': 1}; ```. You can make it pass by:; - Enabling webgui (it seems to create an image based on the output); - Or by running with `--ExecutePreprocessor.enabled=False`. ### ROOT version. Master. ### Installation method. From source. ### Operating system. registry.cern.ch/root-ci/ubuntu2404-cuda. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16689
https://github.com/root-project/root/pull/16691:41,Testability,Test,Testing,41,It is adjusting chrome on top of #16685. Testing chrome and firefox stressgraphics.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16691
https://github.com/root-project/root/pull/16693:82,Security,access,access,82,"This PR adds the possibility to register subfields to an RNTuple model for direct access to the values of these fields in entries belonging to the model. Registerging subfields in a collection is not permitted as of this PR, but will be added at a later point, borrowing from the implementation of `RNTupleDS`. This functionality will be used in the `RNTupleProcessor`, which provides an iterator over an `REntry`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16693
https://github.com/root-project/root/pull/16694:362,Deployability,update,updated,362,# This Pull request:. ## Changes or fixes:. This is a rebased version of https://github.com/root-project/cling/pull/174 by @marsupial; The test was failing for a reason that likely shouldn't be ignored. This reverts commit https://github.com/root-project/cling/commit/5947e13cb99052b6f7a5b501244ee2be9be9d080.; ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16694:139,Testability,test,test,139,# This Pull request:. ## Changes or fixes:. This is a rebased version of https://github.com/root-project/cling/pull/174 by @marsupial; The test was failing for a reason that likely shouldn't be ignored. This reverts commit https://github.com/root-project/cling/commit/5947e13cb99052b6f7a5b501244ee2be9be9d080.; ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16694:332,Testability,test,tested,332,# This Pull request:. ## Changes or fixes:. This is a rebased version of https://github.com/root-project/cling/pull/174 by @marsupial; The test was failing for a reason that likely shouldn't be ignored. This reverts commit https://github.com/root-project/cling/commit/5947e13cb99052b6f7a5b501244ee2be9be9d080.; ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16694
https://github.com/root-project/root/pull/16695:168,Deployability,update,updated,168,…t::GetTypeName. This doesn't impose a potential allocation (or the use of std::string) on the caller unnecessarily. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16695
https://github.com/root-project/root/pull/16695:138,Testability,test,tested,138,…t::GetTypeName. This doesn't impose a potential allocation (or the use of std::string) on the caller unnecessarily. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16695
https://github.com/root-project/root/pull/16698:88,Availability,avail,available,88,This conveniently also allows looking at columns through a `typedef` that might only be available with a dictionary.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16698
https://github.com/root-project/root/pull/16700:247,Deployability,update,updated,247,This is causing `hadd` to ignore the compression options when merging RNTuples. We didn't catch this bug because the unit tests were bypassing TFileMerger and calling directly into RNTupleMerger. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16700
https://github.com/root-project/root/pull/16700:122,Testability,test,tests,122,This is causing `hadd` to ignore the compression options when merging RNTuples. We didn't catch this bug because the unit tests were bypassing TFileMerger and calling directly into RNTupleMerger. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16700
https://github.com/root-project/root/pull/16700:217,Testability,test,tested,217,This is causing `hadd` to ignore the compression options when merging RNTuples. We didn't catch this bug because the unit tests were bypassing TFileMerger and calling directly into RNTupleMerger. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16700
https://github.com/root-project/root/pull/16701:82,Modifiability,plugin,plugins,82,Fixes the following warning:; ```; CMake Warning (dev) in interpreter/cling/tools/plugins/clad/CMakeLists.txt:; A logical block opening on the line. /root/root_src/interpreter/cling/tools/plugins/clad/CMakeLists.txt:17 (if). closes on the line. /root/root_src/interpreter/cling/tools/plugins/clad/CMakeLists.txt:27 (endif). with mis-matching arguments.; This warning is for project developers. Use -Wno-dev to suppress it.; ```. @bellenot,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16701
https://github.com/root-project/root/pull/16701:188,Modifiability,plugin,plugins,188,Fixes the following warning:; ```; CMake Warning (dev) in interpreter/cling/tools/plugins/clad/CMakeLists.txt:; A logical block opening on the line. /root/root_src/interpreter/cling/tools/plugins/clad/CMakeLists.txt:17 (if). closes on the line. /root/root_src/interpreter/cling/tools/plugins/clad/CMakeLists.txt:27 (endif). with mis-matching arguments.; This warning is for project developers. Use -Wno-dev to suppress it.; ```. @bellenot,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16701
https://github.com/root-project/root/pull/16701:284,Modifiability,plugin,plugins,284,Fixes the following warning:; ```; CMake Warning (dev) in interpreter/cling/tools/plugins/clad/CMakeLists.txt:; A logical block opening on the line. /root/root_src/interpreter/cling/tools/plugins/clad/CMakeLists.txt:17 (if). closes on the line. /root/root_src/interpreter/cling/tools/plugins/clad/CMakeLists.txt:27 (endif). with mis-matching arguments.; This warning is for project developers. Use -Wno-dev to suppress it.; ```. @bellenot,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16701
https://github.com/root-project/root/pull/16701:114,Testability,log,logical,114,Fixes the following warning:; ```; CMake Warning (dev) in interpreter/cling/tools/plugins/clad/CMakeLists.txt:; A logical block opening on the line. /root/root_src/interpreter/cling/tools/plugins/clad/CMakeLists.txt:17 (if). closes on the line. /root/root_src/interpreter/cling/tools/plugins/clad/CMakeLists.txt:27 (endif). with mis-matching arguments.; This warning is for project developers. Use -Wno-dev to suppress it.; ```. @bellenot,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16701
https://github.com/root-project/root/pull/16703:97,Integrability,depend,dependency,97,"If components are not specified, we should assume nlohmann_json is not required. Propagating the dependency on nlohmann_json just for the sake of one ROOT feature (ROOTEve) that might be used is unreasonable. We can expect from the users that link against ROOTEve to list this component explicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16703
https://github.com/root-project/root/pull/16705:29,Availability,error,errors,29,1. Fixing several formatting errors preventing doxygen generation; 2. Rename files in `tutorials\webgui` to let correctly create doxygen; 3. Fix jsroot_importmap generation for `jsroot/geom` and `jsroot/three`; 4. Fix minimal error in JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16705
https://github.com/root-project/root/pull/16705:226,Availability,error,error,226,1. Fixing several formatting errors preventing doxygen generation; 2. Rename files in `tutorials\webgui` to let correctly create doxygen; 3. Fix jsroot_importmap generation for `jsroot/geom` and `jsroot/three`; 4. Fix minimal error in JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16705
https://github.com/root-project/root/pull/16706:160,Safety,avoid,avoid,160,"Fixes a compiler warning. Freetype 2.13.3 changed the type of a data member from char* to; unsigned char*, so we need to pass the correct type to FTContour to; avoid compiler warnings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16706
https://github.com/root-project/root/pull/16707:110,Availability,robust,robustness,110,This is done to reduce the feature divergence between PyROOT and C++ ROOT. Also improves code performance and robustness.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:16,Energy Efficiency,reduce,reduce,16,This is done to reduce the feature divergence between PyROOT and C++ ROOT. Also improves code performance and robustness.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16707:94,Performance,perform,performance,94,This is done to reduce the feature divergence between PyROOT and C++ ROOT. Also improves code performance and robustness.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16707
https://github.com/root-project/root/pull/16709:87,Deployability,update,updated,87,Fix a warning in RNTupleSerializer. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16709
https://github.com/root-project/root/pull/16709:57,Testability,test,tested,57,Fix a warning in RNTupleSerializer. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16709
https://github.com/root-project/root/pull/16714:249,Security,access,accessed,249,"A number of changes, split into multiple commits:; * `RProjectedFields` moves to `Internal` and `GetFieldZero()` is not `const` (plus one fix to take references instead of pointers to `RNTupleModel`). The projected fields of a `RNTupleModel` can be accessed via `Internal::GetProjectedFieldsFromModel()`.; * A new `Internal::GetFieldZeroFromModel()` is used to get the `RFieldZero` also from a frozen model.; * `RNTupleModel::GetFieldZero()` is split into `GetConstFieldZero()`, which can always be called, and `GetMutableFieldZero()`, which is only allowed for unfrozen models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16714
https://github.com/root-project/root/issues/16715:1931,Deployability,install,installed,1931,"n/cmake -E cmake_link_script CMakeFiles/TMVA.dir/link.txt --verbose=1; /usr/bin/c++ -fPIC -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual; [...]; /usr/bin/ld: CMakeFiles/TMVA.dir/src/DNN/Architectures/Cudnn.cu.o: in function `TMVA::DNN::cudnnError(cudnnStatus_t, char const*, int, bool) [clone .part.0] [clone .constprop.1]':; tmpxft_0001274b_00000000-6_Cudnn.cudafe1.cpp:(.text+0x1b): undefined reference to `cudnnGetErrorString'; /usr/bin/ld: CMakeFiles/TMVA.dir/src/DNN/Architectures/Cudnn.cu.o: in function `TMVA::DNN::cudnnError(cudnnStatus_t, char const*, int, bool) [clone .part.0] [clone .constprop.2]':; tmpxft_0001274b_00000000-6_Cudnn.cudafe1.cpp:(.text+0x5b): undefined reference to `cudnnGetErrorString'; [...]; ```. I believe the way to trick it is to set `tmva-cudnn=ON`. It looks like users were not supposed to touch it, instead they should have set `-Dcudnn=On`. Setting the latter, the following code runs:; https://github.com/root-project/root/blob/45f13f0c6e145b0ddef82bf049a43fbe4870381b/cmake/modules/SearchInstalledSoftware.cmake#L1638-L1654. Instead, I set `tmva-cudnn` directly, the code above doesn't run, and tmva fails to link because the location of cudnn is never discovered. Maybe, one of `cudnn` or `tmva-cudnn` should be removed, and only a single flag should enable or disable it. ### Reproducer. On ubuntu with cuda and cudnn, I did:; ```; (ROOT-CI) root@102b09e3cf56:~/build# cmake -Dtmva-gpu=On -Dtesting=On -Dtmva-cudnn=On -Dbuiltin_openui5=Off -Dclad=Off -Dgdml=Off -Dgeom=Off -Dopengl=Off -Droot7=Off -Dspectrum=Off -Droofit=Off -Dvdt=Off ../root; ```. ```; $ apt list --installed | grep cudnn; libcudnn9-cuda-12/unknown,now 9.3.0.75-1 amd64 [installed,upgradable to: 9.5.0.50-1]; libcudnn9-dev-cuda-12/unknown,now 9.3.0.75-1 amd64 [installed,upgradable to: 9.5.0.50-1]; ```. ### ROOT version. Master. ### Installation method. Source. ### Operating system. Ubuntu with cuda-12-6. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:2003,Deployability,install,installed,2003,"n/cmake -E cmake_link_script CMakeFiles/TMVA.dir/link.txt --verbose=1; /usr/bin/c++ -fPIC -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual; [...]; /usr/bin/ld: CMakeFiles/TMVA.dir/src/DNN/Architectures/Cudnn.cu.o: in function `TMVA::DNN::cudnnError(cudnnStatus_t, char const*, int, bool) [clone .part.0] [clone .constprop.1]':; tmpxft_0001274b_00000000-6_Cudnn.cudafe1.cpp:(.text+0x1b): undefined reference to `cudnnGetErrorString'; /usr/bin/ld: CMakeFiles/TMVA.dir/src/DNN/Architectures/Cudnn.cu.o: in function `TMVA::DNN::cudnnError(cudnnStatus_t, char const*, int, bool) [clone .part.0] [clone .constprop.2]':; tmpxft_0001274b_00000000-6_Cudnn.cudafe1.cpp:(.text+0x5b): undefined reference to `cudnnGetErrorString'; [...]; ```. I believe the way to trick it is to set `tmva-cudnn=ON`. It looks like users were not supposed to touch it, instead they should have set `-Dcudnn=On`. Setting the latter, the following code runs:; https://github.com/root-project/root/blob/45f13f0c6e145b0ddef82bf049a43fbe4870381b/cmake/modules/SearchInstalledSoftware.cmake#L1638-L1654. Instead, I set `tmva-cudnn` directly, the code above doesn't run, and tmva fails to link because the location of cudnn is never discovered. Maybe, one of `cudnn` or `tmva-cudnn` should be removed, and only a single flag should enable or disable it. ### Reproducer. On ubuntu with cuda and cudnn, I did:; ```; (ROOT-CI) root@102b09e3cf56:~/build# cmake -Dtmva-gpu=On -Dtesting=On -Dtmva-cudnn=On -Dbuiltin_openui5=Off -Dclad=Off -Dgdml=Off -Dgeom=Off -Dopengl=Off -Droot7=Off -Dspectrum=Off -Droofit=Off -Dvdt=Off ../root; ```. ```; $ apt list --installed | grep cudnn; libcudnn9-cuda-12/unknown,now 9.3.0.75-1 amd64 [installed,upgradable to: 9.5.0.50-1]; libcudnn9-dev-cuda-12/unknown,now 9.3.0.75-1 amd64 [installed,upgradable to: 9.5.0.50-1]; ```. ### ROOT version. Master. ### Installation method. Source. ### Operating system. Ubuntu with cuda-12-6. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:2093,Deployability,install,installed,2093,"n/cmake -E cmake_link_script CMakeFiles/TMVA.dir/link.txt --verbose=1; /usr/bin/c++ -fPIC -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual; [...]; /usr/bin/ld: CMakeFiles/TMVA.dir/src/DNN/Architectures/Cudnn.cu.o: in function `TMVA::DNN::cudnnError(cudnnStatus_t, char const*, int, bool) [clone .part.0] [clone .constprop.1]':; tmpxft_0001274b_00000000-6_Cudnn.cudafe1.cpp:(.text+0x1b): undefined reference to `cudnnGetErrorString'; /usr/bin/ld: CMakeFiles/TMVA.dir/src/DNN/Architectures/Cudnn.cu.o: in function `TMVA::DNN::cudnnError(cudnnStatus_t, char const*, int, bool) [clone .part.0] [clone .constprop.2]':; tmpxft_0001274b_00000000-6_Cudnn.cudafe1.cpp:(.text+0x5b): undefined reference to `cudnnGetErrorString'; [...]; ```. I believe the way to trick it is to set `tmva-cudnn=ON`. It looks like users were not supposed to touch it, instead they should have set `-Dcudnn=On`. Setting the latter, the following code runs:; https://github.com/root-project/root/blob/45f13f0c6e145b0ddef82bf049a43fbe4870381b/cmake/modules/SearchInstalledSoftware.cmake#L1638-L1654. Instead, I set `tmva-cudnn` directly, the code above doesn't run, and tmva fails to link because the location of cudnn is never discovered. Maybe, one of `cudnn` or `tmva-cudnn` should be removed, and only a single flag should enable or disable it. ### Reproducer. On ubuntu with cuda and cudnn, I did:; ```; (ROOT-CI) root@102b09e3cf56:~/build# cmake -Dtmva-gpu=On -Dtesting=On -Dtmva-cudnn=On -Dbuiltin_openui5=Off -Dclad=Off -Dgdml=Off -Dgeom=Off -Dopengl=Off -Droot7=Off -Dspectrum=Off -Droofit=Off -Dvdt=Off ../root; ```. ```; $ apt list --installed | grep cudnn; libcudnn9-cuda-12/unknown,now 9.3.0.75-1 amd64 [installed,upgradable to: 9.5.0.50-1]; libcudnn9-dev-cuda-12/unknown,now 9.3.0.75-1 amd64 [installed,upgradable to: 9.5.0.50-1]; ```. ### ROOT version. Master. ### Installation method. Source. ### Operating system. Ubuntu with cuda-12-6. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:2166,Deployability,Install,Installation,2166,"n/cmake -E cmake_link_script CMakeFiles/TMVA.dir/link.txt --verbose=1; /usr/bin/c++ -fPIC -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual; [...]; /usr/bin/ld: CMakeFiles/TMVA.dir/src/DNN/Architectures/Cudnn.cu.o: in function `TMVA::DNN::cudnnError(cudnnStatus_t, char const*, int, bool) [clone .part.0] [clone .constprop.1]':; tmpxft_0001274b_00000000-6_Cudnn.cudafe1.cpp:(.text+0x1b): undefined reference to `cudnnGetErrorString'; /usr/bin/ld: CMakeFiles/TMVA.dir/src/DNN/Architectures/Cudnn.cu.o: in function `TMVA::DNN::cudnnError(cudnnStatus_t, char const*, int, bool) [clone .part.0] [clone .constprop.2]':; tmpxft_0001274b_00000000-6_Cudnn.cudafe1.cpp:(.text+0x5b): undefined reference to `cudnnGetErrorString'; [...]; ```. I believe the way to trick it is to set `tmva-cudnn=ON`. It looks like users were not supposed to touch it, instead they should have set `-Dcudnn=On`. Setting the latter, the following code runs:; https://github.com/root-project/root/blob/45f13f0c6e145b0ddef82bf049a43fbe4870381b/cmake/modules/SearchInstalledSoftware.cmake#L1638-L1654. Instead, I set `tmva-cudnn` directly, the code above doesn't run, and tmva fails to link because the location of cudnn is never discovered. Maybe, one of `cudnn` or `tmva-cudnn` should be removed, and only a single flag should enable or disable it. ### Reproducer. On ubuntu with cuda and cudnn, I did:; ```; (ROOT-CI) root@102b09e3cf56:~/build# cmake -Dtmva-gpu=On -Dtesting=On -Dtmva-cudnn=On -Dbuiltin_openui5=Off -Dclad=Off -Dgdml=Off -Dgeom=Off -Dopengl=Off -Droot7=Off -Dspectrum=Off -Droofit=Off -Dvdt=Off ../root; ```. ```; $ apt list --installed | grep cudnn; libcudnn9-cuda-12/unknown,now 9.3.0.75-1 amd64 [installed,upgradable to: 9.5.0.50-1]; libcudnn9-dev-cuda-12/unknown,now 9.3.0.75-1 amd64 [installed,upgradable to: 9.5.0.50-1]; ```. ### ROOT version. Master. ### Installation method. Source. ### Operating system. Ubuntu with cuda-12-6. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/issues/16715:97,Modifiability,config,configure,97,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. It seems that one can configure tmva into a state that cudnn is disabled, but it's still trying to link:; ```; [ 78%] Linking CXX shared library ../../lib/libTMVA.so; cd /root/build/tmva/tmva && /usr/bin/cmake -E cmake_link_script CMakeFiles/TMVA.dir/link.txt --verbose=1; /usr/bin/c++ -fPIC -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual; [...]; /usr/bin/ld: CMakeFiles/TMVA.dir/src/DNN/Architectures/Cudnn.cu.o: in function `TMVA::DNN::cudnnError(cudnnStatus_t, char const*, int, bool) [clone .part.0] [clone .constprop.1]':; tmpxft_0001274b_00000000-6_Cudnn.cudafe1.cpp:(.text+0x1b): undefined reference to `cudnnGetErrorString'; /usr/bin/ld: CMakeFiles/TMVA.dir/src/DNN/Architectures/Cudnn.cu.o: in function `TMVA::DNN::cudnnError(cudnnStatus_t, char const*, int, bool) [clone .part.0] [clone .constprop.2]':; tmpxft_0001274b_00000000-6_Cudnn.cudafe1.cpp:(.text+0x5b): undefined reference to `cudnnGetErrorString'; [...]; ```. I believe the way to trick it is to set `tmva-cudnn=ON`. It looks like users were not supposed to touch it, instead they should have set `-Dcudnn=On`. Setting the latter, the following code runs:; https://github.com/root-project/root/blob/45f13f0c6e145b0ddef82bf049a43fbe4870381b/cmake/modules/SearchInstalledSoftware.cmake#L1638-L1654. Instead, I set `tmva-cudnn` directly, the code above doesn't run, and tmva fails to link because the location of cudnn is never discovered. Maybe, one of `cudnn` or `tmva-cudnn` should be removed, and only a single flag should enable or disable it. ### Reproducer. On ubuntu with cuda and cudnn, I did:; ```; (ROOT-CI) root@102b09e3cf56:~/build# cmake -Dtmva-gpu=On -Dtesting=On -Dtmva-cudnn=On -Dbuiltin_openui5=Off -Dclad=Off -Dgdml=Off -Dgeom=Off -Dopengl=Off -Droot7=Off -Dspectrum=Off -Droofit=Off -Dvdt=Off ../root; ```. ```; $ apt list --installed | grep cudnn; libcudnn9-cuda-12/unknown,now 9.3.0.75-1 amd64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16715
https://github.com/root-project/root/pull/16717:604,Integrability,wrap,wrapped,604,"Set the environment for the tutorials, which is the eventual ROOT_environ plus some environment variables related to limiting the number of threads used by NumPy.; See: https://stackoverflow.com/questions/30791550/limit-number-of-threads-in-numpy. Possibly related to #16552, but the main motivation is to avoid an excessive number of threads when running the RooFit tutorials for simulation based inference. So far, the environment was set inside these tutorials, but this is distracting to users who look at these tutorials. Also, make sure that the same environment is used for all tutorials that are wrapped in `ROOT_ADD_TEST`. Furthermore, remove unused helper function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16717
https://github.com/root-project/root/pull/16717:96,Modifiability,variab,variables,96,"Set the environment for the tutorials, which is the eventual ROOT_environ plus some environment variables related to limiting the number of threads used by NumPy.; See: https://stackoverflow.com/questions/30791550/limit-number-of-threads-in-numpy. Possibly related to #16552, but the main motivation is to avoid an excessive number of threads when running the RooFit tutorials for simulation based inference. So far, the environment was set inside these tutorials, but this is distracting to users who look at these tutorials. Also, make sure that the same environment is used for all tutorials that are wrapped in `ROOT_ADD_TEST`. Furthermore, remove unused helper function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16717
https://github.com/root-project/root/pull/16717:306,Safety,avoid,avoid,306,"Set the environment for the tutorials, which is the eventual ROOT_environ plus some environment variables related to limiting the number of threads used by NumPy.; See: https://stackoverflow.com/questions/30791550/limit-number-of-threads-in-numpy. Possibly related to #16552, but the main motivation is to avoid an excessive number of threads when running the RooFit tutorials for simulation based inference. So far, the environment was set inside these tutorials, but this is distracting to users who look at these tutorials. Also, make sure that the same environment is used for all tutorials that are wrapped in `ROOT_ADD_TEST`. Furthermore, remove unused helper function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16717
https://github.com/root-project/root/issues/16719:303,Availability,failure,failure,303,"Doing:; ```; ctest -R tmva -j 32; ```; will result in an arbitrary result (sometimes pass sometime fail) for; ```; gtest-tmva-pymva-TestRModelParserKeras; gtest-tmva-pymva-TestRModelParserPyTorch ; ```; re-running just those tests (whether they succeeded or not) will lead to both of them failing.; The failure report is indicate that they 'now' need the BLAS library (which is not available on the system). As a possible clue (or not), the following 3 test fails systemically on the system due to the missing BLAS library:; ```; 996 - tutorial-tmva-TMVA_SOFIE_GNN_Application (Failed); 1000 - tutorial-tmva-TMVA_SOFIE_RDataFrame (Failed); 1002 - tutorial-tmva-TMVA_SOFIE_RSofieReader (Failed); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:382,Availability,avail,available,382,"Doing:; ```; ctest -R tmva -j 32; ```; will result in an arbitrary result (sometimes pass sometime fail) for; ```; gtest-tmva-pymva-TestRModelParserKeras; gtest-tmva-pymva-TestRModelParserPyTorch ; ```; re-running just those tests (whether they succeeded or not) will lead to both of them failing.; The failure report is indicate that they 'now' need the BLAS library (which is not available on the system). As a possible clue (or not), the following 3 test fails systemically on the system due to the missing BLAS library:; ```; 996 - tutorial-tmva-TMVA_SOFIE_GNN_Application (Failed); 1000 - tutorial-tmva-TMVA_SOFIE_RDataFrame (Failed); 1002 - tutorial-tmva-TMVA_SOFIE_RSofieReader (Failed); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:132,Testability,Test,TestRModelParserKeras,132,"Doing:; ```; ctest -R tmva -j 32; ```; will result in an arbitrary result (sometimes pass sometime fail) for; ```; gtest-tmva-pymva-TestRModelParserKeras; gtest-tmva-pymva-TestRModelParserPyTorch ; ```; re-running just those tests (whether they succeeded or not) will lead to both of them failing.; The failure report is indicate that they 'now' need the BLAS library (which is not available on the system). As a possible clue (or not), the following 3 test fails systemically on the system due to the missing BLAS library:; ```; 996 - tutorial-tmva-TMVA_SOFIE_GNN_Application (Failed); 1000 - tutorial-tmva-TMVA_SOFIE_RDataFrame (Failed); 1002 - tutorial-tmva-TMVA_SOFIE_RSofieReader (Failed); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:172,Testability,Test,TestRModelParserPyTorch,172,"Doing:; ```; ctest -R tmva -j 32; ```; will result in an arbitrary result (sometimes pass sometime fail) for; ```; gtest-tmva-pymva-TestRModelParserKeras; gtest-tmva-pymva-TestRModelParserPyTorch ; ```; re-running just those tests (whether they succeeded or not) will lead to both of them failing.; The failure report is indicate that they 'now' need the BLAS library (which is not available on the system). As a possible clue (or not), the following 3 test fails systemically on the system due to the missing BLAS library:; ```; 996 - tutorial-tmva-TMVA_SOFIE_GNN_Application (Failed); 1000 - tutorial-tmva-TMVA_SOFIE_RDataFrame (Failed); 1002 - tutorial-tmva-TMVA_SOFIE_RSofieReader (Failed); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:225,Testability,test,tests,225,"Doing:; ```; ctest -R tmva -j 32; ```; will result in an arbitrary result (sometimes pass sometime fail) for; ```; gtest-tmva-pymva-TestRModelParserKeras; gtest-tmva-pymva-TestRModelParserPyTorch ; ```; re-running just those tests (whether they succeeded or not) will lead to both of them failing.; The failure report is indicate that they 'now' need the BLAS library (which is not available on the system). As a possible clue (or not), the following 3 test fails systemically on the system due to the missing BLAS library:; ```; 996 - tutorial-tmva-TMVA_SOFIE_GNN_Application (Failed); 1000 - tutorial-tmva-TMVA_SOFIE_RDataFrame (Failed); 1002 - tutorial-tmva-TMVA_SOFIE_RSofieReader (Failed); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16719:453,Testability,test,test,453,"Doing:; ```; ctest -R tmva -j 32; ```; will result in an arbitrary result (sometimes pass sometime fail) for; ```; gtest-tmva-pymva-TestRModelParserKeras; gtest-tmva-pymva-TestRModelParserPyTorch ; ```; re-running just those tests (whether they succeeded or not) will lead to both of them failing.; The failure report is indicate that they 'now' need the BLAS library (which is not available on the system). As a possible clue (or not), the following 3 test fails systemically on the system due to the missing BLAS library:; ```; 996 - tutorial-tmva-TMVA_SOFIE_GNN_Application (Failed); 1000 - tutorial-tmva-TMVA_SOFIE_RDataFrame (Failed); 1002 - tutorial-tmva-TMVA_SOFIE_RSofieReader (Failed); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16719
https://github.com/root-project/root/issues/16720:71,Testability,test,tests,71,See https://github.com/root-project/root/issues/16553. The following 3 tests fails consistently with missing BLAS symbols; ```; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 353-gtest-tmva-pymva-TestRModelParserKeras; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/issues/16720:279,Testability,Test,TestRModelParserKeras,279,See https://github.com/root-project/root/issues/16553. The following 3 tests fails consistently with missing BLAS symbols; ```; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 353-gtest-tmva-pymva-TestRModelParserKeras; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16720
https://github.com/root-project/root/pull/16721:572,Performance,perform,performant,572,"* Mark (most) `RField` specializations as `final`; the only exception is `RField<std::array<ItemT, N>>` which is the base class of `RField<ItemT[N]>`.; * Mark (most) overriden functions in the `RFieldBase` hierarchy as final; the only exception is `RSimpleField::GenerateColumns` which is overriden by `RRealField`.; * Remove many duplicate implementations in the compile-time specialized classes: The reasoning is that we use the type-erased implementations with `RFieldBase::Create`, when reconstructing a model from disk, or when `Clone`ing a model. So if they are not performant, we have to fix them anyway. For completeness, there seems to be no performance change in the `iotools` benchmarks (with hot cache, to put emphasis on the RNTuple implementation).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16721
https://github.com/root-project/root/pull/16721:651,Performance,perform,performance,651,"* Mark (most) `RField` specializations as `final`; the only exception is `RField<std::array<ItemT, N>>` which is the base class of `RField<ItemT[N]>`.; * Mark (most) overriden functions in the `RFieldBase` hierarchy as final; the only exception is `RSimpleField::GenerateColumns` which is overriden by `RRealField`.; * Remove many duplicate implementations in the compile-time specialized classes: The reasoning is that we use the type-erased implementations with `RFieldBase::Create`, when reconstructing a model from disk, or when `Clone`ing a model. So if they are not performant, we have to fix them anyway. For completeness, there seems to be no performance change in the `iotools` benchmarks (with hot cache, to put emphasis on the RNTuple implementation).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16721
https://github.com/root-project/root/pull/16721:708,Performance,cache,cache,708,"* Mark (most) `RField` specializations as `final`; the only exception is `RField<std::array<ItemT, N>>` which is the base class of `RField<ItemT[N]>`.; * Mark (most) overriden functions in the `RFieldBase` hierarchy as final; the only exception is `RSimpleField::GenerateColumns` which is overriden by `RRealField`.; * Remove many duplicate implementations in the compile-time specialized classes: The reasoning is that we use the type-erased implementations with `RFieldBase::Create`, when reconstructing a model from disk, or when `Clone`ing a model. So if they are not performant, we have to fix them anyway. For completeness, there seems to be no performance change in the `iotools` benchmarks (with hot cache, to put emphasis on the RNTuple implementation).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16721
https://github.com/root-project/root/pull/16721:687,Testability,benchmark,benchmarks,687,"* Mark (most) `RField` specializations as `final`; the only exception is `RField<std::array<ItemT, N>>` which is the base class of `RField<ItemT[N]>`.; * Mark (most) overriden functions in the `RFieldBase` hierarchy as final; the only exception is `RSimpleField::GenerateColumns` which is overriden by `RRealField`.; * Remove many duplicate implementations in the compile-time specialized classes: The reasoning is that we use the type-erased implementations with `RFieldBase::Create`, when reconstructing a model from disk, or when `Clone`ing a model. So if they are not performant, we have to fix them anyway. For completeness, there seems to be no performance change in the `iotools` benchmarks (with hot cache, to put emphasis on the RNTuple implementation).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16721
https://github.com/root-project/root/pull/16724:476,Deployability,Install,Install,476,"# This Pull request:; Continue Adrian's work: This draft PR for testing the doxygen generation GitHub action with our self-hosted runners.; Uses our existing Makefile setup. Initial PR #16046. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the Doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions support defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16724
https://github.com/root-project/root/pull/16724:683,Deployability,release,releases,683,"# This Pull request:; Continue Adrian's work: This draft PR for testing the doxygen generation GitHub action with our self-hosted runners.; Uses our existing Makefile setup. Initial PR #16046. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the Doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions support defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16724
https://github.com/root-project/root/pull/16724:943,Integrability,depend,dependencies,943,"# This Pull request:; Continue Adrian's work: This draft PR for testing the doxygen generation GitHub action with our self-hosted runners.; Uses our existing Makefile setup. Initial PR #16046. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the Doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions support defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16724
https://github.com/root-project/root/pull/16724:699,Performance,OPTIMIZ,OPTIMIZATION,699,"# This Pull request:; Continue Adrian's work: This draft PR for testing the doxygen generation GitHub action with our self-hosted runners.; Uses our existing Makefile setup. Initial PR #16046. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the Doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions support defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16724
https://github.com/root-project/root/pull/16724:64,Testability,test,testing,64,"# This Pull request:; Continue Adrian's work: This draft PR for testing the doxygen generation GitHub action with our self-hosted runners.; Uses our existing Makefile setup. Initial PR #16046. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the Doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions support defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16724
https://github.com/root-project/root/pull/16724:292,Testability,test,tests,292,"# This Pull request:; Continue Adrian's work: This draft PR for testing the doxygen generation GitHub action with our self-hosted runners.; Uses our existing Makefile setup. Initial PR #16046. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the Doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions support defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16724
https://github.com/root-project/root/pull/16724:408,Testability,Test,Test,408,"# This Pull request:; Continue Adrian's work: This draft PR for testing the doxygen generation GitHub action with our self-hosted runners.; Uses our existing Makefile setup. Initial PR #16046. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the Doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions support defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16724
https://github.com/root-project/root/issues/16725:2096,Deployability,Install,Installation,2096,"ing since moving to ROOT 6.32 on AlmaLinux 9.4. It worked fine with 6.20.04 running on Centos7. The library for accessing the TTree information was created using MakeProject. . ### Reproducer. This is the python code that crashes; ```; #!/usr/bin/env python3; import os; import ROOT; import argparse. parser = argparse.ArgumentParser(description='Analyse events.'); parser.add_argument(""inputfile""); parser.add_argument(""-o"",""--outputfile"",default=""Output.root"",help=""Name of output file""); args = parser.parse_args(). READEVENTANALYSISLIBRARY=ROOT.gSystem.Getenv(""READEVENTANALYSISLIBRARY"");; ROOT.gSystem.Load(READEVENTANALYSISLIBRARY);. globalRecon = ROOT.TChain(""ReconDir/Global""); globalRecon.AddFile(args.inputfile). OutputFile = ROOT.TFile(args.outputfile,""RECREATE"",""ND280 Analysis""); hTrackMomenta = ROOT.TH1F(""TrackMomenta"", ""Charged Track Momentum"", 100, 0, 1000.0). entries = globalRecon.GetEntries(); for entry in range(entries):; 	print("" entry = ""+str(entry)); 	ientry = globalRecon.LoadTree(entry); 	if ientry < 0:; 		break; 	nb = globalRecon.GetEntry(entry); 	if nb<=0:; 		continue; 	; 	for	pid in globalRecon.PIDs :; 		if(pid.Charge != 0) :; 			print("" charge is ""+str(pid.Charge)); 		#	hTrackMomenta.Fill(pid.FrontMomentum); OutputFile.Write(); OutputFile.Close(); ```. The crash traceback suggest this as the line causing the crash:. #7 0x00007fe963a68e9a in TBranchElement::ReadLeavesClones(TBuffer&) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #8 0x00007fe963a60899 in TBranch::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #9 0x00007fe963a7326b in TBranchElement::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #10 0x00007fe963ad7300 in TTree::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so. ### ROOT version. 6.32.00 . ### Installation method. prebuilt binary root_v6.32.00.Linux-almalinux9.4-x86_64-gcc11.4.tar.gz. ### Operating system. AlmaLinux 9.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16725
https://github.com/root-project/root/issues/16725:1099,Energy Efficiency,Charge,Charged,1099,"when reading a TFile containing a TTree containing a TClonesArray. It appears to crash the second time it accesses the TClonesArray. This has started happening since moving to ROOT 6.32 on AlmaLinux 9.4. It worked fine with 6.20.04 running on Centos7. The library for accessing the TTree information was created using MakeProject. . ### Reproducer. This is the python code that crashes; ```; #!/usr/bin/env python3; import os; import ROOT; import argparse. parser = argparse.ArgumentParser(description='Analyse events.'); parser.add_argument(""inputfile""); parser.add_argument(""-o"",""--outputfile"",default=""Output.root"",help=""Name of output file""); args = parser.parse_args(). READEVENTANALYSISLIBRARY=ROOT.gSystem.Getenv(""READEVENTANALYSISLIBRARY"");; ROOT.gSystem.Load(READEVENTANALYSISLIBRARY);. globalRecon = ROOT.TChain(""ReconDir/Global""); globalRecon.AddFile(args.inputfile). OutputFile = ROOT.TFile(args.outputfile,""RECREATE"",""ND280 Analysis""); hTrackMomenta = ROOT.TH1F(""TrackMomenta"", ""Charged Track Momentum"", 100, 0, 1000.0). entries = globalRecon.GetEntries(); for entry in range(entries):; 	print("" entry = ""+str(entry)); 	ientry = globalRecon.LoadTree(entry); 	if ientry < 0:; 		break; 	nb = globalRecon.GetEntry(entry); 	if nb<=0:; 		continue; 	; 	for	pid in globalRecon.PIDs :; 		if(pid.Charge != 0) :; 			print("" charge is ""+str(pid.Charge)); 		#	hTrackMomenta.Fill(pid.FrontMomentum); OutputFile.Write(); OutputFile.Close(); ```. The crash traceback suggest this as the line causing the crash:. #7 0x00007fe963a68e9a in TBranchElement::ReadLeavesClones(TBuffer&) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #8 0x00007fe963a60899 in TBranch::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #9 0x00007fe963a7326b in TBranchElement::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #10 0x00007fe963ad7300 in TTree::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so. ### ROOT version. 6.32.00 . ### Installatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16725
https://github.com/root-project/root/issues/16725:1407,Energy Efficiency,Charge,Charge,1407,"ing since moving to ROOT 6.32 on AlmaLinux 9.4. It worked fine with 6.20.04 running on Centos7. The library for accessing the TTree information was created using MakeProject. . ### Reproducer. This is the python code that crashes; ```; #!/usr/bin/env python3; import os; import ROOT; import argparse. parser = argparse.ArgumentParser(description='Analyse events.'); parser.add_argument(""inputfile""); parser.add_argument(""-o"",""--outputfile"",default=""Output.root"",help=""Name of output file""); args = parser.parse_args(). READEVENTANALYSISLIBRARY=ROOT.gSystem.Getenv(""READEVENTANALYSISLIBRARY"");; ROOT.gSystem.Load(READEVENTANALYSISLIBRARY);. globalRecon = ROOT.TChain(""ReconDir/Global""); globalRecon.AddFile(args.inputfile). OutputFile = ROOT.TFile(args.outputfile,""RECREATE"",""ND280 Analysis""); hTrackMomenta = ROOT.TH1F(""TrackMomenta"", ""Charged Track Momentum"", 100, 0, 1000.0). entries = globalRecon.GetEntries(); for entry in range(entries):; 	print("" entry = ""+str(entry)); 	ientry = globalRecon.LoadTree(entry); 	if ientry < 0:; 		break; 	nb = globalRecon.GetEntry(entry); 	if nb<=0:; 		continue; 	; 	for	pid in globalRecon.PIDs :; 		if(pid.Charge != 0) :; 			print("" charge is ""+str(pid.Charge)); 		#	hTrackMomenta.Fill(pid.FrontMomentum); OutputFile.Write(); OutputFile.Close(); ```. The crash traceback suggest this as the line causing the crash:. #7 0x00007fe963a68e9a in TBranchElement::ReadLeavesClones(TBuffer&) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #8 0x00007fe963a60899 in TBranch::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #9 0x00007fe963a7326b in TBranchElement::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #10 0x00007fe963ad7300 in TTree::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so. ### ROOT version. 6.32.00 . ### Installation method. prebuilt binary root_v6.32.00.Linux-almalinux9.4-x86_64-gcc11.4.tar.gz. ### Operating system. AlmaLinux 9.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16725
https://github.com/root-project/root/issues/16725:1434,Energy Efficiency,charge,charge,1434,"ing since moving to ROOT 6.32 on AlmaLinux 9.4. It worked fine with 6.20.04 running on Centos7. The library for accessing the TTree information was created using MakeProject. . ### Reproducer. This is the python code that crashes; ```; #!/usr/bin/env python3; import os; import ROOT; import argparse. parser = argparse.ArgumentParser(description='Analyse events.'); parser.add_argument(""inputfile""); parser.add_argument(""-o"",""--outputfile"",default=""Output.root"",help=""Name of output file""); args = parser.parse_args(). READEVENTANALYSISLIBRARY=ROOT.gSystem.Getenv(""READEVENTANALYSISLIBRARY"");; ROOT.gSystem.Load(READEVENTANALYSISLIBRARY);. globalRecon = ROOT.TChain(""ReconDir/Global""); globalRecon.AddFile(args.inputfile). OutputFile = ROOT.TFile(args.outputfile,""RECREATE"",""ND280 Analysis""); hTrackMomenta = ROOT.TH1F(""TrackMomenta"", ""Charged Track Momentum"", 100, 0, 1000.0). entries = globalRecon.GetEntries(); for entry in range(entries):; 	print("" entry = ""+str(entry)); 	ientry = globalRecon.LoadTree(entry); 	if ientry < 0:; 		break; 	nb = globalRecon.GetEntry(entry); 	if nb<=0:; 		continue; 	; 	for	pid in globalRecon.PIDs :; 		if(pid.Charge != 0) :; 			print("" charge is ""+str(pid.Charge)); 		#	hTrackMomenta.Fill(pid.FrontMomentum); OutputFile.Write(); OutputFile.Close(); ```. The crash traceback suggest this as the line causing the crash:. #7 0x00007fe963a68e9a in TBranchElement::ReadLeavesClones(TBuffer&) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #8 0x00007fe963a60899 in TBranch::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #9 0x00007fe963a7326b in TBranchElement::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #10 0x00007fe963ad7300 in TTree::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so. ### ROOT version. 6.32.00 . ### Installation method. prebuilt binary root_v6.32.00.Linux-almalinux9.4-x86_64-gcc11.4.tar.gz. ### Operating system. AlmaLinux 9.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16725
https://github.com/root-project/root/issues/16725:1454,Energy Efficiency,Charge,Charge,1454,"ing since moving to ROOT 6.32 on AlmaLinux 9.4. It worked fine with 6.20.04 running on Centos7. The library for accessing the TTree information was created using MakeProject. . ### Reproducer. This is the python code that crashes; ```; #!/usr/bin/env python3; import os; import ROOT; import argparse. parser = argparse.ArgumentParser(description='Analyse events.'); parser.add_argument(""inputfile""); parser.add_argument(""-o"",""--outputfile"",default=""Output.root"",help=""Name of output file""); args = parser.parse_args(). READEVENTANALYSISLIBRARY=ROOT.gSystem.Getenv(""READEVENTANALYSISLIBRARY"");; ROOT.gSystem.Load(READEVENTANALYSISLIBRARY);. globalRecon = ROOT.TChain(""ReconDir/Global""); globalRecon.AddFile(args.inputfile). OutputFile = ROOT.TFile(args.outputfile,""RECREATE"",""ND280 Analysis""); hTrackMomenta = ROOT.TH1F(""TrackMomenta"", ""Charged Track Momentum"", 100, 0, 1000.0). entries = globalRecon.GetEntries(); for entry in range(entries):; 	print("" entry = ""+str(entry)); 	ientry = globalRecon.LoadTree(entry); 	if ientry < 0:; 		break; 	nb = globalRecon.GetEntry(entry); 	if nb<=0:; 		continue; 	; 	for	pid in globalRecon.PIDs :; 		if(pid.Charge != 0) :; 			print("" charge is ""+str(pid.Charge)); 		#	hTrackMomenta.Fill(pid.FrontMomentum); OutputFile.Write(); OutputFile.Close(); ```. The crash traceback suggest this as the line causing the crash:. #7 0x00007fe963a68e9a in TBranchElement::ReadLeavesClones(TBuffer&) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #8 0x00007fe963a60899 in TBranch::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #9 0x00007fe963a7326b in TBranchElement::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #10 0x00007fe963ad7300 in TTree::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so. ### ROOT version. 6.32.00 . ### Installation method. prebuilt binary root_v6.32.00.Linux-almalinux9.4-x86_64-gcc11.4.tar.gz. ### Operating system. AlmaLinux 9.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16725
https://github.com/root-project/root/issues/16725:870,Performance,Load,Load,870,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. A pyroot python program crashes when reading a TFile containing a TTree containing a TClonesArray. It appears to crash the second time it accesses the TClonesArray. This has started happening since moving to ROOT 6.32 on AlmaLinux 9.4. It worked fine with 6.20.04 running on Centos7. The library for accessing the TTree information was created using MakeProject. . ### Reproducer. This is the python code that crashes; ```; #!/usr/bin/env python3; import os; import ROOT; import argparse. parser = argparse.ArgumentParser(description='Analyse events.'); parser.add_argument(""inputfile""); parser.add_argument(""-o"",""--outputfile"",default=""Output.root"",help=""Name of output file""); args = parser.parse_args(). READEVENTANALYSISLIBRARY=ROOT.gSystem.Getenv(""READEVENTANALYSISLIBRARY"");; ROOT.gSystem.Load(READEVENTANALYSISLIBRARY);. globalRecon = ROOT.TChain(""ReconDir/Global""); globalRecon.AddFile(args.inputfile). OutputFile = ROOT.TFile(args.outputfile,""RECREATE"",""ND280 Analysis""); hTrackMomenta = ROOT.TH1F(""TrackMomenta"", ""Charged Track Momentum"", 100, 0, 1000.0). entries = globalRecon.GetEntries(); for entry in range(entries):; 	print("" entry = ""+str(entry)); 	ientry = globalRecon.LoadTree(entry); 	if ientry < 0:; 		break; 	nb = globalRecon.GetEntry(entry); 	if nb<=0:; 		continue; 	; 	for	pid in globalRecon.PIDs :; 		if(pid.Charge != 0) :; 			print("" charge is ""+str(pid.Charge)); 		#	hTrackMomenta.Fill(pid.FrontMomentum); OutputFile.Write(); OutputFile.Close(); ```. The crash traceback suggest this as the line causing the crash:. #7 0x00007fe963a68e9a in TBranchElement::ReadLeavesClones(TBuffer&) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #8 0x00007fe963a60899 in TBranch::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #9 0x00007fe963a7326b in TBranchElement::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #10 0x00007fe963ad7300 in TTree::GetEntry(lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16725
https://github.com/root-project/root/issues/16725:1261,Performance,Load,LoadTree,1261,"ing since moving to ROOT 6.32 on AlmaLinux 9.4. It worked fine with 6.20.04 running on Centos7. The library for accessing the TTree information was created using MakeProject. . ### Reproducer. This is the python code that crashes; ```; #!/usr/bin/env python3; import os; import ROOT; import argparse. parser = argparse.ArgumentParser(description='Analyse events.'); parser.add_argument(""inputfile""); parser.add_argument(""-o"",""--outputfile"",default=""Output.root"",help=""Name of output file""); args = parser.parse_args(). READEVENTANALYSISLIBRARY=ROOT.gSystem.Getenv(""READEVENTANALYSISLIBRARY"");; ROOT.gSystem.Load(READEVENTANALYSISLIBRARY);. globalRecon = ROOT.TChain(""ReconDir/Global""); globalRecon.AddFile(args.inputfile). OutputFile = ROOT.TFile(args.outputfile,""RECREATE"",""ND280 Analysis""); hTrackMomenta = ROOT.TH1F(""TrackMomenta"", ""Charged Track Momentum"", 100, 0, 1000.0). entries = globalRecon.GetEntries(); for entry in range(entries):; 	print("" entry = ""+str(entry)); 	ientry = globalRecon.LoadTree(entry); 	if ientry < 0:; 		break; 	nb = globalRecon.GetEntry(entry); 	if nb<=0:; 		continue; 	; 	for	pid in globalRecon.PIDs :; 		if(pid.Charge != 0) :; 			print("" charge is ""+str(pid.Charge)); 		#	hTrackMomenta.Fill(pid.FrontMomentum); OutputFile.Write(); OutputFile.Close(); ```. The crash traceback suggest this as the line causing the crash:. #7 0x00007fe963a68e9a in TBranchElement::ReadLeavesClones(TBuffer&) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #8 0x00007fe963a60899 in TBranch::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #9 0x00007fe963a7326b in TBranchElement::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #10 0x00007fe963ad7300 in TTree::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so. ### ROOT version. 6.32.00 . ### Installation method. prebuilt binary root_v6.32.00.Linux-almalinux9.4-x86_64-gcc11.4.tar.gz. ### Operating system. AlmaLinux 9.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16725
https://github.com/root-project/root/issues/16725:213,Security,access,accesses,213,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. A pyroot python program crashes when reading a TFile containing a TTree containing a TClonesArray. It appears to crash the second time it accesses the TClonesArray. This has started happening since moving to ROOT 6.32 on AlmaLinux 9.4. It worked fine with 6.20.04 running on Centos7. The library for accessing the TTree information was created using MakeProject. . ### Reproducer. This is the python code that crashes; ```; #!/usr/bin/env python3; import os; import ROOT; import argparse. parser = argparse.ArgumentParser(description='Analyse events.'); parser.add_argument(""inputfile""); parser.add_argument(""-o"",""--outputfile"",default=""Output.root"",help=""Name of output file""); args = parser.parse_args(). READEVENTANALYSISLIBRARY=ROOT.gSystem.Getenv(""READEVENTANALYSISLIBRARY"");; ROOT.gSystem.Load(READEVENTANALYSISLIBRARY);. globalRecon = ROOT.TChain(""ReconDir/Global""); globalRecon.AddFile(args.inputfile). OutputFile = ROOT.TFile(args.outputfile,""RECREATE"",""ND280 Analysis""); hTrackMomenta = ROOT.TH1F(""TrackMomenta"", ""Charged Track Momentum"", 100, 0, 1000.0). entries = globalRecon.GetEntries(); for entry in range(entries):; 	print("" entry = ""+str(entry)); 	ientry = globalRecon.LoadTree(entry); 	if ientry < 0:; 		break; 	nb = globalRecon.GetEntry(entry); 	if nb<=0:; 		continue; 	; 	for	pid in globalRecon.PIDs :; 		if(pid.Charge != 0) :; 			print("" charge is ""+str(pid.Charge)); 		#	hTrackMomenta.Fill(pid.FrontMomentum); OutputFile.Write(); OutputFile.Close(); ```. The crash traceback suggest this as the line causing the crash:. #7 0x00007fe963a68e9a in TBranchElement::ReadLeavesClones(TBuffer&) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #8 0x00007fe963a60899 in TBranch::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #9 0x00007fe963a7326b in TBranchElement::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #10 0x00007fe963ad7300 in TTree::GetEntry(lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16725
https://github.com/root-project/root/issues/16725:375,Security,access,accessing,375,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. A pyroot python program crashes when reading a TFile containing a TTree containing a TClonesArray. It appears to crash the second time it accesses the TClonesArray. This has started happening since moving to ROOT 6.32 on AlmaLinux 9.4. It worked fine with 6.20.04 running on Centos7. The library for accessing the TTree information was created using MakeProject. . ### Reproducer. This is the python code that crashes; ```; #!/usr/bin/env python3; import os; import ROOT; import argparse. parser = argparse.ArgumentParser(description='Analyse events.'); parser.add_argument(""inputfile""); parser.add_argument(""-o"",""--outputfile"",default=""Output.root"",help=""Name of output file""); args = parser.parse_args(). READEVENTANALYSISLIBRARY=ROOT.gSystem.Getenv(""READEVENTANALYSISLIBRARY"");; ROOT.gSystem.Load(READEVENTANALYSISLIBRARY);. globalRecon = ROOT.TChain(""ReconDir/Global""); globalRecon.AddFile(args.inputfile). OutputFile = ROOT.TFile(args.outputfile,""RECREATE"",""ND280 Analysis""); hTrackMomenta = ROOT.TH1F(""TrackMomenta"", ""Charged Track Momentum"", 100, 0, 1000.0). entries = globalRecon.GetEntries(); for entry in range(entries):; 	print("" entry = ""+str(entry)); 	ientry = globalRecon.LoadTree(entry); 	if ientry < 0:; 		break; 	nb = globalRecon.GetEntry(entry); 	if nb<=0:; 		continue; 	; 	for	pid in globalRecon.PIDs :; 		if(pid.Charge != 0) :; 			print("" charge is ""+str(pid.Charge)); 		#	hTrackMomenta.Fill(pid.FrontMomentum); OutputFile.Write(); OutputFile.Close(); ```. The crash traceback suggest this as the line causing the crash:. #7 0x00007fe963a68e9a in TBranchElement::ReadLeavesClones(TBuffer&) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #8 0x00007fe963a60899 in TBranch::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #9 0x00007fe963a7326b in TBranchElement::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #10 0x00007fe963ad7300 in TTree::GetEntry(lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16725
https://github.com/root-project/root/pull/16726:249,Deployability,update,updated,249,# This Pull request:; This Pull request adds the support for Clip operator in SOFIE. ## Changes or fixes:; Implemented the Operator Class files and also included tests and onnx models for the same. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16726
https://github.com/root-project/root/pull/16726:162,Testability,test,tests,162,# This Pull request:; This Pull request adds the support for Clip operator in SOFIE. ## Changes or fixes:; Implemented the Operator Class files and also included tests and onnx models for the same. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16726
https://github.com/root-project/root/pull/16726:219,Testability,test,tested,219,# This Pull request:; This Pull request adds the support for Clip operator in SOFIE. ## Changes or fixes:; Implemented the Operator Class files and also included tests and onnx models for the same. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16726
https://github.com/root-project/root/issues/16730:888,Availability,ERROR,ERROR,888,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Strange issue with Cling and TTree:Scan(), please see table in Reproducer. ### Reproducer. file `scan.C`; ```C++; #include ""TTree.h""; #include ""TRandom.h"". TTree *t = nullptr;. void scan() {; const Int_t kMax = 10;; Int_t n;; Float_t a[kMax];. t = new TTree(""t"", ""tree""); // in memory; t->Branch(""n"", &n, ""n/I"");; t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {; n = gRandom->Rndm()*(kMax-1);; for (Int_t j = 0; j < n; j++); a[j] = gRandom->Gaus(0, 1);; t->Fill();; }; // t->Scan(""a[0]"");; }; ```. <table>. <tr>; <td> Fedora 40, root master (2024-10-22)</td> <td> lxplus.cern.ch (RHEL 9.4), root v6.32.06 </td>; </tr>. <tr>; <td>. ```C++; $ root scan.C; root [0]; Processing scan.C...; root [1] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * 1.255e-41 *; ERROR leaf:a, len=22 and max=8; * 1 * 1.3911939 *; ERROR leaf:a, len=22 and max=8; * 2 * 1.1125664 *; ERROR leaf:a, len=22 and max=8; * 3 * 2.0609021 *; ERROR leaf:a, len=22 and max=8; * 4 * -0.182436 *; ************************; (long long) 5; root [2] t->Draw(""a[0]""); root [3] // draws correct all 5 values; ```. </td>; <td>. ```C++; $ root scan.C; root [0]; Processing scan.C...; root [1] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * -0.434764 *; * 1 * 1.3911939 *; * 2 * 1.1125664 *; * 3 * 2.0609021 *; * 4 * -0.182436 *; ************************; (long long) 5; root [2]. ```. </td>; </tr>. <tr>; <td>. ```C++; $ root; root [0] .L scan.C; root [1] scan(); root [2] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * -0.434764 *; * 1 * 1.3911939 *; * 2 * 1.1125664 *; * 3 * 2.0609021 *; * 4 * -0.182436 *; ************************. *** Break *** segmentation violation; ```. </td>; <td>. ```C++; $ root; root [0] .L scan.C; root [1] scan(); root [2] t->Scan(""a[0]""); ************************; * Row * a[0] *; *************",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:939,Availability,ERROR,ERROR,939,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Strange issue with Cling and TTree:Scan(), please see table in Reproducer. ### Reproducer. file `scan.C`; ```C++; #include ""TTree.h""; #include ""TRandom.h"". TTree *t = nullptr;. void scan() {; const Int_t kMax = 10;; Int_t n;; Float_t a[kMax];. t = new TTree(""t"", ""tree""); // in memory; t->Branch(""n"", &n, ""n/I"");; t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {; n = gRandom->Rndm()*(kMax-1);; for (Int_t j = 0; j < n; j++); a[j] = gRandom->Gaus(0, 1);; t->Fill();; }; // t->Scan(""a[0]"");; }; ```. <table>. <tr>; <td> Fedora 40, root master (2024-10-22)</td> <td> lxplus.cern.ch (RHEL 9.4), root v6.32.06 </td>; </tr>. <tr>; <td>. ```C++; $ root scan.C; root [0]; Processing scan.C...; root [1] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * 1.255e-41 *; ERROR leaf:a, len=22 and max=8; * 1 * 1.3911939 *; ERROR leaf:a, len=22 and max=8; * 2 * 1.1125664 *; ERROR leaf:a, len=22 and max=8; * 3 * 2.0609021 *; ERROR leaf:a, len=22 and max=8; * 4 * -0.182436 *; ************************; (long long) 5; root [2] t->Draw(""a[0]""); root [3] // draws correct all 5 values; ```. </td>; <td>. ```C++; $ root scan.C; root [0]; Processing scan.C...; root [1] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * -0.434764 *; * 1 * 1.3911939 *; * 2 * 1.1125664 *; * 3 * 2.0609021 *; * 4 * -0.182436 *; ************************; (long long) 5; root [2]. ```. </td>; </tr>. <tr>; <td>. ```C++; $ root; root [0] .L scan.C; root [1] scan(); root [2] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * -0.434764 *; * 1 * 1.3911939 *; * 2 * 1.1125664 *; * 3 * 2.0609021 *; * 4 * -0.182436 *; ************************. *** Break *** segmentation violation; ```. </td>; <td>. ```C++; $ root; root [0] .L scan.C; root [1] scan(); root [2] t->Scan(""a[0]""); ************************; * Row * a[0] *; *************",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:990,Availability,ERROR,ERROR,990,"Check duplicate issues. - [ ] Checked for duplicates. ### Description. Strange issue with Cling and TTree:Scan(), please see table in Reproducer. ### Reproducer. file `scan.C`; ```C++; #include ""TTree.h""; #include ""TRandom.h"". TTree *t = nullptr;. void scan() {; const Int_t kMax = 10;; Int_t n;; Float_t a[kMax];. t = new TTree(""t"", ""tree""); // in memory; t->Branch(""n"", &n, ""n/I"");; t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {; n = gRandom->Rndm()*(kMax-1);; for (Int_t j = 0; j < n; j++); a[j] = gRandom->Gaus(0, 1);; t->Fill();; }; // t->Scan(""a[0]"");; }; ```. <table>. <tr>; <td> Fedora 40, root master (2024-10-22)</td> <td> lxplus.cern.ch (RHEL 9.4), root v6.32.06 </td>; </tr>. <tr>; <td>. ```C++; $ root scan.C; root [0]; Processing scan.C...; root [1] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * 1.255e-41 *; ERROR leaf:a, len=22 and max=8; * 1 * 1.3911939 *; ERROR leaf:a, len=22 and max=8; * 2 * 1.1125664 *; ERROR leaf:a, len=22 and max=8; * 3 * 2.0609021 *; ERROR leaf:a, len=22 and max=8; * 4 * -0.182436 *; ************************; (long long) 5; root [2] t->Draw(""a[0]""); root [3] // draws correct all 5 values; ```. </td>; <td>. ```C++; $ root scan.C; root [0]; Processing scan.C...; root [1] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * -0.434764 *; * 1 * 1.3911939 *; * 2 * 1.1125664 *; * 3 * 2.0609021 *; * 4 * -0.182436 *; ************************; (long long) 5; root [2]. ```. </td>; </tr>. <tr>; <td>. ```C++; $ root; root [0] .L scan.C; root [1] scan(); root [2] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * -0.434764 *; * 1 * 1.3911939 *; * 2 * 1.1125664 *; * 3 * 2.0609021 *; * 4 * -0.182436 *; ************************. *** Break *** segmentation violation; ```. </td>; <td>. ```C++; $ root; root [0] .L scan.C; root [1] scan(); root [2] t->Scan(""a[0]""); ************************; * Row * a[0] *; *****************",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:1041,Availability,ERROR,ERROR,1041,". ### Description. Strange issue with Cling and TTree:Scan(), please see table in Reproducer. ### Reproducer. file `scan.C`; ```C++; #include ""TTree.h""; #include ""TRandom.h"". TTree *t = nullptr;. void scan() {; const Int_t kMax = 10;; Int_t n;; Float_t a[kMax];. t = new TTree(""t"", ""tree""); // in memory; t->Branch(""n"", &n, ""n/I"");; t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {; n = gRandom->Rndm()*(kMax-1);; for (Int_t j = 0; j < n; j++); a[j] = gRandom->Gaus(0, 1);; t->Fill();; }; // t->Scan(""a[0]"");; }; ```. <table>. <tr>; <td> Fedora 40, root master (2024-10-22)</td> <td> lxplus.cern.ch (RHEL 9.4), root v6.32.06 </td>; </tr>. <tr>; <td>. ```C++; $ root scan.C; root [0]; Processing scan.C...; root [1] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * 1.255e-41 *; ERROR leaf:a, len=22 and max=8; * 1 * 1.3911939 *; ERROR leaf:a, len=22 and max=8; * 2 * 1.1125664 *; ERROR leaf:a, len=22 and max=8; * 3 * 2.0609021 *; ERROR leaf:a, len=22 and max=8; * 4 * -0.182436 *; ************************; (long long) 5; root [2] t->Draw(""a[0]""); root [3] // draws correct all 5 values; ```. </td>; <td>. ```C++; $ root scan.C; root [0]; Processing scan.C...; root [1] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * -0.434764 *; * 1 * 1.3911939 *; * 2 * 1.1125664 *; * 3 * 2.0609021 *; * 4 * -0.182436 *; ************************; (long long) 5; root [2]. ```. </td>; </tr>. <tr>; <td>. ```C++; $ root; root [0] .L scan.C; root [1] scan(); root [2] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * -0.434764 *; * 1 * 1.3911939 *; * 2 * 1.1125664 *; * 3 * 2.0609021 *; * 4 * -0.182436 *; ************************. *** Break *** segmentation violation; ```. </td>; <td>. ```C++; $ root; root [0] .L scan.C; root [1] scan(); root [2] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * -0.434764 *; * 1 * 1.3911939 *; * 2 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/issues/16730:2238,Deployability,Install,Installation,2238,"); // in memory; t->Branch(""n"", &n, ""n/I"");; t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {; n = gRandom->Rndm()*(kMax-1);; for (Int_t j = 0; j < n; j++); a[j] = gRandom->Gaus(0, 1);; t->Fill();; }; // t->Scan(""a[0]"");; }; ```. <table>. <tr>; <td> Fedora 40, root master (2024-10-22)</td> <td> lxplus.cern.ch (RHEL 9.4), root v6.32.06 </td>; </tr>. <tr>; <td>. ```C++; $ root scan.C; root [0]; Processing scan.C...; root [1] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * 1.255e-41 *; ERROR leaf:a, len=22 and max=8; * 1 * 1.3911939 *; ERROR leaf:a, len=22 and max=8; * 2 * 1.1125664 *; ERROR leaf:a, len=22 and max=8; * 3 * 2.0609021 *; ERROR leaf:a, len=22 and max=8; * 4 * -0.182436 *; ************************; (long long) 5; root [2] t->Draw(""a[0]""); root [3] // draws correct all 5 values; ```. </td>; <td>. ```C++; $ root scan.C; root [0]; Processing scan.C...; root [1] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * -0.434764 *; * 1 * 1.3911939 *; * 2 * 1.1125664 *; * 3 * 2.0609021 *; * 4 * -0.182436 *; ************************; (long long) 5; root [2]. ```. </td>; </tr>. <tr>; <td>. ```C++; $ root; root [0] .L scan.C; root [1] scan(); root [2] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * -0.434764 *; * 1 * 1.3911939 *; * 2 * 1.1125664 *; * 3 * 2.0609021 *; * 4 * -0.182436 *; ************************. *** Break *** segmentation violation; ```. </td>; <td>. ```C++; $ root; root [0] .L scan.C; root [1] scan(); root [2] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * -0.434764 *; * 1 * 1.3911939 *; * 2 * 1.1125664 *; * 3 * 2.0609021 *; * 4 * -0.182436 *; ************************. *** Break *** segmentation violation; ```. </td>; </tr>. </table>. ### ROOT version. see in table. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16730
https://github.com/root-project/root/pull/16731:13,Availability,failure,failures,13,Should solve failures on fedora40 in #16729,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16731
https://github.com/root-project/root/issues/16733:189,Availability,error,error,189,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. With newer versions of cmake like 3.30.5 at least some of ExternalProject_Add'ed builtins fail to compile with an error like; ```; gmake[6]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[6]: *** Waiting for unfinished jobs....; gmake[5]: *** [CMakeFiles/Makefile2:97: CMakeFiles/pcre.dir/all] Error 2; gmake[4]: *** [CMakeFiles/Makefile2:104: CMakeFiles/pcre.dir/rule] Error 2; gmake[3]: *** [Makefile:179: pcre] Error 2; ```; (here builtin PCRE failed). I don't know with which version of cmake this starts failing, but we (SPI/LCG) moved from 3.26.2 to 3.30.; Unless one limits oneself to a small number of `--jobs`?. ### Reproducer. On lxplus or equivalent machines with CVMFS for example. ```; export PATH=/cvmfs/sft.cern.ch/lcg/contrib/CMake/3.30.5/Linux-x86_64/bin/:$PATH; git clone https://github.com/root-project/root.git; cd root; mkdir build; cd build; cmake -D builtin_pcre=ON ..; make -j8; ```. ### ROOT version. any? (definitely HEAD). ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:376,Availability,Error,Error,376,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. With newer versions of cmake like 3.30.5 at least some of ExternalProject_Add'ed builtins fail to compile with an error like; ```; gmake[6]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[6]: *** Waiting for unfinished jobs....; gmake[5]: *** [CMakeFiles/Makefile2:97: CMakeFiles/pcre.dir/all] Error 2; gmake[4]: *** [CMakeFiles/Makefile2:104: CMakeFiles/pcre.dir/rule] Error 2; gmake[3]: *** [Makefile:179: pcre] Error 2; ```; (here builtin PCRE failed). I don't know with which version of cmake this starts failing, but we (SPI/LCG) moved from 3.26.2 to 3.30.; Unless one limits oneself to a small number of `--jobs`?. ### Reproducer. On lxplus or equivalent machines with CVMFS for example. ```; export PATH=/cvmfs/sft.cern.ch/lcg/contrib/CMake/3.30.5/Linux-x86_64/bin/:$PATH; git clone https://github.com/root-project/root.git; cd root; mkdir build; cd build; cmake -D builtin_pcre=ON ..; make -j8; ```. ### ROOT version. any? (definitely HEAD). ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:452,Availability,Error,Error,452,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. With newer versions of cmake like 3.30.5 at least some of ExternalProject_Add'ed builtins fail to compile with an error like; ```; gmake[6]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[6]: *** Waiting for unfinished jobs....; gmake[5]: *** [CMakeFiles/Makefile2:97: CMakeFiles/pcre.dir/all] Error 2; gmake[4]: *** [CMakeFiles/Makefile2:104: CMakeFiles/pcre.dir/rule] Error 2; gmake[3]: *** [Makefile:179: pcre] Error 2; ```; (here builtin PCRE failed). I don't know with which version of cmake this starts failing, but we (SPI/LCG) moved from 3.26.2 to 3.30.; Unless one limits oneself to a small number of `--jobs`?. ### Reproducer. On lxplus or equivalent machines with CVMFS for example. ```; export PATH=/cvmfs/sft.cern.ch/lcg/contrib/CMake/3.30.5/Linux-x86_64/bin/:$PATH; git clone https://github.com/root-project/root.git; cd root; mkdir build; cd build; cmake -D builtin_pcre=ON ..; make -j8; ```. ### ROOT version. any? (definitely HEAD). ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:496,Availability,Error,Error,496,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. With newer versions of cmake like 3.30.5 at least some of ExternalProject_Add'ed builtins fail to compile with an error like; ```; gmake[6]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[6]: *** Waiting for unfinished jobs....; gmake[5]: *** [CMakeFiles/Makefile2:97: CMakeFiles/pcre.dir/all] Error 2; gmake[4]: *** [CMakeFiles/Makefile2:104: CMakeFiles/pcre.dir/rule] Error 2; gmake[3]: *** [Makefile:179: pcre] Error 2; ```; (here builtin PCRE failed). I don't know with which version of cmake this starts failing, but we (SPI/LCG) moved from 3.26.2 to 3.30.; Unless one limits oneself to a small number of `--jobs`?. ### Reproducer. On lxplus or equivalent machines with CVMFS for example. ```; export PATH=/cvmfs/sft.cern.ch/lcg/contrib/CMake/3.30.5/Linux-x86_64/bin/:$PATH; git clone https://github.com/root-project/root.git; cd root; mkdir build; cd build; cmake -D builtin_pcre=ON ..; make -j8; ```. ### ROOT version. any? (definitely HEAD). ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16733:1036,Deployability,Install,Installation,1036,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. With newer versions of cmake like 3.30.5 at least some of ExternalProject_Add'ed builtins fail to compile with an error like; ```; gmake[6]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[6]: *** Waiting for unfinished jobs....; gmake[5]: *** [CMakeFiles/Makefile2:97: CMakeFiles/pcre.dir/all] Error 2; gmake[4]: *** [CMakeFiles/Makefile2:104: CMakeFiles/pcre.dir/rule] Error 2; gmake[3]: *** [Makefile:179: pcre] Error 2; ```; (here builtin PCRE failed). I don't know with which version of cmake this starts failing, but we (SPI/LCG) moved from 3.26.2 to 3.30.; Unless one limits oneself to a small number of `--jobs`?. ### Reproducer. On lxplus or equivalent machines with CVMFS for example. ```; export PATH=/cvmfs/sft.cern.ch/lcg/contrib/CMake/3.30.5/Linux-x86_64/bin/:$PATH; git clone https://github.com/root-project/root.git; cd root; mkdir build; cd build; cmake -D builtin_pcre=ON ..; make -j8; ```. ### ROOT version. any? (definitely HEAD). ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16733
https://github.com/root-project/root/issues/16736:1225,Deployability,Install,Installation,1225,"### Explain what you would like to see improved and how. Currently there is:; ```cpp; TH1::GetQuantiles(int nprobSum, double* q, const double* probSum);; ```; where `q` is the quantile, while `probSum` is the probability associated with the given quantile. In the description, however, we have:; ```; F(x_q) = q with 0 <= q <= 1.; ```; where `x_q` is the quantile (i.e. argument `q` of `GetQuantiles`), while `q` is the probability (i.e. argument `probSum`). I propose to change the argument names to `int n`, `double* xq` and `const double* q` to avoid confusion and be in agreement with both the description in ROOT and e.g. Wikipedia. Next, in the description we have; ```; [in] probSum - array of positions where quantiles will be computed.; ```; but this is confusing and, I think, wrong. It should rather be ""array of probabilities associated with calculated quantiles"". If the argument names were changed as I propose, then this text would not even be necessary, because the thing would be obvious from the equation above. The only thing about the arguments needing description would be `n` and the behaviour in case of `q == nullptr` (note that I mean the new `q`, not the current one). ### ROOT version. master. ### Installation method. irrelevant. ### Operating system. irrelevant. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16736
https://github.com/root-project/root/issues/16736:548,Safety,avoid,avoid,548,"### Explain what you would like to see improved and how. Currently there is:; ```cpp; TH1::GetQuantiles(int nprobSum, double* q, const double* probSum);; ```; where `q` is the quantile, while `probSum` is the probability associated with the given quantile. In the description, however, we have:; ```; F(x_q) = q with 0 <= q <= 1.; ```; where `x_q` is the quantile (i.e. argument `q` of `GetQuantiles`), while `q` is the probability (i.e. argument `probSum`). I propose to change the argument names to `int n`, `double* xq` and `const double* q` to avoid confusion and be in agreement with both the description in ROOT and e.g. Wikipedia. Next, in the description we have; ```; [in] probSum - array of positions where quantiles will be computed.; ```; but this is confusing and, I think, wrong. It should rather be ""array of probabilities associated with calculated quantiles"". If the argument names were changed as I propose, then this text would not even be necessary, because the thing would be obvious from the equation above. The only thing about the arguments needing description would be `n` and the behaviour in case of `q == nullptr` (note that I mean the new `q`, not the current one). ### ROOT version. master. ### Installation method. irrelevant. ### Operating system. irrelevant. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16736
https://github.com/root-project/root/pull/16737:0,Energy Efficiency,Allocate,Allocate,0,"Allocate unique pointer pointees with `new`, so that it matches the default deleter. This appears actually already in our unit tests when ran under valgrind. In general, it would be useful to regularly run the unit tests under valgrind. @Dr15Jones FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16737
https://github.com/root-project/root/pull/16737:127,Testability,test,tests,127,"Allocate unique pointer pointees with `new`, so that it matches the default deleter. This appears actually already in our unit tests when ran under valgrind. In general, it would be useful to regularly run the unit tests under valgrind. @Dr15Jones FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16737
https://github.com/root-project/root/pull/16737:215,Testability,test,tests,215,"Allocate unique pointer pointees with `new`, so that it matches the default deleter. This appears actually already in our unit tests when ran under valgrind. In general, it would be useful to regularly run the unit tests under valgrind. @Dr15Jones FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16737
https://github.com/root-project/root/issues/16740:238,Availability,error,error,238,"### Feature description. As discussed in CHEP24 for CMS FlashSim samples produced with; oversampling a dedicated histo filling scheme is needed where events; are first accumulated on same-gen subevents then used to fill a TH; with proper error handling.; In order to achieve this in a (memory) efficient way the following; features would be needed:; - know the number of threads actively used and/or which threads will; not be used at all or any longer in the processing; - define a global_rdfentry_ that is a progressive number on the inputdataset; - know what global_rdfentry_ a given thread is processing. An additional useful feature, for handling oversampled events is the; option to have output events in Snapshots sorted according to the; global_rdfentry_ (i.e. maintaining the input order). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16740
https://github.com/root-project/root/issues/16740:294,Energy Efficiency,efficient,efficient,294,"### Feature description. As discussed in CHEP24 for CMS FlashSim samples produced with; oversampling a dedicated histo filling scheme is needed where events; are first accumulated on same-gen subevents then used to fill a TH; with proper error handling.; In order to achieve this in a (memory) efficient way the following; features would be needed:; - know the number of threads actively used and/or which threads will; not be used at all or any longer in the processing; - define a global_rdfentry_ that is a progressive number on the inputdataset; - know what global_rdfentry_ a given thread is processing. An additional useful feature, for handling oversampled events is the; option to have output events in Snapshots sorted according to the; global_rdfentry_ (i.e. maintaining the input order). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16740
https://github.com/root-project/root/issues/16741:176,Availability,avail,available,176,"### Feature description. As discussed in CHEP24, it would be useful to support Caching (e.g.; RDF.Cache) of a limited number of variables with the other variables; being still available in a lazy way. Example usage; ```; #suppose rdf has columns Jet_pt, Jet_eta; rdf=rdf.Define(""Jet_regressedPt"", ""slowRegression(Jet_pt)""); rdf=rdf.Cache([""Jet_regressedPt""]); rdf=rdf.Define(""Jet_discriminator"",""computeDiscriminator(Jet_regressedPt,; Jet_eta""); rdf=rdf.TH1F(""Jet_discriminator""); ```. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16741
https://github.com/root-project/root/issues/16741:128,Modifiability,variab,variables,128,"### Feature description. As discussed in CHEP24, it would be useful to support Caching (e.g.; RDF.Cache) of a limited number of variables with the other variables; being still available in a lazy way. Example usage; ```; #suppose rdf has columns Jet_pt, Jet_eta; rdf=rdf.Define(""Jet_regressedPt"", ""slowRegression(Jet_pt)""); rdf=rdf.Cache([""Jet_regressedPt""]); rdf=rdf.Define(""Jet_discriminator"",""computeDiscriminator(Jet_regressedPt,; Jet_eta""); rdf=rdf.TH1F(""Jet_discriminator""); ```. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16741
https://github.com/root-project/root/issues/16741:153,Modifiability,variab,variables,153,"### Feature description. As discussed in CHEP24, it would be useful to support Caching (e.g.; RDF.Cache) of a limited number of variables with the other variables; being still available in a lazy way. Example usage; ```; #suppose rdf has columns Jet_pt, Jet_eta; rdf=rdf.Define(""Jet_regressedPt"", ""slowRegression(Jet_pt)""); rdf=rdf.Cache([""Jet_regressedPt""]); rdf=rdf.Define(""Jet_discriminator"",""computeDiscriminator(Jet_regressedPt,; Jet_eta""); rdf=rdf.TH1F(""Jet_discriminator""); ```. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16741
https://github.com/root-project/root/issues/16741:98,Performance,Cache,Cache,98,"### Feature description. As discussed in CHEP24, it would be useful to support Caching (e.g.; RDF.Cache) of a limited number of variables with the other variables; being still available in a lazy way. Example usage; ```; #suppose rdf has columns Jet_pt, Jet_eta; rdf=rdf.Define(""Jet_regressedPt"", ""slowRegression(Jet_pt)""); rdf=rdf.Cache([""Jet_regressedPt""]); rdf=rdf.Define(""Jet_discriminator"",""computeDiscriminator(Jet_regressedPt,; Jet_eta""); rdf=rdf.TH1F(""Jet_discriminator""); ```. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16741
https://github.com/root-project/root/issues/16741:332,Performance,Cache,Cache,332,"### Feature description. As discussed in CHEP24, it would be useful to support Caching (e.g.; RDF.Cache) of a limited number of variables with the other variables; being still available in a lazy way. Example usage; ```; #suppose rdf has columns Jet_pt, Jet_eta; rdf=rdf.Define(""Jet_regressedPt"", ""slowRegression(Jet_pt)""); rdf=rdf.Cache([""Jet_regressedPt""]); rdf=rdf.Define(""Jet_discriminator"",""computeDiscriminator(Jet_regressedPt,; Jet_eta""); rdf=rdf.TH1F(""Jet_discriminator""); ```. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16741
https://github.com/root-project/root/pull/16743:39,Testability,test,tests,39,Some packages that we use in some unit tests and tutorials don't support Python 3.13 yet. They should be listed conditionally on the Python version to make the environment resolve. This is required for building the Fedora 41 CI images. Tested with Python 3.13 on Arch Linux.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16743
https://github.com/root-project/root/pull/16743:236,Testability,Test,Tested,236,Some packages that we use in some unit tests and tutorials don't support Python 3.13 yet. They should be listed conditionally on the Python version to make the environment resolve. This is required for building the Fedora 41 CI images. Tested with Python 3.13 on Arch Linux.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16743
https://github.com/root-project/root/pull/16744:144,Modifiability,variab,variable,144,This should partially solve the issue with the rebuild (linking) of ROOT when building the tests; See also: https://cmake.org/cmake/help/latest/variable/CMAKE_SKIP_TEST_ALL_DEPENDENCY.html; Requires CMake v3.29,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16744
https://github.com/root-project/root/pull/16744:91,Testability,test,tests,91,This should partially solve the issue with the rebuild (linking) of ROOT when building the tests; See also: https://cmake.org/cmake/help/latest/variable/CMAKE_SKIP_TEST_ALL_DEPENDENCY.html; Requires CMake v3.29,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16744
https://github.com/root-project/root/pull/16745:151,Deployability,update,updated,151,# This Pull request:. document the default values in `RNTupleWriteOptions` next to the `Limits` section for reader's convenience. ## Checklist:. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16745
https://github.com/root-project/root/pull/16747:159,Integrability,interface,interface,159,"This is to avoid any num-diff fallback in RooFit, which results in annoying warnings for the user. A new function `ROOT::Math::digamma` is added to the public interface, which wraps `gsl_sf_psi`. The digamma function is the derivative of `lgamma`, so it is used in `CladDerivator.h` to define the derivatives of `TMath::LnGamma` and the related gamma functions that are used to define Poisson cdfs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16747
https://github.com/root-project/root/pull/16747:176,Integrability,wrap,wraps,176,"This is to avoid any num-diff fallback in RooFit, which results in annoying warnings for the user. A new function `ROOT::Math::digamma` is added to the public interface, which wraps `gsl_sf_psi`. The digamma function is the derivative of `lgamma`, so it is used in `CladDerivator.h` to define the derivatives of `TMath::LnGamma` and the related gamma functions that are used to define Poisson cdfs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16747
https://github.com/root-project/root/pull/16747:11,Safety,avoid,avoid,11,"This is to avoid any num-diff fallback in RooFit, which results in annoying warnings for the user. A new function `ROOT::Math::digamma` is added to the public interface, which wraps `gsl_sf_psi`. The digamma function is the derivative of `lgamma`, so it is used in `CladDerivator.h` to define the derivatives of `TMath::LnGamma` and the related gamma functions that are used to define Poisson cdfs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16747
https://github.com/root-project/root/pull/16749:23,Deployability,configurat,configuration,23,"We don't use it in our configuration of civetweb, and it will be removed in upcoming versions of Fedora and RHEL:. https://github.com/dotnet/runtime/issues/104775#issuecomment-2229857943. This change is tested by all CI platforms, because globally we set `http=ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16749
https://github.com/root-project/root/pull/16749:23,Modifiability,config,configuration,23,"We don't use it in our configuration of civetweb, and it will be removed in upcoming versions of Fedora and RHEL:. https://github.com/dotnet/runtime/issues/104775#issuecomment-2229857943. This change is tested by all CI platforms, because globally we set `http=ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16749
https://github.com/root-project/root/pull/16749:203,Testability,test,tested,203,"We don't use it in our configuration of civetweb, and it will be removed in upcoming versions of Fedora and RHEL:. https://github.com/dotnet/runtime/issues/104775#issuecomment-2229857943. This change is tested by all CI platforms, because globally we set `http=ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16749
https://github.com/root-project/root/pull/16750:1150,Availability,robust,robust,1150,"For our users, it's important to fix certain parameters in the likelihood easily with any overhead. So far, this didn't work when using gradients from AD, because the gradients were only produced for the parameters that are floating at the time where the likelihood is created. However, it has no additional runtime overhead in backwards AD mode to simply generate the gradient for **all** parameters, and then filter out the right elements in the the RooMinimizer-related code. This is what is implemented in the second commit of this PR. Some changes in the RooAbsMinimizerFcn were necessary to do this filtering: so far it didn't store any information on all the parameters in order. It only stored two separate lists for floating and constant parameters. The first commit in this PR adds the necessary data members (`_allParams` and `_allParamsInit`) to the RooAbsMinimizerFcn for the filtering of parameters. Furthermore, the previous datamembers that stored the parameters separately are removed to avoid duplication and possible desync of information. On this occasion, the parameter management was completely rewritten to be more concise and robust. This will also help later when we integrate the discrete profiling from CMS combine, where changing the state and filtering of minimization parameters is also relevant. It was validated with the ATLAS and CMS likelihoods from ICHEP 2024 that this PR results in no performance regression, even though we are now generating the gradient for more parameters (roughly up to two times more, because for every floating nuisance parameter there is usually one constant global observable that constrains it).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16750
https://github.com/root-project/root/pull/16750:1192,Deployability,integrat,integrate,1192,"For our users, it's important to fix certain parameters in the likelihood easily with any overhead. So far, this didn't work when using gradients from AD, because the gradients were only produced for the parameters that are floating at the time where the likelihood is created. However, it has no additional runtime overhead in backwards AD mode to simply generate the gradient for **all** parameters, and then filter out the right elements in the the RooMinimizer-related code. This is what is implemented in the second commit of this PR. Some changes in the RooAbsMinimizerFcn were necessary to do this filtering: so far it didn't store any information on all the parameters in order. It only stored two separate lists for floating and constant parameters. The first commit in this PR adds the necessary data members (`_allParams` and `_allParamsInit`) to the RooAbsMinimizerFcn for the filtering of parameters. Furthermore, the previous datamembers that stored the parameters separately are removed to avoid duplication and possible desync of information. On this occasion, the parameter management was completely rewritten to be more concise and robust. This will also help later when we integrate the discrete profiling from CMS combine, where changing the state and filtering of minimization parameters is also relevant. It was validated with the ATLAS and CMS likelihoods from ICHEP 2024 that this PR results in no performance regression, even though we are now generating the gradient for more parameters (roughly up to two times more, because for every floating nuisance parameter there is usually one constant global observable that constrains it).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16750
https://github.com/root-project/root/pull/16750:1192,Integrability,integrat,integrate,1192,"For our users, it's important to fix certain parameters in the likelihood easily with any overhead. So far, this didn't work when using gradients from AD, because the gradients were only produced for the parameters that are floating at the time where the likelihood is created. However, it has no additional runtime overhead in backwards AD mode to simply generate the gradient for **all** parameters, and then filter out the right elements in the the RooMinimizer-related code. This is what is implemented in the second commit of this PR. Some changes in the RooAbsMinimizerFcn were necessary to do this filtering: so far it didn't store any information on all the parameters in order. It only stored two separate lists for floating and constant parameters. The first commit in this PR adds the necessary data members (`_allParams` and `_allParamsInit`) to the RooAbsMinimizerFcn for the filtering of parameters. Furthermore, the previous datamembers that stored the parameters separately are removed to avoid duplication and possible desync of information. On this occasion, the parameter management was completely rewritten to be more concise and robust. This will also help later when we integrate the discrete profiling from CMS combine, where changing the state and filtering of minimization parameters is also relevant. It was validated with the ATLAS and CMS likelihoods from ICHEP 2024 that this PR results in no performance regression, even though we are now generating the gradient for more parameters (roughly up to two times more, because for every floating nuisance parameter there is usually one constant global observable that constrains it).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16750
